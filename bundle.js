/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./node_modules/asn1.js/lib/asn1.js":
/*!******************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var asn1 = exports;

asn1.bignum = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");

asn1.define = __webpack_require__(/*! ./asn1/api */ "./node_modules/asn1.js/lib/asn1/api.js").define;
asn1.base = __webpack_require__(/*! ./asn1/base */ "./node_modules/asn1.js/lib/asn1/base/index.js");
asn1.constants = __webpack_require__(/*! ./asn1/constants */ "./node_modules/asn1.js/lib/asn1/constants/index.js");
asn1.decoders = __webpack_require__(/*! ./asn1/decoders */ "./node_modules/asn1.js/lib/asn1/decoders/index.js");
asn1.encoders = __webpack_require__(/*! ./asn1/encoders */ "./node_modules/asn1.js/lib/asn1/encoders/index.js");


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/api.js":
/*!**********************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/api.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var asn1 = __webpack_require__(/*! ../asn1 */ "./node_modules/asn1.js/lib/asn1.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

var api = exports;

api.define = function define(name, body) {
  return new Entity(name, body);
};

function Entity(name, body) {
  this.name = name;
  this.body = body;

  this.decoders = {};
  this.encoders = {};
};

Entity.prototype._createNamed = function createNamed(base) {
  var named;
  try {
    named = __webpack_require__(/*! vm */ "./node_modules/vm-browserify/index.js").runInThisContext(
      '(function ' + this.name + '(entity) {\n' +
      '  this._initNamed(entity);\n' +
      '})'
    );
  } catch (e) {
    named = function (entity) {
      this._initNamed(entity);
    };
  }
  inherits(named, base);
  named.prototype._initNamed = function initnamed(entity) {
    base.call(this, entity);
  };

  return new named(this);
};

Entity.prototype._getDecoder = function _getDecoder(enc) {
  enc = enc || 'der';
  // Lazily create decoder
  if (!this.decoders.hasOwnProperty(enc))
    this.decoders[enc] = this._createNamed(asn1.decoders[enc]);
  return this.decoders[enc];
};

Entity.prototype.decode = function decode(data, enc, options) {
  return this._getDecoder(enc).decode(data, options);
};

Entity.prototype._getEncoder = function _getEncoder(enc) {
  enc = enc || 'der';
  // Lazily create encoder
  if (!this.encoders.hasOwnProperty(enc))
    this.encoders[enc] = this._createNamed(asn1.encoders[enc]);
  return this.encoders[enc];
};

Entity.prototype.encode = function encode(data, enc, /* internal */ reporter) {
  return this._getEncoder(enc).encode(data, reporter);
};


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/base/buffer.js":
/*!******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/base/buffer.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
var Reporter = __webpack_require__(/*! ../base */ "./node_modules/asn1.js/lib/asn1/base/index.js").Reporter;
var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js").Buffer;

function DecoderBuffer(base, options) {
  Reporter.call(this, options);
  if (!Buffer.isBuffer(base)) {
    this.error('Input not Buffer');
    return;
  }

  this.base = base;
  this.offset = 0;
  this.length = base.length;
}
inherits(DecoderBuffer, Reporter);
exports.DecoderBuffer = DecoderBuffer;

DecoderBuffer.prototype.save = function save() {
  return { offset: this.offset, reporter: Reporter.prototype.save.call(this) };
};

DecoderBuffer.prototype.restore = function restore(save) {
  // Return skipped data
  var res = new DecoderBuffer(this.base);
  res.offset = save.offset;
  res.length = this.offset;

  this.offset = save.offset;
  Reporter.prototype.restore.call(this, save.reporter);

  return res;
};

DecoderBuffer.prototype.isEmpty = function isEmpty() {
  return this.offset === this.length;
};

DecoderBuffer.prototype.readUInt8 = function readUInt8(fail) {
  if (this.offset + 1 <= this.length)
    return this.base.readUInt8(this.offset++, true);
  else
    return this.error(fail || 'DecoderBuffer overrun');
}

DecoderBuffer.prototype.skip = function skip(bytes, fail) {
  if (!(this.offset + bytes <= this.length))
    return this.error(fail || 'DecoderBuffer overrun');

  var res = new DecoderBuffer(this.base);

  // Share reporter state
  res._reporterState = this._reporterState;

  res.offset = this.offset;
  res.length = this.offset + bytes;
  this.offset += bytes;
  return res;
}

DecoderBuffer.prototype.raw = function raw(save) {
  return this.base.slice(save ? save.offset : this.offset, this.length);
}

function EncoderBuffer(value, reporter) {
  if (Array.isArray(value)) {
    this.length = 0;
    this.value = value.map(function(item) {
      if (!(item instanceof EncoderBuffer))
        item = new EncoderBuffer(item, reporter);
      this.length += item.length;
      return item;
    }, this);
  } else if (typeof value === 'number') {
    if (!(0 <= value && value <= 0xff))
      return reporter.error('non-byte EncoderBuffer value');
    this.value = value;
    this.length = 1;
  } else if (typeof value === 'string') {
    this.value = value;
    this.length = Buffer.byteLength(value);
  } else if (Buffer.isBuffer(value)) {
    this.value = value;
    this.length = value.length;
  } else {
    return reporter.error('Unsupported type: ' + typeof value);
  }
}
exports.EncoderBuffer = EncoderBuffer;

EncoderBuffer.prototype.join = function join(out, offset) {
  if (!out)
    out = new Buffer(this.length);
  if (!offset)
    offset = 0;

  if (this.length === 0)
    return out;

  if (Array.isArray(this.value)) {
    this.value.forEach(function(item) {
      item.join(out, offset);
      offset += item.length;
    });
  } else {
    if (typeof this.value === 'number')
      out[offset] = this.value;
    else if (typeof this.value === 'string')
      out.write(this.value, offset);
    else if (Buffer.isBuffer(this.value))
      this.value.copy(out, offset);
    offset += this.length;
  }

  return out;
};


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/base/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/base/index.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var base = exports;

base.Reporter = __webpack_require__(/*! ./reporter */ "./node_modules/asn1.js/lib/asn1/base/reporter.js").Reporter;
base.DecoderBuffer = __webpack_require__(/*! ./buffer */ "./node_modules/asn1.js/lib/asn1/base/buffer.js").DecoderBuffer;
base.EncoderBuffer = __webpack_require__(/*! ./buffer */ "./node_modules/asn1.js/lib/asn1/base/buffer.js").EncoderBuffer;
base.Node = __webpack_require__(/*! ./node */ "./node_modules/asn1.js/lib/asn1/base/node.js");


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/base/node.js":
/*!****************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/base/node.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Reporter = __webpack_require__(/*! ../base */ "./node_modules/asn1.js/lib/asn1/base/index.js").Reporter;
var EncoderBuffer = __webpack_require__(/*! ../base */ "./node_modules/asn1.js/lib/asn1/base/index.js").EncoderBuffer;
var DecoderBuffer = __webpack_require__(/*! ../base */ "./node_modules/asn1.js/lib/asn1/base/index.js").DecoderBuffer;
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

// Supported tags
var tags = [
  'seq', 'seqof', 'set', 'setof', 'objid', 'bool',
  'gentime', 'utctime', 'null_', 'enum', 'int', 'objDesc',
  'bitstr', 'bmpstr', 'charstr', 'genstr', 'graphstr', 'ia5str', 'iso646str',
  'numstr', 'octstr', 'printstr', 't61str', 'unistr', 'utf8str', 'videostr'
];

// Public methods list
var methods = [
  'key', 'obj', 'use', 'optional', 'explicit', 'implicit', 'def', 'choice',
  'any', 'contains'
].concat(tags);

// Overrided methods list
var overrided = [
  '_peekTag', '_decodeTag', '_use',
  '_decodeStr', '_decodeObjid', '_decodeTime',
  '_decodeNull', '_decodeInt', '_decodeBool', '_decodeList',

  '_encodeComposite', '_encodeStr', '_encodeObjid', '_encodeTime',
  '_encodeNull', '_encodeInt', '_encodeBool'
];

function Node(enc, parent) {
  var state = {};
  this._baseState = state;

  state.enc = enc;

  state.parent = parent || null;
  state.children = null;

  // State
  state.tag = null;
  state.args = null;
  state.reverseArgs = null;
  state.choice = null;
  state.optional = false;
  state.any = false;
  state.obj = false;
  state.use = null;
  state.useDecoder = null;
  state.key = null;
  state['default'] = null;
  state.explicit = null;
  state.implicit = null;
  state.contains = null;

  // Should create new instance on each method
  if (!state.parent) {
    state.children = [];
    this._wrap();
  }
}
module.exports = Node;

var stateProps = [
  'enc', 'parent', 'children', 'tag', 'args', 'reverseArgs', 'choice',
  'optional', 'any', 'obj', 'use', 'alteredUse', 'key', 'default', 'explicit',
  'implicit', 'contains'
];

Node.prototype.clone = function clone() {
  var state = this._baseState;
  var cstate = {};
  stateProps.forEach(function(prop) {
    cstate[prop] = state[prop];
  });
  var res = new this.constructor(cstate.parent);
  res._baseState = cstate;
  return res;
};

Node.prototype._wrap = function wrap() {
  var state = this._baseState;
  methods.forEach(function(method) {
    this[method] = function _wrappedMethod() {
      var clone = new this.constructor(this);
      state.children.push(clone);
      return clone[method].apply(clone, arguments);
    };
  }, this);
};

Node.prototype._init = function init(body) {
  var state = this._baseState;

  assert(state.parent === null);
  body.call(this);

  // Filter children
  state.children = state.children.filter(function(child) {
    return child._baseState.parent === this;
  }, this);
  assert.equal(state.children.length, 1, 'Root node can have only one child');
};

Node.prototype._useArgs = function useArgs(args) {
  var state = this._baseState;

  // Filter children and args
  var children = args.filter(function(arg) {
    return arg instanceof this.constructor;
  }, this);
  args = args.filter(function(arg) {
    return !(arg instanceof this.constructor);
  }, this);

  if (children.length !== 0) {
    assert(state.children === null);
    state.children = children;

    // Replace parent to maintain backward link
    children.forEach(function(child) {
      child._baseState.parent = this;
    }, this);
  }
  if (args.length !== 0) {
    assert(state.args === null);
    state.args = args;
    state.reverseArgs = args.map(function(arg) {
      if (typeof arg !== 'object' || arg.constructor !== Object)
        return arg;

      var res = {};
      Object.keys(arg).forEach(function(key) {
        if (key == (key | 0))
          key |= 0;
        var value = arg[key];
        res[value] = key;
      });
      return res;
    });
  }
};

//
// Overrided methods
//

overrided.forEach(function(method) {
  Node.prototype[method] = function _overrided() {
    var state = this._baseState;
    throw new Error(method + ' not implemented for encoding: ' + state.enc);
  };
});

//
// Public methods
//

tags.forEach(function(tag) {
  Node.prototype[tag] = function _tagMethod() {
    var state = this._baseState;
    var args = Array.prototype.slice.call(arguments);

    assert(state.tag === null);
    state.tag = tag;

    this._useArgs(args);

    return this;
  };
});

Node.prototype.use = function use(item) {
  assert(item);
  var state = this._baseState;

  assert(state.use === null);
  state.use = item;

  return this;
};

Node.prototype.optional = function optional() {
  var state = this._baseState;

  state.optional = true;

  return this;
};

Node.prototype.def = function def(val) {
  var state = this._baseState;

  assert(state['default'] === null);
  state['default'] = val;
  state.optional = true;

  return this;
};

Node.prototype.explicit = function explicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.explicit = num;

  return this;
};

Node.prototype.implicit = function implicit(num) {
  var state = this._baseState;

  assert(state.explicit === null && state.implicit === null);
  state.implicit = num;

  return this;
};

Node.prototype.obj = function obj() {
  var state = this._baseState;
  var args = Array.prototype.slice.call(arguments);

  state.obj = true;

  if (args.length !== 0)
    this._useArgs(args);

  return this;
};

Node.prototype.key = function key(newKey) {
  var state = this._baseState;

  assert(state.key === null);
  state.key = newKey;

  return this;
};

Node.prototype.any = function any() {
  var state = this._baseState;

  state.any = true;

  return this;
};

Node.prototype.choice = function choice(obj) {
  var state = this._baseState;

  assert(state.choice === null);
  state.choice = obj;
  this._useArgs(Object.keys(obj).map(function(key) {
    return obj[key];
  }));

  return this;
};

Node.prototype.contains = function contains(item) {
  var state = this._baseState;

  assert(state.use === null);
  state.contains = item;

  return this;
};

//
// Decoding
//

Node.prototype._decode = function decode(input, options) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return input.wrapResult(state.children[0]._decode(input, options));

  var result = state['default'];
  var present = true;

  var prevKey = null;
  if (state.key !== null)
    prevKey = input.enterKey(state.key);

  // Check if tag is there
  if (state.optional) {
    var tag = null;
    if (state.explicit !== null)
      tag = state.explicit;
    else if (state.implicit !== null)
      tag = state.implicit;
    else if (state.tag !== null)
      tag = state.tag;

    if (tag === null && !state.any) {
      // Trial and Error
      var save = input.save();
      try {
        if (state.choice === null)
          this._decodeGeneric(state.tag, input, options);
        else
          this._decodeChoice(input, options);
        present = true;
      } catch (e) {
        present = false;
      }
      input.restore(save);
    } else {
      present = this._peekTag(input, tag, state.any);

      if (input.isError(present))
        return present;
    }
  }

  // Push object on stack
  var prevObj;
  if (state.obj && present)
    prevObj = input.enterObject();

  if (present) {
    // Unwrap explicit values
    if (state.explicit !== null) {
      var explicit = this._decodeTag(input, state.explicit);
      if (input.isError(explicit))
        return explicit;
      input = explicit;
    }

    var start = input.offset;

    // Unwrap implicit and normal values
    if (state.use === null && state.choice === null) {
      if (state.any)
        var save = input.save();
      var body = this._decodeTag(
        input,
        state.implicit !== null ? state.implicit : state.tag,
        state.any
      );
      if (input.isError(body))
        return body;

      if (state.any)
        result = input.raw(save);
      else
        input = body;
    }

    if (options && options.track && state.tag !== null)
      options.track(input.path(), start, input.length, 'tagged');

    if (options && options.track && state.tag !== null)
      options.track(input.path(), input.offset, input.length, 'content');

    // Select proper method for tag
    if (state.any)
      result = result;
    else if (state.choice === null)
      result = this._decodeGeneric(state.tag, input, options);
    else
      result = this._decodeChoice(input, options);

    if (input.isError(result))
      return result;

    // Decode children
    if (!state.any && state.choice === null && state.children !== null) {
      state.children.forEach(function decodeChildren(child) {
        // NOTE: We are ignoring errors here, to let parser continue with other
        // parts of encoded data
        child._decode(input, options);
      });
    }

    // Decode contained/encoded by schema, only in bit or octet strings
    if (state.contains && (state.tag === 'octstr' || state.tag === 'bitstr')) {
      var data = new DecoderBuffer(result);
      result = this._getUse(state.contains, input._reporterState.obj)
          ._decode(data, options);
    }
  }

  // Pop object
  if (state.obj && present)
    result = input.leaveObject(prevObj);

  // Set key
  if (state.key !== null && (result !== null || present === true))
    input.leaveKey(prevKey, state.key, result);
  else if (prevKey !== null)
    input.exitKey(prevKey);

  return result;
};

Node.prototype._decodeGeneric = function decodeGeneric(tag, input, options) {
  var state = this._baseState;

  if (tag === 'seq' || tag === 'set')
    return null;
  if (tag === 'seqof' || tag === 'setof')
    return this._decodeList(input, tag, state.args[0], options);
  else if (/str$/.test(tag))
    return this._decodeStr(input, tag, options);
  else if (tag === 'objid' && state.args)
    return this._decodeObjid(input, state.args[0], state.args[1], options);
  else if (tag === 'objid')
    return this._decodeObjid(input, null, null, options);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._decodeTime(input, tag, options);
  else if (tag === 'null_')
    return this._decodeNull(input, options);
  else if (tag === 'bool')
    return this._decodeBool(input, options);
  else if (tag === 'objDesc')
    return this._decodeStr(input, tag, options);
  else if (tag === 'int' || tag === 'enum')
    return this._decodeInt(input, state.args && state.args[0], options);

  if (state.use !== null) {
    return this._getUse(state.use, input._reporterState.obj)
        ._decode(input, options);
  } else {
    return input.error('unknown tag: ' + tag);
  }
};

Node.prototype._getUse = function _getUse(entity, obj) {

  var state = this._baseState;
  // Create altered use decoder if implicit is set
  state.useDecoder = this._use(entity, obj);
  assert(state.useDecoder._baseState.parent === null);
  state.useDecoder = state.useDecoder._baseState.children[0];
  if (state.implicit !== state.useDecoder._baseState.implicit) {
    state.useDecoder = state.useDecoder.clone();
    state.useDecoder._baseState.implicit = state.implicit;
  }
  return state.useDecoder;
};

Node.prototype._decodeChoice = function decodeChoice(input, options) {
  var state = this._baseState;
  var result = null;
  var match = false;

  Object.keys(state.choice).some(function(key) {
    var save = input.save();
    var node = state.choice[key];
    try {
      var value = node._decode(input, options);
      if (input.isError(value))
        return false;

      result = { type: key, value: value };
      match = true;
    } catch (e) {
      input.restore(save);
      return false;
    }
    return true;
  }, this);

  if (!match)
    return input.error('Choice not matched');

  return result;
};

//
// Encoding
//

Node.prototype._createEncoderBuffer = function createEncoderBuffer(data) {
  return new EncoderBuffer(data, this.reporter);
};

Node.prototype._encode = function encode(data, reporter, parent) {
  var state = this._baseState;
  if (state['default'] !== null && state['default'] === data)
    return;

  var result = this._encodeValue(data, reporter, parent);
  if (result === undefined)
    return;

  if (this._skipDefault(result, reporter, parent))
    return;

  return result;
};

Node.prototype._encodeValue = function encode(data, reporter, parent) {
  var state = this._baseState;

  // Decode root node
  if (state.parent === null)
    return state.children[0]._encode(data, reporter || new Reporter());

  var result = null;

  // Set reporter to share it with a child class
  this.reporter = reporter;

  // Check if data is there
  if (state.optional && data === undefined) {
    if (state['default'] !== null)
      data = state['default']
    else
      return;
  }

  // Encode children first
  var content = null;
  var primitive = false;
  if (state.any) {
    // Anything that was given is translated to buffer
    result = this._createEncoderBuffer(data);
  } else if (state.choice) {
    result = this._encodeChoice(data, reporter);
  } else if (state.contains) {
    content = this._getUse(state.contains, parent)._encode(data, reporter);
    primitive = true;
  } else if (state.children) {
    content = state.children.map(function(child) {
      if (child._baseState.tag === 'null_')
        return child._encode(null, reporter, data);

      if (child._baseState.key === null)
        return reporter.error('Child should have a key');
      var prevKey = reporter.enterKey(child._baseState.key);

      if (typeof data !== 'object')
        return reporter.error('Child expected, but input is not object');

      var res = child._encode(data[child._baseState.key], reporter, data);
      reporter.leaveKey(prevKey);

      return res;
    }, this).filter(function(child) {
      return child;
    });
    content = this._createEncoderBuffer(content);
  } else {
    if (state.tag === 'seqof' || state.tag === 'setof') {
      // TODO(indutny): this should be thrown on DSL level
      if (!(state.args && state.args.length === 1))
        return reporter.error('Too many args for : ' + state.tag);

      if (!Array.isArray(data))
        return reporter.error('seqof/setof, but data is not Array');

      var child = this.clone();
      child._baseState.implicit = null;
      content = this._createEncoderBuffer(data.map(function(item) {
        var state = this._baseState;

        return this._getUse(state.args[0], data)._encode(item, reporter);
      }, child));
    } else if (state.use !== null) {
      result = this._getUse(state.use, parent)._encode(data, reporter);
    } else {
      content = this._encodePrimitive(state.tag, data);
      primitive = true;
    }
  }

  // Encode data itself
  var result;
  if (!state.any && state.choice === null) {
    var tag = state.implicit !== null ? state.implicit : state.tag;
    var cls = state.implicit === null ? 'universal' : 'context';

    if (tag === null) {
      if (state.use === null)
        reporter.error('Tag could be omitted only for .use()');
    } else {
      if (state.use === null)
        result = this._encodeComposite(tag, primitive, cls, content);
    }
  }

  // Wrap in explicit
  if (state.explicit !== null)
    result = this._encodeComposite(state.explicit, false, 'context', result);

  return result;
};

Node.prototype._encodeChoice = function encodeChoice(data, reporter) {
  var state = this._baseState;

  var node = state.choice[data.type];
  if (!node) {
    assert(
        false,
        data.type + ' not found in ' +
            JSON.stringify(Object.keys(state.choice)));
  }
  return node._encode(data.value, reporter);
};

Node.prototype._encodePrimitive = function encodePrimitive(tag, data) {
  var state = this._baseState;

  if (/str$/.test(tag))
    return this._encodeStr(data, tag);
  else if (tag === 'objid' && state.args)
    return this._encodeObjid(data, state.reverseArgs[0], state.args[1]);
  else if (tag === 'objid')
    return this._encodeObjid(data, null, null);
  else if (tag === 'gentime' || tag === 'utctime')
    return this._encodeTime(data, tag);
  else if (tag === 'null_')
    return this._encodeNull();
  else if (tag === 'int' || tag === 'enum')
    return this._encodeInt(data, state.args && state.reverseArgs[0]);
  else if (tag === 'bool')
    return this._encodeBool(data);
  else if (tag === 'objDesc')
    return this._encodeStr(data, tag);
  else
    throw new Error('Unsupported tag: ' + tag);
};

Node.prototype._isNumstr = function isNumstr(str) {
  return /^[0-9 ]*$/.test(str);
};

Node.prototype._isPrintstr = function isPrintstr(str) {
  return /^[A-Za-z0-9 '\(\)\+,\-\.\/:=\?]*$/.test(str);
};


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/base/reporter.js":
/*!********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/base/reporter.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

function Reporter(options) {
  this._reporterState = {
    obj: null,
    path: [],
    options: options || {},
    errors: []
  };
}
exports.Reporter = Reporter;

Reporter.prototype.isError = function isError(obj) {
  return obj instanceof ReporterError;
};

Reporter.prototype.save = function save() {
  var state = this._reporterState;

  return { obj: state.obj, pathLen: state.path.length };
};

Reporter.prototype.restore = function restore(data) {
  var state = this._reporterState;

  state.obj = data.obj;
  state.path = state.path.slice(0, data.pathLen);
};

Reporter.prototype.enterKey = function enterKey(key) {
  return this._reporterState.path.push(key);
};

Reporter.prototype.exitKey = function exitKey(index) {
  var state = this._reporterState;

  state.path = state.path.slice(0, index - 1);
};

Reporter.prototype.leaveKey = function leaveKey(index, key, value) {
  var state = this._reporterState;

  this.exitKey(index);
  if (state.obj !== null)
    state.obj[key] = value;
};

Reporter.prototype.path = function path() {
  return this._reporterState.path.join('/');
};

Reporter.prototype.enterObject = function enterObject() {
  var state = this._reporterState;

  var prev = state.obj;
  state.obj = {};
  return prev;
};

Reporter.prototype.leaveObject = function leaveObject(prev) {
  var state = this._reporterState;

  var now = state.obj;
  state.obj = prev;
  return now;
};

Reporter.prototype.error = function error(msg) {
  var err;
  var state = this._reporterState;

  var inherited = msg instanceof ReporterError;
  if (inherited) {
    err = msg;
  } else {
    err = new ReporterError(state.path.map(function(elem) {
      return '[' + JSON.stringify(elem) + ']';
    }).join(''), msg.message || msg, msg.stack);
  }

  if (!state.options.partial)
    throw err;

  if (!inherited)
    state.errors.push(err);

  return err;
};

Reporter.prototype.wrapResult = function wrapResult(result) {
  var state = this._reporterState;
  if (!state.options.partial)
    return result;

  return {
    result: this.isError(result) ? null : result,
    errors: state.errors
  };
};

function ReporterError(path, msg) {
  this.path = path;
  this.rethrow(msg);
};
inherits(ReporterError, Error);

ReporterError.prototype.rethrow = function rethrow(msg) {
  this.message = msg + ' at: ' + (this.path || '(shallow)');
  if (Error.captureStackTrace)
    Error.captureStackTrace(this, ReporterError);

  if (!this.stack) {
    try {
      // IE only adds stack when thrown
      throw new Error(this.message);
    } catch (e) {
      this.stack = e.stack;
    }
  }
  return this;
};


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/constants/der.js":
/*!********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/constants/der.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var constants = __webpack_require__(/*! ../constants */ "./node_modules/asn1.js/lib/asn1/constants/index.js");

exports.tagClass = {
  0: 'universal',
  1: 'application',
  2: 'context',
  3: 'private'
};
exports.tagClassByName = constants._reverse(exports.tagClass);

exports.tag = {
  0x00: 'end',
  0x01: 'bool',
  0x02: 'int',
  0x03: 'bitstr',
  0x04: 'octstr',
  0x05: 'null_',
  0x06: 'objid',
  0x07: 'objDesc',
  0x08: 'external',
  0x09: 'real',
  0x0a: 'enum',
  0x0b: 'embed',
  0x0c: 'utf8str',
  0x0d: 'relativeOid',
  0x10: 'seq',
  0x11: 'set',
  0x12: 'numstr',
  0x13: 'printstr',
  0x14: 't61str',
  0x15: 'videostr',
  0x16: 'ia5str',
  0x17: 'utctime',
  0x18: 'gentime',
  0x19: 'graphstr',
  0x1a: 'iso646str',
  0x1b: 'genstr',
  0x1c: 'unistr',
  0x1d: 'charstr',
  0x1e: 'bmpstr'
};
exports.tagByName = constants._reverse(exports.tag);


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/constants/index.js":
/*!**********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/constants/index.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var constants = exports;

// Helper
constants._reverse = function reverse(map) {
  var res = {};

  Object.keys(map).forEach(function(key) {
    // Convert key to integer if it is stringified
    if ((key | 0) == key)
      key = key | 0;

    var value = map[key];
    res[value] = key;
  });

  return res;
};

constants.der = __webpack_require__(/*! ./der */ "./node_modules/asn1.js/lib/asn1/constants/der.js");


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/decoders/der.js":
/*!*******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/decoders/der.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

var asn1 = __webpack_require__(/*! ../../asn1 */ "./node_modules/asn1.js/lib/asn1.js");
var base = asn1.base;
var bignum = asn1.bignum;

// Import DER constants
var der = asn1.constants.der;

function DERDecoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DERDecoder;

DERDecoder.prototype.decode = function decode(data, options) {
  if (!(data instanceof base.DecoderBuffer))
    data = new base.DecoderBuffer(data, options);

  return this.tree._decode(data, options);
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._peekTag = function peekTag(buffer, tag, any) {
  if (buffer.isEmpty())
    return false;

  var state = buffer.save();
  var decodedTag = derDecodeTag(buffer, 'Failed to peek tag: "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  buffer.restore(state);

  return decodedTag.tag === tag || decodedTag.tagStr === tag ||
    (decodedTag.tagStr + 'of') === tag || any;
};

DERNode.prototype._decodeTag = function decodeTag(buffer, tag, any) {
  var decodedTag = derDecodeTag(buffer,
                                'Failed to decode tag of "' + tag + '"');
  if (buffer.isError(decodedTag))
    return decodedTag;

  var len = derDecodeLen(buffer,
                         decodedTag.primitive,
                         'Failed to get length of "' + tag + '"');

  // Failure
  if (buffer.isError(len))
    return len;

  if (!any &&
      decodedTag.tag !== tag &&
      decodedTag.tagStr !== tag &&
      decodedTag.tagStr + 'of' !== tag) {
    return buffer.error('Failed to match tag: "' + tag + '"');
  }

  if (decodedTag.primitive || len !== null)
    return buffer.skip(len, 'Failed to match body of: "' + tag + '"');

  // Indefinite length... find END tag
  var state = buffer.save();
  var res = this._skipUntilEnd(
      buffer,
      'Failed to skip indefinite length body: "' + this.tag + '"');
  if (buffer.isError(res))
    return res;

  len = buffer.offset - state.offset;
  buffer.restore(state);
  return buffer.skip(len, 'Failed to match body of: "' + tag + '"');
};

DERNode.prototype._skipUntilEnd = function skipUntilEnd(buffer, fail) {
  while (true) {
    var tag = derDecodeTag(buffer, fail);
    if (buffer.isError(tag))
      return tag;
    var len = derDecodeLen(buffer, tag.primitive, fail);
    if (buffer.isError(len))
      return len;

    var res;
    if (tag.primitive || len !== null)
      res = buffer.skip(len)
    else
      res = this._skipUntilEnd(buffer, fail);

    // Failure
    if (buffer.isError(res))
      return res;

    if (tag.tagStr === 'end')
      break;
  }
};

DERNode.prototype._decodeList = function decodeList(buffer, tag, decoder,
                                                    options) {
  var result = [];
  while (!buffer.isEmpty()) {
    var possibleEnd = this._peekTag(buffer, 'end');
    if (buffer.isError(possibleEnd))
      return possibleEnd;

    var res = decoder.decode(buffer, 'der', options);
    if (buffer.isError(res) && possibleEnd)
      break;
    result.push(res);
  }
  return result;
};

DERNode.prototype._decodeStr = function decodeStr(buffer, tag) {
  if (tag === 'bitstr') {
    var unused = buffer.readUInt8();
    if (buffer.isError(unused))
      return unused;
    return { unused: unused, data: buffer.raw() };
  } else if (tag === 'bmpstr') {
    var raw = buffer.raw();
    if (raw.length % 2 === 1)
      return buffer.error('Decoding of string type: bmpstr length mismatch');

    var str = '';
    for (var i = 0; i < raw.length / 2; i++) {
      str += String.fromCharCode(raw.readUInt16BE(i * 2));
    }
    return str;
  } else if (tag === 'numstr') {
    var numstr = buffer.raw().toString('ascii');
    if (!this._isNumstr(numstr)) {
      return buffer.error('Decoding of string type: ' +
                          'numstr unsupported characters');
    }
    return numstr;
  } else if (tag === 'octstr') {
    return buffer.raw();
  } else if (tag === 'objDesc') {
    return buffer.raw();
  } else if (tag === 'printstr') {
    var printstr = buffer.raw().toString('ascii');
    if (!this._isPrintstr(printstr)) {
      return buffer.error('Decoding of string type: ' +
                          'printstr unsupported characters');
    }
    return printstr;
  } else if (/str$/.test(tag)) {
    return buffer.raw().toString();
  } else {
    return buffer.error('Decoding of string type: ' + tag + ' unsupported');
  }
};

DERNode.prototype._decodeObjid = function decodeObjid(buffer, values, relative) {
  var result;
  var identifiers = [];
  var ident = 0;
  while (!buffer.isEmpty()) {
    var subident = buffer.readUInt8();
    ident <<= 7;
    ident |= subident & 0x7f;
    if ((subident & 0x80) === 0) {
      identifiers.push(ident);
      ident = 0;
    }
  }
  if (subident & 0x80)
    identifiers.push(ident);

  var first = (identifiers[0] / 40) | 0;
  var second = identifiers[0] % 40;

  if (relative)
    result = identifiers;
  else
    result = [first, second].concat(identifiers.slice(1));

  if (values) {
    var tmp = values[result.join(' ')];
    if (tmp === undefined)
      tmp = values[result.join('.')];
    if (tmp !== undefined)
      result = tmp;
  }

  return result;
};

DERNode.prototype._decodeTime = function decodeTime(buffer, tag) {
  var str = buffer.raw().toString();
  if (tag === 'gentime') {
    var year = str.slice(0, 4) | 0;
    var mon = str.slice(4, 6) | 0;
    var day = str.slice(6, 8) | 0;
    var hour = str.slice(8, 10) | 0;
    var min = str.slice(10, 12) | 0;
    var sec = str.slice(12, 14) | 0;
  } else if (tag === 'utctime') {
    var year = str.slice(0, 2) | 0;
    var mon = str.slice(2, 4) | 0;
    var day = str.slice(4, 6) | 0;
    var hour = str.slice(6, 8) | 0;
    var min = str.slice(8, 10) | 0;
    var sec = str.slice(10, 12) | 0;
    if (year < 70)
      year = 2000 + year;
    else
      year = 1900 + year;
  } else {
    return buffer.error('Decoding ' + tag + ' time is not supported yet');
  }

  return Date.UTC(year, mon - 1, day, hour, min, sec, 0);
};

DERNode.prototype._decodeNull = function decodeNull(buffer) {
  return null;
};

DERNode.prototype._decodeBool = function decodeBool(buffer) {
  var res = buffer.readUInt8();
  if (buffer.isError(res))
    return res;
  else
    return res !== 0;
};

DERNode.prototype._decodeInt = function decodeInt(buffer, values) {
  // Bigint, return as it is (assume big endian)
  var raw = buffer.raw();
  var res = new bignum(raw);

  if (values)
    res = values[res.toString(10)] || res;

  return res;
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getDecoder('der').tree;
};

// Utility methods

function derDecodeTag(buf, fail) {
  var tag = buf.readUInt8(fail);
  if (buf.isError(tag))
    return tag;

  var cls = der.tagClass[tag >> 6];
  var primitive = (tag & 0x20) === 0;

  // Multi-octet tag - load
  if ((tag & 0x1f) === 0x1f) {
    var oct = tag;
    tag = 0;
    while ((oct & 0x80) === 0x80) {
      oct = buf.readUInt8(fail);
      if (buf.isError(oct))
        return oct;

      tag <<= 7;
      tag |= oct & 0x7f;
    }
  } else {
    tag &= 0x1f;
  }
  var tagStr = der.tag[tag];

  return {
    cls: cls,
    primitive: primitive,
    tag: tag,
    tagStr: tagStr
  };
}

function derDecodeLen(buf, primitive, fail) {
  var len = buf.readUInt8(fail);
  if (buf.isError(len))
    return len;

  // Indefinite form
  if (!primitive && len === 0x80)
    return null;

  // Definite form
  if ((len & 0x80) === 0) {
    // Short form
    return len;
  }

  // Long form
  var num = len & 0x7f;
  if (num > 4)
    return buf.error('length octect is too long');

  len = 0;
  for (var i = 0; i < num; i++) {
    len <<= 8;
    var j = buf.readUInt8(fail);
    if (buf.isError(j))
      return j;
    len |= j;
  }

  return len;
}


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/decoders/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/decoders/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var decoders = exports;

decoders.der = __webpack_require__(/*! ./der */ "./node_modules/asn1.js/lib/asn1/decoders/der.js");
decoders.pem = __webpack_require__(/*! ./pem */ "./node_modules/asn1.js/lib/asn1/decoders/pem.js");


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/decoders/pem.js":
/*!*******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/decoders/pem.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js").Buffer;

var DERDecoder = __webpack_require__(/*! ./der */ "./node_modules/asn1.js/lib/asn1/decoders/der.js");

function PEMDecoder(entity) {
  DERDecoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMDecoder, DERDecoder);
module.exports = PEMDecoder;

PEMDecoder.prototype.decode = function decode(data, options) {
  var lines = data.toString().split(/[\r\n]+/g);

  var label = options.label.toUpperCase();

  var re = /^-----(BEGIN|END) ([^-]+)-----$/;
  var start = -1;
  var end = -1;
  for (var i = 0; i < lines.length; i++) {
    var match = lines[i].match(re);
    if (match === null)
      continue;

    if (match[2] !== label)
      continue;

    if (start === -1) {
      if (match[1] !== 'BEGIN')
        break;
      start = i;
    } else {
      if (match[1] !== 'END')
        break;
      end = i;
      break;
    }
  }
  if (start === -1 || end === -1)
    throw new Error('PEM section not found for: ' + label);

  var base64 = lines.slice(start + 1, end).join('');
  // Remove excessive symbols
  base64.replace(/[^a-z0-9\+\/=]+/gi, '');

  var input = new Buffer(base64, 'base64');
  return DERDecoder.prototype.decode.call(this, input, options);
};


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/encoders/der.js":
/*!*******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/encoders/der.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js").Buffer;

var asn1 = __webpack_require__(/*! ../../asn1 */ "./node_modules/asn1.js/lib/asn1.js");
var base = asn1.base;

// Import DER constants
var der = asn1.constants.der;

function DEREncoder(entity) {
  this.enc = 'der';
  this.name = entity.name;
  this.entity = entity;

  // Construct base tree
  this.tree = new DERNode();
  this.tree._init(entity.body);
};
module.exports = DEREncoder;

DEREncoder.prototype.encode = function encode(data, reporter) {
  return this.tree._encode(data, reporter).join();
};

// Tree methods

function DERNode(parent) {
  base.Node.call(this, 'der', parent);
}
inherits(DERNode, base.Node);

DERNode.prototype._encodeComposite = function encodeComposite(tag,
                                                              primitive,
                                                              cls,
                                                              content) {
  var encodedTag = encodeTag(tag, primitive, cls, this.reporter);

  // Short form
  if (content.length < 0x80) {
    var header = new Buffer(2);
    header[0] = encodedTag;
    header[1] = content.length;
    return this._createEncoderBuffer([ header, content ]);
  }

  // Long form
  // Count octets required to store length
  var lenOctets = 1;
  for (var i = content.length; i >= 0x100; i >>= 8)
    lenOctets++;

  var header = new Buffer(1 + 1 + lenOctets);
  header[0] = encodedTag;
  header[1] = 0x80 | lenOctets;

  for (var i = 1 + lenOctets, j = content.length; j > 0; i--, j >>= 8)
    header[i] = j & 0xff;

  return this._createEncoderBuffer([ header, content ]);
};

DERNode.prototype._encodeStr = function encodeStr(str, tag) {
  if (tag === 'bitstr') {
    return this._createEncoderBuffer([ str.unused | 0, str.data ]);
  } else if (tag === 'bmpstr') {
    var buf = new Buffer(str.length * 2);
    for (var i = 0; i < str.length; i++) {
      buf.writeUInt16BE(str.charCodeAt(i), i * 2);
    }
    return this._createEncoderBuffer(buf);
  } else if (tag === 'numstr') {
    if (!this._isNumstr(str)) {
      return this.reporter.error('Encoding of string type: numstr supports ' +
                                 'only digits and space');
    }
    return this._createEncoderBuffer(str);
  } else if (tag === 'printstr') {
    if (!this._isPrintstr(str)) {
      return this.reporter.error('Encoding of string type: printstr supports ' +
                                 'only latin upper and lower case letters, ' +
                                 'digits, space, apostrophe, left and rigth ' +
                                 'parenthesis, plus sign, comma, hyphen, ' +
                                 'dot, slash, colon, equal sign, ' +
                                 'question mark');
    }
    return this._createEncoderBuffer(str);
  } else if (/str$/.test(tag)) {
    return this._createEncoderBuffer(str);
  } else if (tag === 'objDesc') {
    return this._createEncoderBuffer(str);
  } else {
    return this.reporter.error('Encoding of string type: ' + tag +
                               ' unsupported');
  }
};

DERNode.prototype._encodeObjid = function encodeObjid(id, values, relative) {
  if (typeof id === 'string') {
    if (!values)
      return this.reporter.error('string objid given, but no values map found');
    if (!values.hasOwnProperty(id))
      return this.reporter.error('objid not found in values map');
    id = values[id].split(/[\s\.]+/g);
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  } else if (Array.isArray(id)) {
    id = id.slice();
    for (var i = 0; i < id.length; i++)
      id[i] |= 0;
  }

  if (!Array.isArray(id)) {
    return this.reporter.error('objid() should be either array or string, ' +
                               'got: ' + JSON.stringify(id));
  }

  if (!relative) {
    if (id[1] >= 40)
      return this.reporter.error('Second objid identifier OOB');
    id.splice(0, 2, id[0] * 40 + id[1]);
  }

  // Count number of octets
  var size = 0;
  for (var i = 0; i < id.length; i++) {
    var ident = id[i];
    for (size++; ident >= 0x80; ident >>= 7)
      size++;
  }

  var objid = new Buffer(size);
  var offset = objid.length - 1;
  for (var i = id.length - 1; i >= 0; i--) {
    var ident = id[i];
    objid[offset--] = ident & 0x7f;
    while ((ident >>= 7) > 0)
      objid[offset--] = 0x80 | (ident & 0x7f);
  }

  return this._createEncoderBuffer(objid);
};

function two(num) {
  if (num < 10)
    return '0' + num;
  else
    return num;
}

DERNode.prototype._encodeTime = function encodeTime(time, tag) {
  var str;
  var date = new Date(time);

  if (tag === 'gentime') {
    str = [
      two(date.getFullYear()),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else if (tag === 'utctime') {
    str = [
      two(date.getFullYear() % 100),
      two(date.getUTCMonth() + 1),
      two(date.getUTCDate()),
      two(date.getUTCHours()),
      two(date.getUTCMinutes()),
      two(date.getUTCSeconds()),
      'Z'
    ].join('');
  } else {
    this.reporter.error('Encoding ' + tag + ' time is not supported yet');
  }

  return this._encodeStr(str, 'octstr');
};

DERNode.prototype._encodeNull = function encodeNull() {
  return this._createEncoderBuffer('');
};

DERNode.prototype._encodeInt = function encodeInt(num, values) {
  if (typeof num === 'string') {
    if (!values)
      return this.reporter.error('String int or enum given, but no values map');
    if (!values.hasOwnProperty(num)) {
      return this.reporter.error('Values map doesn\'t contain: ' +
                                 JSON.stringify(num));
    }
    num = values[num];
  }

  // Bignum, assume big endian
  if (typeof num !== 'number' && !Buffer.isBuffer(num)) {
    var numArray = num.toArray();
    if (!num.sign && numArray[0] & 0x80) {
      numArray.unshift(0);
    }
    num = new Buffer(numArray);
  }

  if (Buffer.isBuffer(num)) {
    var size = num.length;
    if (num.length === 0)
      size++;

    var out = new Buffer(size);
    num.copy(out);
    if (num.length === 0)
      out[0] = 0
    return this._createEncoderBuffer(out);
  }

  if (num < 0x80)
    return this._createEncoderBuffer(num);

  if (num < 0x100)
    return this._createEncoderBuffer([0, num]);

  var size = 1;
  for (var i = num; i >= 0x100; i >>= 8)
    size++;

  var out = new Array(size);
  for (var i = out.length - 1; i >= 0; i--) {
    out[i] = num & 0xff;
    num >>= 8;
  }
  if(out[0] & 0x80) {
    out.unshift(0);
  }

  return this._createEncoderBuffer(new Buffer(out));
};

DERNode.prototype._encodeBool = function encodeBool(value) {
  return this._createEncoderBuffer(value ? 0xff : 0);
};

DERNode.prototype._use = function use(entity, obj) {
  if (typeof entity === 'function')
    entity = entity(obj);
  return entity._getEncoder('der').tree;
};

DERNode.prototype._skipDefault = function skipDefault(dataBuffer, reporter, parent) {
  var state = this._baseState;
  var i;
  if (state['default'] === null)
    return false;

  var data = dataBuffer.join();
  if (state.defaultBuffer === undefined)
    state.defaultBuffer = this._encodeValue(state['default'], reporter, parent).join();

  if (data.length !== state.defaultBuffer.length)
    return false;

  for (i=0; i < data.length; i++)
    if (data[i] !== state.defaultBuffer[i])
      return false;

  return true;
};

// Utility methods

function encodeTag(tag, primitive, cls, reporter) {
  var res;

  if (tag === 'seqof')
    tag = 'seq';
  else if (tag === 'setof')
    tag = 'set';

  if (der.tagByName.hasOwnProperty(tag))
    res = der.tagByName[tag];
  else if (typeof tag === 'number' && (tag | 0) === tag)
    res = tag;
  else
    return reporter.error('Unknown tag: ' + tag);

  if (res >= 0x1f)
    return reporter.error('Multi-octet tag encoding unsupported');

  if (!primitive)
    res |= 0x20;

  res |= (der.tagClassByName[cls || 'universal'] << 6);

  return res;
}


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/encoders/index.js":
/*!*********************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/encoders/index.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var encoders = exports;

encoders.der = __webpack_require__(/*! ./der */ "./node_modules/asn1.js/lib/asn1/encoders/der.js");
encoders.pem = __webpack_require__(/*! ./pem */ "./node_modules/asn1.js/lib/asn1/encoders/pem.js");


/***/ }),

/***/ "./node_modules/asn1.js/lib/asn1/encoders/pem.js":
/*!*******************************************************!*\
  !*** ./node_modules/asn1.js/lib/asn1/encoders/pem.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

var DEREncoder = __webpack_require__(/*! ./der */ "./node_modules/asn1.js/lib/asn1/encoders/der.js");

function PEMEncoder(entity) {
  DEREncoder.call(this, entity);
  this.enc = 'pem';
};
inherits(PEMEncoder, DEREncoder);
module.exports = PEMEncoder;

PEMEncoder.prototype.encode = function encode(data, options) {
  var buf = DEREncoder.prototype.encode.call(this, data);

  var p = buf.toString('base64');
  var out = [ '-----BEGIN ' + options.label + '-----' ];
  for (var i = 0; i < p.length; i += 64)
    out.push(p.slice(i, i + 64));
  out.push('-----END ' + options.label + '-----');
  return out.join('\n');
};


/***/ }),

/***/ "./node_modules/base64-js/index.js":
/*!*****************************************!*\
  !*** ./node_modules/base64-js/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.byteLength = byteLength
exports.toByteArray = toByteArray
exports.fromByteArray = fromByteArray

var lookup = []
var revLookup = []
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array

var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'
for (var i = 0, len = code.length; i < len; ++i) {
  lookup[i] = code[i]
  revLookup[code.charCodeAt(i)] = i
}

// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62
revLookup['_'.charCodeAt(0)] = 63

function getLens (b64) {
  var len = b64.length

  if (len % 4 > 0) {
    throw new Error('Invalid string. Length must be a multiple of 4')
  }

  // Trim off extra bytes after placeholder bytes are found
  // See: https://github.com/beatgammit/base64-js/issues/42
  var validLen = b64.indexOf('=')
  if (validLen === -1) validLen = len

  var placeHoldersLen = validLen === len
    ? 0
    : 4 - (validLen % 4)

  return [validLen, placeHoldersLen]
}

// base64 is 4/3 + up to two characters of the original data
function byteLength (b64) {
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function _byteLength (b64, validLen, placeHoldersLen) {
  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen
}

function toByteArray (b64) {
  var tmp
  var lens = getLens(b64)
  var validLen = lens[0]
  var placeHoldersLen = lens[1]

  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))

  var curByte = 0

  // if there are placeholders, only get up to the last complete 4 chars
  var len = placeHoldersLen > 0
    ? validLen - 4
    : validLen

  for (var i = 0; i < len; i += 4) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 18) |
      (revLookup[b64.charCodeAt(i + 1)] << 12) |
      (revLookup[b64.charCodeAt(i + 2)] << 6) |
      revLookup[b64.charCodeAt(i + 3)]
    arr[curByte++] = (tmp >> 16) & 0xFF
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 2) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 2) |
      (revLookup[b64.charCodeAt(i + 1)] >> 4)
    arr[curByte++] = tmp & 0xFF
  }

  if (placeHoldersLen === 1) {
    tmp =
      (revLookup[b64.charCodeAt(i)] << 10) |
      (revLookup[b64.charCodeAt(i + 1)] << 4) |
      (revLookup[b64.charCodeAt(i + 2)] >> 2)
    arr[curByte++] = (tmp >> 8) & 0xFF
    arr[curByte++] = tmp & 0xFF
  }

  return arr
}

function tripletToBase64 (num) {
  return lookup[num >> 18 & 0x3F] +
    lookup[num >> 12 & 0x3F] +
    lookup[num >> 6 & 0x3F] +
    lookup[num & 0x3F]
}

function encodeChunk (uint8, start, end) {
  var tmp
  var output = []
  for (var i = start; i < end; i += 3) {
    tmp =
      ((uint8[i] << 16) & 0xFF0000) +
      ((uint8[i + 1] << 8) & 0xFF00) +
      (uint8[i + 2] & 0xFF)
    output.push(tripletToBase64(tmp))
  }
  return output.join('')
}

function fromByteArray (uint8) {
  var tmp
  var len = uint8.length
  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
  var parts = []
  var maxChunkLength = 16383 // must be multiple of 3

  // go through the array every three bytes, we'll deal with trailing stuff later
  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {
    parts.push(encodeChunk(
      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)
    ))
  }

  // pad the end with zeros, but make sure to not forget the extra bytes
  if (extraBytes === 1) {
    tmp = uint8[len - 1]
    parts.push(
      lookup[tmp >> 2] +
      lookup[(tmp << 4) & 0x3F] +
      '=='
    )
  } else if (extraBytes === 2) {
    tmp = (uint8[len - 2] << 8) + uint8[len - 1]
    parts.push(
      lookup[tmp >> 10] +
      lookup[(tmp >> 4) & 0x3F] +
      lookup[(tmp << 2) & 0x3F] +
      '='
    )
  }

  return parts.join('')
}


/***/ }),

/***/ "./node_modules/bn.js/lib/bn.js":
/*!**************************************!*\
  !*** ./node_modules/bn.js/lib/bn.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(module) {(function (module, exports) {
  'use strict';

  // Utils
  function assert (val, msg) {
    if (!val) throw new Error(msg || 'Assertion failed');
  }

  // Could use `inherits` module, but don't want to move from single file
  // architecture yet.
  function inherits (ctor, superCtor) {
    ctor.super_ = superCtor;
    var TempCtor = function () {};
    TempCtor.prototype = superCtor.prototype;
    ctor.prototype = new TempCtor();
    ctor.prototype.constructor = ctor;
  }

  // BN

  function BN (number, base, endian) {
    if (BN.isBN(number)) {
      return number;
    }

    this.negative = 0;
    this.words = null;
    this.length = 0;

    // Reduction context
    this.red = null;

    if (number !== null) {
      if (base === 'le' || base === 'be') {
        endian = base;
        base = 10;
      }

      this._init(number || 0, base || 10, endian || 'be');
    }
  }
  if (typeof module === 'object') {
    module.exports = BN;
  } else {
    exports.BN = BN;
  }

  BN.BN = BN;
  BN.wordSize = 26;

  var Buffer;
  try {
    Buffer = __webpack_require__(/*! buffer */ 2).Buffer;
  } catch (e) {
  }

  BN.isBN = function isBN (num) {
    if (num instanceof BN) {
      return true;
    }

    return num !== null && typeof num === 'object' &&
      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);
  };

  BN.max = function max (left, right) {
    if (left.cmp(right) > 0) return left;
    return right;
  };

  BN.min = function min (left, right) {
    if (left.cmp(right) < 0) return left;
    return right;
  };

  BN.prototype._init = function init (number, base, endian) {
    if (typeof number === 'number') {
      return this._initNumber(number, base, endian);
    }

    if (typeof number === 'object') {
      return this._initArray(number, base, endian);
    }

    if (base === 'hex') {
      base = 16;
    }
    assert(base === (base | 0) && base >= 2 && base <= 36);

    number = number.toString().replace(/\s+/g, '');
    var start = 0;
    if (number[0] === '-') {
      start++;
    }

    if (base === 16) {
      this._parseHex(number, start);
    } else {
      this._parseBase(number, base, start);
    }

    if (number[0] === '-') {
      this.negative = 1;
    }

    this.strip();

    if (endian !== 'le') return;

    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initNumber = function _initNumber (number, base, endian) {
    if (number < 0) {
      this.negative = 1;
      number = -number;
    }
    if (number < 0x4000000) {
      this.words = [ number & 0x3ffffff ];
      this.length = 1;
    } else if (number < 0x10000000000000) {
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff
      ];
      this.length = 2;
    } else {
      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)
      this.words = [
        number & 0x3ffffff,
        (number / 0x4000000) & 0x3ffffff,
        1
      ];
      this.length = 3;
    }

    if (endian !== 'le') return;

    // Reverse the bytes
    this._initArray(this.toArray(), base, endian);
  };

  BN.prototype._initArray = function _initArray (number, base, endian) {
    // Perhaps a Uint8Array
    assert(typeof number.length === 'number');
    if (number.length <= 0) {
      this.words = [ 0 ];
      this.length = 1;
      return this;
    }

    this.length = Math.ceil(number.length / 3);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    var off = 0;
    if (endian === 'be') {
      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {
        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    } else if (endian === 'le') {
      for (i = 0, j = 0; i < number.length; i += 3) {
        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);
        this.words[j] |= (w << off) & 0x3ffffff;
        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;
        off += 24;
        if (off >= 26) {
          off -= 26;
          j++;
        }
      }
    }
    return this.strip();
  };

  function parseHex (str, start, end) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r <<= 4;

      // 'a' - 'f'
      if (c >= 49 && c <= 54) {
        r |= c - 49 + 0xa;

      // 'A' - 'F'
      } else if (c >= 17 && c <= 22) {
        r |= c - 17 + 0xa;

      // '0' - '9'
      } else {
        r |= c & 0xf;
      }
    }
    return r;
  }

  BN.prototype._parseHex = function _parseHex (number, start) {
    // Create possibly bigger array to ensure that it fits the number
    this.length = Math.ceil((number.length - start) / 6);
    this.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      this.words[i] = 0;
    }

    var j, w;
    // Scan 24-bit chunks and add them to the number
    var off = 0;
    for (i = number.length - 6, j = 0; i >= start; i -= 6) {
      w = parseHex(number, i, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
      off += 24;
      if (off >= 26) {
        off -= 26;
        j++;
      }
    }
    if (i + 6 !== start) {
      w = parseHex(number, start, i + 6);
      this.words[j] |= (w << off) & 0x3ffffff;
      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;
    }
    this.strip();
  };

  function parseBase (str, start, end, mul) {
    var r = 0;
    var len = Math.min(str.length, end);
    for (var i = start; i < len; i++) {
      var c = str.charCodeAt(i) - 48;

      r *= mul;

      // 'a'
      if (c >= 49) {
        r += c - 49 + 0xa;

      // 'A'
      } else if (c >= 17) {
        r += c - 17 + 0xa;

      // '0' - '9'
      } else {
        r += c;
      }
    }
    return r;
  }

  BN.prototype._parseBase = function _parseBase (number, base, start) {
    // Initialize as zero
    this.words = [ 0 ];
    this.length = 1;

    // Find length of limb in base
    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {
      limbLen++;
    }
    limbLen--;
    limbPow = (limbPow / base) | 0;

    var total = number.length - start;
    var mod = total % limbLen;
    var end = Math.min(total, total - mod) + start;

    var word = 0;
    for (var i = start; i < end; i += limbLen) {
      word = parseBase(number, i, i + limbLen, base);

      this.imuln(limbPow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }

    if (mod !== 0) {
      var pow = 1;
      word = parseBase(number, i, number.length, base);

      for (i = 0; i < mod; i++) {
        pow *= base;
      }

      this.imuln(pow);
      if (this.words[0] + word < 0x4000000) {
        this.words[0] += word;
      } else {
        this._iaddn(word);
      }
    }
  };

  BN.prototype.copy = function copy (dest) {
    dest.words = new Array(this.length);
    for (var i = 0; i < this.length; i++) {
      dest.words[i] = this.words[i];
    }
    dest.length = this.length;
    dest.negative = this.negative;
    dest.red = this.red;
  };

  BN.prototype.clone = function clone () {
    var r = new BN(null);
    this.copy(r);
    return r;
  };

  BN.prototype._expand = function _expand (size) {
    while (this.length < size) {
      this.words[this.length++] = 0;
    }
    return this;
  };

  // Remove leading `0` from `this`
  BN.prototype.strip = function strip () {
    while (this.length > 1 && this.words[this.length - 1] === 0) {
      this.length--;
    }
    return this._normSign();
  };

  BN.prototype._normSign = function _normSign () {
    // -0 = 0
    if (this.length === 1 && this.words[0] === 0) {
      this.negative = 0;
    }
    return this;
  };

  BN.prototype.inspect = function inspect () {
    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';
  };

  /*

  var zeros = [];
  var groupSizes = [];
  var groupBases = [];

  var s = '';
  var i = -1;
  while (++i < BN.wordSize) {
    zeros[i] = s;
    s += '0';
  }
  groupSizes[0] = 0;
  groupSizes[1] = 0;
  groupBases[0] = 0;
  groupBases[1] = 0;
  var base = 2 - 1;
  while (++base < 36 + 1) {
    var groupSize = 0;
    var groupBase = 1;
    while (groupBase < (1 << BN.wordSize) / base) {
      groupBase *= base;
      groupSize += 1;
    }
    groupSizes[base] = groupSize;
    groupBases[base] = groupBase;
  }

  */

  var zeros = [
    '',
    '0',
    '00',
    '000',
    '0000',
    '00000',
    '000000',
    '0000000',
    '00000000',
    '000000000',
    '0000000000',
    '00000000000',
    '000000000000',
    '0000000000000',
    '00000000000000',
    '000000000000000',
    '0000000000000000',
    '00000000000000000',
    '000000000000000000',
    '0000000000000000000',
    '00000000000000000000',
    '000000000000000000000',
    '0000000000000000000000',
    '00000000000000000000000',
    '000000000000000000000000',
    '0000000000000000000000000'
  ];

  var groupSizes = [
    0, 0,
    25, 16, 12, 11, 10, 9, 8,
    8, 7, 7, 7, 7, 6, 6,
    6, 6, 6, 6, 6, 5, 5,
    5, 5, 5, 5, 5, 5, 5,
    5, 5, 5, 5, 5, 5, 5
  ];

  var groupBases = [
    0, 0,
    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,
    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,
    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,
    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,
    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176
  ];

  BN.prototype.toString = function toString (base, padding) {
    base = base || 10;
    padding = padding | 0 || 1;

    var out;
    if (base === 16 || base === 'hex') {
      out = '';
      var off = 0;
      var carry = 0;
      for (var i = 0; i < this.length; i++) {
        var w = this.words[i];
        var word = (((w << off) | carry) & 0xffffff).toString(16);
        carry = (w >>> (24 - off)) & 0xffffff;
        if (carry !== 0 || i !== this.length - 1) {
          out = zeros[6 - word.length] + word + out;
        } else {
          out = word + out;
        }
        off += 2;
        if (off >= 26) {
          off -= 26;
          i--;
        }
      }
      if (carry !== 0) {
        out = carry.toString(16) + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    if (base === (base | 0) && base >= 2 && base <= 36) {
      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));
      var groupSize = groupSizes[base];
      // var groupBase = Math.pow(base, groupSize);
      var groupBase = groupBases[base];
      out = '';
      var c = this.clone();
      c.negative = 0;
      while (!c.isZero()) {
        var r = c.modn(groupBase).toString(base);
        c = c.idivn(groupBase);

        if (!c.isZero()) {
          out = zeros[groupSize - r.length] + r + out;
        } else {
          out = r + out;
        }
      }
      if (this.isZero()) {
        out = '0' + out;
      }
      while (out.length % padding !== 0) {
        out = '0' + out;
      }
      if (this.negative !== 0) {
        out = '-' + out;
      }
      return out;
    }

    assert(false, 'Base should be between 2 and 36');
  };

  BN.prototype.toNumber = function toNumber () {
    var ret = this.words[0];
    if (this.length === 2) {
      ret += this.words[1] * 0x4000000;
    } else if (this.length === 3 && this.words[2] === 0x01) {
      // NOTE: at this stage it is known that the top bit is set
      ret += 0x10000000000000 + (this.words[1] * 0x4000000);
    } else if (this.length > 2) {
      assert(false, 'Number can only safely store up to 53 bits');
    }
    return (this.negative !== 0) ? -ret : ret;
  };

  BN.prototype.toJSON = function toJSON () {
    return this.toString(16);
  };

  BN.prototype.toBuffer = function toBuffer (endian, length) {
    assert(typeof Buffer !== 'undefined');
    return this.toArrayLike(Buffer, endian, length);
  };

  BN.prototype.toArray = function toArray (endian, length) {
    return this.toArrayLike(Array, endian, length);
  };

  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {
    var byteLength = this.byteLength();
    var reqLength = length || Math.max(1, byteLength);
    assert(byteLength <= reqLength, 'byte array longer than desired length');
    assert(reqLength > 0, 'Requested array length <= 0');

    this.strip();
    var littleEndian = endian === 'le';
    var res = new ArrayType(reqLength);

    var b, i;
    var q = this.clone();
    if (!littleEndian) {
      // Assume big-endian
      for (i = 0; i < reqLength - byteLength; i++) {
        res[i] = 0;
      }

      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[reqLength - i - 1] = b;
      }
    } else {
      for (i = 0; !q.isZero(); i++) {
        b = q.andln(0xff);
        q.iushrn(8);

        res[i] = b;
      }

      for (; i < reqLength; i++) {
        res[i] = 0;
      }
    }

    return res;
  };

  if (Math.clz32) {
    BN.prototype._countBits = function _countBits (w) {
      return 32 - Math.clz32(w);
    };
  } else {
    BN.prototype._countBits = function _countBits (w) {
      var t = w;
      var r = 0;
      if (t >= 0x1000) {
        r += 13;
        t >>>= 13;
      }
      if (t >= 0x40) {
        r += 7;
        t >>>= 7;
      }
      if (t >= 0x8) {
        r += 4;
        t >>>= 4;
      }
      if (t >= 0x02) {
        r += 2;
        t >>>= 2;
      }
      return r + t;
    };
  }

  BN.prototype._zeroBits = function _zeroBits (w) {
    // Short-cut
    if (w === 0) return 26;

    var t = w;
    var r = 0;
    if ((t & 0x1fff) === 0) {
      r += 13;
      t >>>= 13;
    }
    if ((t & 0x7f) === 0) {
      r += 7;
      t >>>= 7;
    }
    if ((t & 0xf) === 0) {
      r += 4;
      t >>>= 4;
    }
    if ((t & 0x3) === 0) {
      r += 2;
      t >>>= 2;
    }
    if ((t & 0x1) === 0) {
      r++;
    }
    return r;
  };

  // Return number of used bits in a BN
  BN.prototype.bitLength = function bitLength () {
    var w = this.words[this.length - 1];
    var hi = this._countBits(w);
    return (this.length - 1) * 26 + hi;
  };

  function toBitArray (num) {
    var w = new Array(num.bitLength());

    for (var bit = 0; bit < w.length; bit++) {
      var off = (bit / 26) | 0;
      var wbit = bit % 26;

      w[bit] = (num.words[off] & (1 << wbit)) >>> wbit;
    }

    return w;
  }

  // Number of trailing zero bits
  BN.prototype.zeroBits = function zeroBits () {
    if (this.isZero()) return 0;

    var r = 0;
    for (var i = 0; i < this.length; i++) {
      var b = this._zeroBits(this.words[i]);
      r += b;
      if (b !== 26) break;
    }
    return r;
  };

  BN.prototype.byteLength = function byteLength () {
    return Math.ceil(this.bitLength() / 8);
  };

  BN.prototype.toTwos = function toTwos (width) {
    if (this.negative !== 0) {
      return this.abs().inotn(width).iaddn(1);
    }
    return this.clone();
  };

  BN.prototype.fromTwos = function fromTwos (width) {
    if (this.testn(width - 1)) {
      return this.notn(width).iaddn(1).ineg();
    }
    return this.clone();
  };

  BN.prototype.isNeg = function isNeg () {
    return this.negative !== 0;
  };

  // Return negative clone of `this`
  BN.prototype.neg = function neg () {
    return this.clone().ineg();
  };

  BN.prototype.ineg = function ineg () {
    if (!this.isZero()) {
      this.negative ^= 1;
    }

    return this;
  };

  // Or `num` with `this` in-place
  BN.prototype.iuor = function iuor (num) {
    while (this.length < num.length) {
      this.words[this.length++] = 0;
    }

    for (var i = 0; i < num.length; i++) {
      this.words[i] = this.words[i] | num.words[i];
    }

    return this.strip();
  };

  BN.prototype.ior = function ior (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuor(num);
  };

  // Or `num` with `this`
  BN.prototype.or = function or (num) {
    if (this.length > num.length) return this.clone().ior(num);
    return num.clone().ior(this);
  };

  BN.prototype.uor = function uor (num) {
    if (this.length > num.length) return this.clone().iuor(num);
    return num.clone().iuor(this);
  };

  // And `num` with `this` in-place
  BN.prototype.iuand = function iuand (num) {
    // b = min-length(num, this)
    var b;
    if (this.length > num.length) {
      b = num;
    } else {
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = this.words[i] & num.words[i];
    }

    this.length = b.length;

    return this.strip();
  };

  BN.prototype.iand = function iand (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuand(num);
  };

  // And `num` with `this`
  BN.prototype.and = function and (num) {
    if (this.length > num.length) return this.clone().iand(num);
    return num.clone().iand(this);
  };

  BN.prototype.uand = function uand (num) {
    if (this.length > num.length) return this.clone().iuand(num);
    return num.clone().iuand(this);
  };

  // Xor `num` with `this` in-place
  BN.prototype.iuxor = function iuxor (num) {
    // a.length > b.length
    var a;
    var b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    for (var i = 0; i < b.length; i++) {
      this.words[i] = a.words[i] ^ b.words[i];
    }

    if (this !== a) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = a.length;

    return this.strip();
  };

  BN.prototype.ixor = function ixor (num) {
    assert((this.negative | num.negative) === 0);
    return this.iuxor(num);
  };

  // Xor `num` with `this`
  BN.prototype.xor = function xor (num) {
    if (this.length > num.length) return this.clone().ixor(num);
    return num.clone().ixor(this);
  };

  BN.prototype.uxor = function uxor (num) {
    if (this.length > num.length) return this.clone().iuxor(num);
    return num.clone().iuxor(this);
  };

  // Not ``this`` with ``width`` bitwidth
  BN.prototype.inotn = function inotn (width) {
    assert(typeof width === 'number' && width >= 0);

    var bytesNeeded = Math.ceil(width / 26) | 0;
    var bitsLeft = width % 26;

    // Extend the buffer with leading zeroes
    this._expand(bytesNeeded);

    if (bitsLeft > 0) {
      bytesNeeded--;
    }

    // Handle complete words
    for (var i = 0; i < bytesNeeded; i++) {
      this.words[i] = ~this.words[i] & 0x3ffffff;
    }

    // Handle the residue
    if (bitsLeft > 0) {
      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));
    }

    // And remove leading zeroes
    return this.strip();
  };

  BN.prototype.notn = function notn (width) {
    return this.clone().inotn(width);
  };

  // Set `bit` of `this`
  BN.prototype.setn = function setn (bit, val) {
    assert(typeof bit === 'number' && bit >= 0);

    var off = (bit / 26) | 0;
    var wbit = bit % 26;

    this._expand(off + 1);

    if (val) {
      this.words[off] = this.words[off] | (1 << wbit);
    } else {
      this.words[off] = this.words[off] & ~(1 << wbit);
    }

    return this.strip();
  };

  // Add `num` to `this` in-place
  BN.prototype.iadd = function iadd (num) {
    var r;

    // negative + positive
    if (this.negative !== 0 && num.negative === 0) {
      this.negative = 0;
      r = this.isub(num);
      this.negative ^= 1;
      return this._normSign();

    // positive + negative
    } else if (this.negative === 0 && num.negative !== 0) {
      num.negative = 0;
      r = this.isub(num);
      num.negative = 1;
      return r._normSign();
    }

    // a.length > b.length
    var a, b;
    if (this.length > num.length) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      this.words[i] = r & 0x3ffffff;
      carry = r >>> 26;
    }

    this.length = a.length;
    if (carry !== 0) {
      this.words[this.length] = carry;
      this.length++;
    // Copy the rest of the words
    } else if (a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    return this;
  };

  // Add `num` to `this`
  BN.prototype.add = function add (num) {
    var res;
    if (num.negative !== 0 && this.negative === 0) {
      num.negative = 0;
      res = this.sub(num);
      num.negative ^= 1;
      return res;
    } else if (num.negative === 0 && this.negative !== 0) {
      this.negative = 0;
      res = num.sub(this);
      this.negative = 1;
      return res;
    }

    if (this.length > num.length) return this.clone().iadd(num);

    return num.clone().iadd(this);
  };

  // Subtract `num` from `this` in-place
  BN.prototype.isub = function isub (num) {
    // this - (-num) = this + num
    if (num.negative !== 0) {
      num.negative = 0;
      var r = this.iadd(num);
      num.negative = 1;
      return r._normSign();

    // -this - num = -(this + num)
    } else if (this.negative !== 0) {
      this.negative = 0;
      this.iadd(num);
      this.negative = 1;
      return this._normSign();
    }

    // At this point both numbers are positive
    var cmp = this.cmp(num);

    // Optimization - zeroify
    if (cmp === 0) {
      this.negative = 0;
      this.length = 1;
      this.words[0] = 0;
      return this;
    }

    // a > b
    var a, b;
    if (cmp > 0) {
      a = this;
      b = num;
    } else {
      a = num;
      b = this;
    }

    var carry = 0;
    for (var i = 0; i < b.length; i++) {
      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }
    for (; carry !== 0 && i < a.length; i++) {
      r = (a.words[i] | 0) + carry;
      carry = r >> 26;
      this.words[i] = r & 0x3ffffff;
    }

    // Copy rest of the words
    if (carry === 0 && i < a.length && a !== this) {
      for (; i < a.length; i++) {
        this.words[i] = a.words[i];
      }
    }

    this.length = Math.max(this.length, i);

    if (a !== this) {
      this.negative = 1;
    }

    return this.strip();
  };

  // Subtract `num` from `this`
  BN.prototype.sub = function sub (num) {
    return this.clone().isub(num);
  };

  function smallMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    var len = (self.length + num.length) | 0;
    out.length = len;
    len = (len - 1) | 0;

    // Peel one iteration (compiler can't do it, because of code complexity)
    var a = self.words[0] | 0;
    var b = num.words[0] | 0;
    var r = a * b;

    var lo = r & 0x3ffffff;
    var carry = (r / 0x4000000) | 0;
    out.words[0] = lo;

    for (var k = 1; k < len; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = carry >>> 26;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = (k - j) | 0;
        a = self.words[i] | 0;
        b = num.words[j] | 0;
        r = a * b + rword;
        ncarry += (r / 0x4000000) | 0;
        rword = r & 0x3ffffff;
      }
      out.words[k] = rword | 0;
      carry = ncarry | 0;
    }
    if (carry !== 0) {
      out.words[k] = carry | 0;
    } else {
      out.length--;
    }

    return out.strip();
  }

  // TODO(indutny): it may be reasonable to omit it for users who don't need
  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit
  // multiplication (like elliptic secp256k1).
  var comb10MulTo = function comb10MulTo (self, num, out) {
    var a = self.words;
    var b = num.words;
    var o = out.words;
    var c = 0;
    var lo;
    var mid;
    var hi;
    var a0 = a[0] | 0;
    var al0 = a0 & 0x1fff;
    var ah0 = a0 >>> 13;
    var a1 = a[1] | 0;
    var al1 = a1 & 0x1fff;
    var ah1 = a1 >>> 13;
    var a2 = a[2] | 0;
    var al2 = a2 & 0x1fff;
    var ah2 = a2 >>> 13;
    var a3 = a[3] | 0;
    var al3 = a3 & 0x1fff;
    var ah3 = a3 >>> 13;
    var a4 = a[4] | 0;
    var al4 = a4 & 0x1fff;
    var ah4 = a4 >>> 13;
    var a5 = a[5] | 0;
    var al5 = a5 & 0x1fff;
    var ah5 = a5 >>> 13;
    var a6 = a[6] | 0;
    var al6 = a6 & 0x1fff;
    var ah6 = a6 >>> 13;
    var a7 = a[7] | 0;
    var al7 = a7 & 0x1fff;
    var ah7 = a7 >>> 13;
    var a8 = a[8] | 0;
    var al8 = a8 & 0x1fff;
    var ah8 = a8 >>> 13;
    var a9 = a[9] | 0;
    var al9 = a9 & 0x1fff;
    var ah9 = a9 >>> 13;
    var b0 = b[0] | 0;
    var bl0 = b0 & 0x1fff;
    var bh0 = b0 >>> 13;
    var b1 = b[1] | 0;
    var bl1 = b1 & 0x1fff;
    var bh1 = b1 >>> 13;
    var b2 = b[2] | 0;
    var bl2 = b2 & 0x1fff;
    var bh2 = b2 >>> 13;
    var b3 = b[3] | 0;
    var bl3 = b3 & 0x1fff;
    var bh3 = b3 >>> 13;
    var b4 = b[4] | 0;
    var bl4 = b4 & 0x1fff;
    var bh4 = b4 >>> 13;
    var b5 = b[5] | 0;
    var bl5 = b5 & 0x1fff;
    var bh5 = b5 >>> 13;
    var b6 = b[6] | 0;
    var bl6 = b6 & 0x1fff;
    var bh6 = b6 >>> 13;
    var b7 = b[7] | 0;
    var bl7 = b7 & 0x1fff;
    var bh7 = b7 >>> 13;
    var b8 = b[8] | 0;
    var bl8 = b8 & 0x1fff;
    var bh8 = b8 >>> 13;
    var b9 = b[9] | 0;
    var bl9 = b9 & 0x1fff;
    var bh9 = b9 >>> 13;

    out.negative = self.negative ^ num.negative;
    out.length = 19;
    /* k = 0 */
    lo = Math.imul(al0, bl0);
    mid = Math.imul(al0, bh0);
    mid = (mid + Math.imul(ah0, bl0)) | 0;
    hi = Math.imul(ah0, bh0);
    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;
    w0 &= 0x3ffffff;
    /* k = 1 */
    lo = Math.imul(al1, bl0);
    mid = Math.imul(al1, bh0);
    mid = (mid + Math.imul(ah1, bl0)) | 0;
    hi = Math.imul(ah1, bh0);
    lo = (lo + Math.imul(al0, bl1)) | 0;
    mid = (mid + Math.imul(al0, bh1)) | 0;
    mid = (mid + Math.imul(ah0, bl1)) | 0;
    hi = (hi + Math.imul(ah0, bh1)) | 0;
    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;
    w1 &= 0x3ffffff;
    /* k = 2 */
    lo = Math.imul(al2, bl0);
    mid = Math.imul(al2, bh0);
    mid = (mid + Math.imul(ah2, bl0)) | 0;
    hi = Math.imul(ah2, bh0);
    lo = (lo + Math.imul(al1, bl1)) | 0;
    mid = (mid + Math.imul(al1, bh1)) | 0;
    mid = (mid + Math.imul(ah1, bl1)) | 0;
    hi = (hi + Math.imul(ah1, bh1)) | 0;
    lo = (lo + Math.imul(al0, bl2)) | 0;
    mid = (mid + Math.imul(al0, bh2)) | 0;
    mid = (mid + Math.imul(ah0, bl2)) | 0;
    hi = (hi + Math.imul(ah0, bh2)) | 0;
    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;
    w2 &= 0x3ffffff;
    /* k = 3 */
    lo = Math.imul(al3, bl0);
    mid = Math.imul(al3, bh0);
    mid = (mid + Math.imul(ah3, bl0)) | 0;
    hi = Math.imul(ah3, bh0);
    lo = (lo + Math.imul(al2, bl1)) | 0;
    mid = (mid + Math.imul(al2, bh1)) | 0;
    mid = (mid + Math.imul(ah2, bl1)) | 0;
    hi = (hi + Math.imul(ah2, bh1)) | 0;
    lo = (lo + Math.imul(al1, bl2)) | 0;
    mid = (mid + Math.imul(al1, bh2)) | 0;
    mid = (mid + Math.imul(ah1, bl2)) | 0;
    hi = (hi + Math.imul(ah1, bh2)) | 0;
    lo = (lo + Math.imul(al0, bl3)) | 0;
    mid = (mid + Math.imul(al0, bh3)) | 0;
    mid = (mid + Math.imul(ah0, bl3)) | 0;
    hi = (hi + Math.imul(ah0, bh3)) | 0;
    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;
    w3 &= 0x3ffffff;
    /* k = 4 */
    lo = Math.imul(al4, bl0);
    mid = Math.imul(al4, bh0);
    mid = (mid + Math.imul(ah4, bl0)) | 0;
    hi = Math.imul(ah4, bh0);
    lo = (lo + Math.imul(al3, bl1)) | 0;
    mid = (mid + Math.imul(al3, bh1)) | 0;
    mid = (mid + Math.imul(ah3, bl1)) | 0;
    hi = (hi + Math.imul(ah3, bh1)) | 0;
    lo = (lo + Math.imul(al2, bl2)) | 0;
    mid = (mid + Math.imul(al2, bh2)) | 0;
    mid = (mid + Math.imul(ah2, bl2)) | 0;
    hi = (hi + Math.imul(ah2, bh2)) | 0;
    lo = (lo + Math.imul(al1, bl3)) | 0;
    mid = (mid + Math.imul(al1, bh3)) | 0;
    mid = (mid + Math.imul(ah1, bl3)) | 0;
    hi = (hi + Math.imul(ah1, bh3)) | 0;
    lo = (lo + Math.imul(al0, bl4)) | 0;
    mid = (mid + Math.imul(al0, bh4)) | 0;
    mid = (mid + Math.imul(ah0, bl4)) | 0;
    hi = (hi + Math.imul(ah0, bh4)) | 0;
    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;
    w4 &= 0x3ffffff;
    /* k = 5 */
    lo = Math.imul(al5, bl0);
    mid = Math.imul(al5, bh0);
    mid = (mid + Math.imul(ah5, bl0)) | 0;
    hi = Math.imul(ah5, bh0);
    lo = (lo + Math.imul(al4, bl1)) | 0;
    mid = (mid + Math.imul(al4, bh1)) | 0;
    mid = (mid + Math.imul(ah4, bl1)) | 0;
    hi = (hi + Math.imul(ah4, bh1)) | 0;
    lo = (lo + Math.imul(al3, bl2)) | 0;
    mid = (mid + Math.imul(al3, bh2)) | 0;
    mid = (mid + Math.imul(ah3, bl2)) | 0;
    hi = (hi + Math.imul(ah3, bh2)) | 0;
    lo = (lo + Math.imul(al2, bl3)) | 0;
    mid = (mid + Math.imul(al2, bh3)) | 0;
    mid = (mid + Math.imul(ah2, bl3)) | 0;
    hi = (hi + Math.imul(ah2, bh3)) | 0;
    lo = (lo + Math.imul(al1, bl4)) | 0;
    mid = (mid + Math.imul(al1, bh4)) | 0;
    mid = (mid + Math.imul(ah1, bl4)) | 0;
    hi = (hi + Math.imul(ah1, bh4)) | 0;
    lo = (lo + Math.imul(al0, bl5)) | 0;
    mid = (mid + Math.imul(al0, bh5)) | 0;
    mid = (mid + Math.imul(ah0, bl5)) | 0;
    hi = (hi + Math.imul(ah0, bh5)) | 0;
    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;
    w5 &= 0x3ffffff;
    /* k = 6 */
    lo = Math.imul(al6, bl0);
    mid = Math.imul(al6, bh0);
    mid = (mid + Math.imul(ah6, bl0)) | 0;
    hi = Math.imul(ah6, bh0);
    lo = (lo + Math.imul(al5, bl1)) | 0;
    mid = (mid + Math.imul(al5, bh1)) | 0;
    mid = (mid + Math.imul(ah5, bl1)) | 0;
    hi = (hi + Math.imul(ah5, bh1)) | 0;
    lo = (lo + Math.imul(al4, bl2)) | 0;
    mid = (mid + Math.imul(al4, bh2)) | 0;
    mid = (mid + Math.imul(ah4, bl2)) | 0;
    hi = (hi + Math.imul(ah4, bh2)) | 0;
    lo = (lo + Math.imul(al3, bl3)) | 0;
    mid = (mid + Math.imul(al3, bh3)) | 0;
    mid = (mid + Math.imul(ah3, bl3)) | 0;
    hi = (hi + Math.imul(ah3, bh3)) | 0;
    lo = (lo + Math.imul(al2, bl4)) | 0;
    mid = (mid + Math.imul(al2, bh4)) | 0;
    mid = (mid + Math.imul(ah2, bl4)) | 0;
    hi = (hi + Math.imul(ah2, bh4)) | 0;
    lo = (lo + Math.imul(al1, bl5)) | 0;
    mid = (mid + Math.imul(al1, bh5)) | 0;
    mid = (mid + Math.imul(ah1, bl5)) | 0;
    hi = (hi + Math.imul(ah1, bh5)) | 0;
    lo = (lo + Math.imul(al0, bl6)) | 0;
    mid = (mid + Math.imul(al0, bh6)) | 0;
    mid = (mid + Math.imul(ah0, bl6)) | 0;
    hi = (hi + Math.imul(ah0, bh6)) | 0;
    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;
    w6 &= 0x3ffffff;
    /* k = 7 */
    lo = Math.imul(al7, bl0);
    mid = Math.imul(al7, bh0);
    mid = (mid + Math.imul(ah7, bl0)) | 0;
    hi = Math.imul(ah7, bh0);
    lo = (lo + Math.imul(al6, bl1)) | 0;
    mid = (mid + Math.imul(al6, bh1)) | 0;
    mid = (mid + Math.imul(ah6, bl1)) | 0;
    hi = (hi + Math.imul(ah6, bh1)) | 0;
    lo = (lo + Math.imul(al5, bl2)) | 0;
    mid = (mid + Math.imul(al5, bh2)) | 0;
    mid = (mid + Math.imul(ah5, bl2)) | 0;
    hi = (hi + Math.imul(ah5, bh2)) | 0;
    lo = (lo + Math.imul(al4, bl3)) | 0;
    mid = (mid + Math.imul(al4, bh3)) | 0;
    mid = (mid + Math.imul(ah4, bl3)) | 0;
    hi = (hi + Math.imul(ah4, bh3)) | 0;
    lo = (lo + Math.imul(al3, bl4)) | 0;
    mid = (mid + Math.imul(al3, bh4)) | 0;
    mid = (mid + Math.imul(ah3, bl4)) | 0;
    hi = (hi + Math.imul(ah3, bh4)) | 0;
    lo = (lo + Math.imul(al2, bl5)) | 0;
    mid = (mid + Math.imul(al2, bh5)) | 0;
    mid = (mid + Math.imul(ah2, bl5)) | 0;
    hi = (hi + Math.imul(ah2, bh5)) | 0;
    lo = (lo + Math.imul(al1, bl6)) | 0;
    mid = (mid + Math.imul(al1, bh6)) | 0;
    mid = (mid + Math.imul(ah1, bl6)) | 0;
    hi = (hi + Math.imul(ah1, bh6)) | 0;
    lo = (lo + Math.imul(al0, bl7)) | 0;
    mid = (mid + Math.imul(al0, bh7)) | 0;
    mid = (mid + Math.imul(ah0, bl7)) | 0;
    hi = (hi + Math.imul(ah0, bh7)) | 0;
    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;
    w7 &= 0x3ffffff;
    /* k = 8 */
    lo = Math.imul(al8, bl0);
    mid = Math.imul(al8, bh0);
    mid = (mid + Math.imul(ah8, bl0)) | 0;
    hi = Math.imul(ah8, bh0);
    lo = (lo + Math.imul(al7, bl1)) | 0;
    mid = (mid + Math.imul(al7, bh1)) | 0;
    mid = (mid + Math.imul(ah7, bl1)) | 0;
    hi = (hi + Math.imul(ah7, bh1)) | 0;
    lo = (lo + Math.imul(al6, bl2)) | 0;
    mid = (mid + Math.imul(al6, bh2)) | 0;
    mid = (mid + Math.imul(ah6, bl2)) | 0;
    hi = (hi + Math.imul(ah6, bh2)) | 0;
    lo = (lo + Math.imul(al5, bl3)) | 0;
    mid = (mid + Math.imul(al5, bh3)) | 0;
    mid = (mid + Math.imul(ah5, bl3)) | 0;
    hi = (hi + Math.imul(ah5, bh3)) | 0;
    lo = (lo + Math.imul(al4, bl4)) | 0;
    mid = (mid + Math.imul(al4, bh4)) | 0;
    mid = (mid + Math.imul(ah4, bl4)) | 0;
    hi = (hi + Math.imul(ah4, bh4)) | 0;
    lo = (lo + Math.imul(al3, bl5)) | 0;
    mid = (mid + Math.imul(al3, bh5)) | 0;
    mid = (mid + Math.imul(ah3, bl5)) | 0;
    hi = (hi + Math.imul(ah3, bh5)) | 0;
    lo = (lo + Math.imul(al2, bl6)) | 0;
    mid = (mid + Math.imul(al2, bh6)) | 0;
    mid = (mid + Math.imul(ah2, bl6)) | 0;
    hi = (hi + Math.imul(ah2, bh6)) | 0;
    lo = (lo + Math.imul(al1, bl7)) | 0;
    mid = (mid + Math.imul(al1, bh7)) | 0;
    mid = (mid + Math.imul(ah1, bl7)) | 0;
    hi = (hi + Math.imul(ah1, bh7)) | 0;
    lo = (lo + Math.imul(al0, bl8)) | 0;
    mid = (mid + Math.imul(al0, bh8)) | 0;
    mid = (mid + Math.imul(ah0, bl8)) | 0;
    hi = (hi + Math.imul(ah0, bh8)) | 0;
    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;
    w8 &= 0x3ffffff;
    /* k = 9 */
    lo = Math.imul(al9, bl0);
    mid = Math.imul(al9, bh0);
    mid = (mid + Math.imul(ah9, bl0)) | 0;
    hi = Math.imul(ah9, bh0);
    lo = (lo + Math.imul(al8, bl1)) | 0;
    mid = (mid + Math.imul(al8, bh1)) | 0;
    mid = (mid + Math.imul(ah8, bl1)) | 0;
    hi = (hi + Math.imul(ah8, bh1)) | 0;
    lo = (lo + Math.imul(al7, bl2)) | 0;
    mid = (mid + Math.imul(al7, bh2)) | 0;
    mid = (mid + Math.imul(ah7, bl2)) | 0;
    hi = (hi + Math.imul(ah7, bh2)) | 0;
    lo = (lo + Math.imul(al6, bl3)) | 0;
    mid = (mid + Math.imul(al6, bh3)) | 0;
    mid = (mid + Math.imul(ah6, bl3)) | 0;
    hi = (hi + Math.imul(ah6, bh3)) | 0;
    lo = (lo + Math.imul(al5, bl4)) | 0;
    mid = (mid + Math.imul(al5, bh4)) | 0;
    mid = (mid + Math.imul(ah5, bl4)) | 0;
    hi = (hi + Math.imul(ah5, bh4)) | 0;
    lo = (lo + Math.imul(al4, bl5)) | 0;
    mid = (mid + Math.imul(al4, bh5)) | 0;
    mid = (mid + Math.imul(ah4, bl5)) | 0;
    hi = (hi + Math.imul(ah4, bh5)) | 0;
    lo = (lo + Math.imul(al3, bl6)) | 0;
    mid = (mid + Math.imul(al3, bh6)) | 0;
    mid = (mid + Math.imul(ah3, bl6)) | 0;
    hi = (hi + Math.imul(ah3, bh6)) | 0;
    lo = (lo + Math.imul(al2, bl7)) | 0;
    mid = (mid + Math.imul(al2, bh7)) | 0;
    mid = (mid + Math.imul(ah2, bl7)) | 0;
    hi = (hi + Math.imul(ah2, bh7)) | 0;
    lo = (lo + Math.imul(al1, bl8)) | 0;
    mid = (mid + Math.imul(al1, bh8)) | 0;
    mid = (mid + Math.imul(ah1, bl8)) | 0;
    hi = (hi + Math.imul(ah1, bh8)) | 0;
    lo = (lo + Math.imul(al0, bl9)) | 0;
    mid = (mid + Math.imul(al0, bh9)) | 0;
    mid = (mid + Math.imul(ah0, bl9)) | 0;
    hi = (hi + Math.imul(ah0, bh9)) | 0;
    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;
    w9 &= 0x3ffffff;
    /* k = 10 */
    lo = Math.imul(al9, bl1);
    mid = Math.imul(al9, bh1);
    mid = (mid + Math.imul(ah9, bl1)) | 0;
    hi = Math.imul(ah9, bh1);
    lo = (lo + Math.imul(al8, bl2)) | 0;
    mid = (mid + Math.imul(al8, bh2)) | 0;
    mid = (mid + Math.imul(ah8, bl2)) | 0;
    hi = (hi + Math.imul(ah8, bh2)) | 0;
    lo = (lo + Math.imul(al7, bl3)) | 0;
    mid = (mid + Math.imul(al7, bh3)) | 0;
    mid = (mid + Math.imul(ah7, bl3)) | 0;
    hi = (hi + Math.imul(ah7, bh3)) | 0;
    lo = (lo + Math.imul(al6, bl4)) | 0;
    mid = (mid + Math.imul(al6, bh4)) | 0;
    mid = (mid + Math.imul(ah6, bl4)) | 0;
    hi = (hi + Math.imul(ah6, bh4)) | 0;
    lo = (lo + Math.imul(al5, bl5)) | 0;
    mid = (mid + Math.imul(al5, bh5)) | 0;
    mid = (mid + Math.imul(ah5, bl5)) | 0;
    hi = (hi + Math.imul(ah5, bh5)) | 0;
    lo = (lo + Math.imul(al4, bl6)) | 0;
    mid = (mid + Math.imul(al4, bh6)) | 0;
    mid = (mid + Math.imul(ah4, bl6)) | 0;
    hi = (hi + Math.imul(ah4, bh6)) | 0;
    lo = (lo + Math.imul(al3, bl7)) | 0;
    mid = (mid + Math.imul(al3, bh7)) | 0;
    mid = (mid + Math.imul(ah3, bl7)) | 0;
    hi = (hi + Math.imul(ah3, bh7)) | 0;
    lo = (lo + Math.imul(al2, bl8)) | 0;
    mid = (mid + Math.imul(al2, bh8)) | 0;
    mid = (mid + Math.imul(ah2, bl8)) | 0;
    hi = (hi + Math.imul(ah2, bh8)) | 0;
    lo = (lo + Math.imul(al1, bl9)) | 0;
    mid = (mid + Math.imul(al1, bh9)) | 0;
    mid = (mid + Math.imul(ah1, bl9)) | 0;
    hi = (hi + Math.imul(ah1, bh9)) | 0;
    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;
    w10 &= 0x3ffffff;
    /* k = 11 */
    lo = Math.imul(al9, bl2);
    mid = Math.imul(al9, bh2);
    mid = (mid + Math.imul(ah9, bl2)) | 0;
    hi = Math.imul(ah9, bh2);
    lo = (lo + Math.imul(al8, bl3)) | 0;
    mid = (mid + Math.imul(al8, bh3)) | 0;
    mid = (mid + Math.imul(ah8, bl3)) | 0;
    hi = (hi + Math.imul(ah8, bh3)) | 0;
    lo = (lo + Math.imul(al7, bl4)) | 0;
    mid = (mid + Math.imul(al7, bh4)) | 0;
    mid = (mid + Math.imul(ah7, bl4)) | 0;
    hi = (hi + Math.imul(ah7, bh4)) | 0;
    lo = (lo + Math.imul(al6, bl5)) | 0;
    mid = (mid + Math.imul(al6, bh5)) | 0;
    mid = (mid + Math.imul(ah6, bl5)) | 0;
    hi = (hi + Math.imul(ah6, bh5)) | 0;
    lo = (lo + Math.imul(al5, bl6)) | 0;
    mid = (mid + Math.imul(al5, bh6)) | 0;
    mid = (mid + Math.imul(ah5, bl6)) | 0;
    hi = (hi + Math.imul(ah5, bh6)) | 0;
    lo = (lo + Math.imul(al4, bl7)) | 0;
    mid = (mid + Math.imul(al4, bh7)) | 0;
    mid = (mid + Math.imul(ah4, bl7)) | 0;
    hi = (hi + Math.imul(ah4, bh7)) | 0;
    lo = (lo + Math.imul(al3, bl8)) | 0;
    mid = (mid + Math.imul(al3, bh8)) | 0;
    mid = (mid + Math.imul(ah3, bl8)) | 0;
    hi = (hi + Math.imul(ah3, bh8)) | 0;
    lo = (lo + Math.imul(al2, bl9)) | 0;
    mid = (mid + Math.imul(al2, bh9)) | 0;
    mid = (mid + Math.imul(ah2, bl9)) | 0;
    hi = (hi + Math.imul(ah2, bh9)) | 0;
    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;
    w11 &= 0x3ffffff;
    /* k = 12 */
    lo = Math.imul(al9, bl3);
    mid = Math.imul(al9, bh3);
    mid = (mid + Math.imul(ah9, bl3)) | 0;
    hi = Math.imul(ah9, bh3);
    lo = (lo + Math.imul(al8, bl4)) | 0;
    mid = (mid + Math.imul(al8, bh4)) | 0;
    mid = (mid + Math.imul(ah8, bl4)) | 0;
    hi = (hi + Math.imul(ah8, bh4)) | 0;
    lo = (lo + Math.imul(al7, bl5)) | 0;
    mid = (mid + Math.imul(al7, bh5)) | 0;
    mid = (mid + Math.imul(ah7, bl5)) | 0;
    hi = (hi + Math.imul(ah7, bh5)) | 0;
    lo = (lo + Math.imul(al6, bl6)) | 0;
    mid = (mid + Math.imul(al6, bh6)) | 0;
    mid = (mid + Math.imul(ah6, bl6)) | 0;
    hi = (hi + Math.imul(ah6, bh6)) | 0;
    lo = (lo + Math.imul(al5, bl7)) | 0;
    mid = (mid + Math.imul(al5, bh7)) | 0;
    mid = (mid + Math.imul(ah5, bl7)) | 0;
    hi = (hi + Math.imul(ah5, bh7)) | 0;
    lo = (lo + Math.imul(al4, bl8)) | 0;
    mid = (mid + Math.imul(al4, bh8)) | 0;
    mid = (mid + Math.imul(ah4, bl8)) | 0;
    hi = (hi + Math.imul(ah4, bh8)) | 0;
    lo = (lo + Math.imul(al3, bl9)) | 0;
    mid = (mid + Math.imul(al3, bh9)) | 0;
    mid = (mid + Math.imul(ah3, bl9)) | 0;
    hi = (hi + Math.imul(ah3, bh9)) | 0;
    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;
    w12 &= 0x3ffffff;
    /* k = 13 */
    lo = Math.imul(al9, bl4);
    mid = Math.imul(al9, bh4);
    mid = (mid + Math.imul(ah9, bl4)) | 0;
    hi = Math.imul(ah9, bh4);
    lo = (lo + Math.imul(al8, bl5)) | 0;
    mid = (mid + Math.imul(al8, bh5)) | 0;
    mid = (mid + Math.imul(ah8, bl5)) | 0;
    hi = (hi + Math.imul(ah8, bh5)) | 0;
    lo = (lo + Math.imul(al7, bl6)) | 0;
    mid = (mid + Math.imul(al7, bh6)) | 0;
    mid = (mid + Math.imul(ah7, bl6)) | 0;
    hi = (hi + Math.imul(ah7, bh6)) | 0;
    lo = (lo + Math.imul(al6, bl7)) | 0;
    mid = (mid + Math.imul(al6, bh7)) | 0;
    mid = (mid + Math.imul(ah6, bl7)) | 0;
    hi = (hi + Math.imul(ah6, bh7)) | 0;
    lo = (lo + Math.imul(al5, bl8)) | 0;
    mid = (mid + Math.imul(al5, bh8)) | 0;
    mid = (mid + Math.imul(ah5, bl8)) | 0;
    hi = (hi + Math.imul(ah5, bh8)) | 0;
    lo = (lo + Math.imul(al4, bl9)) | 0;
    mid = (mid + Math.imul(al4, bh9)) | 0;
    mid = (mid + Math.imul(ah4, bl9)) | 0;
    hi = (hi + Math.imul(ah4, bh9)) | 0;
    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;
    w13 &= 0x3ffffff;
    /* k = 14 */
    lo = Math.imul(al9, bl5);
    mid = Math.imul(al9, bh5);
    mid = (mid + Math.imul(ah9, bl5)) | 0;
    hi = Math.imul(ah9, bh5);
    lo = (lo + Math.imul(al8, bl6)) | 0;
    mid = (mid + Math.imul(al8, bh6)) | 0;
    mid = (mid + Math.imul(ah8, bl6)) | 0;
    hi = (hi + Math.imul(ah8, bh6)) | 0;
    lo = (lo + Math.imul(al7, bl7)) | 0;
    mid = (mid + Math.imul(al7, bh7)) | 0;
    mid = (mid + Math.imul(ah7, bl7)) | 0;
    hi = (hi + Math.imul(ah7, bh7)) | 0;
    lo = (lo + Math.imul(al6, bl8)) | 0;
    mid = (mid + Math.imul(al6, bh8)) | 0;
    mid = (mid + Math.imul(ah6, bl8)) | 0;
    hi = (hi + Math.imul(ah6, bh8)) | 0;
    lo = (lo + Math.imul(al5, bl9)) | 0;
    mid = (mid + Math.imul(al5, bh9)) | 0;
    mid = (mid + Math.imul(ah5, bl9)) | 0;
    hi = (hi + Math.imul(ah5, bh9)) | 0;
    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;
    w14 &= 0x3ffffff;
    /* k = 15 */
    lo = Math.imul(al9, bl6);
    mid = Math.imul(al9, bh6);
    mid = (mid + Math.imul(ah9, bl6)) | 0;
    hi = Math.imul(ah9, bh6);
    lo = (lo + Math.imul(al8, bl7)) | 0;
    mid = (mid + Math.imul(al8, bh7)) | 0;
    mid = (mid + Math.imul(ah8, bl7)) | 0;
    hi = (hi + Math.imul(ah8, bh7)) | 0;
    lo = (lo + Math.imul(al7, bl8)) | 0;
    mid = (mid + Math.imul(al7, bh8)) | 0;
    mid = (mid + Math.imul(ah7, bl8)) | 0;
    hi = (hi + Math.imul(ah7, bh8)) | 0;
    lo = (lo + Math.imul(al6, bl9)) | 0;
    mid = (mid + Math.imul(al6, bh9)) | 0;
    mid = (mid + Math.imul(ah6, bl9)) | 0;
    hi = (hi + Math.imul(ah6, bh9)) | 0;
    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;
    w15 &= 0x3ffffff;
    /* k = 16 */
    lo = Math.imul(al9, bl7);
    mid = Math.imul(al9, bh7);
    mid = (mid + Math.imul(ah9, bl7)) | 0;
    hi = Math.imul(ah9, bh7);
    lo = (lo + Math.imul(al8, bl8)) | 0;
    mid = (mid + Math.imul(al8, bh8)) | 0;
    mid = (mid + Math.imul(ah8, bl8)) | 0;
    hi = (hi + Math.imul(ah8, bh8)) | 0;
    lo = (lo + Math.imul(al7, bl9)) | 0;
    mid = (mid + Math.imul(al7, bh9)) | 0;
    mid = (mid + Math.imul(ah7, bl9)) | 0;
    hi = (hi + Math.imul(ah7, bh9)) | 0;
    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;
    w16 &= 0x3ffffff;
    /* k = 17 */
    lo = Math.imul(al9, bl8);
    mid = Math.imul(al9, bh8);
    mid = (mid + Math.imul(ah9, bl8)) | 0;
    hi = Math.imul(ah9, bh8);
    lo = (lo + Math.imul(al8, bl9)) | 0;
    mid = (mid + Math.imul(al8, bh9)) | 0;
    mid = (mid + Math.imul(ah8, bl9)) | 0;
    hi = (hi + Math.imul(ah8, bh9)) | 0;
    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;
    w17 &= 0x3ffffff;
    /* k = 18 */
    lo = Math.imul(al9, bl9);
    mid = Math.imul(al9, bh9);
    mid = (mid + Math.imul(ah9, bl9)) | 0;
    hi = Math.imul(ah9, bh9);
    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;
    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;
    w18 &= 0x3ffffff;
    o[0] = w0;
    o[1] = w1;
    o[2] = w2;
    o[3] = w3;
    o[4] = w4;
    o[5] = w5;
    o[6] = w6;
    o[7] = w7;
    o[8] = w8;
    o[9] = w9;
    o[10] = w10;
    o[11] = w11;
    o[12] = w12;
    o[13] = w13;
    o[14] = w14;
    o[15] = w15;
    o[16] = w16;
    o[17] = w17;
    o[18] = w18;
    if (c !== 0) {
      o[19] = c;
      out.length++;
    }
    return out;
  };

  // Polyfill comb
  if (!Math.imul) {
    comb10MulTo = smallMulTo;
  }

  function bigMulTo (self, num, out) {
    out.negative = num.negative ^ self.negative;
    out.length = self.length + num.length;

    var carry = 0;
    var hncarry = 0;
    for (var k = 0; k < out.length - 1; k++) {
      // Sum all words with the same `i + j = k` and accumulate `ncarry`,
      // note that ncarry could be >= 0x3ffffff
      var ncarry = hncarry;
      hncarry = 0;
      var rword = carry & 0x3ffffff;
      var maxJ = Math.min(k, num.length - 1);
      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {
        var i = k - j;
        var a = self.words[i] | 0;
        var b = num.words[j] | 0;
        var r = a * b;

        var lo = r & 0x3ffffff;
        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;
        lo = (lo + rword) | 0;
        rword = lo & 0x3ffffff;
        ncarry = (ncarry + (lo >>> 26)) | 0;

        hncarry += ncarry >>> 26;
        ncarry &= 0x3ffffff;
      }
      out.words[k] = rword;
      carry = ncarry;
      ncarry = hncarry;
    }
    if (carry !== 0) {
      out.words[k] = carry;
    } else {
      out.length--;
    }

    return out.strip();
  }

  function jumboMulTo (self, num, out) {
    var fftm = new FFTM();
    return fftm.mulp(self, num, out);
  }

  BN.prototype.mulTo = function mulTo (num, out) {
    var res;
    var len = this.length + num.length;
    if (this.length === 10 && num.length === 10) {
      res = comb10MulTo(this, num, out);
    } else if (len < 63) {
      res = smallMulTo(this, num, out);
    } else if (len < 1024) {
      res = bigMulTo(this, num, out);
    } else {
      res = jumboMulTo(this, num, out);
    }

    return res;
  };

  // Cooley-Tukey algorithm for FFT
  // slightly revisited to rely on looping instead of recursion

  function FFTM (x, y) {
    this.x = x;
    this.y = y;
  }

  FFTM.prototype.makeRBT = function makeRBT (N) {
    var t = new Array(N);
    var l = BN.prototype._countBits(N) - 1;
    for (var i = 0; i < N; i++) {
      t[i] = this.revBin(i, l, N);
    }

    return t;
  };

  // Returns binary-reversed representation of `x`
  FFTM.prototype.revBin = function revBin (x, l, N) {
    if (x === 0 || x === N - 1) return x;

    var rb = 0;
    for (var i = 0; i < l; i++) {
      rb |= (x & 1) << (l - i - 1);
      x >>= 1;
    }

    return rb;
  };

  // Performs "tweedling" phase, therefore 'emulating'
  // behaviour of the recursive algorithm
  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {
    for (var i = 0; i < N; i++) {
      rtws[i] = rws[rbt[i]];
      itws[i] = iws[rbt[i]];
    }
  };

  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {
    this.permute(rbt, rws, iws, rtws, itws, N);

    for (var s = 1; s < N; s <<= 1) {
      var l = s << 1;

      var rtwdf = Math.cos(2 * Math.PI / l);
      var itwdf = Math.sin(2 * Math.PI / l);

      for (var p = 0; p < N; p += l) {
        var rtwdf_ = rtwdf;
        var itwdf_ = itwdf;

        for (var j = 0; j < s; j++) {
          var re = rtws[p + j];
          var ie = itws[p + j];

          var ro = rtws[p + j + s];
          var io = itws[p + j + s];

          var rx = rtwdf_ * ro - itwdf_ * io;

          io = rtwdf_ * io + itwdf_ * ro;
          ro = rx;

          rtws[p + j] = re + ro;
          itws[p + j] = ie + io;

          rtws[p + j + s] = re - ro;
          itws[p + j + s] = ie - io;

          /* jshint maxdepth : false */
          if (j !== l) {
            rx = rtwdf * rtwdf_ - itwdf * itwdf_;

            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;
            rtwdf_ = rx;
          }
        }
      }
    }
  };

  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {
    var N = Math.max(m, n) | 1;
    var odd = N & 1;
    var i = 0;
    for (N = N / 2 | 0; N; N = N >>> 1) {
      i++;
    }

    return 1 << i + 1 + odd;
  };

  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {
    if (N <= 1) return;

    for (var i = 0; i < N / 2; i++) {
      var t = rws[i];

      rws[i] = rws[N - i - 1];
      rws[N - i - 1] = t;

      t = iws[i];

      iws[i] = -iws[N - i - 1];
      iws[N - i - 1] = -t;
    }
  };

  FFTM.prototype.normalize13b = function normalize13b (ws, N) {
    var carry = 0;
    for (var i = 0; i < N / 2; i++) {
      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +
        Math.round(ws[2 * i] / N) +
        carry;

      ws[i] = w & 0x3ffffff;

      if (w < 0x4000000) {
        carry = 0;
      } else {
        carry = w / 0x4000000 | 0;
      }
    }

    return ws;
  };

  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {
    var carry = 0;
    for (var i = 0; i < len; i++) {
      carry = carry + (ws[i] | 0);

      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;
      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;
    }

    // Pad with zeroes
    for (i = 2 * len; i < N; ++i) {
      rws[i] = 0;
    }

    assert(carry === 0);
    assert((carry & ~0x1fff) === 0);
  };

  FFTM.prototype.stub = function stub (N) {
    var ph = new Array(N);
    for (var i = 0; i < N; i++) {
      ph[i] = 0;
    }

    return ph;
  };

  FFTM.prototype.mulp = function mulp (x, y, out) {
    var N = 2 * this.guessLen13b(x.length, y.length);

    var rbt = this.makeRBT(N);

    var _ = this.stub(N);

    var rws = new Array(N);
    var rwst = new Array(N);
    var iwst = new Array(N);

    var nrws = new Array(N);
    var nrwst = new Array(N);
    var niwst = new Array(N);

    var rmws = out.words;
    rmws.length = N;

    this.convert13b(x.words, x.length, rws, N);
    this.convert13b(y.words, y.length, nrws, N);

    this.transform(rws, _, rwst, iwst, N, rbt);
    this.transform(nrws, _, nrwst, niwst, N, rbt);

    for (var i = 0; i < N; i++) {
      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];
      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];
      rwst[i] = rx;
    }

    this.conjugate(rwst, iwst, N);
    this.transform(rwst, iwst, rmws, _, N, rbt);
    this.conjugate(rmws, _, N);
    this.normalize13b(rmws, N);

    out.negative = x.negative ^ y.negative;
    out.length = x.length + y.length;
    return out.strip();
  };

  // Multiply `this` by `num`
  BN.prototype.mul = function mul (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return this.mulTo(num, out);
  };

  // Multiply employing FFT
  BN.prototype.mulf = function mulf (num) {
    var out = new BN(null);
    out.words = new Array(this.length + num.length);
    return jumboMulTo(this, num, out);
  };

  // In-place Multiplication
  BN.prototype.imul = function imul (num) {
    return this.clone().mulTo(num, this);
  };

  BN.prototype.imuln = function imuln (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);

    // Carry
    var carry = 0;
    for (var i = 0; i < this.length; i++) {
      var w = (this.words[i] | 0) * num;
      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);
      carry >>= 26;
      carry += (w / 0x4000000) | 0;
      // NOTE: lo is 27bit maximum
      carry += lo >>> 26;
      this.words[i] = lo & 0x3ffffff;
    }

    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }

    return this;
  };

  BN.prototype.muln = function muln (num) {
    return this.clone().imuln(num);
  };

  // `this` * `this`
  BN.prototype.sqr = function sqr () {
    return this.mul(this);
  };

  // `this` * `this` in-place
  BN.prototype.isqr = function isqr () {
    return this.imul(this.clone());
  };

  // Math.pow(`this`, `num`)
  BN.prototype.pow = function pow (num) {
    var w = toBitArray(num);
    if (w.length === 0) return new BN(1);

    // Skip leading zeroes
    var res = this;
    for (var i = 0; i < w.length; i++, res = res.sqr()) {
      if (w[i] !== 0) break;
    }

    if (++i < w.length) {
      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {
        if (w[i] === 0) continue;

        res = res.mul(q);
      }
    }

    return res;
  };

  // Shift-left in-place
  BN.prototype.iushln = function iushln (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;
    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);
    var i;

    if (r !== 0) {
      var carry = 0;

      for (i = 0; i < this.length; i++) {
        var newCarry = this.words[i] & carryMask;
        var c = ((this.words[i] | 0) - newCarry) << r;
        this.words[i] = c | carry;
        carry = newCarry >>> (26 - r);
      }

      if (carry) {
        this.words[i] = carry;
        this.length++;
      }
    }

    if (s !== 0) {
      for (i = this.length - 1; i >= 0; i--) {
        this.words[i + s] = this.words[i];
      }

      for (i = 0; i < s; i++) {
        this.words[i] = 0;
      }

      this.length += s;
    }

    return this.strip();
  };

  BN.prototype.ishln = function ishln (bits) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushln(bits);
  };

  // Shift-right in-place
  // NOTE: `hint` is a lowest bit before trailing zeroes
  // NOTE: if `extended` is present - it will be filled with destroyed bits
  BN.prototype.iushrn = function iushrn (bits, hint, extended) {
    assert(typeof bits === 'number' && bits >= 0);
    var h;
    if (hint) {
      h = (hint - (hint % 26)) / 26;
    } else {
      h = 0;
    }

    var r = bits % 26;
    var s = Math.min((bits - r) / 26, this.length);
    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
    var maskedWords = extended;

    h -= s;
    h = Math.max(0, h);

    // Extended mode, copy masked part
    if (maskedWords) {
      for (var i = 0; i < s; i++) {
        maskedWords.words[i] = this.words[i];
      }
      maskedWords.length = s;
    }

    if (s === 0) {
      // No-op, we should not move anything at all
    } else if (this.length > s) {
      this.length -= s;
      for (i = 0; i < this.length; i++) {
        this.words[i] = this.words[i + s];
      }
    } else {
      this.words[0] = 0;
      this.length = 1;
    }

    var carry = 0;
    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {
      var word = this.words[i] | 0;
      this.words[i] = (carry << (26 - r)) | (word >>> r);
      carry = word & mask;
    }

    // Push carried bits as a mask
    if (maskedWords && carry !== 0) {
      maskedWords.words[maskedWords.length++] = carry;
    }

    if (this.length === 0) {
      this.words[0] = 0;
      this.length = 1;
    }

    return this.strip();
  };

  BN.prototype.ishrn = function ishrn (bits, hint, extended) {
    // TODO(indutny): implement me
    assert(this.negative === 0);
    return this.iushrn(bits, hint, extended);
  };

  // Shift-left
  BN.prototype.shln = function shln (bits) {
    return this.clone().ishln(bits);
  };

  BN.prototype.ushln = function ushln (bits) {
    return this.clone().iushln(bits);
  };

  // Shift-right
  BN.prototype.shrn = function shrn (bits) {
    return this.clone().ishrn(bits);
  };

  BN.prototype.ushrn = function ushrn (bits) {
    return this.clone().iushrn(bits);
  };

  // Test if n bit is set
  BN.prototype.testn = function testn (bit) {
    assert(typeof bit === 'number' && bit >= 0);
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) return false;

    // Check bit and return
    var w = this.words[s];

    return !!(w & q);
  };

  // Return only lowers bits of number (in-place)
  BN.prototype.imaskn = function imaskn (bits) {
    assert(typeof bits === 'number' && bits >= 0);
    var r = bits % 26;
    var s = (bits - r) / 26;

    assert(this.negative === 0, 'imaskn works only with positive numbers');

    if (this.length <= s) {
      return this;
    }

    if (r !== 0) {
      s++;
    }
    this.length = Math.min(s, this.length);

    if (r !== 0) {
      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);
      this.words[this.length - 1] &= mask;
    }

    return this.strip();
  };

  // Return only lowers bits of number
  BN.prototype.maskn = function maskn (bits) {
    return this.clone().imaskn(bits);
  };

  // Add plain number `num` to `this`
  BN.prototype.iaddn = function iaddn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.isubn(-num);

    // Possible sign change
    if (this.negative !== 0) {
      if (this.length === 1 && (this.words[0] | 0) < num) {
        this.words[0] = num - (this.words[0] | 0);
        this.negative = 0;
        return this;
      }

      this.negative = 0;
      this.isubn(num);
      this.negative = 1;
      return this;
    }

    // Add without checks
    return this._iaddn(num);
  };

  BN.prototype._iaddn = function _iaddn (num) {
    this.words[0] += num;

    // Carry
    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {
      this.words[i] -= 0x4000000;
      if (i === this.length - 1) {
        this.words[i + 1] = 1;
      } else {
        this.words[i + 1]++;
      }
    }
    this.length = Math.max(this.length, i + 1);

    return this;
  };

  // Subtract plain number `num` from `this`
  BN.prototype.isubn = function isubn (num) {
    assert(typeof num === 'number');
    assert(num < 0x4000000);
    if (num < 0) return this.iaddn(-num);

    if (this.negative !== 0) {
      this.negative = 0;
      this.iaddn(num);
      this.negative = 1;
      return this;
    }

    this.words[0] -= num;

    if (this.length === 1 && this.words[0] < 0) {
      this.words[0] = -this.words[0];
      this.negative = 1;
    } else {
      // Carry
      for (var i = 0; i < this.length && this.words[i] < 0; i++) {
        this.words[i] += 0x4000000;
        this.words[i + 1] -= 1;
      }
    }

    return this.strip();
  };

  BN.prototype.addn = function addn (num) {
    return this.clone().iaddn(num);
  };

  BN.prototype.subn = function subn (num) {
    return this.clone().isubn(num);
  };

  BN.prototype.iabs = function iabs () {
    this.negative = 0;

    return this;
  };

  BN.prototype.abs = function abs () {
    return this.clone().iabs();
  };

  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {
    var len = num.length + shift;
    var i;

    this._expand(len);

    var w;
    var carry = 0;
    for (i = 0; i < num.length; i++) {
      w = (this.words[i + shift] | 0) + carry;
      var right = (num.words[i] | 0) * mul;
      w -= right & 0x3ffffff;
      carry = (w >> 26) - ((right / 0x4000000) | 0);
      this.words[i + shift] = w & 0x3ffffff;
    }
    for (; i < this.length - shift; i++) {
      w = (this.words[i + shift] | 0) + carry;
      carry = w >> 26;
      this.words[i + shift] = w & 0x3ffffff;
    }

    if (carry === 0) return this.strip();

    // Subtraction overflow
    assert(carry === -1);
    carry = 0;
    for (i = 0; i < this.length; i++) {
      w = -(this.words[i] | 0) + carry;
      carry = w >> 26;
      this.words[i] = w & 0x3ffffff;
    }
    this.negative = 1;

    return this.strip();
  };

  BN.prototype._wordDiv = function _wordDiv (num, mode) {
    var shift = this.length - num.length;

    var a = this.clone();
    var b = num;

    // Normalize
    var bhi = b.words[b.length - 1] | 0;
    var bhiBits = this._countBits(bhi);
    shift = 26 - bhiBits;
    if (shift !== 0) {
      b = b.ushln(shift);
      a.iushln(shift);
      bhi = b.words[b.length - 1] | 0;
    }

    // Initialize quotient
    var m = a.length - b.length;
    var q;

    if (mode !== 'mod') {
      q = new BN(null);
      q.length = m + 1;
      q.words = new Array(q.length);
      for (var i = 0; i < q.length; i++) {
        q.words[i] = 0;
      }
    }

    var diff = a.clone()._ishlnsubmul(b, 1, m);
    if (diff.negative === 0) {
      a = diff;
      if (q) {
        q.words[m] = 1;
      }
    }

    for (var j = m - 1; j >= 0; j--) {
      var qj = (a.words[b.length + j] | 0) * 0x4000000 +
        (a.words[b.length + j - 1] | 0);

      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max
      // (0x7ffffff)
      qj = Math.min((qj / bhi) | 0, 0x3ffffff);

      a._ishlnsubmul(b, qj, j);
      while (a.negative !== 0) {
        qj--;
        a.negative = 0;
        a._ishlnsubmul(b, 1, j);
        if (!a.isZero()) {
          a.negative ^= 1;
        }
      }
      if (q) {
        q.words[j] = qj;
      }
    }
    if (q) {
      q.strip();
    }
    a.strip();

    // Denormalize
    if (mode !== 'div' && shift !== 0) {
      a.iushrn(shift);
    }

    return {
      div: q || null,
      mod: a
    };
  };

  // NOTE: 1) `mode` can be set to `mod` to request mod only,
  //       to `div` to request div only, or be absent to
  //       request both div & mod
  //       2) `positive` is true if unsigned mod is requested
  BN.prototype.divmod = function divmod (num, mode, positive) {
    assert(!num.isZero());

    if (this.isZero()) {
      return {
        div: new BN(0),
        mod: new BN(0)
      };
    }

    var div, mod, res;
    if (this.negative !== 0 && num.negative === 0) {
      res = this.neg().divmod(num, mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.iadd(num);
        }
      }

      return {
        div: div,
        mod: mod
      };
    }

    if (this.negative === 0 && num.negative !== 0) {
      res = this.divmod(num.neg(), mode);

      if (mode !== 'mod') {
        div = res.div.neg();
      }

      return {
        div: div,
        mod: res.mod
      };
    }

    if ((this.negative & num.negative) !== 0) {
      res = this.neg().divmod(num.neg(), mode);

      if (mode !== 'div') {
        mod = res.mod.neg();
        if (positive && mod.negative !== 0) {
          mod.isub(num);
        }
      }

      return {
        div: res.div,
        mod: mod
      };
    }

    // Both numbers are positive at this point

    // Strip both numbers to approximate shift value
    if (num.length > this.length || this.cmp(num) < 0) {
      return {
        div: new BN(0),
        mod: this
      };
    }

    // Very short reduction
    if (num.length === 1) {
      if (mode === 'div') {
        return {
          div: this.divn(num.words[0]),
          mod: null
        };
      }

      if (mode === 'mod') {
        return {
          div: null,
          mod: new BN(this.modn(num.words[0]))
        };
      }

      return {
        div: this.divn(num.words[0]),
        mod: new BN(this.modn(num.words[0]))
      };
    }

    return this._wordDiv(num, mode);
  };

  // Find `this` / `num`
  BN.prototype.div = function div (num) {
    return this.divmod(num, 'div', false).div;
  };

  // Find `this` % `num`
  BN.prototype.mod = function mod (num) {
    return this.divmod(num, 'mod', false).mod;
  };

  BN.prototype.umod = function umod (num) {
    return this.divmod(num, 'mod', true).mod;
  };

  // Find Round(`this` / `num`)
  BN.prototype.divRound = function divRound (num) {
    var dm = this.divmod(num);

    // Fast case - exact division
    if (dm.mod.isZero()) return dm.div;

    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;

    var half = num.ushrn(1);
    var r2 = num.andln(1);
    var cmp = mod.cmp(half);

    // Round down
    if (cmp < 0 || r2 === 1 && cmp === 0) return dm.div;

    // Round up
    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);
  };

  BN.prototype.modn = function modn (num) {
    assert(num <= 0x3ffffff);
    var p = (1 << 26) % num;

    var acc = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      acc = (p * acc + (this.words[i] | 0)) % num;
    }

    return acc;
  };

  // In-place division by number
  BN.prototype.idivn = function idivn (num) {
    assert(num <= 0x3ffffff);

    var carry = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var w = (this.words[i] | 0) + carry * 0x4000000;
      this.words[i] = (w / num) | 0;
      carry = w % num;
    }

    return this.strip();
  };

  BN.prototype.divn = function divn (num) {
    return this.clone().idivn(num);
  };

  BN.prototype.egcd = function egcd (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var x = this;
    var y = p.clone();

    if (x.negative !== 0) {
      x = x.umod(p);
    } else {
      x = x.clone();
    }

    // A * x + B * y = x
    var A = new BN(1);
    var B = new BN(0);

    // C * x + D * y = y
    var C = new BN(0);
    var D = new BN(1);

    var g = 0;

    while (x.isEven() && y.isEven()) {
      x.iushrn(1);
      y.iushrn(1);
      ++g;
    }

    var yp = y.clone();
    var xp = x.clone();

    while (!x.isZero()) {
      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        x.iushrn(i);
        while (i-- > 0) {
          if (A.isOdd() || B.isOdd()) {
            A.iadd(yp);
            B.isub(xp);
          }

          A.iushrn(1);
          B.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        y.iushrn(j);
        while (j-- > 0) {
          if (C.isOdd() || D.isOdd()) {
            C.iadd(yp);
            D.isub(xp);
          }

          C.iushrn(1);
          D.iushrn(1);
        }
      }

      if (x.cmp(y) >= 0) {
        x.isub(y);
        A.isub(C);
        B.isub(D);
      } else {
        y.isub(x);
        C.isub(A);
        D.isub(B);
      }
    }

    return {
      a: C,
      b: D,
      gcd: y.iushln(g)
    };
  };

  // This is reduced incarnation of the binary EEA
  // above, designated to invert members of the
  // _prime_ fields F(p) at a maximal speed
  BN.prototype._invmp = function _invmp (p) {
    assert(p.negative === 0);
    assert(!p.isZero());

    var a = this;
    var b = p.clone();

    if (a.negative !== 0) {
      a = a.umod(p);
    } else {
      a = a.clone();
    }

    var x1 = new BN(1);
    var x2 = new BN(0);

    var delta = b.clone();

    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {
      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);
      if (i > 0) {
        a.iushrn(i);
        while (i-- > 0) {
          if (x1.isOdd()) {
            x1.iadd(delta);
          }

          x1.iushrn(1);
        }
      }

      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);
      if (j > 0) {
        b.iushrn(j);
        while (j-- > 0) {
          if (x2.isOdd()) {
            x2.iadd(delta);
          }

          x2.iushrn(1);
        }
      }

      if (a.cmp(b) >= 0) {
        a.isub(b);
        x1.isub(x2);
      } else {
        b.isub(a);
        x2.isub(x1);
      }
    }

    var res;
    if (a.cmpn(1) === 0) {
      res = x1;
    } else {
      res = x2;
    }

    if (res.cmpn(0) < 0) {
      res.iadd(p);
    }

    return res;
  };

  BN.prototype.gcd = function gcd (num) {
    if (this.isZero()) return num.abs();
    if (num.isZero()) return this.abs();

    var a = this.clone();
    var b = num.clone();
    a.negative = 0;
    b.negative = 0;

    // Remove common factor of two
    for (var shift = 0; a.isEven() && b.isEven(); shift++) {
      a.iushrn(1);
      b.iushrn(1);
    }

    do {
      while (a.isEven()) {
        a.iushrn(1);
      }
      while (b.isEven()) {
        b.iushrn(1);
      }

      var r = a.cmp(b);
      if (r < 0) {
        // Swap `a` and `b` to make `a` always bigger than `b`
        var t = a;
        a = b;
        b = t;
      } else if (r === 0 || b.cmpn(1) === 0) {
        break;
      }

      a.isub(b);
    } while (true);

    return b.iushln(shift);
  };

  // Invert number in the field F(num)
  BN.prototype.invm = function invm (num) {
    return this.egcd(num).a.umod(num);
  };

  BN.prototype.isEven = function isEven () {
    return (this.words[0] & 1) === 0;
  };

  BN.prototype.isOdd = function isOdd () {
    return (this.words[0] & 1) === 1;
  };

  // And first word and num
  BN.prototype.andln = function andln (num) {
    return this.words[0] & num;
  };

  // Increment at the bit position in-line
  BN.prototype.bincn = function bincn (bit) {
    assert(typeof bit === 'number');
    var r = bit % 26;
    var s = (bit - r) / 26;
    var q = 1 << r;

    // Fast case: bit is much higher than all existing words
    if (this.length <= s) {
      this._expand(s + 1);
      this.words[s] |= q;
      return this;
    }

    // Add bit and propagate, if needed
    var carry = q;
    for (var i = s; carry !== 0 && i < this.length; i++) {
      var w = this.words[i] | 0;
      w += carry;
      carry = w >>> 26;
      w &= 0x3ffffff;
      this.words[i] = w;
    }
    if (carry !== 0) {
      this.words[i] = carry;
      this.length++;
    }
    return this;
  };

  BN.prototype.isZero = function isZero () {
    return this.length === 1 && this.words[0] === 0;
  };

  BN.prototype.cmpn = function cmpn (num) {
    var negative = num < 0;

    if (this.negative !== 0 && !negative) return -1;
    if (this.negative === 0 && negative) return 1;

    this.strip();

    var res;
    if (this.length > 1) {
      res = 1;
    } else {
      if (negative) {
        num = -num;
      }

      assert(num <= 0x3ffffff, 'Number is too big');

      var w = this.words[0] | 0;
      res = w === num ? 0 : w < num ? -1 : 1;
    }
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Compare two numbers and return:
  // 1 - if `this` > `num`
  // 0 - if `this` == `num`
  // -1 - if `this` < `num`
  BN.prototype.cmp = function cmp (num) {
    if (this.negative !== 0 && num.negative === 0) return -1;
    if (this.negative === 0 && num.negative !== 0) return 1;

    var res = this.ucmp(num);
    if (this.negative !== 0) return -res | 0;
    return res;
  };

  // Unsigned comparison
  BN.prototype.ucmp = function ucmp (num) {
    // At this point both numbers have the same sign
    if (this.length > num.length) return 1;
    if (this.length < num.length) return -1;

    var res = 0;
    for (var i = this.length - 1; i >= 0; i--) {
      var a = this.words[i] | 0;
      var b = num.words[i] | 0;

      if (a === b) continue;
      if (a < b) {
        res = -1;
      } else if (a > b) {
        res = 1;
      }
      break;
    }
    return res;
  };

  BN.prototype.gtn = function gtn (num) {
    return this.cmpn(num) === 1;
  };

  BN.prototype.gt = function gt (num) {
    return this.cmp(num) === 1;
  };

  BN.prototype.gten = function gten (num) {
    return this.cmpn(num) >= 0;
  };

  BN.prototype.gte = function gte (num) {
    return this.cmp(num) >= 0;
  };

  BN.prototype.ltn = function ltn (num) {
    return this.cmpn(num) === -1;
  };

  BN.prototype.lt = function lt (num) {
    return this.cmp(num) === -1;
  };

  BN.prototype.lten = function lten (num) {
    return this.cmpn(num) <= 0;
  };

  BN.prototype.lte = function lte (num) {
    return this.cmp(num) <= 0;
  };

  BN.prototype.eqn = function eqn (num) {
    return this.cmpn(num) === 0;
  };

  BN.prototype.eq = function eq (num) {
    return this.cmp(num) === 0;
  };

  //
  // A reduce context, could be using montgomery or something better, depending
  // on the `m` itself.
  //
  BN.red = function red (num) {
    return new Red(num);
  };

  BN.prototype.toRed = function toRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    assert(this.negative === 0, 'red works only with positives');
    return ctx.convertTo(this)._forceRed(ctx);
  };

  BN.prototype.fromRed = function fromRed () {
    assert(this.red, 'fromRed works only with numbers in reduction context');
    return this.red.convertFrom(this);
  };

  BN.prototype._forceRed = function _forceRed (ctx) {
    this.red = ctx;
    return this;
  };

  BN.prototype.forceRed = function forceRed (ctx) {
    assert(!this.red, 'Already a number in reduction context');
    return this._forceRed(ctx);
  };

  BN.prototype.redAdd = function redAdd (num) {
    assert(this.red, 'redAdd works only with red numbers');
    return this.red.add(this, num);
  };

  BN.prototype.redIAdd = function redIAdd (num) {
    assert(this.red, 'redIAdd works only with red numbers');
    return this.red.iadd(this, num);
  };

  BN.prototype.redSub = function redSub (num) {
    assert(this.red, 'redSub works only with red numbers');
    return this.red.sub(this, num);
  };

  BN.prototype.redISub = function redISub (num) {
    assert(this.red, 'redISub works only with red numbers');
    return this.red.isub(this, num);
  };

  BN.prototype.redShl = function redShl (num) {
    assert(this.red, 'redShl works only with red numbers');
    return this.red.shl(this, num);
  };

  BN.prototype.redMul = function redMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.mul(this, num);
  };

  BN.prototype.redIMul = function redIMul (num) {
    assert(this.red, 'redMul works only with red numbers');
    this.red._verify2(this, num);
    return this.red.imul(this, num);
  };

  BN.prototype.redSqr = function redSqr () {
    assert(this.red, 'redSqr works only with red numbers');
    this.red._verify1(this);
    return this.red.sqr(this);
  };

  BN.prototype.redISqr = function redISqr () {
    assert(this.red, 'redISqr works only with red numbers');
    this.red._verify1(this);
    return this.red.isqr(this);
  };

  // Square root over p
  BN.prototype.redSqrt = function redSqrt () {
    assert(this.red, 'redSqrt works only with red numbers');
    this.red._verify1(this);
    return this.red.sqrt(this);
  };

  BN.prototype.redInvm = function redInvm () {
    assert(this.red, 'redInvm works only with red numbers');
    this.red._verify1(this);
    return this.red.invm(this);
  };

  // Return negative clone of `this` % `red modulo`
  BN.prototype.redNeg = function redNeg () {
    assert(this.red, 'redNeg works only with red numbers');
    this.red._verify1(this);
    return this.red.neg(this);
  };

  BN.prototype.redPow = function redPow (num) {
    assert(this.red && !num.red, 'redPow(normalNum)');
    this.red._verify1(this);
    return this.red.pow(this, num);
  };

  // Prime numbers with efficient reduction
  var primes = {
    k256: null,
    p224: null,
    p192: null,
    p25519: null
  };

  // Pseudo-Mersenne prime
  function MPrime (name, p) {
    // P = 2 ^ N - K
    this.name = name;
    this.p = new BN(p, 16);
    this.n = this.p.bitLength();
    this.k = new BN(1).iushln(this.n).isub(this.p);

    this.tmp = this._tmp();
  }

  MPrime.prototype._tmp = function _tmp () {
    var tmp = new BN(null);
    tmp.words = new Array(Math.ceil(this.n / 13));
    return tmp;
  };

  MPrime.prototype.ireduce = function ireduce (num) {
    // Assumes that `num` is less than `P^2`
    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)
    var r = num;
    var rlen;

    do {
      this.split(r, this.tmp);
      r = this.imulK(r);
      r = r.iadd(this.tmp);
      rlen = r.bitLength();
    } while (rlen > this.n);

    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);
    if (cmp === 0) {
      r.words[0] = 0;
      r.length = 1;
    } else if (cmp > 0) {
      r.isub(this.p);
    } else {
      r.strip();
    }

    return r;
  };

  MPrime.prototype.split = function split (input, out) {
    input.iushrn(this.n, 0, out);
  };

  MPrime.prototype.imulK = function imulK (num) {
    return num.imul(this.k);
  };

  function K256 () {
    MPrime.call(
      this,
      'k256',
      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');
  }
  inherits(K256, MPrime);

  K256.prototype.split = function split (input, output) {
    // 256 = 9 * 26 + 22
    var mask = 0x3fffff;

    var outLen = Math.min(input.length, 9);
    for (var i = 0; i < outLen; i++) {
      output.words[i] = input.words[i];
    }
    output.length = outLen;

    if (input.length <= 9) {
      input.words[0] = 0;
      input.length = 1;
      return;
    }

    // Shift by 9 limbs
    var prev = input.words[9];
    output.words[output.length++] = prev & mask;

    for (i = 10; i < input.length; i++) {
      var next = input.words[i] | 0;
      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);
      prev = next;
    }
    prev >>>= 22;
    input.words[i - 10] = prev;
    if (prev === 0 && input.length > 10) {
      input.length -= 10;
    } else {
      input.length -= 9;
    }
  };

  K256.prototype.imulK = function imulK (num) {
    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]
    num.words[num.length] = 0;
    num.words[num.length + 1] = 0;
    num.length += 2;

    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390
    var lo = 0;
    for (var i = 0; i < num.length; i++) {
      var w = num.words[i] | 0;
      lo += w * 0x3d1;
      num.words[i] = lo & 0x3ffffff;
      lo = w * 0x40 + ((lo / 0x4000000) | 0);
    }

    // Fast length reduction
    if (num.words[num.length - 1] === 0) {
      num.length--;
      if (num.words[num.length - 1] === 0) {
        num.length--;
      }
    }
    return num;
  };

  function P224 () {
    MPrime.call(
      this,
      'p224',
      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');
  }
  inherits(P224, MPrime);

  function P192 () {
    MPrime.call(
      this,
      'p192',
      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');
  }
  inherits(P192, MPrime);

  function P25519 () {
    // 2 ^ 255 - 19
    MPrime.call(
      this,
      '25519',
      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');
  }
  inherits(P25519, MPrime);

  P25519.prototype.imulK = function imulK (num) {
    // K = 0x13
    var carry = 0;
    for (var i = 0; i < num.length; i++) {
      var hi = (num.words[i] | 0) * 0x13 + carry;
      var lo = hi & 0x3ffffff;
      hi >>>= 26;

      num.words[i] = lo;
      carry = hi;
    }
    if (carry !== 0) {
      num.words[num.length++] = carry;
    }
    return num;
  };

  // Exported mostly for testing purposes, use plain name instead
  BN._prime = function prime (name) {
    // Cached version of prime
    if (primes[name]) return primes[name];

    var prime;
    if (name === 'k256') {
      prime = new K256();
    } else if (name === 'p224') {
      prime = new P224();
    } else if (name === 'p192') {
      prime = new P192();
    } else if (name === 'p25519') {
      prime = new P25519();
    } else {
      throw new Error('Unknown prime ' + name);
    }
    primes[name] = prime;

    return prime;
  };

  //
  // Base reduction engine
  //
  function Red (m) {
    if (typeof m === 'string') {
      var prime = BN._prime(m);
      this.m = prime.p;
      this.prime = prime;
    } else {
      assert(m.gtn(1), 'modulus must be greater than 1');
      this.m = m;
      this.prime = null;
    }
  }

  Red.prototype._verify1 = function _verify1 (a) {
    assert(a.negative === 0, 'red works only with positives');
    assert(a.red, 'red works only with red numbers');
  };

  Red.prototype._verify2 = function _verify2 (a, b) {
    assert((a.negative | b.negative) === 0, 'red works only with positives');
    assert(a.red && a.red === b.red,
      'red works only with red numbers');
  };

  Red.prototype.imod = function imod (a) {
    if (this.prime) return this.prime.ireduce(a)._forceRed(this);
    return a.umod(this.m)._forceRed(this);
  };

  Red.prototype.neg = function neg (a) {
    if (a.isZero()) {
      return a.clone();
    }

    return this.m.sub(a)._forceRed(this);
  };

  Red.prototype.add = function add (a, b) {
    this._verify2(a, b);

    var res = a.add(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.iadd = function iadd (a, b) {
    this._verify2(a, b);

    var res = a.iadd(b);
    if (res.cmp(this.m) >= 0) {
      res.isub(this.m);
    }
    return res;
  };

  Red.prototype.sub = function sub (a, b) {
    this._verify2(a, b);

    var res = a.sub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res._forceRed(this);
  };

  Red.prototype.isub = function isub (a, b) {
    this._verify2(a, b);

    var res = a.isub(b);
    if (res.cmpn(0) < 0) {
      res.iadd(this.m);
    }
    return res;
  };

  Red.prototype.shl = function shl (a, num) {
    this._verify1(a);
    return this.imod(a.ushln(num));
  };

  Red.prototype.imul = function imul (a, b) {
    this._verify2(a, b);
    return this.imod(a.imul(b));
  };

  Red.prototype.mul = function mul (a, b) {
    this._verify2(a, b);
    return this.imod(a.mul(b));
  };

  Red.prototype.isqr = function isqr (a) {
    return this.imul(a, a.clone());
  };

  Red.prototype.sqr = function sqr (a) {
    return this.mul(a, a);
  };

  Red.prototype.sqrt = function sqrt (a) {
    if (a.isZero()) return a.clone();

    var mod3 = this.m.andln(3);
    assert(mod3 % 2 === 1);

    // Fast case
    if (mod3 === 3) {
      var pow = this.m.add(new BN(1)).iushrn(2);
      return this.pow(a, pow);
    }

    // Tonelli-Shanks algorithm (Totally unoptimized and slow)
    //
    // Find Q and S, that Q * 2 ^ S = (P - 1)
    var q = this.m.subn(1);
    var s = 0;
    while (!q.isZero() && q.andln(1) === 0) {
      s++;
      q.iushrn(1);
    }
    assert(!q.isZero());

    var one = new BN(1).toRed(this);
    var nOne = one.redNeg();

    // Find quadratic non-residue
    // NOTE: Max is such because of generalized Riemann hypothesis.
    var lpow = this.m.subn(1).iushrn(1);
    var z = this.m.bitLength();
    z = new BN(2 * z * z).toRed(this);

    while (this.pow(z, lpow).cmp(nOne) !== 0) {
      z.redIAdd(nOne);
    }

    var c = this.pow(z, q);
    var r = this.pow(a, q.addn(1).iushrn(1));
    var t = this.pow(a, q);
    var m = s;
    while (t.cmp(one) !== 0) {
      var tmp = t;
      for (var i = 0; tmp.cmp(one) !== 0; i++) {
        tmp = tmp.redSqr();
      }
      assert(i < m);
      var b = this.pow(c, new BN(1).iushln(m - i - 1));

      r = r.redMul(b);
      c = b.redSqr();
      t = t.redMul(c);
      m = i;
    }

    return r;
  };

  Red.prototype.invm = function invm (a) {
    var inv = a._invmp(this.m);
    if (inv.negative !== 0) {
      inv.negative = 0;
      return this.imod(inv).redNeg();
    } else {
      return this.imod(inv);
    }
  };

  Red.prototype.pow = function pow (a, num) {
    if (num.isZero()) return new BN(1).toRed(this);
    if (num.cmpn(1) === 0) return a.clone();

    var windowSize = 4;
    var wnd = new Array(1 << windowSize);
    wnd[0] = new BN(1).toRed(this);
    wnd[1] = a;
    for (var i = 2; i < wnd.length; i++) {
      wnd[i] = this.mul(wnd[i - 1], a);
    }

    var res = wnd[0];
    var current = 0;
    var currentLen = 0;
    var start = num.bitLength() % 26;
    if (start === 0) {
      start = 26;
    }

    for (i = num.length - 1; i >= 0; i--) {
      var word = num.words[i];
      for (var j = start - 1; j >= 0; j--) {
        var bit = (word >> j) & 1;
        if (res !== wnd[0]) {
          res = this.sqr(res);
        }

        if (bit === 0 && current === 0) {
          currentLen = 0;
          continue;
        }

        current <<= 1;
        current |= bit;
        currentLen++;
        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;

        res = this.mul(res, wnd[current]);
        currentLen = 0;
        current = 0;
      }
      start = 26;
    }

    return res;
  };

  Red.prototype.convertTo = function convertTo (num) {
    var r = num.umod(this.m);

    return r === num ? r.clone() : r;
  };

  Red.prototype.convertFrom = function convertFrom (num) {
    var res = num.clone();
    res.red = null;
    return res;
  };

  //
  // Montgomery method engine
  //

  BN.mont = function mont (num) {
    return new Mont(num);
  };

  function Mont (m) {
    Red.call(this, m);

    this.shift = this.m.bitLength();
    if (this.shift % 26 !== 0) {
      this.shift += 26 - (this.shift % 26);
    }

    this.r = new BN(1).iushln(this.shift);
    this.r2 = this.imod(this.r.sqr());
    this.rinv = this.r._invmp(this.m);

    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);
    this.minv = this.minv.umod(this.r);
    this.minv = this.r.sub(this.minv);
  }
  inherits(Mont, Red);

  Mont.prototype.convertTo = function convertTo (num) {
    return this.imod(num.ushln(this.shift));
  };

  Mont.prototype.convertFrom = function convertFrom (num) {
    var r = this.imod(num.mul(this.rinv));
    r.red = null;
    return r;
  };

  Mont.prototype.imul = function imul (a, b) {
    if (a.isZero() || b.isZero()) {
      a.words[0] = 0;
      a.length = 1;
      return a;
    }

    var t = a.imul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;

    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.mul = function mul (a, b) {
    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);

    var t = a.mul(b);
    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);
    var u = t.isub(c).iushrn(this.shift);
    var res = u;
    if (u.cmp(this.m) >= 0) {
      res = u.isub(this.m);
    } else if (u.cmpn(0) < 0) {
      res = u.iadd(this.m);
    }

    return res._forceRed(this);
  };

  Mont.prototype.invm = function invm (a) {
    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R
    var res = this.imod(a._invmp(this.m).mul(this.r2));
    return res._forceRed(this);
  };
})(typeof module === 'undefined' || module, this);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/module.js */ "./node_modules/webpack/buildin/module.js")(module)))

/***/ }),

/***/ "./node_modules/brorand/index.js":
/*!***************************************!*\
  !*** ./node_modules/brorand/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var r;

module.exports = function rand(len) {
  if (!r)
    r = new Rand(null);

  return r.generate(len);
};

function Rand(rand) {
  this.rand = rand;
}
module.exports.Rand = Rand;

Rand.prototype.generate = function generate(len) {
  return this._rand(len);
};

// Emulate crypto API using randy
Rand.prototype._rand = function _rand(n) {
  if (this.rand.getBytes)
    return this.rand.getBytes(n);

  var res = new Uint8Array(n);
  for (var i = 0; i < res.length; i++)
    res[i] = this.rand.getByte();
  return res;
};

if (typeof self === 'object') {
  if (self.crypto && self.crypto.getRandomValues) {
    // Modern browsers
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.crypto.getRandomValues(arr);
      return arr;
    };
  } else if (self.msCrypto && self.msCrypto.getRandomValues) {
    // IE
    Rand.prototype._rand = function _rand(n) {
      var arr = new Uint8Array(n);
      self.msCrypto.getRandomValues(arr);
      return arr;
    };

  // Safari's WebWorkers do not have `crypto`
  } else if (typeof window === 'object') {
    // Old junk
    Rand.prototype._rand = function() {
      throw new Error('Not implemented yet');
    };
  }
} else {
  // Node.js or Web worker with no crypto support
  try {
    var crypto = __webpack_require__(/*! crypto */ 3);
    if (typeof crypto.randomBytes !== 'function')
      throw new Error('Not supported');

    Rand.prototype._rand = function _rand(n) {
      return crypto.randomBytes(n);
    };
  } catch (e) {
  }
}


/***/ }),

/***/ "./node_modules/browserify-aes/aes.js":
/*!********************************************!*\
  !*** ./node_modules/browserify-aes/aes.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// based on the aes implimentation in triple sec
// https://github.com/keybase/triplesec
// which is in turn based on the one from crypto-js
// https://code.google.com/p/crypto-js/

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

function asUInt32Array (buf) {
  if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)

  var len = (buf.length / 4) | 0
  var out = new Array(len)

  for (var i = 0; i < len; i++) {
    out[i] = buf.readUInt32BE(i * 4)
  }

  return out
}

function scrubVec (v) {
  for (var i = 0; i < v.length; v++) {
    v[i] = 0
  }
}

function cryptBlock (M, keySchedule, SUB_MIX, SBOX, nRounds) {
  var SUB_MIX0 = SUB_MIX[0]
  var SUB_MIX1 = SUB_MIX[1]
  var SUB_MIX2 = SUB_MIX[2]
  var SUB_MIX3 = SUB_MIX[3]

  var s0 = M[0] ^ keySchedule[0]
  var s1 = M[1] ^ keySchedule[1]
  var s2 = M[2] ^ keySchedule[2]
  var s3 = M[3] ^ keySchedule[3]
  var t0, t1, t2, t3
  var ksRow = 4

  for (var round = 1; round < nRounds; round++) {
    t0 = SUB_MIX0[s0 >>> 24] ^ SUB_MIX1[(s1 >>> 16) & 0xff] ^ SUB_MIX2[(s2 >>> 8) & 0xff] ^ SUB_MIX3[s3 & 0xff] ^ keySchedule[ksRow++]
    t1 = SUB_MIX0[s1 >>> 24] ^ SUB_MIX1[(s2 >>> 16) & 0xff] ^ SUB_MIX2[(s3 >>> 8) & 0xff] ^ SUB_MIX3[s0 & 0xff] ^ keySchedule[ksRow++]
    t2 = SUB_MIX0[s2 >>> 24] ^ SUB_MIX1[(s3 >>> 16) & 0xff] ^ SUB_MIX2[(s0 >>> 8) & 0xff] ^ SUB_MIX3[s1 & 0xff] ^ keySchedule[ksRow++]
    t3 = SUB_MIX0[s3 >>> 24] ^ SUB_MIX1[(s0 >>> 16) & 0xff] ^ SUB_MIX2[(s1 >>> 8) & 0xff] ^ SUB_MIX3[s2 & 0xff] ^ keySchedule[ksRow++]
    s0 = t0
    s1 = t1
    s2 = t2
    s3 = t3
  }

  t0 = ((SBOX[s0 >>> 24] << 24) | (SBOX[(s1 >>> 16) & 0xff] << 16) | (SBOX[(s2 >>> 8) & 0xff] << 8) | SBOX[s3 & 0xff]) ^ keySchedule[ksRow++]
  t1 = ((SBOX[s1 >>> 24] << 24) | (SBOX[(s2 >>> 16) & 0xff] << 16) | (SBOX[(s3 >>> 8) & 0xff] << 8) | SBOX[s0 & 0xff]) ^ keySchedule[ksRow++]
  t2 = ((SBOX[s2 >>> 24] << 24) | (SBOX[(s3 >>> 16) & 0xff] << 16) | (SBOX[(s0 >>> 8) & 0xff] << 8) | SBOX[s1 & 0xff]) ^ keySchedule[ksRow++]
  t3 = ((SBOX[s3 >>> 24] << 24) | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]) ^ keySchedule[ksRow++]
  t0 = t0 >>> 0
  t1 = t1 >>> 0
  t2 = t2 >>> 0
  t3 = t3 >>> 0

  return [t0, t1, t2, t3]
}

// AES constants
var RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36]
var G = (function () {
  // Compute double table
  var d = new Array(256)
  for (var j = 0; j < 256; j++) {
    if (j < 128) {
      d[j] = j << 1
    } else {
      d[j] = (j << 1) ^ 0x11b
    }
  }

  var SBOX = []
  var INV_SBOX = []
  var SUB_MIX = [[], [], [], []]
  var INV_SUB_MIX = [[], [], [], []]

  // Walk GF(2^8)
  var x = 0
  var xi = 0
  for (var i = 0; i < 256; ++i) {
    // Compute sbox
    var sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4)
    sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63
    SBOX[x] = sx
    INV_SBOX[sx] = x

    // Compute multiplication
    var x2 = d[x]
    var x4 = d[x2]
    var x8 = d[x4]

    // Compute sub bytes, mix columns tables
    var t = (d[sx] * 0x101) ^ (sx * 0x1010100)
    SUB_MIX[0][x] = (t << 24) | (t >>> 8)
    SUB_MIX[1][x] = (t << 16) | (t >>> 16)
    SUB_MIX[2][x] = (t << 8) | (t >>> 24)
    SUB_MIX[3][x] = t

    // Compute inv sub bytes, inv mix columns tables
    t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100)
    INV_SUB_MIX[0][sx] = (t << 24) | (t >>> 8)
    INV_SUB_MIX[1][sx] = (t << 16) | (t >>> 16)
    INV_SUB_MIX[2][sx] = (t << 8) | (t >>> 24)
    INV_SUB_MIX[3][sx] = t

    if (x === 0) {
      x = xi = 1
    } else {
      x = x2 ^ d[d[d[x8 ^ x2]]]
      xi ^= d[d[xi]]
    }
  }

  return {
    SBOX: SBOX,
    INV_SBOX: INV_SBOX,
    SUB_MIX: SUB_MIX,
    INV_SUB_MIX: INV_SUB_MIX
  }
})()

function AES (key) {
  this._key = asUInt32Array(key)
  this._reset()
}

AES.blockSize = 4 * 4
AES.keySize = 256 / 8
AES.prototype.blockSize = AES.blockSize
AES.prototype.keySize = AES.keySize
AES.prototype._reset = function () {
  var keyWords = this._key
  var keySize = keyWords.length
  var nRounds = keySize + 6
  var ksRows = (nRounds + 1) * 4

  var keySchedule = []
  for (var k = 0; k < keySize; k++) {
    keySchedule[k] = keyWords[k]
  }

  for (k = keySize; k < ksRows; k++) {
    var t = keySchedule[k - 1]

    if (k % keySize === 0) {
      t = (t << 8) | (t >>> 24)
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])

      t ^= RCON[(k / keySize) | 0] << 24
    } else if (keySize > 6 && k % keySize === 4) {
      t =
        (G.SBOX[t >>> 24] << 24) |
        (G.SBOX[(t >>> 16) & 0xff] << 16) |
        (G.SBOX[(t >>> 8) & 0xff] << 8) |
        (G.SBOX[t & 0xff])
    }

    keySchedule[k] = keySchedule[k - keySize] ^ t
  }

  var invKeySchedule = []
  for (var ik = 0; ik < ksRows; ik++) {
    var ksR = ksRows - ik
    var tt = keySchedule[ksR - (ik % 4 ? 0 : 4)]

    if (ik < 4 || ksR <= 4) {
      invKeySchedule[ik] = tt
    } else {
      invKeySchedule[ik] =
        G.INV_SUB_MIX[0][G.SBOX[tt >>> 24]] ^
        G.INV_SUB_MIX[1][G.SBOX[(tt >>> 16) & 0xff]] ^
        G.INV_SUB_MIX[2][G.SBOX[(tt >>> 8) & 0xff]] ^
        G.INV_SUB_MIX[3][G.SBOX[tt & 0xff]]
    }
  }

  this._nRounds = nRounds
  this._keySchedule = keySchedule
  this._invKeySchedule = invKeySchedule
}

AES.prototype.encryptBlockRaw = function (M) {
  M = asUInt32Array(M)
  return cryptBlock(M, this._keySchedule, G.SUB_MIX, G.SBOX, this._nRounds)
}

AES.prototype.encryptBlock = function (M) {
  var out = this.encryptBlockRaw(M)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[1], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[3], 12)
  return buf
}

AES.prototype.decryptBlock = function (M) {
  M = asUInt32Array(M)

  // swap
  var m1 = M[1]
  M[1] = M[3]
  M[3] = m1

  var out = cryptBlock(M, this._invKeySchedule, G.INV_SUB_MIX, G.INV_SBOX, this._nRounds)
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0], 0)
  buf.writeUInt32BE(out[3], 4)
  buf.writeUInt32BE(out[2], 8)
  buf.writeUInt32BE(out[1], 12)
  return buf
}

AES.prototype.scrub = function () {
  scrubVec(this._keySchedule)
  scrubVec(this._invKeySchedule)
  scrubVec(this._key)
}

module.exports.AES = AES


/***/ }),

/***/ "./node_modules/browserify-aes/authCipher.js":
/*!***************************************************!*\
  !*** ./node_modules/browserify-aes/authCipher.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var aes = __webpack_require__(/*! ./aes */ "./node_modules/browserify-aes/aes.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var Transform = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var GHASH = __webpack_require__(/*! ./ghash */ "./node_modules/browserify-aes/ghash.js")
var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/buffer-xor/index.js")
var incr32 = __webpack_require__(/*! ./incr32 */ "./node_modules/browserify-aes/incr32.js")

function xorTest (a, b) {
  var out = 0
  if (a.length !== b.length) out++

  var len = Math.min(a.length, b.length)
  for (var i = 0; i < len; ++i) {
    out += (a[i] ^ b[i])
  }

  return out
}

function calcIv (self, iv, ck) {
  if (iv.length === 12) {
    self._finID = Buffer.concat([iv, Buffer.from([0, 0, 0, 1])])
    return Buffer.concat([iv, Buffer.from([0, 0, 0, 2])])
  }
  var ghash = new GHASH(ck)
  var len = iv.length
  var toPad = len % 16
  ghash.update(iv)
  if (toPad) {
    toPad = 16 - toPad
    ghash.update(Buffer.alloc(toPad, 0))
  }
  ghash.update(Buffer.alloc(8, 0))
  var ivBits = len * 8
  var tail = Buffer.alloc(8)
  tail.writeUIntBE(ivBits, 0, 8)
  ghash.update(tail)
  self._finID = ghash.state
  var out = Buffer.from(self._finID)
  incr32(out)
  return out
}
function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  var h = Buffer.alloc(4, 0)

  this._cipher = new aes.AES(key)
  var ck = this._cipher.encryptBlock(h)
  this._ghash = new GHASH(ck)
  iv = calcIv(this, iv, ck)

  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._alen = 0
  this._len = 0
  this._mode = mode

  this._authTag = null
  this._called = false
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  if (!this._called && this._alen) {
    var rump = 16 - (this._alen % 16)
    if (rump < 16) {
      rump = Buffer.alloc(rump, 0)
      this._ghash.update(rump)
    }
  }

  this._called = true
  var out = this._mode.encrypt(this, chunk)
  if (this._decrypt) {
    this._ghash.update(chunk)
  } else {
    this._ghash.update(out)
  }
  this._len += chunk.length
  return out
}

StreamCipher.prototype._final = function () {
  if (this._decrypt && !this._authTag) throw new Error('Unsupported state or unable to authenticate data')

  var tag = xor(this._ghash.final(this._alen * 8, this._len * 8), this._cipher.encryptBlock(this._finID))
  if (this._decrypt && xorTest(tag, this._authTag)) throw new Error('Unsupported state or unable to authenticate data')

  this._authTag = tag
  this._cipher.scrub()
}

StreamCipher.prototype.getAuthTag = function getAuthTag () {
  if (this._decrypt || !Buffer.isBuffer(this._authTag)) throw new Error('Attempting to get auth tag in unsupported state')

  return this._authTag
}

StreamCipher.prototype.setAuthTag = function setAuthTag (tag) {
  if (!this._decrypt) throw new Error('Attempting to set auth tag in unsupported state')

  this._authTag = tag
}

StreamCipher.prototype.setAAD = function setAAD (buf) {
  if (this._called) throw new Error('Attempting to set AAD in unsupported state')

  this._ghash.update(buf)
  this._alen += buf.length
}

module.exports = StreamCipher


/***/ }),

/***/ "./node_modules/browserify-aes/browser.js":
/*!************************************************!*\
  !*** ./node_modules/browserify-aes/browser.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var ciphers = __webpack_require__(/*! ./encrypter */ "./node_modules/browserify-aes/encrypter.js")
var deciphers = __webpack_require__(/*! ./decrypter */ "./node_modules/browserify-aes/decrypter.js")
var modes = __webpack_require__(/*! ./modes/list.json */ "./node_modules/browserify-aes/modes/list.json")

function getCiphers () {
  return Object.keys(modes)
}

exports.createCipher = exports.Cipher = ciphers.createCipher
exports.createCipheriv = exports.Cipheriv = ciphers.createCipheriv
exports.createDecipher = exports.Decipher = deciphers.createDecipher
exports.createDecipheriv = exports.Decipheriv = deciphers.createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers


/***/ }),

/***/ "./node_modules/browserify-aes/decrypter.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/decrypter.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var AuthCipher = __webpack_require__(/*! ./authCipher */ "./node_modules/browserify-aes/authCipher.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var MODES = __webpack_require__(/*! ./modes */ "./node_modules/browserify-aes/modes/index.js")
var StreamCipher = __webpack_require__(/*! ./streamCipher */ "./node_modules/browserify-aes/streamCipher.js")
var Transform = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var aes = __webpack_require__(/*! ./aes */ "./node_modules/browserify-aes/aes.js")
var ebtk = __webpack_require__(/*! evp_bytestokey */ "./node_modules/evp_bytestokey/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")

function Decipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._last = void 0
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Decipher, Transform)

Decipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []
  while ((chunk = this._cache.get(this._autopadding))) {
    thing = this._mode.decrypt(this, chunk)
    out.push(thing)
  }
  return Buffer.concat(out)
}

Decipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    return unpad(this._mode.decrypt(this, chunk))
  } else if (chunk) {
    throw new Error('data not multiple of block length')
  }
}

Decipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function (autoPadding) {
  var out
  if (autoPadding) {
    if (this.cache.length > 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  } else {
    if (this.cache.length >= 16) {
      out = this.cache.slice(0, 16)
      this.cache = this.cache.slice(16)
      return out
    }
  }

  return null
}

Splitter.prototype.flush = function () {
  if (this.cache.length) return this.cache
}

function unpad (last) {
  var padded = last[15]
  if (padded < 1 || padded > 16) {
    throw new Error('unable to decrypt data')
  }
  var i = -1
  while (++i < padded) {
    if (last[(i + (16 - padded))] !== padded) {
      throw new Error('unable to decrypt data')
    }
  }
  if (padded === 16) return

  return last.slice(0, 16 - padded)
}

function createDecipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv, true)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv, true)
  }

  return new Decipher(config.module, password, iv)
}

function createDecipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createDecipheriv(suite, keys.key, keys.iv)
}

exports.createDecipher = createDecipher
exports.createDecipheriv = createDecipheriv


/***/ }),

/***/ "./node_modules/browserify-aes/encrypter.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/encrypter.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var MODES = __webpack_require__(/*! ./modes */ "./node_modules/browserify-aes/modes/index.js")
var AuthCipher = __webpack_require__(/*! ./authCipher */ "./node_modules/browserify-aes/authCipher.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var StreamCipher = __webpack_require__(/*! ./streamCipher */ "./node_modules/browserify-aes/streamCipher.js")
var Transform = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var aes = __webpack_require__(/*! ./aes */ "./node_modules/browserify-aes/aes.js")
var ebtk = __webpack_require__(/*! evp_bytestokey */ "./node_modules/evp_bytestokey/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")

function Cipher (mode, key, iv) {
  Transform.call(this)

  this._cache = new Splitter()
  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._mode = mode
  this._autopadding = true
}

inherits(Cipher, Transform)

Cipher.prototype._update = function (data) {
  this._cache.add(data)
  var chunk
  var thing
  var out = []

  while ((chunk = this._cache.get())) {
    thing = this._mode.encrypt(this, chunk)
    out.push(thing)
  }

  return Buffer.concat(out)
}

var PADDING = Buffer.alloc(16, 0x10)

Cipher.prototype._final = function () {
  var chunk = this._cache.flush()
  if (this._autopadding) {
    chunk = this._mode.encrypt(this, chunk)
    this._cipher.scrub()
    return chunk
  }

  if (!chunk.equals(PADDING)) {
    this._cipher.scrub()
    throw new Error('data not multiple of block length')
  }
}

Cipher.prototype.setAutoPadding = function (setTo) {
  this._autopadding = !!setTo
  return this
}

function Splitter () {
  this.cache = Buffer.allocUnsafe(0)
}

Splitter.prototype.add = function (data) {
  this.cache = Buffer.concat([this.cache, data])
}

Splitter.prototype.get = function () {
  if (this.cache.length > 15) {
    var out = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    return out
  }
  return null
}

Splitter.prototype.flush = function () {
  var len = 16 - this.cache.length
  var padBuff = Buffer.allocUnsafe(len)

  var i = -1
  while (++i < len) {
    padBuff.writeUInt8(len, i)
  }

  return Buffer.concat([this.cache, padBuff])
}

function createCipheriv (suite, password, iv) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  if (typeof password === 'string') password = Buffer.from(password)
  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)

  if (typeof iv === 'string') iv = Buffer.from(iv)
  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)

  if (config.type === 'stream') {
    return new StreamCipher(config.module, password, iv)
  } else if (config.type === 'auth') {
    return new AuthCipher(config.module, password, iv)
  }

  return new Cipher(config.module, password, iv)
}

function createCipher (suite, password) {
  var config = MODES[suite.toLowerCase()]
  if (!config) throw new TypeError('invalid suite type')

  var keys = ebtk(password, false, config.key, config.iv)
  return createCipheriv(suite, keys.key, keys.iv)
}

exports.createCipheriv = createCipheriv
exports.createCipher = createCipher


/***/ }),

/***/ "./node_modules/browserify-aes/ghash.js":
/*!**********************************************!*\
  !*** ./node_modules/browserify-aes/ghash.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var ZEROES = Buffer.alloc(16, 0)

function toArray (buf) {
  return [
    buf.readUInt32BE(0),
    buf.readUInt32BE(4),
    buf.readUInt32BE(8),
    buf.readUInt32BE(12)
  ]
}

function fromArray (out) {
  var buf = Buffer.allocUnsafe(16)
  buf.writeUInt32BE(out[0] >>> 0, 0)
  buf.writeUInt32BE(out[1] >>> 0, 4)
  buf.writeUInt32BE(out[2] >>> 0, 8)
  buf.writeUInt32BE(out[3] >>> 0, 12)
  return buf
}

function GHASH (key) {
  this.h = key
  this.state = Buffer.alloc(16, 0)
  this.cache = Buffer.allocUnsafe(0)
}

// from http://bitwiseshiftleft.github.io/sjcl/doc/symbols/src/core_gcm.js.html
// by Juho Vähä-Herttua
GHASH.prototype.ghash = function (block) {
  var i = -1
  while (++i < block.length) {
    this.state[i] ^= block[i]
  }
  this._multiply()
}

GHASH.prototype._multiply = function () {
  var Vi = toArray(this.h)
  var Zi = [0, 0, 0, 0]
  var j, xi, lsbVi
  var i = -1
  while (++i < 128) {
    xi = (this.state[~~(i / 8)] & (1 << (7 - (i % 8)))) !== 0
    if (xi) {
      // Z_i+1 = Z_i ^ V_i
      Zi[0] ^= Vi[0]
      Zi[1] ^= Vi[1]
      Zi[2] ^= Vi[2]
      Zi[3] ^= Vi[3]
    }

    // Store the value of LSB(V_i)
    lsbVi = (Vi[3] & 1) !== 0

    // V_i+1 = V_i >> 1
    for (j = 3; j > 0; j--) {
      Vi[j] = (Vi[j] >>> 1) | ((Vi[j - 1] & 1) << 31)
    }
    Vi[0] = Vi[0] >>> 1

    // If LSB(V_i) is 1, V_i+1 = (V_i >> 1) ^ R
    if (lsbVi) {
      Vi[0] = Vi[0] ^ (0xe1 << 24)
    }
  }
  this.state = fromArray(Zi)
}

GHASH.prototype.update = function (buf) {
  this.cache = Buffer.concat([this.cache, buf])
  var chunk
  while (this.cache.length >= 16) {
    chunk = this.cache.slice(0, 16)
    this.cache = this.cache.slice(16)
    this.ghash(chunk)
  }
}

GHASH.prototype.final = function (abl, bl) {
  if (this.cache.length) {
    this.ghash(Buffer.concat([this.cache, ZEROES], 16))
  }

  this.ghash(fromArray([0, abl, 0, bl]))
  return this.state
}

module.exports = GHASH


/***/ }),

/***/ "./node_modules/browserify-aes/incr32.js":
/*!***********************************************!*\
  !*** ./node_modules/browserify-aes/incr32.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

function incr32 (iv) {
  var len = iv.length
  var item
  while (len--) {
    item = iv.readUInt8(len)
    if (item === 255) {
      iv.writeUInt8(0, len)
    } else {
      item++
      iv.writeUInt8(item, len)
      break
    }
  }
}
module.exports = incr32


/***/ }),

/***/ "./node_modules/browserify-aes/modes/cbc.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/cbc.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/buffer-xor/index.js")

exports.encrypt = function (self, block) {
  var data = xor(block, self._prev)

  self._prev = self._cipher.encryptBlock(data)
  return self._prev
}

exports.decrypt = function (self, block) {
  var pad = self._prev

  self._prev = block
  var out = self._cipher.decryptBlock(block)

  return xor(out, pad)
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/cfb.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/cfb.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/buffer-xor/index.js")

function encryptStart (self, data, decrypt) {
  var len = data.length
  var out = xor(data, self._cache)
  self._cache = self._cache.slice(len)
  self._prev = Buffer.concat([self._prev, decrypt ? data : out])
  return out
}

exports.encrypt = function (self, data, decrypt) {
  var out = Buffer.allocUnsafe(0)
  var len

  while (data.length) {
    if (self._cache.length === 0) {
      self._cache = self._cipher.encryptBlock(self._prev)
      self._prev = Buffer.allocUnsafe(0)
    }

    if (self._cache.length <= data.length) {
      len = self._cache.length
      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])
      data = data.slice(len)
    } else {
      out = Buffer.concat([out, encryptStart(self, data, decrypt)])
      break
    }
  }

  return out
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/cfb1.js":
/*!***************************************************!*\
  !*** ./node_modules/browserify-aes/modes/cfb1.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad
  var i = -1
  var len = 8
  var out = 0
  var bit, value
  while (++i < len) {
    pad = self._cipher.encryptBlock(self._prev)
    bit = (byteParam & (1 << (7 - i))) ? 0x80 : 0
    value = pad[0] ^ bit
    out += ((value & 0x80) >> (i % 8))
    self._prev = shiftIn(self._prev, decrypt ? bit : value)
  }
  return out
}

function shiftIn (buffer, value) {
  var len = buffer.length
  var i = -1
  var out = Buffer.allocUnsafe(buffer.length)
  buffer = Buffer.concat([buffer, Buffer.from([value])])

  while (++i < len) {
    out[i] = buffer[i] << 1 | buffer[i + 1] >> (7)
  }

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/cfb8.js":
/*!***************************************************!*\
  !*** ./node_modules/browserify-aes/modes/cfb8.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

function encryptByte (self, byteParam, decrypt) {
  var pad = self._cipher.encryptBlock(self._prev)
  var out = pad[0] ^ byteParam

  self._prev = Buffer.concat([
    self._prev.slice(1),
    Buffer.from([decrypt ? byteParam : out])
  ])

  return out
}

exports.encrypt = function (self, chunk, decrypt) {
  var len = chunk.length
  var out = Buffer.allocUnsafe(len)
  var i = -1

  while (++i < len) {
    out[i] = encryptByte(self, chunk[i], decrypt)
  }

  return out
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/ctr.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/ctr.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/buffer-xor/index.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var incr32 = __webpack_require__(/*! ../incr32 */ "./node_modules/browserify-aes/incr32.js")

function getBlock (self) {
  var out = self._cipher.encryptBlockRaw(self._prev)
  incr32(self._prev)
  return out
}

var blockSize = 16
exports.encrypt = function (self, chunk) {
  var chunkNum = Math.ceil(chunk.length / blockSize)
  var start = self._cache.length
  self._cache = Buffer.concat([
    self._cache,
    Buffer.allocUnsafe(chunkNum * blockSize)
  ])
  for (var i = 0; i < chunkNum; i++) {
    var out = getBlock(self)
    var offset = start + i * blockSize
    self._cache.writeUInt32BE(out[0], offset + 0)
    self._cache.writeUInt32BE(out[1], offset + 4)
    self._cache.writeUInt32BE(out[2], offset + 8)
    self._cache.writeUInt32BE(out[3], offset + 12)
  }
  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/ecb.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/ecb.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.encrypt = function (self, block) {
  return self._cipher.encryptBlock(block)
}

exports.decrypt = function (self, block) {
  return self._cipher.decryptBlock(block)
}


/***/ }),

/***/ "./node_modules/browserify-aes/modes/index.js":
/*!****************************************************!*\
  !*** ./node_modules/browserify-aes/modes/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var modeModules = {
  ECB: __webpack_require__(/*! ./ecb */ "./node_modules/browserify-aes/modes/ecb.js"),
  CBC: __webpack_require__(/*! ./cbc */ "./node_modules/browserify-aes/modes/cbc.js"),
  CFB: __webpack_require__(/*! ./cfb */ "./node_modules/browserify-aes/modes/cfb.js"),
  CFB8: __webpack_require__(/*! ./cfb8 */ "./node_modules/browserify-aes/modes/cfb8.js"),
  CFB1: __webpack_require__(/*! ./cfb1 */ "./node_modules/browserify-aes/modes/cfb1.js"),
  OFB: __webpack_require__(/*! ./ofb */ "./node_modules/browserify-aes/modes/ofb.js"),
  CTR: __webpack_require__(/*! ./ctr */ "./node_modules/browserify-aes/modes/ctr.js"),
  GCM: __webpack_require__(/*! ./ctr */ "./node_modules/browserify-aes/modes/ctr.js")
}

var modes = __webpack_require__(/*! ./list.json */ "./node_modules/browserify-aes/modes/list.json")

for (var key in modes) {
  modes[key].module = modeModules[modes[key].mode]
}

module.exports = modes


/***/ }),

/***/ "./node_modules/browserify-aes/modes/list.json":
/*!*****************************************************!*\
  !*** ./node_modules/browserify-aes/modes/list.json ***!
  \*****************************************************/
/*! exports provided: aes-128-ecb, aes-192-ecb, aes-256-ecb, aes-128-cbc, aes-192-cbc, aes-256-cbc, aes128, aes192, aes256, aes-128-cfb, aes-192-cfb, aes-256-cfb, aes-128-cfb8, aes-192-cfb8, aes-256-cfb8, aes-128-cfb1, aes-192-cfb1, aes-256-cfb1, aes-128-ofb, aes-192-ofb, aes-256-ofb, aes-128-ctr, aes-192-ctr, aes-256-ctr, aes-128-gcm, aes-192-gcm, aes-256-gcm, default */
/***/ (function(module) {

module.exports = {"aes-128-ecb":{"cipher":"AES","key":128,"iv":0,"mode":"ECB","type":"block"},"aes-192-ecb":{"cipher":"AES","key":192,"iv":0,"mode":"ECB","type":"block"},"aes-256-ecb":{"cipher":"AES","key":256,"iv":0,"mode":"ECB","type":"block"},"aes-128-cbc":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes-192-cbc":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes-256-cbc":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes128":{"cipher":"AES","key":128,"iv":16,"mode":"CBC","type":"block"},"aes192":{"cipher":"AES","key":192,"iv":16,"mode":"CBC","type":"block"},"aes256":{"cipher":"AES","key":256,"iv":16,"mode":"CBC","type":"block"},"aes-128-cfb":{"cipher":"AES","key":128,"iv":16,"mode":"CFB","type":"stream"},"aes-192-cfb":{"cipher":"AES","key":192,"iv":16,"mode":"CFB","type":"stream"},"aes-256-cfb":{"cipher":"AES","key":256,"iv":16,"mode":"CFB","type":"stream"},"aes-128-cfb8":{"cipher":"AES","key":128,"iv":16,"mode":"CFB8","type":"stream"},"aes-192-cfb8":{"cipher":"AES","key":192,"iv":16,"mode":"CFB8","type":"stream"},"aes-256-cfb8":{"cipher":"AES","key":256,"iv":16,"mode":"CFB8","type":"stream"},"aes-128-cfb1":{"cipher":"AES","key":128,"iv":16,"mode":"CFB1","type":"stream"},"aes-192-cfb1":{"cipher":"AES","key":192,"iv":16,"mode":"CFB1","type":"stream"},"aes-256-cfb1":{"cipher":"AES","key":256,"iv":16,"mode":"CFB1","type":"stream"},"aes-128-ofb":{"cipher":"AES","key":128,"iv":16,"mode":"OFB","type":"stream"},"aes-192-ofb":{"cipher":"AES","key":192,"iv":16,"mode":"OFB","type":"stream"},"aes-256-ofb":{"cipher":"AES","key":256,"iv":16,"mode":"OFB","type":"stream"},"aes-128-ctr":{"cipher":"AES","key":128,"iv":16,"mode":"CTR","type":"stream"},"aes-192-ctr":{"cipher":"AES","key":192,"iv":16,"mode":"CTR","type":"stream"},"aes-256-ctr":{"cipher":"AES","key":256,"iv":16,"mode":"CTR","type":"stream"},"aes-128-gcm":{"cipher":"AES","key":128,"iv":12,"mode":"GCM","type":"auth"},"aes-192-gcm":{"cipher":"AES","key":192,"iv":12,"mode":"GCM","type":"auth"},"aes-256-gcm":{"cipher":"AES","key":256,"iv":12,"mode":"GCM","type":"auth"}};

/***/ }),

/***/ "./node_modules/browserify-aes/modes/ofb.js":
/*!**************************************************!*\
  !*** ./node_modules/browserify-aes/modes/ofb.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var xor = __webpack_require__(/*! buffer-xor */ "./node_modules/buffer-xor/index.js")

function getBlock (self) {
  self._prev = self._cipher.encryptBlock(self._prev)
  return self._prev
}

exports.encrypt = function (self, chunk) {
  while (self._cache.length < chunk.length) {
    self._cache = Buffer.concat([self._cache, getBlock(self)])
  }

  var pad = self._cache.slice(0, chunk.length)
  self._cache = self._cache.slice(chunk.length)
  return xor(chunk, pad)
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/browserify-aes/streamCipher.js":
/*!*****************************************************!*\
  !*** ./node_modules/browserify-aes/streamCipher.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var aes = __webpack_require__(/*! ./aes */ "./node_modules/browserify-aes/aes.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var Transform = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")

function StreamCipher (mode, key, iv, decrypt) {
  Transform.call(this)

  this._cipher = new aes.AES(key)
  this._prev = Buffer.from(iv)
  this._cache = Buffer.allocUnsafe(0)
  this._secCache = Buffer.allocUnsafe(0)
  this._decrypt = decrypt
  this._mode = mode
}

inherits(StreamCipher, Transform)

StreamCipher.prototype._update = function (chunk) {
  return this._mode.encrypt(this, chunk, this._decrypt)
}

StreamCipher.prototype._final = function () {
  this._cipher.scrub()
}

module.exports = StreamCipher


/***/ }),

/***/ "./node_modules/browserify-cipher/browser.js":
/*!***************************************************!*\
  !*** ./node_modules/browserify-cipher/browser.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var DES = __webpack_require__(/*! browserify-des */ "./node_modules/browserify-des/index.js")
var aes = __webpack_require__(/*! browserify-aes/browser */ "./node_modules/browserify-aes/browser.js")
var aesModes = __webpack_require__(/*! browserify-aes/modes */ "./node_modules/browserify-aes/modes/index.js")
var desModes = __webpack_require__(/*! browserify-des/modes */ "./node_modules/browserify-des/modes.js")
var ebtk = __webpack_require__(/*! evp_bytestokey */ "./node_modules/evp_bytestokey/index.js")

function createCipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createCipheriv(suite, keys.key, keys.iv)
}

function createDecipher (suite, password) {
  suite = suite.toLowerCase()

  var keyLen, ivLen
  if (aesModes[suite]) {
    keyLen = aesModes[suite].key
    ivLen = aesModes[suite].iv
  } else if (desModes[suite]) {
    keyLen = desModes[suite].key * 8
    ivLen = desModes[suite].iv
  } else {
    throw new TypeError('invalid suite type')
  }

  var keys = ebtk(password, false, keyLen, ivLen)
  return createDecipheriv(suite, keys.key, keys.iv)
}

function createCipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })

  throw new TypeError('invalid suite type')
}

function createDecipheriv (suite, key, iv) {
  suite = suite.toLowerCase()
  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)
  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })

  throw new TypeError('invalid suite type')
}

function getCiphers () {
  return Object.keys(desModes).concat(aes.getCiphers())
}

exports.createCipher = exports.Cipher = createCipher
exports.createCipheriv = exports.Cipheriv = createCipheriv
exports.createDecipher = exports.Decipher = createDecipher
exports.createDecipheriv = exports.Decipheriv = createDecipheriv
exports.listCiphers = exports.getCiphers = getCiphers


/***/ }),

/***/ "./node_modules/browserify-des/index.js":
/*!**********************************************!*\
  !*** ./node_modules/browserify-des/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var CipherBase = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var des = __webpack_require__(/*! des.js */ "./node_modules/des.js/lib/des.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")

var modes = {
  'des-ede3-cbc': des.CBC.instantiate(des.EDE),
  'des-ede3': des.EDE,
  'des-ede-cbc': des.CBC.instantiate(des.EDE),
  'des-ede': des.EDE,
  'des-cbc': des.CBC.instantiate(des.DES),
  'des-ecb': des.DES
}
modes.des = modes['des-cbc']
modes.des3 = modes['des-ede3-cbc']
module.exports = DES
inherits(DES, CipherBase)
function DES (opts) {
  CipherBase.call(this)
  var modeName = opts.mode.toLowerCase()
  var mode = modes[modeName]
  var type
  if (opts.decrypt) {
    type = 'decrypt'
  } else {
    type = 'encrypt'
  }
  var key = opts.key
  if (modeName === 'des-ede' || modeName === 'des-ede-cbc') {
    key = Buffer.concat([key, key.slice(0, 8)])
  }
  var iv = opts.iv
  this._des = mode.create({
    key: key,
    iv: iv,
    type: type
  })
}
DES.prototype._update = function (data) {
  return new Buffer(this._des.update(data))
}
DES.prototype._final = function () {
  return new Buffer(this._des.final())
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/browserify-des/modes.js":
/*!**********************************************!*\
  !*** ./node_modules/browserify-des/modes.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports['des-ecb'] = {
  key: 8,
  iv: 0
}
exports['des-cbc'] = exports.des = {
  key: 8,
  iv: 8
}
exports['des-ede3-cbc'] = exports.des3 = {
  key: 24,
  iv: 8
}
exports['des-ede3'] = {
  key: 24,
  iv: 0
}
exports['des-ede-cbc'] = {
  key: 16,
  iv: 8
}
exports['des-ede'] = {
  key: 16,
  iv: 0
}


/***/ }),

/***/ "./node_modules/browserify-rsa/index.js":
/*!**********************************************!*\
  !*** ./node_modules/browserify-rsa/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var bn = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var randomBytes = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js");
module.exports = crt;
function blind(priv) {
  var r = getr(priv);
  var blinder = r.toRed(bn.mont(priv.modulus))
  .redPow(new bn(priv.publicExponent)).fromRed();
  return {
    blinder: blinder,
    unblinder:r.invm(priv.modulus)
  };
}
function crt(msg, priv) {
  var blinds = blind(priv);
  var len = priv.modulus.byteLength();
  var mod = bn.mont(priv.modulus);
  var blinded = new bn(msg).mul(blinds.blinder).umod(priv.modulus);
  var c1 = blinded.toRed(bn.mont(priv.prime1));
  var c2 = blinded.toRed(bn.mont(priv.prime2));
  var qinv = priv.coefficient;
  var p = priv.prime1;
  var q = priv.prime2;
  var m1 = c1.redPow(priv.exponent1);
  var m2 = c2.redPow(priv.exponent2);
  m1 = m1.fromRed();
  m2 = m2.fromRed();
  var h = m1.isub(m2).imul(qinv).umod(p);
  h.imul(q);
  m2.iadd(h);
  return new Buffer(m2.imul(blinds.unblinder).umod(priv.modulus).toArray(false, len));
}
crt.getr = getr;
function getr(priv) {
  var len = priv.modulus.byteLength();
  var r = new bn(randomBytes(len));
  while (r.cmp(priv.modulus) >=  0 || !r.umod(priv.prime1) || !r.umod(priv.prime2)) {
    r = new bn(randomBytes(len));
  }
  return r;
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/browserify-sign/algos.js":
/*!***********************************************!*\
  !*** ./node_modules/browserify-sign/algos.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./browser/algorithms.json */ "./node_modules/browserify-sign/browser/algorithms.json")


/***/ }),

/***/ "./node_modules/browserify-sign/browser/algorithms.json":
/*!**************************************************************!*\
  !*** ./node_modules/browserify-sign/browser/algorithms.json ***!
  \**************************************************************/
/*! exports provided: sha224WithRSAEncryption, RSA-SHA224, sha256WithRSAEncryption, RSA-SHA256, sha384WithRSAEncryption, RSA-SHA384, sha512WithRSAEncryption, RSA-SHA512, RSA-SHA1, ecdsa-with-SHA1, sha256, sha224, sha384, sha512, DSA-SHA, DSA-SHA1, DSA, DSA-WITH-SHA224, DSA-SHA224, DSA-WITH-SHA256, DSA-SHA256, DSA-WITH-SHA384, DSA-SHA384, DSA-WITH-SHA512, DSA-SHA512, DSA-RIPEMD160, ripemd160WithRSA, RSA-RIPEMD160, md5WithRSAEncryption, RSA-MD5, default */
/***/ (function(module) {

module.exports = {"sha224WithRSAEncryption":{"sign":"rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"RSA-SHA224":{"sign":"ecdsa/rsa","hash":"sha224","id":"302d300d06096086480165030402040500041c"},"sha256WithRSAEncryption":{"sign":"rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"RSA-SHA256":{"sign":"ecdsa/rsa","hash":"sha256","id":"3031300d060960864801650304020105000420"},"sha384WithRSAEncryption":{"sign":"rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"RSA-SHA384":{"sign":"ecdsa/rsa","hash":"sha384","id":"3041300d060960864801650304020205000430"},"sha512WithRSAEncryption":{"sign":"rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA512":{"sign":"ecdsa/rsa","hash":"sha512","id":"3051300d060960864801650304020305000440"},"RSA-SHA1":{"sign":"rsa","hash":"sha1","id":"3021300906052b0e03021a05000414"},"ecdsa-with-SHA1":{"sign":"ecdsa","hash":"sha1","id":""},"sha256":{"sign":"ecdsa","hash":"sha256","id":""},"sha224":{"sign":"ecdsa","hash":"sha224","id":""},"sha384":{"sign":"ecdsa","hash":"sha384","id":""},"sha512":{"sign":"ecdsa","hash":"sha512","id":""},"DSA-SHA":{"sign":"dsa","hash":"sha1","id":""},"DSA-SHA1":{"sign":"dsa","hash":"sha1","id":""},"DSA":{"sign":"dsa","hash":"sha1","id":""},"DSA-WITH-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-SHA224":{"sign":"dsa","hash":"sha224","id":""},"DSA-WITH-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-SHA256":{"sign":"dsa","hash":"sha256","id":""},"DSA-WITH-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-SHA384":{"sign":"dsa","hash":"sha384","id":""},"DSA-WITH-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-SHA512":{"sign":"dsa","hash":"sha512","id":""},"DSA-RIPEMD160":{"sign":"dsa","hash":"rmd160","id":""},"ripemd160WithRSA":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"RSA-RIPEMD160":{"sign":"rsa","hash":"rmd160","id":"3021300906052b2403020105000414"},"md5WithRSAEncryption":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"},"RSA-MD5":{"sign":"rsa","hash":"md5","id":"3020300c06082a864886f70d020505000410"}};

/***/ }),

/***/ "./node_modules/browserify-sign/browser/curves.json":
/*!**********************************************************!*\
  !*** ./node_modules/browserify-sign/browser/curves.json ***!
  \**********************************************************/
/*! exports provided: 1.3.132.0.10, 1.3.132.0.33, 1.2.840.10045.3.1.1, 1.2.840.10045.3.1.7, 1.3.132.0.34, 1.3.132.0.35, default */
/***/ (function(module) {

module.exports = {"1.3.132.0.10":"secp256k1","1.3.132.0.33":"p224","1.2.840.10045.3.1.1":"p192","1.2.840.10045.3.1.7":"p256","1.3.132.0.34":"p384","1.3.132.0.35":"p521"};

/***/ }),

/***/ "./node_modules/browserify-sign/browser/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/browserify-sign/browser/index.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var createHash = __webpack_require__(/*! create-hash */ "./node_modules/create-hash/browser.js")
var stream = __webpack_require__(/*! stream */ "./node_modules/stream-browserify/index.js")
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var sign = __webpack_require__(/*! ./sign */ "./node_modules/browserify-sign/browser/sign.js")
var verify = __webpack_require__(/*! ./verify */ "./node_modules/browserify-sign/browser/verify.js")

var algorithms = __webpack_require__(/*! ./algorithms.json */ "./node_modules/browserify-sign/browser/algorithms.json")
Object.keys(algorithms).forEach(function (key) {
  algorithms[key].id = new Buffer(algorithms[key].id, 'hex')
  algorithms[key.toLowerCase()] = algorithms[key]
})

function Sign (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hashType = data.hash
  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Sign, stream.Writable)

Sign.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Sign.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = new Buffer(data, enc)

  this._hash.update(data)
  return this
}

Sign.prototype.sign = function signMethod (key, enc) {
  this.end()
  var hash = this._hash.digest()
  var sig = sign(hash, key, this._hashType, this._signType, this._tag)

  return enc ? sig.toString(enc) : sig
}

function Verify (algorithm) {
  stream.Writable.call(this)

  var data = algorithms[algorithm]
  if (!data) throw new Error('Unknown message digest')

  this._hash = createHash(data.hash)
  this._tag = data.id
  this._signType = data.sign
}
inherits(Verify, stream.Writable)

Verify.prototype._write = function _write (data, _, done) {
  this._hash.update(data)
  done()
}

Verify.prototype.update = function update (data, enc) {
  if (typeof data === 'string') data = new Buffer(data, enc)

  this._hash.update(data)
  return this
}

Verify.prototype.verify = function verifyMethod (key, sig, enc) {
  if (typeof sig === 'string') sig = new Buffer(sig, enc)

  this.end()
  var hash = this._hash.digest()
  return verify(sig, hash, key, this._signType, this._tag)
}

function createSign (algorithm) {
  return new Sign(algorithm)
}

function createVerify (algorithm) {
  return new Verify(algorithm)
}

module.exports = {
  Sign: createSign,
  Verify: createVerify,
  createSign: createSign,
  createVerify: createVerify
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/browserify-sign/browser/sign.js":
/*!******************************************************!*\
  !*** ./node_modules/browserify-sign/browser/sign.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var createHmac = __webpack_require__(/*! create-hmac */ "./node_modules/create-hmac/browser.js")
var crt = __webpack_require__(/*! browserify-rsa */ "./node_modules/browserify-rsa/index.js")
var EC = __webpack_require__(/*! elliptic */ "./node_modules/elliptic/lib/elliptic.js").ec
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js")
var parseKeys = __webpack_require__(/*! parse-asn1 */ "./node_modules/parse-asn1/index.js")
var curves = __webpack_require__(/*! ./curves.json */ "./node_modules/browserify-sign/browser/curves.json")

function sign (hash, key, hashType, signType, tag) {
  var priv = parseKeys(key)
  if (priv.curve) {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
    return ecSign(hash, priv)
  } else if (priv.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong private key type')
    return dsaSign(hash, priv, hashType)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong private key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = priv.modulus.byteLength()
  var pad = [ 0, 1 ]
  while (hash.length + pad.length + 1 < len) pad.push(0xff)
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) pad.push(hash[i])

  var out = crt(pad, priv)
  return out
}

function ecSign (hash, priv) {
  var curveId = curves[priv.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + priv.curve.join('.'))

  var curve = new EC(curveId)
  var key = curve.keyFromPrivate(priv.privateKey)
  var out = key.sign(hash)

  return new Buffer(out.toDER())
}

function dsaSign (hash, priv, algo) {
  var x = priv.params.priv_key
  var p = priv.params.p
  var q = priv.params.q
  var g = priv.params.g
  var r = new BN(0)
  var k
  var H = bits2int(hash, q).mod(q)
  var s = false
  var kv = getKey(x, q, hash, algo)
  while (s === false) {
    k = makeKey(q, kv, algo)
    r = makeR(g, k, p, q)
    s = k.invm(q).imul(H.add(x.mul(r))).mod(q)
    if (s.cmpn(0) === 0) {
      s = false
      r = new BN(0)
    }
  }
  return toDER(r, s)
}

function toDER (r, s) {
  r = r.toArray()
  s = s.toArray()

  // Pad values
  if (r[0] & 0x80) r = [ 0 ].concat(r)
  if (s[0] & 0x80) s = [ 0 ].concat(s)

  var total = r.length + s.length + 4
  var res = [ 0x30, total, 0x02, r.length ]
  res = res.concat(r, [ 0x02, s.length ], s)
  return new Buffer(res)
}

function getKey (x, q, hash, algo) {
  x = new Buffer(x.toArray())
  if (x.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - x.length)
    zeros.fill(0)
    x = Buffer.concat([ zeros, x ])
  }
  var hlen = hash.length
  var hbits = bits2octets(hash, q)
  var v = new Buffer(hlen)
  v.fill(1)
  var k = new Buffer(hlen)
  k.fill(0)
  k = createHmac(algo, k).update(v).update(new Buffer([ 0 ])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  k = createHmac(algo, k).update(v).update(new Buffer([ 1 ])).update(x).update(hbits).digest()
  v = createHmac(algo, k).update(v).digest()
  return { k: k, v: v }
}

function bits2int (obits, q) {
  var bits = new BN(obits)
  var shift = (obits.length << 3) - q.bitLength()
  if (shift > 0) bits.ishrn(shift)
  return bits
}

function bits2octets (bits, q) {
  bits = bits2int(bits, q)
  bits = bits.mod(q)
  var out = new Buffer(bits.toArray())
  if (out.length < q.byteLength()) {
    var zeros = new Buffer(q.byteLength() - out.length)
    zeros.fill(0)
    out = Buffer.concat([ zeros, out ])
  }
  return out
}

function makeKey (q, kv, algo) {
  var t
  var k

  do {
    t = new Buffer(0)

    while (t.length * 8 < q.bitLength()) {
      kv.v = createHmac(algo, kv.k).update(kv.v).digest()
      t = Buffer.concat([ t, kv.v ])
    }

    k = bits2int(t, q)
    kv.k = createHmac(algo, kv.k).update(kv.v).update(new Buffer([ 0 ])).digest()
    kv.v = createHmac(algo, kv.k).update(kv.v).digest()
  } while (k.cmp(q) !== -1)

  return k
}

function makeR (g, k, p, q) {
  return g.toRed(BN.mont(p)).redPow(k).fromRed().mod(q)
}

module.exports = sign
module.exports.getKey = getKey
module.exports.makeKey = makeKey

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/browserify-sign/browser/verify.js":
/*!********************************************************!*\
  !*** ./node_modules/browserify-sign/browser/verify.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {// much of this based on https://github.com/indutny/self-signed/blob/gh-pages/lib/rsa.js
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js")
var EC = __webpack_require__(/*! elliptic */ "./node_modules/elliptic/lib/elliptic.js").ec
var parseKeys = __webpack_require__(/*! parse-asn1 */ "./node_modules/parse-asn1/index.js")
var curves = __webpack_require__(/*! ./curves.json */ "./node_modules/browserify-sign/browser/curves.json")

function verify (sig, hash, key, signType, tag) {
  var pub = parseKeys(key)
  if (pub.type === 'ec') {
    // rsa keys can be interpreted as ecdsa ones in openssl
    if (signType !== 'ecdsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
    return ecVerify(sig, hash, pub)
  } else if (pub.type === 'dsa') {
    if (signType !== 'dsa') throw new Error('wrong public key type')
    return dsaVerify(sig, hash, pub)
  } else {
    if (signType !== 'rsa' && signType !== 'ecdsa/rsa') throw new Error('wrong public key type')
  }
  hash = Buffer.concat([tag, hash])
  var len = pub.modulus.byteLength()
  var pad = [ 1 ]
  var padNum = 0
  while (hash.length + pad.length + 2 < len) {
    pad.push(0xff)
    padNum++
  }
  pad.push(0x00)
  var i = -1
  while (++i < hash.length) {
    pad.push(hash[i])
  }
  pad = new Buffer(pad)
  var red = BN.mont(pub.modulus)
  sig = new BN(sig).toRed(red)

  sig = sig.redPow(new BN(pub.publicExponent))
  sig = new Buffer(sig.fromRed().toArray())
  var out = padNum < 8 ? 1 : 0
  len = Math.min(sig.length, pad.length)
  if (sig.length !== pad.length) out = 1

  i = -1
  while (++i < len) out |= sig[i] ^ pad[i]
  return out === 0
}

function ecVerify (sig, hash, pub) {
  var curveId = curves[pub.data.algorithm.curve.join('.')]
  if (!curveId) throw new Error('unknown curve ' + pub.data.algorithm.curve.join('.'))

  var curve = new EC(curveId)
  var pubkey = pub.data.subjectPrivateKey.data

  return curve.verify(hash, sig, pubkey)
}

function dsaVerify (sig, hash, pub) {
  var p = pub.data.p
  var q = pub.data.q
  var g = pub.data.g
  var y = pub.data.pub_key
  var unpacked = parseKeys.signature.decode(sig, 'der')
  var s = unpacked.s
  var r = unpacked.r
  checkValue(s, q)
  checkValue(r, q)
  var montp = BN.mont(p)
  var w = s.invm(q)
  var v = g.toRed(montp)
    .redPow(new BN(hash).mul(w).mod(q))
    .fromRed()
    .mul(y.toRed(montp).redPow(r.mul(w).mod(q)).fromRed())
    .mod(p)
    .mod(q)
  return v.cmp(r) === 0
}

function checkValue (b, q) {
  if (b.cmpn(0) <= 0) throw new Error('invalid sig')
  if (b.cmp(q) >= q) throw new Error('invalid sig')
}

module.exports = verify

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/buffer-xor/index.js":
/*!******************************************!*\
  !*** ./node_modules/buffer-xor/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {module.exports = function xor (a, b) {
  var length = Math.min(a.length, b.length)
  var buffer = new Buffer(length)

  for (var i = 0; i < length; ++i) {
    buffer[i] = a[i] ^ b[i]
  }

  return buffer
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/buffer/index.js":
/*!**************************************!*\
  !*** ./node_modules/buffer/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global) {/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>
 * @license  MIT
 */
/* eslint-disable no-proto */



var base64 = __webpack_require__(/*! base64-js */ "./node_modules/base64-js/index.js")
var ieee754 = __webpack_require__(/*! ieee754 */ "./node_modules/ieee754/index.js")
var isArray = __webpack_require__(/*! isarray */ "./node_modules/buffer/node_modules/isarray/index.js")

exports.Buffer = Buffer
exports.SlowBuffer = SlowBuffer
exports.INSPECT_MAX_BYTES = 50

/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Use Object implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * Due to various browser bugs, sometimes the Object implementation will be used even
 * when the browser supports typed arrays.
 *
 * Note:
 *
 *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,
 *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.
 *
 *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.
 *
 *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of
 *     incorrect length in some situations.

 * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they
 * get the Object implementation, which is slower but behaves correctly.
 */
Buffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined
  ? global.TYPED_ARRAY_SUPPORT
  : typedArraySupport()

/*
 * Export kMaxLength after typed array support is determined.
 */
exports.kMaxLength = kMaxLength()

function typedArraySupport () {
  try {
    var arr = new Uint8Array(1)
    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}
    return arr.foo() === 42 && // typed array instances can be augmented
        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`
        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`
  } catch (e) {
    return false
  }
}

function kMaxLength () {
  return Buffer.TYPED_ARRAY_SUPPORT
    ? 0x7fffffff
    : 0x3fffffff
}

function createBuffer (that, length) {
  if (kMaxLength() < length) {
    throw new RangeError('Invalid typed array length')
  }
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = new Uint8Array(length)
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    if (that === null) {
      that = new Buffer(length)
    }
    that.length = length
  }

  return that
}

/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */

function Buffer (arg, encodingOrOffset, length) {
  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {
    return new Buffer(arg, encodingOrOffset, length)
  }

  // Common case.
  if (typeof arg === 'number') {
    if (typeof encodingOrOffset === 'string') {
      throw new Error(
        'If encoding is specified then the first argument must be a string'
      )
    }
    return allocUnsafe(this, arg)
  }
  return from(this, arg, encodingOrOffset, length)
}

Buffer.poolSize = 8192 // not used by this implementation

// TODO: Legacy, not needed anymore. Remove in next major version.
Buffer._augment = function (arr) {
  arr.__proto__ = Buffer.prototype
  return arr
}

function from (that, value, encodingOrOffset, length) {
  if (typeof value === 'number') {
    throw new TypeError('"value" argument must not be a number')
  }

  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {
    return fromArrayBuffer(that, value, encodingOrOffset, length)
  }

  if (typeof value === 'string') {
    return fromString(that, value, encodingOrOffset)
  }

  return fromObject(that, value)
}

/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/
Buffer.from = function (value, encodingOrOffset, length) {
  return from(null, value, encodingOrOffset, length)
}

if (Buffer.TYPED_ARRAY_SUPPORT) {
  Buffer.prototype.__proto__ = Uint8Array.prototype
  Buffer.__proto__ = Uint8Array
  if (typeof Symbol !== 'undefined' && Symbol.species &&
      Buffer[Symbol.species] === Buffer) {
    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97
    Object.defineProperty(Buffer, Symbol.species, {
      value: null,
      configurable: true
    })
  }
}

function assertSize (size) {
  if (typeof size !== 'number') {
    throw new TypeError('"size" argument must be a number')
  } else if (size < 0) {
    throw new RangeError('"size" argument must not be negative')
  }
}

function alloc (that, size, fill, encoding) {
  assertSize(size)
  if (size <= 0) {
    return createBuffer(that, size)
  }
  if (fill !== undefined) {
    // Only pay attention to encoding if it's a string. This
    // prevents accidentally sending in a number that would
    // be interpretted as a start offset.
    return typeof encoding === 'string'
      ? createBuffer(that, size).fill(fill, encoding)
      : createBuffer(that, size).fill(fill)
  }
  return createBuffer(that, size)
}

/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/
Buffer.alloc = function (size, fill, encoding) {
  return alloc(null, size, fill, encoding)
}

function allocUnsafe (that, size) {
  assertSize(size)
  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) {
    for (var i = 0; i < size; ++i) {
      that[i] = 0
    }
  }
  return that
}

/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */
Buffer.allocUnsafe = function (size) {
  return allocUnsafe(null, size)
}
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */
Buffer.allocUnsafeSlow = function (size) {
  return allocUnsafe(null, size)
}

function fromString (that, string, encoding) {
  if (typeof encoding !== 'string' || encoding === '') {
    encoding = 'utf8'
  }

  if (!Buffer.isEncoding(encoding)) {
    throw new TypeError('"encoding" must be a valid string encoding')
  }

  var length = byteLength(string, encoding) | 0
  that = createBuffer(that, length)

  var actual = that.write(string, encoding)

  if (actual !== length) {
    // Writing a hex string, for example, that contains invalid characters will
    // cause everything after the first invalid character to be ignored. (e.g.
    // 'abxxcd' will be treated as 'ab')
    that = that.slice(0, actual)
  }

  return that
}

function fromArrayLike (that, array) {
  var length = array.length < 0 ? 0 : checked(array.length) | 0
  that = createBuffer(that, length)
  for (var i = 0; i < length; i += 1) {
    that[i] = array[i] & 255
  }
  return that
}

function fromArrayBuffer (that, array, byteOffset, length) {
  array.byteLength // this throws if `array` is not a valid ArrayBuffer

  if (byteOffset < 0 || array.byteLength < byteOffset) {
    throw new RangeError('\'offset\' is out of bounds')
  }

  if (array.byteLength < byteOffset + (length || 0)) {
    throw new RangeError('\'length\' is out of bounds')
  }

  if (byteOffset === undefined && length === undefined) {
    array = new Uint8Array(array)
  } else if (length === undefined) {
    array = new Uint8Array(array, byteOffset)
  } else {
    array = new Uint8Array(array, byteOffset, length)
  }

  if (Buffer.TYPED_ARRAY_SUPPORT) {
    // Return an augmented `Uint8Array` instance, for best performance
    that = array
    that.__proto__ = Buffer.prototype
  } else {
    // Fallback: Return an object instance of the Buffer class
    that = fromArrayLike(that, array)
  }
  return that
}

function fromObject (that, obj) {
  if (Buffer.isBuffer(obj)) {
    var len = checked(obj.length) | 0
    that = createBuffer(that, len)

    if (that.length === 0) {
      return that
    }

    obj.copy(that, 0, 0, len)
    return that
  }

  if (obj) {
    if ((typeof ArrayBuffer !== 'undefined' &&
        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {
      if (typeof obj.length !== 'number' || isnan(obj.length)) {
        return createBuffer(that, 0)
      }
      return fromArrayLike(that, obj)
    }

    if (obj.type === 'Buffer' && isArray(obj.data)) {
      return fromArrayLike(that, obj.data)
    }
  }

  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')
}

function checked (length) {
  // Note: cannot use `length < kMaxLength()` here because that fails when
  // length is NaN (which is otherwise coerced to zero.)
  if (length >= kMaxLength()) {
    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +
                         'size: 0x' + kMaxLength().toString(16) + ' bytes')
  }
  return length | 0
}

function SlowBuffer (length) {
  if (+length != length) { // eslint-disable-line eqeqeq
    length = 0
  }
  return Buffer.alloc(+length)
}

Buffer.isBuffer = function isBuffer (b) {
  return !!(b != null && b._isBuffer)
}

Buffer.compare = function compare (a, b) {
  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
    throw new TypeError('Arguments must be Buffers')
  }

  if (a === b) return 0

  var x = a.length
  var y = b.length

  for (var i = 0, len = Math.min(x, y); i < len; ++i) {
    if (a[i] !== b[i]) {
      x = a[i]
      y = b[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

Buffer.isEncoding = function isEncoding (encoding) {
  switch (String(encoding).toLowerCase()) {
    case 'hex':
    case 'utf8':
    case 'utf-8':
    case 'ascii':
    case 'latin1':
    case 'binary':
    case 'base64':
    case 'ucs2':
    case 'ucs-2':
    case 'utf16le':
    case 'utf-16le':
      return true
    default:
      return false
  }
}

Buffer.concat = function concat (list, length) {
  if (!isArray(list)) {
    throw new TypeError('"list" argument must be an Array of Buffers')
  }

  if (list.length === 0) {
    return Buffer.alloc(0)
  }

  var i
  if (length === undefined) {
    length = 0
    for (i = 0; i < list.length; ++i) {
      length += list[i].length
    }
  }

  var buffer = Buffer.allocUnsafe(length)
  var pos = 0
  for (i = 0; i < list.length; ++i) {
    var buf = list[i]
    if (!Buffer.isBuffer(buf)) {
      throw new TypeError('"list" argument must be an Array of Buffers')
    }
    buf.copy(buffer, pos)
    pos += buf.length
  }
  return buffer
}

function byteLength (string, encoding) {
  if (Buffer.isBuffer(string)) {
    return string.length
  }
  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&
      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {
    return string.byteLength
  }
  if (typeof string !== 'string') {
    string = '' + string
  }

  var len = string.length
  if (len === 0) return 0

  // Use a for loop to avoid recursion
  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'ascii':
      case 'latin1':
      case 'binary':
        return len
      case 'utf8':
      case 'utf-8':
      case undefined:
        return utf8ToBytes(string).length
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return len * 2
      case 'hex':
        return len >>> 1
      case 'base64':
        return base64ToBytes(string).length
      default:
        if (loweredCase) return utf8ToBytes(string).length // assume utf8
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}
Buffer.byteLength = byteLength

function slowToString (encoding, start, end) {
  var loweredCase = false

  // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
  // property of a typed array.

  // This behaves neither like String nor Uint8Array in that we set start/end
  // to their upper/lower bounds if the value passed is out of range.
  // undefined is handled specially as per ECMA-262 6th Edition,
  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
  if (start === undefined || start < 0) {
    start = 0
  }
  // Return early if start > this.length. Done here to prevent potential uint32
  // coercion fail below.
  if (start > this.length) {
    return ''
  }

  if (end === undefined || end > this.length) {
    end = this.length
  }

  if (end <= 0) {
    return ''
  }

  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.
  end >>>= 0
  start >>>= 0

  if (end <= start) {
    return ''
  }

  if (!encoding) encoding = 'utf8'

  while (true) {
    switch (encoding) {
      case 'hex':
        return hexSlice(this, start, end)

      case 'utf8':
      case 'utf-8':
        return utf8Slice(this, start, end)

      case 'ascii':
        return asciiSlice(this, start, end)

      case 'latin1':
      case 'binary':
        return latin1Slice(this, start, end)

      case 'base64':
        return base64Slice(this, start, end)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return utf16leSlice(this, start, end)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = (encoding + '').toLowerCase()
        loweredCase = true
    }
  }
}

// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect
// Buffer instances.
Buffer.prototype._isBuffer = true

function swap (b, n, m) {
  var i = b[n]
  b[n] = b[m]
  b[m] = i
}

Buffer.prototype.swap16 = function swap16 () {
  var len = this.length
  if (len % 2 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 16-bits')
  }
  for (var i = 0; i < len; i += 2) {
    swap(this, i, i + 1)
  }
  return this
}

Buffer.prototype.swap32 = function swap32 () {
  var len = this.length
  if (len % 4 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 32-bits')
  }
  for (var i = 0; i < len; i += 4) {
    swap(this, i, i + 3)
    swap(this, i + 1, i + 2)
  }
  return this
}

Buffer.prototype.swap64 = function swap64 () {
  var len = this.length
  if (len % 8 !== 0) {
    throw new RangeError('Buffer size must be a multiple of 64-bits')
  }
  for (var i = 0; i < len; i += 8) {
    swap(this, i, i + 7)
    swap(this, i + 1, i + 6)
    swap(this, i + 2, i + 5)
    swap(this, i + 3, i + 4)
  }
  return this
}

Buffer.prototype.toString = function toString () {
  var length = this.length | 0
  if (length === 0) return ''
  if (arguments.length === 0) return utf8Slice(this, 0, length)
  return slowToString.apply(this, arguments)
}

Buffer.prototype.equals = function equals (b) {
  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')
  if (this === b) return true
  return Buffer.compare(this, b) === 0
}

Buffer.prototype.inspect = function inspect () {
  var str = ''
  var max = exports.INSPECT_MAX_BYTES
  if (this.length > 0) {
    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')
    if (this.length > max) str += ' ... '
  }
  return '<Buffer ' + str + '>'
}

Buffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {
  if (!Buffer.isBuffer(target)) {
    throw new TypeError('Argument must be a Buffer')
  }

  if (start === undefined) {
    start = 0
  }
  if (end === undefined) {
    end = target ? target.length : 0
  }
  if (thisStart === undefined) {
    thisStart = 0
  }
  if (thisEnd === undefined) {
    thisEnd = this.length
  }

  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
    throw new RangeError('out of range index')
  }

  if (thisStart >= thisEnd && start >= end) {
    return 0
  }
  if (thisStart >= thisEnd) {
    return -1
  }
  if (start >= end) {
    return 1
  }

  start >>>= 0
  end >>>= 0
  thisStart >>>= 0
  thisEnd >>>= 0

  if (this === target) return 0

  var x = thisEnd - thisStart
  var y = end - start
  var len = Math.min(x, y)

  var thisCopy = this.slice(thisStart, thisEnd)
  var targetCopy = target.slice(start, end)

  for (var i = 0; i < len; ++i) {
    if (thisCopy[i] !== targetCopy[i]) {
      x = thisCopy[i]
      y = targetCopy[i]
      break
    }
  }

  if (x < y) return -1
  if (y < x) return 1
  return 0
}

// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {
  // Empty buffer means no match
  if (buffer.length === 0) return -1

  // Normalize byteOffset
  if (typeof byteOffset === 'string') {
    encoding = byteOffset
    byteOffset = 0
  } else if (byteOffset > 0x7fffffff) {
    byteOffset = 0x7fffffff
  } else if (byteOffset < -0x80000000) {
    byteOffset = -0x80000000
  }
  byteOffset = +byteOffset  // Coerce to Number.
  if (isNaN(byteOffset)) {
    // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
    byteOffset = dir ? 0 : (buffer.length - 1)
  }

  // Normalize byteOffset: negative offsets start from the end of the buffer
  if (byteOffset < 0) byteOffset = buffer.length + byteOffset
  if (byteOffset >= buffer.length) {
    if (dir) return -1
    else byteOffset = buffer.length - 1
  } else if (byteOffset < 0) {
    if (dir) byteOffset = 0
    else return -1
  }

  // Normalize val
  if (typeof val === 'string') {
    val = Buffer.from(val, encoding)
  }

  // Finally, search either indexOf (if dir is true) or lastIndexOf
  if (Buffer.isBuffer(val)) {
    // Special case: looking for empty string/buffer always fails
    if (val.length === 0) {
      return -1
    }
    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)
  } else if (typeof val === 'number') {
    val = val & 0xFF // Search for a byte value [0-255]
    if (Buffer.TYPED_ARRAY_SUPPORT &&
        typeof Uint8Array.prototype.indexOf === 'function') {
      if (dir) {
        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)
      } else {
        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)
      }
    }
    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)
  }

  throw new TypeError('val must be string, number or Buffer')
}

function arrayIndexOf (arr, val, byteOffset, encoding, dir) {
  var indexSize = 1
  var arrLength = arr.length
  var valLength = val.length

  if (encoding !== undefined) {
    encoding = String(encoding).toLowerCase()
    if (encoding === 'ucs2' || encoding === 'ucs-2' ||
        encoding === 'utf16le' || encoding === 'utf-16le') {
      if (arr.length < 2 || val.length < 2) {
        return -1
      }
      indexSize = 2
      arrLength /= 2
      valLength /= 2
      byteOffset /= 2
    }
  }

  function read (buf, i) {
    if (indexSize === 1) {
      return buf[i]
    } else {
      return buf.readUInt16BE(i * indexSize)
    }
  }

  var i
  if (dir) {
    var foundIndex = -1
    for (i = byteOffset; i < arrLength; i++) {
      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
        if (foundIndex === -1) foundIndex = i
        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize
      } else {
        if (foundIndex !== -1) i -= i - foundIndex
        foundIndex = -1
      }
    }
  } else {
    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength
    for (i = byteOffset; i >= 0; i--) {
      var found = true
      for (var j = 0; j < valLength; j++) {
        if (read(arr, i + j) !== read(val, j)) {
          found = false
          break
        }
      }
      if (found) return i
    }
  }

  return -1
}

Buffer.prototype.includes = function includes (val, byteOffset, encoding) {
  return this.indexOf(val, byteOffset, encoding) !== -1
}

Buffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)
}

Buffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {
  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)
}

function hexWrite (buf, string, offset, length) {
  offset = Number(offset) || 0
  var remaining = buf.length - offset
  if (!length) {
    length = remaining
  } else {
    length = Number(length)
    if (length > remaining) {
      length = remaining
    }
  }

  // must be an even number of digits
  var strLen = string.length
  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')

  if (length > strLen / 2) {
    length = strLen / 2
  }
  for (var i = 0; i < length; ++i) {
    var parsed = parseInt(string.substr(i * 2, 2), 16)
    if (isNaN(parsed)) return i
    buf[offset + i] = parsed
  }
  return i
}

function utf8Write (buf, string, offset, length) {
  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)
}

function asciiWrite (buf, string, offset, length) {
  return blitBuffer(asciiToBytes(string), buf, offset, length)
}

function latin1Write (buf, string, offset, length) {
  return asciiWrite(buf, string, offset, length)
}

function base64Write (buf, string, offset, length) {
  return blitBuffer(base64ToBytes(string), buf, offset, length)
}

function ucs2Write (buf, string, offset, length) {
  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)
}

Buffer.prototype.write = function write (string, offset, length, encoding) {
  // Buffer#write(string)
  if (offset === undefined) {
    encoding = 'utf8'
    length = this.length
    offset = 0
  // Buffer#write(string, encoding)
  } else if (length === undefined && typeof offset === 'string') {
    encoding = offset
    length = this.length
    offset = 0
  // Buffer#write(string, offset[, length][, encoding])
  } else if (isFinite(offset)) {
    offset = offset | 0
    if (isFinite(length)) {
      length = length | 0
      if (encoding === undefined) encoding = 'utf8'
    } else {
      encoding = length
      length = undefined
    }
  // legacy write(string, encoding, offset, length) - remove in v0.13
  } else {
    throw new Error(
      'Buffer.write(string, encoding, offset[, length]) is no longer supported'
    )
  }

  var remaining = this.length - offset
  if (length === undefined || length > remaining) length = remaining

  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {
    throw new RangeError('Attempt to write outside buffer bounds')
  }

  if (!encoding) encoding = 'utf8'

  var loweredCase = false
  for (;;) {
    switch (encoding) {
      case 'hex':
        return hexWrite(this, string, offset, length)

      case 'utf8':
      case 'utf-8':
        return utf8Write(this, string, offset, length)

      case 'ascii':
        return asciiWrite(this, string, offset, length)

      case 'latin1':
      case 'binary':
        return latin1Write(this, string, offset, length)

      case 'base64':
        // Warning: maxLength not taken into account in base64Write
        return base64Write(this, string, offset, length)

      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return ucs2Write(this, string, offset, length)

      default:
        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)
        encoding = ('' + encoding).toLowerCase()
        loweredCase = true
    }
  }
}

Buffer.prototype.toJSON = function toJSON () {
  return {
    type: 'Buffer',
    data: Array.prototype.slice.call(this._arr || this, 0)
  }
}

function base64Slice (buf, start, end) {
  if (start === 0 && end === buf.length) {
    return base64.fromByteArray(buf)
  } else {
    return base64.fromByteArray(buf.slice(start, end))
  }
}

function utf8Slice (buf, start, end) {
  end = Math.min(buf.length, end)
  var res = []

  var i = start
  while (i < end) {
    var firstByte = buf[i]
    var codePoint = null
    var bytesPerSequence = (firstByte > 0xEF) ? 4
      : (firstByte > 0xDF) ? 3
      : (firstByte > 0xBF) ? 2
      : 1

    if (i + bytesPerSequence <= end) {
      var secondByte, thirdByte, fourthByte, tempCodePoint

      switch (bytesPerSequence) {
        case 1:
          if (firstByte < 0x80) {
            codePoint = firstByte
          }
          break
        case 2:
          secondByte = buf[i + 1]
          if ((secondByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)
            if (tempCodePoint > 0x7F) {
              codePoint = tempCodePoint
            }
          }
          break
        case 3:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)
            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
              codePoint = tempCodePoint
            }
          }
          break
        case 4:
          secondByte = buf[i + 1]
          thirdByte = buf[i + 2]
          fourthByte = buf[i + 3]
          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)
            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
              codePoint = tempCodePoint
            }
          }
      }
    }

    if (codePoint === null) {
      // we did not generate a valid codePoint so insert a
      // replacement char (U+FFFD) and advance only 1 byte
      codePoint = 0xFFFD
      bytesPerSequence = 1
    } else if (codePoint > 0xFFFF) {
      // encode to utf16 (surrogate pair dance)
      codePoint -= 0x10000
      res.push(codePoint >>> 10 & 0x3FF | 0xD800)
      codePoint = 0xDC00 | codePoint & 0x3FF
    }

    res.push(codePoint)
    i += bytesPerSequence
  }

  return decodeCodePointsArray(res)
}

// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000

function decodeCodePointsArray (codePoints) {
  var len = codePoints.length
  if (len <= MAX_ARGUMENTS_LENGTH) {
    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
  }

  // Decode in chunks to avoid "call stack size exceeded".
  var res = ''
  var i = 0
  while (i < len) {
    res += String.fromCharCode.apply(
      String,
      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)
    )
  }
  return res
}

function asciiSlice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i] & 0x7F)
  }
  return ret
}

function latin1Slice (buf, start, end) {
  var ret = ''
  end = Math.min(buf.length, end)

  for (var i = start; i < end; ++i) {
    ret += String.fromCharCode(buf[i])
  }
  return ret
}

function hexSlice (buf, start, end) {
  var len = buf.length

  if (!start || start < 0) start = 0
  if (!end || end < 0 || end > len) end = len

  var out = ''
  for (var i = start; i < end; ++i) {
    out += toHex(buf[i])
  }
  return out
}

function utf16leSlice (buf, start, end) {
  var bytes = buf.slice(start, end)
  var res = ''
  for (var i = 0; i < bytes.length; i += 2) {
    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)
  }
  return res
}

Buffer.prototype.slice = function slice (start, end) {
  var len = this.length
  start = ~~start
  end = end === undefined ? len : ~~end

  if (start < 0) {
    start += len
    if (start < 0) start = 0
  } else if (start > len) {
    start = len
  }

  if (end < 0) {
    end += len
    if (end < 0) end = 0
  } else if (end > len) {
    end = len
  }

  if (end < start) end = start

  var newBuf
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    newBuf = this.subarray(start, end)
    newBuf.__proto__ = Buffer.prototype
  } else {
    var sliceLen = end - start
    newBuf = new Buffer(sliceLen, undefined)
    for (var i = 0; i < sliceLen; ++i) {
      newBuf[i] = this[i + start]
    }
  }

  return newBuf
}

/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */
function checkOffset (offset, ext, length) {
  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')
  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')
}

Buffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }

  return val
}

Buffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    checkOffset(offset, byteLength, this.length)
  }

  var val = this[offset + --byteLength]
  var mul = 1
  while (byteLength > 0 && (mul *= 0x100)) {
    val += this[offset + --byteLength] * mul
  }

  return val
}

Buffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  return this[offset]
}

Buffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return this[offset] | (this[offset + 1] << 8)
}

Buffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  return (this[offset] << 8) | this[offset + 1]
}

Buffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return ((this[offset]) |
      (this[offset + 1] << 8) |
      (this[offset + 2] << 16)) +
      (this[offset + 3] * 0x1000000)
}

Buffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] * 0x1000000) +
    ((this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    this[offset + 3])
}

Buffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var val = this[offset]
  var mul = 1
  var i = 0
  while (++i < byteLength && (mul *= 0x100)) {
    val += this[offset + i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) checkOffset(offset, byteLength, this.length)

  var i = byteLength
  var mul = 1
  var val = this[offset + --i]
  while (i > 0 && (mul *= 0x100)) {
    val += this[offset + --i] * mul
  }
  mul *= 0x80

  if (val >= mul) val -= Math.pow(2, 8 * byteLength)

  return val
}

Buffer.prototype.readInt8 = function readInt8 (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 1, this.length)
  if (!(this[offset] & 0x80)) return (this[offset])
  return ((0xff - this[offset] + 1) * -1)
}

Buffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset] | (this[offset + 1] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 2, this.length)
  var val = this[offset + 1] | (this[offset] << 8)
  return (val & 0x8000) ? val | 0xFFFF0000 : val
}

Buffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset]) |
    (this[offset + 1] << 8) |
    (this[offset + 2] << 16) |
    (this[offset + 3] << 24)
}

Buffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)

  return (this[offset] << 24) |
    (this[offset + 1] << 16) |
    (this[offset + 2] << 8) |
    (this[offset + 3])
}

Buffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, true, 23, 4)
}

Buffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 4, this.length)
  return ieee754.read(this, offset, false, 23, 4)
}

Buffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, true, 52, 8)
}

Buffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {
  if (!noAssert) checkOffset(offset, 8, this.length)
  return ieee754.read(this, offset, false, 52, 8)
}

function checkInt (buf, value, offset, ext, max, min) {
  if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance')
  if (value > max || value < min) throw new RangeError('"value" argument is out of bounds')
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
}

Buffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var mul = 1
  var i = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  byteLength = byteLength | 0
  if (!noAssert) {
    var maxBytes = Math.pow(2, 8 * byteLength) - 1
    checkInt(this, value, offset, byteLength, maxBytes, 0)
  }

  var i = byteLength - 1
  var mul = 1
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    this[offset + i] = (value / mul) & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  this[offset] = (value & 0xff)
  return offset + 1
}

function objectWriteUInt16 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {
    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>
      (littleEndian ? i : 1 - i) * 8
  }
}

Buffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

function objectWriteUInt32 (buf, value, offset, littleEndian) {
  if (value < 0) value = 0xffffffff + value + 1
  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {
    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff
  }
}

Buffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset + 3] = (value >>> 24)
    this[offset + 2] = (value >>> 16)
    this[offset + 1] = (value >>> 8)
    this[offset] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

Buffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = 0
  var mul = 1
  var sub = 0
  this[offset] = value & 0xFF
  while (++i < byteLength && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) {
    var limit = Math.pow(2, 8 * byteLength - 1)

    checkInt(this, value, offset, byteLength, limit - 1, -limit)
  }

  var i = byteLength - 1
  var mul = 1
  var sub = 0
  this[offset + i] = value & 0xFF
  while (--i >= 0 && (mul *= 0x100)) {
    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
      sub = 1
    }
    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF
  }

  return offset + byteLength
}

Buffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)
  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)
  if (value < 0) value = 0xff + value + 1
  this[offset] = (value & 0xff)
  return offset + 1
}

Buffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
  } else {
    objectWriteUInt16(this, value, offset, true)
  }
  return offset + 2
}

Buffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 8)
    this[offset + 1] = (value & 0xff)
  } else {
    objectWriteUInt16(this, value, offset, false)
  }
  return offset + 2
}

Buffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value & 0xff)
    this[offset + 1] = (value >>> 8)
    this[offset + 2] = (value >>> 16)
    this[offset + 3] = (value >>> 24)
  } else {
    objectWriteUInt32(this, value, offset, true)
  }
  return offset + 4
}

Buffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {
  value = +value
  offset = offset | 0
  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)
  if (value < 0) value = 0xffffffff + value + 1
  if (Buffer.TYPED_ARRAY_SUPPORT) {
    this[offset] = (value >>> 24)
    this[offset + 1] = (value >>> 16)
    this[offset + 2] = (value >>> 8)
    this[offset + 3] = (value & 0xff)
  } else {
    objectWriteUInt32(this, value, offset, false)
  }
  return offset + 4
}

function checkIEEE754 (buf, value, offset, ext, max, min) {
  if (offset + ext > buf.length) throw new RangeError('Index out of range')
  if (offset < 0) throw new RangeError('Index out of range')
}

function writeFloat (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)
  }
  ieee754.write(buf, value, offset, littleEndian, 23, 4)
  return offset + 4
}

Buffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {
  return writeFloat(this, value, offset, true, noAssert)
}

Buffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {
  return writeFloat(this, value, offset, false, noAssert)
}

function writeDouble (buf, value, offset, littleEndian, noAssert) {
  if (!noAssert) {
    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)
  }
  ieee754.write(buf, value, offset, littleEndian, 52, 8)
  return offset + 8
}

Buffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {
  return writeDouble(this, value, offset, true, noAssert)
}

Buffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {
  return writeDouble(this, value, offset, false, noAssert)
}

// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy (target, targetStart, start, end) {
  if (!start) start = 0
  if (!end && end !== 0) end = this.length
  if (targetStart >= target.length) targetStart = target.length
  if (!targetStart) targetStart = 0
  if (end > 0 && end < start) end = start

  // Copy 0 bytes; we're done
  if (end === start) return 0
  if (target.length === 0 || this.length === 0) return 0

  // Fatal error conditions
  if (targetStart < 0) {
    throw new RangeError('targetStart out of bounds')
  }
  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')
  if (end < 0) throw new RangeError('sourceEnd out of bounds')

  // Are we oob?
  if (end > this.length) end = this.length
  if (target.length - targetStart < end - start) {
    end = target.length - targetStart + start
  }

  var len = end - start
  var i

  if (this === target && start < targetStart && targetStart < end) {
    // descending copy from end
    for (i = len - 1; i >= 0; --i) {
      target[i + targetStart] = this[i + start]
    }
  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {
    // ascending copy from start
    for (i = 0; i < len; ++i) {
      target[i + targetStart] = this[i + start]
    }
  } else {
    Uint8Array.prototype.set.call(
      target,
      this.subarray(start, start + len),
      targetStart
    )
  }

  return len
}

// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill (val, start, end, encoding) {
  // Handle string cases:
  if (typeof val === 'string') {
    if (typeof start === 'string') {
      encoding = start
      start = 0
      end = this.length
    } else if (typeof end === 'string') {
      encoding = end
      end = this.length
    }
    if (val.length === 1) {
      var code = val.charCodeAt(0)
      if (code < 256) {
        val = code
      }
    }
    if (encoding !== undefined && typeof encoding !== 'string') {
      throw new TypeError('encoding must be a string')
    }
    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
      throw new TypeError('Unknown encoding: ' + encoding)
    }
  } else if (typeof val === 'number') {
    val = val & 255
  }

  // Invalid ranges are not set to a default, so can range check early.
  if (start < 0 || this.length < start || this.length < end) {
    throw new RangeError('Out of range index')
  }

  if (end <= start) {
    return this
  }

  start = start >>> 0
  end = end === undefined ? this.length : end >>> 0

  if (!val) val = 0

  var i
  if (typeof val === 'number') {
    for (i = start; i < end; ++i) {
      this[i] = val
    }
  } else {
    var bytes = Buffer.isBuffer(val)
      ? val
      : utf8ToBytes(new Buffer(val, encoding).toString())
    var len = bytes.length
    for (i = 0; i < end - start; ++i) {
      this[i + start] = bytes[i % len]
    }
  }

  return this
}

// HELPER FUNCTIONS
// ================

var INVALID_BASE64_RE = /[^+\/0-9A-Za-z-_]/g

function base64clean (str) {
  // Node strips out invalid characters like \n and \t from the string, base64-js does not
  str = stringtrim(str).replace(INVALID_BASE64_RE, '')
  // Node converts strings with length < 2 to ''
  if (str.length < 2) return ''
  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
  while (str.length % 4 !== 0) {
    str = str + '='
  }
  return str
}

function stringtrim (str) {
  if (str.trim) return str.trim()
  return str.replace(/^\s+|\s+$/g, '')
}

function toHex (n) {
  if (n < 16) return '0' + n.toString(16)
  return n.toString(16)
}

function utf8ToBytes (string, units) {
  units = units || Infinity
  var codePoint
  var length = string.length
  var leadSurrogate = null
  var bytes = []

  for (var i = 0; i < length; ++i) {
    codePoint = string.charCodeAt(i)

    // is surrogate component
    if (codePoint > 0xD7FF && codePoint < 0xE000) {
      // last char was a lead
      if (!leadSurrogate) {
        // no lead yet
        if (codePoint > 0xDBFF) {
          // unexpected trail
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        } else if (i + 1 === length) {
          // unpaired lead
          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
          continue
        }

        // valid lead
        leadSurrogate = codePoint

        continue
      }

      // 2 leads in a row
      if (codePoint < 0xDC00) {
        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
        leadSurrogate = codePoint
        continue
      }

      // valid surrogate pair
      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000
    } else if (leadSurrogate) {
      // valid bmp char, but last char was a lead
      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)
    }

    leadSurrogate = null

    // encode utf8
    if (codePoint < 0x80) {
      if ((units -= 1) < 0) break
      bytes.push(codePoint)
    } else if (codePoint < 0x800) {
      if ((units -= 2) < 0) break
      bytes.push(
        codePoint >> 0x6 | 0xC0,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x10000) {
      if ((units -= 3) < 0) break
      bytes.push(
        codePoint >> 0xC | 0xE0,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else if (codePoint < 0x110000) {
      if ((units -= 4) < 0) break
      bytes.push(
        codePoint >> 0x12 | 0xF0,
        codePoint >> 0xC & 0x3F | 0x80,
        codePoint >> 0x6 & 0x3F | 0x80,
        codePoint & 0x3F | 0x80
      )
    } else {
      throw new Error('Invalid code point')
    }
  }

  return bytes
}

function asciiToBytes (str) {
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    // Node's code seems to be doing this and not & 0x7F..
    byteArray.push(str.charCodeAt(i) & 0xFF)
  }
  return byteArray
}

function utf16leToBytes (str, units) {
  var c, hi, lo
  var byteArray = []
  for (var i = 0; i < str.length; ++i) {
    if ((units -= 2) < 0) break

    c = str.charCodeAt(i)
    hi = c >> 8
    lo = c % 256
    byteArray.push(lo)
    byteArray.push(hi)
  }

  return byteArray
}

function base64ToBytes (str) {
  return base64.toByteArray(base64clean(str))
}

function blitBuffer (src, dst, offset, length) {
  for (var i = 0; i < length; ++i) {
    if ((i + offset >= dst.length) || (i >= src.length)) break
    dst[i + offset] = src[i]
  }
  return i
}

function isnan (val) {
  return val !== val // eslint-disable-line no-self-compare
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/buffer/node_modules/isarray/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/buffer/node_modules/isarray/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ "./node_modules/cipher-base/index.js":
/*!*******************************************!*\
  !*** ./node_modules/cipher-base/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var Transform = __webpack_require__(/*! stream */ "./node_modules/stream-browserify/index.js").Transform
var StringDecoder = __webpack_require__(/*! string_decoder */ "./node_modules/node-libs-browser/node_modules/string_decoder/lib/string_decoder.js").StringDecoder
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")

function CipherBase (hashMode) {
  Transform.call(this)
  this.hashMode = typeof hashMode === 'string'
  if (this.hashMode) {
    this[hashMode] = this._finalOrDigest
  } else {
    this.final = this._finalOrDigest
  }
  if (this._final) {
    this.__final = this._final
    this._final = null
  }
  this._decoder = null
  this._encoding = null
}
inherits(CipherBase, Transform)

CipherBase.prototype.update = function (data, inputEnc, outputEnc) {
  if (typeof data === 'string') {
    data = Buffer.from(data, inputEnc)
  }

  var outData = this._update(data)
  if (this.hashMode) return this

  if (outputEnc) {
    outData = this._toString(outData, outputEnc)
  }

  return outData
}

CipherBase.prototype.setAutoPadding = function () {}
CipherBase.prototype.getAuthTag = function () {
  throw new Error('trying to get auth tag in unsupported state')
}

CipherBase.prototype.setAuthTag = function () {
  throw new Error('trying to set auth tag in unsupported state')
}

CipherBase.prototype.setAAD = function () {
  throw new Error('trying to set aad in unsupported state')
}

CipherBase.prototype._transform = function (data, _, next) {
  var err
  try {
    if (this.hashMode) {
      this._update(data)
    } else {
      this.push(this._update(data))
    }
  } catch (e) {
    err = e
  } finally {
    next(err)
  }
}
CipherBase.prototype._flush = function (done) {
  var err
  try {
    this.push(this.__final())
  } catch (e) {
    err = e
  }

  done(err)
}
CipherBase.prototype._finalOrDigest = function (outputEnc) {
  var outData = this.__final() || Buffer.alloc(0)
  if (outputEnc) {
    outData = this._toString(outData, outputEnc, true)
  }
  return outData
}

CipherBase.prototype._toString = function (value, enc, fin) {
  if (!this._decoder) {
    this._decoder = new StringDecoder(enc)
    this._encoding = enc
  }

  if (this._encoding !== enc) throw new Error('can\'t switch encodings')

  var out = this._decoder.write(value)
  if (fin) {
    out += this._decoder.end()
  }

  return out
}

module.exports = CipherBase


/***/ }),

/***/ "./node_modules/core-util-is/lib/util.js":
/*!***********************************************!*\
  !*** ./node_modules/core-util-is/lib/util.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// NOTE: These type checking functions intentionally don't use `instanceof`
// because it is fragile and can be easily faked with `Object.create()`.

function isArray(arg) {
  if (Array.isArray) {
    return Array.isArray(arg);
  }
  return objectToString(arg) === '[object Array]';
}
exports.isArray = isArray;

function isBoolean(arg) {
  return typeof arg === 'boolean';
}
exports.isBoolean = isBoolean;

function isNull(arg) {
  return arg === null;
}
exports.isNull = isNull;

function isNullOrUndefined(arg) {
  return arg == null;
}
exports.isNullOrUndefined = isNullOrUndefined;

function isNumber(arg) {
  return typeof arg === 'number';
}
exports.isNumber = isNumber;

function isString(arg) {
  return typeof arg === 'string';
}
exports.isString = isString;

function isSymbol(arg) {
  return typeof arg === 'symbol';
}
exports.isSymbol = isSymbol;

function isUndefined(arg) {
  return arg === void 0;
}
exports.isUndefined = isUndefined;

function isRegExp(re) {
  return objectToString(re) === '[object RegExp]';
}
exports.isRegExp = isRegExp;

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}
exports.isObject = isObject;

function isDate(d) {
  return objectToString(d) === '[object Date]';
}
exports.isDate = isDate;

function isError(e) {
  return (objectToString(e) === '[object Error]' || e instanceof Error);
}
exports.isError = isError;

function isFunction(arg) {
  return typeof arg === 'function';
}
exports.isFunction = isFunction;

function isPrimitive(arg) {
  return arg === null ||
         typeof arg === 'boolean' ||
         typeof arg === 'number' ||
         typeof arg === 'string' ||
         typeof arg === 'symbol' ||  // ES6 symbol
         typeof arg === 'undefined';
}
exports.isPrimitive = isPrimitive;

exports.isBuffer = Buffer.isBuffer;

function objectToString(o) {
  return Object.prototype.toString.call(o);
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/create-ecdh/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/create-ecdh/browser.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var elliptic = __webpack_require__(/*! elliptic */ "./node_modules/elliptic/lib/elliptic.js")
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js")

module.exports = function createECDH (curve) {
  return new ECDH(curve)
}

var aliases = {
  secp256k1: {
    name: 'secp256k1',
    byteLength: 32
  },
  secp224r1: {
    name: 'p224',
    byteLength: 28
  },
  prime256v1: {
    name: 'p256',
    byteLength: 32
  },
  prime192v1: {
    name: 'p192',
    byteLength: 24
  },
  ed25519: {
    name: 'ed25519',
    byteLength: 32
  },
  secp384r1: {
    name: 'p384',
    byteLength: 48
  },
  secp521r1: {
    name: 'p521',
    byteLength: 66
  }
}

aliases.p224 = aliases.secp224r1
aliases.p256 = aliases.secp256r1 = aliases.prime256v1
aliases.p192 = aliases.secp192r1 = aliases.prime192v1
aliases.p384 = aliases.secp384r1
aliases.p521 = aliases.secp521r1

function ECDH (curve) {
  this.curveType = aliases[curve]
  if (!this.curveType) {
    this.curveType = {
      name: curve
    }
  }
  this.curve = new elliptic.ec(this.curveType.name) // eslint-disable-line new-cap
  this.keys = void 0
}

ECDH.prototype.generateKeys = function (enc, format) {
  this.keys = this.curve.genKeyPair()
  return this.getPublicKey(enc, format)
}

ECDH.prototype.computeSecret = function (other, inenc, enc) {
  inenc = inenc || 'utf8'
  if (!Buffer.isBuffer(other)) {
    other = new Buffer(other, inenc)
  }
  var otherPub = this.curve.keyFromPublic(other).getPublic()
  var out = otherPub.mul(this.keys.getPrivate()).getX()
  return formatReturnValue(out, enc, this.curveType.byteLength)
}

ECDH.prototype.getPublicKey = function (enc, format) {
  var key = this.keys.getPublic(format === 'compressed', true)
  if (format === 'hybrid') {
    if (key[key.length - 1] % 2) {
      key[0] = 7
    } else {
      key[0] = 6
    }
  }
  return formatReturnValue(key, enc)
}

ECDH.prototype.getPrivateKey = function (enc) {
  return formatReturnValue(this.keys.getPrivate(), enc)
}

ECDH.prototype.setPublicKey = function (pub, enc) {
  enc = enc || 'utf8'
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc)
  }
  this.keys._importPublic(pub)
  return this
}

ECDH.prototype.setPrivateKey = function (priv, enc) {
  enc = enc || 'utf8'
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc)
  }

  var _priv = new BN(priv)
  _priv = _priv.toString(16)
  this.keys = this.curve.genKeyPair()
  this.keys._importPrivate(_priv)
  return this
}

function formatReturnValue (bn, enc, len) {
  if (!Array.isArray(bn)) {
    bn = bn.toArray()
  }
  var buf = new Buffer(bn)
  if (len && buf.length < len) {
    var zeros = new Buffer(len - buf.length)
    zeros.fill(0)
    buf = Buffer.concat([zeros, buf])
  }
  if (!enc) {
    return buf
  } else {
    return buf.toString(enc)
  }
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/create-hash/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/create-hash/browser.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var MD5 = __webpack_require__(/*! md5.js */ "./node_modules/md5.js/index.js")
var RIPEMD160 = __webpack_require__(/*! ripemd160 */ "./node_modules/ripemd160/index.js")
var sha = __webpack_require__(/*! sha.js */ "./node_modules/sha.js/index.js")
var Base = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")

function Hash (hash) {
  Base.call(this, 'digest')

  this._hash = hash
}

inherits(Hash, Base)

Hash.prototype._update = function (data) {
  this._hash.update(data)
}

Hash.prototype._final = function () {
  return this._hash.digest()
}

module.exports = function createHash (alg) {
  alg = alg.toLowerCase()
  if (alg === 'md5') return new MD5()
  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()

  return new Hash(sha(alg))
}


/***/ }),

/***/ "./node_modules/create-hash/md5.js":
/*!*****************************************!*\
  !*** ./node_modules/create-hash/md5.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var MD5 = __webpack_require__(/*! md5.js */ "./node_modules/md5.js/index.js")

module.exports = function (buffer) {
  return new MD5().update(buffer).digest()
}


/***/ }),

/***/ "./node_modules/create-hmac/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/create-hmac/browser.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Legacy = __webpack_require__(/*! ./legacy */ "./node_modules/create-hmac/legacy.js")
var Base = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var md5 = __webpack_require__(/*! create-hash/md5 */ "./node_modules/create-hash/md5.js")
var RIPEMD160 = __webpack_require__(/*! ripemd160 */ "./node_modules/ripemd160/index.js")

var sha = __webpack_require__(/*! sha.js */ "./node_modules/sha.js/index.js")

var ZEROS = Buffer.alloc(128)

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  this._alg = alg
  this._key = key
  if (key.length > blocksize) {
    var hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
    key = hash.update(key).digest()
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }
  this._hash = alg === 'rmd160' ? new RIPEMD160() : sha(alg)
  this._hash.update(ipad)
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.update(data)
}

Hmac.prototype._final = function () {
  var h = this._hash.digest()
  var hash = this._alg === 'rmd160' ? new RIPEMD160() : sha(this._alg)
  return hash.update(this._opad).update(h).digest()
}

module.exports = function createHmac (alg, key) {
  alg = alg.toLowerCase()
  if (alg === 'rmd160' || alg === 'ripemd160') {
    return new Hmac('rmd160', key)
  }
  if (alg === 'md5') {
    return new Legacy(md5, key)
  }
  return new Hmac(alg, key)
}


/***/ }),

/***/ "./node_modules/create-hmac/legacy.js":
/*!********************************************!*\
  !*** ./node_modules/create-hmac/legacy.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var Base = __webpack_require__(/*! cipher-base */ "./node_modules/cipher-base/index.js")

var ZEROS = Buffer.alloc(128)
var blocksize = 64

function Hmac (alg, key) {
  Base.call(this, 'digest')
  if (typeof key === 'string') {
    key = Buffer.from(key)
  }

  this._alg = alg
  this._key = key

  if (key.length > blocksize) {
    key = alg(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = this._ipad = Buffer.allocUnsafe(blocksize)
  var opad = this._opad = Buffer.allocUnsafe(blocksize)

  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  this._hash = [ipad]
}

inherits(Hmac, Base)

Hmac.prototype._update = function (data) {
  this._hash.push(data)
}

Hmac.prototype._final = function () {
  var h = this._alg(Buffer.concat(this._hash))
  return this._alg(Buffer.concat([this._opad, h]))
}
module.exports = Hmac


/***/ }),

/***/ "./node_modules/crypto-browserify/index.js":
/*!*************************************************!*\
  !*** ./node_modules/crypto-browserify/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js")
exports.createHash = exports.Hash = __webpack_require__(/*! create-hash */ "./node_modules/create-hash/browser.js")
exports.createHmac = exports.Hmac = __webpack_require__(/*! create-hmac */ "./node_modules/create-hmac/browser.js")

var algos = __webpack_require__(/*! browserify-sign/algos */ "./node_modules/browserify-sign/algos.js")
var algoKeys = Object.keys(algos)
var hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)
exports.getHashes = function () {
  return hashes
}

var p = __webpack_require__(/*! pbkdf2 */ "./node_modules/pbkdf2/browser.js")
exports.pbkdf2 = p.pbkdf2
exports.pbkdf2Sync = p.pbkdf2Sync

var aes = __webpack_require__(/*! browserify-cipher */ "./node_modules/browserify-cipher/browser.js")

exports.Cipher = aes.Cipher
exports.createCipher = aes.createCipher
exports.Cipheriv = aes.Cipheriv
exports.createCipheriv = aes.createCipheriv
exports.Decipher = aes.Decipher
exports.createDecipher = aes.createDecipher
exports.Decipheriv = aes.Decipheriv
exports.createDecipheriv = aes.createDecipheriv
exports.getCiphers = aes.getCiphers
exports.listCiphers = aes.listCiphers

var dh = __webpack_require__(/*! diffie-hellman */ "./node_modules/diffie-hellman/browser.js")

exports.DiffieHellmanGroup = dh.DiffieHellmanGroup
exports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup
exports.getDiffieHellman = dh.getDiffieHellman
exports.createDiffieHellman = dh.createDiffieHellman
exports.DiffieHellman = dh.DiffieHellman

var sign = __webpack_require__(/*! browserify-sign */ "./node_modules/browserify-sign/browser/index.js")

exports.createSign = sign.createSign
exports.Sign = sign.Sign
exports.createVerify = sign.createVerify
exports.Verify = sign.Verify

exports.createECDH = __webpack_require__(/*! create-ecdh */ "./node_modules/create-ecdh/browser.js")

var publicEncrypt = __webpack_require__(/*! public-encrypt */ "./node_modules/public-encrypt/browser.js")

exports.publicEncrypt = publicEncrypt.publicEncrypt
exports.privateEncrypt = publicEncrypt.privateEncrypt
exports.publicDecrypt = publicEncrypt.publicDecrypt
exports.privateDecrypt = publicEncrypt.privateDecrypt

// the least I can do is make error messages for the rest of the node.js/crypto api.
// ;[
//   'createCredentials'
// ].forEach(function (name) {
//   exports[name] = function () {
//     throw new Error([
//       'sorry, ' + name + ' is not implemented yet',
//       'we accept pull requests',
//       'https://github.com/crypto-browserify/crypto-browserify'
//     ].join('\n'))
//   }
// })

var rf = __webpack_require__(/*! randomfill */ "./node_modules/randomfill/browser.js")

exports.randomFill = rf.randomFill
exports.randomFillSync = rf.randomFillSync

exports.createCredentials = function () {
  throw new Error([
    'sorry, createCredentials is not implemented yet',
    'we accept pull requests',
    'https://github.com/crypto-browserify/crypto-browserify'
  ].join('\n'))
}

exports.constants = {
  'DH_CHECK_P_NOT_SAFE_PRIME': 2,
  'DH_CHECK_P_NOT_PRIME': 1,
  'DH_UNABLE_TO_CHECK_GENERATOR': 4,
  'DH_NOT_SUITABLE_GENERATOR': 8,
  'NPN_ENABLED': 1,
  'ALPN_ENABLED': 1,
  'RSA_PKCS1_PADDING': 1,
  'RSA_SSLV23_PADDING': 2,
  'RSA_NO_PADDING': 3,
  'RSA_PKCS1_OAEP_PADDING': 4,
  'RSA_X931_PADDING': 5,
  'RSA_PKCS1_PSS_PADDING': 6,
  'POINT_CONVERSION_COMPRESSED': 2,
  'POINT_CONVERSION_UNCOMPRESSED': 4,
  'POINT_CONVERSION_HYBRID': 6
}


/***/ }),

/***/ "./node_modules/css-loader/index.js??ref--5-1!./node_modules/sass-loader/lib/loader.js??ref--5-2!./src/scss/style.scss":
/*!********************************************************************************************************************!*\
  !*** ./node_modules/css-loader??ref--5-1!./node_modules/sass-loader/lib/loader.js??ref--5-2!./src/scss/style.scss ***!
  \********************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ../../node_modules/css-loader/lib/css-base.js */ "./node_modules/css-loader/lib/css-base.js")(true);
// imports


// module
exports.push([module.i, "/* Style the list */\nul.tab {\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n  overflow: auto;\n  border: 1px solid #ccc;\n  background-color: #f1f1f1; }\n\n/* Float the list items side by side */\nul.tab li {\n  float: left; }\n\n/* Style the links inside the list items */\nul.tab li a {\n  display: inline-block;\n  color: black;\n  text-align: center;\n  padding: 14px 16px;\n  text-decoration: none;\n  transition: 0.3s;\n  font-size: 17px; }\n\n/* Change background color of links on hover */\nul.tab li a:hover {\n  background-color: #ddd; }\n\n/* Create an active/current tablink class */\nul.tab li a:focus, .active {\n  background-color: #ccc; }\n\n/* Style the tab content */\n.tabcontent {\n  width: 100%;\n  overflow: scroll;\n  display: none;\n  padding: 6px 12px;\n  border: 1px solid #ccc;\n  border-top: none; }\n", "", {"version":3,"sources":["W:/projects/ScannerBase/src/scss/src/scss/style.scss"],"names":[],"mappings":"AAAA,oBAAoB;AACpB;EACC,sBAAqB;EACrB,UAAS;EACT,WAAU;EACV,eAAc;EACd,uBAAsB;EACtB,0BAAyB,EACzB;;AAED,uCAAuC;AACvC;EAAW,YAAW,EAAG;;AAEzB,2CAA2C;AAC3C;EACC,sBAAqB;EACrB,aAAY;EACZ,mBAAkB;EAClB,mBAAkB;EAClB,sBAAqB;EACrB,iBAAgB;EAChB,gBAAe,EACf;;AAED,+CAA+C;AAC/C;EAAmB,uBAAsB,EAAG;;AAE5C,4CAA4C;AAC5C;EAA4B,uBAAsB,EAAG;;AAErD,2BAA2B;AAC3B;EACC,YAAW;EACX,iBAAgB;EAChB,cAAa;EACb,kBAAiB;EACjB,uBAAsB;EACtB,iBAAgB,EAChB","file":"style.scss","sourcesContent":["/* Style the list */\nul.tab {\n\tlist-style-type: none;\n\tmargin: 0;\n\tpadding: 0;\n\toverflow: auto;\n\tborder: 1px solid #ccc;\n\tbackground-color: #f1f1f1;\n}\n\n/* Float the list items side by side */\nul.tab li {float: left;}\n\n/* Style the links inside the list items */\nul.tab li a {\n\tdisplay: inline-block;\n\tcolor: black;\n\ttext-align: center;\n\tpadding: 14px 16px;\n\ttext-decoration: none;\n\ttransition: 0.3s;\n\tfont-size: 17px;\n}\n\n/* Change background color of links on hover */\nul.tab li a:hover {background-color: #ddd;}\n\n/* Create an active/current tablink class */\nul.tab li a:focus, .active {background-color: #ccc;}\n\n/* Style the tab content */\n.tabcontent {\n\twidth: 100%;\n\toverflow: scroll;\n\tdisplay: none;\n\tpadding: 6px 12px;\n\tborder: 1px solid #ccc;\n\tborder-top: none;\n}\n"],"sourceRoot":""}]);

// exports


/***/ }),

/***/ "./node_modules/css-loader/lib/css-base.js":
/*!*************************************************!*\
  !*** ./node_modules/css-loader/lib/css-base.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/
// css base code, injected by the css-loader
module.exports = function(useSourceMap) {
	var list = [];

	// return the list of modules as css string
	list.toString = function toString() {
		return this.map(function (item) {
			var content = cssWithMappingToString(item, useSourceMap);
			if(item[2]) {
				return "@media " + item[2] + "{" + content + "}";
			} else {
				return content;
			}
		}).join("");
	};

	// import a list of modules into the list
	list.i = function(modules, mediaQuery) {
		if(typeof modules === "string")
			modules = [[null, modules, ""]];
		var alreadyImportedModules = {};
		for(var i = 0; i < this.length; i++) {
			var id = this[i][0];
			if(typeof id === "number")
				alreadyImportedModules[id] = true;
		}
		for(i = 0; i < modules.length; i++) {
			var item = modules[i];
			// skip already imported module
			// this implementation is not 100% perfect for weird media query combinations
			//  when a module is imported multiple times with different media queries.
			//  I hope this will never occur (Hey this way we have smaller bundles)
			if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
				if(mediaQuery && !item[2]) {
					item[2] = mediaQuery;
				} else if(mediaQuery) {
					item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
				}
				list.push(item);
			}
		}
	};
	return list;
};

function cssWithMappingToString(item, useSourceMap) {
	var content = item[1] || '';
	var cssMapping = item[3];
	if (!cssMapping) {
		return content;
	}

	if (useSourceMap && typeof btoa === 'function') {
		var sourceMapping = toComment(cssMapping);
		var sourceURLs = cssMapping.sources.map(function (source) {
			return '/*# sourceURL=' + cssMapping.sourceRoot + source + ' */'
		});

		return [content].concat(sourceURLs).concat([sourceMapping]).join('\n');
	}

	return [content].join('\n');
}

// Adapted from convert-source-map (MIT)
function toComment(sourceMap) {
	// eslint-disable-next-line no-undef
	var base64 = btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap))));
	var data = 'sourceMappingURL=data:application/json;charset=utf-8;base64,' + base64;

	return '/*# ' + data + ' */';
}


/***/ }),

/***/ "./node_modules/des.js/lib/des.js":
/*!****************************************!*\
  !*** ./node_modules/des.js/lib/des.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.utils = __webpack_require__(/*! ./des/utils */ "./node_modules/des.js/lib/des/utils.js");
exports.Cipher = __webpack_require__(/*! ./des/cipher */ "./node_modules/des.js/lib/des/cipher.js");
exports.DES = __webpack_require__(/*! ./des/des */ "./node_modules/des.js/lib/des/des.js");
exports.CBC = __webpack_require__(/*! ./des/cbc */ "./node_modules/des.js/lib/des/cbc.js");
exports.EDE = __webpack_require__(/*! ./des/ede */ "./node_modules/des.js/lib/des/ede.js");


/***/ }),

/***/ "./node_modules/des.js/lib/des/cbc.js":
/*!********************************************!*\
  !*** ./node_modules/des.js/lib/des/cbc.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

var proto = {};

function CBCState(iv) {
  assert.equal(iv.length, 8, 'Invalid IV length');

  this.iv = new Array(8);
  for (var i = 0; i < this.iv.length; i++)
    this.iv[i] = iv[i];
}

function instantiate(Base) {
  function CBC(options) {
    Base.call(this, options);
    this._cbcInit();
  }
  inherits(CBC, Base);

  var keys = Object.keys(proto);
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    CBC.prototype[key] = proto[key];
  }

  CBC.create = function create(options) {
    return new CBC(options);
  };

  return CBC;
}

exports.instantiate = instantiate;

proto._cbcInit = function _cbcInit() {
  var state = new CBCState(this.options.iv);
  this._cbcState = state;
};

proto._update = function _update(inp, inOff, out, outOff) {
  var state = this._cbcState;
  var superProto = this.constructor.super_.prototype;

  var iv = state.iv;
  if (this.type === 'encrypt') {
    for (var i = 0; i < this.blockSize; i++)
      iv[i] ^= inp[inOff + i];

    superProto._update.call(this, iv, 0, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = out[outOff + i];
  } else {
    superProto._update.call(this, inp, inOff, out, outOff);

    for (var i = 0; i < this.blockSize; i++)
      out[outOff + i] ^= iv[i];

    for (var i = 0; i < this.blockSize; i++)
      iv[i] = inp[inOff + i];
  }
};


/***/ }),

/***/ "./node_modules/des.js/lib/des/cipher.js":
/*!***********************************************!*\
  !*** ./node_modules/des.js/lib/des/cipher.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

function Cipher(options) {
  this.options = options;

  this.type = this.options.type;
  this.blockSize = 8;
  this._init();

  this.buffer = new Array(this.blockSize);
  this.bufferOff = 0;
}
module.exports = Cipher;

Cipher.prototype._init = function _init() {
  // Might be overrided
};

Cipher.prototype.update = function update(data) {
  if (data.length === 0)
    return [];

  if (this.type === 'decrypt')
    return this._updateDecrypt(data);
  else
    return this._updateEncrypt(data);
};

Cipher.prototype._buffer = function _buffer(data, off) {
  // Append data to buffer
  var min = Math.min(this.buffer.length - this.bufferOff, data.length - off);
  for (var i = 0; i < min; i++)
    this.buffer[this.bufferOff + i] = data[off + i];
  this.bufferOff += min;

  // Shift next
  return min;
};

Cipher.prototype._flushBuffer = function _flushBuffer(out, off) {
  this._update(this.buffer, 0, out, off);
  this.bufferOff = 0;
  return this.blockSize;
};

Cipher.prototype._updateEncrypt = function _updateEncrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = ((this.bufferOff + data.length) / this.blockSize) | 0;
  var out = new Array(count * this.blockSize);

  if (this.bufferOff !== 0) {
    inputOff += this._buffer(data, inputOff);

    if (this.bufferOff === this.buffer.length)
      outputOff += this._flushBuffer(out, outputOff);
  }

  // Write blocks
  var max = data.length - ((data.length - inputOff) % this.blockSize);
  for (; inputOff < max; inputOff += this.blockSize) {
    this._update(data, inputOff, out, outputOff);
    outputOff += this.blockSize;
  }

  // Queue rest
  for (; inputOff < data.length; inputOff++, this.bufferOff++)
    this.buffer[this.bufferOff] = data[inputOff];

  return out;
};

Cipher.prototype._updateDecrypt = function _updateDecrypt(data) {
  var inputOff = 0;
  var outputOff = 0;

  var count = Math.ceil((this.bufferOff + data.length) / this.blockSize) - 1;
  var out = new Array(count * this.blockSize);

  // TODO(indutny): optimize it, this is far from optimal
  for (; count > 0; count--) {
    inputOff += this._buffer(data, inputOff);
    outputOff += this._flushBuffer(out, outputOff);
  }

  // Buffer rest of the input
  inputOff += this._buffer(data, inputOff);

  return out;
};

Cipher.prototype.final = function final(buffer) {
  var first;
  if (buffer)
    first = this.update(buffer);

  var last;
  if (this.type === 'encrypt')
    last = this._finalEncrypt();
  else
    last = this._finalDecrypt();

  if (first)
    return first.concat(last);
  else
    return last;
};

Cipher.prototype._pad = function _pad(buffer, off) {
  if (off === 0)
    return false;

  while (off < buffer.length)
    buffer[off++] = 0;

  return true;
};

Cipher.prototype._finalEncrypt = function _finalEncrypt() {
  if (!this._pad(this.buffer, this.bufferOff))
    return [];

  var out = new Array(this.blockSize);
  this._update(this.buffer, 0, out, 0);
  return out;
};

Cipher.prototype._unpad = function _unpad(buffer) {
  return buffer;
};

Cipher.prototype._finalDecrypt = function _finalDecrypt() {
  assert.equal(this.bufferOff, this.blockSize, 'Not enough data to decrypt');
  var out = new Array(this.blockSize);
  this._flushBuffer(out, 0);

  return this._unpad(out);
};


/***/ }),

/***/ "./node_modules/des.js/lib/des/des.js":
/*!********************************************!*\
  !*** ./node_modules/des.js/lib/des/des.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

var des = __webpack_require__(/*! ../des */ "./node_modules/des.js/lib/des.js");
var utils = des.utils;
var Cipher = des.Cipher;

function DESState() {
  this.tmp = new Array(2);
  this.keys = null;
}

function DES(options) {
  Cipher.call(this, options);

  var state = new DESState();
  this._desState = state;

  this.deriveKeys(state, options.key);
}
inherits(DES, Cipher);
module.exports = DES;

DES.create = function create(options) {
  return new DES(options);
};

var shiftTable = [
  1, 1, 2, 2, 2, 2, 2, 2,
  1, 2, 2, 2, 2, 2, 2, 1
];

DES.prototype.deriveKeys = function deriveKeys(state, key) {
  state.keys = new Array(16 * 2);

  assert.equal(key.length, this.blockSize, 'Invalid key length');

  var kL = utils.readUInt32BE(key, 0);
  var kR = utils.readUInt32BE(key, 4);

  utils.pc1(kL, kR, state.tmp, 0);
  kL = state.tmp[0];
  kR = state.tmp[1];
  for (var i = 0; i < state.keys.length; i += 2) {
    var shift = shiftTable[i >>> 1];
    kL = utils.r28shl(kL, shift);
    kR = utils.r28shl(kR, shift);
    utils.pc2(kL, kR, state.keys, i);
  }
};

DES.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._desState;

  var l = utils.readUInt32BE(inp, inOff);
  var r = utils.readUInt32BE(inp, inOff + 4);

  // Initial Permutation
  utils.ip(l, r, state.tmp, 0);
  l = state.tmp[0];
  r = state.tmp[1];

  if (this.type === 'encrypt')
    this._encrypt(state, l, r, state.tmp, 0);
  else
    this._decrypt(state, l, r, state.tmp, 0);

  l = state.tmp[0];
  r = state.tmp[1];

  utils.writeUInt32BE(out, l, outOff);
  utils.writeUInt32BE(out, r, outOff + 4);
};

DES.prototype._pad = function _pad(buffer, off) {
  var value = buffer.length - off;
  for (var i = off; i < buffer.length; i++)
    buffer[i] = value;

  return true;
};

DES.prototype._unpad = function _unpad(buffer) {
  var pad = buffer[buffer.length - 1];
  for (var i = buffer.length - pad; i < buffer.length; i++)
    assert.equal(buffer[i], pad);

  return buffer.slice(0, buffer.length - pad);
};

DES.prototype._encrypt = function _encrypt(state, lStart, rStart, out, off) {
  var l = lStart;
  var r = rStart;

  // Apply f() x16 times
  for (var i = 0; i < state.keys.length; i += 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(r, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = r;
    r = (l ^ f) >>> 0;
    l = t;
  }

  // Reverse Initial Permutation
  utils.rip(r, l, out, off);
};

DES.prototype._decrypt = function _decrypt(state, lStart, rStart, out, off) {
  var l = rStart;
  var r = lStart;

  // Apply f() x16 times
  for (var i = state.keys.length - 2; i >= 0; i -= 2) {
    var keyL = state.keys[i];
    var keyR = state.keys[i + 1];

    // f(r, k)
    utils.expand(l, state.tmp, 0);

    keyL ^= state.tmp[0];
    keyR ^= state.tmp[1];
    var s = utils.substitute(keyL, keyR);
    var f = utils.permute(s);

    var t = l;
    l = (r ^ f) >>> 0;
    r = t;
  }

  // Reverse Initial Permutation
  utils.rip(l, r, out, off);
};


/***/ }),

/***/ "./node_modules/des.js/lib/des/ede.js":
/*!********************************************!*\
  !*** ./node_modules/des.js/lib/des/ede.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

var des = __webpack_require__(/*! ../des */ "./node_modules/des.js/lib/des.js");
var Cipher = des.Cipher;
var DES = des.DES;

function EDEState(type, key) {
  assert.equal(key.length, 24, 'Invalid key length');

  var k1 = key.slice(0, 8);
  var k2 = key.slice(8, 16);
  var k3 = key.slice(16, 24);

  if (type === 'encrypt') {
    this.ciphers = [
      DES.create({ type: 'encrypt', key: k1 }),
      DES.create({ type: 'decrypt', key: k2 }),
      DES.create({ type: 'encrypt', key: k3 })
    ];
  } else {
    this.ciphers = [
      DES.create({ type: 'decrypt', key: k3 }),
      DES.create({ type: 'encrypt', key: k2 }),
      DES.create({ type: 'decrypt', key: k1 })
    ];
  }
}

function EDE(options) {
  Cipher.call(this, options);

  var state = new EDEState(this.type, this.options.key);
  this._edeState = state;
}
inherits(EDE, Cipher);

module.exports = EDE;

EDE.create = function create(options) {
  return new EDE(options);
};

EDE.prototype._update = function _update(inp, inOff, out, outOff) {
  var state = this._edeState;

  state.ciphers[0]._update(inp, inOff, out, outOff);
  state.ciphers[1]._update(out, outOff, out, outOff);
  state.ciphers[2]._update(out, outOff, out, outOff);
};

EDE.prototype._pad = DES.prototype._pad;
EDE.prototype._unpad = DES.prototype._unpad;


/***/ }),

/***/ "./node_modules/des.js/lib/des/utils.js":
/*!**********************************************!*\
  !*** ./node_modules/des.js/lib/des/utils.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.readUInt32BE = function readUInt32BE(bytes, off) {
  var res =  (bytes[0 + off] << 24) |
             (bytes[1 + off] << 16) |
             (bytes[2 + off] << 8) |
             bytes[3 + off];
  return res >>> 0;
};

exports.writeUInt32BE = function writeUInt32BE(bytes, value, off) {
  bytes[0 + off] = value >>> 24;
  bytes[1 + off] = (value >>> 16) & 0xff;
  bytes[2 + off] = (value >>> 8) & 0xff;
  bytes[3 + off] = value & 0xff;
};

exports.ip = function ip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }

  for (var i = 6; i >= 0; i -= 2) {
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
    }
    for (var j = 1; j <= 25; j += 8) {
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.rip = function rip(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  for (var i = 0; i < 4; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outL <<= 1;
      outL |= (inR >>> (j + i)) & 1;
      outL <<= 1;
      outL |= (inL >>> (j + i)) & 1;
    }
  }
  for (var i = 4; i < 8; i++) {
    for (var j = 24; j >= 0; j -= 8) {
      outR <<= 1;
      outR |= (inR >>> (j + i)) & 1;
      outR <<= 1;
      outR |= (inL >>> (j + i)) & 1;
    }
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.pc1 = function pc1(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  // 7, 15, 23, 31, 39, 47, 55, 63
  // 6, 14, 22, 30, 39, 47, 55, 63
  // 5, 13, 21, 29, 39, 47, 55, 63
  // 4, 12, 20, 28
  for (var i = 7; i >= 5; i--) {
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outL <<= 1;
      outL |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outL <<= 1;
    outL |= (inR >> (j + i)) & 1;
  }

  // 1, 9, 17, 25, 33, 41, 49, 57
  // 2, 10, 18, 26, 34, 42, 50, 58
  // 3, 11, 19, 27, 35, 43, 51, 59
  // 36, 44, 52, 60
  for (var i = 1; i <= 3; i++) {
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inR >> (j + i)) & 1;
    }
    for (var j = 0; j <= 24; j += 8) {
      outR <<= 1;
      outR |= (inL >> (j + i)) & 1;
    }
  }
  for (var j = 0; j <= 24; j += 8) {
    outR <<= 1;
    outR |= (inL >> (j + i)) & 1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.r28shl = function r28shl(num, shift) {
  return ((num << shift) & 0xfffffff) | (num >>> (28 - shift));
};

var pc2table = [
  // inL => outL
  14, 11, 17, 4, 27, 23, 25, 0,
  13, 22, 7, 18, 5, 9, 16, 24,
  2, 20, 12, 21, 1, 8, 15, 26,

  // inR => outR
  15, 4, 25, 19, 9, 1, 26, 16,
  5, 11, 23, 8, 12, 7, 17, 0,
  22, 3, 10, 14, 6, 20, 27, 24
];

exports.pc2 = function pc2(inL, inR, out, off) {
  var outL = 0;
  var outR = 0;

  var len = pc2table.length >>> 1;
  for (var i = 0; i < len; i++) {
    outL <<= 1;
    outL |= (inL >>> pc2table[i]) & 0x1;
  }
  for (var i = len; i < pc2table.length; i++) {
    outR <<= 1;
    outR |= (inR >>> pc2table[i]) & 0x1;
  }

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

exports.expand = function expand(r, out, off) {
  var outL = 0;
  var outR = 0;

  outL = ((r & 1) << 5) | (r >>> 27);
  for (var i = 23; i >= 15; i -= 4) {
    outL <<= 6;
    outL |= (r >>> i) & 0x3f;
  }
  for (var i = 11; i >= 3; i -= 4) {
    outR |= (r >>> i) & 0x3f;
    outR <<= 6;
  }
  outR |= ((r & 0x1f) << 1) | (r >>> 31);

  out[off + 0] = outL >>> 0;
  out[off + 1] = outR >>> 0;
};

var sTable = [
  14, 0, 4, 15, 13, 7, 1, 4, 2, 14, 15, 2, 11, 13, 8, 1,
  3, 10, 10, 6, 6, 12, 12, 11, 5, 9, 9, 5, 0, 3, 7, 8,
  4, 15, 1, 12, 14, 8, 8, 2, 13, 4, 6, 9, 2, 1, 11, 7,
  15, 5, 12, 11, 9, 3, 7, 14, 3, 10, 10, 0, 5, 6, 0, 13,

  15, 3, 1, 13, 8, 4, 14, 7, 6, 15, 11, 2, 3, 8, 4, 14,
  9, 12, 7, 0, 2, 1, 13, 10, 12, 6, 0, 9, 5, 11, 10, 5,
  0, 13, 14, 8, 7, 10, 11, 1, 10, 3, 4, 15, 13, 4, 1, 2,
  5, 11, 8, 6, 12, 7, 6, 12, 9, 0, 3, 5, 2, 14, 15, 9,

  10, 13, 0, 7, 9, 0, 14, 9, 6, 3, 3, 4, 15, 6, 5, 10,
  1, 2, 13, 8, 12, 5, 7, 14, 11, 12, 4, 11, 2, 15, 8, 1,
  13, 1, 6, 10, 4, 13, 9, 0, 8, 6, 15, 9, 3, 8, 0, 7,
  11, 4, 1, 15, 2, 14, 12, 3, 5, 11, 10, 5, 14, 2, 7, 12,

  7, 13, 13, 8, 14, 11, 3, 5, 0, 6, 6, 15, 9, 0, 10, 3,
  1, 4, 2, 7, 8, 2, 5, 12, 11, 1, 12, 10, 4, 14, 15, 9,
  10, 3, 6, 15, 9, 0, 0, 6, 12, 10, 11, 1, 7, 13, 13, 8,
  15, 9, 1, 4, 3, 5, 14, 11, 5, 12, 2, 7, 8, 2, 4, 14,

  2, 14, 12, 11, 4, 2, 1, 12, 7, 4, 10, 7, 11, 13, 6, 1,
  8, 5, 5, 0, 3, 15, 15, 10, 13, 3, 0, 9, 14, 8, 9, 6,
  4, 11, 2, 8, 1, 12, 11, 7, 10, 1, 13, 14, 7, 2, 8, 13,
  15, 6, 9, 15, 12, 0, 5, 9, 6, 10, 3, 4, 0, 5, 14, 3,

  12, 10, 1, 15, 10, 4, 15, 2, 9, 7, 2, 12, 6, 9, 8, 5,
  0, 6, 13, 1, 3, 13, 4, 14, 14, 0, 7, 11, 5, 3, 11, 8,
  9, 4, 14, 3, 15, 2, 5, 12, 2, 9, 8, 5, 12, 15, 3, 10,
  7, 11, 0, 14, 4, 1, 10, 7, 1, 6, 13, 0, 11, 8, 6, 13,

  4, 13, 11, 0, 2, 11, 14, 7, 15, 4, 0, 9, 8, 1, 13, 10,
  3, 14, 12, 3, 9, 5, 7, 12, 5, 2, 10, 15, 6, 8, 1, 6,
  1, 6, 4, 11, 11, 13, 13, 8, 12, 1, 3, 4, 7, 10, 14, 7,
  10, 9, 15, 5, 6, 0, 8, 15, 0, 14, 5, 2, 9, 3, 2, 12,

  13, 1, 2, 15, 8, 13, 4, 8, 6, 10, 15, 3, 11, 7, 1, 4,
  10, 12, 9, 5, 3, 6, 14, 11, 5, 0, 0, 14, 12, 9, 7, 2,
  7, 2, 11, 1, 4, 14, 1, 7, 9, 4, 12, 10, 14, 8, 2, 13,
  0, 15, 6, 12, 10, 9, 13, 0, 15, 3, 3, 5, 5, 6, 8, 11
];

exports.substitute = function substitute(inL, inR) {
  var out = 0;
  for (var i = 0; i < 4; i++) {
    var b = (inL >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  for (var i = 0; i < 4; i++) {
    var b = (inR >>> (18 - i * 6)) & 0x3f;
    var sb = sTable[4 * 0x40 + i * 0x40 + b];

    out <<= 4;
    out |= sb;
  }
  return out >>> 0;
};

var permuteTable = [
  16, 25, 12, 11, 3, 20, 4, 15, 31, 17, 9, 6, 27, 14, 1, 22,
  30, 24, 8, 18, 0, 5, 29, 23, 13, 19, 2, 26, 10, 21, 28, 7
];

exports.permute = function permute(num) {
  var out = 0;
  for (var i = 0; i < permuteTable.length; i++) {
    out <<= 1;
    out |= (num >>> permuteTable[i]) & 0x1;
  }
  return out >>> 0;
};

exports.padSplit = function padSplit(num, size, group) {
  var str = num.toString(2);
  while (str.length < size)
    str = '0' + str;

  var out = [];
  for (var i = 0; i < size; i += group)
    out.push(str.slice(i, i + group));
  return out.join(' ');
};


/***/ }),

/***/ "./node_modules/diffie-hellman/browser.js":
/*!************************************************!*\
  !*** ./node_modules/diffie-hellman/browser.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var generatePrime = __webpack_require__(/*! ./lib/generatePrime */ "./node_modules/diffie-hellman/lib/generatePrime.js")
var primes = __webpack_require__(/*! ./lib/primes.json */ "./node_modules/diffie-hellman/lib/primes.json")

var DH = __webpack_require__(/*! ./lib/dh */ "./node_modules/diffie-hellman/lib/dh.js")

function getDiffieHellman (mod) {
  var prime = new Buffer(primes[mod].prime, 'hex')
  var gen = new Buffer(primes[mod].gen, 'hex')

  return new DH(prime, gen)
}

var ENCODINGS = {
  'binary': true, 'hex': true, 'base64': true
}

function createDiffieHellman (prime, enc, generator, genc) {
  if (Buffer.isBuffer(enc) || ENCODINGS[enc] === undefined) {
    return createDiffieHellman(prime, 'binary', enc, generator)
  }

  enc = enc || 'binary'
  genc = genc || 'binary'
  generator = generator || new Buffer([2])

  if (!Buffer.isBuffer(generator)) {
    generator = new Buffer(generator, genc)
  }

  if (typeof prime === 'number') {
    return new DH(generatePrime(prime, generator), generator, true)
  }

  if (!Buffer.isBuffer(prime)) {
    prime = new Buffer(prime, enc)
  }

  return new DH(prime, generator, true)
}

exports.DiffieHellmanGroup = exports.createDiffieHellmanGroup = exports.getDiffieHellman = getDiffieHellman
exports.createDiffieHellman = exports.DiffieHellman = createDiffieHellman

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/diffie-hellman/lib/dh.js":
/*!***********************************************!*\
  !*** ./node_modules/diffie-hellman/lib/dh.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var MillerRabin = __webpack_require__(/*! miller-rabin */ "./node_modules/miller-rabin/lib/mr.js");
var millerRabin = new MillerRabin();
var TWENTYFOUR = new BN(24);
var ELEVEN = new BN(11);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var primes = __webpack_require__(/*! ./generatePrime */ "./node_modules/diffie-hellman/lib/generatePrime.js");
var randomBytes = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js");
module.exports = DH;

function setPublicKey(pub, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(pub)) {
    pub = new Buffer(pub, enc);
  }
  this._pub = new BN(pub);
  return this;
}

function setPrivateKey(priv, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(priv)) {
    priv = new Buffer(priv, enc);
  }
  this._priv = new BN(priv);
  return this;
}

var primeCache = {};
function checkPrime(prime, generator) {
  var gen = generator.toString('hex');
  var hex = [gen, prime.toString(16)].join('_');
  if (hex in primeCache) {
    return primeCache[hex];
  }
  var error = 0;

  if (prime.isEven() ||
    !primes.simpleSieve ||
    !primes.fermatTest(prime) ||
    !millerRabin.test(prime)) {
    //not a prime so +1
    error += 1;

    if (gen === '02' || gen === '05') {
      // we'd be able to check the generator
      // it would fail so +8
      error += 8;
    } else {
      //we wouldn't be able to test the generator
      // so +4
      error += 4;
    }
    primeCache[hex] = error;
    return error;
  }
  if (!millerRabin.test(prime.shrn(1))) {
    //not a safe prime
    error += 2;
  }
  var rem;
  switch (gen) {
    case '02':
      if (prime.mod(TWENTYFOUR).cmp(ELEVEN)) {
        // unsuidable generator
        error += 8;
      }
      break;
    case '05':
      rem = prime.mod(TEN);
      if (rem.cmp(THREE) && rem.cmp(SEVEN)) {
        // prime mod 10 needs to equal 3 or 7
        error += 8;
      }
      break;
    default:
      error += 4;
  }
  primeCache[hex] = error;
  return error;
}

function DH(prime, generator, malleable) {
  this.setGenerator(generator);
  this.__prime = new BN(prime);
  this._prime = BN.mont(this.__prime);
  this._primeLen = prime.length;
  this._pub = undefined;
  this._priv = undefined;
  this._primeCode = undefined;
  if (malleable) {
    this.setPublicKey = setPublicKey;
    this.setPrivateKey = setPrivateKey;
  } else {
    this._primeCode = 8;
  }
}
Object.defineProperty(DH.prototype, 'verifyError', {
  enumerable: true,
  get: function () {
    if (typeof this._primeCode !== 'number') {
      this._primeCode = checkPrime(this.__prime, this.__gen);
    }
    return this._primeCode;
  }
});
DH.prototype.generateKeys = function () {
  if (!this._priv) {
    this._priv = new BN(randomBytes(this._primeLen));
  }
  this._pub = this._gen.toRed(this._prime).redPow(this._priv).fromRed();
  return this.getPublicKey();
};

DH.prototype.computeSecret = function (other) {
  other = new BN(other);
  other = other.toRed(this._prime);
  var secret = other.redPow(this._priv).fromRed();
  var out = new Buffer(secret.toArray());
  var prime = this.getPrime();
  if (out.length < prime.length) {
    var front = new Buffer(prime.length - out.length);
    front.fill(0);
    out = Buffer.concat([front, out]);
  }
  return out;
};

DH.prototype.getPublicKey = function getPublicKey(enc) {
  return formatReturnValue(this._pub, enc);
};

DH.prototype.getPrivateKey = function getPrivateKey(enc) {
  return formatReturnValue(this._priv, enc);
};

DH.prototype.getPrime = function (enc) {
  return formatReturnValue(this.__prime, enc);
};

DH.prototype.getGenerator = function (enc) {
  return formatReturnValue(this._gen, enc);
};

DH.prototype.setGenerator = function (gen, enc) {
  enc = enc || 'utf8';
  if (!Buffer.isBuffer(gen)) {
    gen = new Buffer(gen, enc);
  }
  this.__gen = gen;
  this._gen = new BN(gen);
  return this;
};

function formatReturnValue(bn, enc) {
  var buf = new Buffer(bn.toArray());
  if (!enc) {
    return buf;
  } else {
    return buf.toString(enc);
  }
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/diffie-hellman/lib/generatePrime.js":
/*!**********************************************************!*\
  !*** ./node_modules/diffie-hellman/lib/generatePrime.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var randomBytes = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js");
module.exports = findPrime;
findPrime.simpleSieve = simpleSieve;
findPrime.fermatTest = fermatTest;
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var TWENTYFOUR = new BN(24);
var MillerRabin = __webpack_require__(/*! miller-rabin */ "./node_modules/miller-rabin/lib/mr.js");
var millerRabin = new MillerRabin();
var ONE = new BN(1);
var TWO = new BN(2);
var FIVE = new BN(5);
var SIXTEEN = new BN(16);
var EIGHT = new BN(8);
var TEN = new BN(10);
var THREE = new BN(3);
var SEVEN = new BN(7);
var ELEVEN = new BN(11);
var FOUR = new BN(4);
var TWELVE = new BN(12);
var primes = null;

function _getPrimes() {
  if (primes !== null)
    return primes;

  var limit = 0x100000;
  var res = [];
  res[0] = 2;
  for (var i = 1, k = 3; k < limit; k += 2) {
    var sqrt = Math.ceil(Math.sqrt(k));
    for (var j = 0; j < i && res[j] <= sqrt; j++)
      if (k % res[j] === 0)
        break;

    if (i !== j && res[j] <= sqrt)
      continue;

    res[i++] = k;
  }
  primes = res;
  return res;
}

function simpleSieve(p) {
  var primes = _getPrimes();

  for (var i = 0; i < primes.length; i++)
    if (p.modn(primes[i]) === 0) {
      if (p.cmpn(primes[i]) === 0) {
        return true;
      } else {
        return false;
      }
    }

  return true;
}

function fermatTest(p) {
  var red = BN.mont(p);
  return TWO.toRed(red).redPow(p.subn(1)).fromRed().cmpn(1) === 0;
}

function findPrime(bits, gen) {
  if (bits < 16) {
    // this is what openssl does
    if (gen === 2 || gen === 5) {
      return new BN([0x8c, 0x7b]);
    } else {
      return new BN([0x8c, 0x27]);
    }
  }
  gen = new BN(gen);

  var num, n2;

  while (true) {
    num = new BN(randomBytes(Math.ceil(bits / 8)));
    while (num.bitLength() > bits) {
      num.ishrn(1);
    }
    if (num.isEven()) {
      num.iadd(ONE);
    }
    if (!num.testn(1)) {
      num.iadd(TWO);
    }
    if (!gen.cmp(TWO)) {
      while (num.mod(TWENTYFOUR).cmp(ELEVEN)) {
        num.iadd(FOUR);
      }
    } else if (!gen.cmp(FIVE)) {
      while (num.mod(TEN).cmp(THREE)) {
        num.iadd(FOUR);
      }
    }
    n2 = num.shrn(1);
    if (simpleSieve(n2) && simpleSieve(num) &&
      fermatTest(n2) && fermatTest(num) &&
      millerRabin.test(n2) && millerRabin.test(num)) {
      return num;
    }
  }

}


/***/ }),

/***/ "./node_modules/diffie-hellman/lib/primes.json":
/*!*****************************************************!*\
  !*** ./node_modules/diffie-hellman/lib/primes.json ***!
  \*****************************************************/
/*! exports provided: modp1, modp2, modp5, modp14, modp15, modp16, modp17, modp18, default */
/***/ (function(module) {

module.exports = {"modp1":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a63a3620ffffffffffffffff"},"modp2":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece65381ffffffffffffffff"},"modp5":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca237327ffffffffffffffff"},"modp14":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aacaa68ffffffffffffffff"},"modp15":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a93ad2caffffffffffffffff"},"modp16":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c934063199ffffffffffffffff"},"modp17":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dcc4024ffffffffffffffff"},"modp18":{"gen":"02","prime":"ffffffffffffffffc90fdaa22168c234c4c6628b80dc1cd129024e088a67cc74020bbea63b139b22514a08798e3404ddef9519b3cd3a431b302b0a6df25f14374fe1356d6d51c245e485b576625e7ec6f44c42e9a637ed6b0bff5cb6f406b7edee386bfb5a899fa5ae9f24117c4b1fe649286651ece45b3dc2007cb8a163bf0598da48361c55d39a69163fa8fd24cf5f83655d23dca3ad961c62f356208552bb9ed529077096966d670c354e4abc9804f1746c08ca18217c32905e462e36ce3be39e772c180e86039b2783a2ec07a28fb5c55df06f4c52c9de2bcbf6955817183995497cea956ae515d2261898fa051015728e5a8aaac42dad33170d04507a33a85521abdf1cba64ecfb850458dbef0a8aea71575d060c7db3970f85a6e1e4c7abf5ae8cdb0933d71e8c94e04a25619dcee3d2261ad2ee6bf12ffa06d98a0864d87602733ec86a64521f2b18177b200cbbe117577a615d6c770988c0bad946e208e24fa074e5ab3143db5bfce0fd108e4b82d120a92108011a723c12a787e6d788719a10bdba5b2699c327186af4e23c1a946834b6150bda2583e9ca2ad44ce8dbbbc2db04de8ef92e8efc141fbecaa6287c59474e6bc05d99b2964fa090c3a2233ba186515be7ed1f612970cee2d7afb81bdd762170481cd0069127d5b05aa993b4ea988d8fddc186ffb7dc90a6c08f4df435c93402849236c3fab4d27c7026c1d4dcb2602646dec9751e763dba37bdf8ff9406ad9e530ee5db382f413001aeb06a53ed9027d831179727b0865a8918da3edbebcf9b14ed44ce6cbaced4bb1bdb7f1447e6cc254b332051512bd7af426fb8f401378cd2bf5983ca01c64b92ecf032ea15d1721d03f482d7ce6e74fef6d55e702f46980c82b5a84031900b1c9e59e7c97fbec7e8f323a97a7e36cc88be0f1d45b7ff585ac54bd407b22b4154aacc8f6d7ebf48e1d814cc5ed20f8037e0a79715eef29be32806a1d58bb7c5da76f550aa3d8a1fbff0eb19ccb1a313d55cda56c9ec2ef29632387fe8d76e3c0468043e8f663f4860ee12bf2d5b0b7474d6e694f91e6dbe115974a3926f12fee5e438777cb6a932df8cd8bec4d073b931ba3bc832b68d9dd300741fa7bf8afc47ed2576f6936ba424663aab639c5ae4f5683423b4742bf1c978238f16cbe39d652de3fdb8befc848ad922222e04a4037c0713eb57a81a23f0c73473fc646cea306b4bcbc8862f8385ddfa9d4b7fa2c087e879683303ed5bdd3a062b3cf5b3a278a66d2a13f83f44f82ddf310ee074ab6a364597e899a0255dc164f31cc50846851df9ab48195ded7ea1b1d510bd7ee74d73faf36bc31ecfa268359046f4eb879f924009438b481c6cd7889a002ed5ee382bc9190da6fc026e479558e4475677e9aa9e3050e2765694dfc81f56e880b96e7160c980dd98edd3dfffffffffffffffff"}};

/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic.js":
/*!***********************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var elliptic = exports;

elliptic.version = __webpack_require__(/*! ../package.json */ "./node_modules/elliptic/package.json").version;
elliptic.utils = __webpack_require__(/*! ./elliptic/utils */ "./node_modules/elliptic/lib/elliptic/utils.js");
elliptic.rand = __webpack_require__(/*! brorand */ "./node_modules/brorand/index.js");
elliptic.curve = __webpack_require__(/*! ./elliptic/curve */ "./node_modules/elliptic/lib/elliptic/curve/index.js");
elliptic.curves = __webpack_require__(/*! ./elliptic/curves */ "./node_modules/elliptic/lib/elliptic/curves.js");

// Protocols
elliptic.ec = __webpack_require__(/*! ./elliptic/ec */ "./node_modules/elliptic/lib/elliptic/ec/index.js");
elliptic.eddsa = __webpack_require__(/*! ./elliptic/eddsa */ "./node_modules/elliptic/lib/elliptic/eddsa/index.js");


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/base.js":
/*!**********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/base.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/elliptic/lib/elliptic.js");
var utils = elliptic.utils;
var getNAF = utils.getNAF;
var getJSF = utils.getJSF;
var assert = utils.assert;

function BaseCurve(type, conf) {
  this.type = type;
  this.p = new BN(conf.p, 16);

  // Use Montgomery, when there is no fast reduction for the prime
  this.red = conf.prime ? BN.red(conf.prime) : BN.mont(this.p);

  // Useful for many curves
  this.zero = new BN(0).toRed(this.red);
  this.one = new BN(1).toRed(this.red);
  this.two = new BN(2).toRed(this.red);

  // Curve configuration, optional
  this.n = conf.n && new BN(conf.n, 16);
  this.g = conf.g && this.pointFromJSON(conf.g, conf.gRed);

  // Temporary arrays
  this._wnafT1 = new Array(4);
  this._wnafT2 = new Array(4);
  this._wnafT3 = new Array(4);
  this._wnafT4 = new Array(4);

  // Generalized Greg Maxwell's trick
  var adjustCount = this.n && this.p.div(this.n);
  if (!adjustCount || adjustCount.cmpn(100) > 0) {
    this.redN = null;
  } else {
    this._maxwellTrick = true;
    this.redN = this.n.toRed(this.red);
  }
}
module.exports = BaseCurve;

BaseCurve.prototype.point = function point() {
  throw new Error('Not implemented');
};

BaseCurve.prototype.validate = function validate() {
  throw new Error('Not implemented');
};

BaseCurve.prototype._fixedNafMul = function _fixedNafMul(p, k) {
  assert(p.precomputed);
  var doubles = p._getDoubles();

  var naf = getNAF(k, 1);
  var I = (1 << (doubles.step + 1)) - (doubles.step % 2 === 0 ? 2 : 1);
  I /= 3;

  // Translate into more windowed form
  var repr = [];
  for (var j = 0; j < naf.length; j += doubles.step) {
    var nafW = 0;
    for (var k = j + doubles.step - 1; k >= j; k--)
      nafW = (nafW << 1) + naf[k];
    repr.push(nafW);
  }

  var a = this.jpoint(null, null, null);
  var b = this.jpoint(null, null, null);
  for (var i = I; i > 0; i--) {
    for (var j = 0; j < repr.length; j++) {
      var nafW = repr[j];
      if (nafW === i)
        b = b.mixedAdd(doubles.points[j]);
      else if (nafW === -i)
        b = b.mixedAdd(doubles.points[j].neg());
    }
    a = a.add(b);
  }
  return a.toP();
};

BaseCurve.prototype._wnafMul = function _wnafMul(p, k) {
  var w = 4;

  // Precompute window
  var nafPoints = p._getNAFPoints(w);
  w = nafPoints.wnd;
  var wnd = nafPoints.points;

  // Get NAF form
  var naf = getNAF(k, w);

  // Add `this`*(N+1) for every w-NAF index
  var acc = this.jpoint(null, null, null);
  for (var i = naf.length - 1; i >= 0; i--) {
    // Count zeroes
    for (var k = 0; i >= 0 && naf[i] === 0; i--)
      k++;
    if (i >= 0)
      k++;
    acc = acc.dblp(k);

    if (i < 0)
      break;
    var z = naf[i];
    assert(z !== 0);
    if (p.type === 'affine') {
      // J +- P
      if (z > 0)
        acc = acc.mixedAdd(wnd[(z - 1) >> 1]);
      else
        acc = acc.mixedAdd(wnd[(-z - 1) >> 1].neg());
    } else {
      // J +- J
      if (z > 0)
        acc = acc.add(wnd[(z - 1) >> 1]);
      else
        acc = acc.add(wnd[(-z - 1) >> 1].neg());
    }
  }
  return p.type === 'affine' ? acc.toP() : acc;
};

BaseCurve.prototype._wnafMulAdd = function _wnafMulAdd(defW,
                                                       points,
                                                       coeffs,
                                                       len,
                                                       jacobianResult) {
  var wndWidth = this._wnafT1;
  var wnd = this._wnafT2;
  var naf = this._wnafT3;

  // Fill all arrays
  var max = 0;
  for (var i = 0; i < len; i++) {
    var p = points[i];
    var nafPoints = p._getNAFPoints(defW);
    wndWidth[i] = nafPoints.wnd;
    wnd[i] = nafPoints.points;
  }

  // Comb small window NAFs
  for (var i = len - 1; i >= 1; i -= 2) {
    var a = i - 1;
    var b = i;
    if (wndWidth[a] !== 1 || wndWidth[b] !== 1) {
      naf[a] = getNAF(coeffs[a], wndWidth[a]);
      naf[b] = getNAF(coeffs[b], wndWidth[b]);
      max = Math.max(naf[a].length, max);
      max = Math.max(naf[b].length, max);
      continue;
    }

    var comb = [
      points[a], /* 1 */
      null, /* 3 */
      null, /* 5 */
      points[b] /* 7 */
    ];

    // Try to avoid Projective points, if possible
    if (points[a].y.cmp(points[b].y) === 0) {
      comb[1] = points[a].add(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    } else if (points[a].y.cmp(points[b].y.redNeg()) === 0) {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].add(points[b].neg());
    } else {
      comb[1] = points[a].toJ().mixedAdd(points[b]);
      comb[2] = points[a].toJ().mixedAdd(points[b].neg());
    }

    var index = [
      -3, /* -1 -1 */
      -1, /* -1 0 */
      -5, /* -1 1 */
      -7, /* 0 -1 */
      0, /* 0 0 */
      7, /* 0 1 */
      5, /* 1 -1 */
      1, /* 1 0 */
      3  /* 1 1 */
    ];

    var jsf = getJSF(coeffs[a], coeffs[b]);
    max = Math.max(jsf[0].length, max);
    naf[a] = new Array(max);
    naf[b] = new Array(max);
    for (var j = 0; j < max; j++) {
      var ja = jsf[0][j] | 0;
      var jb = jsf[1][j] | 0;

      naf[a][j] = index[(ja + 1) * 3 + (jb + 1)];
      naf[b][j] = 0;
      wnd[a] = comb;
    }
  }

  var acc = this.jpoint(null, null, null);
  var tmp = this._wnafT4;
  for (var i = max; i >= 0; i--) {
    var k = 0;

    while (i >= 0) {
      var zero = true;
      for (var j = 0; j < len; j++) {
        tmp[j] = naf[j][i] | 0;
        if (tmp[j] !== 0)
          zero = false;
      }
      if (!zero)
        break;
      k++;
      i--;
    }
    if (i >= 0)
      k++;
    acc = acc.dblp(k);
    if (i < 0)
      break;

    for (var j = 0; j < len; j++) {
      var z = tmp[j];
      var p;
      if (z === 0)
        continue;
      else if (z > 0)
        p = wnd[j][(z - 1) >> 1];
      else if (z < 0)
        p = wnd[j][(-z - 1) >> 1].neg();

      if (p.type === 'affine')
        acc = acc.mixedAdd(p);
      else
        acc = acc.add(p);
    }
  }
  // Zeroify references
  for (var i = 0; i < len; i++)
    wnd[i] = null;

  if (jacobianResult)
    return acc;
  else
    return acc.toP();
};

function BasePoint(curve, type) {
  this.curve = curve;
  this.type = type;
  this.precomputed = null;
}
BaseCurve.BasePoint = BasePoint;

BasePoint.prototype.eq = function eq(/*other*/) {
  throw new Error('Not implemented');
};

BasePoint.prototype.validate = function validate() {
  return this.curve.validate(this);
};

BaseCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  bytes = utils.toArray(bytes, enc);

  var len = this.p.byteLength();

  // uncompressed, hybrid-odd, hybrid-even
  if ((bytes[0] === 0x04 || bytes[0] === 0x06 || bytes[0] === 0x07) &&
      bytes.length - 1 === 2 * len) {
    if (bytes[0] === 0x06)
      assert(bytes[bytes.length - 1] % 2 === 0);
    else if (bytes[0] === 0x07)
      assert(bytes[bytes.length - 1] % 2 === 1);

    var res =  this.point(bytes.slice(1, 1 + len),
                          bytes.slice(1 + len, 1 + 2 * len));

    return res;
  } else if ((bytes[0] === 0x02 || bytes[0] === 0x03) &&
              bytes.length - 1 === len) {
    return this.pointFromX(bytes.slice(1, 1 + len), bytes[0] === 0x03);
  }
  throw new Error('Unknown point format');
};

BasePoint.prototype.encodeCompressed = function encodeCompressed(enc) {
  return this.encode(enc, true);
};

BasePoint.prototype._encode = function _encode(compact) {
  var len = this.curve.p.byteLength();
  var x = this.getX().toArray('be', len);

  if (compact)
    return [ this.getY().isEven() ? 0x02 : 0x03 ].concat(x);

  return [ 0x04 ].concat(x, this.getY().toArray('be', len)) ;
};

BasePoint.prototype.encode = function encode(enc, compact) {
  return utils.encode(this._encode(compact), enc);
};

BasePoint.prototype.precompute = function precompute(power) {
  if (this.precomputed)
    return this;

  var precomputed = {
    doubles: null,
    naf: null,
    beta: null
  };
  precomputed.naf = this._getNAFPoints(8);
  precomputed.doubles = this._getDoubles(4, power);
  precomputed.beta = this._getBeta();
  this.precomputed = precomputed;

  return this;
};

BasePoint.prototype._hasDoubles = function _hasDoubles(k) {
  if (!this.precomputed)
    return false;

  var doubles = this.precomputed.doubles;
  if (!doubles)
    return false;

  return doubles.points.length >= Math.ceil((k.bitLength() + 1) / doubles.step);
};

BasePoint.prototype._getDoubles = function _getDoubles(step, power) {
  if (this.precomputed && this.precomputed.doubles)
    return this.precomputed.doubles;

  var doubles = [ this ];
  var acc = this;
  for (var i = 0; i < power; i += step) {
    for (var j = 0; j < step; j++)
      acc = acc.dbl();
    doubles.push(acc);
  }
  return {
    step: step,
    points: doubles
  };
};

BasePoint.prototype._getNAFPoints = function _getNAFPoints(wnd) {
  if (this.precomputed && this.precomputed.naf)
    return this.precomputed.naf;

  var res = [ this ];
  var max = (1 << wnd) - 1;
  var dbl = max === 1 ? null : this.dbl();
  for (var i = 1; i < max; i++)
    res[i] = res[i - 1].add(dbl);
  return {
    wnd: wnd,
    points: res
  };
};

BasePoint.prototype._getBeta = function _getBeta() {
  return null;
};

BasePoint.prototype.dblp = function dblp(k) {
  var r = this;
  for (var i = 0; i < k; i++)
    r = r.dbl();
  return r;
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/edwards.js":
/*!*************************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/edwards.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curve = __webpack_require__(/*! ../curve */ "./node_modules/elliptic/lib/elliptic/curve/index.js");
var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/elliptic/lib/elliptic.js");
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
var Base = curve.base;

var assert = elliptic.utils.assert;

function EdwardsCurve(conf) {
  // NOTE: Important as we are creating point in Base.call()
  this.twisted = (conf.a | 0) !== 1;
  this.mOneA = this.twisted && (conf.a | 0) === -1;
  this.extended = this.mOneA;

  Base.call(this, 'edwards', conf);

  this.a = new BN(conf.a, 16).umod(this.red.m);
  this.a = this.a.toRed(this.red);
  this.c = new BN(conf.c, 16).toRed(this.red);
  this.c2 = this.c.redSqr();
  this.d = new BN(conf.d, 16).toRed(this.red);
  this.dd = this.d.redAdd(this.d);

  assert(!this.twisted || this.c.fromRed().cmpn(1) === 0);
  this.oneC = (conf.c | 0) === 1;
}
inherits(EdwardsCurve, Base);
module.exports = EdwardsCurve;

EdwardsCurve.prototype._mulA = function _mulA(num) {
  if (this.mOneA)
    return num.redNeg();
  else
    return this.a.redMul(num);
};

EdwardsCurve.prototype._mulC = function _mulC(num) {
  if (this.oneC)
    return num;
  else
    return this.c.redMul(num);
};

// Just for compatibility with Short curve
EdwardsCurve.prototype.jpoint = function jpoint(x, y, z, t) {
  return this.point(x, y, z, t);
};

EdwardsCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var x2 = x.redSqr();
  var rhs = this.c2.redSub(this.a.redMul(x2));
  var lhs = this.one.redSub(this.c2.redMul(this.d).redMul(x2));

  var y2 = rhs.redMul(lhs.redInvm());
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.pointFromY = function pointFromY(y, odd) {
  y = new BN(y, 16);
  if (!y.red)
    y = y.toRed(this.red);

  // x^2 = (y^2 - 1) / (d y^2 + 1)
  var y2 = y.redSqr();
  var lhs = y2.redSub(this.one);
  var rhs = y2.redMul(this.d).redAdd(this.one);
  var x2 = lhs.redMul(rhs.redInvm());

  if (x2.cmp(this.zero) === 0) {
    if (odd)
      throw new Error('invalid point');
    else
      return this.point(this.zero, y);
  }

  var x = x2.redSqrt();
  if (x.redSqr().redSub(x2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  if (x.isOdd() !== odd)
    x = x.redNeg();

  return this.point(x, y);
};

EdwardsCurve.prototype.validate = function validate(point) {
  if (point.isInfinity())
    return true;

  // Curve: A * X^2 + Y^2 = C^2 * (1 + D * X^2 * Y^2)
  point.normalize();

  var x2 = point.x.redSqr();
  var y2 = point.y.redSqr();
  var lhs = x2.redMul(this.a).redAdd(y2);
  var rhs = this.c2.redMul(this.one.redAdd(this.d.redMul(x2).redMul(y2)));

  return lhs.cmp(rhs) === 0;
};

function Point(curve, x, y, z, t) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && y === null && z === null) {
    this.x = this.curve.zero;
    this.y = this.curve.one;
    this.z = this.curve.one;
    this.t = this.curve.zero;
    this.zOne = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = z ? new BN(z, 16) : this.curve.one;
    this.t = t && new BN(t, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
    if (this.t && !this.t.red)
      this.t = this.t.toRed(this.curve.red);
    this.zOne = this.z === this.curve.one;

    // Use extended coordinates
    if (this.curve.extended && !this.t) {
      this.t = this.x.redMul(this.y);
      if (!this.zOne)
        this.t = this.t.redMul(this.z.redInvm());
    }
  }
}
inherits(Point, Base.BasePoint);

EdwardsCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

EdwardsCurve.prototype.point = function point(x, y, z, t) {
  return new Point(this, x, y, z, t);
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1], obj[2]);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.x.cmpn(0) === 0 &&
         this.y.cmp(this.z) === 0;
};

Point.prototype._extDbl = function _extDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #doubling-dbl-2008-hwcd
  // 4M + 4S

  // A = X1^2
  var a = this.x.redSqr();
  // B = Y1^2
  var b = this.y.redSqr();
  // C = 2 * Z1^2
  var c = this.z.redSqr();
  c = c.redIAdd(c);
  // D = a * A
  var d = this.curve._mulA(a);
  // E = (X1 + Y1)^2 - A - B
  var e = this.x.redAdd(this.y).redSqr().redISub(a).redISub(b);
  // G = D + B
  var g = d.redAdd(b);
  // F = G - C
  var f = g.redSub(c);
  // H = D - B
  var h = d.redSub(b);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projDbl = function _projDbl() {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #doubling-dbl-2008-bbjlp
  //     #doubling-dbl-2007-bl
  // and others
  // Generally 3M + 4S or 2M + 4S

  // B = (X1 + Y1)^2
  var b = this.x.redAdd(this.y).redSqr();
  // C = X1^2
  var c = this.x.redSqr();
  // D = Y1^2
  var d = this.y.redSqr();

  var nx;
  var ny;
  var nz;
  if (this.curve.twisted) {
    // E = a * C
    var e = this.curve._mulA(c);
    // F = E + D
    var f = e.redAdd(d);
    if (this.zOne) {
      // X3 = (B - C - D) * (F - 2)
      nx = b.redSub(c).redSub(d).redMul(f.redSub(this.curve.two));
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F^2 - 2 * F
      nz = f.redSqr().redSub(f).redSub(f);
    } else {
      // H = Z1^2
      var h = this.z.redSqr();
      // J = F - 2 * H
      var j = f.redSub(h).redISub(h);
      // X3 = (B-C-D)*J
      nx = b.redSub(c).redISub(d).redMul(j);
      // Y3 = F * (E - D)
      ny = f.redMul(e.redSub(d));
      // Z3 = F * J
      nz = f.redMul(j);
    }
  } else {
    // E = C + D
    var e = c.redAdd(d);
    // H = (c * Z1)^2
    var h = this.curve._mulC(this.c.redMul(this.z)).redSqr();
    // J = E - 2 * H
    var j = e.redSub(h).redSub(h);
    // X3 = c * (B - E) * J
    nx = this.curve._mulC(b.redISub(e)).redMul(j);
    // Y3 = c * E * (C - D)
    ny = this.curve._mulC(e).redMul(c.redISub(d));
    // Z3 = E * J
    nz = e.redMul(j);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  // Double in extended coordinates
  if (this.curve.extended)
    return this._extDbl();
  else
    return this._projDbl();
};

Point.prototype._extAdd = function _extAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-extended-1.html
  //     #addition-add-2008-hwcd-3
  // 8M

  // A = (Y1 - X1) * (Y2 - X2)
  var a = this.y.redSub(this.x).redMul(p.y.redSub(p.x));
  // B = (Y1 + X1) * (Y2 + X2)
  var b = this.y.redAdd(this.x).redMul(p.y.redAdd(p.x));
  // C = T1 * k * T2
  var c = this.t.redMul(this.curve.dd).redMul(p.t);
  // D = Z1 * 2 * Z2
  var d = this.z.redMul(p.z.redAdd(p.z));
  // E = B - A
  var e = b.redSub(a);
  // F = D - C
  var f = d.redSub(c);
  // G = D + C
  var g = d.redAdd(c);
  // H = B + A
  var h = b.redAdd(a);
  // X3 = E * F
  var nx = e.redMul(f);
  // Y3 = G * H
  var ny = g.redMul(h);
  // T3 = E * H
  var nt = e.redMul(h);
  // Z3 = F * G
  var nz = f.redMul(g);
  return this.curve.point(nx, ny, nz, nt);
};

Point.prototype._projAdd = function _projAdd(p) {
  // hyperelliptic.org/EFD/g1p/auto-twisted-projective.html
  //     #addition-add-2008-bbjlp
  //     #addition-add-2007-bl
  // 10M + 1S

  // A = Z1 * Z2
  var a = this.z.redMul(p.z);
  // B = A^2
  var b = a.redSqr();
  // C = X1 * X2
  var c = this.x.redMul(p.x);
  // D = Y1 * Y2
  var d = this.y.redMul(p.y);
  // E = d * C * D
  var e = this.curve.d.redMul(c).redMul(d);
  // F = B - E
  var f = b.redSub(e);
  // G = B + E
  var g = b.redAdd(e);
  // X3 = A * F * ((X1 + Y1) * (X2 + Y2) - C - D)
  var tmp = this.x.redAdd(this.y).redMul(p.x.redAdd(p.y)).redISub(c).redISub(d);
  var nx = a.redMul(f).redMul(tmp);
  var ny;
  var nz;
  if (this.curve.twisted) {
    // Y3 = A * G * (D - a * C)
    ny = a.redMul(g).redMul(d.redSub(this.curve._mulA(c)));
    // Z3 = F * G
    nz = f.redMul(g);
  } else {
    // Y3 = A * G * (D - C)
    ny = a.redMul(g).redMul(d.redSub(c));
    // Z3 = c * F * G
    nz = this.curve._mulC(f).redMul(g);
  }
  return this.curve.point(nx, ny, nz);
};

Point.prototype.add = function add(p) {
  if (this.isInfinity())
    return p;
  if (p.isInfinity())
    return this;

  if (this.curve.extended)
    return this._extAdd(p);
  else
    return this._projAdd(p);
};

Point.prototype.mul = function mul(k) {
  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, false);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p, k2) {
  return this.curve._wnafMulAdd(1, [ this, p ], [ k1, k2 ], 2, true);
};

Point.prototype.normalize = function normalize() {
  if (this.zOne)
    return this;

  // Normalize coordinates
  var zi = this.z.redInvm();
  this.x = this.x.redMul(zi);
  this.y = this.y.redMul(zi);
  if (this.t)
    this.t = this.t.redMul(zi);
  this.z = this.curve.one;
  this.zOne = true;
  return this;
};

Point.prototype.neg = function neg() {
  return this.curve.point(this.x.redNeg(),
                          this.y,
                          this.z,
                          this.t && this.t.redNeg());
};

Point.prototype.getX = function getX() {
  this.normalize();
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  this.normalize();
  return this.y.fromRed();
};

Point.prototype.eq = function eq(other) {
  return this === other ||
         this.getX().cmp(other.getX()) === 0 &&
         this.getY().cmp(other.getY()) === 0;
};

Point.prototype.eqXToP = function eqXToP(x) {
  var rx = x.toRed(this.curve.red).redMul(this.z);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(this.z);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
  return false;
};

// Compatibility with BaseCurve
Point.prototype.toP = Point.prototype.normalize;
Point.prototype.mixedAdd = Point.prototype.add;


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curve = exports;

curve.base = __webpack_require__(/*! ./base */ "./node_modules/elliptic/lib/elliptic/curve/base.js");
curve.short = __webpack_require__(/*! ./short */ "./node_modules/elliptic/lib/elliptic/curve/short.js");
curve.mont = __webpack_require__(/*! ./mont */ "./node_modules/elliptic/lib/elliptic/curve/mont.js");
curve.edwards = __webpack_require__(/*! ./edwards */ "./node_modules/elliptic/lib/elliptic/curve/edwards.js");


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/mont.js":
/*!**********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/mont.js ***!
  \**********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curve = __webpack_require__(/*! ../curve */ "./node_modules/elliptic/lib/elliptic/curve/index.js");
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
var Base = curve.base;

var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/elliptic/lib/elliptic.js");
var utils = elliptic.utils;

function MontCurve(conf) {
  Base.call(this, 'mont', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.i4 = new BN(4).toRed(this.red).redInvm();
  this.two = new BN(2).toRed(this.red);
  this.a24 = this.i4.redMul(this.a.redAdd(this.two));
}
inherits(MontCurve, Base);
module.exports = MontCurve;

MontCurve.prototype.validate = function validate(point) {
  var x = point.normalize().x;
  var x2 = x.redSqr();
  var rhs = x2.redMul(x).redAdd(x2.redMul(this.a)).redAdd(x);
  var y = rhs.redSqrt();

  return y.redSqr().cmp(rhs) === 0;
};

function Point(curve, x, z) {
  Base.BasePoint.call(this, curve, 'projective');
  if (x === null && z === null) {
    this.x = this.curve.one;
    this.z = this.curve.zero;
  } else {
    this.x = new BN(x, 16);
    this.z = new BN(z, 16);
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.z.red)
      this.z = this.z.toRed(this.curve.red);
  }
}
inherits(Point, Base.BasePoint);

MontCurve.prototype.decodePoint = function decodePoint(bytes, enc) {
  return this.point(utils.toArray(bytes, enc), 1);
};

MontCurve.prototype.point = function point(x, z) {
  return new Point(this, x, z);
};

MontCurve.prototype.pointFromJSON = function pointFromJSON(obj) {
  return Point.fromJSON(this, obj);
};

Point.prototype.precompute = function precompute() {
  // No-op
};

Point.prototype._encode = function _encode() {
  return this.getX().toArray('be', this.curve.p.byteLength());
};

Point.fromJSON = function fromJSON(curve, obj) {
  return new Point(curve, obj[0], obj[1] || curve.one);
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' z: ' + this.z.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};

Point.prototype.dbl = function dbl() {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#doubling-dbl-1987-m-3
  // 2M + 2S + 4A

  // A = X1 + Z1
  var a = this.x.redAdd(this.z);
  // AA = A^2
  var aa = a.redSqr();
  // B = X1 - Z1
  var b = this.x.redSub(this.z);
  // BB = B^2
  var bb = b.redSqr();
  // C = AA - BB
  var c = aa.redSub(bb);
  // X3 = AA * BB
  var nx = aa.redMul(bb);
  // Z3 = C * (BB + A24 * C)
  var nz = c.redMul(bb.redAdd(this.curve.a24.redMul(c)));
  return this.curve.point(nx, nz);
};

Point.prototype.add = function add() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.diffAdd = function diffAdd(p, diff) {
  // http://hyperelliptic.org/EFD/g1p/auto-montgom-xz.html#diffadd-dadd-1987-m-3
  // 4M + 2S + 6A

  // A = X2 + Z2
  var a = this.x.redAdd(this.z);
  // B = X2 - Z2
  var b = this.x.redSub(this.z);
  // C = X3 + Z3
  var c = p.x.redAdd(p.z);
  // D = X3 - Z3
  var d = p.x.redSub(p.z);
  // DA = D * A
  var da = d.redMul(a);
  // CB = C * B
  var cb = c.redMul(b);
  // X5 = Z1 * (DA + CB)^2
  var nx = diff.z.redMul(da.redAdd(cb).redSqr());
  // Z5 = X1 * (DA - CB)^2
  var nz = diff.x.redMul(da.redISub(cb).redSqr());
  return this.curve.point(nx, nz);
};

Point.prototype.mul = function mul(k) {
  var t = k.clone();
  var a = this; // (N / 2) * Q + Q
  var b = this.curve.point(null, null); // (N / 2) * Q
  var c = this; // Q

  for (var bits = []; t.cmpn(0) !== 0; t.iushrn(1))
    bits.push(t.andln(1));

  for (var i = bits.length - 1; i >= 0; i--) {
    if (bits[i] === 0) {
      // N * Q + Q = ((N / 2) * Q + Q)) + (N / 2) * Q
      a = a.diffAdd(b, c);
      // N * Q = 2 * ((N / 2) * Q + Q))
      b = b.dbl();
    } else {
      // N * Q = ((N / 2) * Q + Q) + ((N / 2) * Q)
      b = a.diffAdd(b, c);
      // N * Q + Q = 2 * ((N / 2) * Q + Q)
      a = a.dbl();
    }
  }
  return b;
};

Point.prototype.mulAdd = function mulAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.jumlAdd = function jumlAdd() {
  throw new Error('Not supported on Montgomery curve');
};

Point.prototype.eq = function eq(other) {
  return this.getX().cmp(other.getX()) === 0;
};

Point.prototype.normalize = function normalize() {
  this.x = this.x.redMul(this.z.redInvm());
  this.z = this.curve.one;
  return this;
};

Point.prototype.getX = function getX() {
  // Normalize coordinates
  this.normalize();

  return this.x.fromRed();
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curve/short.js":
/*!***********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curve/short.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curve = __webpack_require__(/*! ../curve */ "./node_modules/elliptic/lib/elliptic/curve/index.js");
var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/elliptic/lib/elliptic.js");
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
var Base = curve.base;

var assert = elliptic.utils.assert;

function ShortCurve(conf) {
  Base.call(this, 'short', conf);

  this.a = new BN(conf.a, 16).toRed(this.red);
  this.b = new BN(conf.b, 16).toRed(this.red);
  this.tinv = this.two.redInvm();

  this.zeroA = this.a.fromRed().cmpn(0) === 0;
  this.threeA = this.a.fromRed().sub(this.p).cmpn(-3) === 0;

  // If the curve is endomorphic, precalculate beta and lambda
  this.endo = this._getEndomorphism(conf);
  this._endoWnafT1 = new Array(4);
  this._endoWnafT2 = new Array(4);
}
inherits(ShortCurve, Base);
module.exports = ShortCurve;

ShortCurve.prototype._getEndomorphism = function _getEndomorphism(conf) {
  // No efficient endomorphism
  if (!this.zeroA || !this.g || !this.n || this.p.modn(3) !== 1)
    return;

  // Compute beta and lambda, that lambda * P = (beta * Px; Py)
  var beta;
  var lambda;
  if (conf.beta) {
    beta = new BN(conf.beta, 16).toRed(this.red);
  } else {
    var betas = this._getEndoRoots(this.p);
    // Choose the smallest beta
    beta = betas[0].cmp(betas[1]) < 0 ? betas[0] : betas[1];
    beta = beta.toRed(this.red);
  }
  if (conf.lambda) {
    lambda = new BN(conf.lambda, 16);
  } else {
    // Choose the lambda that is matching selected beta
    var lambdas = this._getEndoRoots(this.n);
    if (this.g.mul(lambdas[0]).x.cmp(this.g.x.redMul(beta)) === 0) {
      lambda = lambdas[0];
    } else {
      lambda = lambdas[1];
      assert(this.g.mul(lambda).x.cmp(this.g.x.redMul(beta)) === 0);
    }
  }

  // Get basis vectors, used for balanced length-two representation
  var basis;
  if (conf.basis) {
    basis = conf.basis.map(function(vec) {
      return {
        a: new BN(vec.a, 16),
        b: new BN(vec.b, 16)
      };
    });
  } else {
    basis = this._getEndoBasis(lambda);
  }

  return {
    beta: beta,
    lambda: lambda,
    basis: basis
  };
};

ShortCurve.prototype._getEndoRoots = function _getEndoRoots(num) {
  // Find roots of for x^2 + x + 1 in F
  // Root = (-1 +- Sqrt(-3)) / 2
  //
  var red = num === this.p ? this.red : BN.mont(num);
  var tinv = new BN(2).toRed(red).redInvm();
  var ntinv = tinv.redNeg();

  var s = new BN(3).toRed(red).redNeg().redSqrt().redMul(tinv);

  var l1 = ntinv.redAdd(s).fromRed();
  var l2 = ntinv.redSub(s).fromRed();
  return [ l1, l2 ];
};

ShortCurve.prototype._getEndoBasis = function _getEndoBasis(lambda) {
  // aprxSqrt >= sqrt(this.n)
  var aprxSqrt = this.n.ushrn(Math.floor(this.n.bitLength() / 2));

  // 3.74
  // Run EGCD, until r(L + 1) < aprxSqrt
  var u = lambda;
  var v = this.n.clone();
  var x1 = new BN(1);
  var y1 = new BN(0);
  var x2 = new BN(0);
  var y2 = new BN(1);

  // NOTE: all vectors are roots of: a + b * lambda = 0 (mod n)
  var a0;
  var b0;
  // First vector
  var a1;
  var b1;
  // Second vector
  var a2;
  var b2;

  var prevR;
  var i = 0;
  var r;
  var x;
  while (u.cmpn(0) !== 0) {
    var q = v.div(u);
    r = v.sub(q.mul(u));
    x = x2.sub(q.mul(x1));
    var y = y2.sub(q.mul(y1));

    if (!a1 && r.cmp(aprxSqrt) < 0) {
      a0 = prevR.neg();
      b0 = x1;
      a1 = r.neg();
      b1 = x;
    } else if (a1 && ++i === 2) {
      break;
    }
    prevR = r;

    v = u;
    u = r;
    x2 = x1;
    x1 = x;
    y2 = y1;
    y1 = y;
  }
  a2 = r.neg();
  b2 = x;

  var len1 = a1.sqr().add(b1.sqr());
  var len2 = a2.sqr().add(b2.sqr());
  if (len2.cmp(len1) >= 0) {
    a2 = a0;
    b2 = b0;
  }

  // Normalize signs
  if (a1.negative) {
    a1 = a1.neg();
    b1 = b1.neg();
  }
  if (a2.negative) {
    a2 = a2.neg();
    b2 = b2.neg();
  }

  return [
    { a: a1, b: b1 },
    { a: a2, b: b2 }
  ];
};

ShortCurve.prototype._endoSplit = function _endoSplit(k) {
  var basis = this.endo.basis;
  var v1 = basis[0];
  var v2 = basis[1];

  var c1 = v2.b.mul(k).divRound(this.n);
  var c2 = v1.b.neg().mul(k).divRound(this.n);

  var p1 = c1.mul(v1.a);
  var p2 = c2.mul(v2.a);
  var q1 = c1.mul(v1.b);
  var q2 = c2.mul(v2.b);

  // Calculate answer
  var k1 = k.sub(p1).sub(p2);
  var k2 = q1.add(q2).neg();
  return { k1: k1, k2: k2 };
};

ShortCurve.prototype.pointFromX = function pointFromX(x, odd) {
  x = new BN(x, 16);
  if (!x.red)
    x = x.toRed(this.red);

  var y2 = x.redSqr().redMul(x).redIAdd(x.redMul(this.a)).redIAdd(this.b);
  var y = y2.redSqrt();
  if (y.redSqr().redSub(y2).cmp(this.zero) !== 0)
    throw new Error('invalid point');

  // XXX Is there any way to tell if the number is odd without converting it
  // to non-red form?
  var isOdd = y.fromRed().isOdd();
  if (odd && !isOdd || !odd && isOdd)
    y = y.redNeg();

  return this.point(x, y);
};

ShortCurve.prototype.validate = function validate(point) {
  if (point.inf)
    return true;

  var x = point.x;
  var y = point.y;

  var ax = this.a.redMul(x);
  var rhs = x.redSqr().redMul(x).redIAdd(ax).redIAdd(this.b);
  return y.redSqr().redISub(rhs).cmpn(0) === 0;
};

ShortCurve.prototype._endoWnafMulAdd =
    function _endoWnafMulAdd(points, coeffs, jacobianResult) {
  var npoints = this._endoWnafT1;
  var ncoeffs = this._endoWnafT2;
  for (var i = 0; i < points.length; i++) {
    var split = this._endoSplit(coeffs[i]);
    var p = points[i];
    var beta = p._getBeta();

    if (split.k1.negative) {
      split.k1.ineg();
      p = p.neg(true);
    }
    if (split.k2.negative) {
      split.k2.ineg();
      beta = beta.neg(true);
    }

    npoints[i * 2] = p;
    npoints[i * 2 + 1] = beta;
    ncoeffs[i * 2] = split.k1;
    ncoeffs[i * 2 + 1] = split.k2;
  }
  var res = this._wnafMulAdd(1, npoints, ncoeffs, i * 2, jacobianResult);

  // Clean-up references to points and coefficients
  for (var j = 0; j < i * 2; j++) {
    npoints[j] = null;
    ncoeffs[j] = null;
  }
  return res;
};

function Point(curve, x, y, isRed) {
  Base.BasePoint.call(this, curve, 'affine');
  if (x === null && y === null) {
    this.x = null;
    this.y = null;
    this.inf = true;
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    // Force redgomery representation when loading from JSON
    if (isRed) {
      this.x.forceRed(this.curve.red);
      this.y.forceRed(this.curve.red);
    }
    if (!this.x.red)
      this.x = this.x.toRed(this.curve.red);
    if (!this.y.red)
      this.y = this.y.toRed(this.curve.red);
    this.inf = false;
  }
}
inherits(Point, Base.BasePoint);

ShortCurve.prototype.point = function point(x, y, isRed) {
  return new Point(this, x, y, isRed);
};

ShortCurve.prototype.pointFromJSON = function pointFromJSON(obj, red) {
  return Point.fromJSON(this, obj, red);
};

Point.prototype._getBeta = function _getBeta() {
  if (!this.curve.endo)
    return;

  var pre = this.precomputed;
  if (pre && pre.beta)
    return pre.beta;

  var beta = this.curve.point(this.x.redMul(this.curve.endo.beta), this.y);
  if (pre) {
    var curve = this.curve;
    var endoMul = function(p) {
      return curve.point(p.x.redMul(curve.endo.beta), p.y);
    };
    pre.beta = beta;
    beta.precomputed = {
      beta: null,
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(endoMul)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(endoMul)
      }
    };
  }
  return beta;
};

Point.prototype.toJSON = function toJSON() {
  if (!this.precomputed)
    return [ this.x, this.y ];

  return [ this.x, this.y, this.precomputed && {
    doubles: this.precomputed.doubles && {
      step: this.precomputed.doubles.step,
      points: this.precomputed.doubles.points.slice(1)
    },
    naf: this.precomputed.naf && {
      wnd: this.precomputed.naf.wnd,
      points: this.precomputed.naf.points.slice(1)
    }
  } ];
};

Point.fromJSON = function fromJSON(curve, obj, red) {
  if (typeof obj === 'string')
    obj = JSON.parse(obj);
  var res = curve.point(obj[0], obj[1], red);
  if (!obj[2])
    return res;

  function obj2point(obj) {
    return curve.point(obj[0], obj[1], red);
  }

  var pre = obj[2];
  res.precomputed = {
    beta: null,
    doubles: pre.doubles && {
      step: pre.doubles.step,
      points: [ res ].concat(pre.doubles.points.map(obj2point))
    },
    naf: pre.naf && {
      wnd: pre.naf.wnd,
      points: [ res ].concat(pre.naf.points.map(obj2point))
    }
  };
  return res;
};

Point.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC Point Infinity>';
  return '<EC Point x: ' + this.x.fromRed().toString(16, 2) +
      ' y: ' + this.y.fromRed().toString(16, 2) + '>';
};

Point.prototype.isInfinity = function isInfinity() {
  return this.inf;
};

Point.prototype.add = function add(p) {
  // O + P = P
  if (this.inf)
    return p;

  // P + O = P
  if (p.inf)
    return this;

  // P + P = 2P
  if (this.eq(p))
    return this.dbl();

  // P + (-P) = O
  if (this.neg().eq(p))
    return this.curve.point(null, null);

  // P + Q = O
  if (this.x.cmp(p.x) === 0)
    return this.curve.point(null, null);

  var c = this.y.redSub(p.y);
  if (c.cmpn(0) !== 0)
    c = c.redMul(this.x.redSub(p.x).redInvm());
  var nx = c.redSqr().redISub(this.x).redISub(p.x);
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.dbl = function dbl() {
  if (this.inf)
    return this;

  // 2P = O
  var ys1 = this.y.redAdd(this.y);
  if (ys1.cmpn(0) === 0)
    return this.curve.point(null, null);

  var a = this.curve.a;

  var x2 = this.x.redSqr();
  var dyinv = ys1.redInvm();
  var c = x2.redAdd(x2).redIAdd(x2).redIAdd(a).redMul(dyinv);

  var nx = c.redSqr().redISub(this.x.redAdd(this.x));
  var ny = c.redMul(this.x.redSub(nx)).redISub(this.y);
  return this.curve.point(nx, ny);
};

Point.prototype.getX = function getX() {
  return this.x.fromRed();
};

Point.prototype.getY = function getY() {
  return this.y.fromRed();
};

Point.prototype.mul = function mul(k) {
  k = new BN(k, 16);

  if (this._hasDoubles(k))
    return this.curve._fixedNafMul(this, k);
  else if (this.curve.endo)
    return this.curve._endoWnafMulAdd([ this ], [ k ]);
  else
    return this.curve._wnafMul(this, k);
};

Point.prototype.mulAdd = function mulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2);
};

Point.prototype.jmulAdd = function jmulAdd(k1, p2, k2) {
  var points = [ this, p2 ];
  var coeffs = [ k1, k2 ];
  if (this.curve.endo)
    return this.curve._endoWnafMulAdd(points, coeffs, true);
  else
    return this.curve._wnafMulAdd(1, points, coeffs, 2, true);
};

Point.prototype.eq = function eq(p) {
  return this === p ||
         this.inf === p.inf &&
             (this.inf || this.x.cmp(p.x) === 0 && this.y.cmp(p.y) === 0);
};

Point.prototype.neg = function neg(_precompute) {
  if (this.inf)
    return this;

  var res = this.curve.point(this.x, this.y.redNeg());
  if (_precompute && this.precomputed) {
    var pre = this.precomputed;
    var negate = function(p) {
      return p.neg();
    };
    res.precomputed = {
      naf: pre.naf && {
        wnd: pre.naf.wnd,
        points: pre.naf.points.map(negate)
      },
      doubles: pre.doubles && {
        step: pre.doubles.step,
        points: pre.doubles.points.map(negate)
      }
    };
  }
  return res;
};

Point.prototype.toJ = function toJ() {
  if (this.inf)
    return this.curve.jpoint(null, null, null);

  var res = this.curve.jpoint(this.x, this.y, this.curve.one);
  return res;
};

function JPoint(curve, x, y, z) {
  Base.BasePoint.call(this, curve, 'jacobian');
  if (x === null && y === null && z === null) {
    this.x = this.curve.one;
    this.y = this.curve.one;
    this.z = new BN(0);
  } else {
    this.x = new BN(x, 16);
    this.y = new BN(y, 16);
    this.z = new BN(z, 16);
  }
  if (!this.x.red)
    this.x = this.x.toRed(this.curve.red);
  if (!this.y.red)
    this.y = this.y.toRed(this.curve.red);
  if (!this.z.red)
    this.z = this.z.toRed(this.curve.red);

  this.zOne = this.z === this.curve.one;
}
inherits(JPoint, Base.BasePoint);

ShortCurve.prototype.jpoint = function jpoint(x, y, z) {
  return new JPoint(this, x, y, z);
};

JPoint.prototype.toP = function toP() {
  if (this.isInfinity())
    return this.curve.point(null, null);

  var zinv = this.z.redInvm();
  var zinv2 = zinv.redSqr();
  var ax = this.x.redMul(zinv2);
  var ay = this.y.redMul(zinv2).redMul(zinv);

  return this.curve.point(ax, ay);
};

JPoint.prototype.neg = function neg() {
  return this.curve.jpoint(this.x, this.y.redNeg(), this.z);
};

JPoint.prototype.add = function add(p) {
  // O + P = P
  if (this.isInfinity())
    return p;

  // P + O = P
  if (p.isInfinity())
    return this;

  // 12M + 4S + 7A
  var pz2 = p.z.redSqr();
  var z2 = this.z.redSqr();
  var u1 = this.x.redMul(pz2);
  var u2 = p.x.redMul(z2);
  var s1 = this.y.redMul(pz2.redMul(p.z));
  var s2 = p.y.redMul(z2.redMul(this.z));

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(p.z).redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mixedAdd = function mixedAdd(p) {
  // O + P = P
  if (this.isInfinity())
    return p.toJ();

  // P + O = P
  if (p.isInfinity())
    return this;

  // 8M + 3S + 7A
  var z2 = this.z.redSqr();
  var u1 = this.x;
  var u2 = p.x.redMul(z2);
  var s1 = this.y;
  var s2 = p.y.redMul(z2).redMul(this.z);

  var h = u1.redSub(u2);
  var r = s1.redSub(s2);
  if (h.cmpn(0) === 0) {
    if (r.cmpn(0) !== 0)
      return this.curve.jpoint(null, null, null);
    else
      return this.dbl();
  }

  var h2 = h.redSqr();
  var h3 = h2.redMul(h);
  var v = u1.redMul(h2);

  var nx = r.redSqr().redIAdd(h3).redISub(v).redISub(v);
  var ny = r.redMul(v.redISub(nx)).redISub(s1.redMul(h3));
  var nz = this.z.redMul(h);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.dblp = function dblp(pow) {
  if (pow === 0)
    return this;
  if (this.isInfinity())
    return this;
  if (!pow)
    return this.dbl();

  if (this.curve.zeroA || this.curve.threeA) {
    var r = this;
    for (var i = 0; i < pow; i++)
      r = r.dbl();
    return r;
  }

  // 1M + 2S + 1A + N * (4S + 5M + 8A)
  // N = 1 => 6M + 6S + 9A
  var a = this.curve.a;
  var tinv = this.curve.tinv;

  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  // Reuse results
  var jyd = jy.redAdd(jy);
  for (var i = 0; i < pow; i++) {
    var jx2 = jx.redSqr();
    var jyd2 = jyd.redSqr();
    var jyd4 = jyd2.redSqr();
    var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

    var t1 = jx.redMul(jyd2);
    var nx = c.redSqr().redISub(t1.redAdd(t1));
    var t2 = t1.redISub(nx);
    var dny = c.redMul(t2);
    dny = dny.redIAdd(dny).redISub(jyd4);
    var nz = jyd.redMul(jz);
    if (i + 1 < pow)
      jz4 = jz4.redMul(jyd4);

    jx = nx;
    jz = nz;
    jyd = dny;
  }

  return this.curve.jpoint(jx, jyd.redMul(tinv), jz);
};

JPoint.prototype.dbl = function dbl() {
  if (this.isInfinity())
    return this;

  if (this.curve.zeroA)
    return this._zeroDbl();
  else if (this.curve.threeA)
    return this._threeDbl();
  else
    return this._dbl();
};

JPoint.prototype._zeroDbl = function _zeroDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 14A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a; a = 0
    var m = xx.redAdd(xx).redIAdd(xx);
    // T = M ^ 2 - 2*S
    var t = m.redSqr().redISub(s).redISub(s);

    // 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);

    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2*Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html
    //     #doubling-dbl-2009-l
    // 2M + 5S + 13A

    // A = X1^2
    var a = this.x.redSqr();
    // B = Y1^2
    var b = this.y.redSqr();
    // C = B^2
    var c = b.redSqr();
    // D = 2 * ((X1 + B)^2 - A - C)
    var d = this.x.redAdd(b).redSqr().redISub(a).redISub(c);
    d = d.redIAdd(d);
    // E = 3 * A
    var e = a.redAdd(a).redIAdd(a);
    // F = E^2
    var f = e.redSqr();

    // 8 * C
    var c8 = c.redIAdd(c);
    c8 = c8.redIAdd(c8);
    c8 = c8.redIAdd(c8);

    // X3 = F - 2 * D
    nx = f.redISub(d).redISub(d);
    // Y3 = E * (D - X3) - 8 * C
    ny = e.redMul(d.redISub(nx)).redISub(c8);
    // Z3 = 2 * Y1 * Z1
    nz = this.y.redMul(this.z);
    nz = nz.redIAdd(nz);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._threeDbl = function _threeDbl() {
  var nx;
  var ny;
  var nz;
  // Z = 1
  if (this.zOne) {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html
    //     #doubling-mdbl-2007-bl
    // 1M + 5S + 15A

    // XX = X1^2
    var xx = this.x.redSqr();
    // YY = Y1^2
    var yy = this.y.redSqr();
    // YYYY = YY^2
    var yyyy = yy.redSqr();
    // S = 2 * ((X1 + YY)^2 - XX - YYYY)
    var s = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
    s = s.redIAdd(s);
    // M = 3 * XX + a
    var m = xx.redAdd(xx).redIAdd(xx).redIAdd(this.curve.a);
    // T = M^2 - 2 * S
    var t = m.redSqr().redISub(s).redISub(s);
    // X3 = T
    nx = t;
    // Y3 = M * (S - T) - 8 * YYYY
    var yyyy8 = yyyy.redIAdd(yyyy);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    yyyy8 = yyyy8.redIAdd(yyyy8);
    ny = m.redMul(s.redISub(t)).redISub(yyyy8);
    // Z3 = 2 * Y1
    nz = this.y.redAdd(this.y);
  } else {
    // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-3.html#doubling-dbl-2001-b
    // 3M + 5S

    // delta = Z1^2
    var delta = this.z.redSqr();
    // gamma = Y1^2
    var gamma = this.y.redSqr();
    // beta = X1 * gamma
    var beta = this.x.redMul(gamma);
    // alpha = 3 * (X1 - delta) * (X1 + delta)
    var alpha = this.x.redSub(delta).redMul(this.x.redAdd(delta));
    alpha = alpha.redAdd(alpha).redIAdd(alpha);
    // X3 = alpha^2 - 8 * beta
    var beta4 = beta.redIAdd(beta);
    beta4 = beta4.redIAdd(beta4);
    var beta8 = beta4.redAdd(beta4);
    nx = alpha.redSqr().redISub(beta8);
    // Z3 = (Y1 + Z1)^2 - gamma - delta
    nz = this.y.redAdd(this.z).redSqr().redISub(gamma).redISub(delta);
    // Y3 = alpha * (4 * beta - X3) - 8 * gamma^2
    var ggamma8 = gamma.redSqr();
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ggamma8 = ggamma8.redIAdd(ggamma8);
    ny = alpha.redMul(beta4.redISub(nx)).redISub(ggamma8);
  }

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype._dbl = function _dbl() {
  var a = this.curve.a;

  // 4M + 6S + 10A
  var jx = this.x;
  var jy = this.y;
  var jz = this.z;
  var jz4 = jz.redSqr().redSqr();

  var jx2 = jx.redSqr();
  var jy2 = jy.redSqr();

  var c = jx2.redAdd(jx2).redIAdd(jx2).redIAdd(a.redMul(jz4));

  var jxd4 = jx.redAdd(jx);
  jxd4 = jxd4.redIAdd(jxd4);
  var t1 = jxd4.redMul(jy2);
  var nx = c.redSqr().redISub(t1.redAdd(t1));
  var t2 = t1.redISub(nx);

  var jyd8 = jy2.redSqr();
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  jyd8 = jyd8.redIAdd(jyd8);
  var ny = c.redMul(t2).redISub(jyd8);
  var nz = jy.redAdd(jy).redMul(jz);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.trpl = function trpl() {
  if (!this.curve.zeroA)
    return this.dbl().add(this);

  // hyperelliptic.org/EFD/g1p/auto-shortw-jacobian-0.html#tripling-tpl-2007-bl
  // 5M + 10S + ...

  // XX = X1^2
  var xx = this.x.redSqr();
  // YY = Y1^2
  var yy = this.y.redSqr();
  // ZZ = Z1^2
  var zz = this.z.redSqr();
  // YYYY = YY^2
  var yyyy = yy.redSqr();
  // M = 3 * XX + a * ZZ2; a = 0
  var m = xx.redAdd(xx).redIAdd(xx);
  // MM = M^2
  var mm = m.redSqr();
  // E = 6 * ((X1 + YY)^2 - XX - YYYY) - MM
  var e = this.x.redAdd(yy).redSqr().redISub(xx).redISub(yyyy);
  e = e.redIAdd(e);
  e = e.redAdd(e).redIAdd(e);
  e = e.redISub(mm);
  // EE = E^2
  var ee = e.redSqr();
  // T = 16*YYYY
  var t = yyyy.redIAdd(yyyy);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  t = t.redIAdd(t);
  // U = (M + E)^2 - MM - EE - T
  var u = m.redIAdd(e).redSqr().redISub(mm).redISub(ee).redISub(t);
  // X3 = 4 * (X1 * EE - 4 * YY * U)
  var yyu4 = yy.redMul(u);
  yyu4 = yyu4.redIAdd(yyu4);
  yyu4 = yyu4.redIAdd(yyu4);
  var nx = this.x.redMul(ee).redISub(yyu4);
  nx = nx.redIAdd(nx);
  nx = nx.redIAdd(nx);
  // Y3 = 8 * Y1 * (U * (T - U) - E * EE)
  var ny = this.y.redMul(u.redMul(t.redISub(u)).redISub(e.redMul(ee)));
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  ny = ny.redIAdd(ny);
  // Z3 = (Z1 + E)^2 - ZZ - EE
  var nz = this.z.redAdd(e).redSqr().redISub(zz).redISub(ee);

  return this.curve.jpoint(nx, ny, nz);
};

JPoint.prototype.mul = function mul(k, kbase) {
  k = new BN(k, kbase);

  return this.curve._wnafMul(this, k);
};

JPoint.prototype.eq = function eq(p) {
  if (p.type === 'affine')
    return this.eq(p.toJ());

  if (this === p)
    return true;

  // x1 * z2^2 == x2 * z1^2
  var z2 = this.z.redSqr();
  var pz2 = p.z.redSqr();
  if (this.x.redMul(pz2).redISub(p.x.redMul(z2)).cmpn(0) !== 0)
    return false;

  // y1 * z2^3 == y2 * z1^3
  var z3 = z2.redMul(this.z);
  var pz3 = pz2.redMul(p.z);
  return this.y.redMul(pz3).redISub(p.y.redMul(z3)).cmpn(0) === 0;
};

JPoint.prototype.eqXToP = function eqXToP(x) {
  var zs = this.z.redSqr();
  var rx = x.toRed(this.curve.red).redMul(zs);
  if (this.x.cmp(rx) === 0)
    return true;

  var xc = x.clone();
  var t = this.curve.redN.redMul(zs);
  for (;;) {
    xc.iadd(this.curve.n);
    if (xc.cmp(this.curve.p) >= 0)
      return false;

    rx.redIAdd(t);
    if (this.x.cmp(rx) === 0)
      return true;
  }
  return false;
};

JPoint.prototype.inspect = function inspect() {
  if (this.isInfinity())
    return '<EC JPoint Infinity>';
  return '<EC JPoint x: ' + this.x.toString(16, 2) +
      ' y: ' + this.y.toString(16, 2) +
      ' z: ' + this.z.toString(16, 2) + '>';
};

JPoint.prototype.isInfinity = function isInfinity() {
  // XXX This code assumes that zero is always zero in red
  return this.z.cmpn(0) === 0;
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/curves.js":
/*!******************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/curves.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var curves = exports;

var hash = __webpack_require__(/*! hash.js */ "./node_modules/hash.js/lib/hash.js");
var elliptic = __webpack_require__(/*! ../elliptic */ "./node_modules/elliptic/lib/elliptic.js");

var assert = elliptic.utils.assert;

function PresetCurve(options) {
  if (options.type === 'short')
    this.curve = new elliptic.curve.short(options);
  else if (options.type === 'edwards')
    this.curve = new elliptic.curve.edwards(options);
  else
    this.curve = new elliptic.curve.mont(options);
  this.g = this.curve.g;
  this.n = this.curve.n;
  this.hash = options.hash;

  assert(this.g.validate(), 'Invalid curve');
  assert(this.g.mul(this.n).isInfinity(), 'Invalid curve, G*N != O');
}
curves.PresetCurve = PresetCurve;

function defineCurve(name, options) {
  Object.defineProperty(curves, name, {
    configurable: true,
    enumerable: true,
    get: function() {
      var curve = new PresetCurve(options);
      Object.defineProperty(curves, name, {
        configurable: true,
        enumerable: true,
        value: curve
      });
      return curve;
    }
  });
}

defineCurve('p192', {
  type: 'short',
  prime: 'p192',
  p: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff fffffffc',
  b: '64210519 e59c80e7 0fa7e9ab 72243049 feb8deec c146b9b1',
  n: 'ffffffff ffffffff ffffffff 99def836 146bc9b1 b4d22831',
  hash: hash.sha256,
  gRed: false,
  g: [
    '188da80e b03090f6 7cbf20eb 43a18800 f4ff0afd 82ff1012',
    '07192b95 ffc8da78 631011ed 6b24cdd5 73f977a1 1e794811'
  ]
});

defineCurve('p224', {
  type: 'short',
  prime: 'p224',
  p: 'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001',
  a: 'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff fffffffe',
  b: 'b4050a85 0c04b3ab f5413256 5044b0b7 d7bfd8ba 270b3943 2355ffb4',
  n: 'ffffffff ffffffff ffffffff ffff16a2 e0b8f03e 13dd2945 5c5c2a3d',
  hash: hash.sha256,
  gRed: false,
  g: [
    'b70e0cbd 6bb4bf7f 321390b9 4a03c1d3 56c21122 343280d6 115c1d21',
    'bd376388 b5f723fb 4c22dfe6 cd4375a0 5a074764 44d58199 85007e34'
  ]
});

defineCurve('p256', {
  type: 'short',
  prime: null,
  p: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff ffffffff',
  a: 'ffffffff 00000001 00000000 00000000 00000000 ffffffff ffffffff fffffffc',
  b: '5ac635d8 aa3a93e7 b3ebbd55 769886bc 651d06b0 cc53b0f6 3bce3c3e 27d2604b',
  n: 'ffffffff 00000000 ffffffff ffffffff bce6faad a7179e84 f3b9cac2 fc632551',
  hash: hash.sha256,
  gRed: false,
  g: [
    '6b17d1f2 e12c4247 f8bce6e5 63a440f2 77037d81 2deb33a0 f4a13945 d898c296',
    '4fe342e2 fe1a7f9b 8ee7eb4a 7c0f9e16 2bce3357 6b315ece cbb64068 37bf51f5'
  ]
});

defineCurve('p384', {
  type: 'short',
  prime: null,
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 ffffffff',
  a: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'fffffffe ffffffff 00000000 00000000 fffffffc',
  b: 'b3312fa7 e23ee7e4 988e056b e3f82d19 181d9c6e fe814112 0314088f ' +
     '5013875a c656398d 8a2ed19d 2a85c8ed d3ec2aef',
  n: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff c7634d81 ' +
     'f4372ddf 581a0db2 48b0a77a ecec196a ccc52973',
  hash: hash.sha384,
  gRed: false,
  g: [
    'aa87ca22 be8b0537 8eb1c71e f320ad74 6e1d3b62 8ba79b98 59f741e0 82542a38 ' +
    '5502f25d bf55296c 3a545e38 72760ab7',
    '3617de4a 96262c6f 5d9e98bf 9292dc29 f8f41dbd 289a147c e9da3113 b5f0b8c0 ' +
    '0a60b1ce 1d7e819d 7a431d7c 90ea0e5f'
  ]
});

defineCurve('p521', {
  type: 'short',
  prime: null,
  p: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff',
  a: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff ffffffff ffffffff fffffffc',
  b: '00000051 953eb961 8e1c9a1f 929a21a0 b68540ee a2da725b ' +
     '99b315f3 b8b48991 8ef109e1 56193951 ec7e937b 1652c0bd ' +
     '3bb1bf07 3573df88 3d2c34f1 ef451fd4 6b503f00',
  n: '000001ff ffffffff ffffffff ffffffff ffffffff ffffffff ' +
     'ffffffff ffffffff fffffffa 51868783 bf2f966b 7fcc0148 ' +
     'f709a5d0 3bb5c9b8 899c47ae bb6fb71e 91386409',
  hash: hash.sha512,
  gRed: false,
  g: [
    '000000c6 858e06b7 0404e9cd 9e3ecb66 2395b442 9c648139 ' +
    '053fb521 f828af60 6b4d3dba a14b5e77 efe75928 fe1dc127 ' +
    'a2ffa8de 3348b3c1 856a429b f97e7e31 c2e5bd66',
    '00000118 39296a78 9a3bc004 5c8a5fb4 2c7d1bd9 98f54449 ' +
    '579b4468 17afbd17 273e662c 97ee7299 5ef42640 c550b901 ' +
    '3fad0761 353c7086 a272c240 88be9476 9fd16650'
  ]
});

defineCurve('curve25519', {
  type: 'mont',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '76d06',
  b: '1',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '9'
  ]
});

defineCurve('ed25519', {
  type: 'edwards',
  prime: 'p25519',
  p: '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed',
  a: '-1',
  c: '1',
  // -121665 * (121666^(-1)) (mod P)
  d: '52036cee2b6ffe73 8cc740797779e898 00700a4d4141d8ab 75eb4dca135978a3',
  n: '1000000000000000 0000000000000000 14def9dea2f79cd6 5812631a5cf5d3ed',
  hash: hash.sha256,
  gRed: false,
  g: [
    '216936d3cd6e53fec0a4e231fdd6dc5c692cc7609525a7b2c9562d608f25d51a',

    // 4/5
    '6666666666666666666666666666666666666666666666666666666666666658'
  ]
});

var pre;
try {
  pre = __webpack_require__(/*! ./precomputed/secp256k1 */ "./node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js");
} catch (e) {
  pre = undefined;
}

defineCurve('secp256k1', {
  type: 'short',
  prime: 'k256',
  p: 'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f',
  a: '0',
  b: '7',
  n: 'ffffffff ffffffff ffffffff fffffffe baaedce6 af48a03b bfd25e8c d0364141',
  h: '1',
  hash: hash.sha256,

  // Precomputed endomorphism
  beta: '7ae96a2b657c07106e64479eac3434e99cf0497512f58995c1396c28719501ee',
  lambda: '5363ad4cc05c30e0a5261c028812645a122e22ea20816678df02967c1b23bd72',
  basis: [
    {
      a: '3086d221a7d46bcde86c90e49284eb15',
      b: '-e4437ed6010e88286f547fa90abfe4c3'
    },
    {
      a: '114ca50f7a8e2f3f657c1108d9d44cfd8',
      b: '3086d221a7d46bcde86c90e49284eb15'
    }
  ],

  gRed: false,
  g: [
    '79be667ef9dcbbac55a06295ce870b07029bfcdb2dce28d959f2815b16f81798',
    '483ada7726a3c4655da4fbfc0e1108a8fd17b448a68554199c47d08ffb10d4b8',
    pre
  ]
});


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/ec/index.js":
/*!********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/ec/index.js ***!
  \********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var HmacDRBG = __webpack_require__(/*! hmac-drbg */ "./node_modules/hmac-drbg/lib/hmac-drbg.js");
var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/elliptic/lib/elliptic.js");
var utils = elliptic.utils;
var assert = utils.assert;

var KeyPair = __webpack_require__(/*! ./key */ "./node_modules/elliptic/lib/elliptic/ec/key.js");
var Signature = __webpack_require__(/*! ./signature */ "./node_modules/elliptic/lib/elliptic/ec/signature.js");

function EC(options) {
  if (!(this instanceof EC))
    return new EC(options);

  // Shortcut `elliptic.ec(curve-name)`
  if (typeof options === 'string') {
    assert(elliptic.curves.hasOwnProperty(options), 'Unknown curve ' + options);

    options = elliptic.curves[options];
  }

  // Shortcut for `elliptic.ec(elliptic.curves.curveName)`
  if (options instanceof elliptic.curves.PresetCurve)
    options = { curve: options };

  this.curve = options.curve.curve;
  this.n = this.curve.n;
  this.nh = this.n.ushrn(1);
  this.g = this.curve.g;

  // Point on curve
  this.g = options.curve.g;
  this.g.precompute(options.curve.n.bitLength() + 1);

  // Hash for function for DRBG
  this.hash = options.hash || options.curve.hash;
}
module.exports = EC;

EC.prototype.keyPair = function keyPair(options) {
  return new KeyPair(this, options);
};

EC.prototype.keyFromPrivate = function keyFromPrivate(priv, enc) {
  return KeyPair.fromPrivate(this, priv, enc);
};

EC.prototype.keyFromPublic = function keyFromPublic(pub, enc) {
  return KeyPair.fromPublic(this, pub, enc);
};

EC.prototype.genKeyPair = function genKeyPair(options) {
  if (!options)
    options = {};

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8',
    entropy: options.entropy || elliptic.rand(this.hash.hmacStrength),
    entropyEnc: options.entropy && options.entropyEnc || 'utf8',
    nonce: this.n.toArray()
  });

  var bytes = this.n.byteLength();
  var ns2 = this.n.sub(new BN(2));
  do {
    var priv = new BN(drbg.generate(bytes));
    if (priv.cmp(ns2) > 0)
      continue;

    priv.iaddn(1);
    return this.keyFromPrivate(priv);
  } while (true);
};

EC.prototype._truncateToN = function truncateToN(msg, truncOnly) {
  var delta = msg.byteLength() * 8 - this.n.bitLength();
  if (delta > 0)
    msg = msg.ushrn(delta);
  if (!truncOnly && msg.cmp(this.n) >= 0)
    return msg.sub(this.n);
  else
    return msg;
};

EC.prototype.sign = function sign(msg, key, enc, options) {
  if (typeof enc === 'object') {
    options = enc;
    enc = null;
  }
  if (!options)
    options = {};

  key = this.keyFromPrivate(key, enc);
  msg = this._truncateToN(new BN(msg, 16));

  // Zero-extend key to provide enough entropy
  var bytes = this.n.byteLength();
  var bkey = key.getPrivate().toArray('be', bytes);

  // Zero-extend nonce to have the same byte size as N
  var nonce = msg.toArray('be', bytes);

  // Instantiate Hmac_DRBG
  var drbg = new HmacDRBG({
    hash: this.hash,
    entropy: bkey,
    nonce: nonce,
    pers: options.pers,
    persEnc: options.persEnc || 'utf8'
  });

  // Number of bytes to generate
  var ns1 = this.n.sub(new BN(1));

  for (var iter = 0; true; iter++) {
    var k = options.k ?
        options.k(iter) :
        new BN(drbg.generate(this.n.byteLength()));
    k = this._truncateToN(k, true);
    if (k.cmpn(1) <= 0 || k.cmp(ns1) >= 0)
      continue;

    var kp = this.g.mul(k);
    if (kp.isInfinity())
      continue;

    var kpX = kp.getX();
    var r = kpX.umod(this.n);
    if (r.cmpn(0) === 0)
      continue;

    var s = k.invm(this.n).mul(r.mul(key.getPrivate()).iadd(msg));
    s = s.umod(this.n);
    if (s.cmpn(0) === 0)
      continue;

    var recoveryParam = (kp.getY().isOdd() ? 1 : 0) |
                        (kpX.cmp(r) !== 0 ? 2 : 0);

    // Use complement of `s`, if it is > `n / 2`
    if (options.canonical && s.cmp(this.nh) > 0) {
      s = this.n.sub(s);
      recoveryParam ^= 1;
    }

    return new Signature({ r: r, s: s, recoveryParam: recoveryParam });
  }
};

EC.prototype.verify = function verify(msg, signature, key, enc) {
  msg = this._truncateToN(new BN(msg, 16));
  key = this.keyFromPublic(key, enc);
  signature = new Signature(signature, 'hex');

  // Perform primitive values validation
  var r = signature.r;
  var s = signature.s;
  if (r.cmpn(1) < 0 || r.cmp(this.n) >= 0)
    return false;
  if (s.cmpn(1) < 0 || s.cmp(this.n) >= 0)
    return false;

  // Validate signature
  var sinv = s.invm(this.n);
  var u1 = sinv.mul(msg).umod(this.n);
  var u2 = sinv.mul(r).umod(this.n);

  if (!this.curve._maxwellTrick) {
    var p = this.g.mulAdd(u1, key.getPublic(), u2);
    if (p.isInfinity())
      return false;

    return p.getX().umod(this.n).cmp(r) === 0;
  }

  // NOTE: Greg Maxwell's trick, inspired by:
  // https://git.io/vad3K

  var p = this.g.jmulAdd(u1, key.getPublic(), u2);
  if (p.isInfinity())
    return false;

  // Compare `p.x` of Jacobian point with `r`,
  // this will do `p.x == r * p.z^2` instead of multiplying `p.x` by the
  // inverse of `p.z^2`
  return p.eqXToP(r);
};

EC.prototype.recoverPubKey = function(msg, signature, j, enc) {
  assert((3 & j) === j, 'The recovery param is more than two bits');
  signature = new Signature(signature, enc);

  var n = this.n;
  var e = new BN(msg);
  var r = signature.r;
  var s = signature.s;

  // A set LSB signifies that the y-coordinate is odd
  var isYOdd = j & 1;
  var isSecondKey = j >> 1;
  if (r.cmp(this.curve.p.umod(this.curve.n)) >= 0 && isSecondKey)
    throw new Error('Unable to find sencond key candinate');

  // 1.1. Let x = r + jn.
  if (isSecondKey)
    r = this.curve.pointFromX(r.add(this.curve.n), isYOdd);
  else
    r = this.curve.pointFromX(r, isYOdd);

  var rInv = signature.r.invm(n);
  var s1 = n.sub(e).mul(rInv).umod(n);
  var s2 = s.mul(rInv).umod(n);

  // 1.6.1 Compute Q = r^-1 (sR -  eG)
  //               Q = r^-1 (sR + -eG)
  return this.g.mulAdd(s1, r, s2);
};

EC.prototype.getKeyRecoveryParam = function(e, signature, Q, enc) {
  signature = new Signature(signature, enc);
  if (signature.recoveryParam !== null)
    return signature.recoveryParam;

  for (var i = 0; i < 4; i++) {
    var Qprime;
    try {
      Qprime = this.recoverPubKey(e, signature, i);
    } catch (e) {
      continue;
    }

    if (Qprime.eq(Q))
      return i;
  }
  throw new Error('Unable to find valid recovery factor');
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/ec/key.js":
/*!******************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/ec/key.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/elliptic/lib/elliptic.js");
var utils = elliptic.utils;
var assert = utils.assert;

function KeyPair(ec, options) {
  this.ec = ec;
  this.priv = null;
  this.pub = null;

  // KeyPair(ec, { priv: ..., pub: ... })
  if (options.priv)
    this._importPrivate(options.priv, options.privEnc);
  if (options.pub)
    this._importPublic(options.pub, options.pubEnc);
}
module.exports = KeyPair;

KeyPair.fromPublic = function fromPublic(ec, pub, enc) {
  if (pub instanceof KeyPair)
    return pub;

  return new KeyPair(ec, {
    pub: pub,
    pubEnc: enc
  });
};

KeyPair.fromPrivate = function fromPrivate(ec, priv, enc) {
  if (priv instanceof KeyPair)
    return priv;

  return new KeyPair(ec, {
    priv: priv,
    privEnc: enc
  });
};

KeyPair.prototype.validate = function validate() {
  var pub = this.getPublic();

  if (pub.isInfinity())
    return { result: false, reason: 'Invalid public key' };
  if (!pub.validate())
    return { result: false, reason: 'Public key is not a point' };
  if (!pub.mul(this.ec.curve.n).isInfinity())
    return { result: false, reason: 'Public key * N != O' };

  return { result: true, reason: null };
};

KeyPair.prototype.getPublic = function getPublic(compact, enc) {
  // compact is optional argument
  if (typeof compact === 'string') {
    enc = compact;
    compact = null;
  }

  if (!this.pub)
    this.pub = this.ec.g.mul(this.priv);

  if (!enc)
    return this.pub;

  return this.pub.encode(enc, compact);
};

KeyPair.prototype.getPrivate = function getPrivate(enc) {
  if (enc === 'hex')
    return this.priv.toString(16, 2);
  else
    return this.priv;
};

KeyPair.prototype._importPrivate = function _importPrivate(key, enc) {
  this.priv = new BN(key, enc || 16);

  // Ensure that the priv won't be bigger than n, otherwise we may fail
  // in fixed multiplication method
  this.priv = this.priv.umod(this.ec.curve.n);
};

KeyPair.prototype._importPublic = function _importPublic(key, enc) {
  if (key.x || key.y) {
    // Montgomery points only have an `x` coordinate.
    // Weierstrass/Edwards points on the other hand have both `x` and
    // `y` coordinates.
    if (this.ec.curve.type === 'mont') {
      assert(key.x, 'Need x coordinate');
    } else if (this.ec.curve.type === 'short' ||
               this.ec.curve.type === 'edwards') {
      assert(key.x && key.y, 'Need both x and y coordinate');
    }
    this.pub = this.ec.curve.point(key.x, key.y);
    return;
  }
  this.pub = this.ec.curve.decodePoint(key, enc);
};

// ECDH
KeyPair.prototype.derive = function derive(pub) {
  return pub.mul(this.priv).getX();
};

// ECDSA
KeyPair.prototype.sign = function sign(msg, enc, options) {
  return this.ec.sign(msg, this, enc, options);
};

KeyPair.prototype.verify = function verify(msg, signature) {
  return this.ec.verify(msg, signature, this);
};

KeyPair.prototype.inspect = function inspect() {
  return '<Key priv: ' + (this.priv && this.priv.toString(16, 2)) +
         ' pub: ' + (this.pub && this.pub.inspect()) + ' >';
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/ec/signature.js":
/*!************************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/ec/signature.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");

var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/elliptic/lib/elliptic.js");
var utils = elliptic.utils;
var assert = utils.assert;

function Signature(options, enc) {
  if (options instanceof Signature)
    return options;

  if (this._importDER(options, enc))
    return;

  assert(options.r && options.s, 'Signature without r or s');
  this.r = new BN(options.r, 16);
  this.s = new BN(options.s, 16);
  if (options.recoveryParam === undefined)
    this.recoveryParam = null;
  else
    this.recoveryParam = options.recoveryParam;
}
module.exports = Signature;

function Position() {
  this.place = 0;
}

function getLength(buf, p) {
  var initial = buf[p.place++];
  if (!(initial & 0x80)) {
    return initial;
  }
  var octetLen = initial & 0xf;
  var val = 0;
  for (var i = 0, off = p.place; i < octetLen; i++, off++) {
    val <<= 8;
    val |= buf[off];
  }
  p.place = off;
  return val;
}

function rmPadding(buf) {
  var i = 0;
  var len = buf.length - 1;
  while (!buf[i] && !(buf[i + 1] & 0x80) && i < len) {
    i++;
  }
  if (i === 0) {
    return buf;
  }
  return buf.slice(i);
}

Signature.prototype._importDER = function _importDER(data, enc) {
  data = utils.toArray(data, enc);
  var p = new Position();
  if (data[p.place++] !== 0x30) {
    return false;
  }
  var len = getLength(data, p);
  if ((len + p.place) !== data.length) {
    return false;
  }
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var rlen = getLength(data, p);
  var r = data.slice(p.place, rlen + p.place);
  p.place += rlen;
  if (data[p.place++] !== 0x02) {
    return false;
  }
  var slen = getLength(data, p);
  if (data.length !== slen + p.place) {
    return false;
  }
  var s = data.slice(p.place, slen + p.place);
  if (r[0] === 0 && (r[1] & 0x80)) {
    r = r.slice(1);
  }
  if (s[0] === 0 && (s[1] & 0x80)) {
    s = s.slice(1);
  }

  this.r = new BN(r);
  this.s = new BN(s);
  this.recoveryParam = null;

  return true;
};

function constructLength(arr, len) {
  if (len < 0x80) {
    arr.push(len);
    return;
  }
  var octets = 1 + (Math.log(len) / Math.LN2 >>> 3);
  arr.push(octets | 0x80);
  while (--octets) {
    arr.push((len >>> (octets << 3)) & 0xff);
  }
  arr.push(len);
}

Signature.prototype.toDER = function toDER(enc) {
  var r = this.r.toArray();
  var s = this.s.toArray();

  // Pad values
  if (r[0] & 0x80)
    r = [ 0 ].concat(r);
  // Pad values
  if (s[0] & 0x80)
    s = [ 0 ].concat(s);

  r = rmPadding(r);
  s = rmPadding(s);

  while (!s[0] && !(s[1] & 0x80)) {
    s = s.slice(1);
  }
  var arr = [ 0x02 ];
  constructLength(arr, r.length);
  arr = arr.concat(r);
  arr.push(0x02);
  constructLength(arr, s.length);
  var backHalf = arr.concat(s);
  var res = [ 0x30 ];
  constructLength(res, backHalf.length);
  res = res.concat(backHalf);
  return utils.encode(res, enc);
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/eddsa/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/eddsa/index.js ***!
  \***********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var hash = __webpack_require__(/*! hash.js */ "./node_modules/hash.js/lib/hash.js");
var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/elliptic/lib/elliptic.js");
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var KeyPair = __webpack_require__(/*! ./key */ "./node_modules/elliptic/lib/elliptic/eddsa/key.js");
var Signature = __webpack_require__(/*! ./signature */ "./node_modules/elliptic/lib/elliptic/eddsa/signature.js");

function EDDSA(curve) {
  assert(curve === 'ed25519', 'only tested with ed25519 so far');

  if (!(this instanceof EDDSA))
    return new EDDSA(curve);

  var curve = elliptic.curves[curve].curve;
  this.curve = curve;
  this.g = curve.g;
  this.g.precompute(curve.n.bitLength() + 1);

  this.pointClass = curve.point().constructor;
  this.encodingLength = Math.ceil(curve.n.bitLength() / 8);
  this.hash = hash.sha512;
}

module.exports = EDDSA;

/**
* @param {Array|String} message - message bytes
* @param {Array|String|KeyPair} secret - secret bytes or a keypair
* @returns {Signature} - signature
*/
EDDSA.prototype.sign = function sign(message, secret) {
  message = parseBytes(message);
  var key = this.keyFromSecret(secret);
  var r = this.hashInt(key.messagePrefix(), message);
  var R = this.g.mul(r);
  var Rencoded = this.encodePoint(R);
  var s_ = this.hashInt(Rencoded, key.pubBytes(), message)
               .mul(key.priv());
  var S = r.add(s_).umod(this.curve.n);
  return this.makeSignature({ R: R, S: S, Rencoded: Rencoded });
};

/**
* @param {Array} message - message bytes
* @param {Array|String|Signature} sig - sig bytes
* @param {Array|String|Point|KeyPair} pub - public key
* @returns {Boolean} - true if public key matches sig of message
*/
EDDSA.prototype.verify = function verify(message, sig, pub) {
  message = parseBytes(message);
  sig = this.makeSignature(sig);
  var key = this.keyFromPublic(pub);
  var h = this.hashInt(sig.Rencoded(), key.pubBytes(), message);
  var SG = this.g.mul(sig.S());
  var RplusAh = sig.R().add(key.pub().mul(h));
  return RplusAh.eq(SG);
};

EDDSA.prototype.hashInt = function hashInt() {
  var hash = this.hash();
  for (var i = 0; i < arguments.length; i++)
    hash.update(arguments[i]);
  return utils.intFromLE(hash.digest()).umod(this.curve.n);
};

EDDSA.prototype.keyFromPublic = function keyFromPublic(pub) {
  return KeyPair.fromPublic(this, pub);
};

EDDSA.prototype.keyFromSecret = function keyFromSecret(secret) {
  return KeyPair.fromSecret(this, secret);
};

EDDSA.prototype.makeSignature = function makeSignature(sig) {
  if (sig instanceof Signature)
    return sig;
  return new Signature(this, sig);
};

/**
* * https://tools.ietf.org/html/draft-josefsson-eddsa-ed25519-03#section-5.2
*
* EDDSA defines methods for encoding and decoding points and integers. These are
* helper convenience methods, that pass along to utility functions implied
* parameters.
*
*/
EDDSA.prototype.encodePoint = function encodePoint(point) {
  var enc = point.getY().toArray('le', this.encodingLength);
  enc[this.encodingLength - 1] |= point.getX().isOdd() ? 0x80 : 0;
  return enc;
};

EDDSA.prototype.decodePoint = function decodePoint(bytes) {
  bytes = utils.parseBytes(bytes);

  var lastIx = bytes.length - 1;
  var normed = bytes.slice(0, lastIx).concat(bytes[lastIx] & ~0x80);
  var xIsOdd = (bytes[lastIx] & 0x80) !== 0;

  var y = utils.intFromLE(normed);
  return this.curve.pointFromY(y, xIsOdd);
};

EDDSA.prototype.encodeInt = function encodeInt(num) {
  return num.toArray('le', this.encodingLength);
};

EDDSA.prototype.decodeInt = function decodeInt(bytes) {
  return utils.intFromLE(bytes);
};

EDDSA.prototype.isPoint = function isPoint(val) {
  return val instanceof this.pointClass;
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/eddsa/key.js":
/*!*********************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/eddsa/key.js ***!
  \*********************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/elliptic/lib/elliptic.js");
var utils = elliptic.utils;
var assert = utils.assert;
var parseBytes = utils.parseBytes;
var cachedProperty = utils.cachedProperty;

/**
* @param {EDDSA} eddsa - instance
* @param {Object} params - public/private key parameters
*
* @param {Array<Byte>} [params.secret] - secret seed bytes
* @param {Point} [params.pub] - public key point (aka `A` in eddsa terms)
* @param {Array<Byte>} [params.pub] - public key point encoded as bytes
*
*/
function KeyPair(eddsa, params) {
  this.eddsa = eddsa;
  this._secret = parseBytes(params.secret);
  if (eddsa.isPoint(params.pub))
    this._pub = params.pub;
  else
    this._pubBytes = parseBytes(params.pub);
}

KeyPair.fromPublic = function fromPublic(eddsa, pub) {
  if (pub instanceof KeyPair)
    return pub;
  return new KeyPair(eddsa, { pub: pub });
};

KeyPair.fromSecret = function fromSecret(eddsa, secret) {
  if (secret instanceof KeyPair)
    return secret;
  return new KeyPair(eddsa, { secret: secret });
};

KeyPair.prototype.secret = function secret() {
  return this._secret;
};

cachedProperty(KeyPair, 'pubBytes', function pubBytes() {
  return this.eddsa.encodePoint(this.pub());
});

cachedProperty(KeyPair, 'pub', function pub() {
  if (this._pubBytes)
    return this.eddsa.decodePoint(this._pubBytes);
  return this.eddsa.g.mul(this.priv());
});

cachedProperty(KeyPair, 'privBytes', function privBytes() {
  var eddsa = this.eddsa;
  var hash = this.hash();
  var lastIx = eddsa.encodingLength - 1;

  var a = hash.slice(0, eddsa.encodingLength);
  a[0] &= 248;
  a[lastIx] &= 127;
  a[lastIx] |= 64;

  return a;
});

cachedProperty(KeyPair, 'priv', function priv() {
  return this.eddsa.decodeInt(this.privBytes());
});

cachedProperty(KeyPair, 'hash', function hash() {
  return this.eddsa.hash().update(this.secret()).digest();
});

cachedProperty(KeyPair, 'messagePrefix', function messagePrefix() {
  return this.hash().slice(this.eddsa.encodingLength);
});

KeyPair.prototype.sign = function sign(message) {
  assert(this._secret, 'KeyPair can only verify');
  return this.eddsa.sign(message, this);
};

KeyPair.prototype.verify = function verify(message, sig) {
  return this.eddsa.verify(message, sig, this);
};

KeyPair.prototype.getSecret = function getSecret(enc) {
  assert(this._secret, 'KeyPair is public only');
  return utils.encode(this.secret(), enc);
};

KeyPair.prototype.getPublic = function getPublic(enc) {
  return utils.encode(this.pubBytes(), enc);
};

module.exports = KeyPair;


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/eddsa/signature.js":
/*!***************************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/eddsa/signature.js ***!
  \***************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var elliptic = __webpack_require__(/*! ../../elliptic */ "./node_modules/elliptic/lib/elliptic.js");
var utils = elliptic.utils;
var assert = utils.assert;
var cachedProperty = utils.cachedProperty;
var parseBytes = utils.parseBytes;

/**
* @param {EDDSA} eddsa - eddsa instance
* @param {Array<Bytes>|Object} sig -
* @param {Array<Bytes>|Point} [sig.R] - R point as Point or bytes
* @param {Array<Bytes>|bn} [sig.S] - S scalar as bn or bytes
* @param {Array<Bytes>} [sig.Rencoded] - R point encoded
* @param {Array<Bytes>} [sig.Sencoded] - S scalar encoded
*/
function Signature(eddsa, sig) {
  this.eddsa = eddsa;

  if (typeof sig !== 'object')
    sig = parseBytes(sig);

  if (Array.isArray(sig)) {
    sig = {
      R: sig.slice(0, eddsa.encodingLength),
      S: sig.slice(eddsa.encodingLength)
    };
  }

  assert(sig.R && sig.S, 'Signature without R or S');

  if (eddsa.isPoint(sig.R))
    this._R = sig.R;
  if (sig.S instanceof BN)
    this._S = sig.S;

  this._Rencoded = Array.isArray(sig.R) ? sig.R : sig.Rencoded;
  this._Sencoded = Array.isArray(sig.S) ? sig.S : sig.Sencoded;
}

cachedProperty(Signature, 'S', function S() {
  return this.eddsa.decodeInt(this.Sencoded());
});

cachedProperty(Signature, 'R', function R() {
  return this.eddsa.decodePoint(this.Rencoded());
});

cachedProperty(Signature, 'Rencoded', function Rencoded() {
  return this.eddsa.encodePoint(this.R());
});

cachedProperty(Signature, 'Sencoded', function Sencoded() {
  return this.eddsa.encodeInt(this.S());
});

Signature.prototype.toBytes = function toBytes() {
  return this.Rencoded().concat(this.Sencoded());
};

Signature.prototype.toHex = function toHex() {
  return utils.encode(this.toBytes(), 'hex').toUpperCase();
};

module.exports = Signature;


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js":
/*!*********************************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/precomputed/secp256k1.js ***!
  \*********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = {
  doubles: {
    step: 4,
    points: [
      [
        'e60fce93b59e9ec53011aabc21c23e97b2a31369b87a5ae9c44ee89e2a6dec0a',
        'f7e3507399e595929db99f34f57937101296891e44d23f0be1f32cce69616821'
      ],
      [
        '8282263212c609d9ea2a6e3e172de238d8c39cabd5ac1ca10646e23fd5f51508',
        '11f8a8098557dfe45e8256e830b60ace62d613ac2f7b17bed31b6eaff6e26caf'
      ],
      [
        '175e159f728b865a72f99cc6c6fc846de0b93833fd2222ed73fce5b551e5b739',
        'd3506e0d9e3c79eba4ef97a51ff71f5eacb5955add24345c6efa6ffee9fed695'
      ],
      [
        '363d90d447b00c9c99ceac05b6262ee053441c7e55552ffe526bad8f83ff4640',
        '4e273adfc732221953b445397f3363145b9a89008199ecb62003c7f3bee9de9'
      ],
      [
        '8b4b5f165df3c2be8c6244b5b745638843e4a781a15bcd1b69f79a55dffdf80c',
        '4aad0a6f68d308b4b3fbd7813ab0da04f9e336546162ee56b3eff0c65fd4fd36'
      ],
      [
        '723cbaa6e5db996d6bf771c00bd548c7b700dbffa6c0e77bcb6115925232fcda',
        '96e867b5595cc498a921137488824d6e2660a0653779494801dc069d9eb39f5f'
      ],
      [
        'eebfa4d493bebf98ba5feec812c2d3b50947961237a919839a533eca0e7dd7fa',
        '5d9a8ca3970ef0f269ee7edaf178089d9ae4cdc3a711f712ddfd4fdae1de8999'
      ],
      [
        '100f44da696e71672791d0a09b7bde459f1215a29b3c03bfefd7835b39a48db0',
        'cdd9e13192a00b772ec8f3300c090666b7ff4a18ff5195ac0fbd5cd62bc65a09'
      ],
      [
        'e1031be262c7ed1b1dc9227a4a04c017a77f8d4464f3b3852c8acde6e534fd2d',
        '9d7061928940405e6bb6a4176597535af292dd419e1ced79a44f18f29456a00d'
      ],
      [
        'feea6cae46d55b530ac2839f143bd7ec5cf8b266a41d6af52d5e688d9094696d',
        'e57c6b6c97dce1bab06e4e12bf3ecd5c981c8957cc41442d3155debf18090088'
      ],
      [
        'da67a91d91049cdcb367be4be6ffca3cfeed657d808583de33fa978bc1ec6cb1',
        '9bacaa35481642bc41f463f7ec9780e5dec7adc508f740a17e9ea8e27a68be1d'
      ],
      [
        '53904faa0b334cdda6e000935ef22151ec08d0f7bb11069f57545ccc1a37b7c0',
        '5bc087d0bc80106d88c9eccac20d3c1c13999981e14434699dcb096b022771c8'
      ],
      [
        '8e7bcd0bd35983a7719cca7764ca906779b53a043a9b8bcaeff959f43ad86047',
        '10b7770b2a3da4b3940310420ca9514579e88e2e47fd68b3ea10047e8460372a'
      ],
      [
        '385eed34c1cdff21e6d0818689b81bde71a7f4f18397e6690a841e1599c43862',
        '283bebc3e8ea23f56701de19e9ebf4576b304eec2086dc8cc0458fe5542e5453'
      ],
      [
        '6f9d9b803ecf191637c73a4413dfa180fddf84a5947fbc9c606ed86c3fac3a7',
        '7c80c68e603059ba69b8e2a30e45c4d47ea4dd2f5c281002d86890603a842160'
      ],
      [
        '3322d401243c4e2582a2147c104d6ecbf774d163db0f5e5313b7e0e742d0e6bd',
        '56e70797e9664ef5bfb019bc4ddaf9b72805f63ea2873af624f3a2e96c28b2a0'
      ],
      [
        '85672c7d2de0b7da2bd1770d89665868741b3f9af7643397721d74d28134ab83',
        '7c481b9b5b43b2eb6374049bfa62c2e5e77f17fcc5298f44c8e3094f790313a6'
      ],
      [
        '948bf809b1988a46b06c9f1919413b10f9226c60f668832ffd959af60c82a0a',
        '53a562856dcb6646dc6b74c5d1c3418c6d4dff08c97cd2bed4cb7f88d8c8e589'
      ],
      [
        '6260ce7f461801c34f067ce0f02873a8f1b0e44dfc69752accecd819f38fd8e8',
        'bc2da82b6fa5b571a7f09049776a1ef7ecd292238051c198c1a84e95b2b4ae17'
      ],
      [
        'e5037de0afc1d8d43d8348414bbf4103043ec8f575bfdc432953cc8d2037fa2d',
        '4571534baa94d3b5f9f98d09fb990bddbd5f5b03ec481f10e0e5dc841d755bda'
      ],
      [
        'e06372b0f4a207adf5ea905e8f1771b4e7e8dbd1c6a6c5b725866a0ae4fce725',
        '7a908974bce18cfe12a27bb2ad5a488cd7484a7787104870b27034f94eee31dd'
      ],
      [
        '213c7a715cd5d45358d0bbf9dc0ce02204b10bdde2a3f58540ad6908d0559754',
        '4b6dad0b5ae462507013ad06245ba190bb4850f5f36a7eeddff2c27534b458f2'
      ],
      [
        '4e7c272a7af4b34e8dbb9352a5419a87e2838c70adc62cddf0cc3a3b08fbd53c',
        '17749c766c9d0b18e16fd09f6def681b530b9614bff7dd33e0b3941817dcaae6'
      ],
      [
        'fea74e3dbe778b1b10f238ad61686aa5c76e3db2be43057632427e2840fb27b6',
        '6e0568db9b0b13297cf674deccb6af93126b596b973f7b77701d3db7f23cb96f'
      ],
      [
        '76e64113f677cf0e10a2570d599968d31544e179b760432952c02a4417bdde39',
        'c90ddf8dee4e95cf577066d70681f0d35e2a33d2b56d2032b4b1752d1901ac01'
      ],
      [
        'c738c56b03b2abe1e8281baa743f8f9a8f7cc643df26cbee3ab150242bcbb891',
        '893fb578951ad2537f718f2eacbfbbbb82314eef7880cfe917e735d9699a84c3'
      ],
      [
        'd895626548b65b81e264c7637c972877d1d72e5f3a925014372e9f6588f6c14b',
        'febfaa38f2bc7eae728ec60818c340eb03428d632bb067e179363ed75d7d991f'
      ],
      [
        'b8da94032a957518eb0f6433571e8761ceffc73693e84edd49150a564f676e03',
        '2804dfa44805a1e4d7c99cc9762808b092cc584d95ff3b511488e4e74efdf6e7'
      ],
      [
        'e80fea14441fb33a7d8adab9475d7fab2019effb5156a792f1a11778e3c0df5d',
        'eed1de7f638e00771e89768ca3ca94472d155e80af322ea9fcb4291b6ac9ec78'
      ],
      [
        'a301697bdfcd704313ba48e51d567543f2a182031efd6915ddc07bbcc4e16070',
        '7370f91cfb67e4f5081809fa25d40f9b1735dbf7c0a11a130c0d1a041e177ea1'
      ],
      [
        '90ad85b389d6b936463f9d0512678de208cc330b11307fffab7ac63e3fb04ed4',
        'e507a3620a38261affdcbd9427222b839aefabe1582894d991d4d48cb6ef150'
      ],
      [
        '8f68b9d2f63b5f339239c1ad981f162ee88c5678723ea3351b7b444c9ec4c0da',
        '662a9f2dba063986de1d90c2b6be215dbbea2cfe95510bfdf23cbf79501fff82'
      ],
      [
        'e4f3fb0176af85d65ff99ff9198c36091f48e86503681e3e6686fd5053231e11',
        '1e63633ad0ef4f1c1661a6d0ea02b7286cc7e74ec951d1c9822c38576feb73bc'
      ],
      [
        '8c00fa9b18ebf331eb961537a45a4266c7034f2f0d4e1d0716fb6eae20eae29e',
        'efa47267fea521a1a9dc343a3736c974c2fadafa81e36c54e7d2a4c66702414b'
      ],
      [
        'e7a26ce69dd4829f3e10cec0a9e98ed3143d084f308b92c0997fddfc60cb3e41',
        '2a758e300fa7984b471b006a1aafbb18d0a6b2c0420e83e20e8a9421cf2cfd51'
      ],
      [
        'b6459e0ee3662ec8d23540c223bcbdc571cbcb967d79424f3cf29eb3de6b80ef',
        '67c876d06f3e06de1dadf16e5661db3c4b3ae6d48e35b2ff30bf0b61a71ba45'
      ],
      [
        'd68a80c8280bb840793234aa118f06231d6f1fc67e73c5a5deda0f5b496943e8',
        'db8ba9fff4b586d00c4b1f9177b0e28b5b0e7b8f7845295a294c84266b133120'
      ],
      [
        '324aed7df65c804252dc0270907a30b09612aeb973449cea4095980fc28d3d5d',
        '648a365774b61f2ff130c0c35aec1f4f19213b0c7e332843967224af96ab7c84'
      ],
      [
        '4df9c14919cde61f6d51dfdbe5fee5dceec4143ba8d1ca888e8bd373fd054c96',
        '35ec51092d8728050974c23a1d85d4b5d506cdc288490192ebac06cad10d5d'
      ],
      [
        '9c3919a84a474870faed8a9c1cc66021523489054d7f0308cbfc99c8ac1f98cd',
        'ddb84f0f4a4ddd57584f044bf260e641905326f76c64c8e6be7e5e03d4fc599d'
      ],
      [
        '6057170b1dd12fdf8de05f281d8e06bb91e1493a8b91d4cc5a21382120a959e5',
        '9a1af0b26a6a4807add9a2daf71df262465152bc3ee24c65e899be932385a2a8'
      ],
      [
        'a576df8e23a08411421439a4518da31880cef0fba7d4df12b1a6973eecb94266',
        '40a6bf20e76640b2c92b97afe58cd82c432e10a7f514d9f3ee8be11ae1b28ec8'
      ],
      [
        '7778a78c28dec3e30a05fe9629de8c38bb30d1f5cf9a3a208f763889be58ad71',
        '34626d9ab5a5b22ff7098e12f2ff580087b38411ff24ac563b513fc1fd9f43ac'
      ],
      [
        '928955ee637a84463729fd30e7afd2ed5f96274e5ad7e5cb09eda9c06d903ac',
        'c25621003d3f42a827b78a13093a95eeac3d26efa8a8d83fc5180e935bcd091f'
      ],
      [
        '85d0fef3ec6db109399064f3a0e3b2855645b4a907ad354527aae75163d82751',
        '1f03648413a38c0be29d496e582cf5663e8751e96877331582c237a24eb1f962'
      ],
      [
        'ff2b0dce97eece97c1c9b6041798b85dfdfb6d8882da20308f5404824526087e',
        '493d13fef524ba188af4c4dc54d07936c7b7ed6fb90e2ceb2c951e01f0c29907'
      ],
      [
        '827fbbe4b1e880ea9ed2b2e6301b212b57f1ee148cd6dd28780e5e2cf856e241',
        'c60f9c923c727b0b71bef2c67d1d12687ff7a63186903166d605b68baec293ec'
      ],
      [
        'eaa649f21f51bdbae7be4ae34ce6e5217a58fdce7f47f9aa7f3b58fa2120e2b3',
        'be3279ed5bbbb03ac69a80f89879aa5a01a6b965f13f7e59d47a5305ba5ad93d'
      ],
      [
        'e4a42d43c5cf169d9391df6decf42ee541b6d8f0c9a137401e23632dda34d24f',
        '4d9f92e716d1c73526fc99ccfb8ad34ce886eedfa8d8e4f13a7f7131deba9414'
      ],
      [
        '1ec80fef360cbdd954160fadab352b6b92b53576a88fea4947173b9d4300bf19',
        'aeefe93756b5340d2f3a4958a7abbf5e0146e77f6295a07b671cdc1cc107cefd'
      ],
      [
        '146a778c04670c2f91b00af4680dfa8bce3490717d58ba889ddb5928366642be',
        'b318e0ec3354028add669827f9d4b2870aaa971d2f7e5ed1d0b297483d83efd0'
      ],
      [
        'fa50c0f61d22e5f07e3acebb1aa07b128d0012209a28b9776d76a8793180eef9',
        '6b84c6922397eba9b72cd2872281a68a5e683293a57a213b38cd8d7d3f4f2811'
      ],
      [
        'da1d61d0ca721a11b1a5bf6b7d88e8421a288ab5d5bba5220e53d32b5f067ec2',
        '8157f55a7c99306c79c0766161c91e2966a73899d279b48a655fba0f1ad836f1'
      ],
      [
        'a8e282ff0c9706907215ff98e8fd416615311de0446f1e062a73b0610d064e13',
        '7f97355b8db81c09abfb7f3c5b2515888b679a3e50dd6bd6cef7c73111f4cc0c'
      ],
      [
        '174a53b9c9a285872d39e56e6913cab15d59b1fa512508c022f382de8319497c',
        'ccc9dc37abfc9c1657b4155f2c47f9e6646b3a1d8cb9854383da13ac079afa73'
      ],
      [
        '959396981943785c3d3e57edf5018cdbe039e730e4918b3d884fdff09475b7ba',
        '2e7e552888c331dd8ba0386a4b9cd6849c653f64c8709385e9b8abf87524f2fd'
      ],
      [
        'd2a63a50ae401e56d645a1153b109a8fcca0a43d561fba2dbb51340c9d82b151',
        'e82d86fb6443fcb7565aee58b2948220a70f750af484ca52d4142174dcf89405'
      ],
      [
        '64587e2335471eb890ee7896d7cfdc866bacbdbd3839317b3436f9b45617e073',
        'd99fcdd5bf6902e2ae96dd6447c299a185b90a39133aeab358299e5e9faf6589'
      ],
      [
        '8481bde0e4e4d885b3a546d3e549de042f0aa6cea250e7fd358d6c86dd45e458',
        '38ee7b8cba5404dd84a25bf39cecb2ca900a79c42b262e556d64b1b59779057e'
      ],
      [
        '13464a57a78102aa62b6979ae817f4637ffcfed3c4b1ce30bcd6303f6caf666b',
        '69be159004614580ef7e433453ccb0ca48f300a81d0942e13f495a907f6ecc27'
      ],
      [
        'bc4a9df5b713fe2e9aef430bcc1dc97a0cd9ccede2f28588cada3a0d2d83f366',
        'd3a81ca6e785c06383937adf4b798caa6e8a9fbfa547b16d758d666581f33c1'
      ],
      [
        '8c28a97bf8298bc0d23d8c749452a32e694b65e30a9472a3954ab30fe5324caa',
        '40a30463a3305193378fedf31f7cc0eb7ae784f0451cb9459e71dc73cbef9482'
      ],
      [
        '8ea9666139527a8c1dd94ce4f071fd23c8b350c5a4bb33748c4ba111faccae0',
        '620efabbc8ee2782e24e7c0cfb95c5d735b783be9cf0f8e955af34a30e62b945'
      ],
      [
        'dd3625faef5ba06074669716bbd3788d89bdde815959968092f76cc4eb9a9787',
        '7a188fa3520e30d461da2501045731ca941461982883395937f68d00c644a573'
      ],
      [
        'f710d79d9eb962297e4f6232b40e8f7feb2bc63814614d692c12de752408221e',
        'ea98e67232d3b3295d3b535532115ccac8612c721851617526ae47a9c77bfc82'
      ]
    ]
  },
  naf: {
    wnd: 7,
    points: [
      [
        'f9308a019258c31049344f85f89d5229b531c845836f99b08601f113bce036f9',
        '388f7b0f632de8140fe337e62a37f3566500a99934c2231b6cb9fd7584b8e672'
      ],
      [
        '2f8bde4d1a07209355b4a7250a5c5128e88b84bddc619ab7cba8d569b240efe4',
        'd8ac222636e5e3d6d4dba9dda6c9c426f788271bab0d6840dca87d3aa6ac62d6'
      ],
      [
        '5cbdf0646e5db4eaa398f365f2ea7a0e3d419b7e0330e39ce92bddedcac4f9bc',
        '6aebca40ba255960a3178d6d861a54dba813d0b813fde7b5a5082628087264da'
      ],
      [
        'acd484e2f0c7f65309ad178a9f559abde09796974c57e714c35f110dfc27ccbe',
        'cc338921b0a7d9fd64380971763b61e9add888a4375f8e0f05cc262ac64f9c37'
      ],
      [
        '774ae7f858a9411e5ef4246b70c65aac5649980be5c17891bbec17895da008cb',
        'd984a032eb6b5e190243dd56d7b7b365372db1e2dff9d6a8301d74c9c953c61b'
      ],
      [
        'f28773c2d975288bc7d1d205c3748651b075fbc6610e58cddeeddf8f19405aa8',
        'ab0902e8d880a89758212eb65cdaf473a1a06da521fa91f29b5cb52db03ed81'
      ],
      [
        'd7924d4f7d43ea965a465ae3095ff41131e5946f3c85f79e44adbcf8e27e080e',
        '581e2872a86c72a683842ec228cc6defea40af2bd896d3a5c504dc9ff6a26b58'
      ],
      [
        'defdea4cdb677750a420fee807eacf21eb9898ae79b9768766e4faa04a2d4a34',
        '4211ab0694635168e997b0ead2a93daeced1f4a04a95c0f6cfb199f69e56eb77'
      ],
      [
        '2b4ea0a797a443d293ef5cff444f4979f06acfebd7e86d277475656138385b6c',
        '85e89bc037945d93b343083b5a1c86131a01f60c50269763b570c854e5c09b7a'
      ],
      [
        '352bbf4a4cdd12564f93fa332ce333301d9ad40271f8107181340aef25be59d5',
        '321eb4075348f534d59c18259dda3e1f4a1b3b2e71b1039c67bd3d8bcf81998c'
      ],
      [
        '2fa2104d6b38d11b0230010559879124e42ab8dfeff5ff29dc9cdadd4ecacc3f',
        '2de1068295dd865b64569335bd5dd80181d70ecfc882648423ba76b532b7d67'
      ],
      [
        '9248279b09b4d68dab21a9b066edda83263c3d84e09572e269ca0cd7f5453714',
        '73016f7bf234aade5d1aa71bdea2b1ff3fc0de2a887912ffe54a32ce97cb3402'
      ],
      [
        'daed4f2be3a8bf278e70132fb0beb7522f570e144bf615c07e996d443dee8729',
        'a69dce4a7d6c98e8d4a1aca87ef8d7003f83c230f3afa726ab40e52290be1c55'
      ],
      [
        'c44d12c7065d812e8acf28d7cbb19f9011ecd9e9fdf281b0e6a3b5e87d22e7db',
        '2119a460ce326cdc76c45926c982fdac0e106e861edf61c5a039063f0e0e6482'
      ],
      [
        '6a245bf6dc698504c89a20cfded60853152b695336c28063b61c65cbd269e6b4',
        'e022cf42c2bd4a708b3f5126f16a24ad8b33ba48d0423b6efd5e6348100d8a82'
      ],
      [
        '1697ffa6fd9de627c077e3d2fe541084ce13300b0bec1146f95ae57f0d0bd6a5',
        'b9c398f186806f5d27561506e4557433a2cf15009e498ae7adee9d63d01b2396'
      ],
      [
        '605bdb019981718b986d0f07e834cb0d9deb8360ffb7f61df982345ef27a7479',
        '2972d2de4f8d20681a78d93ec96fe23c26bfae84fb14db43b01e1e9056b8c49'
      ],
      [
        '62d14dab4150bf497402fdc45a215e10dcb01c354959b10cfe31c7e9d87ff33d',
        '80fc06bd8cc5b01098088a1950eed0db01aa132967ab472235f5642483b25eaf'
      ],
      [
        '80c60ad0040f27dade5b4b06c408e56b2c50e9f56b9b8b425e555c2f86308b6f',
        '1c38303f1cc5c30f26e66bad7fe72f70a65eed4cbe7024eb1aa01f56430bd57a'
      ],
      [
        '7a9375ad6167ad54aa74c6348cc54d344cc5dc9487d847049d5eabb0fa03c8fb',
        'd0e3fa9eca8726909559e0d79269046bdc59ea10c70ce2b02d499ec224dc7f7'
      ],
      [
        'd528ecd9b696b54c907a9ed045447a79bb408ec39b68df504bb51f459bc3ffc9',
        'eecf41253136e5f99966f21881fd656ebc4345405c520dbc063465b521409933'
      ],
      [
        '49370a4b5f43412ea25f514e8ecdad05266115e4a7ecb1387231808f8b45963',
        '758f3f41afd6ed428b3081b0512fd62a54c3f3afbb5b6764b653052a12949c9a'
      ],
      [
        '77f230936ee88cbbd73df930d64702ef881d811e0e1498e2f1c13eb1fc345d74',
        '958ef42a7886b6400a08266e9ba1b37896c95330d97077cbbe8eb3c7671c60d6'
      ],
      [
        'f2dac991cc4ce4b9ea44887e5c7c0bce58c80074ab9d4dbaeb28531b7739f530',
        'e0dedc9b3b2f8dad4da1f32dec2531df9eb5fbeb0598e4fd1a117dba703a3c37'
      ],
      [
        '463b3d9f662621fb1b4be8fbbe2520125a216cdfc9dae3debcba4850c690d45b',
        '5ed430d78c296c3543114306dd8622d7c622e27c970a1de31cb377b01af7307e'
      ],
      [
        'f16f804244e46e2a09232d4aff3b59976b98fac14328a2d1a32496b49998f247',
        'cedabd9b82203f7e13d206fcdf4e33d92a6c53c26e5cce26d6579962c4e31df6'
      ],
      [
        'caf754272dc84563b0352b7a14311af55d245315ace27c65369e15f7151d41d1',
        'cb474660ef35f5f2a41b643fa5e460575f4fa9b7962232a5c32f908318a04476'
      ],
      [
        '2600ca4b282cb986f85d0f1709979d8b44a09c07cb86d7c124497bc86f082120',
        '4119b88753c15bd6a693b03fcddbb45d5ac6be74ab5f0ef44b0be9475a7e4b40'
      ],
      [
        '7635ca72d7e8432c338ec53cd12220bc01c48685e24f7dc8c602a7746998e435',
        '91b649609489d613d1d5e590f78e6d74ecfc061d57048bad9e76f302c5b9c61'
      ],
      [
        '754e3239f325570cdbbf4a87deee8a66b7f2b33479d468fbc1a50743bf56cc18',
        '673fb86e5bda30fb3cd0ed304ea49a023ee33d0197a695d0c5d98093c536683'
      ],
      [
        'e3e6bd1071a1e96aff57859c82d570f0330800661d1c952f9fe2694691d9b9e8',
        '59c9e0bba394e76f40c0aa58379a3cb6a5a2283993e90c4167002af4920e37f5'
      ],
      [
        '186b483d056a033826ae73d88f732985c4ccb1f32ba35f4b4cc47fdcf04aa6eb',
        '3b952d32c67cf77e2e17446e204180ab21fb8090895138b4a4a797f86e80888b'
      ],
      [
        'df9d70a6b9876ce544c98561f4be4f725442e6d2b737d9c91a8321724ce0963f',
        '55eb2dafd84d6ccd5f862b785dc39d4ab157222720ef9da217b8c45cf2ba2417'
      ],
      [
        '5edd5cc23c51e87a497ca815d5dce0f8ab52554f849ed8995de64c5f34ce7143',
        'efae9c8dbc14130661e8cec030c89ad0c13c66c0d17a2905cdc706ab7399a868'
      ],
      [
        '290798c2b6476830da12fe02287e9e777aa3fba1c355b17a722d362f84614fba',
        'e38da76dcd440621988d00bcf79af25d5b29c094db2a23146d003afd41943e7a'
      ],
      [
        'af3c423a95d9f5b3054754efa150ac39cd29552fe360257362dfdecef4053b45',
        'f98a3fd831eb2b749a93b0e6f35cfb40c8cd5aa667a15581bc2feded498fd9c6'
      ],
      [
        '766dbb24d134e745cccaa28c99bf274906bb66b26dcf98df8d2fed50d884249a',
        '744b1152eacbe5e38dcc887980da38b897584a65fa06cedd2c924f97cbac5996'
      ],
      [
        '59dbf46f8c94759ba21277c33784f41645f7b44f6c596a58ce92e666191abe3e',
        'c534ad44175fbc300f4ea6ce648309a042ce739a7919798cd85e216c4a307f6e'
      ],
      [
        'f13ada95103c4537305e691e74e9a4a8dd647e711a95e73cb62dc6018cfd87b8',
        'e13817b44ee14de663bf4bc808341f326949e21a6a75c2570778419bdaf5733d'
      ],
      [
        '7754b4fa0e8aced06d4167a2c59cca4cda1869c06ebadfb6488550015a88522c',
        '30e93e864e669d82224b967c3020b8fa8d1e4e350b6cbcc537a48b57841163a2'
      ],
      [
        '948dcadf5990e048aa3874d46abef9d701858f95de8041d2a6828c99e2262519',
        'e491a42537f6e597d5d28a3224b1bc25df9154efbd2ef1d2cbba2cae5347d57e'
      ],
      [
        '7962414450c76c1689c7b48f8202ec37fb224cf5ac0bfa1570328a8a3d7c77ab',
        '100b610ec4ffb4760d5c1fc133ef6f6b12507a051f04ac5760afa5b29db83437'
      ],
      [
        '3514087834964b54b15b160644d915485a16977225b8847bb0dd085137ec47ca',
        'ef0afbb2056205448e1652c48e8127fc6039e77c15c2378b7e7d15a0de293311'
      ],
      [
        'd3cc30ad6b483e4bc79ce2c9dd8bc54993e947eb8df787b442943d3f7b527eaf',
        '8b378a22d827278d89c5e9be8f9508ae3c2ad46290358630afb34db04eede0a4'
      ],
      [
        '1624d84780732860ce1c78fcbfefe08b2b29823db913f6493975ba0ff4847610',
        '68651cf9b6da903e0914448c6cd9d4ca896878f5282be4c8cc06e2a404078575'
      ],
      [
        '733ce80da955a8a26902c95633e62a985192474b5af207da6df7b4fd5fc61cd4',
        'f5435a2bd2badf7d485a4d8b8db9fcce3e1ef8e0201e4578c54673bc1dc5ea1d'
      ],
      [
        '15d9441254945064cf1a1c33bbd3b49f8966c5092171e699ef258dfab81c045c',
        'd56eb30b69463e7234f5137b73b84177434800bacebfc685fc37bbe9efe4070d'
      ],
      [
        'a1d0fcf2ec9de675b612136e5ce70d271c21417c9d2b8aaaac138599d0717940',
        'edd77f50bcb5a3cab2e90737309667f2641462a54070f3d519212d39c197a629'
      ],
      [
        'e22fbe15c0af8ccc5780c0735f84dbe9a790badee8245c06c7ca37331cb36980',
        'a855babad5cd60c88b430a69f53a1a7a38289154964799be43d06d77d31da06'
      ],
      [
        '311091dd9860e8e20ee13473c1155f5f69635e394704eaa74009452246cfa9b3',
        '66db656f87d1f04fffd1f04788c06830871ec5a64feee685bd80f0b1286d8374'
      ],
      [
        '34c1fd04d301be89b31c0442d3e6ac24883928b45a9340781867d4232ec2dbdf',
        '9414685e97b1b5954bd46f730174136d57f1ceeb487443dc5321857ba73abee'
      ],
      [
        'f219ea5d6b54701c1c14de5b557eb42a8d13f3abbcd08affcc2a5e6b049b8d63',
        '4cb95957e83d40b0f73af4544cccf6b1f4b08d3c07b27fb8d8c2962a400766d1'
      ],
      [
        'd7b8740f74a8fbaab1f683db8f45de26543a5490bca627087236912469a0b448',
        'fa77968128d9c92ee1010f337ad4717eff15db5ed3c049b3411e0315eaa4593b'
      ],
      [
        '32d31c222f8f6f0ef86f7c98d3a3335ead5bcd32abdd94289fe4d3091aa824bf',
        '5f3032f5892156e39ccd3d7915b9e1da2e6dac9e6f26e961118d14b8462e1661'
      ],
      [
        '7461f371914ab32671045a155d9831ea8793d77cd59592c4340f86cbc18347b5',
        '8ec0ba238b96bec0cbdddcae0aa442542eee1ff50c986ea6b39847b3cc092ff6'
      ],
      [
        'ee079adb1df1860074356a25aa38206a6d716b2c3e67453d287698bad7b2b2d6',
        '8dc2412aafe3be5c4c5f37e0ecc5f9f6a446989af04c4e25ebaac479ec1c8c1e'
      ],
      [
        '16ec93e447ec83f0467b18302ee620f7e65de331874c9dc72bfd8616ba9da6b5',
        '5e4631150e62fb40d0e8c2a7ca5804a39d58186a50e497139626778e25b0674d'
      ],
      [
        'eaa5f980c245f6f038978290afa70b6bd8855897f98b6aa485b96065d537bd99',
        'f65f5d3e292c2e0819a528391c994624d784869d7e6ea67fb18041024edc07dc'
      ],
      [
        '78c9407544ac132692ee1910a02439958ae04877151342ea96c4b6b35a49f51',
        'f3e0319169eb9b85d5404795539a5e68fa1fbd583c064d2462b675f194a3ddb4'
      ],
      [
        '494f4be219a1a77016dcd838431aea0001cdc8ae7a6fc688726578d9702857a5',
        '42242a969283a5f339ba7f075e36ba2af925ce30d767ed6e55f4b031880d562c'
      ],
      [
        'a598a8030da6d86c6bc7f2f5144ea549d28211ea58faa70ebf4c1e665c1fe9b5',
        '204b5d6f84822c307e4b4a7140737aec23fc63b65b35f86a10026dbd2d864e6b'
      ],
      [
        'c41916365abb2b5d09192f5f2dbeafec208f020f12570a184dbadc3e58595997',
        '4f14351d0087efa49d245b328984989d5caf9450f34bfc0ed16e96b58fa9913'
      ],
      [
        '841d6063a586fa475a724604da03bc5b92a2e0d2e0a36acfe4c73a5514742881',
        '73867f59c0659e81904f9a1c7543698e62562d6744c169ce7a36de01a8d6154'
      ],
      [
        '5e95bb399a6971d376026947f89bde2f282b33810928be4ded112ac4d70e20d5',
        '39f23f366809085beebfc71181313775a99c9aed7d8ba38b161384c746012865'
      ],
      [
        '36e4641a53948fd476c39f8a99fd974e5ec07564b5315d8bf99471bca0ef2f66',
        'd2424b1b1abe4eb8164227b085c9aa9456ea13493fd563e06fd51cf5694c78fc'
      ],
      [
        '336581ea7bfbbb290c191a2f507a41cf5643842170e914faeab27c2c579f726',
        'ead12168595fe1be99252129b6e56b3391f7ab1410cd1e0ef3dcdcabd2fda224'
      ],
      [
        '8ab89816dadfd6b6a1f2634fcf00ec8403781025ed6890c4849742706bd43ede',
        '6fdcef09f2f6d0a044e654aef624136f503d459c3e89845858a47a9129cdd24e'
      ],
      [
        '1e33f1a746c9c5778133344d9299fcaa20b0938e8acff2544bb40284b8c5fb94',
        '60660257dd11b3aa9c8ed618d24edff2306d320f1d03010e33a7d2057f3b3b6'
      ],
      [
        '85b7c1dcb3cec1b7ee7f30ded79dd20a0ed1f4cc18cbcfcfa410361fd8f08f31',
        '3d98a9cdd026dd43f39048f25a8847f4fcafad1895d7a633c6fed3c35e999511'
      ],
      [
        '29df9fbd8d9e46509275f4b125d6d45d7fbe9a3b878a7af872a2800661ac5f51',
        'b4c4fe99c775a606e2d8862179139ffda61dc861c019e55cd2876eb2a27d84b'
      ],
      [
        'a0b1cae06b0a847a3fea6e671aaf8adfdfe58ca2f768105c8082b2e449fce252',
        'ae434102edde0958ec4b19d917a6a28e6b72da1834aff0e650f049503a296cf2'
      ],
      [
        '4e8ceafb9b3e9a136dc7ff67e840295b499dfb3b2133e4ba113f2e4c0e121e5',
        'cf2174118c8b6d7a4b48f6d534ce5c79422c086a63460502b827ce62a326683c'
      ],
      [
        'd24a44e047e19b6f5afb81c7ca2f69080a5076689a010919f42725c2b789a33b',
        '6fb8d5591b466f8fc63db50f1c0f1c69013f996887b8244d2cdec417afea8fa3'
      ],
      [
        'ea01606a7a6c9cdd249fdfcfacb99584001edd28abbab77b5104e98e8e3b35d4',
        '322af4908c7312b0cfbfe369f7a7b3cdb7d4494bc2823700cfd652188a3ea98d'
      ],
      [
        'af8addbf2b661c8a6c6328655eb96651252007d8c5ea31be4ad196de8ce2131f',
        '6749e67c029b85f52a034eafd096836b2520818680e26ac8f3dfbcdb71749700'
      ],
      [
        'e3ae1974566ca06cc516d47e0fb165a674a3dabcfca15e722f0e3450f45889',
        '2aeabe7e4531510116217f07bf4d07300de97e4874f81f533420a72eeb0bd6a4'
      ],
      [
        '591ee355313d99721cf6993ffed1e3e301993ff3ed258802075ea8ced397e246',
        'b0ea558a113c30bea60fc4775460c7901ff0b053d25ca2bdeee98f1a4be5d196'
      ],
      [
        '11396d55fda54c49f19aa97318d8da61fa8584e47b084945077cf03255b52984',
        '998c74a8cd45ac01289d5833a7beb4744ff536b01b257be4c5767bea93ea57a4'
      ],
      [
        '3c5d2a1ba39c5a1790000738c9e0c40b8dcdfd5468754b6405540157e017aa7a',
        'b2284279995a34e2f9d4de7396fc18b80f9b8b9fdd270f6661f79ca4c81bd257'
      ],
      [
        'cc8704b8a60a0defa3a99a7299f2e9c3fbc395afb04ac078425ef8a1793cc030',
        'bdd46039feed17881d1e0862db347f8cf395b74fc4bcdc4e940b74e3ac1f1b13'
      ],
      [
        'c533e4f7ea8555aacd9777ac5cad29b97dd4defccc53ee7ea204119b2889b197',
        '6f0a256bc5efdf429a2fb6242f1a43a2d9b925bb4a4b3a26bb8e0f45eb596096'
      ],
      [
        'c14f8f2ccb27d6f109f6d08d03cc96a69ba8c34eec07bbcf566d48e33da6593',
        'c359d6923bb398f7fd4473e16fe1c28475b740dd098075e6c0e8649113dc3a38'
      ],
      [
        'a6cbc3046bc6a450bac24789fa17115a4c9739ed75f8f21ce441f72e0b90e6ef',
        '21ae7f4680e889bb130619e2c0f95a360ceb573c70603139862afd617fa9b9f'
      ],
      [
        '347d6d9a02c48927ebfb86c1359b1caf130a3c0267d11ce6344b39f99d43cc38',
        '60ea7f61a353524d1c987f6ecec92f086d565ab687870cb12689ff1e31c74448'
      ],
      [
        'da6545d2181db8d983f7dcb375ef5866d47c67b1bf31c8cf855ef7437b72656a',
        '49b96715ab6878a79e78f07ce5680c5d6673051b4935bd897fea824b77dc208a'
      ],
      [
        'c40747cc9d012cb1a13b8148309c6de7ec25d6945d657146b9d5994b8feb1111',
        '5ca560753be2a12fc6de6caf2cb489565db936156b9514e1bb5e83037e0fa2d4'
      ],
      [
        '4e42c8ec82c99798ccf3a610be870e78338c7f713348bd34c8203ef4037f3502',
        '7571d74ee5e0fb92a7a8b33a07783341a5492144cc54bcc40a94473693606437'
      ],
      [
        '3775ab7089bc6af823aba2e1af70b236d251cadb0c86743287522a1b3b0dedea',
        'be52d107bcfa09d8bcb9736a828cfa7fac8db17bf7a76a2c42ad961409018cf7'
      ],
      [
        'cee31cbf7e34ec379d94fb814d3d775ad954595d1314ba8846959e3e82f74e26',
        '8fd64a14c06b589c26b947ae2bcf6bfa0149ef0be14ed4d80f448a01c43b1c6d'
      ],
      [
        'b4f9eaea09b6917619f6ea6a4eb5464efddb58fd45b1ebefcdc1a01d08b47986',
        '39e5c9925b5a54b07433a4f18c61726f8bb131c012ca542eb24a8ac07200682a'
      ],
      [
        'd4263dfc3d2df923a0179a48966d30ce84e2515afc3dccc1b77907792ebcc60e',
        '62dfaf07a0f78feb30e30d6295853ce189e127760ad6cf7fae164e122a208d54'
      ],
      [
        '48457524820fa65a4f8d35eb6930857c0032acc0a4a2de422233eeda897612c4',
        '25a748ab367979d98733c38a1fa1c2e7dc6cc07db2d60a9ae7a76aaa49bd0f77'
      ],
      [
        'dfeeef1881101f2cb11644f3a2afdfc2045e19919152923f367a1767c11cceda',
        'ecfb7056cf1de042f9420bab396793c0c390bde74b4bbdff16a83ae09a9a7517'
      ],
      [
        '6d7ef6b17543f8373c573f44e1f389835d89bcbc6062ced36c82df83b8fae859',
        'cd450ec335438986dfefa10c57fea9bcc521a0959b2d80bbf74b190dca712d10'
      ],
      [
        'e75605d59102a5a2684500d3b991f2e3f3c88b93225547035af25af66e04541f',
        'f5c54754a8f71ee540b9b48728473e314f729ac5308b06938360990e2bfad125'
      ],
      [
        'eb98660f4c4dfaa06a2be453d5020bc99a0c2e60abe388457dd43fefb1ed620c',
        '6cb9a8876d9cb8520609af3add26cd20a0a7cd8a9411131ce85f44100099223e'
      ],
      [
        '13e87b027d8514d35939f2e6892b19922154596941888336dc3563e3b8dba942',
        'fef5a3c68059a6dec5d624114bf1e91aac2b9da568d6abeb2570d55646b8adf1'
      ],
      [
        'ee163026e9fd6fe017c38f06a5be6fc125424b371ce2708e7bf4491691e5764a',
        '1acb250f255dd61c43d94ccc670d0f58f49ae3fa15b96623e5430da0ad6c62b2'
      ],
      [
        'b268f5ef9ad51e4d78de3a750c2dc89b1e626d43505867999932e5db33af3d80',
        '5f310d4b3c99b9ebb19f77d41c1dee018cf0d34fd4191614003e945a1216e423'
      ],
      [
        'ff07f3118a9df035e9fad85eb6c7bfe42b02f01ca99ceea3bf7ffdba93c4750d',
        '438136d603e858a3a5c440c38eccbaddc1d2942114e2eddd4740d098ced1f0d8'
      ],
      [
        '8d8b9855c7c052a34146fd20ffb658bea4b9f69e0d825ebec16e8c3ce2b526a1',
        'cdb559eedc2d79f926baf44fb84ea4d44bcf50fee51d7ceb30e2e7f463036758'
      ],
      [
        '52db0b5384dfbf05bfa9d472d7ae26dfe4b851ceca91b1eba54263180da32b63',
        'c3b997d050ee5d423ebaf66a6db9f57b3180c902875679de924b69d84a7b375'
      ],
      [
        'e62f9490d3d51da6395efd24e80919cc7d0f29c3f3fa48c6fff543becbd43352',
        '6d89ad7ba4876b0b22c2ca280c682862f342c8591f1daf5170e07bfd9ccafa7d'
      ],
      [
        '7f30ea2476b399b4957509c88f77d0191afa2ff5cb7b14fd6d8e7d65aaab1193',
        'ca5ef7d4b231c94c3b15389a5f6311e9daff7bb67b103e9880ef4bff637acaec'
      ],
      [
        '5098ff1e1d9f14fb46a210fada6c903fef0fb7b4a1dd1d9ac60a0361800b7a00',
        '9731141d81fc8f8084d37c6e7542006b3ee1b40d60dfe5362a5b132fd17ddc0'
      ],
      [
        '32b78c7de9ee512a72895be6b9cbefa6e2f3c4ccce445c96b9f2c81e2778ad58',
        'ee1849f513df71e32efc3896ee28260c73bb80547ae2275ba497237794c8753c'
      ],
      [
        'e2cb74fddc8e9fbcd076eef2a7c72b0ce37d50f08269dfc074b581550547a4f7',
        'd3aa2ed71c9dd2247a62df062736eb0baddea9e36122d2be8641abcb005cc4a4'
      ],
      [
        '8438447566d4d7bedadc299496ab357426009a35f235cb141be0d99cd10ae3a8',
        'c4e1020916980a4da5d01ac5e6ad330734ef0d7906631c4f2390426b2edd791f'
      ],
      [
        '4162d488b89402039b584c6fc6c308870587d9c46f660b878ab65c82c711d67e',
        '67163e903236289f776f22c25fb8a3afc1732f2b84b4e95dbda47ae5a0852649'
      ],
      [
        '3fad3fa84caf0f34f0f89bfd2dcf54fc175d767aec3e50684f3ba4a4bf5f683d',
        'cd1bc7cb6cc407bb2f0ca647c718a730cf71872e7d0d2a53fa20efcdfe61826'
      ],
      [
        '674f2600a3007a00568c1a7ce05d0816c1fb84bf1370798f1c69532faeb1a86b',
        '299d21f9413f33b3edf43b257004580b70db57da0b182259e09eecc69e0d38a5'
      ],
      [
        'd32f4da54ade74abb81b815ad1fb3b263d82d6c692714bcff87d29bd5ee9f08f',
        'f9429e738b8e53b968e99016c059707782e14f4535359d582fc416910b3eea87'
      ],
      [
        '30e4e670435385556e593657135845d36fbb6931f72b08cb1ed954f1e3ce3ff6',
        '462f9bce619898638499350113bbc9b10a878d35da70740dc695a559eb88db7b'
      ],
      [
        'be2062003c51cc3004682904330e4dee7f3dcd10b01e580bf1971b04d4cad297',
        '62188bc49d61e5428573d48a74e1c655b1c61090905682a0d5558ed72dccb9bc'
      ],
      [
        '93144423ace3451ed29e0fb9ac2af211cb6e84a601df5993c419859fff5df04a',
        '7c10dfb164c3425f5c71a3f9d7992038f1065224f72bb9d1d902a6d13037b47c'
      ],
      [
        'b015f8044f5fcbdcf21ca26d6c34fb8197829205c7b7d2a7cb66418c157b112c',
        'ab8c1e086d04e813744a655b2df8d5f83b3cdc6faa3088c1d3aea1454e3a1d5f'
      ],
      [
        'd5e9e1da649d97d89e4868117a465a3a4f8a18de57a140d36b3f2af341a21b52',
        '4cb04437f391ed73111a13cc1d4dd0db1693465c2240480d8955e8592f27447a'
      ],
      [
        'd3ae41047dd7ca065dbf8ed77b992439983005cd72e16d6f996a5316d36966bb',
        'bd1aeb21ad22ebb22a10f0303417c6d964f8cdd7df0aca614b10dc14d125ac46'
      ],
      [
        '463e2763d885f958fc66cdd22800f0a487197d0a82e377b49f80af87c897b065',
        'bfefacdb0e5d0fd7df3a311a94de062b26b80c61fbc97508b79992671ef7ca7f'
      ],
      [
        '7985fdfd127c0567c6f53ec1bb63ec3158e597c40bfe747c83cddfc910641917',
        '603c12daf3d9862ef2b25fe1de289aed24ed291e0ec6708703a5bd567f32ed03'
      ],
      [
        '74a1ad6b5f76e39db2dd249410eac7f99e74c59cb83d2d0ed5ff1543da7703e9',
        'cc6157ef18c9c63cd6193d83631bbea0093e0968942e8c33d5737fd790e0db08'
      ],
      [
        '30682a50703375f602d416664ba19b7fc9bab42c72747463a71d0896b22f6da3',
        '553e04f6b018b4fa6c8f39e7f311d3176290d0e0f19ca73f17714d9977a22ff8'
      ],
      [
        '9e2158f0d7c0d5f26c3791efefa79597654e7a2b2464f52b1ee6c1347769ef57',
        '712fcdd1b9053f09003a3481fa7762e9ffd7c8ef35a38509e2fbf2629008373'
      ],
      [
        '176e26989a43c9cfeba4029c202538c28172e566e3c4fce7322857f3be327d66',
        'ed8cc9d04b29eb877d270b4878dc43c19aefd31f4eee09ee7b47834c1fa4b1c3'
      ],
      [
        '75d46efea3771e6e68abb89a13ad747ecf1892393dfc4f1b7004788c50374da8',
        '9852390a99507679fd0b86fd2b39a868d7efc22151346e1a3ca4726586a6bed8'
      ],
      [
        '809a20c67d64900ffb698c4c825f6d5f2310fb0451c869345b7319f645605721',
        '9e994980d9917e22b76b061927fa04143d096ccc54963e6a5ebfa5f3f8e286c1'
      ],
      [
        '1b38903a43f7f114ed4500b4eac7083fdefece1cf29c63528d563446f972c180',
        '4036edc931a60ae889353f77fd53de4a2708b26b6f5da72ad3394119daf408f9'
      ]
    ]
  }
};


/***/ }),

/***/ "./node_modules/elliptic/lib/elliptic/utils.js":
/*!*****************************************************!*\
  !*** ./node_modules/elliptic/lib/elliptic/utils.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = exports;
var BN = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var minAssert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");
var minUtils = __webpack_require__(/*! minimalistic-crypto-utils */ "./node_modules/minimalistic-crypto-utils/lib/utils.js");

utils.assert = minAssert;
utils.toArray = minUtils.toArray;
utils.zero2 = minUtils.zero2;
utils.toHex = minUtils.toHex;
utils.encode = minUtils.encode;

// Represent num in a w-NAF form
function getNAF(num, w) {
  var naf = [];
  var ws = 1 << (w + 1);
  var k = num.clone();
  while (k.cmpn(1) >= 0) {
    var z;
    if (k.isOdd()) {
      var mod = k.andln(ws - 1);
      if (mod > (ws >> 1) - 1)
        z = (ws >> 1) - mod;
      else
        z = mod;
      k.isubn(z);
    } else {
      z = 0;
    }
    naf.push(z);

    // Optimization, shift by word if possible
    var shift = (k.cmpn(0) !== 0 && k.andln(ws - 1) === 0) ? (w + 1) : 1;
    for (var i = 1; i < shift; i++)
      naf.push(0);
    k.iushrn(shift);
  }

  return naf;
}
utils.getNAF = getNAF;

// Represent k1, k2 in a Joint Sparse Form
function getJSF(k1, k2) {
  var jsf = [
    [],
    []
  ];

  k1 = k1.clone();
  k2 = k2.clone();
  var d1 = 0;
  var d2 = 0;
  while (k1.cmpn(-d1) > 0 || k2.cmpn(-d2) > 0) {

    // First phase
    var m14 = (k1.andln(3) + d1) & 3;
    var m24 = (k2.andln(3) + d2) & 3;
    if (m14 === 3)
      m14 = -1;
    if (m24 === 3)
      m24 = -1;
    var u1;
    if ((m14 & 1) === 0) {
      u1 = 0;
    } else {
      var m8 = (k1.andln(7) + d1) & 7;
      if ((m8 === 3 || m8 === 5) && m24 === 2)
        u1 = -m14;
      else
        u1 = m14;
    }
    jsf[0].push(u1);

    var u2;
    if ((m24 & 1) === 0) {
      u2 = 0;
    } else {
      var m8 = (k2.andln(7) + d2) & 7;
      if ((m8 === 3 || m8 === 5) && m14 === 2)
        u2 = -m24;
      else
        u2 = m24;
    }
    jsf[1].push(u2);

    // Second phase
    if (2 * d1 === u1 + 1)
      d1 = 1 - d1;
    if (2 * d2 === u2 + 1)
      d2 = 1 - d2;
    k1.iushrn(1);
    k2.iushrn(1);
  }

  return jsf;
}
utils.getJSF = getJSF;

function cachedProperty(obj, name, computer) {
  var key = '_' + name;
  obj.prototype[name] = function cachedProperty() {
    return this[key] !== undefined ? this[key] :
           this[key] = computer.call(this);
  };
}
utils.cachedProperty = cachedProperty;

function parseBytes(bytes) {
  return typeof bytes === 'string' ? utils.toArray(bytes, 'hex') :
                                     bytes;
}
utils.parseBytes = parseBytes;

function intFromLE(bytes) {
  return new BN(bytes, 'hex', 'le');
}
utils.intFromLE = intFromLE;



/***/ }),

/***/ "./node_modules/elliptic/package.json":
/*!********************************************!*\
  !*** ./node_modules/elliptic/package.json ***!
  \********************************************/
/*! exports provided: _from, _id, _inBundle, _integrity, _location, _phantomChildren, _requested, _requiredBy, _resolved, _shasum, _spec, _where, author, bugs, bundleDependencies, dependencies, deprecated, description, devDependencies, files, homepage, keywords, license, main, name, repository, scripts, version, default */
/***/ (function(module) {

module.exports = {"_from":"elliptic@^6.0.0","_id":"elliptic@6.4.0","_inBundle":false,"_integrity":"sha1-ysmvh2LIWDYYcAPI3+GT5eLq5d8=","_location":"/elliptic","_phantomChildren":{},"_requested":{"type":"range","registry":true,"raw":"elliptic@^6.0.0","name":"elliptic","escapedName":"elliptic","rawSpec":"^6.0.0","saveSpec":null,"fetchSpec":"^6.0.0"},"_requiredBy":["/browserify-sign","/create-ecdh"],"_resolved":"https://registry.npmjs.org/elliptic/-/elliptic-6.4.0.tgz","_shasum":"cac9af8762c85836187003c8dfe193e5e2eae5df","_spec":"elliptic@^6.0.0","_where":"W:\\projects\\ScannerBase\\node_modules\\browserify-sign","author":{"name":"Fedor Indutny","email":"fedor@indutny.com"},"bugs":{"url":"https://github.com/indutny/elliptic/issues"},"bundleDependencies":false,"dependencies":{"bn.js":"^4.4.0","brorand":"^1.0.1","hash.js":"^1.0.0","hmac-drbg":"^1.0.0","inherits":"^2.0.1","minimalistic-assert":"^1.0.0","minimalistic-crypto-utils":"^1.0.0"},"deprecated":false,"description":"EC cryptography","devDependencies":{"brfs":"^1.4.3","coveralls":"^2.11.3","grunt":"^0.4.5","grunt-browserify":"^5.0.0","grunt-cli":"^1.2.0","grunt-contrib-connect":"^1.0.0","grunt-contrib-copy":"^1.0.0","grunt-contrib-uglify":"^1.0.1","grunt-mocha-istanbul":"^3.0.1","grunt-saucelabs":"^8.6.2","istanbul":"^0.4.2","jscs":"^2.9.0","jshint":"^2.6.0","mocha":"^2.1.0"},"files":["lib"],"homepage":"https://github.com/indutny/elliptic","keywords":["EC","Elliptic","curve","Cryptography"],"license":"MIT","main":"lib/elliptic.js","name":"elliptic","repository":{"type":"git","url":"git+ssh://git@github.com/indutny/elliptic.git"},"scripts":{"jscs":"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js","jshint":"jscs benchmarks/*.js lib/*.js lib/**/*.js lib/**/**/*.js test/index.js","lint":"npm run jscs && npm run jshint","test":"npm run lint && npm run unit","unit":"istanbul test _mocha --reporter=spec test/index.js","version":"grunt dist && git add dist/"},"version":"6.4.0"};

/***/ }),

/***/ "./node_modules/events/events.js":
/*!***************************************!*\
  !*** ./node_modules/events/events.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

function EventEmitter() {
  this._events = this._events || {};
  this._maxListeners = this._maxListeners || undefined;
}
module.exports = EventEmitter;

// Backwards-compat with node 0.10.x
EventEmitter.EventEmitter = EventEmitter;

EventEmitter.prototype._events = undefined;
EventEmitter.prototype._maxListeners = undefined;

// By default EventEmitters will print a warning if more than 10 listeners are
// added to it. This is a useful default which helps finding memory leaks.
EventEmitter.defaultMaxListeners = 10;

// Obviously not all Emitters should be limited to 10. This function allows
// that to be increased. Set to zero for unlimited.
EventEmitter.prototype.setMaxListeners = function(n) {
  if (!isNumber(n) || n < 0 || isNaN(n))
    throw TypeError('n must be a positive number');
  this._maxListeners = n;
  return this;
};

EventEmitter.prototype.emit = function(type) {
  var er, handler, len, args, i, listeners;

  if (!this._events)
    this._events = {};

  // If there is no 'error' event listener then throw.
  if (type === 'error') {
    if (!this._events.error ||
        (isObject(this._events.error) && !this._events.error.length)) {
      er = arguments[1];
      if (er instanceof Error) {
        throw er; // Unhandled 'error' event
      } else {
        // At least give some kind of context to the user
        var err = new Error('Uncaught, unspecified "error" event. (' + er + ')');
        err.context = er;
        throw err;
      }
    }
  }

  handler = this._events[type];

  if (isUndefined(handler))
    return false;

  if (isFunction(handler)) {
    switch (arguments.length) {
      // fast cases
      case 1:
        handler.call(this);
        break;
      case 2:
        handler.call(this, arguments[1]);
        break;
      case 3:
        handler.call(this, arguments[1], arguments[2]);
        break;
      // slower
      default:
        args = Array.prototype.slice.call(arguments, 1);
        handler.apply(this, args);
    }
  } else if (isObject(handler)) {
    args = Array.prototype.slice.call(arguments, 1);
    listeners = handler.slice();
    len = listeners.length;
    for (i = 0; i < len; i++)
      listeners[i].apply(this, args);
  }

  return true;
};

EventEmitter.prototype.addListener = function(type, listener) {
  var m;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events)
    this._events = {};

  // To avoid recursion in the case that type === "newListener"! Before
  // adding it to the listeners, first emit "newListener".
  if (this._events.newListener)
    this.emit('newListener', type,
              isFunction(listener.listener) ?
              listener.listener : listener);

  if (!this._events[type])
    // Optimize the case of one listener. Don't need the extra array object.
    this._events[type] = listener;
  else if (isObject(this._events[type]))
    // If we've already got an array, just append.
    this._events[type].push(listener);
  else
    // Adding the second element, need to change to array.
    this._events[type] = [this._events[type], listener];

  // Check for listener leak
  if (isObject(this._events[type]) && !this._events[type].warned) {
    if (!isUndefined(this._maxListeners)) {
      m = this._maxListeners;
    } else {
      m = EventEmitter.defaultMaxListeners;
    }

    if (m && m > 0 && this._events[type].length > m) {
      this._events[type].warned = true;
      console.error('(node) warning: possible EventEmitter memory ' +
                    'leak detected. %d listeners added. ' +
                    'Use emitter.setMaxListeners() to increase limit.',
                    this._events[type].length);
      if (typeof console.trace === 'function') {
        // not supported in IE 10
        console.trace();
      }
    }
  }

  return this;
};

EventEmitter.prototype.on = EventEmitter.prototype.addListener;

EventEmitter.prototype.once = function(type, listener) {
  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  var fired = false;

  function g() {
    this.removeListener(type, g);

    if (!fired) {
      fired = true;
      listener.apply(this, arguments);
    }
  }

  g.listener = listener;
  this.on(type, g);

  return this;
};

// emits a 'removeListener' event iff the listener was removed
EventEmitter.prototype.removeListener = function(type, listener) {
  var list, position, length, i;

  if (!isFunction(listener))
    throw TypeError('listener must be a function');

  if (!this._events || !this._events[type])
    return this;

  list = this._events[type];
  length = list.length;
  position = -1;

  if (list === listener ||
      (isFunction(list.listener) && list.listener === listener)) {
    delete this._events[type];
    if (this._events.removeListener)
      this.emit('removeListener', type, listener);

  } else if (isObject(list)) {
    for (i = length; i-- > 0;) {
      if (list[i] === listener ||
          (list[i].listener && list[i].listener === listener)) {
        position = i;
        break;
      }
    }

    if (position < 0)
      return this;

    if (list.length === 1) {
      list.length = 0;
      delete this._events[type];
    } else {
      list.splice(position, 1);
    }

    if (this._events.removeListener)
      this.emit('removeListener', type, listener);
  }

  return this;
};

EventEmitter.prototype.removeAllListeners = function(type) {
  var key, listeners;

  if (!this._events)
    return this;

  // not listening for removeListener, no need to emit
  if (!this._events.removeListener) {
    if (arguments.length === 0)
      this._events = {};
    else if (this._events[type])
      delete this._events[type];
    return this;
  }

  // emit removeListener for all listeners on all events
  if (arguments.length === 0) {
    for (key in this._events) {
      if (key === 'removeListener') continue;
      this.removeAllListeners(key);
    }
    this.removeAllListeners('removeListener');
    this._events = {};
    return this;
  }

  listeners = this._events[type];

  if (isFunction(listeners)) {
    this.removeListener(type, listeners);
  } else if (listeners) {
    // LIFO order
    while (listeners.length)
      this.removeListener(type, listeners[listeners.length - 1]);
  }
  delete this._events[type];

  return this;
};

EventEmitter.prototype.listeners = function(type) {
  var ret;
  if (!this._events || !this._events[type])
    ret = [];
  else if (isFunction(this._events[type]))
    ret = [this._events[type]];
  else
    ret = this._events[type].slice();
  return ret;
};

EventEmitter.prototype.listenerCount = function(type) {
  if (this._events) {
    var evlistener = this._events[type];

    if (isFunction(evlistener))
      return 1;
    else if (evlistener)
      return evlistener.length;
  }
  return 0;
};

EventEmitter.listenerCount = function(emitter, type) {
  return emitter.listenerCount(type);
};

function isFunction(arg) {
  return typeof arg === 'function';
}

function isNumber(arg) {
  return typeof arg === 'number';
}

function isObject(arg) {
  return typeof arg === 'object' && arg !== null;
}

function isUndefined(arg) {
  return arg === void 0;
}


/***/ }),

/***/ "./node_modules/evp_bytestokey/index.js":
/*!**********************************************!*\
  !*** ./node_modules/evp_bytestokey/index.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var MD5 = __webpack_require__(/*! md5.js */ "./node_modules/md5.js/index.js")

/* eslint-disable camelcase */
function EVP_BytesToKey (password, salt, keyBits, ivLen) {
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, 'binary')
  if (salt) {
    if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, 'binary')
    if (salt.length !== 8) throw new RangeError('salt should be Buffer with 8 byte length')
  }

  var keyLen = keyBits / 8
  var key = Buffer.alloc(keyLen)
  var iv = Buffer.alloc(ivLen || 0)
  var tmp = Buffer.alloc(0)

  while (keyLen > 0 || ivLen > 0) {
    var hash = new MD5()
    hash.update(tmp)
    hash.update(password)
    if (salt) hash.update(salt)
    tmp = hash.digest()

    var used = 0

    if (keyLen > 0) {
      var keyStart = key.length - keyLen
      used = Math.min(keyLen, tmp.length)
      tmp.copy(key, keyStart, 0, used)
      keyLen -= used
    }

    if (used < tmp.length && ivLen > 0) {
      var ivStart = iv.length - ivLen
      var length = Math.min(ivLen, tmp.length - used)
      tmp.copy(iv, ivStart, used, used + length)
      ivLen -= length
    }
  }

  tmp.fill(0)
  return { key: key, iv: iv }
}

module.exports = EVP_BytesToKey


/***/ }),

/***/ "./node_modules/hash-base/index.js":
/*!*****************************************!*\
  !*** ./node_modules/hash-base/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var Transform = __webpack_require__(/*! stream */ "./node_modules/stream-browserify/index.js").Transform
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")

function throwIfNotStringOrBuffer (val, prefix) {
  if (!Buffer.isBuffer(val) && typeof val !== 'string') {
    throw new TypeError(prefix + ' must be a string or a buffer')
  }
}

function HashBase (blockSize) {
  Transform.call(this)

  this._block = Buffer.allocUnsafe(blockSize)
  this._blockSize = blockSize
  this._blockOffset = 0
  this._length = [0, 0, 0, 0]

  this._finalized = false
}

inherits(HashBase, Transform)

HashBase.prototype._transform = function (chunk, encoding, callback) {
  var error = null
  try {
    this.update(chunk, encoding)
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype._flush = function (callback) {
  var error = null
  try {
    this.push(this.digest())
  } catch (err) {
    error = err
  }

  callback(error)
}

HashBase.prototype.update = function (data, encoding) {
  throwIfNotStringOrBuffer(data, 'Data')
  if (this._finalized) throw new Error('Digest already called')
  if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)

  // consume data
  var block = this._block
  var offset = 0
  while (this._blockOffset + data.length - offset >= this._blockSize) {
    for (var i = this._blockOffset; i < this._blockSize;) block[i++] = data[offset++]
    this._update()
    this._blockOffset = 0
  }
  while (offset < data.length) block[this._blockOffset++] = data[offset++]

  // update length
  for (var j = 0, carry = data.length * 8; carry > 0; ++j) {
    this._length[j] += carry
    carry = (this._length[j] / 0x0100000000) | 0
    if (carry > 0) this._length[j] -= 0x0100000000 * carry
  }

  return this
}

HashBase.prototype._update = function () {
  throw new Error('_update is not implemented')
}

HashBase.prototype.digest = function (encoding) {
  if (this._finalized) throw new Error('Digest already called')
  this._finalized = true

  var digest = this._digest()
  if (encoding !== undefined) digest = digest.toString(encoding)

  // reset state
  this._block.fill(0)
  this._blockOffset = 0
  for (var i = 0; i < 4; ++i) this._length[i] = 0

  return digest
}

HashBase.prototype._digest = function () {
  throw new Error('_digest is not implemented')
}

module.exports = HashBase


/***/ }),

/***/ "./node_modules/hash.js/lib/hash.js":
/*!******************************************!*\
  !*** ./node_modules/hash.js/lib/hash.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var hash = exports;

hash.utils = __webpack_require__(/*! ./hash/utils */ "./node_modules/hash.js/lib/hash/utils.js");
hash.common = __webpack_require__(/*! ./hash/common */ "./node_modules/hash.js/lib/hash/common.js");
hash.sha = __webpack_require__(/*! ./hash/sha */ "./node_modules/hash.js/lib/hash/sha.js");
hash.ripemd = __webpack_require__(/*! ./hash/ripemd */ "./node_modules/hash.js/lib/hash/ripemd.js");
hash.hmac = __webpack_require__(/*! ./hash/hmac */ "./node_modules/hash.js/lib/hash/hmac.js");

// Proxy hash functions to the main object
hash.sha1 = hash.sha.sha1;
hash.sha256 = hash.sha.sha256;
hash.sha224 = hash.sha.sha224;
hash.sha384 = hash.sha.sha384;
hash.sha512 = hash.sha.sha512;
hash.ripemd160 = hash.ripemd.ripemd160;


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/common.js":
/*!*************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/common.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/hash.js/lib/hash/utils.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

function BlockHash() {
  this.pending = null;
  this.pendingTotal = 0;
  this.blockSize = this.constructor.blockSize;
  this.outSize = this.constructor.outSize;
  this.hmacStrength = this.constructor.hmacStrength;
  this.padLength = this.constructor.padLength / 8;
  this.endian = 'big';

  this._delta8 = this.blockSize / 8;
  this._delta32 = this.blockSize / 32;
}
exports.BlockHash = BlockHash;

BlockHash.prototype.update = function update(msg, enc) {
  // Convert message to array, pad it, and join into 32bit blocks
  msg = utils.toArray(msg, enc);
  if (!this.pending)
    this.pending = msg;
  else
    this.pending = this.pending.concat(msg);
  this.pendingTotal += msg.length;

  // Enough data, try updating
  if (this.pending.length >= this._delta8) {
    msg = this.pending;

    // Process pending data in blocks
    var r = msg.length % this._delta8;
    this.pending = msg.slice(msg.length - r, msg.length);
    if (this.pending.length === 0)
      this.pending = null;

    msg = utils.join32(msg, 0, msg.length - r, this.endian);
    for (var i = 0; i < msg.length; i += this._delta32)
      this._update(msg, i, i + this._delta32);
  }

  return this;
};

BlockHash.prototype.digest = function digest(enc) {
  this.update(this._pad());
  assert(this.pending === null);

  return this._digest(enc);
};

BlockHash.prototype._pad = function pad() {
  var len = this.pendingTotal;
  var bytes = this._delta8;
  var k = bytes - ((len + this.padLength) % bytes);
  var res = new Array(k + this.padLength);
  res[0] = 0x80;
  for (var i = 1; i < k; i++)
    res[i] = 0;

  // Append length
  len <<= 3;
  if (this.endian === 'big') {
    for (var t = 8; t < this.padLength; t++)
      res[i++] = 0;

    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = len & 0xff;
  } else {
    res[i++] = len & 0xff;
    res[i++] = (len >>> 8) & 0xff;
    res[i++] = (len >>> 16) & 0xff;
    res[i++] = (len >>> 24) & 0xff;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;
    res[i++] = 0;

    for (t = 8; t < this.padLength; t++)
      res[i++] = 0;
  }

  return res;
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/hmac.js":
/*!***********************************************!*\
  !*** ./node_modules/hash.js/lib/hash/hmac.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/hash.js/lib/hash/utils.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

function Hmac(hash, key, enc) {
  if (!(this instanceof Hmac))
    return new Hmac(hash, key, enc);
  this.Hash = hash;
  this.blockSize = hash.blockSize / 8;
  this.outSize = hash.outSize / 8;
  this.inner = null;
  this.outer = null;

  this._init(utils.toArray(key, enc));
}
module.exports = Hmac;

Hmac.prototype._init = function init(key) {
  // Shorten key, if needed
  if (key.length > this.blockSize)
    key = new this.Hash().update(key).digest();
  assert(key.length <= this.blockSize);

  // Add padding to key
  for (var i = key.length; i < this.blockSize; i++)
    key.push(0);

  for (i = 0; i < key.length; i++)
    key[i] ^= 0x36;
  this.inner = new this.Hash().update(key);

  // 0x36 ^ 0x5c = 0x6a
  for (i = 0; i < key.length; i++)
    key[i] ^= 0x6a;
  this.outer = new this.Hash().update(key);
};

Hmac.prototype.update = function update(msg, enc) {
  this.inner.update(msg, enc);
  return this;
};

Hmac.prototype.digest = function digest(enc) {
  this.outer.update(this.inner.digest());
  return this.outer.digest(enc);
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/ripemd.js":
/*!*************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/ripemd.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ./utils */ "./node_modules/hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ./common */ "./node_modules/hash.js/lib/hash/common.js");

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_3 = utils.sum32_3;
var sum32_4 = utils.sum32_4;
var BlockHash = common.BlockHash;

function RIPEMD160() {
  if (!(this instanceof RIPEMD160))
    return new RIPEMD160();

  BlockHash.call(this);

  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];
  this.endian = 'little';
}
utils.inherits(RIPEMD160, BlockHash);
exports.ripemd160 = RIPEMD160;

RIPEMD160.blockSize = 512;
RIPEMD160.outSize = 160;
RIPEMD160.hmacStrength = 192;
RIPEMD160.padLength = 64;

RIPEMD160.prototype._update = function update(msg, start) {
  var A = this.h[0];
  var B = this.h[1];
  var C = this.h[2];
  var D = this.h[3];
  var E = this.h[4];
  var Ah = A;
  var Bh = B;
  var Ch = C;
  var Dh = D;
  var Eh = E;
  for (var j = 0; j < 80; j++) {
    var T = sum32(
      rotl32(
        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),
        s[j]),
      E);
    A = E;
    E = D;
    D = rotl32(C, 10);
    C = B;
    B = T;
    T = sum32(
      rotl32(
        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),
        sh[j]),
      Eh);
    Ah = Eh;
    Eh = Dh;
    Dh = rotl32(Ch, 10);
    Ch = Bh;
    Bh = T;
  }
  T = sum32_3(this.h[1], C, Dh);
  this.h[1] = sum32_3(this.h[2], D, Eh);
  this.h[2] = sum32_3(this.h[3], E, Ah);
  this.h[3] = sum32_3(this.h[4], A, Bh);
  this.h[4] = sum32_3(this.h[0], B, Ch);
  this.h[0] = T;
};

RIPEMD160.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'little');
  else
    return utils.split32(this.h, 'little');
};

function f(j, x, y, z) {
  if (j <= 15)
    return x ^ y ^ z;
  else if (j <= 31)
    return (x & y) | ((~x) & z);
  else if (j <= 47)
    return (x | (~y)) ^ z;
  else if (j <= 63)
    return (x & z) | (y & (~z));
  else
    return x ^ (y | (~z));
}

function K(j) {
  if (j <= 15)
    return 0x00000000;
  else if (j <= 31)
    return 0x5a827999;
  else if (j <= 47)
    return 0x6ed9eba1;
  else if (j <= 63)
    return 0x8f1bbcdc;
  else
    return 0xa953fd4e;
}

function Kh(j) {
  if (j <= 15)
    return 0x50a28be6;
  else if (j <= 31)
    return 0x5c4dd124;
  else if (j <= 47)
    return 0x6d703ef3;
  else if (j <= 63)
    return 0x7a6d76e9;
  else
    return 0x00000000;
}

var r = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
];

var rh = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
];

var s = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
];

var sh = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
];


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha.js":
/*!**********************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha.js ***!
  \**********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


exports.sha1 = __webpack_require__(/*! ./sha/1 */ "./node_modules/hash.js/lib/hash/sha/1.js");
exports.sha224 = __webpack_require__(/*! ./sha/224 */ "./node_modules/hash.js/lib/hash/sha/224.js");
exports.sha256 = __webpack_require__(/*! ./sha/256 */ "./node_modules/hash.js/lib/hash/sha/256.js");
exports.sha384 = __webpack_require__(/*! ./sha/384 */ "./node_modules/hash.js/lib/hash/sha/384.js");
exports.sha512 = __webpack_require__(/*! ./sha/512 */ "./node_modules/hash.js/lib/hash/sha/512.js");


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/1.js":
/*!************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/1.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ../common */ "./node_modules/hash.js/lib/hash/common.js");
var shaCommon = __webpack_require__(/*! ./common */ "./node_modules/hash.js/lib/hash/sha/common.js");

var rotl32 = utils.rotl32;
var sum32 = utils.sum32;
var sum32_5 = utils.sum32_5;
var ft_1 = shaCommon.ft_1;
var BlockHash = common.BlockHash;

var sha1_K = [
  0x5A827999, 0x6ED9EBA1,
  0x8F1BBCDC, 0xCA62C1D6
];

function SHA1() {
  if (!(this instanceof SHA1))
    return new SHA1();

  BlockHash.call(this);
  this.h = [
    0x67452301, 0xefcdab89, 0x98badcfe,
    0x10325476, 0xc3d2e1f0 ];
  this.W = new Array(80);
}

utils.inherits(SHA1, BlockHash);
module.exports = SHA1;

SHA1.blockSize = 512;
SHA1.outSize = 160;
SHA1.hmacStrength = 80;
SHA1.padLength = 64;

SHA1.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];

  for(; i < W.length; i++)
    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];

  for (i = 0; i < W.length; i++) {
    var s = ~~(i / 20);
    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);
    e = d;
    d = c;
    c = rotl32(b, 30);
    b = a;
    a = t;
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
};

SHA1.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/224.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/224.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var SHA256 = __webpack_require__(/*! ./256 */ "./node_modules/hash.js/lib/hash/sha/256.js");

function SHA224() {
  if (!(this instanceof SHA224))
    return new SHA224();

  SHA256.call(this);
  this.h = [
    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,
    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];
}
utils.inherits(SHA224, SHA256);
module.exports = SHA224;

SHA224.blockSize = 512;
SHA224.outSize = 224;
SHA224.hmacStrength = 192;
SHA224.padLength = 64;

SHA224.prototype._digest = function digest(enc) {
  // Just truncate output
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 7), 'big');
  else
    return utils.split32(this.h.slice(0, 7), 'big');
};



/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/256.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/256.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ../common */ "./node_modules/hash.js/lib/hash/common.js");
var shaCommon = __webpack_require__(/*! ./common */ "./node_modules/hash.js/lib/hash/sha/common.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

var sum32 = utils.sum32;
var sum32_4 = utils.sum32_4;
var sum32_5 = utils.sum32_5;
var ch32 = shaCommon.ch32;
var maj32 = shaCommon.maj32;
var s0_256 = shaCommon.s0_256;
var s1_256 = shaCommon.s1_256;
var g0_256 = shaCommon.g0_256;
var g1_256 = shaCommon.g1_256;

var BlockHash = common.BlockHash;

var sha256_K = [
  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,
  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,
  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,
  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,
  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,
  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,
  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,
  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,
  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,
  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,
  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,
  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,
  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,
  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,
  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,
  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2
];

function SHA256() {
  if (!(this instanceof SHA256))
    return new SHA256();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,
    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19
  ];
  this.k = sha256_K;
  this.W = new Array(64);
}
utils.inherits(SHA256, BlockHash);
module.exports = SHA256;

SHA256.blockSize = 512;
SHA256.outSize = 256;
SHA256.hmacStrength = 192;
SHA256.padLength = 64;

SHA256.prototype._update = function _update(msg, start) {
  var W = this.W;

  for (var i = 0; i < 16; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i++)
    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);

  var a = this.h[0];
  var b = this.h[1];
  var c = this.h[2];
  var d = this.h[3];
  var e = this.h[4];
  var f = this.h[5];
  var g = this.h[6];
  var h = this.h[7];

  assert(this.k.length === W.length);
  for (i = 0; i < W.length; i++) {
    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);
    var T2 = sum32(s0_256(a), maj32(a, b, c));
    h = g;
    g = f;
    f = e;
    e = sum32(d, T1);
    d = c;
    c = b;
    b = a;
    a = sum32(T1, T2);
  }

  this.h[0] = sum32(this.h[0], a);
  this.h[1] = sum32(this.h[1], b);
  this.h[2] = sum32(this.h[2], c);
  this.h[3] = sum32(this.h[3], d);
  this.h[4] = sum32(this.h[4], e);
  this.h[5] = sum32(this.h[5], f);
  this.h[6] = sum32(this.h[6], g);
  this.h[7] = sum32(this.h[7], h);
};

SHA256.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/384.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/384.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");

var SHA512 = __webpack_require__(/*! ./512 */ "./node_modules/hash.js/lib/hash/sha/512.js");

function SHA384() {
  if (!(this instanceof SHA384))
    return new SHA384();

  SHA512.call(this);
  this.h = [
    0xcbbb9d5d, 0xc1059ed8,
    0x629a292a, 0x367cd507,
    0x9159015a, 0x3070dd17,
    0x152fecd8, 0xf70e5939,
    0x67332667, 0xffc00b31,
    0x8eb44a87, 0x68581511,
    0xdb0c2e0d, 0x64f98fa7,
    0x47b5481d, 0xbefa4fa4 ];
}
utils.inherits(SHA384, SHA512);
module.exports = SHA384;

SHA384.blockSize = 1024;
SHA384.outSize = 384;
SHA384.hmacStrength = 192;
SHA384.padLength = 128;

SHA384.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h.slice(0, 12), 'big');
  else
    return utils.split32(this.h.slice(0, 12), 'big');
};


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/512.js":
/*!**************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/512.js ***!
  \**************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var common = __webpack_require__(/*! ../common */ "./node_modules/hash.js/lib/hash/common.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

var rotr64_hi = utils.rotr64_hi;
var rotr64_lo = utils.rotr64_lo;
var shr64_hi = utils.shr64_hi;
var shr64_lo = utils.shr64_lo;
var sum64 = utils.sum64;
var sum64_hi = utils.sum64_hi;
var sum64_lo = utils.sum64_lo;
var sum64_4_hi = utils.sum64_4_hi;
var sum64_4_lo = utils.sum64_4_lo;
var sum64_5_hi = utils.sum64_5_hi;
var sum64_5_lo = utils.sum64_5_lo;

var BlockHash = common.BlockHash;

var sha512_K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
];

function SHA512() {
  if (!(this instanceof SHA512))
    return new SHA512();

  BlockHash.call(this);
  this.h = [
    0x6a09e667, 0xf3bcc908,
    0xbb67ae85, 0x84caa73b,
    0x3c6ef372, 0xfe94f82b,
    0xa54ff53a, 0x5f1d36f1,
    0x510e527f, 0xade682d1,
    0x9b05688c, 0x2b3e6c1f,
    0x1f83d9ab, 0xfb41bd6b,
    0x5be0cd19, 0x137e2179 ];
  this.k = sha512_K;
  this.W = new Array(160);
}
utils.inherits(SHA512, BlockHash);
module.exports = SHA512;

SHA512.blockSize = 1024;
SHA512.outSize = 512;
SHA512.hmacStrength = 192;
SHA512.padLength = 128;

SHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {
  var W = this.W;

  // 32 x 32bit words
  for (var i = 0; i < 32; i++)
    W[i] = msg[start + i];
  for (; i < W.length; i += 2) {
    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2
    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);
    var c1_hi = W[i - 14];  // i - 7
    var c1_lo = W[i - 13];
    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15
    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);
    var c3_hi = W[i - 32];  // i - 16
    var c3_lo = W[i - 31];

    W[i] = sum64_4_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
    W[i + 1] = sum64_4_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo);
  }
};

SHA512.prototype._update = function _update(msg, start) {
  this._prepareBlock(msg, start);

  var W = this.W;

  var ah = this.h[0];
  var al = this.h[1];
  var bh = this.h[2];
  var bl = this.h[3];
  var ch = this.h[4];
  var cl = this.h[5];
  var dh = this.h[6];
  var dl = this.h[7];
  var eh = this.h[8];
  var el = this.h[9];
  var fh = this.h[10];
  var fl = this.h[11];
  var gh = this.h[12];
  var gl = this.h[13];
  var hh = this.h[14];
  var hl = this.h[15];

  assert(this.k.length === W.length);
  for (var i = 0; i < W.length; i += 2) {
    var c0_hi = hh;
    var c0_lo = hl;
    var c1_hi = s1_512_hi(eh, el);
    var c1_lo = s1_512_lo(eh, el);
    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);
    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);
    var c3_hi = this.k[i];
    var c3_lo = this.k[i + 1];
    var c4_hi = W[i];
    var c4_lo = W[i + 1];

    var T1_hi = sum64_5_hi(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);
    var T1_lo = sum64_5_lo(
      c0_hi, c0_lo,
      c1_hi, c1_lo,
      c2_hi, c2_lo,
      c3_hi, c3_lo,
      c4_hi, c4_lo);

    c0_hi = s0_512_hi(ah, al);
    c0_lo = s0_512_lo(ah, al);
    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);
    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);

    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);
    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);

    hh = gh;
    hl = gl;

    gh = fh;
    gl = fl;

    fh = eh;
    fl = el;

    eh = sum64_hi(dh, dl, T1_hi, T1_lo);
    el = sum64_lo(dl, dl, T1_hi, T1_lo);

    dh = ch;
    dl = cl;

    ch = bh;
    cl = bl;

    bh = ah;
    bl = al;

    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);
    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);
  }

  sum64(this.h, 0, ah, al);
  sum64(this.h, 2, bh, bl);
  sum64(this.h, 4, ch, cl);
  sum64(this.h, 6, dh, dl);
  sum64(this.h, 8, eh, el);
  sum64(this.h, 10, fh, fl);
  sum64(this.h, 12, gh, gl);
  sum64(this.h, 14, hh, hl);
};

SHA512.prototype._digest = function digest(enc) {
  if (enc === 'hex')
    return utils.toHex32(this.h, 'big');
  else
    return utils.split32(this.h, 'big');
};

function ch64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ ((~xh) & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function ch64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ ((~xl) & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_hi(xh, xl, yh, yl, zh) {
  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function maj64_lo(xh, xl, yh, yl, zh, zl) {
  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 28);
  var c1_hi = rotr64_hi(xl, xh, 2);  // 34
  var c2_hi = rotr64_hi(xl, xh, 7);  // 39

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 28);
  var c1_lo = rotr64_lo(xl, xh, 2);  // 34
  var c2_lo = rotr64_lo(xl, xh, 7);  // 39

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 14);
  var c1_hi = rotr64_hi(xh, xl, 18);
  var c2_hi = rotr64_hi(xl, xh, 9);  // 41

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function s1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 14);
  var c1_lo = rotr64_lo(xh, xl, 18);
  var c2_lo = rotr64_lo(xl, xh, 9);  // 41

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 1);
  var c1_hi = rotr64_hi(xh, xl, 8);
  var c2_hi = shr64_hi(xh, xl, 7);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g0_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 1);
  var c1_lo = rotr64_lo(xh, xl, 8);
  var c2_lo = shr64_lo(xh, xl, 7);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_hi(xh, xl) {
  var c0_hi = rotr64_hi(xh, xl, 19);
  var c1_hi = rotr64_hi(xl, xh, 29);  // 61
  var c2_hi = shr64_hi(xh, xl, 6);

  var r = c0_hi ^ c1_hi ^ c2_hi;
  if (r < 0)
    r += 0x100000000;
  return r;
}

function g1_512_lo(xh, xl) {
  var c0_lo = rotr64_lo(xh, xl, 19);
  var c1_lo = rotr64_lo(xl, xh, 29);  // 61
  var c2_lo = shr64_lo(xh, xl, 6);

  var r = c0_lo ^ c1_lo ^ c2_lo;
  if (r < 0)
    r += 0x100000000;
  return r;
}


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/sha/common.js":
/*!*****************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/sha/common.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = __webpack_require__(/*! ../utils */ "./node_modules/hash.js/lib/hash/utils.js");
var rotr32 = utils.rotr32;

function ft_1(s, x, y, z) {
  if (s === 0)
    return ch32(x, y, z);
  if (s === 1 || s === 3)
    return p32(x, y, z);
  if (s === 2)
    return maj32(x, y, z);
}
exports.ft_1 = ft_1;

function ch32(x, y, z) {
  return (x & y) ^ ((~x) & z);
}
exports.ch32 = ch32;

function maj32(x, y, z) {
  return (x & y) ^ (x & z) ^ (y & z);
}
exports.maj32 = maj32;

function p32(x, y, z) {
  return x ^ y ^ z;
}
exports.p32 = p32;

function s0_256(x) {
  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);
}
exports.s0_256 = s0_256;

function s1_256(x) {
  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);
}
exports.s1_256 = s1_256;

function g0_256(x) {
  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);
}
exports.g0_256 = g0_256;

function g1_256(x) {
  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);
}
exports.g1_256 = g1_256;


/***/ }),

/***/ "./node_modules/hash.js/lib/hash/utils.js":
/*!************************************************!*\
  !*** ./node_modules/hash.js/lib/hash/utils.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

exports.inherits = inherits;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg === 'string') {
    if (!enc) {
      for (var i = 0; i < msg.length; i++) {
        var c = msg.charCodeAt(i);
        var hi = c >> 8;
        var lo = c & 0xff;
        if (hi)
          res.push(hi, lo);
        else
          res.push(lo);
      }
    } else if (enc === 'hex') {
      msg = msg.replace(/[^a-z0-9]+/ig, '');
      if (msg.length % 2 !== 0)
        msg = '0' + msg;
      for (i = 0; i < msg.length; i += 2)
        res.push(parseInt(msg[i] + msg[i + 1], 16));
    }
  } else {
    for (i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
  }
  return res;
}
exports.toArray = toArray;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
exports.toHex = toHex;

function htonl(w) {
  var res = (w >>> 24) |
            ((w >>> 8) & 0xff00) |
            ((w << 8) & 0xff0000) |
            ((w & 0xff) << 24);
  return res >>> 0;
}
exports.htonl = htonl;

function toHex32(msg, endian) {
  var res = '';
  for (var i = 0; i < msg.length; i++) {
    var w = msg[i];
    if (endian === 'little')
      w = htonl(w);
    res += zero8(w.toString(16));
  }
  return res;
}
exports.toHex32 = toHex32;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
exports.zero2 = zero2;

function zero8(word) {
  if (word.length === 7)
    return '0' + word;
  else if (word.length === 6)
    return '00' + word;
  else if (word.length === 5)
    return '000' + word;
  else if (word.length === 4)
    return '0000' + word;
  else if (word.length === 3)
    return '00000' + word;
  else if (word.length === 2)
    return '000000' + word;
  else if (word.length === 1)
    return '0000000' + word;
  else
    return word;
}
exports.zero8 = zero8;

function join32(msg, start, end, endian) {
  var len = end - start;
  assert(len % 4 === 0);
  var res = new Array(len / 4);
  for (var i = 0, k = start; i < res.length; i++, k += 4) {
    var w;
    if (endian === 'big')
      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];
    else
      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];
    res[i] = w >>> 0;
  }
  return res;
}
exports.join32 = join32;

function split32(msg, endian) {
  var res = new Array(msg.length * 4);
  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {
    var m = msg[i];
    if (endian === 'big') {
      res[k] = m >>> 24;
      res[k + 1] = (m >>> 16) & 0xff;
      res[k + 2] = (m >>> 8) & 0xff;
      res[k + 3] = m & 0xff;
    } else {
      res[k + 3] = m >>> 24;
      res[k + 2] = (m >>> 16) & 0xff;
      res[k + 1] = (m >>> 8) & 0xff;
      res[k] = m & 0xff;
    }
  }
  return res;
}
exports.split32 = split32;

function rotr32(w, b) {
  return (w >>> b) | (w << (32 - b));
}
exports.rotr32 = rotr32;

function rotl32(w, b) {
  return (w << b) | (w >>> (32 - b));
}
exports.rotl32 = rotl32;

function sum32(a, b) {
  return (a + b) >>> 0;
}
exports.sum32 = sum32;

function sum32_3(a, b, c) {
  return (a + b + c) >>> 0;
}
exports.sum32_3 = sum32_3;

function sum32_4(a, b, c, d) {
  return (a + b + c + d) >>> 0;
}
exports.sum32_4 = sum32_4;

function sum32_5(a, b, c, d, e) {
  return (a + b + c + d + e) >>> 0;
}
exports.sum32_5 = sum32_5;

function sum64(buf, pos, ah, al) {
  var bh = buf[pos];
  var bl = buf[pos + 1];

  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  buf[pos] = hi >>> 0;
  buf[pos + 1] = lo;
}
exports.sum64 = sum64;

function sum64_hi(ah, al, bh, bl) {
  var lo = (al + bl) >>> 0;
  var hi = (lo < al ? 1 : 0) + ah + bh;
  return hi >>> 0;
}
exports.sum64_hi = sum64_hi;

function sum64_lo(ah, al, bh, bl) {
  var lo = al + bl;
  return lo >>> 0;
}
exports.sum64_lo = sum64_lo;

function sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;

  var hi = ah + bh + ch + dh + carry;
  return hi >>> 0;
}
exports.sum64_4_hi = sum64_4_hi;

function sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {
  var lo = al + bl + cl + dl;
  return lo >>> 0;
}
exports.sum64_4_lo = sum64_4_lo;

function sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var carry = 0;
  var lo = al;
  lo = (lo + bl) >>> 0;
  carry += lo < al ? 1 : 0;
  lo = (lo + cl) >>> 0;
  carry += lo < cl ? 1 : 0;
  lo = (lo + dl) >>> 0;
  carry += lo < dl ? 1 : 0;
  lo = (lo + el) >>> 0;
  carry += lo < el ? 1 : 0;

  var hi = ah + bh + ch + dh + eh + carry;
  return hi >>> 0;
}
exports.sum64_5_hi = sum64_5_hi;

function sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {
  var lo = al + bl + cl + dl + el;

  return lo >>> 0;
}
exports.sum64_5_lo = sum64_5_lo;

function rotr64_hi(ah, al, num) {
  var r = (al << (32 - num)) | (ah >>> num);
  return r >>> 0;
}
exports.rotr64_hi = rotr64_hi;

function rotr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.rotr64_lo = rotr64_lo;

function shr64_hi(ah, al, num) {
  return ah >>> num;
}
exports.shr64_hi = shr64_hi;

function shr64_lo(ah, al, num) {
  var r = (ah << (32 - num)) | (al >>> num);
  return r >>> 0;
}
exports.shr64_lo = shr64_lo;


/***/ }),

/***/ "./node_modules/hmac-drbg/lib/hmac-drbg.js":
/*!*************************************************!*\
  !*** ./node_modules/hmac-drbg/lib/hmac-drbg.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var hash = __webpack_require__(/*! hash.js */ "./node_modules/hash.js/lib/hash.js");
var utils = __webpack_require__(/*! minimalistic-crypto-utils */ "./node_modules/minimalistic-crypto-utils/lib/utils.js");
var assert = __webpack_require__(/*! minimalistic-assert */ "./node_modules/minimalistic-assert/index.js");

function HmacDRBG(options) {
  if (!(this instanceof HmacDRBG))
    return new HmacDRBG(options);
  this.hash = options.hash;
  this.predResist = !!options.predResist;

  this.outLen = this.hash.outSize;
  this.minEntropy = options.minEntropy || this.hash.hmacStrength;

  this._reseed = null;
  this.reseedInterval = null;
  this.K = null;
  this.V = null;

  var entropy = utils.toArray(options.entropy, options.entropyEnc || 'hex');
  var nonce = utils.toArray(options.nonce, options.nonceEnc || 'hex');
  var pers = utils.toArray(options.pers, options.persEnc || 'hex');
  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');
  this._init(entropy, nonce, pers);
}
module.exports = HmacDRBG;

HmacDRBG.prototype._init = function init(entropy, nonce, pers) {
  var seed = entropy.concat(nonce).concat(pers);

  this.K = new Array(this.outLen / 8);
  this.V = new Array(this.outLen / 8);
  for (var i = 0; i < this.V.length; i++) {
    this.K[i] = 0x00;
    this.V[i] = 0x01;
  }

  this._update(seed);
  this._reseed = 1;
  this.reseedInterval = 0x1000000000000;  // 2^48
};

HmacDRBG.prototype._hmac = function hmac() {
  return new hash.hmac(this.hash, this.K);
};

HmacDRBG.prototype._update = function update(seed) {
  var kmac = this._hmac()
                 .update(this.V)
                 .update([ 0x00 ]);
  if (seed)
    kmac = kmac.update(seed);
  this.K = kmac.digest();
  this.V = this._hmac().update(this.V).digest();
  if (!seed)
    return;

  this.K = this._hmac()
               .update(this.V)
               .update([ 0x01 ])
               .update(seed)
               .digest();
  this.V = this._hmac().update(this.V).digest();
};

HmacDRBG.prototype.reseed = function reseed(entropy, entropyEnc, add, addEnc) {
  // Optional entropy enc
  if (typeof entropyEnc !== 'string') {
    addEnc = add;
    add = entropyEnc;
    entropyEnc = null;
  }

  entropy = utils.toArray(entropy, entropyEnc);
  add = utils.toArray(add, addEnc);

  assert(entropy.length >= (this.minEntropy / 8),
         'Not enough entropy. Minimum is: ' + this.minEntropy + ' bits');

  this._update(entropy.concat(add || []));
  this._reseed = 1;
};

HmacDRBG.prototype.generate = function generate(len, enc, add, addEnc) {
  if (this._reseed > this.reseedInterval)
    throw new Error('Reseed is required');

  // Optional encoding
  if (typeof enc !== 'string') {
    addEnc = add;
    add = enc;
    enc = null;
  }

  // Optional additional data
  if (add) {
    add = utils.toArray(add, addEnc || 'hex');
    this._update(add);
  }

  var temp = [];
  while (temp.length < len) {
    this.V = this._hmac().update(this.V).digest();
    temp = temp.concat(this.V);
  }

  var res = temp.slice(0, len);
  this._update(add);
  this._reseed++;
  return utils.encode(res, enc);
};


/***/ }),

/***/ "./node_modules/ieee754/index.js":
/*!***************************************!*\
  !*** ./node_modules/ieee754/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

exports.read = function (buffer, offset, isLE, mLen, nBytes) {
  var e, m
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var nBits = -7
  var i = isLE ? (nBytes - 1) : 0
  var d = isLE ? -1 : 1
  var s = buffer[offset + i]

  i += d

  e = s & ((1 << (-nBits)) - 1)
  s >>= (-nBits)
  nBits += eLen
  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  m = e & ((1 << (-nBits)) - 1)
  e >>= (-nBits)
  nBits += mLen
  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}

  if (e === 0) {
    e = 1 - eBias
  } else if (e === eMax) {
    return m ? NaN : ((s ? -1 : 1) * Infinity)
  } else {
    m = m + Math.pow(2, mLen)
    e = e - eBias
  }
  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)
}

exports.write = function (buffer, value, offset, isLE, mLen, nBytes) {
  var e, m, c
  var eLen = (nBytes * 8) - mLen - 1
  var eMax = (1 << eLen) - 1
  var eBias = eMax >> 1
  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)
  var i = isLE ? 0 : (nBytes - 1)
  var d = isLE ? 1 : -1
  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0

  value = Math.abs(value)

  if (isNaN(value) || value === Infinity) {
    m = isNaN(value) ? 1 : 0
    e = eMax
  } else {
    e = Math.floor(Math.log(value) / Math.LN2)
    if (value * (c = Math.pow(2, -e)) < 1) {
      e--
      c *= 2
    }
    if (e + eBias >= 1) {
      value += rt / c
    } else {
      value += rt * Math.pow(2, 1 - eBias)
    }
    if (value * c >= 2) {
      e++
      c /= 2
    }

    if (e + eBias >= eMax) {
      m = 0
      e = eMax
    } else if (e + eBias >= 1) {
      m = ((value * c) - 1) * Math.pow(2, mLen)
      e = e + eBias
    } else {
      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)
      e = 0
    }
  }

  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}

  e = (e << mLen) | m
  eLen += mLen
  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}

  buffer[offset + i - d] |= s * 128
}


/***/ }),

/***/ "./node_modules/indexof/index.js":
/*!***************************************!*\
  !*** ./node_modules/indexof/index.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {


var indexOf = [].indexOf;

module.exports = function(arr, obj){
  if (indexOf) return arr.indexOf(obj);
  for (var i = 0; i < arr.length; ++i) {
    if (arr[i] === obj) return i;
  }
  return -1;
};

/***/ }),

/***/ "./node_modules/inherits/inherits_browser.js":
/*!***************************************************!*\
  !*** ./node_modules/inherits/inherits_browser.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

if (typeof Object.create === 'function') {
  // implementation from standard node.js 'util' module
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    ctor.prototype = Object.create(superCtor.prototype, {
      constructor: {
        value: ctor,
        enumerable: false,
        writable: true,
        configurable: true
      }
    });
  };
} else {
  // old school shim for old browsers
  module.exports = function inherits(ctor, superCtor) {
    ctor.super_ = superCtor
    var TempCtor = function () {}
    TempCtor.prototype = superCtor.prototype
    ctor.prototype = new TempCtor()
    ctor.prototype.constructor = ctor
  }
}


/***/ }),

/***/ "./node_modules/jquery/dist/jquery.js":
/*!********************************************!*\
  !*** ./node_modules/jquery/dist/jquery.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!
 * jQuery JavaScript Library v3.3.1
 * https://jquery.com/
 *
 * Includes Sizzle.js
 * https://sizzlejs.com/
 *
 * Copyright JS Foundation and other contributors
 * Released under the MIT license
 * https://jquery.org/license
 *
 * Date: 2018-01-20T17:24Z
 */
( function( global, factory ) {

	"use strict";

	if ( typeof module === "object" && typeof module.exports === "object" ) {

		// For CommonJS and CommonJS-like environments where a proper `window`
		// is present, execute the factory and get jQuery.
		// For environments that do not have a `window` with a `document`
		// (such as Node.js), expose a factory as module.exports.
		// This accentuates the need for the creation of a real `window`.
		// e.g. var jQuery = require("jquery")(window);
		// See ticket #14549 for more info.
		module.exports = global.document ?
			factory( global, true ) :
			function( w ) {
				if ( !w.document ) {
					throw new Error( "jQuery requires a window with a document" );
				}
				return factory( w );
			};
	} else {
		factory( global );
	}

// Pass this if window is not defined yet
} )( typeof window !== "undefined" ? window : this, function( window, noGlobal ) {

// Edge <= 12 - 13+, Firefox <=18 - 45+, IE 10 - 11, Safari 5.1 - 9+, iOS 6 - 9.1
// throw exceptions when non-strict code (e.g., ASP.NET 4.5) accesses strict mode
// arguments.callee.caller (trac-13335). But as of jQuery 3.0 (2016), strict mode should be common
// enough that all such attempts are guarded in a try block.
"use strict";

var arr = [];

var document = window.document;

var getProto = Object.getPrototypeOf;

var slice = arr.slice;

var concat = arr.concat;

var push = arr.push;

var indexOf = arr.indexOf;

var class2type = {};

var toString = class2type.toString;

var hasOwn = class2type.hasOwnProperty;

var fnToString = hasOwn.toString;

var ObjectFunctionString = fnToString.call( Object );

var support = {};

var isFunction = function isFunction( obj ) {

      // Support: Chrome <=57, Firefox <=52
      // In some browsers, typeof returns "function" for HTML <object> elements
      // (i.e., `typeof document.createElement( "object" ) === "function"`).
      // We don't want to classify *any* DOM node as a function.
      return typeof obj === "function" && typeof obj.nodeType !== "number";
  };


var isWindow = function isWindow( obj ) {
		return obj != null && obj === obj.window;
	};




	var preservedScriptAttributes = {
		type: true,
		src: true,
		noModule: true
	};

	function DOMEval( code, doc, node ) {
		doc = doc || document;

		var i,
			script = doc.createElement( "script" );

		script.text = code;
		if ( node ) {
			for ( i in preservedScriptAttributes ) {
				if ( node[ i ] ) {
					script[ i ] = node[ i ];
				}
			}
		}
		doc.head.appendChild( script ).parentNode.removeChild( script );
	}


function toType( obj ) {
	if ( obj == null ) {
		return obj + "";
	}

	// Support: Android <=2.3 only (functionish RegExp)
	return typeof obj === "object" || typeof obj === "function" ?
		class2type[ toString.call( obj ) ] || "object" :
		typeof obj;
}
/* global Symbol */
// Defining this global in .eslintrc.json would create a danger of using the global
// unguarded in another place, it seems safer to define global only for this module



var
	version = "3.3.1",

	// Define a local copy of jQuery
	jQuery = function( selector, context ) {

		// The jQuery object is actually just the init constructor 'enhanced'
		// Need init if jQuery is called (just allow error to be thrown if not included)
		return new jQuery.fn.init( selector, context );
	},

	// Support: Android <=4.0 only
	// Make sure we trim BOM and NBSP
	rtrim = /^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g;

jQuery.fn = jQuery.prototype = {

	// The current version of jQuery being used
	jquery: version,

	constructor: jQuery,

	// The default length of a jQuery object is 0
	length: 0,

	toArray: function() {
		return slice.call( this );
	},

	// Get the Nth element in the matched element set OR
	// Get the whole matched element set as a clean array
	get: function( num ) {

		// Return all the elements in a clean array
		if ( num == null ) {
			return slice.call( this );
		}

		// Return just the one element from the set
		return num < 0 ? this[ num + this.length ] : this[ num ];
	},

	// Take an array of elements and push it onto the stack
	// (returning the new matched element set)
	pushStack: function( elems ) {

		// Build a new jQuery matched element set
		var ret = jQuery.merge( this.constructor(), elems );

		// Add the old object onto the stack (as a reference)
		ret.prevObject = this;

		// Return the newly-formed element set
		return ret;
	},

	// Execute a callback for every element in the matched set.
	each: function( callback ) {
		return jQuery.each( this, callback );
	},

	map: function( callback ) {
		return this.pushStack( jQuery.map( this, function( elem, i ) {
			return callback.call( elem, i, elem );
		} ) );
	},

	slice: function() {
		return this.pushStack( slice.apply( this, arguments ) );
	},

	first: function() {
		return this.eq( 0 );
	},

	last: function() {
		return this.eq( -1 );
	},

	eq: function( i ) {
		var len = this.length,
			j = +i + ( i < 0 ? len : 0 );
		return this.pushStack( j >= 0 && j < len ? [ this[ j ] ] : [] );
	},

	end: function() {
		return this.prevObject || this.constructor();
	},

	// For internal use only.
	// Behaves like an Array's method, not like a jQuery method.
	push: push,
	sort: arr.sort,
	splice: arr.splice
};

jQuery.extend = jQuery.fn.extend = function() {
	var options, name, src, copy, copyIsArray, clone,
		target = arguments[ 0 ] || {},
		i = 1,
		length = arguments.length,
		deep = false;

	// Handle a deep copy situation
	if ( typeof target === "boolean" ) {
		deep = target;

		// Skip the boolean and the target
		target = arguments[ i ] || {};
		i++;
	}

	// Handle case when target is a string or something (possible in deep copy)
	if ( typeof target !== "object" && !isFunction( target ) ) {
		target = {};
	}

	// Extend jQuery itself if only one argument is passed
	if ( i === length ) {
		target = this;
		i--;
	}

	for ( ; i < length; i++ ) {

		// Only deal with non-null/undefined values
		if ( ( options = arguments[ i ] ) != null ) {

			// Extend the base object
			for ( name in options ) {
				src = target[ name ];
				copy = options[ name ];

				// Prevent never-ending loop
				if ( target === copy ) {
					continue;
				}

				// Recurse if we're merging plain objects or arrays
				if ( deep && copy && ( jQuery.isPlainObject( copy ) ||
					( copyIsArray = Array.isArray( copy ) ) ) ) {

					if ( copyIsArray ) {
						copyIsArray = false;
						clone = src && Array.isArray( src ) ? src : [];

					} else {
						clone = src && jQuery.isPlainObject( src ) ? src : {};
					}

					// Never move original objects, clone them
					target[ name ] = jQuery.extend( deep, clone, copy );

				// Don't bring in undefined values
				} else if ( copy !== undefined ) {
					target[ name ] = copy;
				}
			}
		}
	}

	// Return the modified object
	return target;
};

jQuery.extend( {

	// Unique for each copy of jQuery on the page
	expando: "jQuery" + ( version + Math.random() ).replace( /\D/g, "" ),

	// Assume jQuery is ready without the ready module
	isReady: true,

	error: function( msg ) {
		throw new Error( msg );
	},

	noop: function() {},

	isPlainObject: function( obj ) {
		var proto, Ctor;

		// Detect obvious negatives
		// Use toString instead of jQuery.type to catch host objects
		if ( !obj || toString.call( obj ) !== "[object Object]" ) {
			return false;
		}

		proto = getProto( obj );

		// Objects with no prototype (e.g., `Object.create( null )`) are plain
		if ( !proto ) {
			return true;
		}

		// Objects with prototype are plain iff they were constructed by a global Object function
		Ctor = hasOwn.call( proto, "constructor" ) && proto.constructor;
		return typeof Ctor === "function" && fnToString.call( Ctor ) === ObjectFunctionString;
	},

	isEmptyObject: function( obj ) {

		/* eslint-disable no-unused-vars */
		// See https://github.com/eslint/eslint/issues/6125
		var name;

		for ( name in obj ) {
			return false;
		}
		return true;
	},

	// Evaluates a script in a global context
	globalEval: function( code ) {
		DOMEval( code );
	},

	each: function( obj, callback ) {
		var length, i = 0;

		if ( isArrayLike( obj ) ) {
			length = obj.length;
			for ( ; i < length; i++ ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		} else {
			for ( i in obj ) {
				if ( callback.call( obj[ i ], i, obj[ i ] ) === false ) {
					break;
				}
			}
		}

		return obj;
	},

	// Support: Android <=4.0 only
	trim: function( text ) {
		return text == null ?
			"" :
			( text + "" ).replace( rtrim, "" );
	},

	// results is for internal usage only
	makeArray: function( arr, results ) {
		var ret = results || [];

		if ( arr != null ) {
			if ( isArrayLike( Object( arr ) ) ) {
				jQuery.merge( ret,
					typeof arr === "string" ?
					[ arr ] : arr
				);
			} else {
				push.call( ret, arr );
			}
		}

		return ret;
	},

	inArray: function( elem, arr, i ) {
		return arr == null ? -1 : indexOf.call( arr, elem, i );
	},

	// Support: Android <=4.0 only, PhantomJS 1 only
	// push.apply(_, arraylike) throws on ancient WebKit
	merge: function( first, second ) {
		var len = +second.length,
			j = 0,
			i = first.length;

		for ( ; j < len; j++ ) {
			first[ i++ ] = second[ j ];
		}

		first.length = i;

		return first;
	},

	grep: function( elems, callback, invert ) {
		var callbackInverse,
			matches = [],
			i = 0,
			length = elems.length,
			callbackExpect = !invert;

		// Go through the array, only saving the items
		// that pass the validator function
		for ( ; i < length; i++ ) {
			callbackInverse = !callback( elems[ i ], i );
			if ( callbackInverse !== callbackExpect ) {
				matches.push( elems[ i ] );
			}
		}

		return matches;
	},

	// arg is for internal usage only
	map: function( elems, callback, arg ) {
		var length, value,
			i = 0,
			ret = [];

		// Go through the array, translating each of the items to their new values
		if ( isArrayLike( elems ) ) {
			length = elems.length;
			for ( ; i < length; i++ ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}

		// Go through every key on the object,
		} else {
			for ( i in elems ) {
				value = callback( elems[ i ], i, arg );

				if ( value != null ) {
					ret.push( value );
				}
			}
		}

		// Flatten any nested arrays
		return concat.apply( [], ret );
	},

	// A global GUID counter for objects
	guid: 1,

	// jQuery.support is not used in Core but other projects attach their
	// properties to it so it needs to exist.
	support: support
} );

if ( typeof Symbol === "function" ) {
	jQuery.fn[ Symbol.iterator ] = arr[ Symbol.iterator ];
}

// Populate the class2type map
jQuery.each( "Boolean Number String Function Array Date RegExp Object Error Symbol".split( " " ),
function( i, name ) {
	class2type[ "[object " + name + "]" ] = name.toLowerCase();
} );

function isArrayLike( obj ) {

	// Support: real iOS 8.2 only (not reproducible in simulator)
	// `in` check used to prevent JIT error (gh-2145)
	// hasOwn isn't used here due to false negatives
	// regarding Nodelist length in IE
	var length = !!obj && "length" in obj && obj.length,
		type = toType( obj );

	if ( isFunction( obj ) || isWindow( obj ) ) {
		return false;
	}

	return type === "array" || length === 0 ||
		typeof length === "number" && length > 0 && ( length - 1 ) in obj;
}
var Sizzle =
/*!
 * Sizzle CSS Selector Engine v2.3.3
 * https://sizzlejs.com/
 *
 * Copyright jQuery Foundation and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 *
 * Date: 2016-08-08
 */
(function( window ) {

var i,
	support,
	Expr,
	getText,
	isXML,
	tokenize,
	compile,
	select,
	outermostContext,
	sortInput,
	hasDuplicate,

	// Local document vars
	setDocument,
	document,
	docElem,
	documentIsHTML,
	rbuggyQSA,
	rbuggyMatches,
	matches,
	contains,

	// Instance-specific data
	expando = "sizzle" + 1 * new Date(),
	preferredDoc = window.document,
	dirruns = 0,
	done = 0,
	classCache = createCache(),
	tokenCache = createCache(),
	compilerCache = createCache(),
	sortOrder = function( a, b ) {
		if ( a === b ) {
			hasDuplicate = true;
		}
		return 0;
	},

	// Instance methods
	hasOwn = ({}).hasOwnProperty,
	arr = [],
	pop = arr.pop,
	push_native = arr.push,
	push = arr.push,
	slice = arr.slice,
	// Use a stripped-down indexOf as it's faster than native
	// https://jsperf.com/thor-indexof-vs-for/5
	indexOf = function( list, elem ) {
		var i = 0,
			len = list.length;
		for ( ; i < len; i++ ) {
			if ( list[i] === elem ) {
				return i;
			}
		}
		return -1;
	},

	booleans = "checked|selected|async|autofocus|autoplay|controls|defer|disabled|hidden|ismap|loop|multiple|open|readonly|required|scoped",

	// Regular expressions

	// http://www.w3.org/TR/css3-selectors/#whitespace
	whitespace = "[\\x20\\t\\r\\n\\f]",

	// http://www.w3.org/TR/CSS21/syndata.html#value-def-identifier
	identifier = "(?:\\\\.|[\\w-]|[^\0-\\xa0])+",

	// Attribute selectors: http://www.w3.org/TR/selectors/#attribute-selectors
	attributes = "\\[" + whitespace + "*(" + identifier + ")(?:" + whitespace +
		// Operator (capture 2)
		"*([*^$|!~]?=)" + whitespace +
		// "Attribute values must be CSS identifiers [capture 5] or strings [capture 3 or capture 4]"
		"*(?:'((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\"|(" + identifier + "))|)" + whitespace +
		"*\\]",

	pseudos = ":(" + identifier + ")(?:\\((" +
		// To reduce the number of selectors needing tokenize in the preFilter, prefer arguments:
		// 1. quoted (capture 3; capture 4 or capture 5)
		"('((?:\\\\.|[^\\\\'])*)'|\"((?:\\\\.|[^\\\\\"])*)\")|" +
		// 2. simple (capture 6)
		"((?:\\\\.|[^\\\\()[\\]]|" + attributes + ")*)|" +
		// 3. anything else (capture 2)
		".*" +
		")\\)|)",

	// Leading and non-escaped trailing whitespace, capturing some non-whitespace characters preceding the latter
	rwhitespace = new RegExp( whitespace + "+", "g" ),
	rtrim = new RegExp( "^" + whitespace + "+|((?:^|[^\\\\])(?:\\\\.)*)" + whitespace + "+$", "g" ),

	rcomma = new RegExp( "^" + whitespace + "*," + whitespace + "*" ),
	rcombinators = new RegExp( "^" + whitespace + "*([>+~]|" + whitespace + ")" + whitespace + "*" ),

	rattributeQuotes = new RegExp( "=" + whitespace + "*([^\\]'\"]*?)" + whitespace + "*\\]", "g" ),

	rpseudo = new RegExp( pseudos ),
	ridentifier = new RegExp( "^" + identifier + "$" ),

	matchExpr = {
		"ID": new RegExp( "^#(" + identifier + ")" ),
		"CLASS": new RegExp( "^\\.(" + identifier + ")" ),
		"TAG": new RegExp( "^(" + identifier + "|[*])" ),
		"ATTR": new RegExp( "^" + attributes ),
		"PSEUDO": new RegExp( "^" + pseudos ),
		"CHILD": new RegExp( "^:(only|first|last|nth|nth-last)-(child|of-type)(?:\\(" + whitespace +
			"*(even|odd|(([+-]|)(\\d*)n|)" + whitespace + "*(?:([+-]|)" + whitespace +
			"*(\\d+)|))" + whitespace + "*\\)|)", "i" ),
		"bool": new RegExp( "^(?:" + booleans + ")$", "i" ),
		// For use in libraries implementing .is()
		// We use this for POS matching in `select`
		"needsContext": new RegExp( "^" + whitespace + "*[>+~]|:(even|odd|eq|gt|lt|nth|first|last)(?:\\(" +
			whitespace + "*((?:-\\d)?\\d*)" + whitespace + "*\\)|)(?=[^-]|$)", "i" )
	},

	rinputs = /^(?:input|select|textarea|button)$/i,
	rheader = /^h\d$/i,

	rnative = /^[^{]+\{\s*\[native \w/,

	// Easily-parseable/retrievable ID or TAG or CLASS selectors
	rquickExpr = /^(?:#([\w-]+)|(\w+)|\.([\w-]+))$/,

	rsibling = /[+~]/,

	// CSS escapes
	// http://www.w3.org/TR/CSS21/syndata.html#escaped-characters
	runescape = new RegExp( "\\\\([\\da-f]{1,6}" + whitespace + "?|(" + whitespace + ")|.)", "ig" ),
	funescape = function( _, escaped, escapedWhitespace ) {
		var high = "0x" + escaped - 0x10000;
		// NaN means non-codepoint
		// Support: Firefox<24
		// Workaround erroneous numeric interpretation of +"0x"
		return high !== high || escapedWhitespace ?
			escaped :
			high < 0 ?
				// BMP codepoint
				String.fromCharCode( high + 0x10000 ) :
				// Supplemental Plane codepoint (surrogate pair)
				String.fromCharCode( high >> 10 | 0xD800, high & 0x3FF | 0xDC00 );
	},

	// CSS string/identifier serialization
	// https://drafts.csswg.org/cssom/#common-serializing-idioms
	rcssescape = /([\0-\x1f\x7f]|^-?\d)|^-$|[^\0-\x1f\x7f-\uFFFF\w-]/g,
	fcssescape = function( ch, asCodePoint ) {
		if ( asCodePoint ) {

			// U+0000 NULL becomes U+FFFD REPLACEMENT CHARACTER
			if ( ch === "\0" ) {
				return "\uFFFD";
			}

			// Control characters and (dependent upon position) numbers get escaped as code points
			return ch.slice( 0, -1 ) + "\\" + ch.charCodeAt( ch.length - 1 ).toString( 16 ) + " ";
		}

		// Other potentially-special ASCII characters get backslash-escaped
		return "\\" + ch;
	},

	// Used for iframes
	// See setDocument()
	// Removing the function wrapper causes a "Permission Denied"
	// error in IE
	unloadHandler = function() {
		setDocument();
	},

	disabledAncestor = addCombinator(
		function( elem ) {
			return elem.disabled === true && ("form" in elem || "label" in elem);
		},
		{ dir: "parentNode", next: "legend" }
	);

// Optimize for push.apply( _, NodeList )
try {
	push.apply(
		(arr = slice.call( preferredDoc.childNodes )),
		preferredDoc.childNodes
	);
	// Support: Android<4.0
	// Detect silently failing push.apply
	arr[ preferredDoc.childNodes.length ].nodeType;
} catch ( e ) {
	push = { apply: arr.length ?

		// Leverage slice if possible
		function( target, els ) {
			push_native.apply( target, slice.call(els) );
		} :

		// Support: IE<9
		// Otherwise append directly
		function( target, els ) {
			var j = target.length,
				i = 0;
			// Can't trust NodeList.length
			while ( (target[j++] = els[i++]) ) {}
			target.length = j - 1;
		}
	};
}

function Sizzle( selector, context, results, seed ) {
	var m, i, elem, nid, match, groups, newSelector,
		newContext = context && context.ownerDocument,

		// nodeType defaults to 9, since context defaults to document
		nodeType = context ? context.nodeType : 9;

	results = results || [];

	// Return early from calls with invalid selector or context
	if ( typeof selector !== "string" || !selector ||
		nodeType !== 1 && nodeType !== 9 && nodeType !== 11 ) {

		return results;
	}

	// Try to shortcut find operations (as opposed to filters) in HTML documents
	if ( !seed ) {

		if ( ( context ? context.ownerDocument || context : preferredDoc ) !== document ) {
			setDocument( context );
		}
		context = context || document;

		if ( documentIsHTML ) {

			// If the selector is sufficiently simple, try using a "get*By*" DOM method
			// (excepting DocumentFragment context, where the methods don't exist)
			if ( nodeType !== 11 && (match = rquickExpr.exec( selector )) ) {

				// ID selector
				if ( (m = match[1]) ) {

					// Document context
					if ( nodeType === 9 ) {
						if ( (elem = context.getElementById( m )) ) {

							// Support: IE, Opera, Webkit
							// TODO: identify versions
							// getElementById can match elements by name instead of ID
							if ( elem.id === m ) {
								results.push( elem );
								return results;
							}
						} else {
							return results;
						}

					// Element context
					} else {

						// Support: IE, Opera, Webkit
						// TODO: identify versions
						// getElementById can match elements by name instead of ID
						if ( newContext && (elem = newContext.getElementById( m )) &&
							contains( context, elem ) &&
							elem.id === m ) {

							results.push( elem );
							return results;
						}
					}

				// Type selector
				} else if ( match[2] ) {
					push.apply( results, context.getElementsByTagName( selector ) );
					return results;

				// Class selector
				} else if ( (m = match[3]) && support.getElementsByClassName &&
					context.getElementsByClassName ) {

					push.apply( results, context.getElementsByClassName( m ) );
					return results;
				}
			}

			// Take advantage of querySelectorAll
			if ( support.qsa &&
				!compilerCache[ selector + " " ] &&
				(!rbuggyQSA || !rbuggyQSA.test( selector )) ) {

				if ( nodeType !== 1 ) {
					newContext = context;
					newSelector = selector;

				// qSA looks outside Element context, which is not what we want
				// Thanks to Andrew Dupont for this workaround technique
				// Support: IE <=8
				// Exclude object elements
				} else if ( context.nodeName.toLowerCase() !== "object" ) {

					// Capture the context ID, setting it first if necessary
					if ( (nid = context.getAttribute( "id" )) ) {
						nid = nid.replace( rcssescape, fcssescape );
					} else {
						context.setAttribute( "id", (nid = expando) );
					}

					// Prefix every selector in the list
					groups = tokenize( selector );
					i = groups.length;
					while ( i-- ) {
						groups[i] = "#" + nid + " " + toSelector( groups[i] );
					}
					newSelector = groups.join( "," );

					// Expand context for sibling selectors
					newContext = rsibling.test( selector ) && testContext( context.parentNode ) ||
						context;
				}

				if ( newSelector ) {
					try {
						push.apply( results,
							newContext.querySelectorAll( newSelector )
						);
						return results;
					} catch ( qsaError ) {
					} finally {
						if ( nid === expando ) {
							context.removeAttribute( "id" );
						}
					}
				}
			}
		}
	}

	// All others
	return select( selector.replace( rtrim, "$1" ), context, results, seed );
}

/**
 * Create key-value caches of limited size
 * @returns {function(string, object)} Returns the Object data after storing it on itself with
 *	property name the (space-suffixed) string and (if the cache is larger than Expr.cacheLength)
 *	deleting the oldest entry
 */
function createCache() {
	var keys = [];

	function cache( key, value ) {
		// Use (key + " ") to avoid collision with native prototype properties (see Issue #157)
		if ( keys.push( key + " " ) > Expr.cacheLength ) {
			// Only keep the most recent entries
			delete cache[ keys.shift() ];
		}
		return (cache[ key + " " ] = value);
	}
	return cache;
}

/**
 * Mark a function for special use by Sizzle
 * @param {Function} fn The function to mark
 */
function markFunction( fn ) {
	fn[ expando ] = true;
	return fn;
}

/**
 * Support testing using an element
 * @param {Function} fn Passed the created element and returns a boolean result
 */
function assert( fn ) {
	var el = document.createElement("fieldset");

	try {
		return !!fn( el );
	} catch (e) {
		return false;
	} finally {
		// Remove from its parent by default
		if ( el.parentNode ) {
			el.parentNode.removeChild( el );
		}
		// release memory in IE
		el = null;
	}
}

/**
 * Adds the same handler for all of the specified attrs
 * @param {String} attrs Pipe-separated list of attributes
 * @param {Function} handler The method that will be applied
 */
function addHandle( attrs, handler ) {
	var arr = attrs.split("|"),
		i = arr.length;

	while ( i-- ) {
		Expr.attrHandle[ arr[i] ] = handler;
	}
}

/**
 * Checks document order of two siblings
 * @param {Element} a
 * @param {Element} b
 * @returns {Number} Returns less than 0 if a precedes b, greater than 0 if a follows b
 */
function siblingCheck( a, b ) {
	var cur = b && a,
		diff = cur && a.nodeType === 1 && b.nodeType === 1 &&
			a.sourceIndex - b.sourceIndex;

	// Use IE sourceIndex if available on both nodes
	if ( diff ) {
		return diff;
	}

	// Check if b follows a
	if ( cur ) {
		while ( (cur = cur.nextSibling) ) {
			if ( cur === b ) {
				return -1;
			}
		}
	}

	return a ? 1 : -1;
}

/**
 * Returns a function to use in pseudos for input types
 * @param {String} type
 */
function createInputPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return name === "input" && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for buttons
 * @param {String} type
 */
function createButtonPseudo( type ) {
	return function( elem ) {
		var name = elem.nodeName.toLowerCase();
		return (name === "input" || name === "button") && elem.type === type;
	};
}

/**
 * Returns a function to use in pseudos for :enabled/:disabled
 * @param {Boolean} disabled true for :disabled; false for :enabled
 */
function createDisabledPseudo( disabled ) {

	// Known :disabled false positives: fieldset[disabled] > legend:nth-of-type(n+2) :can-disable
	return function( elem ) {

		// Only certain elements can match :enabled or :disabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-enabled
		// https://html.spec.whatwg.org/multipage/scripting.html#selector-disabled
		if ( "form" in elem ) {

			// Check for inherited disabledness on relevant non-disabled elements:
			// * listed form-associated elements in a disabled fieldset
			//   https://html.spec.whatwg.org/multipage/forms.html#category-listed
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-fe-disabled
			// * option elements in a disabled optgroup
			//   https://html.spec.whatwg.org/multipage/forms.html#concept-option-disabled
			// All such elements have a "form" property.
			if ( elem.parentNode && elem.disabled === false ) {

				// Option elements defer to a parent optgroup if present
				if ( "label" in elem ) {
					if ( "label" in elem.parentNode ) {
						return elem.parentNode.disabled === disabled;
					} else {
						return elem.disabled === disabled;
					}
				}

				// Support: IE 6 - 11
				// Use the isDisabled shortcut property to check for disabled fieldset ancestors
				return elem.isDisabled === disabled ||

					// Where there is no isDisabled, check manually
					/* jshint -W018 */
					elem.isDisabled !== !disabled &&
						disabledAncestor( elem ) === disabled;
			}

			return elem.disabled === disabled;

		// Try to winnow out elements that can't be disabled before trusting the disabled property.
		// Some victims get caught in our net (label, legend, menu, track), but it shouldn't
		// even exist on them, let alone have a boolean value.
		} else if ( "label" in elem ) {
			return elem.disabled === disabled;
		}

		// Remaining elements are neither :enabled nor :disabled
		return false;
	};
}

/**
 * Returns a function to use in pseudos for positionals
 * @param {Function} fn
 */
function createPositionalPseudo( fn ) {
	return markFunction(function( argument ) {
		argument = +argument;
		return markFunction(function( seed, matches ) {
			var j,
				matchIndexes = fn( [], seed.length, argument ),
				i = matchIndexes.length;

			// Match elements found at the specified indexes
			while ( i-- ) {
				if ( seed[ (j = matchIndexes[i]) ] ) {
					seed[j] = !(matches[j] = seed[j]);
				}
			}
		});
	});
}

/**
 * Checks a node for validity as a Sizzle context
 * @param {Element|Object=} context
 * @returns {Element|Object|Boolean} The input node if acceptable, otherwise a falsy value
 */
function testContext( context ) {
	return context && typeof context.getElementsByTagName !== "undefined" && context;
}

// Expose support vars for convenience
support = Sizzle.support = {};

/**
 * Detects XML nodes
 * @param {Element|Object} elem An element or a document
 * @returns {Boolean} True iff elem is a non-HTML XML node
 */
isXML = Sizzle.isXML = function( elem ) {
	// documentElement is verified for cases where it doesn't yet exist
	// (such as loading iframes in IE - #4833)
	var documentElement = elem && (elem.ownerDocument || elem).documentElement;
	return documentElement ? documentElement.nodeName !== "HTML" : false;
};

/**
 * Sets document-related variables once based on the current document
 * @param {Element|Object} [doc] An element or document object to use to set the document
 * @returns {Object} Returns the current document
 */
setDocument = Sizzle.setDocument = function( node ) {
	var hasCompare, subWindow,
		doc = node ? node.ownerDocument || node : preferredDoc;

	// Return early if doc is invalid or already selected
	if ( doc === document || doc.nodeType !== 9 || !doc.documentElement ) {
		return document;
	}

	// Update global variables
	document = doc;
	docElem = document.documentElement;
	documentIsHTML = !isXML( document );

	// Support: IE 9-11, Edge
	// Accessing iframe documents after unload throws "permission denied" errors (jQuery #13936)
	if ( preferredDoc !== document &&
		(subWindow = document.defaultView) && subWindow.top !== subWindow ) {

		// Support: IE 11, Edge
		if ( subWindow.addEventListener ) {
			subWindow.addEventListener( "unload", unloadHandler, false );

		// Support: IE 9 - 10 only
		} else if ( subWindow.attachEvent ) {
			subWindow.attachEvent( "onunload", unloadHandler );
		}
	}

	/* Attributes
	---------------------------------------------------------------------- */

	// Support: IE<8
	// Verify that getAttribute really returns attributes and not properties
	// (excepting IE8 booleans)
	support.attributes = assert(function( el ) {
		el.className = "i";
		return !el.getAttribute("className");
	});

	/* getElement(s)By*
	---------------------------------------------------------------------- */

	// Check if getElementsByTagName("*") returns only elements
	support.getElementsByTagName = assert(function( el ) {
		el.appendChild( document.createComment("") );
		return !el.getElementsByTagName("*").length;
	});

	// Support: IE<9
	support.getElementsByClassName = rnative.test( document.getElementsByClassName );

	// Support: IE<10
	// Check if getElementById returns elements by name
	// The broken getElementById methods don't pick up programmatically-set names,
	// so use a roundabout getElementsByName test
	support.getById = assert(function( el ) {
		docElem.appendChild( el ).id = expando;
		return !document.getElementsByName || !document.getElementsByName( expando ).length;
	});

	// ID filter and find
	if ( support.getById ) {
		Expr.filter["ID"] = function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				return elem.getAttribute("id") === attrId;
			};
		};
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var elem = context.getElementById( id );
				return elem ? [ elem ] : [];
			}
		};
	} else {
		Expr.filter["ID"] =  function( id ) {
			var attrId = id.replace( runescape, funescape );
			return function( elem ) {
				var node = typeof elem.getAttributeNode !== "undefined" &&
					elem.getAttributeNode("id");
				return node && node.value === attrId;
			};
		};

		// Support: IE 6 - 7 only
		// getElementById is not reliable as a find shortcut
		Expr.find["ID"] = function( id, context ) {
			if ( typeof context.getElementById !== "undefined" && documentIsHTML ) {
				var node, i, elems,
					elem = context.getElementById( id );

				if ( elem ) {

					// Verify the id attribute
					node = elem.getAttributeNode("id");
					if ( node && node.value === id ) {
						return [ elem ];
					}

					// Fall back on getElementsByName
					elems = context.getElementsByName( id );
					i = 0;
					while ( (elem = elems[i++]) ) {
						node = elem.getAttributeNode("id");
						if ( node && node.value === id ) {
							return [ elem ];
						}
					}
				}

				return [];
			}
		};
	}

	// Tag
	Expr.find["TAG"] = support.getElementsByTagName ?
		function( tag, context ) {
			if ( typeof context.getElementsByTagName !== "undefined" ) {
				return context.getElementsByTagName( tag );

			// DocumentFragment nodes don't have gEBTN
			} else if ( support.qsa ) {
				return context.querySelectorAll( tag );
			}
		} :

		function( tag, context ) {
			var elem,
				tmp = [],
				i = 0,
				// By happy coincidence, a (broken) gEBTN appears on DocumentFragment nodes too
				results = context.getElementsByTagName( tag );

			// Filter out possible comments
			if ( tag === "*" ) {
				while ( (elem = results[i++]) ) {
					if ( elem.nodeType === 1 ) {
						tmp.push( elem );
					}
				}

				return tmp;
			}
			return results;
		};

	// Class
	Expr.find["CLASS"] = support.getElementsByClassName && function( className, context ) {
		if ( typeof context.getElementsByClassName !== "undefined" && documentIsHTML ) {
			return context.getElementsByClassName( className );
		}
	};

	/* QSA/matchesSelector
	---------------------------------------------------------------------- */

	// QSA and matchesSelector support

	// matchesSelector(:active) reports false when true (IE9/Opera 11.5)
	rbuggyMatches = [];

	// qSa(:focus) reports false when true (Chrome 21)
	// We allow this because of a bug in IE8/9 that throws an error
	// whenever `document.activeElement` is accessed on an iframe
	// So, we allow :focus to pass through QSA all the time to avoid the IE error
	// See https://bugs.jquery.com/ticket/13378
	rbuggyQSA = [];

	if ( (support.qsa = rnative.test( document.querySelectorAll )) ) {
		// Build QSA regex
		// Regex strategy adopted from Diego Perini
		assert(function( el ) {
			// Select is set to empty string on purpose
			// This is to test IE's treatment of not explicitly
			// setting a boolean content attribute,
			// since its presence should be enough
			// https://bugs.jquery.com/ticket/12359
			docElem.appendChild( el ).innerHTML = "<a id='" + expando + "'></a>" +
				"<select id='" + expando + "-\r\\' msallowcapture=''>" +
				"<option selected=''></option></select>";

			// Support: IE8, Opera 11-12.16
			// Nothing should be selected when empty strings follow ^= or $= or *=
			// The test attribute must be unknown in Opera but "safe" for WinRT
			// https://msdn.microsoft.com/en-us/library/ie/hh465388.aspx#attribute_section
			if ( el.querySelectorAll("[msallowcapture^='']").length ) {
				rbuggyQSA.push( "[*^$]=" + whitespace + "*(?:''|\"\")" );
			}

			// Support: IE8
			// Boolean attributes and "value" are not treated correctly
			if ( !el.querySelectorAll("[selected]").length ) {
				rbuggyQSA.push( "\\[" + whitespace + "*(?:value|" + booleans + ")" );
			}

			// Support: Chrome<29, Android<4.4, Safari<7.0+, iOS<7.0+, PhantomJS<1.9.8+
			if ( !el.querySelectorAll( "[id~=" + expando + "-]" ).length ) {
				rbuggyQSA.push("~=");
			}

			// Webkit/Opera - :checked should return selected option elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			// IE8 throws error here and will not see later tests
			if ( !el.querySelectorAll(":checked").length ) {
				rbuggyQSA.push(":checked");
			}

			// Support: Safari 8+, iOS 8+
			// https://bugs.webkit.org/show_bug.cgi?id=136851
			// In-page `selector#id sibling-combinator selector` fails
			if ( !el.querySelectorAll( "a#" + expando + "+*" ).length ) {
				rbuggyQSA.push(".#.+[+~]");
			}
		});

		assert(function( el ) {
			el.innerHTML = "<a href='' disabled='disabled'></a>" +
				"<select disabled='disabled'><option/></select>";

			// Support: Windows 8 Native Apps
			// The type and name attributes are restricted during .innerHTML assignment
			var input = document.createElement("input");
			input.setAttribute( "type", "hidden" );
			el.appendChild( input ).setAttribute( "name", "D" );

			// Support: IE8
			// Enforce case-sensitivity of name attribute
			if ( el.querySelectorAll("[name=d]").length ) {
				rbuggyQSA.push( "name" + whitespace + "*[*^$|!~]?=" );
			}

			// FF 3.5 - :enabled/:disabled and hidden elements (hidden elements are still enabled)
			// IE8 throws error here and will not see later tests
			if ( el.querySelectorAll(":enabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Support: IE9-11+
			// IE's :disabled selector does not pick up the children of disabled fieldsets
			docElem.appendChild( el ).disabled = true;
			if ( el.querySelectorAll(":disabled").length !== 2 ) {
				rbuggyQSA.push( ":enabled", ":disabled" );
			}

			// Opera 10-11 does not throw on post-comma invalid pseudos
			el.querySelectorAll("*,:x");
			rbuggyQSA.push(",.*:");
		});
	}

	if ( (support.matchesSelector = rnative.test( (matches = docElem.matches ||
		docElem.webkitMatchesSelector ||
		docElem.mozMatchesSelector ||
		docElem.oMatchesSelector ||
		docElem.msMatchesSelector) )) ) {

		assert(function( el ) {
			// Check to see if it's possible to do matchesSelector
			// on a disconnected node (IE 9)
			support.disconnectedMatch = matches.call( el, "*" );

			// This should fail with an exception
			// Gecko does not error, returns false instead
			matches.call( el, "[s!='']:x" );
			rbuggyMatches.push( "!=", pseudos );
		});
	}

	rbuggyQSA = rbuggyQSA.length && new RegExp( rbuggyQSA.join("|") );
	rbuggyMatches = rbuggyMatches.length && new RegExp( rbuggyMatches.join("|") );

	/* Contains
	---------------------------------------------------------------------- */
	hasCompare = rnative.test( docElem.compareDocumentPosition );

	// Element contains another
	// Purposefully self-exclusive
	// As in, an element does not contain itself
	contains = hasCompare || rnative.test( docElem.contains ) ?
		function( a, b ) {
			var adown = a.nodeType === 9 ? a.documentElement : a,
				bup = b && b.parentNode;
			return a === bup || !!( bup && bup.nodeType === 1 && (
				adown.contains ?
					adown.contains( bup ) :
					a.compareDocumentPosition && a.compareDocumentPosition( bup ) & 16
			));
		} :
		function( a, b ) {
			if ( b ) {
				while ( (b = b.parentNode) ) {
					if ( b === a ) {
						return true;
					}
				}
			}
			return false;
		};

	/* Sorting
	---------------------------------------------------------------------- */

	// Document order sorting
	sortOrder = hasCompare ?
	function( a, b ) {

		// Flag for duplicate removal
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		// Sort on method existence if only one input has compareDocumentPosition
		var compare = !a.compareDocumentPosition - !b.compareDocumentPosition;
		if ( compare ) {
			return compare;
		}

		// Calculate position if both inputs belong to the same document
		compare = ( a.ownerDocument || a ) === ( b.ownerDocument || b ) ?
			a.compareDocumentPosition( b ) :

			// Otherwise we know they are disconnected
			1;

		// Disconnected nodes
		if ( compare & 1 ||
			(!support.sortDetached && b.compareDocumentPosition( a ) === compare) ) {

			// Choose the first element that is related to our preferred document
			if ( a === document || a.ownerDocument === preferredDoc && contains(preferredDoc, a) ) {
				return -1;
			}
			if ( b === document || b.ownerDocument === preferredDoc && contains(preferredDoc, b) ) {
				return 1;
			}

			// Maintain original order
			return sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;
		}

		return compare & 4 ? -1 : 1;
	} :
	function( a, b ) {
		// Exit early if the nodes are identical
		if ( a === b ) {
			hasDuplicate = true;
			return 0;
		}

		var cur,
			i = 0,
			aup = a.parentNode,
			bup = b.parentNode,
			ap = [ a ],
			bp = [ b ];

		// Parentless nodes are either documents or disconnected
		if ( !aup || !bup ) {
			return a === document ? -1 :
				b === document ? 1 :
				aup ? -1 :
				bup ? 1 :
				sortInput ?
				( indexOf( sortInput, a ) - indexOf( sortInput, b ) ) :
				0;

		// If the nodes are siblings, we can do a quick check
		} else if ( aup === bup ) {
			return siblingCheck( a, b );
		}

		// Otherwise we need full lists of their ancestors for comparison
		cur = a;
		while ( (cur = cur.parentNode) ) {
			ap.unshift( cur );
		}
		cur = b;
		while ( (cur = cur.parentNode) ) {
			bp.unshift( cur );
		}

		// Walk down the tree looking for a discrepancy
		while ( ap[i] === bp[i] ) {
			i++;
		}

		return i ?
			// Do a sibling check if the nodes have a common ancestor
			siblingCheck( ap[i], bp[i] ) :

			// Otherwise nodes in our document sort first
			ap[i] === preferredDoc ? -1 :
			bp[i] === preferredDoc ? 1 :
			0;
	};

	return document;
};

Sizzle.matches = function( expr, elements ) {
	return Sizzle( expr, null, null, elements );
};

Sizzle.matchesSelector = function( elem, expr ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	// Make sure that attribute selectors are quoted
	expr = expr.replace( rattributeQuotes, "='$1']" );

	if ( support.matchesSelector && documentIsHTML &&
		!compilerCache[ expr + " " ] &&
		( !rbuggyMatches || !rbuggyMatches.test( expr ) ) &&
		( !rbuggyQSA     || !rbuggyQSA.test( expr ) ) ) {

		try {
			var ret = matches.call( elem, expr );

			// IE 9's matchesSelector returns false on disconnected nodes
			if ( ret || support.disconnectedMatch ||
					// As well, disconnected nodes are said to be in a document
					// fragment in IE 9
					elem.document && elem.document.nodeType !== 11 ) {
				return ret;
			}
		} catch (e) {}
	}

	return Sizzle( expr, document, null, [ elem ] ).length > 0;
};

Sizzle.contains = function( context, elem ) {
	// Set document vars if needed
	if ( ( context.ownerDocument || context ) !== document ) {
		setDocument( context );
	}
	return contains( context, elem );
};

Sizzle.attr = function( elem, name ) {
	// Set document vars if needed
	if ( ( elem.ownerDocument || elem ) !== document ) {
		setDocument( elem );
	}

	var fn = Expr.attrHandle[ name.toLowerCase() ],
		// Don't get fooled by Object.prototype properties (jQuery #13807)
		val = fn && hasOwn.call( Expr.attrHandle, name.toLowerCase() ) ?
			fn( elem, name, !documentIsHTML ) :
			undefined;

	return val !== undefined ?
		val :
		support.attributes || !documentIsHTML ?
			elem.getAttribute( name ) :
			(val = elem.getAttributeNode(name)) && val.specified ?
				val.value :
				null;
};

Sizzle.escape = function( sel ) {
	return (sel + "").replace( rcssescape, fcssescape );
};

Sizzle.error = function( msg ) {
	throw new Error( "Syntax error, unrecognized expression: " + msg );
};

/**
 * Document sorting and removing duplicates
 * @param {ArrayLike} results
 */
Sizzle.uniqueSort = function( results ) {
	var elem,
		duplicates = [],
		j = 0,
		i = 0;

	// Unless we *know* we can detect duplicates, assume their presence
	hasDuplicate = !support.detectDuplicates;
	sortInput = !support.sortStable && results.slice( 0 );
	results.sort( sortOrder );

	if ( hasDuplicate ) {
		while ( (elem = results[i++]) ) {
			if ( elem === results[ i ] ) {
				j = duplicates.push( i );
			}
		}
		while ( j-- ) {
			results.splice( duplicates[ j ], 1 );
		}
	}

	// Clear input after sorting to release objects
	// See https://github.com/jquery/sizzle/pull/225
	sortInput = null;

	return results;
};

/**
 * Utility function for retrieving the text value of an array of DOM nodes
 * @param {Array|Element} elem
 */
getText = Sizzle.getText = function( elem ) {
	var node,
		ret = "",
		i = 0,
		nodeType = elem.nodeType;

	if ( !nodeType ) {
		// If no nodeType, this is expected to be an array
		while ( (node = elem[i++]) ) {
			// Do not traverse comment nodes
			ret += getText( node );
		}
	} else if ( nodeType === 1 || nodeType === 9 || nodeType === 11 ) {
		// Use textContent for elements
		// innerText usage removed for consistency of new lines (jQuery #11153)
		if ( typeof elem.textContent === "string" ) {
			return elem.textContent;
		} else {
			// Traverse its children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				ret += getText( elem );
			}
		}
	} else if ( nodeType === 3 || nodeType === 4 ) {
		return elem.nodeValue;
	}
	// Do not include comment or processing instruction nodes

	return ret;
};

Expr = Sizzle.selectors = {

	// Can be adjusted by the user
	cacheLength: 50,

	createPseudo: markFunction,

	match: matchExpr,

	attrHandle: {},

	find: {},

	relative: {
		">": { dir: "parentNode", first: true },
		" ": { dir: "parentNode" },
		"+": { dir: "previousSibling", first: true },
		"~": { dir: "previousSibling" }
	},

	preFilter: {
		"ATTR": function( match ) {
			match[1] = match[1].replace( runescape, funescape );

			// Move the given value to match[3] whether quoted or unquoted
			match[3] = ( match[3] || match[4] || match[5] || "" ).replace( runescape, funescape );

			if ( match[2] === "~=" ) {
				match[3] = " " + match[3] + " ";
			}

			return match.slice( 0, 4 );
		},

		"CHILD": function( match ) {
			/* matches from matchExpr["CHILD"]
				1 type (only|nth|...)
				2 what (child|of-type)
				3 argument (even|odd|\d*|\d*n([+-]\d+)?|...)
				4 xn-component of xn+y argument ([+-]?\d*n|)
				5 sign of xn-component
				6 x of xn-component
				7 sign of y-component
				8 y of y-component
			*/
			match[1] = match[1].toLowerCase();

			if ( match[1].slice( 0, 3 ) === "nth" ) {
				// nth-* requires argument
				if ( !match[3] ) {
					Sizzle.error( match[0] );
				}

				// numeric x and y parameters for Expr.filter.CHILD
				// remember that false/true cast respectively to 0/1
				match[4] = +( match[4] ? match[5] + (match[6] || 1) : 2 * ( match[3] === "even" || match[3] === "odd" ) );
				match[5] = +( ( match[7] + match[8] ) || match[3] === "odd" );

			// other types prohibit arguments
			} else if ( match[3] ) {
				Sizzle.error( match[0] );
			}

			return match;
		},

		"PSEUDO": function( match ) {
			var excess,
				unquoted = !match[6] && match[2];

			if ( matchExpr["CHILD"].test( match[0] ) ) {
				return null;
			}

			// Accept quoted arguments as-is
			if ( match[3] ) {
				match[2] = match[4] || match[5] || "";

			// Strip excess characters from unquoted arguments
			} else if ( unquoted && rpseudo.test( unquoted ) &&
				// Get excess from tokenize (recursively)
				(excess = tokenize( unquoted, true )) &&
				// advance to the next closing parenthesis
				(excess = unquoted.indexOf( ")", unquoted.length - excess ) - unquoted.length) ) {

				// excess is a negative index
				match[0] = match[0].slice( 0, excess );
				match[2] = unquoted.slice( 0, excess );
			}

			// Return only captures needed by the pseudo filter method (type and argument)
			return match.slice( 0, 3 );
		}
	},

	filter: {

		"TAG": function( nodeNameSelector ) {
			var nodeName = nodeNameSelector.replace( runescape, funescape ).toLowerCase();
			return nodeNameSelector === "*" ?
				function() { return true; } :
				function( elem ) {
					return elem.nodeName && elem.nodeName.toLowerCase() === nodeName;
				};
		},

		"CLASS": function( className ) {
			var pattern = classCache[ className + " " ];

			return pattern ||
				(pattern = new RegExp( "(^|" + whitespace + ")" + className + "(" + whitespace + "|$)" )) &&
				classCache( className, function( elem ) {
					return pattern.test( typeof elem.className === "string" && elem.className || typeof elem.getAttribute !== "undefined" && elem.getAttribute("class") || "" );
				});
		},

		"ATTR": function( name, operator, check ) {
			return function( elem ) {
				var result = Sizzle.attr( elem, name );

				if ( result == null ) {
					return operator === "!=";
				}
				if ( !operator ) {
					return true;
				}

				result += "";

				return operator === "=" ? result === check :
					operator === "!=" ? result !== check :
					operator === "^=" ? check && result.indexOf( check ) === 0 :
					operator === "*=" ? check && result.indexOf( check ) > -1 :
					operator === "$=" ? check && result.slice( -check.length ) === check :
					operator === "~=" ? ( " " + result.replace( rwhitespace, " " ) + " " ).indexOf( check ) > -1 :
					operator === "|=" ? result === check || result.slice( 0, check.length + 1 ) === check + "-" :
					false;
			};
		},

		"CHILD": function( type, what, argument, first, last ) {
			var simple = type.slice( 0, 3 ) !== "nth",
				forward = type.slice( -4 ) !== "last",
				ofType = what === "of-type";

			return first === 1 && last === 0 ?

				// Shortcut for :nth-*(n)
				function( elem ) {
					return !!elem.parentNode;
				} :

				function( elem, context, xml ) {
					var cache, uniqueCache, outerCache, node, nodeIndex, start,
						dir = simple !== forward ? "nextSibling" : "previousSibling",
						parent = elem.parentNode,
						name = ofType && elem.nodeName.toLowerCase(),
						useCache = !xml && !ofType,
						diff = false;

					if ( parent ) {

						// :(first|last|only)-(child|of-type)
						if ( simple ) {
							while ( dir ) {
								node = elem;
								while ( (node = node[ dir ]) ) {
									if ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) {

										return false;
									}
								}
								// Reverse direction for :only-* (if we haven't yet done so)
								start = dir = type === "only" && !start && "nextSibling";
							}
							return true;
						}

						start = [ forward ? parent.firstChild : parent.lastChild ];

						// non-xml :nth-child(...) stores cache data on `parent`
						if ( forward && useCache ) {

							// Seek `elem` from a previously-cached index

							// ...in a gzip-friendly way
							node = parent;
							outerCache = node[ expando ] || (node[ expando ] = {});

							// Support: IE <9 only
							// Defend against cloned attroperties (jQuery gh-1709)
							uniqueCache = outerCache[ node.uniqueID ] ||
								(outerCache[ node.uniqueID ] = {});

							cache = uniqueCache[ type ] || [];
							nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
							diff = nodeIndex && cache[ 2 ];
							node = nodeIndex && parent.childNodes[ nodeIndex ];

							while ( (node = ++nodeIndex && node && node[ dir ] ||

								// Fallback to seeking `elem` from the start
								(diff = nodeIndex = 0) || start.pop()) ) {

								// When found, cache indexes on `parent` and break
								if ( node.nodeType === 1 && ++diff && node === elem ) {
									uniqueCache[ type ] = [ dirruns, nodeIndex, diff ];
									break;
								}
							}

						} else {
							// Use previously-cached element index if available
							if ( useCache ) {
								// ...in a gzip-friendly way
								node = elem;
								outerCache = node[ expando ] || (node[ expando ] = {});

								// Support: IE <9 only
								// Defend against cloned attroperties (jQuery gh-1709)
								uniqueCache = outerCache[ node.uniqueID ] ||
									(outerCache[ node.uniqueID ] = {});

								cache = uniqueCache[ type ] || [];
								nodeIndex = cache[ 0 ] === dirruns && cache[ 1 ];
								diff = nodeIndex;
							}

							// xml :nth-child(...)
							// or :nth-last-child(...) or :nth(-last)?-of-type(...)
							if ( diff === false ) {
								// Use the same loop as above to seek `elem` from the start
								while ( (node = ++nodeIndex && node && node[ dir ] ||
									(diff = nodeIndex = 0) || start.pop()) ) {

									if ( ( ofType ?
										node.nodeName.toLowerCase() === name :
										node.nodeType === 1 ) &&
										++diff ) {

										// Cache the index of each encountered element
										if ( useCache ) {
											outerCache = node[ expando ] || (node[ expando ] = {});

											// Support: IE <9 only
											// Defend against cloned attroperties (jQuery gh-1709)
											uniqueCache = outerCache[ node.uniqueID ] ||
												(outerCache[ node.uniqueID ] = {});

											uniqueCache[ type ] = [ dirruns, diff ];
										}

										if ( node === elem ) {
											break;
										}
									}
								}
							}
						}

						// Incorporate the offset, then check against cycle size
						diff -= last;
						return diff === first || ( diff % first === 0 && diff / first >= 0 );
					}
				};
		},

		"PSEUDO": function( pseudo, argument ) {
			// pseudo-class names are case-insensitive
			// http://www.w3.org/TR/selectors/#pseudo-classes
			// Prioritize by case sensitivity in case custom pseudos are added with uppercase letters
			// Remember that setFilters inherits from pseudos
			var args,
				fn = Expr.pseudos[ pseudo ] || Expr.setFilters[ pseudo.toLowerCase() ] ||
					Sizzle.error( "unsupported pseudo: " + pseudo );

			// The user may use createPseudo to indicate that
			// arguments are needed to create the filter function
			// just as Sizzle does
			if ( fn[ expando ] ) {
				return fn( argument );
			}

			// But maintain support for old signatures
			if ( fn.length > 1 ) {
				args = [ pseudo, pseudo, "", argument ];
				return Expr.setFilters.hasOwnProperty( pseudo.toLowerCase() ) ?
					markFunction(function( seed, matches ) {
						var idx,
							matched = fn( seed, argument ),
							i = matched.length;
						while ( i-- ) {
							idx = indexOf( seed, matched[i] );
							seed[ idx ] = !( matches[ idx ] = matched[i] );
						}
					}) :
					function( elem ) {
						return fn( elem, 0, args );
					};
			}

			return fn;
		}
	},

	pseudos: {
		// Potentially complex pseudos
		"not": markFunction(function( selector ) {
			// Trim the selector passed to compile
			// to avoid treating leading and trailing
			// spaces as combinators
			var input = [],
				results = [],
				matcher = compile( selector.replace( rtrim, "$1" ) );

			return matcher[ expando ] ?
				markFunction(function( seed, matches, context, xml ) {
					var elem,
						unmatched = matcher( seed, null, xml, [] ),
						i = seed.length;

					// Match elements unmatched by `matcher`
					while ( i-- ) {
						if ( (elem = unmatched[i]) ) {
							seed[i] = !(matches[i] = elem);
						}
					}
				}) :
				function( elem, context, xml ) {
					input[0] = elem;
					matcher( input, null, xml, results );
					// Don't keep the element (issue #299)
					input[0] = null;
					return !results.pop();
				};
		}),

		"has": markFunction(function( selector ) {
			return function( elem ) {
				return Sizzle( selector, elem ).length > 0;
			};
		}),

		"contains": markFunction(function( text ) {
			text = text.replace( runescape, funescape );
			return function( elem ) {
				return ( elem.textContent || elem.innerText || getText( elem ) ).indexOf( text ) > -1;
			};
		}),

		// "Whether an element is represented by a :lang() selector
		// is based solely on the element's language value
		// being equal to the identifier C,
		// or beginning with the identifier C immediately followed by "-".
		// The matching of C against the element's language value is performed case-insensitively.
		// The identifier C does not have to be a valid language name."
		// http://www.w3.org/TR/selectors/#lang-pseudo
		"lang": markFunction( function( lang ) {
			// lang value must be a valid identifier
			if ( !ridentifier.test(lang || "") ) {
				Sizzle.error( "unsupported lang: " + lang );
			}
			lang = lang.replace( runescape, funescape ).toLowerCase();
			return function( elem ) {
				var elemLang;
				do {
					if ( (elemLang = documentIsHTML ?
						elem.lang :
						elem.getAttribute("xml:lang") || elem.getAttribute("lang")) ) {

						elemLang = elemLang.toLowerCase();
						return elemLang === lang || elemLang.indexOf( lang + "-" ) === 0;
					}
				} while ( (elem = elem.parentNode) && elem.nodeType === 1 );
				return false;
			};
		}),

		// Miscellaneous
		"target": function( elem ) {
			var hash = window.location && window.location.hash;
			return hash && hash.slice( 1 ) === elem.id;
		},

		"root": function( elem ) {
			return elem === docElem;
		},

		"focus": function( elem ) {
			return elem === document.activeElement && (!document.hasFocus || document.hasFocus()) && !!(elem.type || elem.href || ~elem.tabIndex);
		},

		// Boolean properties
		"enabled": createDisabledPseudo( false ),
		"disabled": createDisabledPseudo( true ),

		"checked": function( elem ) {
			// In CSS3, :checked should return both checked and selected elements
			// http://www.w3.org/TR/2011/REC-css3-selectors-20110929/#checked
			var nodeName = elem.nodeName.toLowerCase();
			return (nodeName === "input" && !!elem.checked) || (nodeName === "option" && !!elem.selected);
		},

		"selected": function( elem ) {
			// Accessing this property makes selected-by-default
			// options in Safari work properly
			if ( elem.parentNode ) {
				elem.parentNode.selectedIndex;
			}

			return elem.selected === true;
		},

		// Contents
		"empty": function( elem ) {
			// http://www.w3.org/TR/selectors/#empty-pseudo
			// :empty is negated by element (1) or content nodes (text: 3; cdata: 4; entity ref: 5),
			//   but not by others (comment: 8; processing instruction: 7; etc.)
			// nodeType < 6 works because attributes (2) do not appear as children
			for ( elem = elem.firstChild; elem; elem = elem.nextSibling ) {
				if ( elem.nodeType < 6 ) {
					return false;
				}
			}
			return true;
		},

		"parent": function( elem ) {
			return !Expr.pseudos["empty"]( elem );
		},

		// Element/input types
		"header": function( elem ) {
			return rheader.test( elem.nodeName );
		},

		"input": function( elem ) {
			return rinputs.test( elem.nodeName );
		},

		"button": function( elem ) {
			var name = elem.nodeName.toLowerCase();
			return name === "input" && elem.type === "button" || name === "button";
		},

		"text": function( elem ) {
			var attr;
			return elem.nodeName.toLowerCase() === "input" &&
				elem.type === "text" &&

				// Support: IE<8
				// New HTML5 attribute values (e.g., "search") appear with elem.type === "text"
				( (attr = elem.getAttribute("type")) == null || attr.toLowerCase() === "text" );
		},

		// Position-in-collection
		"first": createPositionalPseudo(function() {
			return [ 0 ];
		}),

		"last": createPositionalPseudo(function( matchIndexes, length ) {
			return [ length - 1 ];
		}),

		"eq": createPositionalPseudo(function( matchIndexes, length, argument ) {
			return [ argument < 0 ? argument + length : argument ];
		}),

		"even": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 0;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"odd": createPositionalPseudo(function( matchIndexes, length ) {
			var i = 1;
			for ( ; i < length; i += 2 ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"lt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; --i >= 0; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		}),

		"gt": createPositionalPseudo(function( matchIndexes, length, argument ) {
			var i = argument < 0 ? argument + length : argument;
			for ( ; ++i < length; ) {
				matchIndexes.push( i );
			}
			return matchIndexes;
		})
	}
};

Expr.pseudos["nth"] = Expr.pseudos["eq"];

// Add button/input type pseudos
for ( i in { radio: true, checkbox: true, file: true, password: true, image: true } ) {
	Expr.pseudos[ i ] = createInputPseudo( i );
}
for ( i in { submit: true, reset: true } ) {
	Expr.pseudos[ i ] = createButtonPseudo( i );
}

// Easy API for creating new setFilters
function setFilters() {}
setFilters.prototype = Expr.filters = Expr.pseudos;
Expr.setFilters = new setFilters();

tokenize = Sizzle.tokenize = function( selector, parseOnly ) {
	var matched, match, tokens, type,
		soFar, groups, preFilters,
		cached = tokenCache[ selector + " " ];

	if ( cached ) {
		return parseOnly ? 0 : cached.slice( 0 );
	}

	soFar = selector;
	groups = [];
	preFilters = Expr.preFilter;

	while ( soFar ) {

		// Comma and first run
		if ( !matched || (match = rcomma.exec( soFar )) ) {
			if ( match ) {
				// Don't consume trailing commas as valid
				soFar = soFar.slice( match[0].length ) || soFar;
			}
			groups.push( (tokens = []) );
		}

		matched = false;

		// Combinators
		if ( (match = rcombinators.exec( soFar )) ) {
			matched = match.shift();
			tokens.push({
				value: matched,
				// Cast descendant combinators to space
				type: match[0].replace( rtrim, " " )
			});
			soFar = soFar.slice( matched.length );
		}

		// Filters
		for ( type in Expr.filter ) {
			if ( (match = matchExpr[ type ].exec( soFar )) && (!preFilters[ type ] ||
				(match = preFilters[ type ]( match ))) ) {
				matched = match.shift();
				tokens.push({
					value: matched,
					type: type,
					matches: match
				});
				soFar = soFar.slice( matched.length );
			}
		}

		if ( !matched ) {
			break;
		}
	}

	// Return the length of the invalid excess
	// if we're just parsing
	// Otherwise, throw an error or return tokens
	return parseOnly ?
		soFar.length :
		soFar ?
			Sizzle.error( selector ) :
			// Cache the tokens
			tokenCache( selector, groups ).slice( 0 );
};

function toSelector( tokens ) {
	var i = 0,
		len = tokens.length,
		selector = "";
	for ( ; i < len; i++ ) {
		selector += tokens[i].value;
	}
	return selector;
}

function addCombinator( matcher, combinator, base ) {
	var dir = combinator.dir,
		skip = combinator.next,
		key = skip || dir,
		checkNonElements = base && key === "parentNode",
		doneName = done++;

	return combinator.first ?
		// Check against closest ancestor/preceding element
		function( elem, context, xml ) {
			while ( (elem = elem[ dir ]) ) {
				if ( elem.nodeType === 1 || checkNonElements ) {
					return matcher( elem, context, xml );
				}
			}
			return false;
		} :

		// Check against all ancestor/preceding elements
		function( elem, context, xml ) {
			var oldCache, uniqueCache, outerCache,
				newCache = [ dirruns, doneName ];

			// We can't set arbitrary data on XML nodes, so they don't benefit from combinator caching
			if ( xml ) {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						if ( matcher( elem, context, xml ) ) {
							return true;
						}
					}
				}
			} else {
				while ( (elem = elem[ dir ]) ) {
					if ( elem.nodeType === 1 || checkNonElements ) {
						outerCache = elem[ expando ] || (elem[ expando ] = {});

						// Support: IE <9 only
						// Defend against cloned attroperties (jQuery gh-1709)
						uniqueCache = outerCache[ elem.uniqueID ] || (outerCache[ elem.uniqueID ] = {});

						if ( skip && skip === elem.nodeName.toLowerCase() ) {
							elem = elem[ dir ] || elem;
						} else if ( (oldCache = uniqueCache[ key ]) &&
							oldCache[ 0 ] === dirruns && oldCache[ 1 ] === doneName ) {

							// Assign to newCache so results back-propagate to previous elements
							return (newCache[ 2 ] = oldCache[ 2 ]);
						} else {
							// Reuse newcache so results back-propagate to previous elements
							uniqueCache[ key ] = newCache;

							// A match means we're done; a fail means we have to keep checking
							if ( (newCache[ 2 ] = matcher( elem, context, xml )) ) {
								return true;
							}
						}
					}
				}
			}
			return false;
		};
}

function elementMatcher( matchers ) {
	return matchers.length > 1 ?
		function( elem, context, xml ) {
			var i = matchers.length;
			while ( i-- ) {
				if ( !matchers[i]( elem, context, xml ) ) {
					return false;
				}
			}
			return true;
		} :
		matchers[0];
}

function multipleContexts( selector, contexts, results ) {
	var i = 0,
		len = contexts.length;
	for ( ; i < len; i++ ) {
		Sizzle( selector, contexts[i], results );
	}
	return results;
}

function condense( unmatched, map, filter, context, xml ) {
	var elem,
		newUnmatched = [],
		i = 0,
		len = unmatched.length,
		mapped = map != null;

	for ( ; i < len; i++ ) {
		if ( (elem = unmatched[i]) ) {
			if ( !filter || filter( elem, context, xml ) ) {
				newUnmatched.push( elem );
				if ( mapped ) {
					map.push( i );
				}
			}
		}
	}

	return newUnmatched;
}

function setMatcher( preFilter, selector, matcher, postFilter, postFinder, postSelector ) {
	if ( postFilter && !postFilter[ expando ] ) {
		postFilter = setMatcher( postFilter );
	}
	if ( postFinder && !postFinder[ expando ] ) {
		postFinder = setMatcher( postFinder, postSelector );
	}
	return markFunction(function( seed, results, context, xml ) {
		var temp, i, elem,
			preMap = [],
			postMap = [],
			preexisting = results.length,

			// Get initial elements from seed or context
			elems = seed || multipleContexts( selector || "*", context.nodeType ? [ context ] : context, [] ),

			// Prefilter to get matcher input, preserving a map for seed-results synchronization
			matcherIn = preFilter && ( seed || !selector ) ?
				condense( elems, preMap, preFilter, context, xml ) :
				elems,

			matcherOut = matcher ?
				// If we have a postFinder, or filtered seed, or non-seed postFilter or preexisting results,
				postFinder || ( seed ? preFilter : preexisting || postFilter ) ?

					// ...intermediate processing is necessary
					[] :

					// ...otherwise use results directly
					results :
				matcherIn;

		// Find primary matches
		if ( matcher ) {
			matcher( matcherIn, matcherOut, context, xml );
		}

		// Apply postFilter
		if ( postFilter ) {
			temp = condense( matcherOut, postMap );
			postFilter( temp, [], context, xml );

			// Un-match failing elements by moving them back to matcherIn
			i = temp.length;
			while ( i-- ) {
				if ( (elem = temp[i]) ) {
					matcherOut[ postMap[i] ] = !(matcherIn[ postMap[i] ] = elem);
				}
			}
		}

		if ( seed ) {
			if ( postFinder || preFilter ) {
				if ( postFinder ) {
					// Get the final matcherOut by condensing this intermediate into postFinder contexts
					temp = [];
					i = matcherOut.length;
					while ( i-- ) {
						if ( (elem = matcherOut[i]) ) {
							// Restore matcherIn since elem is not yet a final match
							temp.push( (matcherIn[i] = elem) );
						}
					}
					postFinder( null, (matcherOut = []), temp, xml );
				}

				// Move matched elements from seed to results to keep them synchronized
				i = matcherOut.length;
				while ( i-- ) {
					if ( (elem = matcherOut[i]) &&
						(temp = postFinder ? indexOf( seed, elem ) : preMap[i]) > -1 ) {

						seed[temp] = !(results[temp] = elem);
					}
				}
			}

		// Add elements to results, through postFinder if defined
		} else {
			matcherOut = condense(
				matcherOut === results ?
					matcherOut.splice( preexisting, matcherOut.length ) :
					matcherOut
			);
			if ( postFinder ) {
				postFinder( null, results, matcherOut, xml );
			} else {
				push.apply( results, matcherOut );
			}
		}
	});
}

function matcherFromTokens( tokens ) {
	var checkContext, matcher, j,
		len = tokens.length,
		leadingRelative = Expr.relative[ tokens[0].type ],
		implicitRelative = leadingRelative || Expr.relative[" "],
		i = leadingRelative ? 1 : 0,

		// The foundational matcher ensures that elements are reachable from top-level context(s)
		matchContext = addCombinator( function( elem ) {
			return elem === checkContext;
		}, implicitRelative, true ),
		matchAnyContext = addCombinator( function( elem ) {
			return indexOf( checkContext, elem ) > -1;
		}, implicitRelative, true ),
		matchers = [ function( elem, context, xml ) {
			var ret = ( !leadingRelative && ( xml || context !== outermostContext ) ) || (
				(checkContext = context).nodeType ?
					matchContext( elem, context, xml ) :
					matchAnyContext( elem, context, xml ) );
			// Avoid hanging onto element (issue #299)
			checkContext = null;
			return ret;
		} ];

	for ( ; i < len; i++ ) {
		if ( (matcher = Expr.relative[ tokens[i].type ]) ) {
			matchers = [ addCombinator(elementMatcher( matchers ), matcher) ];
		} else {
			matcher = Expr.filter[ tokens[i].type ].apply( null, tokens[i].matches );

			// Return special upon seeing a positional matcher
			if ( matcher[ expando ] ) {
				// Find the next relative operator (if any) for proper handling
				j = ++i;
				for ( ; j < len; j++ ) {
					if ( Expr.relative[ tokens[j].type ] ) {
						break;
					}
				}
				return setMatcher(
					i > 1 && elementMatcher( matchers ),
					i > 1 && toSelector(
						// If the preceding token was a descendant combinator, insert an implicit any-element `*`
						tokens.slice( 0, i - 1 ).concat({ value: tokens[ i - 2 ].type === " " ? "*" : "" })
					).replace( rtrim, "$1" ),
					matcher,
					i < j && matcherFromTokens( tokens.slice( i, j ) ),
					j < len && matcherFromTokens( (tokens = tokens.slice( j )) ),
					j < len && toSelector( tokens )
				);
			}
			matchers.push( matcher );
		}
	}

	return elementMatcher( matchers );
}

function matcherFromGroupMatchers( elementMatchers, setMatchers ) {
	var bySet = setMatchers.length > 0,
		byElement = elementMatchers.length > 0,
		superMatcher = function( seed, context, xml, results, outermost ) {
			var elem, j, matcher,
				matchedCount = 0,
				i = "0",
				unmatched = seed && [],
				setMatched = [],
				contextBackup = outermostContext,
				// We must always have either seed elements or outermost context
				elems = seed || byElement && Expr.find["TAG"]( "*", outermost ),
				// Use integer dirruns iff this is the outermost matcher
				dirrunsUnique = (dirruns += contextBackup == null ? 1 : Math.random() || 0.1),
				len = elems.length;

			if ( outermost ) {
				outermostContext = context === document || context || outermost;
			}

			// Add elements passing elementMatchers directly to results
			// Support: IE<9, Safari
			// Tolerate NodeList properties (IE: "length"; Safari: <number>) matching elements by id
			for ( ; i !== len && (elem = elems[i]) != null; i++ ) {
				if ( byElement && elem ) {
					j = 0;
					if ( !context && elem.ownerDocument !== document ) {
						setDocument( elem );
						xml = !documentIsHTML;
					}
					while ( (matcher = elementMatchers[j++]) ) {
						if ( matcher( elem, context || document, xml) ) {
							results.push( elem );
							break;
						}
					}
					if ( outermost ) {
						dirruns = dirrunsUnique;
					}
				}

				// Track unmatched elements for set filters
				if ( bySet ) {
					// They will have gone through all possible matchers
					if ( (elem = !matcher && elem) ) {
						matchedCount--;
					}

					// Lengthen the array for every element, matched or not
					if ( seed ) {
						unmatched.push( elem );
					}
				}
			}

			// `i` is now the count of elements visited above, and adding it to `matchedCount`
			// makes the latter nonnegative.
			matchedCount += i;

			// Apply set filters to unmatched elements
			// NOTE: This can be skipped if there are no unmatched elements (i.e., `matchedCount`
			// equals `i`), unless we didn't visit _any_ elements in the above loop because we have
			// no element matchers and no seed.
			// Incrementing an initially-string "0" `i` allows `i` to remain a string only in that
			// case, which will result in a "00" `matchedCount` that differs from `i` but is also
			// numerically zero.
			if ( bySet && i !== matchedCount ) {
				j = 0;
				while ( (matcher = setMatchers[j++]) ) {
					matcher( unmatched, setMatched, context, xml );
				}

				if ( seed ) {
					// Reintegrate element matches to eliminate the need for sorting
					if ( matchedCount > 0 ) {
						while ( i-- ) {
							if ( !(unmatched[i] || setMatched[i]) ) {
								setMatched[i] = pop.call( results );
							}
						}
					}

					// Discard index placeholder values to get only actual matches
					setMatched = condense( setMatched );
				}

				// Add matches to results
				push.apply( results, setMatched );

				// Seedless set matches succeeding multiple successful matchers stipulate sorting
				if ( outermost && !seed && setMatched.length > 0 &&
					( matchedCount + setMatchers.length ) > 1 ) {

					Sizzle.uniqueSort( results );
				}
			}

			// Override manipulation of globals by nested matchers
			if ( outermost ) {
				dirruns = dirrunsUnique;
				outermostContext = contextBackup;
			}

			return unmatched;
		};

	return bySet ?
		markFunction( superMatcher ) :
		superMatcher;
}

compile = Sizzle.compile = function( selector, match /* Internal Use Only */ ) {
	var i,
		setMatchers = [],
		elementMatchers = [],
		cached = compilerCache[ selector + " " ];

	if ( !cached ) {
		// Generate a function of recursive functions that can be used to check each element
		if ( !match ) {
			match = tokenize( selector );
		}
		i = match.length;
		while ( i-- ) {
			cached = matcherFromTokens( match[i] );
			if ( cached[ expando ] ) {
				setMatchers.push( cached );
			} else {
				elementMatchers.push( cached );
			}
		}

		// Cache the compiled function
		cached = compilerCache( selector, matcherFromGroupMatchers( elementMatchers, setMatchers ) );

		// Save selector and tokenization
		cached.selector = selector;
	}
	return cached;
};

/**
 * A low-level selection function that works with Sizzle's compiled
 *  selector functions
 * @param {String|Function} selector A selector or a pre-compiled
 *  selector function built with Sizzle.compile
 * @param {Element} context
 * @param {Array} [results]
 * @param {Array} [seed] A set of elements to match against
 */
select = Sizzle.select = function( selector, context, results, seed ) {
	var i, tokens, token, type, find,
		compiled = typeof selector === "function" && selector,
		match = !seed && tokenize( (selector = compiled.selector || selector) );

	results = results || [];

	// Try to minimize operations if there is only one selector in the list and no seed
	// (the latter of which guarantees us context)
	if ( match.length === 1 ) {

		// Reduce context if the leading compound selector is an ID
		tokens = match[0] = match[0].slice( 0 );
		if ( tokens.length > 2 && (token = tokens[0]).type === "ID" &&
				context.nodeType === 9 && documentIsHTML && Expr.relative[ tokens[1].type ] ) {

			context = ( Expr.find["ID"]( token.matches[0].replace(runescape, funescape), context ) || [] )[0];
			if ( !context ) {
				return results;

			// Precompiled matchers will still verify ancestry, so step up a level
			} else if ( compiled ) {
				context = context.parentNode;
			}

			selector = selector.slice( tokens.shift().value.length );
		}

		// Fetch a seed set for right-to-left matching
		i = matchExpr["needsContext"].test( selector ) ? 0 : tokens.length;
		while ( i-- ) {
			token = tokens[i];

			// Abort if we hit a combinator
			if ( Expr.relative[ (type = token.type) ] ) {
				break;
			}
			if ( (find = Expr.find[ type ]) ) {
				// Search, expanding context for leading sibling combinators
				if ( (seed = find(
					token.matches[0].replace( runescape, funescape ),
					rsibling.test( tokens[0].type ) && testContext( context.parentNode ) || context
				)) ) {

					// If seed is empty or no tokens remain, we can return early
					tokens.splice( i, 1 );
					selector = seed.length && toSelector( tokens );
					if ( !selector ) {
						push.apply( results, seed );
						return results;
					}

					break;
				}
			}
		}
	}

	// Compile and execute a filtering function if one is not provided
	// Provide `match` to avoid retokenization if we modified the selector above
	( compiled || compile( selector, match ) )(
		seed,
		context,
		!documentIsHTML,
		results,
		!context || rsibling.test( selector ) && testContext( context.parentNode ) || context
	);
	return results;
};

// One-time assignments

// Sort stability
support.sortStable = expando.split("").sort( sortOrder ).join("") === expando;

// Support: Chrome 14-35+
// Always assume duplicates if they aren't passed to the comparison function
support.detectDuplicates = !!hasDuplicate;

// Initialize against the default document
setDocument();

// Support: Webkit<537.32 - Safari 6.0.3/Chrome 25 (fixed in Chrome 27)
// Detached nodes confoundingly follow *each other*
support.sortDetached = assert(function( el ) {
	// Should return 1, but returns 4 (following)
	return el.compareDocumentPosition( document.createElement("fieldset") ) & 1;
});

// Support: IE<8
// Prevent attribute/property "interpolation"
// https://msdn.microsoft.com/en-us/library/ms536429%28VS.85%29.aspx
if ( !assert(function( el ) {
	el.innerHTML = "<a href='#'></a>";
	return el.firstChild.getAttribute("href") === "#" ;
}) ) {
	addHandle( "type|href|height|width", function( elem, name, isXML ) {
		if ( !isXML ) {
			return elem.getAttribute( name, name.toLowerCase() === "type" ? 1 : 2 );
		}
	});
}

// Support: IE<9
// Use defaultValue in place of getAttribute("value")
if ( !support.attributes || !assert(function( el ) {
	el.innerHTML = "<input/>";
	el.firstChild.setAttribute( "value", "" );
	return el.firstChild.getAttribute( "value" ) === "";
}) ) {
	addHandle( "value", function( elem, name, isXML ) {
		if ( !isXML && elem.nodeName.toLowerCase() === "input" ) {
			return elem.defaultValue;
		}
	});
}

// Support: IE<9
// Use getAttributeNode to fetch booleans when getAttribute lies
if ( !assert(function( el ) {
	return el.getAttribute("disabled") == null;
}) ) {
	addHandle( booleans, function( elem, name, isXML ) {
		var val;
		if ( !isXML ) {
			return elem[ name ] === true ? name.toLowerCase() :
					(val = elem.getAttributeNode( name )) && val.specified ?
					val.value :
				null;
		}
	});
}

return Sizzle;

})( window );



jQuery.find = Sizzle;
jQuery.expr = Sizzle.selectors;

// Deprecated
jQuery.expr[ ":" ] = jQuery.expr.pseudos;
jQuery.uniqueSort = jQuery.unique = Sizzle.uniqueSort;
jQuery.text = Sizzle.getText;
jQuery.isXMLDoc = Sizzle.isXML;
jQuery.contains = Sizzle.contains;
jQuery.escapeSelector = Sizzle.escape;




var dir = function( elem, dir, until ) {
	var matched = [],
		truncate = until !== undefined;

	while ( ( elem = elem[ dir ] ) && elem.nodeType !== 9 ) {
		if ( elem.nodeType === 1 ) {
			if ( truncate && jQuery( elem ).is( until ) ) {
				break;
			}
			matched.push( elem );
		}
	}
	return matched;
};


var siblings = function( n, elem ) {
	var matched = [];

	for ( ; n; n = n.nextSibling ) {
		if ( n.nodeType === 1 && n !== elem ) {
			matched.push( n );
		}
	}

	return matched;
};


var rneedsContext = jQuery.expr.match.needsContext;



function nodeName( elem, name ) {

  return elem.nodeName && elem.nodeName.toLowerCase() === name.toLowerCase();

};
var rsingleTag = ( /^<([a-z][^\/\0>:\x20\t\r\n\f]*)[\x20\t\r\n\f]*\/?>(?:<\/\1>|)$/i );



// Implement the identical functionality for filter and not
function winnow( elements, qualifier, not ) {
	if ( isFunction( qualifier ) ) {
		return jQuery.grep( elements, function( elem, i ) {
			return !!qualifier.call( elem, i, elem ) !== not;
		} );
	}

	// Single element
	if ( qualifier.nodeType ) {
		return jQuery.grep( elements, function( elem ) {
			return ( elem === qualifier ) !== not;
		} );
	}

	// Arraylike of elements (jQuery, arguments, Array)
	if ( typeof qualifier !== "string" ) {
		return jQuery.grep( elements, function( elem ) {
			return ( indexOf.call( qualifier, elem ) > -1 ) !== not;
		} );
	}

	// Filtered directly for both simple and complex selectors
	return jQuery.filter( qualifier, elements, not );
}

jQuery.filter = function( expr, elems, not ) {
	var elem = elems[ 0 ];

	if ( not ) {
		expr = ":not(" + expr + ")";
	}

	if ( elems.length === 1 && elem.nodeType === 1 ) {
		return jQuery.find.matchesSelector( elem, expr ) ? [ elem ] : [];
	}

	return jQuery.find.matches( expr, jQuery.grep( elems, function( elem ) {
		return elem.nodeType === 1;
	} ) );
};

jQuery.fn.extend( {
	find: function( selector ) {
		var i, ret,
			len = this.length,
			self = this;

		if ( typeof selector !== "string" ) {
			return this.pushStack( jQuery( selector ).filter( function() {
				for ( i = 0; i < len; i++ ) {
					if ( jQuery.contains( self[ i ], this ) ) {
						return true;
					}
				}
			} ) );
		}

		ret = this.pushStack( [] );

		for ( i = 0; i < len; i++ ) {
			jQuery.find( selector, self[ i ], ret );
		}

		return len > 1 ? jQuery.uniqueSort( ret ) : ret;
	},
	filter: function( selector ) {
		return this.pushStack( winnow( this, selector || [], false ) );
	},
	not: function( selector ) {
		return this.pushStack( winnow( this, selector || [], true ) );
	},
	is: function( selector ) {
		return !!winnow(
			this,

			// If this is a positional/relative selector, check membership in the returned set
			// so $("p:first").is("p:last") won't return true for a doc with two "p".
			typeof selector === "string" && rneedsContext.test( selector ) ?
				jQuery( selector ) :
				selector || [],
			false
		).length;
	}
} );


// Initialize a jQuery object


// A central reference to the root jQuery(document)
var rootjQuery,

	// A simple way to check for HTML strings
	// Prioritize #id over <tag> to avoid XSS via location.hash (#9521)
	// Strict HTML recognition (#11290: must start with <)
	// Shortcut simple #id case for speed
	rquickExpr = /^(?:\s*(<[\w\W]+>)[^>]*|#([\w-]+))$/,

	init = jQuery.fn.init = function( selector, context, root ) {
		var match, elem;

		// HANDLE: $(""), $(null), $(undefined), $(false)
		if ( !selector ) {
			return this;
		}

		// Method init() accepts an alternate rootjQuery
		// so migrate can support jQuery.sub (gh-2101)
		root = root || rootjQuery;

		// Handle HTML strings
		if ( typeof selector === "string" ) {
			if ( selector[ 0 ] === "<" &&
				selector[ selector.length - 1 ] === ">" &&
				selector.length >= 3 ) {

				// Assume that strings that start and end with <> are HTML and skip the regex check
				match = [ null, selector, null ];

			} else {
				match = rquickExpr.exec( selector );
			}

			// Match html or make sure no context is specified for #id
			if ( match && ( match[ 1 ] || !context ) ) {

				// HANDLE: $(html) -> $(array)
				if ( match[ 1 ] ) {
					context = context instanceof jQuery ? context[ 0 ] : context;

					// Option to run scripts is true for back-compat
					// Intentionally let the error be thrown if parseHTML is not present
					jQuery.merge( this, jQuery.parseHTML(
						match[ 1 ],
						context && context.nodeType ? context.ownerDocument || context : document,
						true
					) );

					// HANDLE: $(html, props)
					if ( rsingleTag.test( match[ 1 ] ) && jQuery.isPlainObject( context ) ) {
						for ( match in context ) {

							// Properties of context are called as methods if possible
							if ( isFunction( this[ match ] ) ) {
								this[ match ]( context[ match ] );

							// ...and otherwise set as attributes
							} else {
								this.attr( match, context[ match ] );
							}
						}
					}

					return this;

				// HANDLE: $(#id)
				} else {
					elem = document.getElementById( match[ 2 ] );

					if ( elem ) {

						// Inject the element directly into the jQuery object
						this[ 0 ] = elem;
						this.length = 1;
					}
					return this;
				}

			// HANDLE: $(expr, $(...))
			} else if ( !context || context.jquery ) {
				return ( context || root ).find( selector );

			// HANDLE: $(expr, context)
			// (which is just equivalent to: $(context).find(expr)
			} else {
				return this.constructor( context ).find( selector );
			}

		// HANDLE: $(DOMElement)
		} else if ( selector.nodeType ) {
			this[ 0 ] = selector;
			this.length = 1;
			return this;

		// HANDLE: $(function)
		// Shortcut for document ready
		} else if ( isFunction( selector ) ) {
			return root.ready !== undefined ?
				root.ready( selector ) :

				// Execute immediately if ready is not present
				selector( jQuery );
		}

		return jQuery.makeArray( selector, this );
	};

// Give the init function the jQuery prototype for later instantiation
init.prototype = jQuery.fn;

// Initialize central reference
rootjQuery = jQuery( document );


var rparentsprev = /^(?:parents|prev(?:Until|All))/,

	// Methods guaranteed to produce a unique set when starting from a unique set
	guaranteedUnique = {
		children: true,
		contents: true,
		next: true,
		prev: true
	};

jQuery.fn.extend( {
	has: function( target ) {
		var targets = jQuery( target, this ),
			l = targets.length;

		return this.filter( function() {
			var i = 0;
			for ( ; i < l; i++ ) {
				if ( jQuery.contains( this, targets[ i ] ) ) {
					return true;
				}
			}
		} );
	},

	closest: function( selectors, context ) {
		var cur,
			i = 0,
			l = this.length,
			matched = [],
			targets = typeof selectors !== "string" && jQuery( selectors );

		// Positional selectors never match, since there's no _selection_ context
		if ( !rneedsContext.test( selectors ) ) {
			for ( ; i < l; i++ ) {
				for ( cur = this[ i ]; cur && cur !== context; cur = cur.parentNode ) {

					// Always skip document fragments
					if ( cur.nodeType < 11 && ( targets ?
						targets.index( cur ) > -1 :

						// Don't pass non-elements to Sizzle
						cur.nodeType === 1 &&
							jQuery.find.matchesSelector( cur, selectors ) ) ) {

						matched.push( cur );
						break;
					}
				}
			}
		}

		return this.pushStack( matched.length > 1 ? jQuery.uniqueSort( matched ) : matched );
	},

	// Determine the position of an element within the set
	index: function( elem ) {

		// No argument, return index in parent
		if ( !elem ) {
			return ( this[ 0 ] && this[ 0 ].parentNode ) ? this.first().prevAll().length : -1;
		}

		// Index in selector
		if ( typeof elem === "string" ) {
			return indexOf.call( jQuery( elem ), this[ 0 ] );
		}

		// Locate the position of the desired element
		return indexOf.call( this,

			// If it receives a jQuery object, the first element is used
			elem.jquery ? elem[ 0 ] : elem
		);
	},

	add: function( selector, context ) {
		return this.pushStack(
			jQuery.uniqueSort(
				jQuery.merge( this.get(), jQuery( selector, context ) )
			)
		);
	},

	addBack: function( selector ) {
		return this.add( selector == null ?
			this.prevObject : this.prevObject.filter( selector )
		);
	}
} );

function sibling( cur, dir ) {
	while ( ( cur = cur[ dir ] ) && cur.nodeType !== 1 ) {}
	return cur;
}

jQuery.each( {
	parent: function( elem ) {
		var parent = elem.parentNode;
		return parent && parent.nodeType !== 11 ? parent : null;
	},
	parents: function( elem ) {
		return dir( elem, "parentNode" );
	},
	parentsUntil: function( elem, i, until ) {
		return dir( elem, "parentNode", until );
	},
	next: function( elem ) {
		return sibling( elem, "nextSibling" );
	},
	prev: function( elem ) {
		return sibling( elem, "previousSibling" );
	},
	nextAll: function( elem ) {
		return dir( elem, "nextSibling" );
	},
	prevAll: function( elem ) {
		return dir( elem, "previousSibling" );
	},
	nextUntil: function( elem, i, until ) {
		return dir( elem, "nextSibling", until );
	},
	prevUntil: function( elem, i, until ) {
		return dir( elem, "previousSibling", until );
	},
	siblings: function( elem ) {
		return siblings( ( elem.parentNode || {} ).firstChild, elem );
	},
	children: function( elem ) {
		return siblings( elem.firstChild );
	},
	contents: function( elem ) {
        if ( nodeName( elem, "iframe" ) ) {
            return elem.contentDocument;
        }

        // Support: IE 9 - 11 only, iOS 7 only, Android Browser <=4.3 only
        // Treat the template element as a regular one in browsers that
        // don't support it.
        if ( nodeName( elem, "template" ) ) {
            elem = elem.content || elem;
        }

        return jQuery.merge( [], elem.childNodes );
	}
}, function( name, fn ) {
	jQuery.fn[ name ] = function( until, selector ) {
		var matched = jQuery.map( this, fn, until );

		if ( name.slice( -5 ) !== "Until" ) {
			selector = until;
		}

		if ( selector && typeof selector === "string" ) {
			matched = jQuery.filter( selector, matched );
		}

		if ( this.length > 1 ) {

			// Remove duplicates
			if ( !guaranteedUnique[ name ] ) {
				jQuery.uniqueSort( matched );
			}

			// Reverse order for parents* and prev-derivatives
			if ( rparentsprev.test( name ) ) {
				matched.reverse();
			}
		}

		return this.pushStack( matched );
	};
} );
var rnothtmlwhite = ( /[^\x20\t\r\n\f]+/g );



// Convert String-formatted options into Object-formatted ones
function createOptions( options ) {
	var object = {};
	jQuery.each( options.match( rnothtmlwhite ) || [], function( _, flag ) {
		object[ flag ] = true;
	} );
	return object;
}

/*
 * Create a callback list using the following parameters:
 *
 *	options: an optional list of space-separated options that will change how
 *			the callback list behaves or a more traditional option object
 *
 * By default a callback list will act like an event callback list and can be
 * "fired" multiple times.
 *
 * Possible options:
 *
 *	once:			will ensure the callback list can only be fired once (like a Deferred)
 *
 *	memory:			will keep track of previous values and will call any callback added
 *					after the list has been fired right away with the latest "memorized"
 *					values (like a Deferred)
 *
 *	unique:			will ensure a callback can only be added once (no duplicate in the list)
 *
 *	stopOnFalse:	interrupt callings when a callback returns false
 *
 */
jQuery.Callbacks = function( options ) {

	// Convert options from String-formatted to Object-formatted if needed
	// (we check in cache first)
	options = typeof options === "string" ?
		createOptions( options ) :
		jQuery.extend( {}, options );

	var // Flag to know if list is currently firing
		firing,

		// Last fire value for non-forgettable lists
		memory,

		// Flag to know if list was already fired
		fired,

		// Flag to prevent firing
		locked,

		// Actual callback list
		list = [],

		// Queue of execution data for repeatable lists
		queue = [],

		// Index of currently firing callback (modified by add/remove as needed)
		firingIndex = -1,

		// Fire callbacks
		fire = function() {

			// Enforce single-firing
			locked = locked || options.once;

			// Execute callbacks for all pending executions,
			// respecting firingIndex overrides and runtime changes
			fired = firing = true;
			for ( ; queue.length; firingIndex = -1 ) {
				memory = queue.shift();
				while ( ++firingIndex < list.length ) {

					// Run callback and check for early termination
					if ( list[ firingIndex ].apply( memory[ 0 ], memory[ 1 ] ) === false &&
						options.stopOnFalse ) {

						// Jump to end and forget the data so .add doesn't re-fire
						firingIndex = list.length;
						memory = false;
					}
				}
			}

			// Forget the data if we're done with it
			if ( !options.memory ) {
				memory = false;
			}

			firing = false;

			// Clean up if we're done firing for good
			if ( locked ) {

				// Keep an empty list if we have data for future add calls
				if ( memory ) {
					list = [];

				// Otherwise, this object is spent
				} else {
					list = "";
				}
			}
		},

		// Actual Callbacks object
		self = {

			// Add a callback or a collection of callbacks to the list
			add: function() {
				if ( list ) {

					// If we have memory from a past run, we should fire after adding
					if ( memory && !firing ) {
						firingIndex = list.length - 1;
						queue.push( memory );
					}

					( function add( args ) {
						jQuery.each( args, function( _, arg ) {
							if ( isFunction( arg ) ) {
								if ( !options.unique || !self.has( arg ) ) {
									list.push( arg );
								}
							} else if ( arg && arg.length && toType( arg ) !== "string" ) {

								// Inspect recursively
								add( arg );
							}
						} );
					} )( arguments );

					if ( memory && !firing ) {
						fire();
					}
				}
				return this;
			},

			// Remove a callback from the list
			remove: function() {
				jQuery.each( arguments, function( _, arg ) {
					var index;
					while ( ( index = jQuery.inArray( arg, list, index ) ) > -1 ) {
						list.splice( index, 1 );

						// Handle firing indexes
						if ( index <= firingIndex ) {
							firingIndex--;
						}
					}
				} );
				return this;
			},

			// Check if a given callback is in the list.
			// If no argument is given, return whether or not list has callbacks attached.
			has: function( fn ) {
				return fn ?
					jQuery.inArray( fn, list ) > -1 :
					list.length > 0;
			},

			// Remove all callbacks from the list
			empty: function() {
				if ( list ) {
					list = [];
				}
				return this;
			},

			// Disable .fire and .add
			// Abort any current/pending executions
			// Clear all callbacks and values
			disable: function() {
				locked = queue = [];
				list = memory = "";
				return this;
			},
			disabled: function() {
				return !list;
			},

			// Disable .fire
			// Also disable .add unless we have memory (since it would have no effect)
			// Abort any pending executions
			lock: function() {
				locked = queue = [];
				if ( !memory && !firing ) {
					list = memory = "";
				}
				return this;
			},
			locked: function() {
				return !!locked;
			},

			// Call all callbacks with the given context and arguments
			fireWith: function( context, args ) {
				if ( !locked ) {
					args = args || [];
					args = [ context, args.slice ? args.slice() : args ];
					queue.push( args );
					if ( !firing ) {
						fire();
					}
				}
				return this;
			},

			// Call all the callbacks with the given arguments
			fire: function() {
				self.fireWith( this, arguments );
				return this;
			},

			// To know if the callbacks have already been called at least once
			fired: function() {
				return !!fired;
			}
		};

	return self;
};


function Identity( v ) {
	return v;
}
function Thrower( ex ) {
	throw ex;
}

function adoptValue( value, resolve, reject, noValue ) {
	var method;

	try {

		// Check for promise aspect first to privilege synchronous behavior
		if ( value && isFunction( ( method = value.promise ) ) ) {
			method.call( value ).done( resolve ).fail( reject );

		// Other thenables
		} else if ( value && isFunction( ( method = value.then ) ) ) {
			method.call( value, resolve, reject );

		// Other non-thenables
		} else {

			// Control `resolve` arguments by letting Array#slice cast boolean `noValue` to integer:
			// * false: [ value ].slice( 0 ) => resolve( value )
			// * true: [ value ].slice( 1 ) => resolve()
			resolve.apply( undefined, [ value ].slice( noValue ) );
		}

	// For Promises/A+, convert exceptions into rejections
	// Since jQuery.when doesn't unwrap thenables, we can skip the extra checks appearing in
	// Deferred#then to conditionally suppress rejection.
	} catch ( value ) {

		// Support: Android 4.0 only
		// Strict mode functions invoked without .call/.apply get global-object context
		reject.apply( undefined, [ value ] );
	}
}

jQuery.extend( {

	Deferred: function( func ) {
		var tuples = [

				// action, add listener, callbacks,
				// ... .then handlers, argument index, [final state]
				[ "notify", "progress", jQuery.Callbacks( "memory" ),
					jQuery.Callbacks( "memory" ), 2 ],
				[ "resolve", "done", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 0, "resolved" ],
				[ "reject", "fail", jQuery.Callbacks( "once memory" ),
					jQuery.Callbacks( "once memory" ), 1, "rejected" ]
			],
			state = "pending",
			promise = {
				state: function() {
					return state;
				},
				always: function() {
					deferred.done( arguments ).fail( arguments );
					return this;
				},
				"catch": function( fn ) {
					return promise.then( null, fn );
				},

				// Keep pipe for back-compat
				pipe: function( /* fnDone, fnFail, fnProgress */ ) {
					var fns = arguments;

					return jQuery.Deferred( function( newDefer ) {
						jQuery.each( tuples, function( i, tuple ) {

							// Map tuples (progress, done, fail) to arguments (done, fail, progress)
							var fn = isFunction( fns[ tuple[ 4 ] ] ) && fns[ tuple[ 4 ] ];

							// deferred.progress(function() { bind to newDefer or newDefer.notify })
							// deferred.done(function() { bind to newDefer or newDefer.resolve })
							// deferred.fail(function() { bind to newDefer or newDefer.reject })
							deferred[ tuple[ 1 ] ]( function() {
								var returned = fn && fn.apply( this, arguments );
								if ( returned && isFunction( returned.promise ) ) {
									returned.promise()
										.progress( newDefer.notify )
										.done( newDefer.resolve )
										.fail( newDefer.reject );
								} else {
									newDefer[ tuple[ 0 ] + "With" ](
										this,
										fn ? [ returned ] : arguments
									);
								}
							} );
						} );
						fns = null;
					} ).promise();
				},
				then: function( onFulfilled, onRejected, onProgress ) {
					var maxDepth = 0;
					function resolve( depth, deferred, handler, special ) {
						return function() {
							var that = this,
								args = arguments,
								mightThrow = function() {
									var returned, then;

									// Support: Promises/A+ section 2.3.3.3.3
									// https://promisesaplus.com/#point-59
									// Ignore double-resolution attempts
									if ( depth < maxDepth ) {
										return;
									}

									returned = handler.apply( that, args );

									// Support: Promises/A+ section 2.3.1
									// https://promisesaplus.com/#point-48
									if ( returned === deferred.promise() ) {
										throw new TypeError( "Thenable self-resolution" );
									}

									// Support: Promises/A+ sections 2.3.3.1, 3.5
									// https://promisesaplus.com/#point-54
									// https://promisesaplus.com/#point-75
									// Retrieve `then` only once
									then = returned &&

										// Support: Promises/A+ section 2.3.4
										// https://promisesaplus.com/#point-64
										// Only check objects and functions for thenability
										( typeof returned === "object" ||
											typeof returned === "function" ) &&
										returned.then;

									// Handle a returned thenable
									if ( isFunction( then ) ) {

										// Special processors (notify) just wait for resolution
										if ( special ) {
											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special )
											);

										// Normal processors (resolve) also hook into progress
										} else {

											// ...and disregard older resolution values
											maxDepth++;

											then.call(
												returned,
												resolve( maxDepth, deferred, Identity, special ),
												resolve( maxDepth, deferred, Thrower, special ),
												resolve( maxDepth, deferred, Identity,
													deferred.notifyWith )
											);
										}

									// Handle all other returned values
									} else {

										// Only substitute handlers pass on context
										// and multiple values (non-spec behavior)
										if ( handler !== Identity ) {
											that = undefined;
											args = [ returned ];
										}

										// Process the value(s)
										// Default process is resolve
										( special || deferred.resolveWith )( that, args );
									}
								},

								// Only normal processors (resolve) catch and reject exceptions
								process = special ?
									mightThrow :
									function() {
										try {
											mightThrow();
										} catch ( e ) {

											if ( jQuery.Deferred.exceptionHook ) {
												jQuery.Deferred.exceptionHook( e,
													process.stackTrace );
											}

											// Support: Promises/A+ section 2.3.3.3.4.1
											// https://promisesaplus.com/#point-61
											// Ignore post-resolution exceptions
											if ( depth + 1 >= maxDepth ) {

												// Only substitute handlers pass on context
												// and multiple values (non-spec behavior)
												if ( handler !== Thrower ) {
													that = undefined;
													args = [ e ];
												}

												deferred.rejectWith( that, args );
											}
										}
									};

							// Support: Promises/A+ section 2.3.3.3.1
							// https://promisesaplus.com/#point-57
							// Re-resolve promises immediately to dodge false rejection from
							// subsequent errors
							if ( depth ) {
								process();
							} else {

								// Call an optional hook to record the stack, in case of exception
								// since it's otherwise lost when execution goes async
								if ( jQuery.Deferred.getStackHook ) {
									process.stackTrace = jQuery.Deferred.getStackHook();
								}
								window.setTimeout( process );
							}
						};
					}

					return jQuery.Deferred( function( newDefer ) {

						// progress_handlers.add( ... )
						tuples[ 0 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onProgress ) ?
									onProgress :
									Identity,
								newDefer.notifyWith
							)
						);

						// fulfilled_handlers.add( ... )
						tuples[ 1 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onFulfilled ) ?
									onFulfilled :
									Identity
							)
						);

						// rejected_handlers.add( ... )
						tuples[ 2 ][ 3 ].add(
							resolve(
								0,
								newDefer,
								isFunction( onRejected ) ?
									onRejected :
									Thrower
							)
						);
					} ).promise();
				},

				// Get a promise for this deferred
				// If obj is provided, the promise aspect is added to the object
				promise: function( obj ) {
					return obj != null ? jQuery.extend( obj, promise ) : promise;
				}
			},
			deferred = {};

		// Add list-specific methods
		jQuery.each( tuples, function( i, tuple ) {
			var list = tuple[ 2 ],
				stateString = tuple[ 5 ];

			// promise.progress = list.add
			// promise.done = list.add
			// promise.fail = list.add
			promise[ tuple[ 1 ] ] = list.add;

			// Handle state
			if ( stateString ) {
				list.add(
					function() {

						// state = "resolved" (i.e., fulfilled)
						// state = "rejected"
						state = stateString;
					},

					// rejected_callbacks.disable
					// fulfilled_callbacks.disable
					tuples[ 3 - i ][ 2 ].disable,

					// rejected_handlers.disable
					// fulfilled_handlers.disable
					tuples[ 3 - i ][ 3 ].disable,

					// progress_callbacks.lock
					tuples[ 0 ][ 2 ].lock,

					// progress_handlers.lock
					tuples[ 0 ][ 3 ].lock
				);
			}

			// progress_handlers.fire
			// fulfilled_handlers.fire
			// rejected_handlers.fire
			list.add( tuple[ 3 ].fire );

			// deferred.notify = function() { deferred.notifyWith(...) }
			// deferred.resolve = function() { deferred.resolveWith(...) }
			// deferred.reject = function() { deferred.rejectWith(...) }
			deferred[ tuple[ 0 ] ] = function() {
				deferred[ tuple[ 0 ] + "With" ]( this === deferred ? undefined : this, arguments );
				return this;
			};

			// deferred.notifyWith = list.fireWith
			// deferred.resolveWith = list.fireWith
			// deferred.rejectWith = list.fireWith
			deferred[ tuple[ 0 ] + "With" ] = list.fireWith;
		} );

		// Make the deferred a promise
		promise.promise( deferred );

		// Call given func if any
		if ( func ) {
			func.call( deferred, deferred );
		}

		// All done!
		return deferred;
	},

	// Deferred helper
	when: function( singleValue ) {
		var

			// count of uncompleted subordinates
			remaining = arguments.length,

			// count of unprocessed arguments
			i = remaining,

			// subordinate fulfillment data
			resolveContexts = Array( i ),
			resolveValues = slice.call( arguments ),

			// the master Deferred
			master = jQuery.Deferred(),

			// subordinate callback factory
			updateFunc = function( i ) {
				return function( value ) {
					resolveContexts[ i ] = this;
					resolveValues[ i ] = arguments.length > 1 ? slice.call( arguments ) : value;
					if ( !( --remaining ) ) {
						master.resolveWith( resolveContexts, resolveValues );
					}
				};
			};

		// Single- and empty arguments are adopted like Promise.resolve
		if ( remaining <= 1 ) {
			adoptValue( singleValue, master.done( updateFunc( i ) ).resolve, master.reject,
				!remaining );

			// Use .then() to unwrap secondary thenables (cf. gh-3000)
			if ( master.state() === "pending" ||
				isFunction( resolveValues[ i ] && resolveValues[ i ].then ) ) {

				return master.then();
			}
		}

		// Multiple arguments are aggregated like Promise.all array elements
		while ( i-- ) {
			adoptValue( resolveValues[ i ], updateFunc( i ), master.reject );
		}

		return master.promise();
	}
} );


// These usually indicate a programmer mistake during development,
// warn about them ASAP rather than swallowing them by default.
var rerrorNames = /^(Eval|Internal|Range|Reference|Syntax|Type|URI)Error$/;

jQuery.Deferred.exceptionHook = function( error, stack ) {

	// Support: IE 8 - 9 only
	// Console exists when dev tools are open, which can happen at any time
	if ( window.console && window.console.warn && error && rerrorNames.test( error.name ) ) {
		window.console.warn( "jQuery.Deferred exception: " + error.message, error.stack, stack );
	}
};




jQuery.readyException = function( error ) {
	window.setTimeout( function() {
		throw error;
	} );
};




// The deferred used on DOM ready
var readyList = jQuery.Deferred();

jQuery.fn.ready = function( fn ) {

	readyList
		.then( fn )

		// Wrap jQuery.readyException in a function so that the lookup
		// happens at the time of error handling instead of callback
		// registration.
		.catch( function( error ) {
			jQuery.readyException( error );
		} );

	return this;
};

jQuery.extend( {

	// Is the DOM ready to be used? Set to true once it occurs.
	isReady: false,

	// A counter to track how many items to wait for before
	// the ready event fires. See #6781
	readyWait: 1,

	// Handle when the DOM is ready
	ready: function( wait ) {

		// Abort if there are pending holds or we're already ready
		if ( wait === true ? --jQuery.readyWait : jQuery.isReady ) {
			return;
		}

		// Remember that the DOM is ready
		jQuery.isReady = true;

		// If a normal DOM Ready event fired, decrement, and wait if need be
		if ( wait !== true && --jQuery.readyWait > 0 ) {
			return;
		}

		// If there are functions bound, to execute
		readyList.resolveWith( document, [ jQuery ] );
	}
} );

jQuery.ready.then = readyList.then;

// The ready event handler and self cleanup method
function completed() {
	document.removeEventListener( "DOMContentLoaded", completed );
	window.removeEventListener( "load", completed );
	jQuery.ready();
}

// Catch cases where $(document).ready() is called
// after the browser event has already occurred.
// Support: IE <=9 - 10 only
// Older IE sometimes signals "interactive" too soon
if ( document.readyState === "complete" ||
	( document.readyState !== "loading" && !document.documentElement.doScroll ) ) {

	// Handle it asynchronously to allow scripts the opportunity to delay ready
	window.setTimeout( jQuery.ready );

} else {

	// Use the handy event callback
	document.addEventListener( "DOMContentLoaded", completed );

	// A fallback to window.onload, that will always work
	window.addEventListener( "load", completed );
}




// Multifunctional method to get and set values of a collection
// The value/s can optionally be executed if it's a function
var access = function( elems, fn, key, value, chainable, emptyGet, raw ) {
	var i = 0,
		len = elems.length,
		bulk = key == null;

	// Sets many values
	if ( toType( key ) === "object" ) {
		chainable = true;
		for ( i in key ) {
			access( elems, fn, i, key[ i ], true, emptyGet, raw );
		}

	// Sets one value
	} else if ( value !== undefined ) {
		chainable = true;

		if ( !isFunction( value ) ) {
			raw = true;
		}

		if ( bulk ) {

			// Bulk operations run against the entire set
			if ( raw ) {
				fn.call( elems, value );
				fn = null;

			// ...except when executing function values
			} else {
				bulk = fn;
				fn = function( elem, key, value ) {
					return bulk.call( jQuery( elem ), value );
				};
			}
		}

		if ( fn ) {
			for ( ; i < len; i++ ) {
				fn(
					elems[ i ], key, raw ?
					value :
					value.call( elems[ i ], i, fn( elems[ i ], key ) )
				);
			}
		}
	}

	if ( chainable ) {
		return elems;
	}

	// Gets
	if ( bulk ) {
		return fn.call( elems );
	}

	return len ? fn( elems[ 0 ], key ) : emptyGet;
};


// Matches dashed string for camelizing
var rmsPrefix = /^-ms-/,
	rdashAlpha = /-([a-z])/g;

// Used by camelCase as callback to replace()
function fcamelCase( all, letter ) {
	return letter.toUpperCase();
}

// Convert dashed to camelCase; used by the css and data modules
// Support: IE <=9 - 11, Edge 12 - 15
// Microsoft forgot to hump their vendor prefix (#9572)
function camelCase( string ) {
	return string.replace( rmsPrefix, "ms-" ).replace( rdashAlpha, fcamelCase );
}
var acceptData = function( owner ) {

	// Accepts only:
	//  - Node
	//    - Node.ELEMENT_NODE
	//    - Node.DOCUMENT_NODE
	//  - Object
	//    - Any
	return owner.nodeType === 1 || owner.nodeType === 9 || !( +owner.nodeType );
};




function Data() {
	this.expando = jQuery.expando + Data.uid++;
}

Data.uid = 1;

Data.prototype = {

	cache: function( owner ) {

		// Check if the owner object already has a cache
		var value = owner[ this.expando ];

		// If not, create one
		if ( !value ) {
			value = {};

			// We can accept data for non-element nodes in modern browsers,
			// but we should not, see #8335.
			// Always return an empty object.
			if ( acceptData( owner ) ) {

				// If it is a node unlikely to be stringify-ed or looped over
				// use plain assignment
				if ( owner.nodeType ) {
					owner[ this.expando ] = value;

				// Otherwise secure it in a non-enumerable property
				// configurable must be true to allow the property to be
				// deleted when data is removed
				} else {
					Object.defineProperty( owner, this.expando, {
						value: value,
						configurable: true
					} );
				}
			}
		}

		return value;
	},
	set: function( owner, data, value ) {
		var prop,
			cache = this.cache( owner );

		// Handle: [ owner, key, value ] args
		// Always use camelCase key (gh-2257)
		if ( typeof data === "string" ) {
			cache[ camelCase( data ) ] = value;

		// Handle: [ owner, { properties } ] args
		} else {

			// Copy the properties one-by-one to the cache object
			for ( prop in data ) {
				cache[ camelCase( prop ) ] = data[ prop ];
			}
		}
		return cache;
	},
	get: function( owner, key ) {
		return key === undefined ?
			this.cache( owner ) :

			// Always use camelCase key (gh-2257)
			owner[ this.expando ] && owner[ this.expando ][ camelCase( key ) ];
	},
	access: function( owner, key, value ) {

		// In cases where either:
		//
		//   1. No key was specified
		//   2. A string key was specified, but no value provided
		//
		// Take the "read" path and allow the get method to determine
		// which value to return, respectively either:
		//
		//   1. The entire cache object
		//   2. The data stored at the key
		//
		if ( key === undefined ||
				( ( key && typeof key === "string" ) && value === undefined ) ) {

			return this.get( owner, key );
		}

		// When the key is not a string, or both a key and value
		// are specified, set or extend (existing objects) with either:
		//
		//   1. An object of properties
		//   2. A key and value
		//
		this.set( owner, key, value );

		// Since the "set" path can have two possible entry points
		// return the expected data based on which path was taken[*]
		return value !== undefined ? value : key;
	},
	remove: function( owner, key ) {
		var i,
			cache = owner[ this.expando ];

		if ( cache === undefined ) {
			return;
		}

		if ( key !== undefined ) {

			// Support array or space separated string of keys
			if ( Array.isArray( key ) ) {

				// If key is an array of keys...
				// We always set camelCase keys, so remove that.
				key = key.map( camelCase );
			} else {
				key = camelCase( key );

				// If a key with the spaces exists, use it.
				// Otherwise, create an array by matching non-whitespace
				key = key in cache ?
					[ key ] :
					( key.match( rnothtmlwhite ) || [] );
			}

			i = key.length;

			while ( i-- ) {
				delete cache[ key[ i ] ];
			}
		}

		// Remove the expando if there's no more data
		if ( key === undefined || jQuery.isEmptyObject( cache ) ) {

			// Support: Chrome <=35 - 45
			// Webkit & Blink performance suffers when deleting properties
			// from DOM nodes, so set to undefined instead
			// https://bugs.chromium.org/p/chromium/issues/detail?id=378607 (bug restricted)
			if ( owner.nodeType ) {
				owner[ this.expando ] = undefined;
			} else {
				delete owner[ this.expando ];
			}
		}
	},
	hasData: function( owner ) {
		var cache = owner[ this.expando ];
		return cache !== undefined && !jQuery.isEmptyObject( cache );
	}
};
var dataPriv = new Data();

var dataUser = new Data();



//	Implementation Summary
//
//	1. Enforce API surface and semantic compatibility with 1.9.x branch
//	2. Improve the module's maintainability by reducing the storage
//		paths to a single mechanism.
//	3. Use the same single mechanism to support "private" and "user" data.
//	4. _Never_ expose "private" data to user code (TODO: Drop _data, _removeData)
//	5. Avoid exposing implementation details on user objects (eg. expando properties)
//	6. Provide a clear path for implementation upgrade to WeakMap in 2014

var rbrace = /^(?:\{[\w\W]*\}|\[[\w\W]*\])$/,
	rmultiDash = /[A-Z]/g;

function getData( data ) {
	if ( data === "true" ) {
		return true;
	}

	if ( data === "false" ) {
		return false;
	}

	if ( data === "null" ) {
		return null;
	}

	// Only convert to a number if it doesn't change the string
	if ( data === +data + "" ) {
		return +data;
	}

	if ( rbrace.test( data ) ) {
		return JSON.parse( data );
	}

	return data;
}

function dataAttr( elem, key, data ) {
	var name;

	// If nothing was found internally, try to fetch any
	// data from the HTML5 data-* attribute
	if ( data === undefined && elem.nodeType === 1 ) {
		name = "data-" + key.replace( rmultiDash, "-$&" ).toLowerCase();
		data = elem.getAttribute( name );

		if ( typeof data === "string" ) {
			try {
				data = getData( data );
			} catch ( e ) {}

			// Make sure we set the data so it isn't changed later
			dataUser.set( elem, key, data );
		} else {
			data = undefined;
		}
	}
	return data;
}

jQuery.extend( {
	hasData: function( elem ) {
		return dataUser.hasData( elem ) || dataPriv.hasData( elem );
	},

	data: function( elem, name, data ) {
		return dataUser.access( elem, name, data );
	},

	removeData: function( elem, name ) {
		dataUser.remove( elem, name );
	},

	// TODO: Now that all calls to _data and _removeData have been replaced
	// with direct calls to dataPriv methods, these can be deprecated.
	_data: function( elem, name, data ) {
		return dataPriv.access( elem, name, data );
	},

	_removeData: function( elem, name ) {
		dataPriv.remove( elem, name );
	}
} );

jQuery.fn.extend( {
	data: function( key, value ) {
		var i, name, data,
			elem = this[ 0 ],
			attrs = elem && elem.attributes;

		// Gets all values
		if ( key === undefined ) {
			if ( this.length ) {
				data = dataUser.get( elem );

				if ( elem.nodeType === 1 && !dataPriv.get( elem, "hasDataAttrs" ) ) {
					i = attrs.length;
					while ( i-- ) {

						// Support: IE 11 only
						// The attrs elements can be null (#14894)
						if ( attrs[ i ] ) {
							name = attrs[ i ].name;
							if ( name.indexOf( "data-" ) === 0 ) {
								name = camelCase( name.slice( 5 ) );
								dataAttr( elem, name, data[ name ] );
							}
						}
					}
					dataPriv.set( elem, "hasDataAttrs", true );
				}
			}

			return data;
		}

		// Sets multiple values
		if ( typeof key === "object" ) {
			return this.each( function() {
				dataUser.set( this, key );
			} );
		}

		return access( this, function( value ) {
			var data;

			// The calling jQuery object (element matches) is not empty
			// (and therefore has an element appears at this[ 0 ]) and the
			// `value` parameter was not undefined. An empty jQuery object
			// will result in `undefined` for elem = this[ 0 ] which will
			// throw an exception if an attempt to read a data cache is made.
			if ( elem && value === undefined ) {

				// Attempt to get data from the cache
				// The key will always be camelCased in Data
				data = dataUser.get( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// Attempt to "discover" the data in
				// HTML5 custom data-* attrs
				data = dataAttr( elem, key );
				if ( data !== undefined ) {
					return data;
				}

				// We tried really hard, but the data doesn't exist.
				return;
			}

			// Set the data...
			this.each( function() {

				// We always store the camelCased key
				dataUser.set( this, key, value );
			} );
		}, null, value, arguments.length > 1, null, true );
	},

	removeData: function( key ) {
		return this.each( function() {
			dataUser.remove( this, key );
		} );
	}
} );


jQuery.extend( {
	queue: function( elem, type, data ) {
		var queue;

		if ( elem ) {
			type = ( type || "fx" ) + "queue";
			queue = dataPriv.get( elem, type );

			// Speed up dequeue by getting out quickly if this is just a lookup
			if ( data ) {
				if ( !queue || Array.isArray( data ) ) {
					queue = dataPriv.access( elem, type, jQuery.makeArray( data ) );
				} else {
					queue.push( data );
				}
			}
			return queue || [];
		}
	},

	dequeue: function( elem, type ) {
		type = type || "fx";

		var queue = jQuery.queue( elem, type ),
			startLength = queue.length,
			fn = queue.shift(),
			hooks = jQuery._queueHooks( elem, type ),
			next = function() {
				jQuery.dequeue( elem, type );
			};

		// If the fx queue is dequeued, always remove the progress sentinel
		if ( fn === "inprogress" ) {
			fn = queue.shift();
			startLength--;
		}

		if ( fn ) {

			// Add a progress sentinel to prevent the fx queue from being
			// automatically dequeued
			if ( type === "fx" ) {
				queue.unshift( "inprogress" );
			}

			// Clear up the last queue stop function
			delete hooks.stop;
			fn.call( elem, next, hooks );
		}

		if ( !startLength && hooks ) {
			hooks.empty.fire();
		}
	},

	// Not public - generate a queueHooks object, or return the current one
	_queueHooks: function( elem, type ) {
		var key = type + "queueHooks";
		return dataPriv.get( elem, key ) || dataPriv.access( elem, key, {
			empty: jQuery.Callbacks( "once memory" ).add( function() {
				dataPriv.remove( elem, [ type + "queue", key ] );
			} )
		} );
	}
} );

jQuery.fn.extend( {
	queue: function( type, data ) {
		var setter = 2;

		if ( typeof type !== "string" ) {
			data = type;
			type = "fx";
			setter--;
		}

		if ( arguments.length < setter ) {
			return jQuery.queue( this[ 0 ], type );
		}

		return data === undefined ?
			this :
			this.each( function() {
				var queue = jQuery.queue( this, type, data );

				// Ensure a hooks for this queue
				jQuery._queueHooks( this, type );

				if ( type === "fx" && queue[ 0 ] !== "inprogress" ) {
					jQuery.dequeue( this, type );
				}
			} );
	},
	dequeue: function( type ) {
		return this.each( function() {
			jQuery.dequeue( this, type );
		} );
	},
	clearQueue: function( type ) {
		return this.queue( type || "fx", [] );
	},

	// Get a promise resolved when queues of a certain type
	// are emptied (fx is the type by default)
	promise: function( type, obj ) {
		var tmp,
			count = 1,
			defer = jQuery.Deferred(),
			elements = this,
			i = this.length,
			resolve = function() {
				if ( !( --count ) ) {
					defer.resolveWith( elements, [ elements ] );
				}
			};

		if ( typeof type !== "string" ) {
			obj = type;
			type = undefined;
		}
		type = type || "fx";

		while ( i-- ) {
			tmp = dataPriv.get( elements[ i ], type + "queueHooks" );
			if ( tmp && tmp.empty ) {
				count++;
				tmp.empty.add( resolve );
			}
		}
		resolve();
		return defer.promise( obj );
	}
} );
var pnum = ( /[+-]?(?:\d*\.|)\d+(?:[eE][+-]?\d+|)/ ).source;

var rcssNum = new RegExp( "^(?:([+-])=|)(" + pnum + ")([a-z%]*)$", "i" );


var cssExpand = [ "Top", "Right", "Bottom", "Left" ];

var isHiddenWithinTree = function( elem, el ) {

		// isHiddenWithinTree might be called from jQuery#filter function;
		// in that case, element will be second argument
		elem = el || elem;

		// Inline style trumps all
		return elem.style.display === "none" ||
			elem.style.display === "" &&

			// Otherwise, check computed style
			// Support: Firefox <=43 - 45
			// Disconnected elements can have computed display: none, so first confirm that elem is
			// in the document.
			jQuery.contains( elem.ownerDocument, elem ) &&

			jQuery.css( elem, "display" ) === "none";
	};

var swap = function( elem, options, callback, args ) {
	var ret, name,
		old = {};

	// Remember the old values, and insert the new ones
	for ( name in options ) {
		old[ name ] = elem.style[ name ];
		elem.style[ name ] = options[ name ];
	}

	ret = callback.apply( elem, args || [] );

	// Revert the old values
	for ( name in options ) {
		elem.style[ name ] = old[ name ];
	}

	return ret;
};




function adjustCSS( elem, prop, valueParts, tween ) {
	var adjusted, scale,
		maxIterations = 20,
		currentValue = tween ?
			function() {
				return tween.cur();
			} :
			function() {
				return jQuery.css( elem, prop, "" );
			},
		initial = currentValue(),
		unit = valueParts && valueParts[ 3 ] || ( jQuery.cssNumber[ prop ] ? "" : "px" ),

		// Starting value computation is required for potential unit mismatches
		initialInUnit = ( jQuery.cssNumber[ prop ] || unit !== "px" && +initial ) &&
			rcssNum.exec( jQuery.css( elem, prop ) );

	if ( initialInUnit && initialInUnit[ 3 ] !== unit ) {

		// Support: Firefox <=54
		// Halve the iteration target value to prevent interference from CSS upper bounds (gh-2144)
		initial = initial / 2;

		// Trust units reported by jQuery.css
		unit = unit || initialInUnit[ 3 ];

		// Iteratively approximate from a nonzero starting point
		initialInUnit = +initial || 1;

		while ( maxIterations-- ) {

			// Evaluate and update our best guess (doubling guesses that zero out).
			// Finish if the scale equals or crosses 1 (making the old*new product non-positive).
			jQuery.style( elem, prop, initialInUnit + unit );
			if ( ( 1 - scale ) * ( 1 - ( scale = currentValue() / initial || 0.5 ) ) <= 0 ) {
				maxIterations = 0;
			}
			initialInUnit = initialInUnit / scale;

		}

		initialInUnit = initialInUnit * 2;
		jQuery.style( elem, prop, initialInUnit + unit );

		// Make sure we update the tween properties later on
		valueParts = valueParts || [];
	}

	if ( valueParts ) {
		initialInUnit = +initialInUnit || +initial || 0;

		// Apply relative offset (+=/-=) if specified
		adjusted = valueParts[ 1 ] ?
			initialInUnit + ( valueParts[ 1 ] + 1 ) * valueParts[ 2 ] :
			+valueParts[ 2 ];
		if ( tween ) {
			tween.unit = unit;
			tween.start = initialInUnit;
			tween.end = adjusted;
		}
	}
	return adjusted;
}


var defaultDisplayMap = {};

function getDefaultDisplay( elem ) {
	var temp,
		doc = elem.ownerDocument,
		nodeName = elem.nodeName,
		display = defaultDisplayMap[ nodeName ];

	if ( display ) {
		return display;
	}

	temp = doc.body.appendChild( doc.createElement( nodeName ) );
	display = jQuery.css( temp, "display" );

	temp.parentNode.removeChild( temp );

	if ( display === "none" ) {
		display = "block";
	}
	defaultDisplayMap[ nodeName ] = display;

	return display;
}

function showHide( elements, show ) {
	var display, elem,
		values = [],
		index = 0,
		length = elements.length;

	// Determine new display value for elements that need to change
	for ( ; index < length; index++ ) {
		elem = elements[ index ];
		if ( !elem.style ) {
			continue;
		}

		display = elem.style.display;
		if ( show ) {

			// Since we force visibility upon cascade-hidden elements, an immediate (and slow)
			// check is required in this first loop unless we have a nonempty display value (either
			// inline or about-to-be-restored)
			if ( display === "none" ) {
				values[ index ] = dataPriv.get( elem, "display" ) || null;
				if ( !values[ index ] ) {
					elem.style.display = "";
				}
			}
			if ( elem.style.display === "" && isHiddenWithinTree( elem ) ) {
				values[ index ] = getDefaultDisplay( elem );
			}
		} else {
			if ( display !== "none" ) {
				values[ index ] = "none";

				// Remember what we're overwriting
				dataPriv.set( elem, "display", display );
			}
		}
	}

	// Set the display of the elements in a second loop to avoid constant reflow
	for ( index = 0; index < length; index++ ) {
		if ( values[ index ] != null ) {
			elements[ index ].style.display = values[ index ];
		}
	}

	return elements;
}

jQuery.fn.extend( {
	show: function() {
		return showHide( this, true );
	},
	hide: function() {
		return showHide( this );
	},
	toggle: function( state ) {
		if ( typeof state === "boolean" ) {
			return state ? this.show() : this.hide();
		}

		return this.each( function() {
			if ( isHiddenWithinTree( this ) ) {
				jQuery( this ).show();
			} else {
				jQuery( this ).hide();
			}
		} );
	}
} );
var rcheckableType = ( /^(?:checkbox|radio)$/i );

var rtagName = ( /<([a-z][^\/\0>\x20\t\r\n\f]+)/i );

var rscriptType = ( /^$|^module$|\/(?:java|ecma)script/i );



// We have to close these tags to support XHTML (#13200)
var wrapMap = {

	// Support: IE <=9 only
	option: [ 1, "<select multiple='multiple'>", "</select>" ],

	// XHTML parsers do not magically insert elements in the
	// same way that tag soup parsers do. So we cannot shorten
	// this by omitting <tbody> or other required elements.
	thead: [ 1, "<table>", "</table>" ],
	col: [ 2, "<table><colgroup>", "</colgroup></table>" ],
	tr: [ 2, "<table><tbody>", "</tbody></table>" ],
	td: [ 3, "<table><tbody><tr>", "</tr></tbody></table>" ],

	_default: [ 0, "", "" ]
};

// Support: IE <=9 only
wrapMap.optgroup = wrapMap.option;

wrapMap.tbody = wrapMap.tfoot = wrapMap.colgroup = wrapMap.caption = wrapMap.thead;
wrapMap.th = wrapMap.td;


function getAll( context, tag ) {

	// Support: IE <=9 - 11 only
	// Use typeof to avoid zero-argument method invocation on host objects (#15151)
	var ret;

	if ( typeof context.getElementsByTagName !== "undefined" ) {
		ret = context.getElementsByTagName( tag || "*" );

	} else if ( typeof context.querySelectorAll !== "undefined" ) {
		ret = context.querySelectorAll( tag || "*" );

	} else {
		ret = [];
	}

	if ( tag === undefined || tag && nodeName( context, tag ) ) {
		return jQuery.merge( [ context ], ret );
	}

	return ret;
}


// Mark scripts as having already been evaluated
function setGlobalEval( elems, refElements ) {
	var i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		dataPriv.set(
			elems[ i ],
			"globalEval",
			!refElements || dataPriv.get( refElements[ i ], "globalEval" )
		);
	}
}


var rhtml = /<|&#?\w+;/;

function buildFragment( elems, context, scripts, selection, ignored ) {
	var elem, tmp, tag, wrap, contains, j,
		fragment = context.createDocumentFragment(),
		nodes = [],
		i = 0,
		l = elems.length;

	for ( ; i < l; i++ ) {
		elem = elems[ i ];

		if ( elem || elem === 0 ) {

			// Add nodes directly
			if ( toType( elem ) === "object" ) {

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, elem.nodeType ? [ elem ] : elem );

			// Convert non-html into a text node
			} else if ( !rhtml.test( elem ) ) {
				nodes.push( context.createTextNode( elem ) );

			// Convert html into DOM nodes
			} else {
				tmp = tmp || fragment.appendChild( context.createElement( "div" ) );

				// Deserialize a standard representation
				tag = ( rtagName.exec( elem ) || [ "", "" ] )[ 1 ].toLowerCase();
				wrap = wrapMap[ tag ] || wrapMap._default;
				tmp.innerHTML = wrap[ 1 ] + jQuery.htmlPrefilter( elem ) + wrap[ 2 ];

				// Descend through wrappers to the right content
				j = wrap[ 0 ];
				while ( j-- ) {
					tmp = tmp.lastChild;
				}

				// Support: Android <=4.0 only, PhantomJS 1 only
				// push.apply(_, arraylike) throws on ancient WebKit
				jQuery.merge( nodes, tmp.childNodes );

				// Remember the top-level container
				tmp = fragment.firstChild;

				// Ensure the created nodes are orphaned (#12392)
				tmp.textContent = "";
			}
		}
	}

	// Remove wrapper from fragment
	fragment.textContent = "";

	i = 0;
	while ( ( elem = nodes[ i++ ] ) ) {

		// Skip elements already in the context collection (trac-4087)
		if ( selection && jQuery.inArray( elem, selection ) > -1 ) {
			if ( ignored ) {
				ignored.push( elem );
			}
			continue;
		}

		contains = jQuery.contains( elem.ownerDocument, elem );

		// Append to fragment
		tmp = getAll( fragment.appendChild( elem ), "script" );

		// Preserve script evaluation history
		if ( contains ) {
			setGlobalEval( tmp );
		}

		// Capture executables
		if ( scripts ) {
			j = 0;
			while ( ( elem = tmp[ j++ ] ) ) {
				if ( rscriptType.test( elem.type || "" ) ) {
					scripts.push( elem );
				}
			}
		}
	}

	return fragment;
}


( function() {
	var fragment = document.createDocumentFragment(),
		div = fragment.appendChild( document.createElement( "div" ) ),
		input = document.createElement( "input" );

	// Support: Android 4.0 - 4.3 only
	// Check state lost if the name is set (#11217)
	// Support: Windows Web Apps (WWA)
	// `name` and `type` must use .setAttribute for WWA (#14901)
	input.setAttribute( "type", "radio" );
	input.setAttribute( "checked", "checked" );
	input.setAttribute( "name", "t" );

	div.appendChild( input );

	// Support: Android <=4.1 only
	// Older WebKit doesn't clone checked state correctly in fragments
	support.checkClone = div.cloneNode( true ).cloneNode( true ).lastChild.checked;

	// Support: IE <=11 only
	// Make sure textarea (and checkbox) defaultValue is properly cloned
	div.innerHTML = "<textarea>x</textarea>";
	support.noCloneChecked = !!div.cloneNode( true ).lastChild.defaultValue;
} )();
var documentElement = document.documentElement;



var
	rkeyEvent = /^key/,
	rmouseEvent = /^(?:mouse|pointer|contextmenu|drag|drop)|click/,
	rtypenamespace = /^([^.]*)(?:\.(.+)|)/;

function returnTrue() {
	return true;
}

function returnFalse() {
	return false;
}

// Support: IE <=9 only
// See #13393 for more info
function safeActiveElement() {
	try {
		return document.activeElement;
	} catch ( err ) { }
}

function on( elem, types, selector, data, fn, one ) {
	var origFn, type;

	// Types can be a map of types/handlers
	if ( typeof types === "object" ) {

		// ( types-Object, selector, data )
		if ( typeof selector !== "string" ) {

			// ( types-Object, data )
			data = data || selector;
			selector = undefined;
		}
		for ( type in types ) {
			on( elem, type, selector, data, types[ type ], one );
		}
		return elem;
	}

	if ( data == null && fn == null ) {

		// ( types, fn )
		fn = selector;
		data = selector = undefined;
	} else if ( fn == null ) {
		if ( typeof selector === "string" ) {

			// ( types, selector, fn )
			fn = data;
			data = undefined;
		} else {

			// ( types, data, fn )
			fn = data;
			data = selector;
			selector = undefined;
		}
	}
	if ( fn === false ) {
		fn = returnFalse;
	} else if ( !fn ) {
		return elem;
	}

	if ( one === 1 ) {
		origFn = fn;
		fn = function( event ) {

			// Can use an empty set, since event contains the info
			jQuery().off( event );
			return origFn.apply( this, arguments );
		};

		// Use same guid so caller can remove using origFn
		fn.guid = origFn.guid || ( origFn.guid = jQuery.guid++ );
	}
	return elem.each( function() {
		jQuery.event.add( this, types, fn, data, selector );
	} );
}

/*
 * Helper functions for managing events -- not part of the public interface.
 * Props to Dean Edwards' addEvent library for many of the ideas.
 */
jQuery.event = {

	global: {},

	add: function( elem, types, handler, data, selector ) {

		var handleObjIn, eventHandle, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.get( elem );

		// Don't attach events to noData or text/comment nodes (but allow plain objects)
		if ( !elemData ) {
			return;
		}

		// Caller can pass in an object of custom data in lieu of the handler
		if ( handler.handler ) {
			handleObjIn = handler;
			handler = handleObjIn.handler;
			selector = handleObjIn.selector;
		}

		// Ensure that invalid selectors throw exceptions at attach time
		// Evaluate against documentElement in case elem is a non-element node (e.g., document)
		if ( selector ) {
			jQuery.find.matchesSelector( documentElement, selector );
		}

		// Make sure that the handler has a unique ID, used to find/remove it later
		if ( !handler.guid ) {
			handler.guid = jQuery.guid++;
		}

		// Init the element's event structure and main handler, if this is the first
		if ( !( events = elemData.events ) ) {
			events = elemData.events = {};
		}
		if ( !( eventHandle = elemData.handle ) ) {
			eventHandle = elemData.handle = function( e ) {

				// Discard the second event of a jQuery.event.trigger() and
				// when an event is called after a page has unloaded
				return typeof jQuery !== "undefined" && jQuery.event.triggered !== e.type ?
					jQuery.event.dispatch.apply( elem, arguments ) : undefined;
			};
		}

		// Handle multiple events separated by a space
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// There *must* be a type, no attaching namespace-only handlers
			if ( !type ) {
				continue;
			}

			// If event changes its type, use the special event handlers for the changed type
			special = jQuery.event.special[ type ] || {};

			// If selector defined, determine special event api type, otherwise given type
			type = ( selector ? special.delegateType : special.bindType ) || type;

			// Update special based on newly reset type
			special = jQuery.event.special[ type ] || {};

			// handleObj is passed to all event handlers
			handleObj = jQuery.extend( {
				type: type,
				origType: origType,
				data: data,
				handler: handler,
				guid: handler.guid,
				selector: selector,
				needsContext: selector && jQuery.expr.match.needsContext.test( selector ),
				namespace: namespaces.join( "." )
			}, handleObjIn );

			// Init the event handler queue if we're the first
			if ( !( handlers = events[ type ] ) ) {
				handlers = events[ type ] = [];
				handlers.delegateCount = 0;

				// Only use addEventListener if the special events handler returns false
				if ( !special.setup ||
					special.setup.call( elem, data, namespaces, eventHandle ) === false ) {

					if ( elem.addEventListener ) {
						elem.addEventListener( type, eventHandle );
					}
				}
			}

			if ( special.add ) {
				special.add.call( elem, handleObj );

				if ( !handleObj.handler.guid ) {
					handleObj.handler.guid = handler.guid;
				}
			}

			// Add to the element's handler list, delegates in front
			if ( selector ) {
				handlers.splice( handlers.delegateCount++, 0, handleObj );
			} else {
				handlers.push( handleObj );
			}

			// Keep track of which events have ever been used, for event optimization
			jQuery.event.global[ type ] = true;
		}

	},

	// Detach an event or set of events from an element
	remove: function( elem, types, handler, selector, mappedTypes ) {

		var j, origCount, tmp,
			events, t, handleObj,
			special, handlers, type, namespaces, origType,
			elemData = dataPriv.hasData( elem ) && dataPriv.get( elem );

		if ( !elemData || !( events = elemData.events ) ) {
			return;
		}

		// Once for each type.namespace in types; type may be omitted
		types = ( types || "" ).match( rnothtmlwhite ) || [ "" ];
		t = types.length;
		while ( t-- ) {
			tmp = rtypenamespace.exec( types[ t ] ) || [];
			type = origType = tmp[ 1 ];
			namespaces = ( tmp[ 2 ] || "" ).split( "." ).sort();

			// Unbind all events (on this namespace, if provided) for the element
			if ( !type ) {
				for ( type in events ) {
					jQuery.event.remove( elem, type + types[ t ], handler, selector, true );
				}
				continue;
			}

			special = jQuery.event.special[ type ] || {};
			type = ( selector ? special.delegateType : special.bindType ) || type;
			handlers = events[ type ] || [];
			tmp = tmp[ 2 ] &&
				new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" );

			// Remove matching events
			origCount = j = handlers.length;
			while ( j-- ) {
				handleObj = handlers[ j ];

				if ( ( mappedTypes || origType === handleObj.origType ) &&
					( !handler || handler.guid === handleObj.guid ) &&
					( !tmp || tmp.test( handleObj.namespace ) ) &&
					( !selector || selector === handleObj.selector ||
						selector === "**" && handleObj.selector ) ) {
					handlers.splice( j, 1 );

					if ( handleObj.selector ) {
						handlers.delegateCount--;
					}
					if ( special.remove ) {
						special.remove.call( elem, handleObj );
					}
				}
			}

			// Remove generic event handler if we removed something and no more handlers exist
			// (avoids potential for endless recursion during removal of special event handlers)
			if ( origCount && !handlers.length ) {
				if ( !special.teardown ||
					special.teardown.call( elem, namespaces, elemData.handle ) === false ) {

					jQuery.removeEvent( elem, type, elemData.handle );
				}

				delete events[ type ];
			}
		}

		// Remove data and the expando if it's no longer used
		if ( jQuery.isEmptyObject( events ) ) {
			dataPriv.remove( elem, "handle events" );
		}
	},

	dispatch: function( nativeEvent ) {

		// Make a writable jQuery.Event from the native event object
		var event = jQuery.event.fix( nativeEvent );

		var i, j, ret, matched, handleObj, handlerQueue,
			args = new Array( arguments.length ),
			handlers = ( dataPriv.get( this, "events" ) || {} )[ event.type ] || [],
			special = jQuery.event.special[ event.type ] || {};

		// Use the fix-ed jQuery.Event rather than the (read-only) native event
		args[ 0 ] = event;

		for ( i = 1; i < arguments.length; i++ ) {
			args[ i ] = arguments[ i ];
		}

		event.delegateTarget = this;

		// Call the preDispatch hook for the mapped type, and let it bail if desired
		if ( special.preDispatch && special.preDispatch.call( this, event ) === false ) {
			return;
		}

		// Determine handlers
		handlerQueue = jQuery.event.handlers.call( this, event, handlers );

		// Run delegates first; they may want to stop propagation beneath us
		i = 0;
		while ( ( matched = handlerQueue[ i++ ] ) && !event.isPropagationStopped() ) {
			event.currentTarget = matched.elem;

			j = 0;
			while ( ( handleObj = matched.handlers[ j++ ] ) &&
				!event.isImmediatePropagationStopped() ) {

				// Triggered event must either 1) have no namespace, or 2) have namespace(s)
				// a subset or equal to those in the bound event (both can have no namespace).
				if ( !event.rnamespace || event.rnamespace.test( handleObj.namespace ) ) {

					event.handleObj = handleObj;
					event.data = handleObj.data;

					ret = ( ( jQuery.event.special[ handleObj.origType ] || {} ).handle ||
						handleObj.handler ).apply( matched.elem, args );

					if ( ret !== undefined ) {
						if ( ( event.result = ret ) === false ) {
							event.preventDefault();
							event.stopPropagation();
						}
					}
				}
			}
		}

		// Call the postDispatch hook for the mapped type
		if ( special.postDispatch ) {
			special.postDispatch.call( this, event );
		}

		return event.result;
	},

	handlers: function( event, handlers ) {
		var i, handleObj, sel, matchedHandlers, matchedSelectors,
			handlerQueue = [],
			delegateCount = handlers.delegateCount,
			cur = event.target;

		// Find delegate handlers
		if ( delegateCount &&

			// Support: IE <=9
			// Black-hole SVG <use> instance trees (trac-13180)
			cur.nodeType &&

			// Support: Firefox <=42
			// Suppress spec-violating clicks indicating a non-primary pointer button (trac-3861)
			// https://www.w3.org/TR/DOM-Level-3-Events/#event-type-click
			// Support: IE 11 only
			// ...but not arrow key "clicks" of radio inputs, which can have `button` -1 (gh-2343)
			!( event.type === "click" && event.button >= 1 ) ) {

			for ( ; cur !== this; cur = cur.parentNode || this ) {

				// Don't check non-elements (#13208)
				// Don't process clicks on disabled elements (#6911, #8165, #11382, #11764)
				if ( cur.nodeType === 1 && !( event.type === "click" && cur.disabled === true ) ) {
					matchedHandlers = [];
					matchedSelectors = {};
					for ( i = 0; i < delegateCount; i++ ) {
						handleObj = handlers[ i ];

						// Don't conflict with Object.prototype properties (#13203)
						sel = handleObj.selector + " ";

						if ( matchedSelectors[ sel ] === undefined ) {
							matchedSelectors[ sel ] = handleObj.needsContext ?
								jQuery( sel, this ).index( cur ) > -1 :
								jQuery.find( sel, this, null, [ cur ] ).length;
						}
						if ( matchedSelectors[ sel ] ) {
							matchedHandlers.push( handleObj );
						}
					}
					if ( matchedHandlers.length ) {
						handlerQueue.push( { elem: cur, handlers: matchedHandlers } );
					}
				}
			}
		}

		// Add the remaining (directly-bound) handlers
		cur = this;
		if ( delegateCount < handlers.length ) {
			handlerQueue.push( { elem: cur, handlers: handlers.slice( delegateCount ) } );
		}

		return handlerQueue;
	},

	addProp: function( name, hook ) {
		Object.defineProperty( jQuery.Event.prototype, name, {
			enumerable: true,
			configurable: true,

			get: isFunction( hook ) ?
				function() {
					if ( this.originalEvent ) {
							return hook( this.originalEvent );
					}
				} :
				function() {
					if ( this.originalEvent ) {
							return this.originalEvent[ name ];
					}
				},

			set: function( value ) {
				Object.defineProperty( this, name, {
					enumerable: true,
					configurable: true,
					writable: true,
					value: value
				} );
			}
		} );
	},

	fix: function( originalEvent ) {
		return originalEvent[ jQuery.expando ] ?
			originalEvent :
			new jQuery.Event( originalEvent );
	},

	special: {
		load: {

			// Prevent triggered image.load events from bubbling to window.load
			noBubble: true
		},
		focus: {

			// Fire native event if possible so blur/focus sequence is correct
			trigger: function() {
				if ( this !== safeActiveElement() && this.focus ) {
					this.focus();
					return false;
				}
			},
			delegateType: "focusin"
		},
		blur: {
			trigger: function() {
				if ( this === safeActiveElement() && this.blur ) {
					this.blur();
					return false;
				}
			},
			delegateType: "focusout"
		},
		click: {

			// For checkbox, fire native event so checked state will be right
			trigger: function() {
				if ( this.type === "checkbox" && this.click && nodeName( this, "input" ) ) {
					this.click();
					return false;
				}
			},

			// For cross-browser consistency, don't fire native .click() on links
			_default: function( event ) {
				return nodeName( event.target, "a" );
			}
		},

		beforeunload: {
			postDispatch: function( event ) {

				// Support: Firefox 20+
				// Firefox doesn't alert if the returnValue field is not set.
				if ( event.result !== undefined && event.originalEvent ) {
					event.originalEvent.returnValue = event.result;
				}
			}
		}
	}
};

jQuery.removeEvent = function( elem, type, handle ) {

	// This "if" is needed for plain objects
	if ( elem.removeEventListener ) {
		elem.removeEventListener( type, handle );
	}
};

jQuery.Event = function( src, props ) {

	// Allow instantiation without the 'new' keyword
	if ( !( this instanceof jQuery.Event ) ) {
		return new jQuery.Event( src, props );
	}

	// Event object
	if ( src && src.type ) {
		this.originalEvent = src;
		this.type = src.type;

		// Events bubbling up the document may have been marked as prevented
		// by a handler lower down the tree; reflect the correct value.
		this.isDefaultPrevented = src.defaultPrevented ||
				src.defaultPrevented === undefined &&

				// Support: Android <=2.3 only
				src.returnValue === false ?
			returnTrue :
			returnFalse;

		// Create target properties
		// Support: Safari <=6 - 7 only
		// Target should not be a text node (#504, #13143)
		this.target = ( src.target && src.target.nodeType === 3 ) ?
			src.target.parentNode :
			src.target;

		this.currentTarget = src.currentTarget;
		this.relatedTarget = src.relatedTarget;

	// Event type
	} else {
		this.type = src;
	}

	// Put explicitly provided properties onto the event object
	if ( props ) {
		jQuery.extend( this, props );
	}

	// Create a timestamp if incoming event doesn't have one
	this.timeStamp = src && src.timeStamp || Date.now();

	// Mark it as fixed
	this[ jQuery.expando ] = true;
};

// jQuery.Event is based on DOM3 Events as specified by the ECMAScript Language Binding
// https://www.w3.org/TR/2003/WD-DOM-Level-3-Events-20030331/ecma-script-binding.html
jQuery.Event.prototype = {
	constructor: jQuery.Event,
	isDefaultPrevented: returnFalse,
	isPropagationStopped: returnFalse,
	isImmediatePropagationStopped: returnFalse,
	isSimulated: false,

	preventDefault: function() {
		var e = this.originalEvent;

		this.isDefaultPrevented = returnTrue;

		if ( e && !this.isSimulated ) {
			e.preventDefault();
		}
	},
	stopPropagation: function() {
		var e = this.originalEvent;

		this.isPropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopPropagation();
		}
	},
	stopImmediatePropagation: function() {
		var e = this.originalEvent;

		this.isImmediatePropagationStopped = returnTrue;

		if ( e && !this.isSimulated ) {
			e.stopImmediatePropagation();
		}

		this.stopPropagation();
	}
};

// Includes all common event props including KeyEvent and MouseEvent specific props
jQuery.each( {
	altKey: true,
	bubbles: true,
	cancelable: true,
	changedTouches: true,
	ctrlKey: true,
	detail: true,
	eventPhase: true,
	metaKey: true,
	pageX: true,
	pageY: true,
	shiftKey: true,
	view: true,
	"char": true,
	charCode: true,
	key: true,
	keyCode: true,
	button: true,
	buttons: true,
	clientX: true,
	clientY: true,
	offsetX: true,
	offsetY: true,
	pointerId: true,
	pointerType: true,
	screenX: true,
	screenY: true,
	targetTouches: true,
	toElement: true,
	touches: true,

	which: function( event ) {
		var button = event.button;

		// Add which for key events
		if ( event.which == null && rkeyEvent.test( event.type ) ) {
			return event.charCode != null ? event.charCode : event.keyCode;
		}

		// Add which for click: 1 === left; 2 === middle; 3 === right
		if ( !event.which && button !== undefined && rmouseEvent.test( event.type ) ) {
			if ( button & 1 ) {
				return 1;
			}

			if ( button & 2 ) {
				return 3;
			}

			if ( button & 4 ) {
				return 2;
			}

			return 0;
		}

		return event.which;
	}
}, jQuery.event.addProp );

// Create mouseenter/leave events using mouseover/out and event-time checks
// so that event delegation works in jQuery.
// Do the same for pointerenter/pointerleave and pointerover/pointerout
//
// Support: Safari 7 only
// Safari sends mouseenter too often; see:
// https://bugs.chromium.org/p/chromium/issues/detail?id=470258
// for the description of the bug (it existed in older Chrome versions as well).
jQuery.each( {
	mouseenter: "mouseover",
	mouseleave: "mouseout",
	pointerenter: "pointerover",
	pointerleave: "pointerout"
}, function( orig, fix ) {
	jQuery.event.special[ orig ] = {
		delegateType: fix,
		bindType: fix,

		handle: function( event ) {
			var ret,
				target = this,
				related = event.relatedTarget,
				handleObj = event.handleObj;

			// For mouseenter/leave call the handler if related is outside the target.
			// NB: No relatedTarget if the mouse left/entered the browser window
			if ( !related || ( related !== target && !jQuery.contains( target, related ) ) ) {
				event.type = handleObj.origType;
				ret = handleObj.handler.apply( this, arguments );
				event.type = fix;
			}
			return ret;
		}
	};
} );

jQuery.fn.extend( {

	on: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn );
	},
	one: function( types, selector, data, fn ) {
		return on( this, types, selector, data, fn, 1 );
	},
	off: function( types, selector, fn ) {
		var handleObj, type;
		if ( types && types.preventDefault && types.handleObj ) {

			// ( event )  dispatched jQuery.Event
			handleObj = types.handleObj;
			jQuery( types.delegateTarget ).off(
				handleObj.namespace ?
					handleObj.origType + "." + handleObj.namespace :
					handleObj.origType,
				handleObj.selector,
				handleObj.handler
			);
			return this;
		}
		if ( typeof types === "object" ) {

			// ( types-object [, selector] )
			for ( type in types ) {
				this.off( type, selector, types[ type ] );
			}
			return this;
		}
		if ( selector === false || typeof selector === "function" ) {

			// ( types [, fn] )
			fn = selector;
			selector = undefined;
		}
		if ( fn === false ) {
			fn = returnFalse;
		}
		return this.each( function() {
			jQuery.event.remove( this, types, fn, selector );
		} );
	}
} );


var

	/* eslint-disable max-len */

	// See https://github.com/eslint/eslint/issues/3229
	rxhtmlTag = /<(?!area|br|col|embed|hr|img|input|link|meta|param)(([a-z][^\/\0>\x20\t\r\n\f]*)[^>]*)\/>/gi,

	/* eslint-enable */

	// Support: IE <=10 - 11, Edge 12 - 13 only
	// In IE/Edge using regex groups here causes severe slowdowns.
	// See https://connect.microsoft.com/IE/feedback/details/1736512/
	rnoInnerhtml = /<script|<style|<link/i,

	// checked="checked" or checked
	rchecked = /checked\s*(?:[^=]|=\s*.checked.)/i,
	rcleanScript = /^\s*<!(?:\[CDATA\[|--)|(?:\]\]|--)>\s*$/g;

// Prefer a tbody over its parent table for containing new rows
function manipulationTarget( elem, content ) {
	if ( nodeName( elem, "table" ) &&
		nodeName( content.nodeType !== 11 ? content : content.firstChild, "tr" ) ) {

		return jQuery( elem ).children( "tbody" )[ 0 ] || elem;
	}

	return elem;
}

// Replace/restore the type attribute of script elements for safe DOM manipulation
function disableScript( elem ) {
	elem.type = ( elem.getAttribute( "type" ) !== null ) + "/" + elem.type;
	return elem;
}
function restoreScript( elem ) {
	if ( ( elem.type || "" ).slice( 0, 5 ) === "true/" ) {
		elem.type = elem.type.slice( 5 );
	} else {
		elem.removeAttribute( "type" );
	}

	return elem;
}

function cloneCopyEvent( src, dest ) {
	var i, l, type, pdataOld, pdataCur, udataOld, udataCur, events;

	if ( dest.nodeType !== 1 ) {
		return;
	}

	// 1. Copy private data: events, handlers, etc.
	if ( dataPriv.hasData( src ) ) {
		pdataOld = dataPriv.access( src );
		pdataCur = dataPriv.set( dest, pdataOld );
		events = pdataOld.events;

		if ( events ) {
			delete pdataCur.handle;
			pdataCur.events = {};

			for ( type in events ) {
				for ( i = 0, l = events[ type ].length; i < l; i++ ) {
					jQuery.event.add( dest, type, events[ type ][ i ] );
				}
			}
		}
	}

	// 2. Copy user data
	if ( dataUser.hasData( src ) ) {
		udataOld = dataUser.access( src );
		udataCur = jQuery.extend( {}, udataOld );

		dataUser.set( dest, udataCur );
	}
}

// Fix IE bugs, see support tests
function fixInput( src, dest ) {
	var nodeName = dest.nodeName.toLowerCase();

	// Fails to persist the checked state of a cloned checkbox or radio button.
	if ( nodeName === "input" && rcheckableType.test( src.type ) ) {
		dest.checked = src.checked;

	// Fails to return the selected option to the default selected state when cloning options
	} else if ( nodeName === "input" || nodeName === "textarea" ) {
		dest.defaultValue = src.defaultValue;
	}
}

function domManip( collection, args, callback, ignored ) {

	// Flatten any nested arrays
	args = concat.apply( [], args );

	var fragment, first, scripts, hasScripts, node, doc,
		i = 0,
		l = collection.length,
		iNoClone = l - 1,
		value = args[ 0 ],
		valueIsFunction = isFunction( value );

	// We can't cloneNode fragments that contain checked, in WebKit
	if ( valueIsFunction ||
			( l > 1 && typeof value === "string" &&
				!support.checkClone && rchecked.test( value ) ) ) {
		return collection.each( function( index ) {
			var self = collection.eq( index );
			if ( valueIsFunction ) {
				args[ 0 ] = value.call( this, index, self.html() );
			}
			domManip( self, args, callback, ignored );
		} );
	}

	if ( l ) {
		fragment = buildFragment( args, collection[ 0 ].ownerDocument, false, collection, ignored );
		first = fragment.firstChild;

		if ( fragment.childNodes.length === 1 ) {
			fragment = first;
		}

		// Require either new content or an interest in ignored elements to invoke the callback
		if ( first || ignored ) {
			scripts = jQuery.map( getAll( fragment, "script" ), disableScript );
			hasScripts = scripts.length;

			// Use the original fragment for the last item
			// instead of the first because it can end up
			// being emptied incorrectly in certain situations (#8070).
			for ( ; i < l; i++ ) {
				node = fragment;

				if ( i !== iNoClone ) {
					node = jQuery.clone( node, true, true );

					// Keep references to cloned scripts for later restoration
					if ( hasScripts ) {

						// Support: Android <=4.0 only, PhantomJS 1 only
						// push.apply(_, arraylike) throws on ancient WebKit
						jQuery.merge( scripts, getAll( node, "script" ) );
					}
				}

				callback.call( collection[ i ], node, i );
			}

			if ( hasScripts ) {
				doc = scripts[ scripts.length - 1 ].ownerDocument;

				// Reenable scripts
				jQuery.map( scripts, restoreScript );

				// Evaluate executable scripts on first document insertion
				for ( i = 0; i < hasScripts; i++ ) {
					node = scripts[ i ];
					if ( rscriptType.test( node.type || "" ) &&
						!dataPriv.access( node, "globalEval" ) &&
						jQuery.contains( doc, node ) ) {

						if ( node.src && ( node.type || "" ).toLowerCase()  !== "module" ) {

							// Optional AJAX dependency, but won't run scripts if not present
							if ( jQuery._evalUrl ) {
								jQuery._evalUrl( node.src );
							}
						} else {
							DOMEval( node.textContent.replace( rcleanScript, "" ), doc, node );
						}
					}
				}
			}
		}
	}

	return collection;
}

function remove( elem, selector, keepData ) {
	var node,
		nodes = selector ? jQuery.filter( selector, elem ) : elem,
		i = 0;

	for ( ; ( node = nodes[ i ] ) != null; i++ ) {
		if ( !keepData && node.nodeType === 1 ) {
			jQuery.cleanData( getAll( node ) );
		}

		if ( node.parentNode ) {
			if ( keepData && jQuery.contains( node.ownerDocument, node ) ) {
				setGlobalEval( getAll( node, "script" ) );
			}
			node.parentNode.removeChild( node );
		}
	}

	return elem;
}

jQuery.extend( {
	htmlPrefilter: function( html ) {
		return html.replace( rxhtmlTag, "<$1></$2>" );
	},

	clone: function( elem, dataAndEvents, deepDataAndEvents ) {
		var i, l, srcElements, destElements,
			clone = elem.cloneNode( true ),
			inPage = jQuery.contains( elem.ownerDocument, elem );

		// Fix IE cloning issues
		if ( !support.noCloneChecked && ( elem.nodeType === 1 || elem.nodeType === 11 ) &&
				!jQuery.isXMLDoc( elem ) ) {

			// We eschew Sizzle here for performance reasons: https://jsperf.com/getall-vs-sizzle/2
			destElements = getAll( clone );
			srcElements = getAll( elem );

			for ( i = 0, l = srcElements.length; i < l; i++ ) {
				fixInput( srcElements[ i ], destElements[ i ] );
			}
		}

		// Copy the events from the original to the clone
		if ( dataAndEvents ) {
			if ( deepDataAndEvents ) {
				srcElements = srcElements || getAll( elem );
				destElements = destElements || getAll( clone );

				for ( i = 0, l = srcElements.length; i < l; i++ ) {
					cloneCopyEvent( srcElements[ i ], destElements[ i ] );
				}
			} else {
				cloneCopyEvent( elem, clone );
			}
		}

		// Preserve script evaluation history
		destElements = getAll( clone, "script" );
		if ( destElements.length > 0 ) {
			setGlobalEval( destElements, !inPage && getAll( elem, "script" ) );
		}

		// Return the cloned set
		return clone;
	},

	cleanData: function( elems ) {
		var data, elem, type,
			special = jQuery.event.special,
			i = 0;

		for ( ; ( elem = elems[ i ] ) !== undefined; i++ ) {
			if ( acceptData( elem ) ) {
				if ( ( data = elem[ dataPriv.expando ] ) ) {
					if ( data.events ) {
						for ( type in data.events ) {
							if ( special[ type ] ) {
								jQuery.event.remove( elem, type );

							// This is a shortcut to avoid jQuery.event.remove's overhead
							} else {
								jQuery.removeEvent( elem, type, data.handle );
							}
						}
					}

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataPriv.expando ] = undefined;
				}
				if ( elem[ dataUser.expando ] ) {

					// Support: Chrome <=35 - 45+
					// Assign undefined instead of using delete, see Data#remove
					elem[ dataUser.expando ] = undefined;
				}
			}
		}
	}
} );

jQuery.fn.extend( {
	detach: function( selector ) {
		return remove( this, selector, true );
	},

	remove: function( selector ) {
		return remove( this, selector );
	},

	text: function( value ) {
		return access( this, function( value ) {
			return value === undefined ?
				jQuery.text( this ) :
				this.empty().each( function() {
					if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
						this.textContent = value;
					}
				} );
		}, null, value, arguments.length );
	},

	append: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.appendChild( elem );
			}
		} );
	},

	prepend: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.nodeType === 1 || this.nodeType === 11 || this.nodeType === 9 ) {
				var target = manipulationTarget( this, elem );
				target.insertBefore( elem, target.firstChild );
			}
		} );
	},

	before: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this );
			}
		} );
	},

	after: function() {
		return domManip( this, arguments, function( elem ) {
			if ( this.parentNode ) {
				this.parentNode.insertBefore( elem, this.nextSibling );
			}
		} );
	},

	empty: function() {
		var elem,
			i = 0;

		for ( ; ( elem = this[ i ] ) != null; i++ ) {
			if ( elem.nodeType === 1 ) {

				// Prevent memory leaks
				jQuery.cleanData( getAll( elem, false ) );

				// Remove any remaining nodes
				elem.textContent = "";
			}
		}

		return this;
	},

	clone: function( dataAndEvents, deepDataAndEvents ) {
		dataAndEvents = dataAndEvents == null ? false : dataAndEvents;
		deepDataAndEvents = deepDataAndEvents == null ? dataAndEvents : deepDataAndEvents;

		return this.map( function() {
			return jQuery.clone( this, dataAndEvents, deepDataAndEvents );
		} );
	},

	html: function( value ) {
		return access( this, function( value ) {
			var elem = this[ 0 ] || {},
				i = 0,
				l = this.length;

			if ( value === undefined && elem.nodeType === 1 ) {
				return elem.innerHTML;
			}

			// See if we can take a shortcut and just use innerHTML
			if ( typeof value === "string" && !rnoInnerhtml.test( value ) &&
				!wrapMap[ ( rtagName.exec( value ) || [ "", "" ] )[ 1 ].toLowerCase() ] ) {

				value = jQuery.htmlPrefilter( value );

				try {
					for ( ; i < l; i++ ) {
						elem = this[ i ] || {};

						// Remove element nodes and prevent memory leaks
						if ( elem.nodeType === 1 ) {
							jQuery.cleanData( getAll( elem, false ) );
							elem.innerHTML = value;
						}
					}

					elem = 0;

				// If using innerHTML throws an exception, use the fallback method
				} catch ( e ) {}
			}

			if ( elem ) {
				this.empty().append( value );
			}
		}, null, value, arguments.length );
	},

	replaceWith: function() {
		var ignored = [];

		// Make the changes, replacing each non-ignored context element with the new content
		return domManip( this, arguments, function( elem ) {
			var parent = this.parentNode;

			if ( jQuery.inArray( this, ignored ) < 0 ) {
				jQuery.cleanData( getAll( this ) );
				if ( parent ) {
					parent.replaceChild( elem, this );
				}
			}

		// Force callback invocation
		}, ignored );
	}
} );

jQuery.each( {
	appendTo: "append",
	prependTo: "prepend",
	insertBefore: "before",
	insertAfter: "after",
	replaceAll: "replaceWith"
}, function( name, original ) {
	jQuery.fn[ name ] = function( selector ) {
		var elems,
			ret = [],
			insert = jQuery( selector ),
			last = insert.length - 1,
			i = 0;

		for ( ; i <= last; i++ ) {
			elems = i === last ? this : this.clone( true );
			jQuery( insert[ i ] )[ original ]( elems );

			// Support: Android <=4.0 only, PhantomJS 1 only
			// .get() because push.apply(_, arraylike) throws on ancient WebKit
			push.apply( ret, elems.get() );
		}

		return this.pushStack( ret );
	};
} );
var rnumnonpx = new RegExp( "^(" + pnum + ")(?!px)[a-z%]+$", "i" );

var getStyles = function( elem ) {

		// Support: IE <=11 only, Firefox <=30 (#15098, #14150)
		// IE throws on elements created in popups
		// FF meanwhile throws on frame elements through "defaultView.getComputedStyle"
		var view = elem.ownerDocument.defaultView;

		if ( !view || !view.opener ) {
			view = window;
		}

		return view.getComputedStyle( elem );
	};

var rboxStyle = new RegExp( cssExpand.join( "|" ), "i" );



( function() {

	// Executing both pixelPosition & boxSizingReliable tests require only one layout
	// so they're executed at the same time to save the second computation.
	function computeStyleTests() {

		// This is a singleton, we need to execute it only once
		if ( !div ) {
			return;
		}

		container.style.cssText = "position:absolute;left:-11111px;width:60px;" +
			"margin-top:1px;padding:0;border:0";
		div.style.cssText =
			"position:relative;display:block;box-sizing:border-box;overflow:scroll;" +
			"margin:auto;border:1px;padding:1px;" +
			"width:60%;top:1%";
		documentElement.appendChild( container ).appendChild( div );

		var divStyle = window.getComputedStyle( div );
		pixelPositionVal = divStyle.top !== "1%";

		// Support: Android 4.0 - 4.3 only, Firefox <=3 - 44
		reliableMarginLeftVal = roundPixelMeasures( divStyle.marginLeft ) === 12;

		// Support: Android 4.0 - 4.3 only, Safari <=9.1 - 10.1, iOS <=7.0 - 9.3
		// Some styles come back with percentage values, even though they shouldn't
		div.style.right = "60%";
		pixelBoxStylesVal = roundPixelMeasures( divStyle.right ) === 36;

		// Support: IE 9 - 11 only
		// Detect misreporting of content dimensions for box-sizing:border-box elements
		boxSizingReliableVal = roundPixelMeasures( divStyle.width ) === 36;

		// Support: IE 9 only
		// Detect overflow:scroll screwiness (gh-3699)
		div.style.position = "absolute";
		scrollboxSizeVal = div.offsetWidth === 36 || "absolute";

		documentElement.removeChild( container );

		// Nullify the div so it wouldn't be stored in the memory and
		// it will also be a sign that checks already performed
		div = null;
	}

	function roundPixelMeasures( measure ) {
		return Math.round( parseFloat( measure ) );
	}

	var pixelPositionVal, boxSizingReliableVal, scrollboxSizeVal, pixelBoxStylesVal,
		reliableMarginLeftVal,
		container = document.createElement( "div" ),
		div = document.createElement( "div" );

	// Finish early in limited (non-browser) environments
	if ( !div.style ) {
		return;
	}

	// Support: IE <=9 - 11 only
	// Style of cloned element affects source element cloned (#8908)
	div.style.backgroundClip = "content-box";
	div.cloneNode( true ).style.backgroundClip = "";
	support.clearCloneStyle = div.style.backgroundClip === "content-box";

	jQuery.extend( support, {
		boxSizingReliable: function() {
			computeStyleTests();
			return boxSizingReliableVal;
		},
		pixelBoxStyles: function() {
			computeStyleTests();
			return pixelBoxStylesVal;
		},
		pixelPosition: function() {
			computeStyleTests();
			return pixelPositionVal;
		},
		reliableMarginLeft: function() {
			computeStyleTests();
			return reliableMarginLeftVal;
		},
		scrollboxSize: function() {
			computeStyleTests();
			return scrollboxSizeVal;
		}
	} );
} )();


function curCSS( elem, name, computed ) {
	var width, minWidth, maxWidth, ret,

		// Support: Firefox 51+
		// Retrieving style before computed somehow
		// fixes an issue with getting wrong values
		// on detached elements
		style = elem.style;

	computed = computed || getStyles( elem );

	// getPropertyValue is needed for:
	//   .css('filter') (IE 9 only, #12537)
	//   .css('--customProperty) (#3144)
	if ( computed ) {
		ret = computed.getPropertyValue( name ) || computed[ name ];

		if ( ret === "" && !jQuery.contains( elem.ownerDocument, elem ) ) {
			ret = jQuery.style( elem, name );
		}

		// A tribute to the "awesome hack by Dean Edwards"
		// Android Browser returns percentage for some values,
		// but width seems to be reliably pixels.
		// This is against the CSSOM draft spec:
		// https://drafts.csswg.org/cssom/#resolved-values
		if ( !support.pixelBoxStyles() && rnumnonpx.test( ret ) && rboxStyle.test( name ) ) {

			// Remember the original values
			width = style.width;
			minWidth = style.minWidth;
			maxWidth = style.maxWidth;

			// Put in the new values to get a computed value out
			style.minWidth = style.maxWidth = style.width = ret;
			ret = computed.width;

			// Revert the changed values
			style.width = width;
			style.minWidth = minWidth;
			style.maxWidth = maxWidth;
		}
	}

	return ret !== undefined ?

		// Support: IE <=9 - 11 only
		// IE returns zIndex value as an integer.
		ret + "" :
		ret;
}


function addGetHookIf( conditionFn, hookFn ) {

	// Define the hook, we'll check on the first run if it's really needed.
	return {
		get: function() {
			if ( conditionFn() ) {

				// Hook not needed (or it's not possible to use it due
				// to missing dependency), remove it.
				delete this.get;
				return;
			}

			// Hook needed; redefine it so that the support test is not executed again.
			return ( this.get = hookFn ).apply( this, arguments );
		}
	};
}


var

	// Swappable if display is none or starts with table
	// except "table", "table-cell", or "table-caption"
	// See here for display values: https://developer.mozilla.org/en-US/docs/CSS/display
	rdisplayswap = /^(none|table(?!-c[ea]).+)/,
	rcustomProp = /^--/,
	cssShow = { position: "absolute", visibility: "hidden", display: "block" },
	cssNormalTransform = {
		letterSpacing: "0",
		fontWeight: "400"
	},

	cssPrefixes = [ "Webkit", "Moz", "ms" ],
	emptyStyle = document.createElement( "div" ).style;

// Return a css property mapped to a potentially vendor prefixed property
function vendorPropName( name ) {

	// Shortcut for names that are not vendor prefixed
	if ( name in emptyStyle ) {
		return name;
	}

	// Check for vendor prefixed names
	var capName = name[ 0 ].toUpperCase() + name.slice( 1 ),
		i = cssPrefixes.length;

	while ( i-- ) {
		name = cssPrefixes[ i ] + capName;
		if ( name in emptyStyle ) {
			return name;
		}
	}
}

// Return a property mapped along what jQuery.cssProps suggests or to
// a vendor prefixed property.
function finalPropName( name ) {
	var ret = jQuery.cssProps[ name ];
	if ( !ret ) {
		ret = jQuery.cssProps[ name ] = vendorPropName( name ) || name;
	}
	return ret;
}

function setPositiveNumber( elem, value, subtract ) {

	// Any relative (+/-) values have already been
	// normalized at this point
	var matches = rcssNum.exec( value );
	return matches ?

		// Guard against undefined "subtract", e.g., when used as in cssHooks
		Math.max( 0, matches[ 2 ] - ( subtract || 0 ) ) + ( matches[ 3 ] || "px" ) :
		value;
}

function boxModelAdjustment( elem, dimension, box, isBorderBox, styles, computedVal ) {
	var i = dimension === "width" ? 1 : 0,
		extra = 0,
		delta = 0;

	// Adjustment may not be necessary
	if ( box === ( isBorderBox ? "border" : "content" ) ) {
		return 0;
	}

	for ( ; i < 4; i += 2 ) {

		// Both box models exclude margin
		if ( box === "margin" ) {
			delta += jQuery.css( elem, box + cssExpand[ i ], true, styles );
		}

		// If we get here with a content-box, we're seeking "padding" or "border" or "margin"
		if ( !isBorderBox ) {

			// Add padding
			delta += jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );

			// For "border" or "margin", add border
			if ( box !== "padding" ) {
				delta += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );

			// But still keep track of it otherwise
			} else {
				extra += jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}

		// If we get here with a border-box (content + padding + border), we're seeking "content" or
		// "padding" or "margin"
		} else {

			// For "content", subtract padding
			if ( box === "content" ) {
				delta -= jQuery.css( elem, "padding" + cssExpand[ i ], true, styles );
			}

			// For "content" or "padding", subtract border
			if ( box !== "margin" ) {
				delta -= jQuery.css( elem, "border" + cssExpand[ i ] + "Width", true, styles );
			}
		}
	}

	// Account for positive content-box scroll gutter when requested by providing computedVal
	if ( !isBorderBox && computedVal >= 0 ) {

		// offsetWidth/offsetHeight is a rounded sum of content, padding, scroll gutter, and border
		// Assuming integer scroll gutter, subtract the rest and round down
		delta += Math.max( 0, Math.ceil(
			elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
			computedVal -
			delta -
			extra -
			0.5
		) );
	}

	return delta;
}

function getWidthOrHeight( elem, dimension, extra ) {

	// Start with computed style
	var styles = getStyles( elem ),
		val = curCSS( elem, dimension, styles ),
		isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
		valueIsBorderBox = isBorderBox;

	// Support: Firefox <=54
	// Return a confounding non-pixel value or feign ignorance, as appropriate.
	if ( rnumnonpx.test( val ) ) {
		if ( !extra ) {
			return val;
		}
		val = "auto";
	}

	// Check for style in case a browser which returns unreliable values
	// for getComputedStyle silently falls back to the reliable elem.style
	valueIsBorderBox = valueIsBorderBox &&
		( support.boxSizingReliable() || val === elem.style[ dimension ] );

	// Fall back to offsetWidth/offsetHeight when value is "auto"
	// This happens for inline elements with no explicit setting (gh-3571)
	// Support: Android <=4.1 - 4.3 only
	// Also use offsetWidth/offsetHeight for misreported inline dimensions (gh-3602)
	if ( val === "auto" ||
		!parseFloat( val ) && jQuery.css( elem, "display", false, styles ) === "inline" ) {

		val = elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ];

		// offsetWidth/offsetHeight provide border-box values
		valueIsBorderBox = true;
	}

	// Normalize "" and auto
	val = parseFloat( val ) || 0;

	// Adjust for the element's box model
	return ( val +
		boxModelAdjustment(
			elem,
			dimension,
			extra || ( isBorderBox ? "border" : "content" ),
			valueIsBorderBox,
			styles,

			// Provide the current computed size to request scroll gutter calculation (gh-3589)
			val
		)
	) + "px";
}

jQuery.extend( {

	// Add in style property hooks for overriding the default
	// behavior of getting and setting a style property
	cssHooks: {
		opacity: {
			get: function( elem, computed ) {
				if ( computed ) {

					// We should always get a number back from opacity
					var ret = curCSS( elem, "opacity" );
					return ret === "" ? "1" : ret;
				}
			}
		}
	},

	// Don't automatically add "px" to these possibly-unitless properties
	cssNumber: {
		"animationIterationCount": true,
		"columnCount": true,
		"fillOpacity": true,
		"flexGrow": true,
		"flexShrink": true,
		"fontWeight": true,
		"lineHeight": true,
		"opacity": true,
		"order": true,
		"orphans": true,
		"widows": true,
		"zIndex": true,
		"zoom": true
	},

	// Add in properties whose names you wish to fix before
	// setting or getting the value
	cssProps: {},

	// Get and set the style property on a DOM Node
	style: function( elem, name, value, extra ) {

		// Don't set styles on text and comment nodes
		if ( !elem || elem.nodeType === 3 || elem.nodeType === 8 || !elem.style ) {
			return;
		}

		// Make sure that we're working with the right name
		var ret, type, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name ),
			style = elem.style;

		// Make sure that we're working with the right name. We don't
		// want to query the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Gets hook for the prefixed version, then unprefixed version
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// Check if we're setting a value
		if ( value !== undefined ) {
			type = typeof value;

			// Convert "+=" or "-=" to relative numbers (#7345)
			if ( type === "string" && ( ret = rcssNum.exec( value ) ) && ret[ 1 ] ) {
				value = adjustCSS( elem, name, ret );

				// Fixes bug #9237
				type = "number";
			}

			// Make sure that null and NaN values aren't set (#7116)
			if ( value == null || value !== value ) {
				return;
			}

			// If a number was passed in, add the unit (except for certain CSS properties)
			if ( type === "number" ) {
				value += ret && ret[ 3 ] || ( jQuery.cssNumber[ origName ] ? "" : "px" );
			}

			// background-* props affect original clone's values
			if ( !support.clearCloneStyle && value === "" && name.indexOf( "background" ) === 0 ) {
				style[ name ] = "inherit";
			}

			// If a hook was provided, use that value, otherwise just set the specified value
			if ( !hooks || !( "set" in hooks ) ||
				( value = hooks.set( elem, value, extra ) ) !== undefined ) {

				if ( isCustomProp ) {
					style.setProperty( name, value );
				} else {
					style[ name ] = value;
				}
			}

		} else {

			// If a hook was provided get the non-computed value from there
			if ( hooks && "get" in hooks &&
				( ret = hooks.get( elem, false, extra ) ) !== undefined ) {

				return ret;
			}

			// Otherwise just get the value from the style object
			return style[ name ];
		}
	},

	css: function( elem, name, extra, styles ) {
		var val, num, hooks,
			origName = camelCase( name ),
			isCustomProp = rcustomProp.test( name );

		// Make sure that we're working with the right name. We don't
		// want to modify the value if it is a CSS custom property
		// since they are user-defined.
		if ( !isCustomProp ) {
			name = finalPropName( origName );
		}

		// Try prefixed name followed by the unprefixed name
		hooks = jQuery.cssHooks[ name ] || jQuery.cssHooks[ origName ];

		// If a hook was provided get the computed value from there
		if ( hooks && "get" in hooks ) {
			val = hooks.get( elem, true, extra );
		}

		// Otherwise, if a way to get the computed value exists, use that
		if ( val === undefined ) {
			val = curCSS( elem, name, styles );
		}

		// Convert "normal" to computed value
		if ( val === "normal" && name in cssNormalTransform ) {
			val = cssNormalTransform[ name ];
		}

		// Make numeric if forced or a qualifier was provided and val looks numeric
		if ( extra === "" || extra ) {
			num = parseFloat( val );
			return extra === true || isFinite( num ) ? num || 0 : val;
		}

		return val;
	}
} );

jQuery.each( [ "height", "width" ], function( i, dimension ) {
	jQuery.cssHooks[ dimension ] = {
		get: function( elem, computed, extra ) {
			if ( computed ) {

				// Certain elements can have dimension info if we invisibly show them
				// but it must have a current display style that would benefit
				return rdisplayswap.test( jQuery.css( elem, "display" ) ) &&

					// Support: Safari 8+
					// Table columns in Safari have non-zero offsetWidth & zero
					// getBoundingClientRect().width unless display is changed.
					// Support: IE <=11 only
					// Running getBoundingClientRect on a disconnected node
					// in IE throws an error.
					( !elem.getClientRects().length || !elem.getBoundingClientRect().width ) ?
						swap( elem, cssShow, function() {
							return getWidthOrHeight( elem, dimension, extra );
						} ) :
						getWidthOrHeight( elem, dimension, extra );
			}
		},

		set: function( elem, value, extra ) {
			var matches,
				styles = getStyles( elem ),
				isBorderBox = jQuery.css( elem, "boxSizing", false, styles ) === "border-box",
				subtract = extra && boxModelAdjustment(
					elem,
					dimension,
					extra,
					isBorderBox,
					styles
				);

			// Account for unreliable border-box dimensions by comparing offset* to computed and
			// faking a content-box to get border and padding (gh-3699)
			if ( isBorderBox && support.scrollboxSize() === styles.position ) {
				subtract -= Math.ceil(
					elem[ "offset" + dimension[ 0 ].toUpperCase() + dimension.slice( 1 ) ] -
					parseFloat( styles[ dimension ] ) -
					boxModelAdjustment( elem, dimension, "border", false, styles ) -
					0.5
				);
			}

			// Convert to pixels if value adjustment is needed
			if ( subtract && ( matches = rcssNum.exec( value ) ) &&
				( matches[ 3 ] || "px" ) !== "px" ) {

				elem.style[ dimension ] = value;
				value = jQuery.css( elem, dimension );
			}

			return setPositiveNumber( elem, value, subtract );
		}
	};
} );

jQuery.cssHooks.marginLeft = addGetHookIf( support.reliableMarginLeft,
	function( elem, computed ) {
		if ( computed ) {
			return ( parseFloat( curCSS( elem, "marginLeft" ) ) ||
				elem.getBoundingClientRect().left -
					swap( elem, { marginLeft: 0 }, function() {
						return elem.getBoundingClientRect().left;
					} )
				) + "px";
		}
	}
);

// These hooks are used by animate to expand properties
jQuery.each( {
	margin: "",
	padding: "",
	border: "Width"
}, function( prefix, suffix ) {
	jQuery.cssHooks[ prefix + suffix ] = {
		expand: function( value ) {
			var i = 0,
				expanded = {},

				// Assumes a single number if not a string
				parts = typeof value === "string" ? value.split( " " ) : [ value ];

			for ( ; i < 4; i++ ) {
				expanded[ prefix + cssExpand[ i ] + suffix ] =
					parts[ i ] || parts[ i - 2 ] || parts[ 0 ];
			}

			return expanded;
		}
	};

	if ( prefix !== "margin" ) {
		jQuery.cssHooks[ prefix + suffix ].set = setPositiveNumber;
	}
} );

jQuery.fn.extend( {
	css: function( name, value ) {
		return access( this, function( elem, name, value ) {
			var styles, len,
				map = {},
				i = 0;

			if ( Array.isArray( name ) ) {
				styles = getStyles( elem );
				len = name.length;

				for ( ; i < len; i++ ) {
					map[ name[ i ] ] = jQuery.css( elem, name[ i ], false, styles );
				}

				return map;
			}

			return value !== undefined ?
				jQuery.style( elem, name, value ) :
				jQuery.css( elem, name );
		}, name, value, arguments.length > 1 );
	}
} );


function Tween( elem, options, prop, end, easing ) {
	return new Tween.prototype.init( elem, options, prop, end, easing );
}
jQuery.Tween = Tween;

Tween.prototype = {
	constructor: Tween,
	init: function( elem, options, prop, end, easing, unit ) {
		this.elem = elem;
		this.prop = prop;
		this.easing = easing || jQuery.easing._default;
		this.options = options;
		this.start = this.now = this.cur();
		this.end = end;
		this.unit = unit || ( jQuery.cssNumber[ prop ] ? "" : "px" );
	},
	cur: function() {
		var hooks = Tween.propHooks[ this.prop ];

		return hooks && hooks.get ?
			hooks.get( this ) :
			Tween.propHooks._default.get( this );
	},
	run: function( percent ) {
		var eased,
			hooks = Tween.propHooks[ this.prop ];

		if ( this.options.duration ) {
			this.pos = eased = jQuery.easing[ this.easing ](
				percent, this.options.duration * percent, 0, 1, this.options.duration
			);
		} else {
			this.pos = eased = percent;
		}
		this.now = ( this.end - this.start ) * eased + this.start;

		if ( this.options.step ) {
			this.options.step.call( this.elem, this.now, this );
		}

		if ( hooks && hooks.set ) {
			hooks.set( this );
		} else {
			Tween.propHooks._default.set( this );
		}
		return this;
	}
};

Tween.prototype.init.prototype = Tween.prototype;

Tween.propHooks = {
	_default: {
		get: function( tween ) {
			var result;

			// Use a property on the element directly when it is not a DOM element,
			// or when there is no matching style property that exists.
			if ( tween.elem.nodeType !== 1 ||
				tween.elem[ tween.prop ] != null && tween.elem.style[ tween.prop ] == null ) {
				return tween.elem[ tween.prop ];
			}

			// Passing an empty string as a 3rd parameter to .css will automatically
			// attempt a parseFloat and fallback to a string if the parse fails.
			// Simple values such as "10px" are parsed to Float;
			// complex values such as "rotate(1rad)" are returned as-is.
			result = jQuery.css( tween.elem, tween.prop, "" );

			// Empty strings, null, undefined and "auto" are converted to 0.
			return !result || result === "auto" ? 0 : result;
		},
		set: function( tween ) {

			// Use step hook for back compat.
			// Use cssHook if its there.
			// Use .style if available and use plain properties where available.
			if ( jQuery.fx.step[ tween.prop ] ) {
				jQuery.fx.step[ tween.prop ]( tween );
			} else if ( tween.elem.nodeType === 1 &&
				( tween.elem.style[ jQuery.cssProps[ tween.prop ] ] != null ||
					jQuery.cssHooks[ tween.prop ] ) ) {
				jQuery.style( tween.elem, tween.prop, tween.now + tween.unit );
			} else {
				tween.elem[ tween.prop ] = tween.now;
			}
		}
	}
};

// Support: IE <=9 only
// Panic based approach to setting things on disconnected nodes
Tween.propHooks.scrollTop = Tween.propHooks.scrollLeft = {
	set: function( tween ) {
		if ( tween.elem.nodeType && tween.elem.parentNode ) {
			tween.elem[ tween.prop ] = tween.now;
		}
	}
};

jQuery.easing = {
	linear: function( p ) {
		return p;
	},
	swing: function( p ) {
		return 0.5 - Math.cos( p * Math.PI ) / 2;
	},
	_default: "swing"
};

jQuery.fx = Tween.prototype.init;

// Back compat <1.8 extension point
jQuery.fx.step = {};




var
	fxNow, inProgress,
	rfxtypes = /^(?:toggle|show|hide)$/,
	rrun = /queueHooks$/;

function schedule() {
	if ( inProgress ) {
		if ( document.hidden === false && window.requestAnimationFrame ) {
			window.requestAnimationFrame( schedule );
		} else {
			window.setTimeout( schedule, jQuery.fx.interval );
		}

		jQuery.fx.tick();
	}
}

// Animations created synchronously will run synchronously
function createFxNow() {
	window.setTimeout( function() {
		fxNow = undefined;
	} );
	return ( fxNow = Date.now() );
}

// Generate parameters to create a standard animation
function genFx( type, includeWidth ) {
	var which,
		i = 0,
		attrs = { height: type };

	// If we include width, step value is 1 to do all cssExpand values,
	// otherwise step value is 2 to skip over Left and Right
	includeWidth = includeWidth ? 1 : 0;
	for ( ; i < 4; i += 2 - includeWidth ) {
		which = cssExpand[ i ];
		attrs[ "margin" + which ] = attrs[ "padding" + which ] = type;
	}

	if ( includeWidth ) {
		attrs.opacity = attrs.width = type;
	}

	return attrs;
}

function createTween( value, prop, animation ) {
	var tween,
		collection = ( Animation.tweeners[ prop ] || [] ).concat( Animation.tweeners[ "*" ] ),
		index = 0,
		length = collection.length;
	for ( ; index < length; index++ ) {
		if ( ( tween = collection[ index ].call( animation, prop, value ) ) ) {

			// We're done with this property
			return tween;
		}
	}
}

function defaultPrefilter( elem, props, opts ) {
	var prop, value, toggle, hooks, oldfire, propTween, restoreDisplay, display,
		isBox = "width" in props || "height" in props,
		anim = this,
		orig = {},
		style = elem.style,
		hidden = elem.nodeType && isHiddenWithinTree( elem ),
		dataShow = dataPriv.get( elem, "fxshow" );

	// Queue-skipping animations hijack the fx hooks
	if ( !opts.queue ) {
		hooks = jQuery._queueHooks( elem, "fx" );
		if ( hooks.unqueued == null ) {
			hooks.unqueued = 0;
			oldfire = hooks.empty.fire;
			hooks.empty.fire = function() {
				if ( !hooks.unqueued ) {
					oldfire();
				}
			};
		}
		hooks.unqueued++;

		anim.always( function() {

			// Ensure the complete handler is called before this completes
			anim.always( function() {
				hooks.unqueued--;
				if ( !jQuery.queue( elem, "fx" ).length ) {
					hooks.empty.fire();
				}
			} );
		} );
	}

	// Detect show/hide animations
	for ( prop in props ) {
		value = props[ prop ];
		if ( rfxtypes.test( value ) ) {
			delete props[ prop ];
			toggle = toggle || value === "toggle";
			if ( value === ( hidden ? "hide" : "show" ) ) {

				// Pretend to be hidden if this is a "show" and
				// there is still data from a stopped show/hide
				if ( value === "show" && dataShow && dataShow[ prop ] !== undefined ) {
					hidden = true;

				// Ignore all other no-op show/hide data
				} else {
					continue;
				}
			}
			orig[ prop ] = dataShow && dataShow[ prop ] || jQuery.style( elem, prop );
		}
	}

	// Bail out if this is a no-op like .hide().hide()
	propTween = !jQuery.isEmptyObject( props );
	if ( !propTween && jQuery.isEmptyObject( orig ) ) {
		return;
	}

	// Restrict "overflow" and "display" styles during box animations
	if ( isBox && elem.nodeType === 1 ) {

		// Support: IE <=9 - 11, Edge 12 - 15
		// Record all 3 overflow attributes because IE does not infer the shorthand
		// from identically-valued overflowX and overflowY and Edge just mirrors
		// the overflowX value there.
		opts.overflow = [ style.overflow, style.overflowX, style.overflowY ];

		// Identify a display type, preferring old show/hide data over the CSS cascade
		restoreDisplay = dataShow && dataShow.display;
		if ( restoreDisplay == null ) {
			restoreDisplay = dataPriv.get( elem, "display" );
		}
		display = jQuery.css( elem, "display" );
		if ( display === "none" ) {
			if ( restoreDisplay ) {
				display = restoreDisplay;
			} else {

				// Get nonempty value(s) by temporarily forcing visibility
				showHide( [ elem ], true );
				restoreDisplay = elem.style.display || restoreDisplay;
				display = jQuery.css( elem, "display" );
				showHide( [ elem ] );
			}
		}

		// Animate inline elements as inline-block
		if ( display === "inline" || display === "inline-block" && restoreDisplay != null ) {
			if ( jQuery.css( elem, "float" ) === "none" ) {

				// Restore the original display value at the end of pure show/hide animations
				if ( !propTween ) {
					anim.done( function() {
						style.display = restoreDisplay;
					} );
					if ( restoreDisplay == null ) {
						display = style.display;
						restoreDisplay = display === "none" ? "" : display;
					}
				}
				style.display = "inline-block";
			}
		}
	}

	if ( opts.overflow ) {
		style.overflow = "hidden";
		anim.always( function() {
			style.overflow = opts.overflow[ 0 ];
			style.overflowX = opts.overflow[ 1 ];
			style.overflowY = opts.overflow[ 2 ];
		} );
	}

	// Implement show/hide animations
	propTween = false;
	for ( prop in orig ) {

		// General show/hide setup for this element animation
		if ( !propTween ) {
			if ( dataShow ) {
				if ( "hidden" in dataShow ) {
					hidden = dataShow.hidden;
				}
			} else {
				dataShow = dataPriv.access( elem, "fxshow", { display: restoreDisplay } );
			}

			// Store hidden/visible for toggle so `.stop().toggle()` "reverses"
			if ( toggle ) {
				dataShow.hidden = !hidden;
			}

			// Show elements before animating them
			if ( hidden ) {
				showHide( [ elem ], true );
			}

			/* eslint-disable no-loop-func */

			anim.done( function() {

			/* eslint-enable no-loop-func */

				// The final step of a "hide" animation is actually hiding the element
				if ( !hidden ) {
					showHide( [ elem ] );
				}
				dataPriv.remove( elem, "fxshow" );
				for ( prop in orig ) {
					jQuery.style( elem, prop, orig[ prop ] );
				}
			} );
		}

		// Per-property setup
		propTween = createTween( hidden ? dataShow[ prop ] : 0, prop, anim );
		if ( !( prop in dataShow ) ) {
			dataShow[ prop ] = propTween.start;
			if ( hidden ) {
				propTween.end = propTween.start;
				propTween.start = 0;
			}
		}
	}
}

function propFilter( props, specialEasing ) {
	var index, name, easing, value, hooks;

	// camelCase, specialEasing and expand cssHook pass
	for ( index in props ) {
		name = camelCase( index );
		easing = specialEasing[ name ];
		value = props[ index ];
		if ( Array.isArray( value ) ) {
			easing = value[ 1 ];
			value = props[ index ] = value[ 0 ];
		}

		if ( index !== name ) {
			props[ name ] = value;
			delete props[ index ];
		}

		hooks = jQuery.cssHooks[ name ];
		if ( hooks && "expand" in hooks ) {
			value = hooks.expand( value );
			delete props[ name ];

			// Not quite $.extend, this won't overwrite existing keys.
			// Reusing 'index' because we have the correct "name"
			for ( index in value ) {
				if ( !( index in props ) ) {
					props[ index ] = value[ index ];
					specialEasing[ index ] = easing;
				}
			}
		} else {
			specialEasing[ name ] = easing;
		}
	}
}

function Animation( elem, properties, options ) {
	var result,
		stopped,
		index = 0,
		length = Animation.prefilters.length,
		deferred = jQuery.Deferred().always( function() {

			// Don't match elem in the :animated selector
			delete tick.elem;
		} ),
		tick = function() {
			if ( stopped ) {
				return false;
			}
			var currentTime = fxNow || createFxNow(),
				remaining = Math.max( 0, animation.startTime + animation.duration - currentTime ),

				// Support: Android 2.3 only
				// Archaic crash bug won't allow us to use `1 - ( 0.5 || 0 )` (#12497)
				temp = remaining / animation.duration || 0,
				percent = 1 - temp,
				index = 0,
				length = animation.tweens.length;

			for ( ; index < length; index++ ) {
				animation.tweens[ index ].run( percent );
			}

			deferred.notifyWith( elem, [ animation, percent, remaining ] );

			// If there's more to do, yield
			if ( percent < 1 && length ) {
				return remaining;
			}

			// If this was an empty animation, synthesize a final progress notification
			if ( !length ) {
				deferred.notifyWith( elem, [ animation, 1, 0 ] );
			}

			// Resolve the animation and report its conclusion
			deferred.resolveWith( elem, [ animation ] );
			return false;
		},
		animation = deferred.promise( {
			elem: elem,
			props: jQuery.extend( {}, properties ),
			opts: jQuery.extend( true, {
				specialEasing: {},
				easing: jQuery.easing._default
			}, options ),
			originalProperties: properties,
			originalOptions: options,
			startTime: fxNow || createFxNow(),
			duration: options.duration,
			tweens: [],
			createTween: function( prop, end ) {
				var tween = jQuery.Tween( elem, animation.opts, prop, end,
						animation.opts.specialEasing[ prop ] || animation.opts.easing );
				animation.tweens.push( tween );
				return tween;
			},
			stop: function( gotoEnd ) {
				var index = 0,

					// If we are going to the end, we want to run all the tweens
					// otherwise we skip this part
					length = gotoEnd ? animation.tweens.length : 0;
				if ( stopped ) {
					return this;
				}
				stopped = true;
				for ( ; index < length; index++ ) {
					animation.tweens[ index ].run( 1 );
				}

				// Resolve when we played the last frame; otherwise, reject
				if ( gotoEnd ) {
					deferred.notifyWith( elem, [ animation, 1, 0 ] );
					deferred.resolveWith( elem, [ animation, gotoEnd ] );
				} else {
					deferred.rejectWith( elem, [ animation, gotoEnd ] );
				}
				return this;
			}
		} ),
		props = animation.props;

	propFilter( props, animation.opts.specialEasing );

	for ( ; index < length; index++ ) {
		result = Animation.prefilters[ index ].call( animation, elem, props, animation.opts );
		if ( result ) {
			if ( isFunction( result.stop ) ) {
				jQuery._queueHooks( animation.elem, animation.opts.queue ).stop =
					result.stop.bind( result );
			}
			return result;
		}
	}

	jQuery.map( props, createTween, animation );

	if ( isFunction( animation.opts.start ) ) {
		animation.opts.start.call( elem, animation );
	}

	// Attach callbacks from options
	animation
		.progress( animation.opts.progress )
		.done( animation.opts.done, animation.opts.complete )
		.fail( animation.opts.fail )
		.always( animation.opts.always );

	jQuery.fx.timer(
		jQuery.extend( tick, {
			elem: elem,
			anim: animation,
			queue: animation.opts.queue
		} )
	);

	return animation;
}

jQuery.Animation = jQuery.extend( Animation, {

	tweeners: {
		"*": [ function( prop, value ) {
			var tween = this.createTween( prop, value );
			adjustCSS( tween.elem, prop, rcssNum.exec( value ), tween );
			return tween;
		} ]
	},

	tweener: function( props, callback ) {
		if ( isFunction( props ) ) {
			callback = props;
			props = [ "*" ];
		} else {
			props = props.match( rnothtmlwhite );
		}

		var prop,
			index = 0,
			length = props.length;

		for ( ; index < length; index++ ) {
			prop = props[ index ];
			Animation.tweeners[ prop ] = Animation.tweeners[ prop ] || [];
			Animation.tweeners[ prop ].unshift( callback );
		}
	},

	prefilters: [ defaultPrefilter ],

	prefilter: function( callback, prepend ) {
		if ( prepend ) {
			Animation.prefilters.unshift( callback );
		} else {
			Animation.prefilters.push( callback );
		}
	}
} );

jQuery.speed = function( speed, easing, fn ) {
	var opt = speed && typeof speed === "object" ? jQuery.extend( {}, speed ) : {
		complete: fn || !fn && easing ||
			isFunction( speed ) && speed,
		duration: speed,
		easing: fn && easing || easing && !isFunction( easing ) && easing
	};

	// Go to the end state if fx are off
	if ( jQuery.fx.off ) {
		opt.duration = 0;

	} else {
		if ( typeof opt.duration !== "number" ) {
			if ( opt.duration in jQuery.fx.speeds ) {
				opt.duration = jQuery.fx.speeds[ opt.duration ];

			} else {
				opt.duration = jQuery.fx.speeds._default;
			}
		}
	}

	// Normalize opt.queue - true/undefined/null -> "fx"
	if ( opt.queue == null || opt.queue === true ) {
		opt.queue = "fx";
	}

	// Queueing
	opt.old = opt.complete;

	opt.complete = function() {
		if ( isFunction( opt.old ) ) {
			opt.old.call( this );
		}

		if ( opt.queue ) {
			jQuery.dequeue( this, opt.queue );
		}
	};

	return opt;
};

jQuery.fn.extend( {
	fadeTo: function( speed, to, easing, callback ) {

		// Show any hidden elements after setting opacity to 0
		return this.filter( isHiddenWithinTree ).css( "opacity", 0 ).show()

			// Animate to the value specified
			.end().animate( { opacity: to }, speed, easing, callback );
	},
	animate: function( prop, speed, easing, callback ) {
		var empty = jQuery.isEmptyObject( prop ),
			optall = jQuery.speed( speed, easing, callback ),
			doAnimation = function() {

				// Operate on a copy of prop so per-property easing won't be lost
				var anim = Animation( this, jQuery.extend( {}, prop ), optall );

				// Empty animations, or finishing resolves immediately
				if ( empty || dataPriv.get( this, "finish" ) ) {
					anim.stop( true );
				}
			};
			doAnimation.finish = doAnimation;

		return empty || optall.queue === false ?
			this.each( doAnimation ) :
			this.queue( optall.queue, doAnimation );
	},
	stop: function( type, clearQueue, gotoEnd ) {
		var stopQueue = function( hooks ) {
			var stop = hooks.stop;
			delete hooks.stop;
			stop( gotoEnd );
		};

		if ( typeof type !== "string" ) {
			gotoEnd = clearQueue;
			clearQueue = type;
			type = undefined;
		}
		if ( clearQueue && type !== false ) {
			this.queue( type || "fx", [] );
		}

		return this.each( function() {
			var dequeue = true,
				index = type != null && type + "queueHooks",
				timers = jQuery.timers,
				data = dataPriv.get( this );

			if ( index ) {
				if ( data[ index ] && data[ index ].stop ) {
					stopQueue( data[ index ] );
				}
			} else {
				for ( index in data ) {
					if ( data[ index ] && data[ index ].stop && rrun.test( index ) ) {
						stopQueue( data[ index ] );
					}
				}
			}

			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this &&
					( type == null || timers[ index ].queue === type ) ) {

					timers[ index ].anim.stop( gotoEnd );
					dequeue = false;
					timers.splice( index, 1 );
				}
			}

			// Start the next in the queue if the last step wasn't forced.
			// Timers currently will call their complete callbacks, which
			// will dequeue but only if they were gotoEnd.
			if ( dequeue || !gotoEnd ) {
				jQuery.dequeue( this, type );
			}
		} );
	},
	finish: function( type ) {
		if ( type !== false ) {
			type = type || "fx";
		}
		return this.each( function() {
			var index,
				data = dataPriv.get( this ),
				queue = data[ type + "queue" ],
				hooks = data[ type + "queueHooks" ],
				timers = jQuery.timers,
				length = queue ? queue.length : 0;

			// Enable finishing flag on private data
			data.finish = true;

			// Empty the queue first
			jQuery.queue( this, type, [] );

			if ( hooks && hooks.stop ) {
				hooks.stop.call( this, true );
			}

			// Look for any active animations, and finish them
			for ( index = timers.length; index--; ) {
				if ( timers[ index ].elem === this && timers[ index ].queue === type ) {
					timers[ index ].anim.stop( true );
					timers.splice( index, 1 );
				}
			}

			// Look for any animations in the old queue and finish them
			for ( index = 0; index < length; index++ ) {
				if ( queue[ index ] && queue[ index ].finish ) {
					queue[ index ].finish.call( this );
				}
			}

			// Turn off finishing flag
			delete data.finish;
		} );
	}
} );

jQuery.each( [ "toggle", "show", "hide" ], function( i, name ) {
	var cssFn = jQuery.fn[ name ];
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return speed == null || typeof speed === "boolean" ?
			cssFn.apply( this, arguments ) :
			this.animate( genFx( name, true ), speed, easing, callback );
	};
} );

// Generate shortcuts for custom animations
jQuery.each( {
	slideDown: genFx( "show" ),
	slideUp: genFx( "hide" ),
	slideToggle: genFx( "toggle" ),
	fadeIn: { opacity: "show" },
	fadeOut: { opacity: "hide" },
	fadeToggle: { opacity: "toggle" }
}, function( name, props ) {
	jQuery.fn[ name ] = function( speed, easing, callback ) {
		return this.animate( props, speed, easing, callback );
	};
} );

jQuery.timers = [];
jQuery.fx.tick = function() {
	var timer,
		i = 0,
		timers = jQuery.timers;

	fxNow = Date.now();

	for ( ; i < timers.length; i++ ) {
		timer = timers[ i ];

		// Run the timer and safely remove it when done (allowing for external removal)
		if ( !timer() && timers[ i ] === timer ) {
			timers.splice( i--, 1 );
		}
	}

	if ( !timers.length ) {
		jQuery.fx.stop();
	}
	fxNow = undefined;
};

jQuery.fx.timer = function( timer ) {
	jQuery.timers.push( timer );
	jQuery.fx.start();
};

jQuery.fx.interval = 13;
jQuery.fx.start = function() {
	if ( inProgress ) {
		return;
	}

	inProgress = true;
	schedule();
};

jQuery.fx.stop = function() {
	inProgress = null;
};

jQuery.fx.speeds = {
	slow: 600,
	fast: 200,

	// Default speed
	_default: 400
};


// Based off of the plugin by Clint Helfers, with permission.
// https://web.archive.org/web/20100324014747/http://blindsignals.com/index.php/2009/07/jquery-delay/
jQuery.fn.delay = function( time, type ) {
	time = jQuery.fx ? jQuery.fx.speeds[ time ] || time : time;
	type = type || "fx";

	return this.queue( type, function( next, hooks ) {
		var timeout = window.setTimeout( next, time );
		hooks.stop = function() {
			window.clearTimeout( timeout );
		};
	} );
};


( function() {
	var input = document.createElement( "input" ),
		select = document.createElement( "select" ),
		opt = select.appendChild( document.createElement( "option" ) );

	input.type = "checkbox";

	// Support: Android <=4.3 only
	// Default value for a checkbox should be "on"
	support.checkOn = input.value !== "";

	// Support: IE <=11 only
	// Must access selectedIndex to make default options select
	support.optSelected = opt.selected;

	// Support: IE <=11 only
	// An input loses its value after becoming a radio
	input = document.createElement( "input" );
	input.value = "t";
	input.type = "radio";
	support.radioValue = input.value === "t";
} )();


var boolHook,
	attrHandle = jQuery.expr.attrHandle;

jQuery.fn.extend( {
	attr: function( name, value ) {
		return access( this, jQuery.attr, name, value, arguments.length > 1 );
	},

	removeAttr: function( name ) {
		return this.each( function() {
			jQuery.removeAttr( this, name );
		} );
	}
} );

jQuery.extend( {
	attr: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set attributes on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		// Fallback to prop when attributes are not supported
		if ( typeof elem.getAttribute === "undefined" ) {
			return jQuery.prop( elem, name, value );
		}

		// Attribute hooks are determined by the lowercase version
		// Grab necessary hook if one is defined
		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {
			hooks = jQuery.attrHooks[ name.toLowerCase() ] ||
				( jQuery.expr.match.bool.test( name ) ? boolHook : undefined );
		}

		if ( value !== undefined ) {
			if ( value === null ) {
				jQuery.removeAttr( elem, name );
				return;
			}

			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			elem.setAttribute( name, value + "" );
			return value;
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		ret = jQuery.find.attr( elem, name );

		// Non-existent attributes return null, we normalize to undefined
		return ret == null ? undefined : ret;
	},

	attrHooks: {
		type: {
			set: function( elem, value ) {
				if ( !support.radioValue && value === "radio" &&
					nodeName( elem, "input" ) ) {
					var val = elem.value;
					elem.setAttribute( "type", value );
					if ( val ) {
						elem.value = val;
					}
					return value;
				}
			}
		}
	},

	removeAttr: function( elem, value ) {
		var name,
			i = 0,

			// Attribute names can contain non-HTML whitespace characters
			// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2
			attrNames = value && value.match( rnothtmlwhite );

		if ( attrNames && elem.nodeType === 1 ) {
			while ( ( name = attrNames[ i++ ] ) ) {
				elem.removeAttribute( name );
			}
		}
	}
} );

// Hooks for boolean attributes
boolHook = {
	set: function( elem, value, name ) {
		if ( value === false ) {

			// Remove boolean attributes when set to false
			jQuery.removeAttr( elem, name );
		} else {
			elem.setAttribute( name, name );
		}
		return name;
	}
};

jQuery.each( jQuery.expr.match.bool.source.match( /\w+/g ), function( i, name ) {
	var getter = attrHandle[ name ] || jQuery.find.attr;

	attrHandle[ name ] = function( elem, name, isXML ) {
		var ret, handle,
			lowercaseName = name.toLowerCase();

		if ( !isXML ) {

			// Avoid an infinite loop by temporarily removing this function from the getter
			handle = attrHandle[ lowercaseName ];
			attrHandle[ lowercaseName ] = ret;
			ret = getter( elem, name, isXML ) != null ?
				lowercaseName :
				null;
			attrHandle[ lowercaseName ] = handle;
		}
		return ret;
	};
} );




var rfocusable = /^(?:input|select|textarea|button)$/i,
	rclickable = /^(?:a|area)$/i;

jQuery.fn.extend( {
	prop: function( name, value ) {
		return access( this, jQuery.prop, name, value, arguments.length > 1 );
	},

	removeProp: function( name ) {
		return this.each( function() {
			delete this[ jQuery.propFix[ name ] || name ];
		} );
	}
} );

jQuery.extend( {
	prop: function( elem, name, value ) {
		var ret, hooks,
			nType = elem.nodeType;

		// Don't get/set properties on text, comment and attribute nodes
		if ( nType === 3 || nType === 8 || nType === 2 ) {
			return;
		}

		if ( nType !== 1 || !jQuery.isXMLDoc( elem ) ) {

			// Fix name and attach hooks
			name = jQuery.propFix[ name ] || name;
			hooks = jQuery.propHooks[ name ];
		}

		if ( value !== undefined ) {
			if ( hooks && "set" in hooks &&
				( ret = hooks.set( elem, value, name ) ) !== undefined ) {
				return ret;
			}

			return ( elem[ name ] = value );
		}

		if ( hooks && "get" in hooks && ( ret = hooks.get( elem, name ) ) !== null ) {
			return ret;
		}

		return elem[ name ];
	},

	propHooks: {
		tabIndex: {
			get: function( elem ) {

				// Support: IE <=9 - 11 only
				// elem.tabIndex doesn't always return the
				// correct value when it hasn't been explicitly set
				// https://web.archive.org/web/20141116233347/http://fluidproject.org/blog/2008/01/09/getting-setting-and-removing-tabindex-values-with-javascript/
				// Use proper attribute retrieval(#12072)
				var tabindex = jQuery.find.attr( elem, "tabindex" );

				if ( tabindex ) {
					return parseInt( tabindex, 10 );
				}

				if (
					rfocusable.test( elem.nodeName ) ||
					rclickable.test( elem.nodeName ) &&
					elem.href
				) {
					return 0;
				}

				return -1;
			}
		}
	},

	propFix: {
		"for": "htmlFor",
		"class": "className"
	}
} );

// Support: IE <=11 only
// Accessing the selectedIndex property
// forces the browser to respect setting selected
// on the option
// The getter ensures a default option is selected
// when in an optgroup
// eslint rule "no-unused-expressions" is disabled for this code
// since it considers such accessions noop
if ( !support.optSelected ) {
	jQuery.propHooks.selected = {
		get: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent && parent.parentNode ) {
				parent.parentNode.selectedIndex;
			}
			return null;
		},
		set: function( elem ) {

			/* eslint no-unused-expressions: "off" */

			var parent = elem.parentNode;
			if ( parent ) {
				parent.selectedIndex;

				if ( parent.parentNode ) {
					parent.parentNode.selectedIndex;
				}
			}
		}
	};
}

jQuery.each( [
	"tabIndex",
	"readOnly",
	"maxLength",
	"cellSpacing",
	"cellPadding",
	"rowSpan",
	"colSpan",
	"useMap",
	"frameBorder",
	"contentEditable"
], function() {
	jQuery.propFix[ this.toLowerCase() ] = this;
} );




	// Strip and collapse whitespace according to HTML spec
	// https://infra.spec.whatwg.org/#strip-and-collapse-ascii-whitespace
	function stripAndCollapse( value ) {
		var tokens = value.match( rnothtmlwhite ) || [];
		return tokens.join( " " );
	}


function getClass( elem ) {
	return elem.getAttribute && elem.getAttribute( "class" ) || "";
}

function classesToArray( value ) {
	if ( Array.isArray( value ) ) {
		return value;
	}
	if ( typeof value === "string" ) {
		return value.match( rnothtmlwhite ) || [];
	}
	return [];
}

jQuery.fn.extend( {
	addClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).addClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {
						if ( cur.indexOf( " " + clazz + " " ) < 0 ) {
							cur += clazz + " ";
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	removeClass: function( value ) {
		var classes, elem, cur, curValue, clazz, j, finalValue,
			i = 0;

		if ( isFunction( value ) ) {
			return this.each( function( j ) {
				jQuery( this ).removeClass( value.call( this, j, getClass( this ) ) );
			} );
		}

		if ( !arguments.length ) {
			return this.attr( "class", "" );
		}

		classes = classesToArray( value );

		if ( classes.length ) {
			while ( ( elem = this[ i++ ] ) ) {
				curValue = getClass( elem );

				// This expression is here for better compressibility (see addClass)
				cur = elem.nodeType === 1 && ( " " + stripAndCollapse( curValue ) + " " );

				if ( cur ) {
					j = 0;
					while ( ( clazz = classes[ j++ ] ) ) {

						// Remove *all* instances
						while ( cur.indexOf( " " + clazz + " " ) > -1 ) {
							cur = cur.replace( " " + clazz + " ", " " );
						}
					}

					// Only assign if different to avoid unneeded rendering.
					finalValue = stripAndCollapse( cur );
					if ( curValue !== finalValue ) {
						elem.setAttribute( "class", finalValue );
					}
				}
			}
		}

		return this;
	},

	toggleClass: function( value, stateVal ) {
		var type = typeof value,
			isValidValue = type === "string" || Array.isArray( value );

		if ( typeof stateVal === "boolean" && isValidValue ) {
			return stateVal ? this.addClass( value ) : this.removeClass( value );
		}

		if ( isFunction( value ) ) {
			return this.each( function( i ) {
				jQuery( this ).toggleClass(
					value.call( this, i, getClass( this ), stateVal ),
					stateVal
				);
			} );
		}

		return this.each( function() {
			var className, i, self, classNames;

			if ( isValidValue ) {

				// Toggle individual class names
				i = 0;
				self = jQuery( this );
				classNames = classesToArray( value );

				while ( ( className = classNames[ i++ ] ) ) {

					// Check each className given, space separated list
					if ( self.hasClass( className ) ) {
						self.removeClass( className );
					} else {
						self.addClass( className );
					}
				}

			// Toggle whole class name
			} else if ( value === undefined || type === "boolean" ) {
				className = getClass( this );
				if ( className ) {

					// Store className if set
					dataPriv.set( this, "__className__", className );
				}

				// If the element has a class name or if we're passed `false`,
				// then remove the whole classname (if there was one, the above saved it).
				// Otherwise bring back whatever was previously saved (if anything),
				// falling back to the empty string if nothing was stored.
				if ( this.setAttribute ) {
					this.setAttribute( "class",
						className || value === false ?
						"" :
						dataPriv.get( this, "__className__" ) || ""
					);
				}
			}
		} );
	},

	hasClass: function( selector ) {
		var className, elem,
			i = 0;

		className = " " + selector + " ";
		while ( ( elem = this[ i++ ] ) ) {
			if ( elem.nodeType === 1 &&
				( " " + stripAndCollapse( getClass( elem ) ) + " " ).indexOf( className ) > -1 ) {
					return true;
			}
		}

		return false;
	}
} );




var rreturn = /\r/g;

jQuery.fn.extend( {
	val: function( value ) {
		var hooks, ret, valueIsFunction,
			elem = this[ 0 ];

		if ( !arguments.length ) {
			if ( elem ) {
				hooks = jQuery.valHooks[ elem.type ] ||
					jQuery.valHooks[ elem.nodeName.toLowerCase() ];

				if ( hooks &&
					"get" in hooks &&
					( ret = hooks.get( elem, "value" ) ) !== undefined
				) {
					return ret;
				}

				ret = elem.value;

				// Handle most common string cases
				if ( typeof ret === "string" ) {
					return ret.replace( rreturn, "" );
				}

				// Handle cases where value is null/undef or number
				return ret == null ? "" : ret;
			}

			return;
		}

		valueIsFunction = isFunction( value );

		return this.each( function( i ) {
			var val;

			if ( this.nodeType !== 1 ) {
				return;
			}

			if ( valueIsFunction ) {
				val = value.call( this, i, jQuery( this ).val() );
			} else {
				val = value;
			}

			// Treat null/undefined as ""; convert numbers to string
			if ( val == null ) {
				val = "";

			} else if ( typeof val === "number" ) {
				val += "";

			} else if ( Array.isArray( val ) ) {
				val = jQuery.map( val, function( value ) {
					return value == null ? "" : value + "";
				} );
			}

			hooks = jQuery.valHooks[ this.type ] || jQuery.valHooks[ this.nodeName.toLowerCase() ];

			// If set returns undefined, fall back to normal setting
			if ( !hooks || !( "set" in hooks ) || hooks.set( this, val, "value" ) === undefined ) {
				this.value = val;
			}
		} );
	}
} );

jQuery.extend( {
	valHooks: {
		option: {
			get: function( elem ) {

				var val = jQuery.find.attr( elem, "value" );
				return val != null ?
					val :

					// Support: IE <=10 - 11 only
					// option.text throws exceptions (#14686, #14858)
					// Strip and collapse whitespace
					// https://html.spec.whatwg.org/#strip-and-collapse-whitespace
					stripAndCollapse( jQuery.text( elem ) );
			}
		},
		select: {
			get: function( elem ) {
				var value, option, i,
					options = elem.options,
					index = elem.selectedIndex,
					one = elem.type === "select-one",
					values = one ? null : [],
					max = one ? index + 1 : options.length;

				if ( index < 0 ) {
					i = max;

				} else {
					i = one ? index : 0;
				}

				// Loop through all the selected options
				for ( ; i < max; i++ ) {
					option = options[ i ];

					// Support: IE <=9 only
					// IE8-9 doesn't update selected after form reset (#2551)
					if ( ( option.selected || i === index ) &&

							// Don't return options that are disabled or in a disabled optgroup
							!option.disabled &&
							( !option.parentNode.disabled ||
								!nodeName( option.parentNode, "optgroup" ) ) ) {

						// Get the specific value for the option
						value = jQuery( option ).val();

						// We don't need an array for one selects
						if ( one ) {
							return value;
						}

						// Multi-Selects return an array
						values.push( value );
					}
				}

				return values;
			},

			set: function( elem, value ) {
				var optionSet, option,
					options = elem.options,
					values = jQuery.makeArray( value ),
					i = options.length;

				while ( i-- ) {
					option = options[ i ];

					/* eslint-disable no-cond-assign */

					if ( option.selected =
						jQuery.inArray( jQuery.valHooks.option.get( option ), values ) > -1
					) {
						optionSet = true;
					}

					/* eslint-enable no-cond-assign */
				}

				// Force browsers to behave consistently when non-matching value is set
				if ( !optionSet ) {
					elem.selectedIndex = -1;
				}
				return values;
			}
		}
	}
} );

// Radios and checkboxes getter/setter
jQuery.each( [ "radio", "checkbox" ], function() {
	jQuery.valHooks[ this ] = {
		set: function( elem, value ) {
			if ( Array.isArray( value ) ) {
				return ( elem.checked = jQuery.inArray( jQuery( elem ).val(), value ) > -1 );
			}
		}
	};
	if ( !support.checkOn ) {
		jQuery.valHooks[ this ].get = function( elem ) {
			return elem.getAttribute( "value" ) === null ? "on" : elem.value;
		};
	}
} );




// Return jQuery for attributes-only inclusion


support.focusin = "onfocusin" in window;


var rfocusMorph = /^(?:focusinfocus|focusoutblur)$/,
	stopPropagationCallback = function( e ) {
		e.stopPropagation();
	};

jQuery.extend( jQuery.event, {

	trigger: function( event, data, elem, onlyHandlers ) {

		var i, cur, tmp, bubbleType, ontype, handle, special, lastElement,
			eventPath = [ elem || document ],
			type = hasOwn.call( event, "type" ) ? event.type : event,
			namespaces = hasOwn.call( event, "namespace" ) ? event.namespace.split( "." ) : [];

		cur = lastElement = tmp = elem = elem || document;

		// Don't do events on text and comment nodes
		if ( elem.nodeType === 3 || elem.nodeType === 8 ) {
			return;
		}

		// focus/blur morphs to focusin/out; ensure we're not firing them right now
		if ( rfocusMorph.test( type + jQuery.event.triggered ) ) {
			return;
		}

		if ( type.indexOf( "." ) > -1 ) {

			// Namespaced trigger; create a regexp to match event type in handle()
			namespaces = type.split( "." );
			type = namespaces.shift();
			namespaces.sort();
		}
		ontype = type.indexOf( ":" ) < 0 && "on" + type;

		// Caller can pass in a jQuery.Event object, Object, or just an event type string
		event = event[ jQuery.expando ] ?
			event :
			new jQuery.Event( type, typeof event === "object" && event );

		// Trigger bitmask: & 1 for native handlers; & 2 for jQuery (always true)
		event.isTrigger = onlyHandlers ? 2 : 3;
		event.namespace = namespaces.join( "." );
		event.rnamespace = event.namespace ?
			new RegExp( "(^|\\.)" + namespaces.join( "\\.(?:.*\\.|)" ) + "(\\.|$)" ) :
			null;

		// Clean up the event in case it is being reused
		event.result = undefined;
		if ( !event.target ) {
			event.target = elem;
		}

		// Clone any incoming data and prepend the event, creating the handler arg list
		data = data == null ?
			[ event ] :
			jQuery.makeArray( data, [ event ] );

		// Allow special events to draw outside the lines
		special = jQuery.event.special[ type ] || {};
		if ( !onlyHandlers && special.trigger && special.trigger.apply( elem, data ) === false ) {
			return;
		}

		// Determine event propagation path in advance, per W3C events spec (#9951)
		// Bubble up to document, then to window; watch for a global ownerDocument var (#9724)
		if ( !onlyHandlers && !special.noBubble && !isWindow( elem ) ) {

			bubbleType = special.delegateType || type;
			if ( !rfocusMorph.test( bubbleType + type ) ) {
				cur = cur.parentNode;
			}
			for ( ; cur; cur = cur.parentNode ) {
				eventPath.push( cur );
				tmp = cur;
			}

			// Only add window if we got to document (e.g., not plain obj or detached DOM)
			if ( tmp === ( elem.ownerDocument || document ) ) {
				eventPath.push( tmp.defaultView || tmp.parentWindow || window );
			}
		}

		// Fire handlers on the event path
		i = 0;
		while ( ( cur = eventPath[ i++ ] ) && !event.isPropagationStopped() ) {
			lastElement = cur;
			event.type = i > 1 ?
				bubbleType :
				special.bindType || type;

			// jQuery handler
			handle = ( dataPriv.get( cur, "events" ) || {} )[ event.type ] &&
				dataPriv.get( cur, "handle" );
			if ( handle ) {
				handle.apply( cur, data );
			}

			// Native handler
			handle = ontype && cur[ ontype ];
			if ( handle && handle.apply && acceptData( cur ) ) {
				event.result = handle.apply( cur, data );
				if ( event.result === false ) {
					event.preventDefault();
				}
			}
		}
		event.type = type;

		// If nobody prevented the default action, do it now
		if ( !onlyHandlers && !event.isDefaultPrevented() ) {

			if ( ( !special._default ||
				special._default.apply( eventPath.pop(), data ) === false ) &&
				acceptData( elem ) ) {

				// Call a native DOM method on the target with the same name as the event.
				// Don't do default actions on window, that's where global variables be (#6170)
				if ( ontype && isFunction( elem[ type ] ) && !isWindow( elem ) ) {

					// Don't re-trigger an onFOO event when we call its FOO() method
					tmp = elem[ ontype ];

					if ( tmp ) {
						elem[ ontype ] = null;
					}

					// Prevent re-triggering of the same event, since we already bubbled it above
					jQuery.event.triggered = type;

					if ( event.isPropagationStopped() ) {
						lastElement.addEventListener( type, stopPropagationCallback );
					}

					elem[ type ]();

					if ( event.isPropagationStopped() ) {
						lastElement.removeEventListener( type, stopPropagationCallback );
					}

					jQuery.event.triggered = undefined;

					if ( tmp ) {
						elem[ ontype ] = tmp;
					}
				}
			}
		}

		return event.result;
	},

	// Piggyback on a donor event to simulate a different one
	// Used only for `focus(in | out)` events
	simulate: function( type, elem, event ) {
		var e = jQuery.extend(
			new jQuery.Event(),
			event,
			{
				type: type,
				isSimulated: true
			}
		);

		jQuery.event.trigger( e, null, elem );
	}

} );

jQuery.fn.extend( {

	trigger: function( type, data ) {
		return this.each( function() {
			jQuery.event.trigger( type, data, this );
		} );
	},
	triggerHandler: function( type, data ) {
		var elem = this[ 0 ];
		if ( elem ) {
			return jQuery.event.trigger( type, data, elem, true );
		}
	}
} );


// Support: Firefox <=44
// Firefox doesn't have focus(in | out) events
// Related ticket - https://bugzilla.mozilla.org/show_bug.cgi?id=687787
//
// Support: Chrome <=48 - 49, Safari <=9.0 - 9.1
// focus(in | out) events fire after focus & blur events,
// which is spec violation - http://www.w3.org/TR/DOM-Level-3-Events/#events-focusevent-event-order
// Related ticket - https://bugs.chromium.org/p/chromium/issues/detail?id=449857
if ( !support.focusin ) {
	jQuery.each( { focus: "focusin", blur: "focusout" }, function( orig, fix ) {

		// Attach a single capturing handler on the document while someone wants focusin/focusout
		var handler = function( event ) {
			jQuery.event.simulate( fix, event.target, jQuery.event.fix( event ) );
		};

		jQuery.event.special[ fix ] = {
			setup: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix );

				if ( !attaches ) {
					doc.addEventListener( orig, handler, true );
				}
				dataPriv.access( doc, fix, ( attaches || 0 ) + 1 );
			},
			teardown: function() {
				var doc = this.ownerDocument || this,
					attaches = dataPriv.access( doc, fix ) - 1;

				if ( !attaches ) {
					doc.removeEventListener( orig, handler, true );
					dataPriv.remove( doc, fix );

				} else {
					dataPriv.access( doc, fix, attaches );
				}
			}
		};
	} );
}
var location = window.location;

var nonce = Date.now();

var rquery = ( /\?/ );



// Cross-browser xml parsing
jQuery.parseXML = function( data ) {
	var xml;
	if ( !data || typeof data !== "string" ) {
		return null;
	}

	// Support: IE 9 - 11 only
	// IE throws on parseFromString with invalid input.
	try {
		xml = ( new window.DOMParser() ).parseFromString( data, "text/xml" );
	} catch ( e ) {
		xml = undefined;
	}

	if ( !xml || xml.getElementsByTagName( "parsererror" ).length ) {
		jQuery.error( "Invalid XML: " + data );
	}
	return xml;
};


var
	rbracket = /\[\]$/,
	rCRLF = /\r?\n/g,
	rsubmitterTypes = /^(?:submit|button|image|reset|file)$/i,
	rsubmittable = /^(?:input|select|textarea|keygen)/i;

function buildParams( prefix, obj, traditional, add ) {
	var name;

	if ( Array.isArray( obj ) ) {

		// Serialize array item.
		jQuery.each( obj, function( i, v ) {
			if ( traditional || rbracket.test( prefix ) ) {

				// Treat each array item as a scalar.
				add( prefix, v );

			} else {

				// Item is non-scalar (array or object), encode its numeric index.
				buildParams(
					prefix + "[" + ( typeof v === "object" && v != null ? i : "" ) + "]",
					v,
					traditional,
					add
				);
			}
		} );

	} else if ( !traditional && toType( obj ) === "object" ) {

		// Serialize object item.
		for ( name in obj ) {
			buildParams( prefix + "[" + name + "]", obj[ name ], traditional, add );
		}

	} else {

		// Serialize scalar item.
		add( prefix, obj );
	}
}

// Serialize an array of form elements or a set of
// key/values into a query string
jQuery.param = function( a, traditional ) {
	var prefix,
		s = [],
		add = function( key, valueOrFunction ) {

			// If value is a function, invoke it and use its return value
			var value = isFunction( valueOrFunction ) ?
				valueOrFunction() :
				valueOrFunction;

			s[ s.length ] = encodeURIComponent( key ) + "=" +
				encodeURIComponent( value == null ? "" : value );
		};

	// If an array was passed in, assume that it is an array of form elements.
	if ( Array.isArray( a ) || ( a.jquery && !jQuery.isPlainObject( a ) ) ) {

		// Serialize the form elements
		jQuery.each( a, function() {
			add( this.name, this.value );
		} );

	} else {

		// If traditional, encode the "old" way (the way 1.3.2 or older
		// did it), otherwise encode params recursively.
		for ( prefix in a ) {
			buildParams( prefix, a[ prefix ], traditional, add );
		}
	}

	// Return the resulting serialization
	return s.join( "&" );
};

jQuery.fn.extend( {
	serialize: function() {
		return jQuery.param( this.serializeArray() );
	},
	serializeArray: function() {
		return this.map( function() {

			// Can add propHook for "elements" to filter or add form elements
			var elements = jQuery.prop( this, "elements" );
			return elements ? jQuery.makeArray( elements ) : this;
		} )
		.filter( function() {
			var type = this.type;

			// Use .is( ":disabled" ) so that fieldset[disabled] works
			return this.name && !jQuery( this ).is( ":disabled" ) &&
				rsubmittable.test( this.nodeName ) && !rsubmitterTypes.test( type ) &&
				( this.checked || !rcheckableType.test( type ) );
		} )
		.map( function( i, elem ) {
			var val = jQuery( this ).val();

			if ( val == null ) {
				return null;
			}

			if ( Array.isArray( val ) ) {
				return jQuery.map( val, function( val ) {
					return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
				} );
			}

			return { name: elem.name, value: val.replace( rCRLF, "\r\n" ) };
		} ).get();
	}
} );


var
	r20 = /%20/g,
	rhash = /#.*$/,
	rantiCache = /([?&])_=[^&]*/,
	rheaders = /^(.*?):[ \t]*([^\r\n]*)$/mg,

	// #7653, #8125, #8152: local protocol detection
	rlocalProtocol = /^(?:about|app|app-storage|.+-extension|file|res|widget):$/,
	rnoContent = /^(?:GET|HEAD)$/,
	rprotocol = /^\/\//,

	/* Prefilters
	 * 1) They are useful to introduce custom dataTypes (see ajax/jsonp.js for an example)
	 * 2) These are called:
	 *    - BEFORE asking for a transport
	 *    - AFTER param serialization (s.data is a string if s.processData is true)
	 * 3) key is the dataType
	 * 4) the catchall symbol "*" can be used
	 * 5) execution will start with transport dataType and THEN continue down to "*" if needed
	 */
	prefilters = {},

	/* Transports bindings
	 * 1) key is the dataType
	 * 2) the catchall symbol "*" can be used
	 * 3) selection will start with transport dataType and THEN go to "*" if needed
	 */
	transports = {},

	// Avoid comment-prolog char sequence (#10098); must appease lint and evade compression
	allTypes = "*/".concat( "*" ),

	// Anchor tag for parsing the document origin
	originAnchor = document.createElement( "a" );
	originAnchor.href = location.href;

// Base "constructor" for jQuery.ajaxPrefilter and jQuery.ajaxTransport
function addToPrefiltersOrTransports( structure ) {

	// dataTypeExpression is optional and defaults to "*"
	return function( dataTypeExpression, func ) {

		if ( typeof dataTypeExpression !== "string" ) {
			func = dataTypeExpression;
			dataTypeExpression = "*";
		}

		var dataType,
			i = 0,
			dataTypes = dataTypeExpression.toLowerCase().match( rnothtmlwhite ) || [];

		if ( isFunction( func ) ) {

			// For each dataType in the dataTypeExpression
			while ( ( dataType = dataTypes[ i++ ] ) ) {

				// Prepend if requested
				if ( dataType[ 0 ] === "+" ) {
					dataType = dataType.slice( 1 ) || "*";
					( structure[ dataType ] = structure[ dataType ] || [] ).unshift( func );

				// Otherwise append
				} else {
					( structure[ dataType ] = structure[ dataType ] || [] ).push( func );
				}
			}
		}
	};
}

// Base inspection function for prefilters and transports
function inspectPrefiltersOrTransports( structure, options, originalOptions, jqXHR ) {

	var inspected = {},
		seekingTransport = ( structure === transports );

	function inspect( dataType ) {
		var selected;
		inspected[ dataType ] = true;
		jQuery.each( structure[ dataType ] || [], function( _, prefilterOrFactory ) {
			var dataTypeOrTransport = prefilterOrFactory( options, originalOptions, jqXHR );
			if ( typeof dataTypeOrTransport === "string" &&
				!seekingTransport && !inspected[ dataTypeOrTransport ] ) {

				options.dataTypes.unshift( dataTypeOrTransport );
				inspect( dataTypeOrTransport );
				return false;
			} else if ( seekingTransport ) {
				return !( selected = dataTypeOrTransport );
			}
		} );
		return selected;
	}

	return inspect( options.dataTypes[ 0 ] ) || !inspected[ "*" ] && inspect( "*" );
}

// A special extend for ajax options
// that takes "flat" options (not to be deep extended)
// Fixes #9887
function ajaxExtend( target, src ) {
	var key, deep,
		flatOptions = jQuery.ajaxSettings.flatOptions || {};

	for ( key in src ) {
		if ( src[ key ] !== undefined ) {
			( flatOptions[ key ] ? target : ( deep || ( deep = {} ) ) )[ key ] = src[ key ];
		}
	}
	if ( deep ) {
		jQuery.extend( true, target, deep );
	}

	return target;
}

/* Handles responses to an ajax request:
 * - finds the right dataType (mediates between content-type and expected dataType)
 * - returns the corresponding response
 */
function ajaxHandleResponses( s, jqXHR, responses ) {

	var ct, type, finalDataType, firstDataType,
		contents = s.contents,
		dataTypes = s.dataTypes;

	// Remove auto dataType and get content-type in the process
	while ( dataTypes[ 0 ] === "*" ) {
		dataTypes.shift();
		if ( ct === undefined ) {
			ct = s.mimeType || jqXHR.getResponseHeader( "Content-Type" );
		}
	}

	// Check if we're dealing with a known content-type
	if ( ct ) {
		for ( type in contents ) {
			if ( contents[ type ] && contents[ type ].test( ct ) ) {
				dataTypes.unshift( type );
				break;
			}
		}
	}

	// Check to see if we have a response for the expected dataType
	if ( dataTypes[ 0 ] in responses ) {
		finalDataType = dataTypes[ 0 ];
	} else {

		// Try convertible dataTypes
		for ( type in responses ) {
			if ( !dataTypes[ 0 ] || s.converters[ type + " " + dataTypes[ 0 ] ] ) {
				finalDataType = type;
				break;
			}
			if ( !firstDataType ) {
				firstDataType = type;
			}
		}

		// Or just use first one
		finalDataType = finalDataType || firstDataType;
	}

	// If we found a dataType
	// We add the dataType to the list if needed
	// and return the corresponding response
	if ( finalDataType ) {
		if ( finalDataType !== dataTypes[ 0 ] ) {
			dataTypes.unshift( finalDataType );
		}
		return responses[ finalDataType ];
	}
}

/* Chain conversions given the request and the original response
 * Also sets the responseXXX fields on the jqXHR instance
 */
function ajaxConvert( s, response, jqXHR, isSuccess ) {
	var conv2, current, conv, tmp, prev,
		converters = {},

		// Work with a copy of dataTypes in case we need to modify it for conversion
		dataTypes = s.dataTypes.slice();

	// Create converters map with lowercased keys
	if ( dataTypes[ 1 ] ) {
		for ( conv in s.converters ) {
			converters[ conv.toLowerCase() ] = s.converters[ conv ];
		}
	}

	current = dataTypes.shift();

	// Convert to each sequential dataType
	while ( current ) {

		if ( s.responseFields[ current ] ) {
			jqXHR[ s.responseFields[ current ] ] = response;
		}

		// Apply the dataFilter if provided
		if ( !prev && isSuccess && s.dataFilter ) {
			response = s.dataFilter( response, s.dataType );
		}

		prev = current;
		current = dataTypes.shift();

		if ( current ) {

			// There's only work to do if current dataType is non-auto
			if ( current === "*" ) {

				current = prev;

			// Convert response if prev dataType is non-auto and differs from current
			} else if ( prev !== "*" && prev !== current ) {

				// Seek a direct converter
				conv = converters[ prev + " " + current ] || converters[ "* " + current ];

				// If none found, seek a pair
				if ( !conv ) {
					for ( conv2 in converters ) {

						// If conv2 outputs current
						tmp = conv2.split( " " );
						if ( tmp[ 1 ] === current ) {

							// If prev can be converted to accepted input
							conv = converters[ prev + " " + tmp[ 0 ] ] ||
								converters[ "* " + tmp[ 0 ] ];
							if ( conv ) {

								// Condense equivalence converters
								if ( conv === true ) {
									conv = converters[ conv2 ];

								// Otherwise, insert the intermediate dataType
								} else if ( converters[ conv2 ] !== true ) {
									current = tmp[ 0 ];
									dataTypes.unshift( tmp[ 1 ] );
								}
								break;
							}
						}
					}
				}

				// Apply converter (if not an equivalence)
				if ( conv !== true ) {

					// Unless errors are allowed to bubble, catch and return them
					if ( conv && s.throws ) {
						response = conv( response );
					} else {
						try {
							response = conv( response );
						} catch ( e ) {
							return {
								state: "parsererror",
								error: conv ? e : "No conversion from " + prev + " to " + current
							};
						}
					}
				}
			}
		}
	}

	return { state: "success", data: response };
}

jQuery.extend( {

	// Counter for holding the number of active queries
	active: 0,

	// Last-Modified header cache for next request
	lastModified: {},
	etag: {},

	ajaxSettings: {
		url: location.href,
		type: "GET",
		isLocal: rlocalProtocol.test( location.protocol ),
		global: true,
		processData: true,
		async: true,
		contentType: "application/x-www-form-urlencoded; charset=UTF-8",

		/*
		timeout: 0,
		data: null,
		dataType: null,
		username: null,
		password: null,
		cache: null,
		throws: false,
		traditional: false,
		headers: {},
		*/

		accepts: {
			"*": allTypes,
			text: "text/plain",
			html: "text/html",
			xml: "application/xml, text/xml",
			json: "application/json, text/javascript"
		},

		contents: {
			xml: /\bxml\b/,
			html: /\bhtml/,
			json: /\bjson\b/
		},

		responseFields: {
			xml: "responseXML",
			text: "responseText",
			json: "responseJSON"
		},

		// Data converters
		// Keys separate source (or catchall "*") and destination types with a single space
		converters: {

			// Convert anything to text
			"* text": String,

			// Text to html (true = no transformation)
			"text html": true,

			// Evaluate text as a json expression
			"text json": JSON.parse,

			// Parse text as xml
			"text xml": jQuery.parseXML
		},

		// For options that shouldn't be deep extended:
		// you can add your own custom options here if
		// and when you create one that shouldn't be
		// deep extended (see ajaxExtend)
		flatOptions: {
			url: true,
			context: true
		}
	},

	// Creates a full fledged settings object into target
	// with both ajaxSettings and settings fields.
	// If target is omitted, writes into ajaxSettings.
	ajaxSetup: function( target, settings ) {
		return settings ?

			// Building a settings object
			ajaxExtend( ajaxExtend( target, jQuery.ajaxSettings ), settings ) :

			// Extending ajaxSettings
			ajaxExtend( jQuery.ajaxSettings, target );
	},

	ajaxPrefilter: addToPrefiltersOrTransports( prefilters ),
	ajaxTransport: addToPrefiltersOrTransports( transports ),

	// Main method
	ajax: function( url, options ) {

		// If url is an object, simulate pre-1.5 signature
		if ( typeof url === "object" ) {
			options = url;
			url = undefined;
		}

		// Force options to be an object
		options = options || {};

		var transport,

			// URL without anti-cache param
			cacheURL,

			// Response headers
			responseHeadersString,
			responseHeaders,

			// timeout handle
			timeoutTimer,

			// Url cleanup var
			urlAnchor,

			// Request state (becomes false upon send and true upon completion)
			completed,

			// To know if global events are to be dispatched
			fireGlobals,

			// Loop variable
			i,

			// uncached part of the url
			uncached,

			// Create the final options object
			s = jQuery.ajaxSetup( {}, options ),

			// Callbacks context
			callbackContext = s.context || s,

			// Context for global events is callbackContext if it is a DOM node or jQuery collection
			globalEventContext = s.context &&
				( callbackContext.nodeType || callbackContext.jquery ) ?
					jQuery( callbackContext ) :
					jQuery.event,

			// Deferreds
			deferred = jQuery.Deferred(),
			completeDeferred = jQuery.Callbacks( "once memory" ),

			// Status-dependent callbacks
			statusCode = s.statusCode || {},

			// Headers (they are sent all at once)
			requestHeaders = {},
			requestHeadersNames = {},

			// Default abort message
			strAbort = "canceled",

			// Fake xhr
			jqXHR = {
				readyState: 0,

				// Builds headers hashtable if needed
				getResponseHeader: function( key ) {
					var match;
					if ( completed ) {
						if ( !responseHeaders ) {
							responseHeaders = {};
							while ( ( match = rheaders.exec( responseHeadersString ) ) ) {
								responseHeaders[ match[ 1 ].toLowerCase() ] = match[ 2 ];
							}
						}
						match = responseHeaders[ key.toLowerCase() ];
					}
					return match == null ? null : match;
				},

				// Raw string
				getAllResponseHeaders: function() {
					return completed ? responseHeadersString : null;
				},

				// Caches the header
				setRequestHeader: function( name, value ) {
					if ( completed == null ) {
						name = requestHeadersNames[ name.toLowerCase() ] =
							requestHeadersNames[ name.toLowerCase() ] || name;
						requestHeaders[ name ] = value;
					}
					return this;
				},

				// Overrides response content-type header
				overrideMimeType: function( type ) {
					if ( completed == null ) {
						s.mimeType = type;
					}
					return this;
				},

				// Status-dependent callbacks
				statusCode: function( map ) {
					var code;
					if ( map ) {
						if ( completed ) {

							// Execute the appropriate callbacks
							jqXHR.always( map[ jqXHR.status ] );
						} else {

							// Lazy-add the new callbacks in a way that preserves old ones
							for ( code in map ) {
								statusCode[ code ] = [ statusCode[ code ], map[ code ] ];
							}
						}
					}
					return this;
				},

				// Cancel the request
				abort: function( statusText ) {
					var finalText = statusText || strAbort;
					if ( transport ) {
						transport.abort( finalText );
					}
					done( 0, finalText );
					return this;
				}
			};

		// Attach deferreds
		deferred.promise( jqXHR );

		// Add protocol if not provided (prefilters might expect it)
		// Handle falsy url in the settings object (#10093: consistency with old signature)
		// We also use the url parameter if available
		s.url = ( ( url || s.url || location.href ) + "" )
			.replace( rprotocol, location.protocol + "//" );

		// Alias method option to type as per ticket #12004
		s.type = options.method || options.type || s.method || s.type;

		// Extract dataTypes list
		s.dataTypes = ( s.dataType || "*" ).toLowerCase().match( rnothtmlwhite ) || [ "" ];

		// A cross-domain request is in order when the origin doesn't match the current origin.
		if ( s.crossDomain == null ) {
			urlAnchor = document.createElement( "a" );

			// Support: IE <=8 - 11, Edge 12 - 15
			// IE throws exception on accessing the href property if url is malformed,
			// e.g. http://example.com:80x/
			try {
				urlAnchor.href = s.url;

				// Support: IE <=8 - 11 only
				// Anchor's host property isn't correctly set when s.url is relative
				urlAnchor.href = urlAnchor.href;
				s.crossDomain = originAnchor.protocol + "//" + originAnchor.host !==
					urlAnchor.protocol + "//" + urlAnchor.host;
			} catch ( e ) {

				// If there is an error parsing the URL, assume it is crossDomain,
				// it can be rejected by the transport if it is invalid
				s.crossDomain = true;
			}
		}

		// Convert data if not already a string
		if ( s.data && s.processData && typeof s.data !== "string" ) {
			s.data = jQuery.param( s.data, s.traditional );
		}

		// Apply prefilters
		inspectPrefiltersOrTransports( prefilters, s, options, jqXHR );

		// If request was aborted inside a prefilter, stop there
		if ( completed ) {
			return jqXHR;
		}

		// We can fire global events as of now if asked to
		// Don't fire events if jQuery.event is undefined in an AMD-usage scenario (#15118)
		fireGlobals = jQuery.event && s.global;

		// Watch for a new set of requests
		if ( fireGlobals && jQuery.active++ === 0 ) {
			jQuery.event.trigger( "ajaxStart" );
		}

		// Uppercase the type
		s.type = s.type.toUpperCase();

		// Determine if request has content
		s.hasContent = !rnoContent.test( s.type );

		// Save the URL in case we're toying with the If-Modified-Since
		// and/or If-None-Match header later on
		// Remove hash to simplify url manipulation
		cacheURL = s.url.replace( rhash, "" );

		// More options handling for requests with no content
		if ( !s.hasContent ) {

			// Remember the hash so we can put it back
			uncached = s.url.slice( cacheURL.length );

			// If data is available and should be processed, append data to url
			if ( s.data && ( s.processData || typeof s.data === "string" ) ) {
				cacheURL += ( rquery.test( cacheURL ) ? "&" : "?" ) + s.data;

				// #9682: remove data so that it's not used in an eventual retry
				delete s.data;
			}

			// Add or update anti-cache param if needed
			if ( s.cache === false ) {
				cacheURL = cacheURL.replace( rantiCache, "$1" );
				uncached = ( rquery.test( cacheURL ) ? "&" : "?" ) + "_=" + ( nonce++ ) + uncached;
			}

			// Put hash and anti-cache on the URL that will be requested (gh-1732)
			s.url = cacheURL + uncached;

		// Change '%20' to '+' if this is encoded form body content (gh-2658)
		} else if ( s.data && s.processData &&
			( s.contentType || "" ).indexOf( "application/x-www-form-urlencoded" ) === 0 ) {
			s.data = s.data.replace( r20, "+" );
		}

		// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
		if ( s.ifModified ) {
			if ( jQuery.lastModified[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-Modified-Since", jQuery.lastModified[ cacheURL ] );
			}
			if ( jQuery.etag[ cacheURL ] ) {
				jqXHR.setRequestHeader( "If-None-Match", jQuery.etag[ cacheURL ] );
			}
		}

		// Set the correct header, if data is being sent
		if ( s.data && s.hasContent && s.contentType !== false || options.contentType ) {
			jqXHR.setRequestHeader( "Content-Type", s.contentType );
		}

		// Set the Accepts header for the server, depending on the dataType
		jqXHR.setRequestHeader(
			"Accept",
			s.dataTypes[ 0 ] && s.accepts[ s.dataTypes[ 0 ] ] ?
				s.accepts[ s.dataTypes[ 0 ] ] +
					( s.dataTypes[ 0 ] !== "*" ? ", " + allTypes + "; q=0.01" : "" ) :
				s.accepts[ "*" ]
		);

		// Check for headers option
		for ( i in s.headers ) {
			jqXHR.setRequestHeader( i, s.headers[ i ] );
		}

		// Allow custom headers/mimetypes and early abort
		if ( s.beforeSend &&
			( s.beforeSend.call( callbackContext, jqXHR, s ) === false || completed ) ) {

			// Abort if not done already and return
			return jqXHR.abort();
		}

		// Aborting is no longer a cancellation
		strAbort = "abort";

		// Install callbacks on deferreds
		completeDeferred.add( s.complete );
		jqXHR.done( s.success );
		jqXHR.fail( s.error );

		// Get transport
		transport = inspectPrefiltersOrTransports( transports, s, options, jqXHR );

		// If no transport, we auto-abort
		if ( !transport ) {
			done( -1, "No Transport" );
		} else {
			jqXHR.readyState = 1;

			// Send global event
			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxSend", [ jqXHR, s ] );
			}

			// If request was aborted inside ajaxSend, stop there
			if ( completed ) {
				return jqXHR;
			}

			// Timeout
			if ( s.async && s.timeout > 0 ) {
				timeoutTimer = window.setTimeout( function() {
					jqXHR.abort( "timeout" );
				}, s.timeout );
			}

			try {
				completed = false;
				transport.send( requestHeaders, done );
			} catch ( e ) {

				// Rethrow post-completion exceptions
				if ( completed ) {
					throw e;
				}

				// Propagate others as results
				done( -1, e );
			}
		}

		// Callback for when everything is done
		function done( status, nativeStatusText, responses, headers ) {
			var isSuccess, success, error, response, modified,
				statusText = nativeStatusText;

			// Ignore repeat invocations
			if ( completed ) {
				return;
			}

			completed = true;

			// Clear timeout if it exists
			if ( timeoutTimer ) {
				window.clearTimeout( timeoutTimer );
			}

			// Dereference transport for early garbage collection
			// (no matter how long the jqXHR object will be used)
			transport = undefined;

			// Cache response headers
			responseHeadersString = headers || "";

			// Set readyState
			jqXHR.readyState = status > 0 ? 4 : 0;

			// Determine if successful
			isSuccess = status >= 200 && status < 300 || status === 304;

			// Get response data
			if ( responses ) {
				response = ajaxHandleResponses( s, jqXHR, responses );
			}

			// Convert no matter what (that way responseXXX fields are always set)
			response = ajaxConvert( s, response, jqXHR, isSuccess );

			// If successful, handle type chaining
			if ( isSuccess ) {

				// Set the If-Modified-Since and/or If-None-Match header, if in ifModified mode.
				if ( s.ifModified ) {
					modified = jqXHR.getResponseHeader( "Last-Modified" );
					if ( modified ) {
						jQuery.lastModified[ cacheURL ] = modified;
					}
					modified = jqXHR.getResponseHeader( "etag" );
					if ( modified ) {
						jQuery.etag[ cacheURL ] = modified;
					}
				}

				// if no content
				if ( status === 204 || s.type === "HEAD" ) {
					statusText = "nocontent";

				// if not modified
				} else if ( status === 304 ) {
					statusText = "notmodified";

				// If we have data, let's convert it
				} else {
					statusText = response.state;
					success = response.data;
					error = response.error;
					isSuccess = !error;
				}
			} else {

				// Extract error from statusText and normalize for non-aborts
				error = statusText;
				if ( status || !statusText ) {
					statusText = "error";
					if ( status < 0 ) {
						status = 0;
					}
				}
			}

			// Set data for the fake xhr object
			jqXHR.status = status;
			jqXHR.statusText = ( nativeStatusText || statusText ) + "";

			// Success/Error
			if ( isSuccess ) {
				deferred.resolveWith( callbackContext, [ success, statusText, jqXHR ] );
			} else {
				deferred.rejectWith( callbackContext, [ jqXHR, statusText, error ] );
			}

			// Status-dependent callbacks
			jqXHR.statusCode( statusCode );
			statusCode = undefined;

			if ( fireGlobals ) {
				globalEventContext.trigger( isSuccess ? "ajaxSuccess" : "ajaxError",
					[ jqXHR, s, isSuccess ? success : error ] );
			}

			// Complete
			completeDeferred.fireWith( callbackContext, [ jqXHR, statusText ] );

			if ( fireGlobals ) {
				globalEventContext.trigger( "ajaxComplete", [ jqXHR, s ] );

				// Handle the global AJAX counter
				if ( !( --jQuery.active ) ) {
					jQuery.event.trigger( "ajaxStop" );
				}
			}
		}

		return jqXHR;
	},

	getJSON: function( url, data, callback ) {
		return jQuery.get( url, data, callback, "json" );
	},

	getScript: function( url, callback ) {
		return jQuery.get( url, undefined, callback, "script" );
	}
} );

jQuery.each( [ "get", "post" ], function( i, method ) {
	jQuery[ method ] = function( url, data, callback, type ) {

		// Shift arguments if data argument was omitted
		if ( isFunction( data ) ) {
			type = type || callback;
			callback = data;
			data = undefined;
		}

		// The url can be an options object (which then must have .url)
		return jQuery.ajax( jQuery.extend( {
			url: url,
			type: method,
			dataType: type,
			data: data,
			success: callback
		}, jQuery.isPlainObject( url ) && url ) );
	};
} );


jQuery._evalUrl = function( url ) {
	return jQuery.ajax( {
		url: url,

		// Make this explicit, since user can override this through ajaxSetup (#11264)
		type: "GET",
		dataType: "script",
		cache: true,
		async: false,
		global: false,
		"throws": true
	} );
};


jQuery.fn.extend( {
	wrapAll: function( html ) {
		var wrap;

		if ( this[ 0 ] ) {
			if ( isFunction( html ) ) {
				html = html.call( this[ 0 ] );
			}

			// The elements to wrap the target around
			wrap = jQuery( html, this[ 0 ].ownerDocument ).eq( 0 ).clone( true );

			if ( this[ 0 ].parentNode ) {
				wrap.insertBefore( this[ 0 ] );
			}

			wrap.map( function() {
				var elem = this;

				while ( elem.firstElementChild ) {
					elem = elem.firstElementChild;
				}

				return elem;
			} ).append( this );
		}

		return this;
	},

	wrapInner: function( html ) {
		if ( isFunction( html ) ) {
			return this.each( function( i ) {
				jQuery( this ).wrapInner( html.call( this, i ) );
			} );
		}

		return this.each( function() {
			var self = jQuery( this ),
				contents = self.contents();

			if ( contents.length ) {
				contents.wrapAll( html );

			} else {
				self.append( html );
			}
		} );
	},

	wrap: function( html ) {
		var htmlIsFunction = isFunction( html );

		return this.each( function( i ) {
			jQuery( this ).wrapAll( htmlIsFunction ? html.call( this, i ) : html );
		} );
	},

	unwrap: function( selector ) {
		this.parent( selector ).not( "body" ).each( function() {
			jQuery( this ).replaceWith( this.childNodes );
		} );
		return this;
	}
} );


jQuery.expr.pseudos.hidden = function( elem ) {
	return !jQuery.expr.pseudos.visible( elem );
};
jQuery.expr.pseudos.visible = function( elem ) {
	return !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length );
};




jQuery.ajaxSettings.xhr = function() {
	try {
		return new window.XMLHttpRequest();
	} catch ( e ) {}
};

var xhrSuccessStatus = {

		// File protocol always yields status code 0, assume 200
		0: 200,

		// Support: IE <=9 only
		// #1450: sometimes IE returns 1223 when it should be 204
		1223: 204
	},
	xhrSupported = jQuery.ajaxSettings.xhr();

support.cors = !!xhrSupported && ( "withCredentials" in xhrSupported );
support.ajax = xhrSupported = !!xhrSupported;

jQuery.ajaxTransport( function( options ) {
	var callback, errorCallback;

	// Cross domain only allowed if supported through XMLHttpRequest
	if ( support.cors || xhrSupported && !options.crossDomain ) {
		return {
			send: function( headers, complete ) {
				var i,
					xhr = options.xhr();

				xhr.open(
					options.type,
					options.url,
					options.async,
					options.username,
					options.password
				);

				// Apply custom fields if provided
				if ( options.xhrFields ) {
					for ( i in options.xhrFields ) {
						xhr[ i ] = options.xhrFields[ i ];
					}
				}

				// Override mime type if needed
				if ( options.mimeType && xhr.overrideMimeType ) {
					xhr.overrideMimeType( options.mimeType );
				}

				// X-Requested-With header
				// For cross-domain requests, seeing as conditions for a preflight are
				// akin to a jigsaw puzzle, we simply never set it to be sure.
				// (it can always be set on a per-request basis or even using ajaxSetup)
				// For same-domain requests, won't change header if already provided.
				if ( !options.crossDomain && !headers[ "X-Requested-With" ] ) {
					headers[ "X-Requested-With" ] = "XMLHttpRequest";
				}

				// Set headers
				for ( i in headers ) {
					xhr.setRequestHeader( i, headers[ i ] );
				}

				// Callback
				callback = function( type ) {
					return function() {
						if ( callback ) {
							callback = errorCallback = xhr.onload =
								xhr.onerror = xhr.onabort = xhr.ontimeout =
									xhr.onreadystatechange = null;

							if ( type === "abort" ) {
								xhr.abort();
							} else if ( type === "error" ) {

								// Support: IE <=9 only
								// On a manual native abort, IE9 throws
								// errors on any property access that is not readyState
								if ( typeof xhr.status !== "number" ) {
									complete( 0, "error" );
								} else {
									complete(

										// File: protocol always yields status 0; see #8605, #14207
										xhr.status,
										xhr.statusText
									);
								}
							} else {
								complete(
									xhrSuccessStatus[ xhr.status ] || xhr.status,
									xhr.statusText,

									// Support: IE <=9 only
									// IE9 has no XHR2 but throws on binary (trac-11426)
									// For XHR2 non-text, let the caller handle it (gh-2498)
									( xhr.responseType || "text" ) !== "text"  ||
									typeof xhr.responseText !== "string" ?
										{ binary: xhr.response } :
										{ text: xhr.responseText },
									xhr.getAllResponseHeaders()
								);
							}
						}
					};
				};

				// Listen to events
				xhr.onload = callback();
				errorCallback = xhr.onerror = xhr.ontimeout = callback( "error" );

				// Support: IE 9 only
				// Use onreadystatechange to replace onabort
				// to handle uncaught aborts
				if ( xhr.onabort !== undefined ) {
					xhr.onabort = errorCallback;
				} else {
					xhr.onreadystatechange = function() {

						// Check readyState before timeout as it changes
						if ( xhr.readyState === 4 ) {

							// Allow onerror to be called first,
							// but that will not handle a native abort
							// Also, save errorCallback to a variable
							// as xhr.onerror cannot be accessed
							window.setTimeout( function() {
								if ( callback ) {
									errorCallback();
								}
							} );
						}
					};
				}

				// Create the abort callback
				callback = callback( "abort" );

				try {

					// Do send the request (this may raise an exception)
					xhr.send( options.hasContent && options.data || null );
				} catch ( e ) {

					// #14683: Only rethrow if this hasn't been notified as an error yet
					if ( callback ) {
						throw e;
					}
				}
			},

			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




// Prevent auto-execution of scripts when no explicit dataType was provided (See gh-2432)
jQuery.ajaxPrefilter( function( s ) {
	if ( s.crossDomain ) {
		s.contents.script = false;
	}
} );

// Install script dataType
jQuery.ajaxSetup( {
	accepts: {
		script: "text/javascript, application/javascript, " +
			"application/ecmascript, application/x-ecmascript"
	},
	contents: {
		script: /\b(?:java|ecma)script\b/
	},
	converters: {
		"text script": function( text ) {
			jQuery.globalEval( text );
			return text;
		}
	}
} );

// Handle cache's special case and crossDomain
jQuery.ajaxPrefilter( "script", function( s ) {
	if ( s.cache === undefined ) {
		s.cache = false;
	}
	if ( s.crossDomain ) {
		s.type = "GET";
	}
} );

// Bind script tag hack transport
jQuery.ajaxTransport( "script", function( s ) {

	// This transport only deals with cross domain requests
	if ( s.crossDomain ) {
		var script, callback;
		return {
			send: function( _, complete ) {
				script = jQuery( "<script>" ).prop( {
					charset: s.scriptCharset,
					src: s.url
				} ).on(
					"load error",
					callback = function( evt ) {
						script.remove();
						callback = null;
						if ( evt ) {
							complete( evt.type === "error" ? 404 : 200, evt.type );
						}
					}
				);

				// Use native DOM manipulation to avoid our domManip AJAX trickery
				document.head.appendChild( script[ 0 ] );
			},
			abort: function() {
				if ( callback ) {
					callback();
				}
			}
		};
	}
} );




var oldCallbacks = [],
	rjsonp = /(=)\?(?=&|$)|\?\?/;

// Default jsonp settings
jQuery.ajaxSetup( {
	jsonp: "callback",
	jsonpCallback: function() {
		var callback = oldCallbacks.pop() || ( jQuery.expando + "_" + ( nonce++ ) );
		this[ callback ] = true;
		return callback;
	}
} );

// Detect, normalize options and install callbacks for jsonp requests
jQuery.ajaxPrefilter( "json jsonp", function( s, originalSettings, jqXHR ) {

	var callbackName, overwritten, responseContainer,
		jsonProp = s.jsonp !== false && ( rjsonp.test( s.url ) ?
			"url" :
			typeof s.data === "string" &&
				( s.contentType || "" )
					.indexOf( "application/x-www-form-urlencoded" ) === 0 &&
				rjsonp.test( s.data ) && "data"
		);

	// Handle iff the expected data type is "jsonp" or we have a parameter to set
	if ( jsonProp || s.dataTypes[ 0 ] === "jsonp" ) {

		// Get callback name, remembering preexisting value associated with it
		callbackName = s.jsonpCallback = isFunction( s.jsonpCallback ) ?
			s.jsonpCallback() :
			s.jsonpCallback;

		// Insert callback into url or form data
		if ( jsonProp ) {
			s[ jsonProp ] = s[ jsonProp ].replace( rjsonp, "$1" + callbackName );
		} else if ( s.jsonp !== false ) {
			s.url += ( rquery.test( s.url ) ? "&" : "?" ) + s.jsonp + "=" + callbackName;
		}

		// Use data converter to retrieve json after script execution
		s.converters[ "script json" ] = function() {
			if ( !responseContainer ) {
				jQuery.error( callbackName + " was not called" );
			}
			return responseContainer[ 0 ];
		};

		// Force json dataType
		s.dataTypes[ 0 ] = "json";

		// Install callback
		overwritten = window[ callbackName ];
		window[ callbackName ] = function() {
			responseContainer = arguments;
		};

		// Clean-up function (fires after converters)
		jqXHR.always( function() {

			// If previous value didn't exist - remove it
			if ( overwritten === undefined ) {
				jQuery( window ).removeProp( callbackName );

			// Otherwise restore preexisting value
			} else {
				window[ callbackName ] = overwritten;
			}

			// Save back as free
			if ( s[ callbackName ] ) {

				// Make sure that re-using the options doesn't screw things around
				s.jsonpCallback = originalSettings.jsonpCallback;

				// Save the callback name for future use
				oldCallbacks.push( callbackName );
			}

			// Call if it was a function and we have a response
			if ( responseContainer && isFunction( overwritten ) ) {
				overwritten( responseContainer[ 0 ] );
			}

			responseContainer = overwritten = undefined;
		} );

		// Delegate to script
		return "script";
	}
} );




// Support: Safari 8 only
// In Safari 8 documents created via document.implementation.createHTMLDocument
// collapse sibling forms: the second one becomes a child of the first one.
// Because of that, this security measure has to be disabled in Safari 8.
// https://bugs.webkit.org/show_bug.cgi?id=137337
support.createHTMLDocument = ( function() {
	var body = document.implementation.createHTMLDocument( "" ).body;
	body.innerHTML = "<form></form><form></form>";
	return body.childNodes.length === 2;
} )();


// Argument "data" should be string of html
// context (optional): If specified, the fragment will be created in this context,
// defaults to document
// keepScripts (optional): If true, will include scripts passed in the html string
jQuery.parseHTML = function( data, context, keepScripts ) {
	if ( typeof data !== "string" ) {
		return [];
	}
	if ( typeof context === "boolean" ) {
		keepScripts = context;
		context = false;
	}

	var base, parsed, scripts;

	if ( !context ) {

		// Stop scripts or inline event handlers from being executed immediately
		// by using document.implementation
		if ( support.createHTMLDocument ) {
			context = document.implementation.createHTMLDocument( "" );

			// Set the base href for the created document
			// so any parsed elements with URLs
			// are based on the document's URL (gh-2965)
			base = context.createElement( "base" );
			base.href = document.location.href;
			context.head.appendChild( base );
		} else {
			context = document;
		}
	}

	parsed = rsingleTag.exec( data );
	scripts = !keepScripts && [];

	// Single tag
	if ( parsed ) {
		return [ context.createElement( parsed[ 1 ] ) ];
	}

	parsed = buildFragment( [ data ], context, scripts );

	if ( scripts && scripts.length ) {
		jQuery( scripts ).remove();
	}

	return jQuery.merge( [], parsed.childNodes );
};


/**
 * Load a url into a page
 */
jQuery.fn.load = function( url, params, callback ) {
	var selector, type, response,
		self = this,
		off = url.indexOf( " " );

	if ( off > -1 ) {
		selector = stripAndCollapse( url.slice( off ) );
		url = url.slice( 0, off );
	}

	// If it's a function
	if ( isFunction( params ) ) {

		// We assume that it's the callback
		callback = params;
		params = undefined;

	// Otherwise, build a param string
	} else if ( params && typeof params === "object" ) {
		type = "POST";
	}

	// If we have elements to modify, make the request
	if ( self.length > 0 ) {
		jQuery.ajax( {
			url: url,

			// If "type" variable is undefined, then "GET" method will be used.
			// Make value of this field explicit since
			// user can override it through ajaxSetup method
			type: type || "GET",
			dataType: "html",
			data: params
		} ).done( function( responseText ) {

			// Save response for use in complete callback
			response = arguments;

			self.html( selector ?

				// If a selector was specified, locate the right elements in a dummy div
				// Exclude scripts to avoid IE 'Permission Denied' errors
				jQuery( "<div>" ).append( jQuery.parseHTML( responseText ) ).find( selector ) :

				// Otherwise use the full result
				responseText );

		// If the request succeeds, this function gets "data", "status", "jqXHR"
		// but they are ignored because response was set above.
		// If it fails, this function gets "jqXHR", "status", "error"
		} ).always( callback && function( jqXHR, status ) {
			self.each( function() {
				callback.apply( this, response || [ jqXHR.responseText, status, jqXHR ] );
			} );
		} );
	}

	return this;
};




// Attach a bunch of functions for handling common AJAX events
jQuery.each( [
	"ajaxStart",
	"ajaxStop",
	"ajaxComplete",
	"ajaxError",
	"ajaxSuccess",
	"ajaxSend"
], function( i, type ) {
	jQuery.fn[ type ] = function( fn ) {
		return this.on( type, fn );
	};
} );




jQuery.expr.pseudos.animated = function( elem ) {
	return jQuery.grep( jQuery.timers, function( fn ) {
		return elem === fn.elem;
	} ).length;
};




jQuery.offset = {
	setOffset: function( elem, options, i ) {
		var curPosition, curLeft, curCSSTop, curTop, curOffset, curCSSLeft, calculatePosition,
			position = jQuery.css( elem, "position" ),
			curElem = jQuery( elem ),
			props = {};

		// Set position first, in-case top/left are set even on static elem
		if ( position === "static" ) {
			elem.style.position = "relative";
		}

		curOffset = curElem.offset();
		curCSSTop = jQuery.css( elem, "top" );
		curCSSLeft = jQuery.css( elem, "left" );
		calculatePosition = ( position === "absolute" || position === "fixed" ) &&
			( curCSSTop + curCSSLeft ).indexOf( "auto" ) > -1;

		// Need to be able to calculate position if either
		// top or left is auto and position is either absolute or fixed
		if ( calculatePosition ) {
			curPosition = curElem.position();
			curTop = curPosition.top;
			curLeft = curPosition.left;

		} else {
			curTop = parseFloat( curCSSTop ) || 0;
			curLeft = parseFloat( curCSSLeft ) || 0;
		}

		if ( isFunction( options ) ) {

			// Use jQuery.extend here to allow modification of coordinates argument (gh-1848)
			options = options.call( elem, i, jQuery.extend( {}, curOffset ) );
		}

		if ( options.top != null ) {
			props.top = ( options.top - curOffset.top ) + curTop;
		}
		if ( options.left != null ) {
			props.left = ( options.left - curOffset.left ) + curLeft;
		}

		if ( "using" in options ) {
			options.using.call( elem, props );

		} else {
			curElem.css( props );
		}
	}
};

jQuery.fn.extend( {

	// offset() relates an element's border box to the document origin
	offset: function( options ) {

		// Preserve chaining for setter
		if ( arguments.length ) {
			return options === undefined ?
				this :
				this.each( function( i ) {
					jQuery.offset.setOffset( this, options, i );
				} );
		}

		var rect, win,
			elem = this[ 0 ];

		if ( !elem ) {
			return;
		}

		// Return zeros for disconnected and hidden (display: none) elements (gh-2310)
		// Support: IE <=11 only
		// Running getBoundingClientRect on a
		// disconnected node in IE throws an error
		if ( !elem.getClientRects().length ) {
			return { top: 0, left: 0 };
		}

		// Get document-relative position by adding viewport scroll to viewport-relative gBCR
		rect = elem.getBoundingClientRect();
		win = elem.ownerDocument.defaultView;
		return {
			top: rect.top + win.pageYOffset,
			left: rect.left + win.pageXOffset
		};
	},

	// position() relates an element's margin box to its offset parent's padding box
	// This corresponds to the behavior of CSS absolute positioning
	position: function() {
		if ( !this[ 0 ] ) {
			return;
		}

		var offsetParent, offset, doc,
			elem = this[ 0 ],
			parentOffset = { top: 0, left: 0 };

		// position:fixed elements are offset from the viewport, which itself always has zero offset
		if ( jQuery.css( elem, "position" ) === "fixed" ) {

			// Assume position:fixed implies availability of getBoundingClientRect
			offset = elem.getBoundingClientRect();

		} else {
			offset = this.offset();

			// Account for the *real* offset parent, which can be the document or its root element
			// when a statically positioned element is identified
			doc = elem.ownerDocument;
			offsetParent = elem.offsetParent || doc.documentElement;
			while ( offsetParent &&
				( offsetParent === doc.body || offsetParent === doc.documentElement ) &&
				jQuery.css( offsetParent, "position" ) === "static" ) {

				offsetParent = offsetParent.parentNode;
			}
			if ( offsetParent && offsetParent !== elem && offsetParent.nodeType === 1 ) {

				// Incorporate borders into its offset, since they are outside its content origin
				parentOffset = jQuery( offsetParent ).offset();
				parentOffset.top += jQuery.css( offsetParent, "borderTopWidth", true );
				parentOffset.left += jQuery.css( offsetParent, "borderLeftWidth", true );
			}
		}

		// Subtract parent offsets and element margins
		return {
			top: offset.top - parentOffset.top - jQuery.css( elem, "marginTop", true ),
			left: offset.left - parentOffset.left - jQuery.css( elem, "marginLeft", true )
		};
	},

	// This method will return documentElement in the following cases:
	// 1) For the element inside the iframe without offsetParent, this method will return
	//    documentElement of the parent window
	// 2) For the hidden or detached element
	// 3) For body or html element, i.e. in case of the html node - it will return itself
	//
	// but those exceptions were never presented as a real life use-cases
	// and might be considered as more preferable results.
	//
	// This logic, however, is not guaranteed and can change at any point in the future
	offsetParent: function() {
		return this.map( function() {
			var offsetParent = this.offsetParent;

			while ( offsetParent && jQuery.css( offsetParent, "position" ) === "static" ) {
				offsetParent = offsetParent.offsetParent;
			}

			return offsetParent || documentElement;
		} );
	}
} );

// Create scrollLeft and scrollTop methods
jQuery.each( { scrollLeft: "pageXOffset", scrollTop: "pageYOffset" }, function( method, prop ) {
	var top = "pageYOffset" === prop;

	jQuery.fn[ method ] = function( val ) {
		return access( this, function( elem, method, val ) {

			// Coalesce documents and windows
			var win;
			if ( isWindow( elem ) ) {
				win = elem;
			} else if ( elem.nodeType === 9 ) {
				win = elem.defaultView;
			}

			if ( val === undefined ) {
				return win ? win[ prop ] : elem[ method ];
			}

			if ( win ) {
				win.scrollTo(
					!top ? val : win.pageXOffset,
					top ? val : win.pageYOffset
				);

			} else {
				elem[ method ] = val;
			}
		}, method, val, arguments.length );
	};
} );

// Support: Safari <=7 - 9.1, Chrome <=37 - 49
// Add the top/left cssHooks using jQuery.fn.position
// Webkit bug: https://bugs.webkit.org/show_bug.cgi?id=29084
// Blink bug: https://bugs.chromium.org/p/chromium/issues/detail?id=589347
// getComputedStyle returns percent when specified for top/left/bottom/right;
// rather than make the css module depend on the offset module, just check for it here
jQuery.each( [ "top", "left" ], function( i, prop ) {
	jQuery.cssHooks[ prop ] = addGetHookIf( support.pixelPosition,
		function( elem, computed ) {
			if ( computed ) {
				computed = curCSS( elem, prop );

				// If curCSS returns percentage, fallback to offset
				return rnumnonpx.test( computed ) ?
					jQuery( elem ).position()[ prop ] + "px" :
					computed;
			}
		}
	);
} );


// Create innerHeight, innerWidth, height, width, outerHeight and outerWidth methods
jQuery.each( { Height: "height", Width: "width" }, function( name, type ) {
	jQuery.each( { padding: "inner" + name, content: type, "": "outer" + name },
		function( defaultExtra, funcName ) {

		// Margin is only for outerHeight, outerWidth
		jQuery.fn[ funcName ] = function( margin, value ) {
			var chainable = arguments.length && ( defaultExtra || typeof margin !== "boolean" ),
				extra = defaultExtra || ( margin === true || value === true ? "margin" : "border" );

			return access( this, function( elem, type, value ) {
				var doc;

				if ( isWindow( elem ) ) {

					// $( window ).outerWidth/Height return w/h including scrollbars (gh-1729)
					return funcName.indexOf( "outer" ) === 0 ?
						elem[ "inner" + name ] :
						elem.document.documentElement[ "client" + name ];
				}

				// Get document width or height
				if ( elem.nodeType === 9 ) {
					doc = elem.documentElement;

					// Either scroll[Width/Height] or offset[Width/Height] or client[Width/Height],
					// whichever is greatest
					return Math.max(
						elem.body[ "scroll" + name ], doc[ "scroll" + name ],
						elem.body[ "offset" + name ], doc[ "offset" + name ],
						doc[ "client" + name ]
					);
				}

				return value === undefined ?

					// Get width or height on the element, requesting but not forcing parseFloat
					jQuery.css( elem, type, extra ) :

					// Set width or height on the element
					jQuery.style( elem, type, value, extra );
			}, type, chainable ? margin : undefined, chainable );
		};
	} );
} );


jQuery.each( ( "blur focus focusin focusout resize scroll click dblclick " +
	"mousedown mouseup mousemove mouseover mouseout mouseenter mouseleave " +
	"change select submit keydown keypress keyup contextmenu" ).split( " " ),
	function( i, name ) {

	// Handle event binding
	jQuery.fn[ name ] = function( data, fn ) {
		return arguments.length > 0 ?
			this.on( name, null, data, fn ) :
			this.trigger( name );
	};
} );

jQuery.fn.extend( {
	hover: function( fnOver, fnOut ) {
		return this.mouseenter( fnOver ).mouseleave( fnOut || fnOver );
	}
} );




jQuery.fn.extend( {

	bind: function( types, data, fn ) {
		return this.on( types, null, data, fn );
	},
	unbind: function( types, fn ) {
		return this.off( types, null, fn );
	},

	delegate: function( selector, types, data, fn ) {
		return this.on( types, selector, data, fn );
	},
	undelegate: function( selector, types, fn ) {

		// ( namespace ) or ( selector, types [, fn] )
		return arguments.length === 1 ?
			this.off( selector, "**" ) :
			this.off( types, selector || "**", fn );
	}
} );

// Bind a function to a context, optionally partially applying any
// arguments.
// jQuery.proxy is deprecated to promote standards (specifically Function#bind)
// However, it is not slated for removal any time soon
jQuery.proxy = function( fn, context ) {
	var tmp, args, proxy;

	if ( typeof context === "string" ) {
		tmp = fn[ context ];
		context = fn;
		fn = tmp;
	}

	// Quick check to determine if target is callable, in the spec
	// this throws a TypeError, but we will just return undefined.
	if ( !isFunction( fn ) ) {
		return undefined;
	}

	// Simulated bind
	args = slice.call( arguments, 2 );
	proxy = function() {
		return fn.apply( context || this, args.concat( slice.call( arguments ) ) );
	};

	// Set the guid of unique handler to the same of original handler, so it can be removed
	proxy.guid = fn.guid = fn.guid || jQuery.guid++;

	return proxy;
};

jQuery.holdReady = function( hold ) {
	if ( hold ) {
		jQuery.readyWait++;
	} else {
		jQuery.ready( true );
	}
};
jQuery.isArray = Array.isArray;
jQuery.parseJSON = JSON.parse;
jQuery.nodeName = nodeName;
jQuery.isFunction = isFunction;
jQuery.isWindow = isWindow;
jQuery.camelCase = camelCase;
jQuery.type = toType;

jQuery.now = Date.now;

jQuery.isNumeric = function( obj ) {

	// As of jQuery 3.0, isNumeric is limited to
	// strings and numbers (primitives or objects)
	// that can be coerced to finite numbers (gh-2662)
	var type = jQuery.type( obj );
	return ( type === "number" || type === "string" ) &&

		// parseFloat NaNs numeric-cast false positives ("")
		// ...but misinterprets leading-number strings, particularly hex literals ("0x...")
		// subtraction forces infinities to NaN
		!isNaN( obj - parseFloat( obj ) );
};




// Register as a named AMD module, since jQuery can be concatenated with other
// files that may use define, but not via a proper concatenation script that
// understands anonymous AMD modules. A named AMD is safest and most robust
// way to register. Lowercase jquery is used because AMD module names are
// derived from file names, and jQuery is normally delivered in a lowercase
// file name. Do this after creating the global so that if an AMD module wants
// to call noConflict to hide this version of jQuery, it will work.

// Note that for maximum portability, libraries that are not jQuery should
// declare themselves as anonymous modules, and avoid setting a global if an
// AMD loader is present. jQuery is a special case. For more information, see
// https://github.com/jrburke/requirejs/wiki/Updating-existing-libraries#wiki-anon

if ( true ) {
	!(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = (function() {
		return jQuery;
	}).apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__),
				__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
}




var

	// Map over jQuery in case of overwrite
	_jQuery = window.jQuery,

	// Map over the $ in case of overwrite
	_$ = window.$;

jQuery.noConflict = function( deep ) {
	if ( window.$ === jQuery ) {
		window.$ = _$;
	}

	if ( deep && window.jQuery === jQuery ) {
		window.jQuery = _jQuery;
	}

	return jQuery;
};

// Expose jQuery and $ identifiers, even in AMD
// (#7102#comment:10, https://github.com/jquery/jquery/pull/557)
// and CommonJS for browser emulators (#13566)
if ( !noGlobal ) {
	window.jQuery = window.$ = jQuery;
}




return jQuery;
} );


/***/ }),

/***/ "./node_modules/md5.js/index.js":
/*!**************************************!*\
  !*** ./node_modules/md5.js/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(Buffer) {
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var HashBase = __webpack_require__(/*! hash-base */ "./node_modules/hash-base/index.js")

var ARRAY16 = new Array(16)

function MD5 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
}

inherits(MD5, HashBase)

MD5.prototype._update = function () {
  var M = ARRAY16
  for (var i = 0; i < 16; ++i) M[i] = this._block.readInt32LE(i * 4)

  var a = this._a
  var b = this._b
  var c = this._c
  var d = this._d

  a = fnF(a, b, c, d, M[0], 0xd76aa478, 7)
  d = fnF(d, a, b, c, M[1], 0xe8c7b756, 12)
  c = fnF(c, d, a, b, M[2], 0x242070db, 17)
  b = fnF(b, c, d, a, M[3], 0xc1bdceee, 22)
  a = fnF(a, b, c, d, M[4], 0xf57c0faf, 7)
  d = fnF(d, a, b, c, M[5], 0x4787c62a, 12)
  c = fnF(c, d, a, b, M[6], 0xa8304613, 17)
  b = fnF(b, c, d, a, M[7], 0xfd469501, 22)
  a = fnF(a, b, c, d, M[8], 0x698098d8, 7)
  d = fnF(d, a, b, c, M[9], 0x8b44f7af, 12)
  c = fnF(c, d, a, b, M[10], 0xffff5bb1, 17)
  b = fnF(b, c, d, a, M[11], 0x895cd7be, 22)
  a = fnF(a, b, c, d, M[12], 0x6b901122, 7)
  d = fnF(d, a, b, c, M[13], 0xfd987193, 12)
  c = fnF(c, d, a, b, M[14], 0xa679438e, 17)
  b = fnF(b, c, d, a, M[15], 0x49b40821, 22)

  a = fnG(a, b, c, d, M[1], 0xf61e2562, 5)
  d = fnG(d, a, b, c, M[6], 0xc040b340, 9)
  c = fnG(c, d, a, b, M[11], 0x265e5a51, 14)
  b = fnG(b, c, d, a, M[0], 0xe9b6c7aa, 20)
  a = fnG(a, b, c, d, M[5], 0xd62f105d, 5)
  d = fnG(d, a, b, c, M[10], 0x02441453, 9)
  c = fnG(c, d, a, b, M[15], 0xd8a1e681, 14)
  b = fnG(b, c, d, a, M[4], 0xe7d3fbc8, 20)
  a = fnG(a, b, c, d, M[9], 0x21e1cde6, 5)
  d = fnG(d, a, b, c, M[14], 0xc33707d6, 9)
  c = fnG(c, d, a, b, M[3], 0xf4d50d87, 14)
  b = fnG(b, c, d, a, M[8], 0x455a14ed, 20)
  a = fnG(a, b, c, d, M[13], 0xa9e3e905, 5)
  d = fnG(d, a, b, c, M[2], 0xfcefa3f8, 9)
  c = fnG(c, d, a, b, M[7], 0x676f02d9, 14)
  b = fnG(b, c, d, a, M[12], 0x8d2a4c8a, 20)

  a = fnH(a, b, c, d, M[5], 0xfffa3942, 4)
  d = fnH(d, a, b, c, M[8], 0x8771f681, 11)
  c = fnH(c, d, a, b, M[11], 0x6d9d6122, 16)
  b = fnH(b, c, d, a, M[14], 0xfde5380c, 23)
  a = fnH(a, b, c, d, M[1], 0xa4beea44, 4)
  d = fnH(d, a, b, c, M[4], 0x4bdecfa9, 11)
  c = fnH(c, d, a, b, M[7], 0xf6bb4b60, 16)
  b = fnH(b, c, d, a, M[10], 0xbebfbc70, 23)
  a = fnH(a, b, c, d, M[13], 0x289b7ec6, 4)
  d = fnH(d, a, b, c, M[0], 0xeaa127fa, 11)
  c = fnH(c, d, a, b, M[3], 0xd4ef3085, 16)
  b = fnH(b, c, d, a, M[6], 0x04881d05, 23)
  a = fnH(a, b, c, d, M[9], 0xd9d4d039, 4)
  d = fnH(d, a, b, c, M[12], 0xe6db99e5, 11)
  c = fnH(c, d, a, b, M[15], 0x1fa27cf8, 16)
  b = fnH(b, c, d, a, M[2], 0xc4ac5665, 23)

  a = fnI(a, b, c, d, M[0], 0xf4292244, 6)
  d = fnI(d, a, b, c, M[7], 0x432aff97, 10)
  c = fnI(c, d, a, b, M[14], 0xab9423a7, 15)
  b = fnI(b, c, d, a, M[5], 0xfc93a039, 21)
  a = fnI(a, b, c, d, M[12], 0x655b59c3, 6)
  d = fnI(d, a, b, c, M[3], 0x8f0ccc92, 10)
  c = fnI(c, d, a, b, M[10], 0xffeff47d, 15)
  b = fnI(b, c, d, a, M[1], 0x85845dd1, 21)
  a = fnI(a, b, c, d, M[8], 0x6fa87e4f, 6)
  d = fnI(d, a, b, c, M[15], 0xfe2ce6e0, 10)
  c = fnI(c, d, a, b, M[6], 0xa3014314, 15)
  b = fnI(b, c, d, a, M[13], 0x4e0811a1, 21)
  a = fnI(a, b, c, d, M[4], 0xf7537e82, 6)
  d = fnI(d, a, b, c, M[11], 0xbd3af235, 10)
  c = fnI(c, d, a, b, M[2], 0x2ad7d2bb, 15)
  b = fnI(b, c, d, a, M[9], 0xeb86d391, 21)

  this._a = (this._a + a) | 0
  this._b = (this._b + b) | 0
  this._c = (this._c + c) | 0
  this._d = (this._d + d) | 0
}

MD5.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = new Buffer(16)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fnF (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + b) | 0
}

function fnG (a, b, c, d, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + b) | 0
}

function fnH (a, b, c, d, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + b) | 0
}

function fnI (a, b, c, d, m, k, s) {
  return (rotl((a + ((c ^ (b | (~d)))) + m + k) | 0, s) + b) | 0
}

module.exports = MD5

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/miller-rabin/lib/mr.js":
/*!*********************************************!*\
  !*** ./node_modules/miller-rabin/lib/mr.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var bn = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var brorand = __webpack_require__(/*! brorand */ "./node_modules/brorand/index.js");

function MillerRabin(rand) {
  this.rand = rand || new brorand.Rand();
}
module.exports = MillerRabin;

MillerRabin.create = function create(rand) {
  return new MillerRabin(rand);
};

MillerRabin.prototype._randbelow = function _randbelow(n) {
  var len = n.bitLength();
  var min_bytes = Math.ceil(len / 8);

  // Generage random bytes until a number less than n is found.
  // This ensures that 0..n-1 have an equal probability of being selected.
  do
    var a = new bn(this.rand.generate(min_bytes));
  while (a.cmp(n) >= 0);

  return a;
};

MillerRabin.prototype._randrange = function _randrange(start, stop) {
  // Generate a random number greater than or equal to start and less than stop.
  var size = stop.sub(start);
  return start.add(this._randbelow(size));
};

MillerRabin.prototype.test = function test(n, k, cb) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  var prime = true;
  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);
    if (cb)
      cb(a);

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return false;
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s)
      return false;
  }

  return prime;
};

MillerRabin.prototype.getDivisor = function getDivisor(n, k) {
  var len = n.bitLength();
  var red = bn.mont(n);
  var rone = new bn(1).toRed(red);

  if (!k)
    k = Math.max(1, (len / 48) | 0);

  // Find d and s, (n - 1) = (2 ^ s) * d;
  var n1 = n.subn(1);
  for (var s = 0; !n1.testn(s); s++) {}
  var d = n.shrn(s);

  var rn1 = n1.toRed(red);

  for (; k > 0; k--) {
    var a = this._randrange(new bn(2), n1);

    var g = n.gcd(a);
    if (g.cmpn(1) !== 0)
      return g;

    var x = a.toRed(red).redPow(d);
    if (x.cmp(rone) === 0 || x.cmp(rn1) === 0)
      continue;

    for (var i = 1; i < s; i++) {
      x = x.redSqr();

      if (x.cmp(rone) === 0)
        return x.fromRed().subn(1).gcd(n);
      if (x.cmp(rn1) === 0)
        break;
    }

    if (i === s) {
      x = x.redSqr();
      return x.fromRed().subn(1).gcd(n);
    }
  }

  return false;
};


/***/ }),

/***/ "./node_modules/minimalistic-assert/index.js":
/*!***************************************************!*\
  !*** ./node_modules/minimalistic-assert/index.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = assert;

function assert(val, msg) {
  if (!val)
    throw new Error(msg || 'Assertion failed');
}

assert.equal = function assertEqual(l, r, msg) {
  if (l != r)
    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));
};


/***/ }),

/***/ "./node_modules/minimalistic-crypto-utils/lib/utils.js":
/*!*************************************************************!*\
  !*** ./node_modules/minimalistic-crypto-utils/lib/utils.js ***!
  \*************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var utils = exports;

function toArray(msg, enc) {
  if (Array.isArray(msg))
    return msg.slice();
  if (!msg)
    return [];
  var res = [];
  if (typeof msg !== 'string') {
    for (var i = 0; i < msg.length; i++)
      res[i] = msg[i] | 0;
    return res;
  }
  if (enc === 'hex') {
    msg = msg.replace(/[^a-z0-9]+/ig, '');
    if (msg.length % 2 !== 0)
      msg = '0' + msg;
    for (var i = 0; i < msg.length; i += 2)
      res.push(parseInt(msg[i] + msg[i + 1], 16));
  } else {
    for (var i = 0; i < msg.length; i++) {
      var c = msg.charCodeAt(i);
      var hi = c >> 8;
      var lo = c & 0xff;
      if (hi)
        res.push(hi, lo);
      else
        res.push(lo);
    }
  }
  return res;
}
utils.toArray = toArray;

function zero2(word) {
  if (word.length === 1)
    return '0' + word;
  else
    return word;
}
utils.zero2 = zero2;

function toHex(msg) {
  var res = '';
  for (var i = 0; i < msg.length; i++)
    res += zero2(msg[i].toString(16));
  return res;
}
utils.toHex = toHex;

utils.encode = function encode(arr, enc) {
  if (enc === 'hex')
    return toHex(arr);
  else
    return arr;
};


/***/ }),

/***/ "./node_modules/node-libs-browser/node_modules/string_decoder/lib/string_decoder.js":
/*!******************************************************************************************!*\
  !*** ./node_modules/node-libs-browser/node_modules/string_decoder/lib/string_decoder.js ***!
  \******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer;
/*</replacement>*/

var isEncoding = Buffer.isEncoding || function (encoding) {
  encoding = '' + encoding;
  switch (encoding && encoding.toLowerCase()) {
    case 'hex':case 'utf8':case 'utf-8':case 'ascii':case 'binary':case 'base64':case 'ucs2':case 'ucs-2':case 'utf16le':case 'utf-16le':case 'raw':
      return true;
    default:
      return false;
  }
};

function _normalizeEncoding(enc) {
  if (!enc) return 'utf8';
  var retried;
  while (true) {
    switch (enc) {
      case 'utf8':
      case 'utf-8':
        return 'utf8';
      case 'ucs2':
      case 'ucs-2':
      case 'utf16le':
      case 'utf-16le':
        return 'utf16le';
      case 'latin1':
      case 'binary':
        return 'latin1';
      case 'base64':
      case 'ascii':
      case 'hex':
        return enc;
      default:
        if (retried) return; // undefined
        enc = ('' + enc).toLowerCase();
        retried = true;
    }
  }
};

// Do not cache `Buffer.isEncoding` when checking encoding names as some
// modules monkey-patch it to support additional encodings
function normalizeEncoding(enc) {
  var nenc = _normalizeEncoding(enc);
  if (typeof nenc !== 'string' && (Buffer.isEncoding === isEncoding || !isEncoding(enc))) throw new Error('Unknown encoding: ' + enc);
  return nenc || enc;
}

// StringDecoder provides an interface for efficiently splitting a series of
// buffers into a series of JS strings without breaking apart multi-byte
// characters.
exports.StringDecoder = StringDecoder;
function StringDecoder(encoding) {
  this.encoding = normalizeEncoding(encoding);
  var nb;
  switch (this.encoding) {
    case 'utf16le':
      this.text = utf16Text;
      this.end = utf16End;
      nb = 4;
      break;
    case 'utf8':
      this.fillLast = utf8FillLast;
      nb = 4;
      break;
    case 'base64':
      this.text = base64Text;
      this.end = base64End;
      nb = 3;
      break;
    default:
      this.write = simpleWrite;
      this.end = simpleEnd;
      return;
  }
  this.lastNeed = 0;
  this.lastTotal = 0;
  this.lastChar = Buffer.allocUnsafe(nb);
}

StringDecoder.prototype.write = function (buf) {
  if (buf.length === 0) return '';
  var r;
  var i;
  if (this.lastNeed) {
    r = this.fillLast(buf);
    if (r === undefined) return '';
    i = this.lastNeed;
    this.lastNeed = 0;
  } else {
    i = 0;
  }
  if (i < buf.length) return r ? r + this.text(buf, i) : this.text(buf, i);
  return r || '';
};

StringDecoder.prototype.end = utf8End;

// Returns only complete characters in a Buffer
StringDecoder.prototype.text = utf8Text;

// Attempts to complete a partial non-UTF-8 character using bytes from a Buffer
StringDecoder.prototype.fillLast = function (buf) {
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, this.lastTotal - this.lastNeed, 0, buf.length);
  this.lastNeed -= buf.length;
};

// Checks the type of a UTF-8 byte, whether it's ASCII, a leading byte, or a
// continuation byte. If an invalid byte is detected, -2 is returned.
function utf8CheckByte(byte) {
  if (byte <= 0x7F) return 0;else if (byte >> 5 === 0x06) return 2;else if (byte >> 4 === 0x0E) return 3;else if (byte >> 3 === 0x1E) return 4;
  return byte >> 6 === 0x02 ? -1 : -2;
}

// Checks at most 3 bytes at the end of a Buffer in order to detect an
// incomplete multi-byte UTF-8 character. The total number of bytes (2, 3, or 4)
// needed to complete the UTF-8 character (if applicable) are returned.
function utf8CheckIncomplete(self, buf, i) {
  var j = buf.length - 1;
  if (j < i) return 0;
  var nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 1;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) self.lastNeed = nb - 2;
    return nb;
  }
  if (--j < i || nb === -2) return 0;
  nb = utf8CheckByte(buf[j]);
  if (nb >= 0) {
    if (nb > 0) {
      if (nb === 2) nb = 0;else self.lastNeed = nb - 3;
    }
    return nb;
  }
  return 0;
}

// Validates as many continuation bytes for a multi-byte UTF-8 character as
// needed or are available. If we see a non-continuation byte where we expect
// one, we "replace" the validated continuation bytes we've seen so far with
// a single UTF-8 replacement character ('\ufffd'), to match v8's UTF-8 decoding
// behavior. The continuation byte check is included three times in the case
// where all of the continuation bytes for a character exist in the same buffer.
// It is also done this way as a slight performance increase instead of using a
// loop.
function utf8CheckExtraBytes(self, buf, p) {
  if ((buf[0] & 0xC0) !== 0x80) {
    self.lastNeed = 0;
    return '\ufffd';
  }
  if (self.lastNeed > 1 && buf.length > 1) {
    if ((buf[1] & 0xC0) !== 0x80) {
      self.lastNeed = 1;
      return '\ufffd';
    }
    if (self.lastNeed > 2 && buf.length > 2) {
      if ((buf[2] & 0xC0) !== 0x80) {
        self.lastNeed = 2;
        return '\ufffd';
      }
    }
  }
}

// Attempts to complete a multi-byte UTF-8 character using bytes from a Buffer.
function utf8FillLast(buf) {
  var p = this.lastTotal - this.lastNeed;
  var r = utf8CheckExtraBytes(this, buf, p);
  if (r !== undefined) return r;
  if (this.lastNeed <= buf.length) {
    buf.copy(this.lastChar, p, 0, this.lastNeed);
    return this.lastChar.toString(this.encoding, 0, this.lastTotal);
  }
  buf.copy(this.lastChar, p, 0, buf.length);
  this.lastNeed -= buf.length;
}

// Returns all complete UTF-8 characters in a Buffer. If the Buffer ended on a
// partial character, the character's bytes are buffered until the required
// number of bytes are available.
function utf8Text(buf, i) {
  var total = utf8CheckIncomplete(this, buf, i);
  if (!this.lastNeed) return buf.toString('utf8', i);
  this.lastTotal = total;
  var end = buf.length - (total - this.lastNeed);
  buf.copy(this.lastChar, 0, end);
  return buf.toString('utf8', i, end);
}

// For UTF-8, a replacement character is added when ending on a partial
// character.
function utf8End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + '\ufffd';
  return r;
}

// UTF-16LE typically needs two bytes per character, but even if we have an even
// number of bytes available, we need to check if we end on a leading/high
// surrogate. In that case, we need to wait for the next two bytes in order to
// decode the last character properly.
function utf16Text(buf, i) {
  if ((buf.length - i) % 2 === 0) {
    var r = buf.toString('utf16le', i);
    if (r) {
      var c = r.charCodeAt(r.length - 1);
      if (c >= 0xD800 && c <= 0xDBFF) {
        this.lastNeed = 2;
        this.lastTotal = 4;
        this.lastChar[0] = buf[buf.length - 2];
        this.lastChar[1] = buf[buf.length - 1];
        return r.slice(0, -1);
      }
    }
    return r;
  }
  this.lastNeed = 1;
  this.lastTotal = 2;
  this.lastChar[0] = buf[buf.length - 1];
  return buf.toString('utf16le', i, buf.length - 1);
}

// For UTF-16LE we do not explicitly append special replacement characters if we
// end on a partial character, we simply let v8 handle that.
function utf16End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) {
    var end = this.lastTotal - this.lastNeed;
    return r + this.lastChar.toString('utf16le', 0, end);
  }
  return r;
}

function base64Text(buf, i) {
  var n = (buf.length - i) % 3;
  if (n === 0) return buf.toString('base64', i);
  this.lastNeed = 3 - n;
  this.lastTotal = 3;
  if (n === 1) {
    this.lastChar[0] = buf[buf.length - 1];
  } else {
    this.lastChar[0] = buf[buf.length - 2];
    this.lastChar[1] = buf[buf.length - 1];
  }
  return buf.toString('base64', i, buf.length - n);
}

function base64End(buf) {
  var r = buf && buf.length ? this.write(buf) : '';
  if (this.lastNeed) return r + this.lastChar.toString('base64', 0, 3 - this.lastNeed);
  return r;
}

// Pass bytes on through for single-byte encodings (e.g. ascii, latin1, hex)
function simpleWrite(buf) {
  return buf.toString(this.encoding);
}

function simpleEnd(buf) {
  return buf && buf.length ? this.write(buf) : '';
}

/***/ }),

/***/ "./node_modules/parse-asn1/aesid.json":
/*!********************************************!*\
  !*** ./node_modules/parse-asn1/aesid.json ***!
  \********************************************/
/*! exports provided: 2.16.840.1.101.3.4.1.1, 2.16.840.1.101.3.4.1.2, 2.16.840.1.101.3.4.1.3, 2.16.840.1.101.3.4.1.4, 2.16.840.1.101.3.4.1.21, 2.16.840.1.101.3.4.1.22, 2.16.840.1.101.3.4.1.23, 2.16.840.1.101.3.4.1.24, 2.16.840.1.101.3.4.1.41, 2.16.840.1.101.3.4.1.42, 2.16.840.1.101.3.4.1.43, 2.16.840.1.101.3.4.1.44, default */
/***/ (function(module) {

module.exports = {"2.16.840.1.101.3.4.1.1":"aes-128-ecb","2.16.840.1.101.3.4.1.2":"aes-128-cbc","2.16.840.1.101.3.4.1.3":"aes-128-ofb","2.16.840.1.101.3.4.1.4":"aes-128-cfb","2.16.840.1.101.3.4.1.21":"aes-192-ecb","2.16.840.1.101.3.4.1.22":"aes-192-cbc","2.16.840.1.101.3.4.1.23":"aes-192-ofb","2.16.840.1.101.3.4.1.24":"aes-192-cfb","2.16.840.1.101.3.4.1.41":"aes-256-ecb","2.16.840.1.101.3.4.1.42":"aes-256-cbc","2.16.840.1.101.3.4.1.43":"aes-256-ofb","2.16.840.1.101.3.4.1.44":"aes-256-cfb"};

/***/ }),

/***/ "./node_modules/parse-asn1/asn1.js":
/*!*****************************************!*\
  !*** ./node_modules/parse-asn1/asn1.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// from https://github.com/indutny/self-signed/blob/gh-pages/lib/asn1.js
// Fedor, you are amazing.


var asn1 = __webpack_require__(/*! asn1.js */ "./node_modules/asn1.js/lib/asn1.js")

exports.certificate = __webpack_require__(/*! ./certificate */ "./node_modules/parse-asn1/certificate.js")

var RSAPrivateKey = asn1.define('RSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('modulus').int(),
    this.key('publicExponent').int(),
    this.key('privateExponent').int(),
    this.key('prime1').int(),
    this.key('prime2').int(),
    this.key('exponent1').int(),
    this.key('exponent2').int(),
    this.key('coefficient').int()
  )
})
exports.RSAPrivateKey = RSAPrivateKey

var RSAPublicKey = asn1.define('RSAPublicKey', function () {
  this.seq().obj(
    this.key('modulus').int(),
    this.key('publicExponent').int()
  )
})
exports.RSAPublicKey = RSAPublicKey

var PublicKey = asn1.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})
exports.PublicKey = PublicKey

var AlgorithmIdentifier = asn1.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('none').null_().optional(),
    this.key('curve').objid().optional(),
    this.key('params').seq().obj(
      this.key('p').int(),
      this.key('q').int(),
      this.key('g').int()
    ).optional()
  )
})

var PrivateKeyInfo = asn1.define('PrivateKeyInfo', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPrivateKey').octstr()
  )
})
exports.PrivateKey = PrivateKeyInfo
var EncryptedPrivateKeyInfo = asn1.define('EncryptedPrivateKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').seq().obj(
      this.key('id').objid(),
      this.key('decrypt').seq().obj(
        this.key('kde').seq().obj(
          this.key('id').objid(),
          this.key('kdeparams').seq().obj(
            this.key('salt').octstr(),
            this.key('iters').int()
          )
        ),
        this.key('cipher').seq().obj(
          this.key('algo').objid(),
          this.key('iv').octstr()
        )
      )
    ),
    this.key('subjectPrivateKey').octstr()
  )
})

exports.EncryptedPrivateKey = EncryptedPrivateKeyInfo

var DSAPrivateKey = asn1.define('DSAPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('p').int(),
    this.key('q').int(),
    this.key('g').int(),
    this.key('pub_key').int(),
    this.key('priv_key').int()
  )
})
exports.DSAPrivateKey = DSAPrivateKey

exports.DSAparam = asn1.define('DSAparam', function () {
  this.int()
})

var ECPrivateKey = asn1.define('ECPrivateKey', function () {
  this.seq().obj(
    this.key('version').int(),
    this.key('privateKey').octstr(),
    this.key('parameters').optional().explicit(0).use(ECParameters),
    this.key('publicKey').optional().explicit(1).bitstr()
  )
})
exports.ECPrivateKey = ECPrivateKey

var ECParameters = asn1.define('ECParameters', function () {
  this.choice({
    namedCurve: this.objid()
  })
})

exports.signature = asn1.define('signature', function () {
  this.seq().obj(
    this.key('r').int(),
    this.key('s').int()
  )
})


/***/ }),

/***/ "./node_modules/parse-asn1/certificate.js":
/*!************************************************!*\
  !*** ./node_modules/parse-asn1/certificate.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// from https://github.com/Rantanen/node-dtls/blob/25a7dc861bda38cfeac93a723500eea4f0ac2e86/Certificate.js
// thanks to @Rantanen



var asn = __webpack_require__(/*! asn1.js */ "./node_modules/asn1.js/lib/asn1.js")

var Time = asn.define('Time', function () {
  this.choice({
    utcTime: this.utctime(),
    generalTime: this.gentime()
  })
})

var AttributeTypeValue = asn.define('AttributeTypeValue', function () {
  this.seq().obj(
    this.key('type').objid(),
    this.key('value').any()
  )
})

var AlgorithmIdentifier = asn.define('AlgorithmIdentifier', function () {
  this.seq().obj(
    this.key('algorithm').objid(),
    this.key('parameters').optional()
  )
})

var SubjectPublicKeyInfo = asn.define('SubjectPublicKeyInfo', function () {
  this.seq().obj(
    this.key('algorithm').use(AlgorithmIdentifier),
    this.key('subjectPublicKey').bitstr()
  )
})

var RelativeDistinguishedName = asn.define('RelativeDistinguishedName', function () {
  this.setof(AttributeTypeValue)
})

var RDNSequence = asn.define('RDNSequence', function () {
  this.seqof(RelativeDistinguishedName)
})

var Name = asn.define('Name', function () {
  this.choice({
    rdnSequence: this.use(RDNSequence)
  })
})

var Validity = asn.define('Validity', function () {
  this.seq().obj(
    this.key('notBefore').use(Time),
    this.key('notAfter').use(Time)
  )
})

var Extension = asn.define('Extension', function () {
  this.seq().obj(
    this.key('extnID').objid(),
    this.key('critical').bool().def(false),
    this.key('extnValue').octstr()
  )
})

var TBSCertificate = asn.define('TBSCertificate', function () {
  this.seq().obj(
    this.key('version').explicit(0).int(),
    this.key('serialNumber').int(),
    this.key('signature').use(AlgorithmIdentifier),
    this.key('issuer').use(Name),
    this.key('validity').use(Validity),
    this.key('subject').use(Name),
    this.key('subjectPublicKeyInfo').use(SubjectPublicKeyInfo),
    this.key('issuerUniqueID').implicit(1).bitstr().optional(),
    this.key('subjectUniqueID').implicit(2).bitstr().optional(),
    this.key('extensions').explicit(3).seqof(Extension).optional()
  )
})

var X509Certificate = asn.define('X509Certificate', function () {
  this.seq().obj(
    this.key('tbsCertificate').use(TBSCertificate),
    this.key('signatureAlgorithm').use(AlgorithmIdentifier),
    this.key('signatureValue').bitstr()
  )
})

module.exports = X509Certificate


/***/ }),

/***/ "./node_modules/parse-asn1/fixProc.js":
/*!********************************************!*\
  !*** ./node_modules/parse-asn1/fixProc.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {// adapted from https://github.com/apatil/pemstrip
var findProc = /Proc-Type: 4,ENCRYPTED[\n\r]+DEK-Info: AES-((?:128)|(?:192)|(?:256))-CBC,([0-9A-H]+)[\n\r]+([0-9A-z\n\r\+\/\=]+)[\n\r]+/m
var startRegex = /^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----/m
var fullRegex = /^-----BEGIN ((?:.* KEY)|CERTIFICATE)-----([0-9A-z\n\r\+\/\=]+)-----END \1-----$/m
var evp = __webpack_require__(/*! evp_bytestokey */ "./node_modules/evp_bytestokey/index.js")
var ciphers = __webpack_require__(/*! browserify-aes */ "./node_modules/browserify-aes/browser.js")
module.exports = function (okey, password) {
  var key = okey.toString()
  var match = key.match(findProc)
  var decrypted
  if (!match) {
    var match2 = key.match(fullRegex)
    decrypted = new Buffer(match2[2].replace(/[\r\n]/g, ''), 'base64')
  } else {
    var suite = 'aes' + match[1]
    var iv = new Buffer(match[2], 'hex')
    var cipherText = new Buffer(match[3].replace(/[\r\n]/g, ''), 'base64')
    var cipherKey = evp(password, iv.slice(0, 8), parseInt(match[1], 10)).key
    var out = []
    var cipher = ciphers.createDecipheriv(suite, cipherKey, iv)
    out.push(cipher.update(cipherText))
    out.push(cipher.final())
    decrypted = Buffer.concat(out)
  }
  var tag = key.match(startRegex)[1]
  return {
    tag: tag,
    data: decrypted
  }
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/parse-asn1/index.js":
/*!******************************************!*\
  !*** ./node_modules/parse-asn1/index.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var asn1 = __webpack_require__(/*! ./asn1 */ "./node_modules/parse-asn1/asn1.js")
var aesid = __webpack_require__(/*! ./aesid.json */ "./node_modules/parse-asn1/aesid.json")
var fixProc = __webpack_require__(/*! ./fixProc */ "./node_modules/parse-asn1/fixProc.js")
var ciphers = __webpack_require__(/*! browserify-aes */ "./node_modules/browserify-aes/browser.js")
var compat = __webpack_require__(/*! pbkdf2 */ "./node_modules/pbkdf2/browser.js")
module.exports = parseKeys

function parseKeys (buffer) {
  var password
  if (typeof buffer === 'object' && !Buffer.isBuffer(buffer)) {
    password = buffer.passphrase
    buffer = buffer.key
  }
  if (typeof buffer === 'string') {
    buffer = new Buffer(buffer)
  }

  var stripped = fixProc(buffer, password)

  var type = stripped.tag
  var data = stripped.data
  var subtype, ndata
  switch (type) {
    case 'CERTIFICATE':
      ndata = asn1.certificate.decode(data, 'der').tbsCertificate.subjectPublicKeyInfo
      // falls through
    case 'PUBLIC KEY':
      if (!ndata) {
        ndata = asn1.PublicKey.decode(data, 'der')
      }
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPublicKey.decode(ndata.subjectPublicKey.data, 'der')
        case '1.2.840.10045.2.1':
          ndata.subjectPrivateKey = ndata.subjectPublicKey
          return {
            type: 'ec',
            data: ndata
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.pub_key = asn1.DSAparam.decode(ndata.subjectPublicKey.data, 'der')
          return {
            type: 'dsa',
            data: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'ENCRYPTED PRIVATE KEY':
      data = asn1.EncryptedPrivateKey.decode(data, 'der')
      data = decrypt(data, password)
      // falls through
    case 'PRIVATE KEY':
      ndata = asn1.PrivateKey.decode(data, 'der')
      subtype = ndata.algorithm.algorithm.join('.')
      switch (subtype) {
        case '1.2.840.113549.1.1.1':
          return asn1.RSAPrivateKey.decode(ndata.subjectPrivateKey, 'der')
        case '1.2.840.10045.2.1':
          return {
            curve: ndata.algorithm.curve,
            privateKey: asn1.ECPrivateKey.decode(ndata.subjectPrivateKey, 'der').privateKey
          }
        case '1.2.840.10040.4.1':
          ndata.algorithm.params.priv_key = asn1.DSAparam.decode(ndata.subjectPrivateKey, 'der')
          return {
            type: 'dsa',
            params: ndata.algorithm.params
          }
        default: throw new Error('unknown key id ' + subtype)
      }
      throw new Error('unknown key type ' + type)
    case 'RSA PUBLIC KEY':
      return asn1.RSAPublicKey.decode(data, 'der')
    case 'RSA PRIVATE KEY':
      return asn1.RSAPrivateKey.decode(data, 'der')
    case 'DSA PRIVATE KEY':
      return {
        type: 'dsa',
        params: asn1.DSAPrivateKey.decode(data, 'der')
      }
    case 'EC PRIVATE KEY':
      data = asn1.ECPrivateKey.decode(data, 'der')
      return {
        curve: data.parameters.value,
        privateKey: data.privateKey
      }
    default: throw new Error('unknown key type ' + type)
  }
}
parseKeys.signature = asn1.signature
function decrypt (data, password) {
  var salt = data.algorithm.decrypt.kde.kdeparams.salt
  var iters = parseInt(data.algorithm.decrypt.kde.kdeparams.iters.toString(), 10)
  var algo = aesid[data.algorithm.decrypt.cipher.algo.join('.')]
  var iv = data.algorithm.decrypt.cipher.iv
  var cipherText = data.subjectPrivateKey
  var keylen = parseInt(algo.split('-')[1], 10) / 8
  var key = compat.pbkdf2Sync(password, salt, iters, keylen)
  var cipher = ciphers.createDecipheriv(algo, key, iv)
  var out = []
  out.push(cipher.update(cipherText))
  out.push(cipher.final())
  return Buffer.concat(out)
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/path-browserify/index.js":
/*!***********************************************!*\
  !*** ./node_modules/path-browserify/index.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// resolves . and .. elements in a path array with directory names there
// must be no slashes, empty elements, or device names (c:\) in the array
// (so also no leading and trailing slashes - it does not distinguish
// relative and absolute paths)
function normalizeArray(parts, allowAboveRoot) {
  // if the path tries to go above the root, `up` ends up > 0
  var up = 0;
  for (var i = parts.length - 1; i >= 0; i--) {
    var last = parts[i];
    if (last === '.') {
      parts.splice(i, 1);
    } else if (last === '..') {
      parts.splice(i, 1);
      up++;
    } else if (up) {
      parts.splice(i, 1);
      up--;
    }
  }

  // if the path is allowed to go above the root, restore leading ..s
  if (allowAboveRoot) {
    for (; up--; up) {
      parts.unshift('..');
    }
  }

  return parts;
}

// Split a filename into [root, dir, basename, ext], unix version
// 'root' is just a slash, or nothing.
var splitPathRe =
    /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
var splitPath = function(filename) {
  return splitPathRe.exec(filename).slice(1);
};

// path.resolve([from ...], to)
// posix version
exports.resolve = function() {
  var resolvedPath = '',
      resolvedAbsolute = false;

  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
    var path = (i >= 0) ? arguments[i] : process.cwd();

    // Skip empty and invalid entries
    if (typeof path !== 'string') {
      throw new TypeError('Arguments to path.resolve must be strings');
    } else if (!path) {
      continue;
    }

    resolvedPath = path + '/' + resolvedPath;
    resolvedAbsolute = path.charAt(0) === '/';
  }

  // At this point the path should be resolved to a full absolute path, but
  // handle relative paths to be safe (might happen when process.cwd() fails)

  // Normalize the path
  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {
    return !!p;
  }), !resolvedAbsolute).join('/');

  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';
};

// path.normalize(path)
// posix version
exports.normalize = function(path) {
  var isAbsolute = exports.isAbsolute(path),
      trailingSlash = substr(path, -1) === '/';

  // Normalize the path
  path = normalizeArray(filter(path.split('/'), function(p) {
    return !!p;
  }), !isAbsolute).join('/');

  if (!path && !isAbsolute) {
    path = '.';
  }
  if (path && trailingSlash) {
    path += '/';
  }

  return (isAbsolute ? '/' : '') + path;
};

// posix version
exports.isAbsolute = function(path) {
  return path.charAt(0) === '/';
};

// posix version
exports.join = function() {
  var paths = Array.prototype.slice.call(arguments, 0);
  return exports.normalize(filter(paths, function(p, index) {
    if (typeof p !== 'string') {
      throw new TypeError('Arguments to path.join must be strings');
    }
    return p;
  }).join('/'));
};


// path.relative(from, to)
// posix version
exports.relative = function(from, to) {
  from = exports.resolve(from).substr(1);
  to = exports.resolve(to).substr(1);

  function trim(arr) {
    var start = 0;
    for (; start < arr.length; start++) {
      if (arr[start] !== '') break;
    }

    var end = arr.length - 1;
    for (; end >= 0; end--) {
      if (arr[end] !== '') break;
    }

    if (start > end) return [];
    return arr.slice(start, end - start + 1);
  }

  var fromParts = trim(from.split('/'));
  var toParts = trim(to.split('/'));

  var length = Math.min(fromParts.length, toParts.length);
  var samePartsLength = length;
  for (var i = 0; i < length; i++) {
    if (fromParts[i] !== toParts[i]) {
      samePartsLength = i;
      break;
    }
  }

  var outputParts = [];
  for (var i = samePartsLength; i < fromParts.length; i++) {
    outputParts.push('..');
  }

  outputParts = outputParts.concat(toParts.slice(samePartsLength));

  return outputParts.join('/');
};

exports.sep = '/';
exports.delimiter = ':';

exports.dirname = function(path) {
  var result = splitPath(path),
      root = result[0],
      dir = result[1];

  if (!root && !dir) {
    // No dirname whatsoever
    return '.';
  }

  if (dir) {
    // It has a dirname, strip trailing slash
    dir = dir.substr(0, dir.length - 1);
  }

  return root + dir;
};


exports.basename = function(path, ext) {
  var f = splitPath(path)[2];
  // TODO: make this comparison case-insensitive on windows?
  if (ext && f.substr(-1 * ext.length) === ext) {
    f = f.substr(0, f.length - ext.length);
  }
  return f;
};


exports.extname = function(path) {
  return splitPath(path)[3];
};

function filter (xs, f) {
    if (xs.filter) return xs.filter(f);
    var res = [];
    for (var i = 0; i < xs.length; i++) {
        if (f(xs[i], i, xs)) res.push(xs[i]);
    }
    return res;
}

// String.prototype.substr - negative index don't work in IE8
var substr = 'ab'.substr(-1) === 'b'
    ? function (str, start, len) { return str.substr(start, len) }
    : function (str, start, len) {
        if (start < 0) start = str.length + start;
        return str.substr(start, len);
    }
;

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/pbkdf2/browser.js":
/*!****************************************!*\
  !*** ./node_modules/pbkdf2/browser.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports.pbkdf2 = __webpack_require__(/*! ./lib/async */ "./node_modules/pbkdf2/lib/async.js")
exports.pbkdf2Sync = __webpack_require__(/*! ./lib/sync */ "./node_modules/pbkdf2/lib/sync-browser.js")


/***/ }),

/***/ "./node_modules/pbkdf2/lib/async.js":
/*!******************************************!*\
  !*** ./node_modules/pbkdf2/lib/async.js ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {var checkParameters = __webpack_require__(/*! ./precondition */ "./node_modules/pbkdf2/lib/precondition.js")
var defaultEncoding = __webpack_require__(/*! ./default-encoding */ "./node_modules/pbkdf2/lib/default-encoding.js")
var sync = __webpack_require__(/*! ./sync */ "./node_modules/pbkdf2/lib/sync-browser.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var ZERO_BUF
var subtle = global.crypto && global.crypto.subtle
var toBrowser = {
  'sha': 'SHA-1',
  'sha-1': 'SHA-1',
  'sha1': 'SHA-1',
  'sha256': 'SHA-256',
  'sha-256': 'SHA-256',
  'sha384': 'SHA-384',
  'sha-384': 'SHA-384',
  'sha-512': 'SHA-512',
  'sha512': 'SHA-512'
}
var checks = []
function checkNative (algo) {
  if (global.process && !global.process.browser) {
    return Promise.resolve(false)
  }
  if (!subtle || !subtle.importKey || !subtle.deriveBits) {
    return Promise.resolve(false)
  }
  if (checks[algo] !== undefined) {
    return checks[algo]
  }
  ZERO_BUF = ZERO_BUF || Buffer.alloc(8)
  var prom = browserPbkdf2(ZERO_BUF, ZERO_BUF, 10, 128, algo)
    .then(function () {
      return true
    }).catch(function () {
      return false
    })
  checks[algo] = prom
  return prom
}

function browserPbkdf2 (password, salt, iterations, length, algo) {
  return subtle.importKey(
    'raw', password, {name: 'PBKDF2'}, false, ['deriveBits']
  ).then(function (key) {
    return subtle.deriveBits({
      name: 'PBKDF2',
      salt: salt,
      iterations: iterations,
      hash: {
        name: algo
      }
    }, key, length << 3)
  }).then(function (res) {
    return Buffer.from(res)
  })
}

function resolvePromise (promise, callback) {
  promise.then(function (out) {
    process.nextTick(function () {
      callback(null, out)
    })
  }, function (e) {
    process.nextTick(function () {
      callback(e)
    })
  })
}
module.exports = function (password, salt, iterations, keylen, digest, callback) {
  if (typeof digest === 'function') {
    callback = digest
    digest = undefined
  }

  digest = digest || 'sha1'
  var algo = toBrowser[digest.toLowerCase()]

  if (!algo || typeof global.Promise !== 'function') {
    return process.nextTick(function () {
      var out
      try {
        out = sync(password, salt, iterations, keylen, digest)
      } catch (e) {
        return callback(e)
      }
      callback(null, out)
    })
  }

  checkParameters(password, salt, iterations, keylen)
  if (typeof callback !== 'function') throw new Error('No callback provided to pbkdf2')
  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)
  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)

  resolvePromise(checkNative(algo).then(function (resp) {
    if (resp) return browserPbkdf2(password, salt, iterations, keylen, algo)

    return sync(password, salt, iterations, keylen, digest)
  }), callback)
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/pbkdf2/lib/default-encoding.js":
/*!*****************************************************!*\
  !*** ./node_modules/pbkdf2/lib/default-encoding.js ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process) {var defaultEncoding
/* istanbul ignore next */
if (process.browser) {
  defaultEncoding = 'utf-8'
} else {
  var pVersionMajor = parseInt(process.version.split('.')[0].slice(1), 10)

  defaultEncoding = pVersionMajor >= 6 ? 'utf-8' : 'binary'
}
module.exports = defaultEncoding

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/pbkdf2/lib/precondition.js":
/*!*************************************************!*\
  !*** ./node_modules/pbkdf2/lib/precondition.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var MAX_ALLOC = Math.pow(2, 30) - 1 // default in iojs

function checkBuffer (buf, name) {
  if (typeof buf !== 'string' && !Buffer.isBuffer(buf)) {
    throw new TypeError(name + ' must be a buffer or string')
  }
}

module.exports = function (password, salt, iterations, keylen) {
  checkBuffer(password, 'Password')
  checkBuffer(salt, 'Salt')

  if (typeof iterations !== 'number') {
    throw new TypeError('Iterations not a number')
  }

  if (iterations < 0) {
    throw new TypeError('Bad iterations')
  }

  if (typeof keylen !== 'number') {
    throw new TypeError('Key length not a number')
  }

  if (keylen < 0 || keylen > MAX_ALLOC || keylen !== keylen) { /* eslint no-self-compare: 0 */
    throw new TypeError('Bad key length')
  }
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/pbkdf2/lib/sync-browser.js":
/*!*************************************************!*\
  !*** ./node_modules/pbkdf2/lib/sync-browser.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var md5 = __webpack_require__(/*! create-hash/md5 */ "./node_modules/create-hash/md5.js")
var rmd160 = __webpack_require__(/*! ripemd160 */ "./node_modules/ripemd160/index.js")
var sha = __webpack_require__(/*! sha.js */ "./node_modules/sha.js/index.js")

var checkParameters = __webpack_require__(/*! ./precondition */ "./node_modules/pbkdf2/lib/precondition.js")
var defaultEncoding = __webpack_require__(/*! ./default-encoding */ "./node_modules/pbkdf2/lib/default-encoding.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var ZEROS = Buffer.alloc(128)
var sizes = {
  md5: 16,
  sha1: 20,
  sha224: 28,
  sha256: 32,
  sha384: 48,
  sha512: 64,
  rmd160: 20,
  ripemd160: 20
}

function Hmac (alg, key, saltLen) {
  var hash = getDigest(alg)
  var blocksize = (alg === 'sha512' || alg === 'sha384') ? 128 : 64

  if (key.length > blocksize) {
    key = hash(key)
  } else if (key.length < blocksize) {
    key = Buffer.concat([key, ZEROS], blocksize)
  }

  var ipad = Buffer.allocUnsafe(blocksize + sizes[alg])
  var opad = Buffer.allocUnsafe(blocksize + sizes[alg])
  for (var i = 0; i < blocksize; i++) {
    ipad[i] = key[i] ^ 0x36
    opad[i] = key[i] ^ 0x5C
  }

  var ipad1 = Buffer.allocUnsafe(blocksize + saltLen + 4)
  ipad.copy(ipad1, 0, 0, blocksize)
  this.ipad1 = ipad1
  this.ipad2 = ipad
  this.opad = opad
  this.alg = alg
  this.blocksize = blocksize
  this.hash = hash
  this.size = sizes[alg]
}

Hmac.prototype.run = function (data, ipad) {
  data.copy(ipad, this.blocksize)
  var h = this.hash(ipad)
  h.copy(this.opad, this.blocksize)
  return this.hash(this.opad)
}

function getDigest (alg) {
  function shaFunc (data) {
    return sha(alg).update(data).digest()
  }

  if (alg === 'rmd160' || alg === 'ripemd160') return rmd160
  if (alg === 'md5') return md5
  return shaFunc
}

function pbkdf2 (password, salt, iterations, keylen, digest) {
  checkParameters(password, salt, iterations, keylen)

  if (!Buffer.isBuffer(password)) password = Buffer.from(password, defaultEncoding)
  if (!Buffer.isBuffer(salt)) salt = Buffer.from(salt, defaultEncoding)

  digest = digest || 'sha1'

  var hmac = new Hmac(digest, password, salt.length)

  var DK = Buffer.allocUnsafe(keylen)
  var block1 = Buffer.allocUnsafe(salt.length + 4)
  salt.copy(block1, 0, 0, salt.length)

  var destPos = 0
  var hLen = sizes[digest]
  var l = Math.ceil(keylen / hLen)

  for (var i = 1; i <= l; i++) {
    block1.writeUInt32BE(i, salt.length)

    var T = hmac.run(block1, hmac.ipad1)
    var U = T

    for (var j = 1; j < iterations; j++) {
      U = hmac.run(U, hmac.ipad2)
      for (var k = 0; k < hLen; k++) T[k] ^= U[k]
    }

    T.copy(DK, destPos)
    destPos += hLen
  }

  return DK
}

module.exports = pbkdf2


/***/ }),

/***/ "./node_modules/process-nextick-args/index.js":
/*!****************************************************!*\
  !*** ./node_modules/process-nextick-args/index.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process) {

if (!process.version ||
    process.version.indexOf('v0.') === 0 ||
    process.version.indexOf('v1.') === 0 && process.version.indexOf('v1.8.') !== 0) {
  module.exports = { nextTick: nextTick };
} else {
  module.exports = process
}

function nextTick(fn, arg1, arg2, arg3) {
  if (typeof fn !== 'function') {
    throw new TypeError('"callback" argument must be a function');
  }
  var len = arguments.length;
  var args, i;
  switch (len) {
  case 0:
  case 1:
    return process.nextTick(fn);
  case 2:
    return process.nextTick(function afterTickOne() {
      fn.call(null, arg1);
    });
  case 3:
    return process.nextTick(function afterTickTwo() {
      fn.call(null, arg1, arg2);
    });
  case 4:
    return process.nextTick(function afterTickThree() {
      fn.call(null, arg1, arg2, arg3);
    });
  default:
    args = new Array(len - 1);
    i = 0;
    while (i < args.length) {
      args[i++] = arguments[i];
    }
    return process.nextTick(function afterTick() {
      fn.apply(null, args);
    });
  }
}


/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/process/browser.js":
/*!*****************************************!*\
  !*** ./node_modules/process/browser.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

// shim for using process in browser
var process = module.exports = {};

// cached from whatever global is present so that test runners that stub it
// don't break things.  But we need to wrap it in a try catch in case it is
// wrapped in strict mode code which doesn't define any globals.  It's inside a
// function because try/catches deoptimize in certain engines.

var cachedSetTimeout;
var cachedClearTimeout;

function defaultSetTimout() {
    throw new Error('setTimeout has not been defined');
}
function defaultClearTimeout () {
    throw new Error('clearTimeout has not been defined');
}
(function () {
    try {
        if (typeof setTimeout === 'function') {
            cachedSetTimeout = setTimeout;
        } else {
            cachedSetTimeout = defaultSetTimout;
        }
    } catch (e) {
        cachedSetTimeout = defaultSetTimout;
    }
    try {
        if (typeof clearTimeout === 'function') {
            cachedClearTimeout = clearTimeout;
        } else {
            cachedClearTimeout = defaultClearTimeout;
        }
    } catch (e) {
        cachedClearTimeout = defaultClearTimeout;
    }
} ())
function runTimeout(fun) {
    if (cachedSetTimeout === setTimeout) {
        //normal enviroments in sane situations
        return setTimeout(fun, 0);
    }
    // if setTimeout wasn't available but was latter defined
    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {
        cachedSetTimeout = setTimeout;
        return setTimeout(fun, 0);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedSetTimeout(fun, 0);
    } catch(e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally
            return cachedSetTimeout.call(null, fun, 0);
        } catch(e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error
            return cachedSetTimeout.call(this, fun, 0);
        }
    }


}
function runClearTimeout(marker) {
    if (cachedClearTimeout === clearTimeout) {
        //normal enviroments in sane situations
        return clearTimeout(marker);
    }
    // if clearTimeout wasn't available but was latter defined
    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {
        cachedClearTimeout = clearTimeout;
        return clearTimeout(marker);
    }
    try {
        // when when somebody has screwed with setTimeout but no I.E. maddness
        return cachedClearTimeout(marker);
    } catch (e){
        try {
            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally
            return cachedClearTimeout.call(null, marker);
        } catch (e){
            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.
            // Some versions of I.E. have different rules for clearTimeout vs setTimeout
            return cachedClearTimeout.call(this, marker);
        }
    }



}
var queue = [];
var draining = false;
var currentQueue;
var queueIndex = -1;

function cleanUpNextTick() {
    if (!draining || !currentQueue) {
        return;
    }
    draining = false;
    if (currentQueue.length) {
        queue = currentQueue.concat(queue);
    } else {
        queueIndex = -1;
    }
    if (queue.length) {
        drainQueue();
    }
}

function drainQueue() {
    if (draining) {
        return;
    }
    var timeout = runTimeout(cleanUpNextTick);
    draining = true;

    var len = queue.length;
    while(len) {
        currentQueue = queue;
        queue = [];
        while (++queueIndex < len) {
            if (currentQueue) {
                currentQueue[queueIndex].run();
            }
        }
        queueIndex = -1;
        len = queue.length;
    }
    currentQueue = null;
    draining = false;
    runClearTimeout(timeout);
}

process.nextTick = function (fun) {
    var args = new Array(arguments.length - 1);
    if (arguments.length > 1) {
        for (var i = 1; i < arguments.length; i++) {
            args[i - 1] = arguments[i];
        }
    }
    queue.push(new Item(fun, args));
    if (queue.length === 1 && !draining) {
        runTimeout(drainQueue);
    }
};

// v8 likes predictible objects
function Item(fun, array) {
    this.fun = fun;
    this.array = array;
}
Item.prototype.run = function () {
    this.fun.apply(null, this.array);
};
process.title = 'browser';
process.browser = true;
process.env = {};
process.argv = [];
process.version = ''; // empty string to avoid regexp issues
process.versions = {};

function noop() {}

process.on = noop;
process.addListener = noop;
process.once = noop;
process.off = noop;
process.removeListener = noop;
process.removeAllListeners = noop;
process.emit = noop;
process.prependListener = noop;
process.prependOnceListener = noop;

process.listeners = function (name) { return [] }

process.binding = function (name) {
    throw new Error('process.binding is not supported');
};

process.cwd = function () { return '/' };
process.chdir = function (dir) {
    throw new Error('process.chdir is not supported');
};
process.umask = function() { return 0; };


/***/ }),

/***/ "./node_modules/public-encrypt/browser.js":
/*!************************************************!*\
  !*** ./node_modules/public-encrypt/browser.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports.publicEncrypt = __webpack_require__(/*! ./publicEncrypt */ "./node_modules/public-encrypt/publicEncrypt.js");
exports.privateDecrypt = __webpack_require__(/*! ./privateDecrypt */ "./node_modules/public-encrypt/privateDecrypt.js");

exports.privateEncrypt = function privateEncrypt(key, buf) {
  return exports.publicEncrypt(key, buf, true);
};

exports.publicDecrypt = function publicDecrypt(key, buf) {
  return exports.privateDecrypt(key, buf, true);
};

/***/ }),

/***/ "./node_modules/public-encrypt/mgf.js":
/*!********************************************!*\
  !*** ./node_modules/public-encrypt/mgf.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var createHash = __webpack_require__(/*! create-hash */ "./node_modules/create-hash/browser.js");
module.exports = function (seed, len) {
  var t = new Buffer('');
  var  i = 0, c;
  while (t.length < len) {
    c = i2ops(i++);
    t = Buffer.concat([t, createHash('sha1').update(seed).update(c).digest()]);
  }
  return t.slice(0, len);
};

function i2ops(c) {
  var out = new Buffer(4);
  out.writeUInt32BE(c,0);
  return out;
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/public-encrypt/privateDecrypt.js":
/*!*******************************************************!*\
  !*** ./node_modules/public-encrypt/privateDecrypt.js ***!
  \*******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var parseKeys = __webpack_require__(/*! parse-asn1 */ "./node_modules/parse-asn1/index.js");
var mgf = __webpack_require__(/*! ./mgf */ "./node_modules/public-encrypt/mgf.js");
var xor = __webpack_require__(/*! ./xor */ "./node_modules/public-encrypt/xor.js");
var bn = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var crt = __webpack_require__(/*! browserify-rsa */ "./node_modules/browserify-rsa/index.js");
var createHash = __webpack_require__(/*! create-hash */ "./node_modules/create-hash/browser.js");
var withPublic = __webpack_require__(/*! ./withPublic */ "./node_modules/public-encrypt/withPublic.js");
module.exports = function privateDecrypt(private_key, enc, reverse) {
  var padding;
  if (private_key.padding) {
    padding = private_key.padding;
  } else if (reverse) {
    padding = 1;
  } else {
    padding = 4;
  }
  
  var key = parseKeys(private_key);
  var k = key.modulus.byteLength();
  if (enc.length > k || new bn(enc).cmp(key.modulus) >= 0) {
    throw new Error('decryption error');
  }
  var msg;
  if (reverse) {
    msg = withPublic(new bn(enc), key);
  } else {
    msg = crt(enc, key);
  }
  var zBuffer = new Buffer(k - msg.length);
  zBuffer.fill(0);
  msg = Buffer.concat([zBuffer, msg], k);
  if (padding === 4) {
    return oaep(key, msg);
  } else if (padding === 1) {
    return pkcs1(key, msg, reverse);
  } else if (padding === 3) {
    return msg;
  } else {
    throw new Error('unknown padding');
  }
};

function oaep(key, msg){
  var n = key.modulus;
  var k = key.modulus.byteLength();
  var mLen = msg.length;
  var iHash = createHash('sha1').update(new Buffer('')).digest();
  var hLen = iHash.length;
  var hLen2 = 2 * hLen;
  if (msg[0] !== 0) {
    throw new Error('decryption error');
  }
  var maskedSeed = msg.slice(1, hLen + 1);
  var maskedDb =  msg.slice(hLen + 1);
  var seed = xor(maskedSeed, mgf(maskedDb, hLen));
  var db = xor(maskedDb, mgf(seed, k - hLen - 1));
  if (compare(iHash, db.slice(0, hLen))) {
    throw new Error('decryption error');
  }
  var i = hLen;
  while (db[i] === 0) {
    i++;
  }
  if (db[i++] !== 1) {
    throw new Error('decryption error');
  }
  return db.slice(i);
}

function pkcs1(key, msg, reverse){
  var p1 = msg.slice(0, 2);
  var i = 2;
  var status = 0;
  while (msg[i++] !== 0) {
    if (i >= msg.length) {
      status++;
      break;
    }
  }
  var ps = msg.slice(2, i - 1);
  var p2 = msg.slice(i - 1, i);

  if ((p1.toString('hex') !== '0002' && !reverse) || (p1.toString('hex') !== '0001' && reverse)){
    status++;
  }
  if (ps.length < 8) {
    status++;
  }
  if (status) {
    throw new Error('decryption error');
  }
  return  msg.slice(i);
}
function compare(a, b){
  a = new Buffer(a);
  b = new Buffer(b);
  var dif = 0;
  var len = a.length;
  if (a.length !== b.length) {
    dif++;
    len = Math.min(a.length, b.length);
  }
  var i = -1;
  while (++i < len) {
    dif += (a[i] ^ b[i]);
  }
  return dif;
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/public-encrypt/publicEncrypt.js":
/*!******************************************************!*\
  !*** ./node_modules/public-encrypt/publicEncrypt.js ***!
  \******************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var parseKeys = __webpack_require__(/*! parse-asn1 */ "./node_modules/parse-asn1/index.js");
var randomBytes = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js");
var createHash = __webpack_require__(/*! create-hash */ "./node_modules/create-hash/browser.js");
var mgf = __webpack_require__(/*! ./mgf */ "./node_modules/public-encrypt/mgf.js");
var xor = __webpack_require__(/*! ./xor */ "./node_modules/public-encrypt/xor.js");
var bn = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
var withPublic = __webpack_require__(/*! ./withPublic */ "./node_modules/public-encrypt/withPublic.js");
var crt = __webpack_require__(/*! browserify-rsa */ "./node_modules/browserify-rsa/index.js");

var constants = {
  RSA_PKCS1_OAEP_PADDING: 4,
  RSA_PKCS1_PADDIN: 1,
  RSA_NO_PADDING: 3
};

module.exports = function publicEncrypt(public_key, msg, reverse) {
  var padding;
  if (public_key.padding) {
    padding = public_key.padding;
  } else if (reverse) {
    padding = 1;
  } else {
    padding = 4;
  }
  var key = parseKeys(public_key);
  var paddedMsg;
  if (padding === 4) {
    paddedMsg = oaep(key, msg);
  } else if (padding === 1) {
    paddedMsg = pkcs1(key, msg, reverse);
  } else if (padding === 3) {
    paddedMsg = new bn(msg);
    if (paddedMsg.cmp(key.modulus) >= 0) {
      throw new Error('data too long for modulus');
    }
  } else {
    throw new Error('unknown padding');
  }
  if (reverse) {
    return crt(paddedMsg, key);
  } else {
    return withPublic(paddedMsg, key);
  }
};

function oaep(key, msg){
  var k = key.modulus.byteLength();
  var mLen = msg.length;
  var iHash = createHash('sha1').update(new Buffer('')).digest();
  var hLen = iHash.length;
  var hLen2 = 2 * hLen;
  if (mLen > k - hLen2 - 2) {
    throw new Error('message too long');
  }
  var ps = new Buffer(k - mLen - hLen2 - 2);
  ps.fill(0);
  var dblen = k - hLen - 1;
  var seed = randomBytes(hLen);
  var maskedDb = xor(Buffer.concat([iHash, ps, new Buffer([1]), msg], dblen), mgf(seed, dblen));
  var maskedSeed = xor(seed, mgf(maskedDb, hLen));
  return new bn(Buffer.concat([new Buffer([0]), maskedSeed, maskedDb], k));
}
function pkcs1(key, msg, reverse){
  var mLen = msg.length;
  var k = key.modulus.byteLength();
  if (mLen > k - 11) {
    throw new Error('message too long');
  }
  var ps;
  if (reverse) {
    ps = new Buffer(k - mLen - 3);
    ps.fill(0xff);
  } else {
    ps = nonZero(k - mLen - 3);
  }
  return new bn(Buffer.concat([new Buffer([0, reverse?1:2]), ps, new Buffer([0]), msg], k));
}
function nonZero(len, crypto) {
  var out = new Buffer(len);
  var i = 0;
  var cache = randomBytes(len*2);
  var cur = 0;
  var num;
  while (i < len) {
    if (cur === cache.length) {
      cache = randomBytes(len*2);
      cur = 0;
    }
    num = cache[cur++];
    if (num) {
      out[i++] = num;
    }
  }
  return out;
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/public-encrypt/withPublic.js":
/*!***************************************************!*\
  !*** ./node_modules/public-encrypt/withPublic.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(Buffer) {var bn = __webpack_require__(/*! bn.js */ "./node_modules/bn.js/lib/bn.js");
function withPublic(paddedMsg, key) {
  return new Buffer(paddedMsg
    .toRed(bn.mont(key.modulus))
    .redPow(new bn(key.publicExponent))
    .fromRed()
    .toArray());
}

module.exports = withPublic;
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./node_modules/public-encrypt/xor.js":
/*!********************************************!*\
  !*** ./node_modules/public-encrypt/xor.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function xor(a, b) {
  var len = a.length;
  var i = -1;
  while (++i < len) {
    a[i] ^= b[i];
  }
  return a
};

/***/ }),

/***/ "./node_modules/randombytes/browser.js":
/*!*********************************************!*\
  !*** ./node_modules/randombytes/browser.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, process) {

function oldBrowser () {
  throw new Error('Secure random number generation is not supported by this browser.\nUse Chrome, Firefox or Internet Explorer 11')
}

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer
var crypto = global.crypto || global.msCrypto

if (crypto && crypto.getRandomValues) {
  module.exports = randomBytes
} else {
  module.exports = oldBrowser
}

function randomBytes (size, cb) {
  // phantomjs needs to throw
  if (size > 65536) throw new Error('requested too many random bytes')
  // in case browserify  isn't using the Uint8Array version
  var rawBytes = new global.Uint8Array(size)

  // This will not work in older browsers.
  // See https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues
  if (size > 0) {  // getRandomValues fails on IE if size == 0
    crypto.getRandomValues(rawBytes)
  }

  // XXX: phantomjs doesn't like a buffer being passed here
  var bytes = Buffer.from(rawBytes.buffer)

  if (typeof cb === 'function') {
    return process.nextTick(function () {
      cb(null, bytes)
    })
  }

  return bytes
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/randomfill/browser.js":
/*!********************************************!*\
  !*** ./node_modules/randomfill/browser.js ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, process) {

function oldBrowser () {
  throw new Error('secure random number generation not supported by this browser\nuse chrome, FireFox or Internet Explorer 11')
}
var safeBuffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js")
var randombytes = __webpack_require__(/*! randombytes */ "./node_modules/randombytes/browser.js")
var Buffer = safeBuffer.Buffer
var kBufferMaxLength = safeBuffer.kMaxLength
var crypto = global.crypto || global.msCrypto
var kMaxUint32 = Math.pow(2, 32) - 1
function assertOffset (offset, length) {
  if (typeof offset !== 'number' || offset !== offset) { // eslint-disable-line no-self-compare
    throw new TypeError('offset must be a number')
  }

  if (offset > kMaxUint32 || offset < 0) {
    throw new TypeError('offset must be a uint32')
  }

  if (offset > kBufferMaxLength || offset > length) {
    throw new RangeError('offset out of range')
  }
}

function assertSize (size, offset, length) {
  if (typeof size !== 'number' || size !== size) { // eslint-disable-line no-self-compare
    throw new TypeError('size must be a number')
  }

  if (size > kMaxUint32 || size < 0) {
    throw new TypeError('size must be a uint32')
  }

  if (size + offset > length || size > kBufferMaxLength) {
    throw new RangeError('buffer too small')
  }
}
if ((crypto && crypto.getRandomValues) || !process.browser) {
  exports.randomFill = randomFill
  exports.randomFillSync = randomFillSync
} else {
  exports.randomFill = oldBrowser
  exports.randomFillSync = oldBrowser
}
function randomFill (buf, offset, size, cb) {
  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  if (typeof offset === 'function') {
    cb = offset
    offset = 0
    size = buf.length
  } else if (typeof size === 'function') {
    cb = size
    size = buf.length - offset
  } else if (typeof cb !== 'function') {
    throw new TypeError('"cb" argument must be a function')
  }
  assertOffset(offset, buf.length)
  assertSize(size, offset, buf.length)
  return actualFill(buf, offset, size, cb)
}

function actualFill (buf, offset, size, cb) {
  if (process.browser) {
    var ourBuf = buf.buffer
    var uint = new Uint8Array(ourBuf, offset, size)
    crypto.getRandomValues(uint)
    if (cb) {
      process.nextTick(function () {
        cb(null, buf)
      })
      return
    }
    return buf
  }
  if (cb) {
    randombytes(size, function (err, bytes) {
      if (err) {
        return cb(err)
      }
      bytes.copy(buf, offset)
      cb(null, buf)
    })
    return
  }
  var bytes = randombytes(size)
  bytes.copy(buf, offset)
  return buf
}
function randomFillSync (buf, offset, size) {
  if (typeof offset === 'undefined') {
    offset = 0
  }
  if (!Buffer.isBuffer(buf) && !(buf instanceof global.Uint8Array)) {
    throw new TypeError('"buf" argument must be a Buffer or Uint8Array')
  }

  assertOffset(offset, buf.length)

  if (size === undefined) size = buf.length - offset

  assertSize(size, offset, buf.length)

  return actualFill(buf, offset, size)
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/ripemd160/index.js":
/*!*****************************************!*\
  !*** ./node_modules/ripemd160/index.js ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";

var Buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js").Buffer
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var HashBase = __webpack_require__(/*! hash-base */ "./node_modules/hash-base/index.js")

var ARRAY16 = new Array(16)

var zl = [
  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,
  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,
  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,
  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,
  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13
]

var zr = [
  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,
  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,
  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,
  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,
  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11
]

var sl = [
  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,
  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,
  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,
  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,
  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6
]

var sr = [
  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,
  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,
  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,
  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,
  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11
]

var hl = [0x00000000, 0x5a827999, 0x6ed9eba1, 0x8f1bbcdc, 0xa953fd4e]
var hr = [0x50a28be6, 0x5c4dd124, 0x6d703ef3, 0x7a6d76e9, 0x00000000]

function RIPEMD160 () {
  HashBase.call(this, 64)

  // state
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0
}

inherits(RIPEMD160, HashBase)

RIPEMD160.prototype._update = function () {
  var words = ARRAY16
  for (var j = 0; j < 16; ++j) words[j] = this._block.readInt32LE(j * 4)

  var al = this._a | 0
  var bl = this._b | 0
  var cl = this._c | 0
  var dl = this._d | 0
  var el = this._e | 0

  var ar = this._a | 0
  var br = this._b | 0
  var cr = this._c | 0
  var dr = this._d | 0
  var er = this._e | 0

  // computation
  for (var i = 0; i < 80; i += 1) {
    var tl
    var tr
    if (i < 16) {
      tl = fn1(al, bl, cl, dl, el, words[zl[i]], hl[0], sl[i])
      tr = fn5(ar, br, cr, dr, er, words[zr[i]], hr[0], sr[i])
    } else if (i < 32) {
      tl = fn2(al, bl, cl, dl, el, words[zl[i]], hl[1], sl[i])
      tr = fn4(ar, br, cr, dr, er, words[zr[i]], hr[1], sr[i])
    } else if (i < 48) {
      tl = fn3(al, bl, cl, dl, el, words[zl[i]], hl[2], sl[i])
      tr = fn3(ar, br, cr, dr, er, words[zr[i]], hr[2], sr[i])
    } else if (i < 64) {
      tl = fn4(al, bl, cl, dl, el, words[zl[i]], hl[3], sl[i])
      tr = fn2(ar, br, cr, dr, er, words[zr[i]], hr[3], sr[i])
    } else { // if (i<80) {
      tl = fn5(al, bl, cl, dl, el, words[zl[i]], hl[4], sl[i])
      tr = fn1(ar, br, cr, dr, er, words[zr[i]], hr[4], sr[i])
    }

    al = el
    el = dl
    dl = rotl(cl, 10)
    cl = bl
    bl = tl

    ar = er
    er = dr
    dr = rotl(cr, 10)
    cr = br
    br = tr
  }

  // update state
  var t = (this._b + cl + dr) | 0
  this._b = (this._c + dl + er) | 0
  this._c = (this._d + el + ar) | 0
  this._d = (this._e + al + br) | 0
  this._e = (this._a + bl + cr) | 0
  this._a = t
}

RIPEMD160.prototype._digest = function () {
  // create padding and handle blocks
  this._block[this._blockOffset++] = 0x80
  if (this._blockOffset > 56) {
    this._block.fill(0, this._blockOffset, 64)
    this._update()
    this._blockOffset = 0
  }

  this._block.fill(0, this._blockOffset, 56)
  this._block.writeUInt32LE(this._length[0], 56)
  this._block.writeUInt32LE(this._length[1], 60)
  this._update()

  // produce result
  var buffer = Buffer.alloc ? Buffer.alloc(20) : new Buffer(20)
  buffer.writeInt32LE(this._a, 0)
  buffer.writeInt32LE(this._b, 4)
  buffer.writeInt32LE(this._c, 8)
  buffer.writeInt32LE(this._d, 12)
  buffer.writeInt32LE(this._e, 16)
  return buffer
}

function rotl (x, n) {
  return (x << n) | (x >>> (32 - n))
}

function fn1 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ c ^ d) + m + k) | 0, s) + e) | 0
}

function fn2 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & c) | ((~b) & d)) + m + k) | 0, s) + e) | 0
}

function fn3 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b | (~c)) ^ d) + m + k) | 0, s) + e) | 0
}

function fn4 (a, b, c, d, e, m, k, s) {
  return (rotl((a + ((b & d) | (c & (~d))) + m + k) | 0, s) + e) | 0
}

function fn5 (a, b, c, d, e, m, k, s) {
  return (rotl((a + (b ^ (c | (~d))) + m + k) | 0, s) + e) | 0
}

module.exports = RIPEMD160


/***/ }),

/***/ "./node_modules/safe-buffer/index.js":
/*!*******************************************!*\
  !*** ./node_modules/safe-buffer/index.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* eslint-disable node/no-deprecated-api */
var buffer = __webpack_require__(/*! buffer */ "./node_modules/buffer/index.js")
var Buffer = buffer.Buffer

// alternative to using Object.keys for old browsers
function copyProps (src, dst) {
  for (var key in src) {
    dst[key] = src[key]
  }
}
if (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {
  module.exports = buffer
} else {
  // Copy properties from require('buffer')
  copyProps(buffer, exports)
  exports.Buffer = SafeBuffer
}

function SafeBuffer (arg, encodingOrOffset, length) {
  return Buffer(arg, encodingOrOffset, length)
}

// Copy static methods from Buffer
copyProps(Buffer, SafeBuffer)

SafeBuffer.from = function (arg, encodingOrOffset, length) {
  if (typeof arg === 'number') {
    throw new TypeError('Argument must not be a number')
  }
  return Buffer(arg, encodingOrOffset, length)
}

SafeBuffer.alloc = function (size, fill, encoding) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  var buf = Buffer(size)
  if (fill !== undefined) {
    if (typeof encoding === 'string') {
      buf.fill(fill, encoding)
    } else {
      buf.fill(fill)
    }
  } else {
    buf.fill(0)
  }
  return buf
}

SafeBuffer.allocUnsafe = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return Buffer(size)
}

SafeBuffer.allocUnsafeSlow = function (size) {
  if (typeof size !== 'number') {
    throw new TypeError('Argument must be a number')
  }
  return buffer.SlowBuffer(size)
}


/***/ }),

/***/ "./node_modules/setimmediate/setImmediate.js":
/*!***************************************************!*\
  !*** ./node_modules/setimmediate/setImmediate.js ***!
  \***************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {
    "use strict";

    if (global.setImmediate) {
        return;
    }

    var nextHandle = 1; // Spec says greater than zero
    var tasksByHandle = {};
    var currentlyRunningATask = false;
    var doc = global.document;
    var registerImmediate;

    function setImmediate(callback) {
      // Callback can either be a function or a string
      if (typeof callback !== "function") {
        callback = new Function("" + callback);
      }
      // Copy function arguments
      var args = new Array(arguments.length - 1);
      for (var i = 0; i < args.length; i++) {
          args[i] = arguments[i + 1];
      }
      // Store and register the task
      var task = { callback: callback, args: args };
      tasksByHandle[nextHandle] = task;
      registerImmediate(nextHandle);
      return nextHandle++;
    }

    function clearImmediate(handle) {
        delete tasksByHandle[handle];
    }

    function run(task) {
        var callback = task.callback;
        var args = task.args;
        switch (args.length) {
        case 0:
            callback();
            break;
        case 1:
            callback(args[0]);
            break;
        case 2:
            callback(args[0], args[1]);
            break;
        case 3:
            callback(args[0], args[1], args[2]);
            break;
        default:
            callback.apply(undefined, args);
            break;
        }
    }

    function runIfPresent(handle) {
        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."
        // So if we're currently running a task, we'll need to delay this invocation.
        if (currentlyRunningATask) {
            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a
            // "too much recursion" error.
            setTimeout(runIfPresent, 0, handle);
        } else {
            var task = tasksByHandle[handle];
            if (task) {
                currentlyRunningATask = true;
                try {
                    run(task);
                } finally {
                    clearImmediate(handle);
                    currentlyRunningATask = false;
                }
            }
        }
    }

    function installNextTickImplementation() {
        registerImmediate = function(handle) {
            process.nextTick(function () { runIfPresent(handle); });
        };
    }

    function canUsePostMessage() {
        // The test against `importScripts` prevents this implementation from being installed inside a web worker,
        // where `global.postMessage` means something completely different and can't be used for this purpose.
        if (global.postMessage && !global.importScripts) {
            var postMessageIsAsynchronous = true;
            var oldOnMessage = global.onmessage;
            global.onmessage = function() {
                postMessageIsAsynchronous = false;
            };
            global.postMessage("", "*");
            global.onmessage = oldOnMessage;
            return postMessageIsAsynchronous;
        }
    }

    function installPostMessageImplementation() {
        // Installs an event handler on `global` for the `message` event: see
        // * https://developer.mozilla.org/en/DOM/window.postMessage
        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages

        var messagePrefix = "setImmediate$" + Math.random() + "$";
        var onGlobalMessage = function(event) {
            if (event.source === global &&
                typeof event.data === "string" &&
                event.data.indexOf(messagePrefix) === 0) {
                runIfPresent(+event.data.slice(messagePrefix.length));
            }
        };

        if (global.addEventListener) {
            global.addEventListener("message", onGlobalMessage, false);
        } else {
            global.attachEvent("onmessage", onGlobalMessage);
        }

        registerImmediate = function(handle) {
            global.postMessage(messagePrefix + handle, "*");
        };
    }

    function installMessageChannelImplementation() {
        var channel = new MessageChannel();
        channel.port1.onmessage = function(event) {
            var handle = event.data;
            runIfPresent(handle);
        };

        registerImmediate = function(handle) {
            channel.port2.postMessage(handle);
        };
    }

    function installReadyStateChangeImplementation() {
        var html = doc.documentElement;
        registerImmediate = function(handle) {
            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted
            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.
            var script = doc.createElement("script");
            script.onreadystatechange = function () {
                runIfPresent(handle);
                script.onreadystatechange = null;
                html.removeChild(script);
                script = null;
            };
            html.appendChild(script);
        };
    }

    function installSetTimeoutImplementation() {
        registerImmediate = function(handle) {
            setTimeout(runIfPresent, 0, handle);
        };
    }

    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.
    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);
    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;

    // Don't get fooled by e.g. browserify environments.
    if ({}.toString.call(global.process) === "[object process]") {
        // For Node.js before 0.9
        installNextTickImplementation();

    } else if (canUsePostMessage()) {
        // For non-IE10 modern browsers
        installPostMessageImplementation();

    } else if (global.MessageChannel) {
        // For web workers, where supported
        installMessageChannelImplementation();

    } else if (doc && "onreadystatechange" in doc.createElement("script")) {
        // For IE 6–8
        installReadyStateChangeImplementation();

    } else {
        // For older browsers
        installSetTimeoutImplementation();
    }

    attachTo.setImmediate = setImmediate;
    attachTo.clearImmediate = clearImmediate;
}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/sha.js/hash.js":
/*!*************************************!*\
  !*** ./node_modules/sha.js/hash.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

// prototype class for hash functions
function Hash (blockSize, finalSize) {
  this._block = Buffer.alloc(blockSize)
  this._finalSize = finalSize
  this._blockSize = blockSize
  this._len = 0
}

Hash.prototype.update = function (data, enc) {
  if (typeof data === 'string') {
    enc = enc || 'utf8'
    data = Buffer.from(data, enc)
  }

  var block = this._block
  var blockSize = this._blockSize
  var length = data.length
  var accum = this._len

  for (var offset = 0; offset < length;) {
    var assigned = accum % blockSize
    var remainder = Math.min(length - offset, blockSize - assigned)

    for (var i = 0; i < remainder; i++) {
      block[assigned + i] = data[offset + i]
    }

    accum += remainder
    offset += remainder

    if ((accum % blockSize) === 0) {
      this._update(block)
    }
  }

  this._len += length
  return this
}

Hash.prototype.digest = function (enc) {
  var rem = this._len % this._blockSize

  this._block[rem] = 0x80

  // zero (rem + 1) trailing bits, where (rem + 1) is the smallest
  // non-negative solution to the equation (length + 1 + (rem + 1)) === finalSize mod blockSize
  this._block.fill(0, rem + 1)

  if (rem >= this._finalSize) {
    this._update(this._block)
    this._block.fill(0)
  }

  var bits = this._len * 8

  // uint32
  if (bits <= 0xffffffff) {
    this._block.writeUInt32BE(bits, this._blockSize - 4)

  // uint64
  } else {
    var lowBits = (bits & 0xffffffff) >>> 0
    var highBits = (bits - lowBits) / 0x100000000

    this._block.writeUInt32BE(highBits, this._blockSize - 8)
    this._block.writeUInt32BE(lowBits, this._blockSize - 4)
  }

  this._update(this._block)
  var hash = this._hash()

  return enc ? hash.toString(enc) : hash
}

Hash.prototype._update = function () {
  throw new Error('_update must be implemented by subclass')
}

module.exports = Hash


/***/ }),

/***/ "./node_modules/sha.js/index.js":
/*!**************************************!*\
  !*** ./node_modules/sha.js/index.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var exports = module.exports = function SHA (algorithm) {
  algorithm = algorithm.toLowerCase()

  var Algorithm = exports[algorithm]
  if (!Algorithm) throw new Error(algorithm + ' is not supported (we accept pull requests)')

  return new Algorithm()
}

exports.sha = __webpack_require__(/*! ./sha */ "./node_modules/sha.js/sha.js")
exports.sha1 = __webpack_require__(/*! ./sha1 */ "./node_modules/sha.js/sha1.js")
exports.sha224 = __webpack_require__(/*! ./sha224 */ "./node_modules/sha.js/sha224.js")
exports.sha256 = __webpack_require__(/*! ./sha256 */ "./node_modules/sha.js/sha256.js")
exports.sha384 = __webpack_require__(/*! ./sha384 */ "./node_modules/sha.js/sha384.js")
exports.sha512 = __webpack_require__(/*! ./sha512 */ "./node_modules/sha.js/sha512.js")


/***/ }),

/***/ "./node_modules/sha.js/sha.js":
/*!************************************!*\
  !*** ./node_modules/sha.js/sha.js ***!
  \************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-0, as defined
 * in FIPS PUB 180-1
 * This source code is derived from sha1.js of the same repository.
 * The difference between SHA-0 and SHA-1 is just a bitwise rotate left
 * operation was added.
 */

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha, Hash)

Sha.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16]

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha


/***/ }),

/***/ "./node_modules/sha.js/sha1.js":
/*!*************************************!*\
  !*** ./node_modules/sha.js/sha1.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined
 * in FIPS PUB 180-1
 * Version 2.1a Copyright Paul Johnston 2000 - 2002.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 * Distributed under the BSD License
 * See http://pajhome.org.uk/crypt/md5 for details.
 */

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var K = [
  0x5a827999, 0x6ed9eba1, 0x8f1bbcdc | 0, 0xca62c1d6 | 0
]

var W = new Array(80)

function Sha1 () {
  this.init()
  this._w = W

  Hash.call(this, 64, 56)
}

inherits(Sha1, Hash)

Sha1.prototype.init = function () {
  this._a = 0x67452301
  this._b = 0xefcdab89
  this._c = 0x98badcfe
  this._d = 0x10325476
  this._e = 0xc3d2e1f0

  return this
}

function rotl1 (num) {
  return (num << 1) | (num >>> 31)
}

function rotl5 (num) {
  return (num << 5) | (num >>> 27)
}

function rotl30 (num) {
  return (num << 30) | (num >>> 2)
}

function ft (s, b, c, d) {
  if (s === 0) return (b & c) | ((~b) & d)
  if (s === 2) return (b & c) | (b & d) | (c & d)
  return b ^ c ^ d
}

Sha1.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 80; ++i) W[i] = rotl1(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16])

  for (var j = 0; j < 80; ++j) {
    var s = ~~(j / 20)
    var t = (rotl5(a) + ft(s, b, c, d) + e + W[j] + K[s]) | 0

    e = d
    d = c
    c = rotl30(b)
    b = a
    a = t
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
}

Sha1.prototype._hash = function () {
  var H = Buffer.allocUnsafe(20)

  H.writeInt32BE(this._a | 0, 0)
  H.writeInt32BE(this._b | 0, 4)
  H.writeInt32BE(this._c | 0, 8)
  H.writeInt32BE(this._d | 0, 12)
  H.writeInt32BE(this._e | 0, 16)

  return H
}

module.exports = Sha1


/***/ }),

/***/ "./node_modules/sha.js/sha224.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha224.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Sha256 = __webpack_require__(/*! ./sha256 */ "./node_modules/sha.js/sha256.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var W = new Array(64)

function Sha224 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha224, Sha256)

Sha224.prototype.init = function () {
  this._a = 0xc1059ed8
  this._b = 0x367cd507
  this._c = 0x3070dd17
  this._d = 0xf70e5939
  this._e = 0xffc00b31
  this._f = 0x68581511
  this._g = 0x64f98fa7
  this._h = 0xbefa4fa4

  return this
}

Sha224.prototype._hash = function () {
  var H = Buffer.allocUnsafe(28)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)

  return H
}

module.exports = Sha224


/***/ }),

/***/ "./node_modules/sha.js/sha256.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha256.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * A JavaScript implementation of the Secure Hash Algorithm, SHA-256, as defined
 * in FIPS 180-2
 * Version 2.2-beta Copyright Angel Marin, Paul Johnston 2000 - 2009.
 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
 *
 */

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var K = [
  0x428A2F98, 0x71374491, 0xB5C0FBCF, 0xE9B5DBA5,
  0x3956C25B, 0x59F111F1, 0x923F82A4, 0xAB1C5ED5,
  0xD807AA98, 0x12835B01, 0x243185BE, 0x550C7DC3,
  0x72BE5D74, 0x80DEB1FE, 0x9BDC06A7, 0xC19BF174,
  0xE49B69C1, 0xEFBE4786, 0x0FC19DC6, 0x240CA1CC,
  0x2DE92C6F, 0x4A7484AA, 0x5CB0A9DC, 0x76F988DA,
  0x983E5152, 0xA831C66D, 0xB00327C8, 0xBF597FC7,
  0xC6E00BF3, 0xD5A79147, 0x06CA6351, 0x14292967,
  0x27B70A85, 0x2E1B2138, 0x4D2C6DFC, 0x53380D13,
  0x650A7354, 0x766A0ABB, 0x81C2C92E, 0x92722C85,
  0xA2BFE8A1, 0xA81A664B, 0xC24B8B70, 0xC76C51A3,
  0xD192E819, 0xD6990624, 0xF40E3585, 0x106AA070,
  0x19A4C116, 0x1E376C08, 0x2748774C, 0x34B0BCB5,
  0x391C0CB3, 0x4ED8AA4A, 0x5B9CCA4F, 0x682E6FF3,
  0x748F82EE, 0x78A5636F, 0x84C87814, 0x8CC70208,
  0x90BEFFFA, 0xA4506CEB, 0xBEF9A3F7, 0xC67178F2
]

var W = new Array(64)

function Sha256 () {
  this.init()

  this._w = W // new Array(64)

  Hash.call(this, 64, 56)
}

inherits(Sha256, Hash)

Sha256.prototype.init = function () {
  this._a = 0x6a09e667
  this._b = 0xbb67ae85
  this._c = 0x3c6ef372
  this._d = 0xa54ff53a
  this._e = 0x510e527f
  this._f = 0x9b05688c
  this._g = 0x1f83d9ab
  this._h = 0x5be0cd19

  return this
}

function ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x) {
  return (x >>> 2 | x << 30) ^ (x >>> 13 | x << 19) ^ (x >>> 22 | x << 10)
}

function sigma1 (x) {
  return (x >>> 6 | x << 26) ^ (x >>> 11 | x << 21) ^ (x >>> 25 | x << 7)
}

function gamma0 (x) {
  return (x >>> 7 | x << 25) ^ (x >>> 18 | x << 14) ^ (x >>> 3)
}

function gamma1 (x) {
  return (x >>> 17 | x << 15) ^ (x >>> 19 | x << 13) ^ (x >>> 10)
}

Sha256.prototype._update = function (M) {
  var W = this._w

  var a = this._a | 0
  var b = this._b | 0
  var c = this._c | 0
  var d = this._d | 0
  var e = this._e | 0
  var f = this._f | 0
  var g = this._g | 0
  var h = this._h | 0

  for (var i = 0; i < 16; ++i) W[i] = M.readInt32BE(i * 4)
  for (; i < 64; ++i) W[i] = (gamma1(W[i - 2]) + W[i - 7] + gamma0(W[i - 15]) + W[i - 16]) | 0

  for (var j = 0; j < 64; ++j) {
    var T1 = (h + sigma1(e) + ch(e, f, g) + K[j] + W[j]) | 0
    var T2 = (sigma0(a) + maj(a, b, c)) | 0

    h = g
    g = f
    f = e
    e = (d + T1) | 0
    d = c
    c = b
    b = a
    a = (T1 + T2) | 0
  }

  this._a = (a + this._a) | 0
  this._b = (b + this._b) | 0
  this._c = (c + this._c) | 0
  this._d = (d + this._d) | 0
  this._e = (e + this._e) | 0
  this._f = (f + this._f) | 0
  this._g = (g + this._g) | 0
  this._h = (h + this._h) | 0
}

Sha256.prototype._hash = function () {
  var H = Buffer.allocUnsafe(32)

  H.writeInt32BE(this._a, 0)
  H.writeInt32BE(this._b, 4)
  H.writeInt32BE(this._c, 8)
  H.writeInt32BE(this._d, 12)
  H.writeInt32BE(this._e, 16)
  H.writeInt32BE(this._f, 20)
  H.writeInt32BE(this._g, 24)
  H.writeInt32BE(this._h, 28)

  return H
}

module.exports = Sha256


/***/ }),

/***/ "./node_modules/sha.js/sha384.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha384.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var SHA512 = __webpack_require__(/*! ./sha512 */ "./node_modules/sha.js/sha512.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var W = new Array(160)

function Sha384 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha384, SHA512)

Sha384.prototype.init = function () {
  this._ah = 0xcbbb9d5d
  this._bh = 0x629a292a
  this._ch = 0x9159015a
  this._dh = 0x152fecd8
  this._eh = 0x67332667
  this._fh = 0x8eb44a87
  this._gh = 0xdb0c2e0d
  this._hh = 0x47b5481d

  this._al = 0xc1059ed8
  this._bl = 0x367cd507
  this._cl = 0x3070dd17
  this._dl = 0xf70e5939
  this._el = 0xffc00b31
  this._fl = 0x68581511
  this._gl = 0x64f98fa7
  this._hl = 0xbefa4fa4

  return this
}

Sha384.prototype._hash = function () {
  var H = Buffer.allocUnsafe(48)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)

  return H
}

module.exports = Sha384


/***/ }),

/***/ "./node_modules/sha.js/sha512.js":
/*!***************************************!*\
  !*** ./node_modules/sha.js/sha512.js ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js")
var Hash = __webpack_require__(/*! ./hash */ "./node_modules/sha.js/hash.js")
var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer

var K = [
  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,
  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,
  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,
  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,
  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,
  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,
  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,
  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,
  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,
  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,
  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,
  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,
  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,
  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,
  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,
  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,
  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,
  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,
  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,
  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,
  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,
  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,
  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,
  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,
  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,
  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,
  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,
  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,
  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,
  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,
  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,
  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,
  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,
  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,
  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,
  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,
  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,
  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,
  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,
  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817
]

var W = new Array(160)

function Sha512 () {
  this.init()
  this._w = W

  Hash.call(this, 128, 112)
}

inherits(Sha512, Hash)

Sha512.prototype.init = function () {
  this._ah = 0x6a09e667
  this._bh = 0xbb67ae85
  this._ch = 0x3c6ef372
  this._dh = 0xa54ff53a
  this._eh = 0x510e527f
  this._fh = 0x9b05688c
  this._gh = 0x1f83d9ab
  this._hh = 0x5be0cd19

  this._al = 0xf3bcc908
  this._bl = 0x84caa73b
  this._cl = 0xfe94f82b
  this._dl = 0x5f1d36f1
  this._el = 0xade682d1
  this._fl = 0x2b3e6c1f
  this._gl = 0xfb41bd6b
  this._hl = 0x137e2179

  return this
}

function Ch (x, y, z) {
  return z ^ (x & (y ^ z))
}

function maj (x, y, z) {
  return (x & y) | (z & (x | y))
}

function sigma0 (x, xl) {
  return (x >>> 28 | xl << 4) ^ (xl >>> 2 | x << 30) ^ (xl >>> 7 | x << 25)
}

function sigma1 (x, xl) {
  return (x >>> 14 | xl << 18) ^ (x >>> 18 | xl << 14) ^ (xl >>> 9 | x << 23)
}

function Gamma0 (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7)
}

function Gamma0l (x, xl) {
  return (x >>> 1 | xl << 31) ^ (x >>> 8 | xl << 24) ^ (x >>> 7 | xl << 25)
}

function Gamma1 (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6)
}

function Gamma1l (x, xl) {
  return (x >>> 19 | xl << 13) ^ (xl >>> 29 | x << 3) ^ (x >>> 6 | xl << 26)
}

function getCarry (a, b) {
  return (a >>> 0) < (b >>> 0) ? 1 : 0
}

Sha512.prototype._update = function (M) {
  var W = this._w

  var ah = this._ah | 0
  var bh = this._bh | 0
  var ch = this._ch | 0
  var dh = this._dh | 0
  var eh = this._eh | 0
  var fh = this._fh | 0
  var gh = this._gh | 0
  var hh = this._hh | 0

  var al = this._al | 0
  var bl = this._bl | 0
  var cl = this._cl | 0
  var dl = this._dl | 0
  var el = this._el | 0
  var fl = this._fl | 0
  var gl = this._gl | 0
  var hl = this._hl | 0

  for (var i = 0; i < 32; i += 2) {
    W[i] = M.readInt32BE(i * 4)
    W[i + 1] = M.readInt32BE(i * 4 + 4)
  }
  for (; i < 160; i += 2) {
    var xh = W[i - 15 * 2]
    var xl = W[i - 15 * 2 + 1]
    var gamma0 = Gamma0(xh, xl)
    var gamma0l = Gamma0l(xl, xh)

    xh = W[i - 2 * 2]
    xl = W[i - 2 * 2 + 1]
    var gamma1 = Gamma1(xh, xl)
    var gamma1l = Gamma1l(xl, xh)

    // W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16]
    var Wi7h = W[i - 7 * 2]
    var Wi7l = W[i - 7 * 2 + 1]

    var Wi16h = W[i - 16 * 2]
    var Wi16l = W[i - 16 * 2 + 1]

    var Wil = (gamma0l + Wi7l) | 0
    var Wih = (gamma0 + Wi7h + getCarry(Wil, gamma0l)) | 0
    Wil = (Wil + gamma1l) | 0
    Wih = (Wih + gamma1 + getCarry(Wil, gamma1l)) | 0
    Wil = (Wil + Wi16l) | 0
    Wih = (Wih + Wi16h + getCarry(Wil, Wi16l)) | 0

    W[i] = Wih
    W[i + 1] = Wil
  }

  for (var j = 0; j < 160; j += 2) {
    Wih = W[j]
    Wil = W[j + 1]

    var majh = maj(ah, bh, ch)
    var majl = maj(al, bl, cl)

    var sigma0h = sigma0(ah, al)
    var sigma0l = sigma0(al, ah)
    var sigma1h = sigma1(eh, el)
    var sigma1l = sigma1(el, eh)

    // t1 = h + sigma1 + ch + K[j] + W[j]
    var Kih = K[j]
    var Kil = K[j + 1]

    var chh = Ch(eh, fh, gh)
    var chl = Ch(el, fl, gl)

    var t1l = (hl + sigma1l) | 0
    var t1h = (hh + sigma1h + getCarry(t1l, hl)) | 0
    t1l = (t1l + chl) | 0
    t1h = (t1h + chh + getCarry(t1l, chl)) | 0
    t1l = (t1l + Kil) | 0
    t1h = (t1h + Kih + getCarry(t1l, Kil)) | 0
    t1l = (t1l + Wil) | 0
    t1h = (t1h + Wih + getCarry(t1l, Wil)) | 0

    // t2 = sigma0 + maj
    var t2l = (sigma0l + majl) | 0
    var t2h = (sigma0h + majh + getCarry(t2l, sigma0l)) | 0

    hh = gh
    hl = gl
    gh = fh
    gl = fl
    fh = eh
    fl = el
    el = (dl + t1l) | 0
    eh = (dh + t1h + getCarry(el, dl)) | 0
    dh = ch
    dl = cl
    ch = bh
    cl = bl
    bh = ah
    bl = al
    al = (t1l + t2l) | 0
    ah = (t1h + t2h + getCarry(al, t1l)) | 0
  }

  this._al = (this._al + al) | 0
  this._bl = (this._bl + bl) | 0
  this._cl = (this._cl + cl) | 0
  this._dl = (this._dl + dl) | 0
  this._el = (this._el + el) | 0
  this._fl = (this._fl + fl) | 0
  this._gl = (this._gl + gl) | 0
  this._hl = (this._hl + hl) | 0

  this._ah = (this._ah + ah + getCarry(this._al, al)) | 0
  this._bh = (this._bh + bh + getCarry(this._bl, bl)) | 0
  this._ch = (this._ch + ch + getCarry(this._cl, cl)) | 0
  this._dh = (this._dh + dh + getCarry(this._dl, dl)) | 0
  this._eh = (this._eh + eh + getCarry(this._el, el)) | 0
  this._fh = (this._fh + fh + getCarry(this._fl, fl)) | 0
  this._gh = (this._gh + gh + getCarry(this._gl, gl)) | 0
  this._hh = (this._hh + hh + getCarry(this._hl, hl)) | 0
}

Sha512.prototype._hash = function () {
  var H = Buffer.allocUnsafe(64)

  function writeInt64BE (h, l, offset) {
    H.writeInt32BE(h, offset)
    H.writeInt32BE(l, offset + 4)
  }

  writeInt64BE(this._ah, this._al, 0)
  writeInt64BE(this._bh, this._bl, 8)
  writeInt64BE(this._ch, this._cl, 16)
  writeInt64BE(this._dh, this._dl, 24)
  writeInt64BE(this._eh, this._el, 32)
  writeInt64BE(this._fh, this._fl, 40)
  writeInt64BE(this._gh, this._gl, 48)
  writeInt64BE(this._hh, this._hl, 56)

  return H
}

module.exports = Sha512


/***/ }),

/***/ "./node_modules/stream-browserify/index.js":
/*!*************************************************!*\
  !*** ./node_modules/stream-browserify/index.js ***!
  \*************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

module.exports = Stream;

var EE = __webpack_require__(/*! events */ "./node_modules/events/events.js").EventEmitter;
var inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");

inherits(Stream, EE);
Stream.Readable = __webpack_require__(/*! readable-stream/readable.js */ "./node_modules/stream-browserify/node_modules/readable-stream/readable-browser.js");
Stream.Writable = __webpack_require__(/*! readable-stream/writable.js */ "./node_modules/stream-browserify/node_modules/readable-stream/writable-browser.js");
Stream.Duplex = __webpack_require__(/*! readable-stream/duplex.js */ "./node_modules/stream-browserify/node_modules/readable-stream/duplex-browser.js");
Stream.Transform = __webpack_require__(/*! readable-stream/transform.js */ "./node_modules/stream-browserify/node_modules/readable-stream/transform.js");
Stream.PassThrough = __webpack_require__(/*! readable-stream/passthrough.js */ "./node_modules/stream-browserify/node_modules/readable-stream/passthrough.js");

// Backwards-compat with node 0.4.x
Stream.Stream = Stream;



// old-style streams.  Note that the pipe method (the only relevant
// part of this class) is overridden in the Readable class.

function Stream() {
  EE.call(this);
}

Stream.prototype.pipe = function(dest, options) {
  var source = this;

  function ondata(chunk) {
    if (dest.writable) {
      if (false === dest.write(chunk) && source.pause) {
        source.pause();
      }
    }
  }

  source.on('data', ondata);

  function ondrain() {
    if (source.readable && source.resume) {
      source.resume();
    }
  }

  dest.on('drain', ondrain);

  // If the 'end' option is not supplied, dest.end() will be called when
  // source gets the 'end' or 'close' events.  Only dest.end() once.
  if (!dest._isStdio && (!options || options.end !== false)) {
    source.on('end', onend);
    source.on('close', onclose);
  }

  var didOnEnd = false;
  function onend() {
    if (didOnEnd) return;
    didOnEnd = true;

    dest.end();
  }


  function onclose() {
    if (didOnEnd) return;
    didOnEnd = true;

    if (typeof dest.destroy === 'function') dest.destroy();
  }

  // don't leave dangling pipes when there are errors.
  function onerror(er) {
    cleanup();
    if (EE.listenerCount(this, 'error') === 0) {
      throw er; // Unhandled stream error in pipe.
    }
  }

  source.on('error', onerror);
  dest.on('error', onerror);

  // remove all the event listeners that were added.
  function cleanup() {
    source.removeListener('data', ondata);
    dest.removeListener('drain', ondrain);

    source.removeListener('end', onend);
    source.removeListener('close', onclose);

    source.removeListener('error', onerror);
    dest.removeListener('error', onerror);

    source.removeListener('end', cleanup);
    source.removeListener('close', cleanup);

    dest.removeListener('close', cleanup);
  }

  source.on('end', cleanup);
  source.on('close', cleanup);

  dest.on('close', cleanup);

  dest.emit('pipe', source);

  // Allow for unix-like usage: A.pipe(B).pipe(C)
  return dest;
};


/***/ }),

/***/ "./node_modules/stream-browserify/node_modules/isarray/index.js":
/*!**********************************************************************!*\
  !*** ./node_modules/stream-browserify/node_modules/isarray/index.js ***!
  \**********************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

var toString = {}.toString;

module.exports = Array.isArray || function (arr) {
  return toString.call(arr) == '[object Array]';
};


/***/ }),

/***/ "./node_modules/stream-browserify/node_modules/readable-stream/duplex-browser.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/stream-browserify/node_modules/readable-stream/duplex-browser.js ***!
  \***************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./lib/_stream_duplex.js */ "./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js");


/***/ }),

/***/ "./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js ***!
  \*******************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a duplex stream is just a stream that is both readable and writable.
// Since JS doesn't have multiple prototypal inheritance, this class
// prototypally inherits from Readable, and then parasitically from
// Writable.



/*<replacement>*/

var pna = __webpack_require__(/*! process-nextick-args */ "./node_modules/process-nextick-args/index.js");
/*</replacement>*/

/*<replacement>*/
var objectKeys = Object.keys || function (obj) {
  var keys = [];
  for (var key in obj) {
    keys.push(key);
  }return keys;
};
/*</replacement>*/

module.exports = Duplex;

/*<replacement>*/
var util = __webpack_require__(/*! core-util-is */ "./node_modules/core-util-is/lib/util.js");
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
/*</replacement>*/

var Readable = __webpack_require__(/*! ./_stream_readable */ "./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js");
var Writable = __webpack_require__(/*! ./_stream_writable */ "./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js");

util.inherits(Duplex, Readable);

{
  // avoid scope creep, the keys array can then be collected
  var keys = objectKeys(Writable.prototype);
  for (var v = 0; v < keys.length; v++) {
    var method = keys[v];
    if (!Duplex.prototype[method]) Duplex.prototype[method] = Writable.prototype[method];
  }
}

function Duplex(options) {
  if (!(this instanceof Duplex)) return new Duplex(options);

  Readable.call(this, options);
  Writable.call(this, options);

  if (options && options.readable === false) this.readable = false;

  if (options && options.writable === false) this.writable = false;

  this.allowHalfOpen = true;
  if (options && options.allowHalfOpen === false) this.allowHalfOpen = false;

  this.once('end', onend);
}

Object.defineProperty(Duplex.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._writableState.highWaterMark;
  }
});

// the no-half-open enforcer
function onend() {
  // if we allow half-open state, or if the writable side ended,
  // then we're ok.
  if (this.allowHalfOpen || this._writableState.ended) return;

  // no more data can be written.
  // But allow more writes to happen in this tick.
  pna.nextTick(onEndNT, this);
}

function onEndNT(self) {
  self.end();
}

Object.defineProperty(Duplex.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined || this._writableState === undefined) {
      return false;
    }
    return this._readableState.destroyed && this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (this._readableState === undefined || this._writableState === undefined) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
    this._writableState.destroyed = value;
  }
});

Duplex.prototype._destroy = function (err, cb) {
  this.push(null);
  this.end();

  pna.nextTick(cb, err);
};

/***/ }),

/***/ "./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_passthrough.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_passthrough.js ***!
  \************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a passthrough stream.
// basically just the most minimal sort of Transform stream.
// Every written chunk gets output as-is.



module.exports = PassThrough;

var Transform = __webpack_require__(/*! ./_stream_transform */ "./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js");

/*<replacement>*/
var util = __webpack_require__(/*! core-util-is */ "./node_modules/core-util-is/lib/util.js");
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
/*</replacement>*/

util.inherits(PassThrough, Transform);

function PassThrough(options) {
  if (!(this instanceof PassThrough)) return new PassThrough(options);

  Transform.call(this, options);
}

PassThrough.prototype._transform = function (chunk, encoding, cb) {
  cb(null, chunk);
};

/***/ }),

/***/ "./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(global, process) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.



/*<replacement>*/

var pna = __webpack_require__(/*! process-nextick-args */ "./node_modules/process-nextick-args/index.js");
/*</replacement>*/

module.exports = Readable;

/*<replacement>*/
var isArray = __webpack_require__(/*! isarray */ "./node_modules/stream-browserify/node_modules/isarray/index.js");
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Readable.ReadableState = ReadableState;

/*<replacement>*/
var EE = __webpack_require__(/*! events */ "./node_modules/events/events.js").EventEmitter;

var EElistenerCount = function (emitter, type) {
  return emitter.listeners(type).length;
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(/*! ./internal/streams/stream */ "./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/stream-browser.js");
/*</replacement>*/

/*<replacement>*/

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

/*<replacement>*/
var util = __webpack_require__(/*! core-util-is */ "./node_modules/core-util-is/lib/util.js");
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
/*</replacement>*/

/*<replacement>*/
var debugUtil = __webpack_require__(/*! util */ 0);
var debug = void 0;
if (debugUtil && debugUtil.debuglog) {
  debug = debugUtil.debuglog('stream');
} else {
  debug = function () {};
}
/*</replacement>*/

var BufferList = __webpack_require__(/*! ./internal/streams/BufferList */ "./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/BufferList.js");
var destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ "./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/destroy.js");
var StringDecoder;

util.inherits(Readable, Stream);

var kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];

function prependListener(emitter, event, fn) {
  // Sadly this is not cacheable as some libraries bundle their own
  // event emitter implementation with them.
  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);

  // This is a hack to make sure that our error handler is attached before any
  // userland ones.  NEVER DO THIS. This is here only because this code needs
  // to continue to work with older versions of Node.js that do not include
  // the prependListener() method. The goal is to eventually remove this hack.
  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];
}

function ReadableState(options, stream) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js");

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag. Used to make read(n) ignore n and to
  // make all the buffer merging and length checks go away
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;

  // the point at which it stops calling _read() to fill the buffer
  // Note: 0 is a valid value, means "don't call _read preemptively ever"
  var hwm = options.highWaterMark;
  var readableHwm = options.readableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // A linked list is used to store data chunks instead of an array because the
  // linked list can remove elements from the beginning faster than
  // array.shift()
  this.buffer = new BufferList();
  this.length = 0;
  this.pipes = null;
  this.pipesCount = 0;
  this.flowing = null;
  this.ended = false;
  this.endEmitted = false;
  this.reading = false;

  // a flag to be able to tell if the event 'readable'/'data' is emitted
  // immediately, or on a later tick.  We set this to true at first, because
  // any actions that shouldn't happen until "later" should generally also
  // not happen before the first read call.
  this.sync = true;

  // whenever we return null, then we set a flag to say
  // that we're awaiting a 'readable' event emission.
  this.needReadable = false;
  this.emittedReadable = false;
  this.readableListening = false;
  this.resumeScheduled = false;

  // has it been destroyed
  this.destroyed = false;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // the number of writers that are awaiting a drain event in .pipe()s
  this.awaitDrain = 0;

  // if true, a maybeReadMore has been scheduled
  this.readingMore = false;

  this.decoder = null;
  this.encoding = null;
  if (options.encoding) {
    if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ "./node_modules/node-libs-browser/node_modules/string_decoder/lib/string_decoder.js").StringDecoder;
    this.decoder = new StringDecoder(options.encoding);
    this.encoding = options.encoding;
  }
}

function Readable(options) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js");

  if (!(this instanceof Readable)) return new Readable(options);

  this._readableState = new ReadableState(options, this);

  // legacy
  this.readable = true;

  if (options) {
    if (typeof options.read === 'function') this._read = options.read;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;
  }

  Stream.call(this);
}

Object.defineProperty(Readable.prototype, 'destroyed', {
  get: function () {
    if (this._readableState === undefined) {
      return false;
    }
    return this._readableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._readableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._readableState.destroyed = value;
  }
});

Readable.prototype.destroy = destroyImpl.destroy;
Readable.prototype._undestroy = destroyImpl.undestroy;
Readable.prototype._destroy = function (err, cb) {
  this.push(null);
  cb(err);
};

// Manually shove something into the read() buffer.
// This returns true if the highWaterMark has not been hit yet,
// similar to how Writable.write() returns true if you should
// write() some more.
Readable.prototype.push = function (chunk, encoding) {
  var state = this._readableState;
  var skipChunkCheck;

  if (!state.objectMode) {
    if (typeof chunk === 'string') {
      encoding = encoding || state.defaultEncoding;
      if (encoding !== state.encoding) {
        chunk = Buffer.from(chunk, encoding);
        encoding = '';
      }
      skipChunkCheck = true;
    }
  } else {
    skipChunkCheck = true;
  }

  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);
};

// Unshift should *always* be something directly out of read()
Readable.prototype.unshift = function (chunk) {
  return readableAddChunk(this, chunk, null, true, false);
};

function readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {
  var state = stream._readableState;
  if (chunk === null) {
    state.reading = false;
    onEofChunk(stream, state);
  } else {
    var er;
    if (!skipChunkCheck) er = chunkInvalid(state, chunk);
    if (er) {
      stream.emit('error', er);
    } else if (state.objectMode || chunk && chunk.length > 0) {
      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {
        chunk = _uint8ArrayToBuffer(chunk);
      }

      if (addToFront) {
        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);
      } else if (state.ended) {
        stream.emit('error', new Error('stream.push() after EOF'));
      } else {
        state.reading = false;
        if (state.decoder && !encoding) {
          chunk = state.decoder.write(chunk);
          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);
        } else {
          addChunk(stream, state, chunk, false);
        }
      }
    } else if (!addToFront) {
      state.reading = false;
    }
  }

  return needMoreData(state);
}

function addChunk(stream, state, chunk, addToFront) {
  if (state.flowing && state.length === 0 && !state.sync) {
    stream.emit('data', chunk);
    stream.read(0);
  } else {
    // update the buffer info.
    state.length += state.objectMode ? 1 : chunk.length;
    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);

    if (state.needReadable) emitReadable(stream);
  }
  maybeReadMore(stream, state);
}

function chunkInvalid(state, chunk) {
  var er;
  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  return er;
}

// if it's past the high water mark, we can push in some more.
// Also, if we have no data yet, we can stand some
// more bytes.  This is to work around cases where hwm=0,
// such as the repl.  Also, if the push() triggered a
// readable event, and the user called read(largeNumber) such that
// needReadable was set, then we ought to push more, so that another
// 'readable' event will be triggered.
function needMoreData(state) {
  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);
}

Readable.prototype.isPaused = function () {
  return this._readableState.flowing === false;
};

// backwards compatibility.
Readable.prototype.setEncoding = function (enc) {
  if (!StringDecoder) StringDecoder = __webpack_require__(/*! string_decoder/ */ "./node_modules/node-libs-browser/node_modules/string_decoder/lib/string_decoder.js").StringDecoder;
  this._readableState.decoder = new StringDecoder(enc);
  this._readableState.encoding = enc;
  return this;
};

// Don't raise the hwm > 8MB
var MAX_HWM = 0x800000;
function computeNewHighWaterMark(n) {
  if (n >= MAX_HWM) {
    n = MAX_HWM;
  } else {
    // Get the next highest power of 2 to prevent increasing hwm excessively in
    // tiny amounts
    n--;
    n |= n >>> 1;
    n |= n >>> 2;
    n |= n >>> 4;
    n |= n >>> 8;
    n |= n >>> 16;
    n++;
  }
  return n;
}

// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function howMuchToRead(n, state) {
  if (n <= 0 || state.length === 0 && state.ended) return 0;
  if (state.objectMode) return 1;
  if (n !== n) {
    // Only flow one buffer at a time
    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;
  }
  // If we're asking for more than the current hwm, then raise the hwm.
  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);
  if (n <= state.length) return n;
  // Don't have enough
  if (!state.ended) {
    state.needReadable = true;
    return 0;
  }
  return state.length;
}

// you can override either this method, or the async _read(n) below.
Readable.prototype.read = function (n) {
  debug('read', n);
  n = parseInt(n, 10);
  var state = this._readableState;
  var nOrig = n;

  if (n !== 0) state.emittedReadable = false;

  // if we're doing read(0) to trigger a readable event, but we
  // already have a bunch of data in the buffer, then just trigger
  // the 'readable' event and move on.
  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {
    debug('read: emitReadable', state.length, state.ended);
    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);
    return null;
  }

  n = howMuchToRead(n, state);

  // if we've ended, and we're now clear, then finish it up.
  if (n === 0 && state.ended) {
    if (state.length === 0) endReadable(this);
    return null;
  }

  // All the actual chunk generation logic needs to be
  // *below* the call to _read.  The reason is that in certain
  // synthetic stream cases, such as passthrough streams, _read
  // may be a completely synchronous operation which may change
  // the state of the read buffer, providing enough data when
  // before there was *not* enough.
  //
  // So, the steps are:
  // 1. Figure out what the state of things will be after we do
  // a read from the buffer.
  //
  // 2. If that resulting state will trigger a _read, then call _read.
  // Note that this may be asynchronous, or synchronous.  Yes, it is
  // deeply ugly to write APIs this way, but that still doesn't mean
  // that the Readable class should behave improperly, as streams are
  // designed to be sync/async agnostic.
  // Take note if the _read call is sync or async (ie, if the read call
  // has returned yet), so that we know whether or not it's safe to emit
  // 'readable' etc.
  //
  // 3. Actually pull the requested chunks out of the buffer and return.

  // if we need a readable event, then we need to do some reading.
  var doRead = state.needReadable;
  debug('need readable', doRead);

  // if we currently have less than the highWaterMark, then also read some
  if (state.length === 0 || state.length - n < state.highWaterMark) {
    doRead = true;
    debug('length less than watermark', doRead);
  }

  // however, if we've ended, then there's no point, and if we're already
  // reading, then it's unnecessary.
  if (state.ended || state.reading) {
    doRead = false;
    debug('reading or ended', doRead);
  } else if (doRead) {
    debug('do read');
    state.reading = true;
    state.sync = true;
    // if the length is currently zero, then we *need* a readable event.
    if (state.length === 0) state.needReadable = true;
    // call internal read method
    this._read(state.highWaterMark);
    state.sync = false;
    // If _read pushed data synchronously, then `reading` will be false,
    // and we need to re-evaluate how much data we can return to the user.
    if (!state.reading) n = howMuchToRead(nOrig, state);
  }

  var ret;
  if (n > 0) ret = fromList(n, state);else ret = null;

  if (ret === null) {
    state.needReadable = true;
    n = 0;
  } else {
    state.length -= n;
  }

  if (state.length === 0) {
    // If we have nothing in the buffer, then we want to know
    // as soon as we *do* get something into the buffer.
    if (!state.ended) state.needReadable = true;

    // If we tried to read() past the EOF, then emit end on the next tick.
    if (nOrig !== n && state.ended) endReadable(this);
  }

  if (ret !== null) this.emit('data', ret);

  return ret;
};

function onEofChunk(stream, state) {
  if (state.ended) return;
  if (state.decoder) {
    var chunk = state.decoder.end();
    if (chunk && chunk.length) {
      state.buffer.push(chunk);
      state.length += state.objectMode ? 1 : chunk.length;
    }
  }
  state.ended = true;

  // emit 'readable' now to make sure it gets picked up.
  emitReadable(stream);
}

// Don't emit readable right away in sync mode, because this can trigger
// another read() call => stack overflow.  This way, it might trigger
// a nextTick recursion warning, but that's not so bad.
function emitReadable(stream) {
  var state = stream._readableState;
  state.needReadable = false;
  if (!state.emittedReadable) {
    debug('emitReadable', state.flowing);
    state.emittedReadable = true;
    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);
  }
}

function emitReadable_(stream) {
  debug('emit readable');
  stream.emit('readable');
  flow(stream);
}

// at this point, the user has presumably seen the 'readable' event,
// and called read() to consume some data.  that may have triggered
// in turn another _read(n) call, in which case reading = true if
// it's in progress.
// However, if we're not ended, or reading, and the length < hwm,
// then go ahead and try to read some more preemptively.
function maybeReadMore(stream, state) {
  if (!state.readingMore) {
    state.readingMore = true;
    pna.nextTick(maybeReadMore_, stream, state);
  }
}

function maybeReadMore_(stream, state) {
  var len = state.length;
  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {
    debug('maybeReadMore read 0');
    stream.read(0);
    if (len === state.length)
      // didn't get any data, stop spinning.
      break;else len = state.length;
  }
  state.readingMore = false;
}

// abstract method.  to be overridden in specific implementation classes.
// call cb(er, data) where data is <= n in length.
// for virtual (non-string, non-buffer) streams, "length" is somewhat
// arbitrary, and perhaps not very meaningful.
Readable.prototype._read = function (n) {
  this.emit('error', new Error('_read() is not implemented'));
};

Readable.prototype.pipe = function (dest, pipeOpts) {
  var src = this;
  var state = this._readableState;

  switch (state.pipesCount) {
    case 0:
      state.pipes = dest;
      break;
    case 1:
      state.pipes = [state.pipes, dest];
      break;
    default:
      state.pipes.push(dest);
      break;
  }
  state.pipesCount += 1;
  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);

  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;

  var endFn = doEnd ? onend : unpipe;
  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);

  dest.on('unpipe', onunpipe);
  function onunpipe(readable, unpipeInfo) {
    debug('onunpipe');
    if (readable === src) {
      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {
        unpipeInfo.hasUnpiped = true;
        cleanup();
      }
    }
  }

  function onend() {
    debug('onend');
    dest.end();
  }

  // when the dest drains, it reduces the awaitDrain counter
  // on the source.  This would be more elegant with a .once()
  // handler in flow(), but adding and removing repeatedly is
  // too slow.
  var ondrain = pipeOnDrain(src);
  dest.on('drain', ondrain);

  var cleanedUp = false;
  function cleanup() {
    debug('cleanup');
    // cleanup event handlers once the pipe is broken
    dest.removeListener('close', onclose);
    dest.removeListener('finish', onfinish);
    dest.removeListener('drain', ondrain);
    dest.removeListener('error', onerror);
    dest.removeListener('unpipe', onunpipe);
    src.removeListener('end', onend);
    src.removeListener('end', unpipe);
    src.removeListener('data', ondata);

    cleanedUp = true;

    // if the reader is waiting for a drain event from this
    // specific writer, then it would cause it to never start
    // flowing again.
    // So, if this is awaiting a drain, then we just call it now.
    // If we don't know, then assume that we are waiting for one.
    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();
  }

  // If the user pushes more data while we're writing to dest then we'll end up
  // in ondata again. However, we only want to increase awaitDrain once because
  // dest will only emit one 'drain' event for the multiple writes.
  // => Introduce a guard on increasing awaitDrain.
  var increasedAwaitDrain = false;
  src.on('data', ondata);
  function ondata(chunk) {
    debug('ondata');
    increasedAwaitDrain = false;
    var ret = dest.write(chunk);
    if (false === ret && !increasedAwaitDrain) {
      // If the user unpiped during `dest.write()`, it is possible
      // to get stuck in a permanently paused state if that write
      // also returned false.
      // => Check whether `dest` is still a piping destination.
      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {
        debug('false write response, pause', src._readableState.awaitDrain);
        src._readableState.awaitDrain++;
        increasedAwaitDrain = true;
      }
      src.pause();
    }
  }

  // if the dest has an error, then stop piping into it.
  // however, don't suppress the throwing behavior for this.
  function onerror(er) {
    debug('onerror', er);
    unpipe();
    dest.removeListener('error', onerror);
    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);
  }

  // Make sure our error handler is attached before userland ones.
  prependListener(dest, 'error', onerror);

  // Both close and finish should trigger unpipe, but only once.
  function onclose() {
    dest.removeListener('finish', onfinish);
    unpipe();
  }
  dest.once('close', onclose);
  function onfinish() {
    debug('onfinish');
    dest.removeListener('close', onclose);
    unpipe();
  }
  dest.once('finish', onfinish);

  function unpipe() {
    debug('unpipe');
    src.unpipe(dest);
  }

  // tell the dest that it's being piped to
  dest.emit('pipe', src);

  // start the flow if it hasn't been started already.
  if (!state.flowing) {
    debug('pipe resume');
    src.resume();
  }

  return dest;
};

function pipeOnDrain(src) {
  return function () {
    var state = src._readableState;
    debug('pipeOnDrain', state.awaitDrain);
    if (state.awaitDrain) state.awaitDrain--;
    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {
      state.flowing = true;
      flow(src);
    }
  };
}

Readable.prototype.unpipe = function (dest) {
  var state = this._readableState;
  var unpipeInfo = { hasUnpiped: false };

  // if we're not piping anywhere, then do nothing.
  if (state.pipesCount === 0) return this;

  // just one destination.  most common case.
  if (state.pipesCount === 1) {
    // passed in one, but it's not the right one.
    if (dest && dest !== state.pipes) return this;

    if (!dest) dest = state.pipes;

    // got a match.
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;
    if (dest) dest.emit('unpipe', this, unpipeInfo);
    return this;
  }

  // slow case. multiple pipe destinations.

  if (!dest) {
    // remove all.
    var dests = state.pipes;
    var len = state.pipesCount;
    state.pipes = null;
    state.pipesCount = 0;
    state.flowing = false;

    for (var i = 0; i < len; i++) {
      dests[i].emit('unpipe', this, unpipeInfo);
    }return this;
  }

  // try to find the right one.
  var index = indexOf(state.pipes, dest);
  if (index === -1) return this;

  state.pipes.splice(index, 1);
  state.pipesCount -= 1;
  if (state.pipesCount === 1) state.pipes = state.pipes[0];

  dest.emit('unpipe', this, unpipeInfo);

  return this;
};

// set up data events if they are asked for
// Ensure readable listeners eventually get something
Readable.prototype.on = function (ev, fn) {
  var res = Stream.prototype.on.call(this, ev, fn);

  if (ev === 'data') {
    // Start flowing on next tick if stream isn't explicitly paused
    if (this._readableState.flowing !== false) this.resume();
  } else if (ev === 'readable') {
    var state = this._readableState;
    if (!state.endEmitted && !state.readableListening) {
      state.readableListening = state.needReadable = true;
      state.emittedReadable = false;
      if (!state.reading) {
        pna.nextTick(nReadingNextTick, this);
      } else if (state.length) {
        emitReadable(this);
      }
    }
  }

  return res;
};
Readable.prototype.addListener = Readable.prototype.on;

function nReadingNextTick(self) {
  debug('readable nexttick read 0');
  self.read(0);
}

// pause() and resume() are remnants of the legacy readable stream API
// If the user uses them, then switch into old mode.
Readable.prototype.resume = function () {
  var state = this._readableState;
  if (!state.flowing) {
    debug('resume');
    state.flowing = true;
    resume(this, state);
  }
  return this;
};

function resume(stream, state) {
  if (!state.resumeScheduled) {
    state.resumeScheduled = true;
    pna.nextTick(resume_, stream, state);
  }
}

function resume_(stream, state) {
  if (!state.reading) {
    debug('resume read 0');
    stream.read(0);
  }

  state.resumeScheduled = false;
  state.awaitDrain = 0;
  stream.emit('resume');
  flow(stream);
  if (state.flowing && !state.reading) stream.read(0);
}

Readable.prototype.pause = function () {
  debug('call pause flowing=%j', this._readableState.flowing);
  if (false !== this._readableState.flowing) {
    debug('pause');
    this._readableState.flowing = false;
    this.emit('pause');
  }
  return this;
};

function flow(stream) {
  var state = stream._readableState;
  debug('flow', state.flowing);
  while (state.flowing && stream.read() !== null) {}
}

// wrap an old-style stream as the async data source.
// This is *not* part of the readable stream interface.
// It is an ugly unfortunate mess of history.
Readable.prototype.wrap = function (stream) {
  var _this = this;

  var state = this._readableState;
  var paused = false;

  stream.on('end', function () {
    debug('wrapped end');
    if (state.decoder && !state.ended) {
      var chunk = state.decoder.end();
      if (chunk && chunk.length) _this.push(chunk);
    }

    _this.push(null);
  });

  stream.on('data', function (chunk) {
    debug('wrapped data');
    if (state.decoder) chunk = state.decoder.write(chunk);

    // don't skip over falsy values in objectMode
    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;

    var ret = _this.push(chunk);
    if (!ret) {
      paused = true;
      stream.pause();
    }
  });

  // proxy all the other methods.
  // important when wrapping filters and duplexes.
  for (var i in stream) {
    if (this[i] === undefined && typeof stream[i] === 'function') {
      this[i] = function (method) {
        return function () {
          return stream[method].apply(stream, arguments);
        };
      }(i);
    }
  }

  // proxy certain important events.
  for (var n = 0; n < kProxyEvents.length; n++) {
    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));
  }

  // when we try to consume some more bytes, simply unpause the
  // underlying stream.
  this._read = function (n) {
    debug('wrapped _read', n);
    if (paused) {
      paused = false;
      stream.resume();
    }
  };

  return this;
};

Object.defineProperty(Readable.prototype, 'readableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._readableState.highWaterMark;
  }
});

// exposed for testing purposes only.
Readable._fromList = fromList;

// Pluck off n bytes from an array of buffers.
// Length is the combined lengths of all the buffers in the list.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromList(n, state) {
  // nothing buffered
  if (state.length === 0) return null;

  var ret;
  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {
    // read it all, truncate the list
    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);
    state.buffer.clear();
  } else {
    // read part of list
    ret = fromListPartial(n, state.buffer, state.decoder);
  }

  return ret;
}

// Extracts only enough buffered data to satisfy the amount requested.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function fromListPartial(n, list, hasStrings) {
  var ret;
  if (n < list.head.data.length) {
    // slice is the same for buffers and strings
    ret = list.head.data.slice(0, n);
    list.head.data = list.head.data.slice(n);
  } else if (n === list.head.data.length) {
    // first chunk is a perfect match
    ret = list.shift();
  } else {
    // result spans more than one buffer
    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);
  }
  return ret;
}

// Copies a specified amount of characters from the list of buffered data
// chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBufferString(n, list) {
  var p = list.head;
  var c = 1;
  var ret = p.data;
  n -= ret.length;
  while (p = p.next) {
    var str = p.data;
    var nb = n > str.length ? str.length : n;
    if (nb === str.length) ret += str;else ret += str.slice(0, n);
    n -= nb;
    if (n === 0) {
      if (nb === str.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = str.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

// Copies a specified amount of bytes from the list of buffered data chunks.
// This function is designed to be inlinable, so please take care when making
// changes to the function body.
function copyFromBuffer(n, list) {
  var ret = Buffer.allocUnsafe(n);
  var p = list.head;
  var c = 1;
  p.data.copy(ret);
  n -= p.data.length;
  while (p = p.next) {
    var buf = p.data;
    var nb = n > buf.length ? buf.length : n;
    buf.copy(ret, ret.length - n, 0, nb);
    n -= nb;
    if (n === 0) {
      if (nb === buf.length) {
        ++c;
        if (p.next) list.head = p.next;else list.head = list.tail = null;
      } else {
        list.head = p;
        p.data = buf.slice(nb);
      }
      break;
    }
    ++c;
  }
  list.length -= c;
  return ret;
}

function endReadable(stream) {
  var state = stream._readableState;

  // If we get here before consuming all the bytes, then that is a
  // bug in node.  Should never happen.
  if (state.length > 0) throw new Error('"endReadable()" called on non-empty stream');

  if (!state.endEmitted) {
    state.ended = true;
    pna.nextTick(endReadableNT, state, stream);
  }
}

function endReadableNT(state, stream) {
  // Check that we didn't get one last unshift.
  if (!state.endEmitted && state.length === 0) {
    state.endEmitted = true;
    stream.readable = false;
    stream.emit('end');
  }
}

function indexOf(xs, x) {
  for (var i = 0, l = xs.length; i < l; i++) {
    if (xs[i] === x) return i;
  }
  return -1;
}
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js"), __webpack_require__(/*! ./../../../../process/browser.js */ "./node_modules/process/browser.js")))

/***/ }),

/***/ "./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js":
/*!**********************************************************************************************!*\
  !*** ./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js ***!
  \**********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// a transform stream is a readable/writable stream where you do
// something with the data.  Sometimes it's called a "filter",
// but that's not a great name for it, since that implies a thing where
// some bits pass through, and others are simply ignored.  (That would
// be a valid example of a transform, of course.)
//
// While the output is causally related to the input, it's not a
// necessarily symmetric or synchronous transformation.  For example,
// a zlib stream might take multiple plain-text writes(), and then
// emit a single compressed chunk some time in the future.
//
// Here's how this works:
//
// The Transform stream has all the aspects of the readable and writable
// stream classes.  When you write(chunk), that calls _write(chunk,cb)
// internally, and returns false if there's a lot of pending writes
// buffered up.  When you call read(), that calls _read(n) until
// there's enough pending readable data buffered up.
//
// In a transform stream, the written data is placed in a buffer.  When
// _read(n) is called, it transforms the queued up data, calling the
// buffered _write cb's as it consumes chunks.  If consuming a single
// written chunk would result in multiple output chunks, then the first
// outputted bit calls the readcb, and subsequent chunks just go into
// the read buffer, and will cause it to emit 'readable' if necessary.
//
// This way, back-pressure is actually determined by the reading side,
// since _read has to be called to start processing a new chunk.  However,
// a pathological inflate type of transform can cause excessive buffering
// here.  For example, imagine a stream where every byte of input is
// interpreted as an integer from 0-255, and then results in that many
// bytes of output.  Writing the 4 bytes {ff,ff,ff,ff} would result in
// 1kb of data being output.  In this case, you could write a very small
// amount of input, and end up with a very large amount of output.  In
// such a pathological inflating mechanism, there'd be no way to tell
// the system to stop doing the transform.  A single 4MB write could
// cause the system to run out of memory.
//
// However, even in such a pathological case, only a single written chunk
// would be consumed, and then the rest would wait (un-transformed) until
// the results of the previous transformed chunk were consumed.



module.exports = Transform;

var Duplex = __webpack_require__(/*! ./_stream_duplex */ "./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js");

/*<replacement>*/
var util = __webpack_require__(/*! core-util-is */ "./node_modules/core-util-is/lib/util.js");
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
/*</replacement>*/

util.inherits(Transform, Duplex);

function afterTransform(er, data) {
  var ts = this._transformState;
  ts.transforming = false;

  var cb = ts.writecb;

  if (!cb) {
    return this.emit('error', new Error('write callback called multiple times'));
  }

  ts.writechunk = null;
  ts.writecb = null;

  if (data != null) // single equals check for both `null` and `undefined`
    this.push(data);

  cb(er);

  var rs = this._readableState;
  rs.reading = false;
  if (rs.needReadable || rs.length < rs.highWaterMark) {
    this._read(rs.highWaterMark);
  }
}

function Transform(options) {
  if (!(this instanceof Transform)) return new Transform(options);

  Duplex.call(this, options);

  this._transformState = {
    afterTransform: afterTransform.bind(this),
    needTransform: false,
    transforming: false,
    writecb: null,
    writechunk: null,
    writeencoding: null
  };

  // start out asking for a readable event once data is transformed.
  this._readableState.needReadable = true;

  // we have implemented the _read method, and done the other things
  // that Readable wants before the first _read call, so unset the
  // sync guard flag.
  this._readableState.sync = false;

  if (options) {
    if (typeof options.transform === 'function') this._transform = options.transform;

    if (typeof options.flush === 'function') this._flush = options.flush;
  }

  // When the writable side finishes, then flush out anything remaining.
  this.on('prefinish', prefinish);
}

function prefinish() {
  var _this = this;

  if (typeof this._flush === 'function') {
    this._flush(function (er, data) {
      done(_this, er, data);
    });
  } else {
    done(this, null, null);
  }
}

Transform.prototype.push = function (chunk, encoding) {
  this._transformState.needTransform = false;
  return Duplex.prototype.push.call(this, chunk, encoding);
};

// This is the part where you do stuff!
// override this function in implementation classes.
// 'chunk' is an input chunk.
//
// Call `push(newChunk)` to pass along transformed output
// to the readable side.  You may call 'push' zero or more times.
//
// Call `cb(err)` when you are done with this chunk.  If you pass
// an error, then that'll put the hurt on the whole operation.  If you
// never call cb(), then you'll never get another chunk.
Transform.prototype._transform = function (chunk, encoding, cb) {
  throw new Error('_transform() is not implemented');
};

Transform.prototype._write = function (chunk, encoding, cb) {
  var ts = this._transformState;
  ts.writecb = cb;
  ts.writechunk = chunk;
  ts.writeencoding = encoding;
  if (!ts.transforming) {
    var rs = this._readableState;
    if (ts.needTransform || rs.needReadable || rs.length < rs.highWaterMark) this._read(rs.highWaterMark);
  }
};

// Doesn't matter what the args are here.
// _transform does all the work.
// That we got here means that the readable side wants more data.
Transform.prototype._read = function (n) {
  var ts = this._transformState;

  if (ts.writechunk !== null && ts.writecb && !ts.transforming) {
    ts.transforming = true;
    this._transform(ts.writechunk, ts.writeencoding, ts.afterTransform);
  } else {
    // mark that we need a transform, so that any data that comes in
    // will get processed, now that we've asked for it.
    ts.needTransform = true;
  }
};

Transform.prototype._destroy = function (err, cb) {
  var _this2 = this;

  Duplex.prototype._destroy.call(this, err, function (err2) {
    cb(err2);
    _this2.emit('close');
  });
};

function done(stream, er, data) {
  if (er) return stream.emit('error', er);

  if (data != null) // single equals check for both `null` and `undefined`
    stream.push(data);

  // if there's nothing in the write buffer, then that means
  // that nothing more will ever be provided
  if (stream._writableState.length) throw new Error('Calling transform done when ws.length != 0');

  if (stream._transformState.transforming) throw new Error('Calling transform done when still transforming');

  return stream.push(null);
}

/***/ }),

/***/ "./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js ***!
  \*********************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
/* WEBPACK VAR INJECTION */(function(process, setImmediate, global) {// Copyright Joyent, Inc. and other Node contributors.
//
// Permission is hereby granted, free of charge, to any person obtaining a
// copy of this software and associated documentation files (the
// "Software"), to deal in the Software without restriction, including
// without limitation the rights to use, copy, modify, merge, publish,
// distribute, sublicense, and/or sell copies of the Software, and to permit
// persons to whom the Software is furnished to do so, subject to the
// following conditions:
//
// The above copyright notice and this permission notice shall be included
// in all copies or substantial portions of the Software.
//
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE
// USE OR OTHER DEALINGS IN THE SOFTWARE.

// A bit simpler than readable streams.
// Implement an async ._write(chunk, encoding, cb), and it'll handle all
// the drain event emission and buffering.



/*<replacement>*/

var pna = __webpack_require__(/*! process-nextick-args */ "./node_modules/process-nextick-args/index.js");
/*</replacement>*/

module.exports = Writable;

/* <replacement> */
function WriteReq(chunk, encoding, cb) {
  this.chunk = chunk;
  this.encoding = encoding;
  this.callback = cb;
  this.next = null;
}

// It seems a linked list but it is not
// there will be only 2 of these for each stream
function CorkedRequest(state) {
  var _this = this;

  this.next = null;
  this.entry = null;
  this.finish = function () {
    onCorkedFinish(_this, state);
  };
}
/* </replacement> */

/*<replacement>*/
var asyncWrite = !process.browser && ['v0.10', 'v0.9.'].indexOf(process.version.slice(0, 5)) > -1 ? setImmediate : pna.nextTick;
/*</replacement>*/

/*<replacement>*/
var Duplex;
/*</replacement>*/

Writable.WritableState = WritableState;

/*<replacement>*/
var util = __webpack_require__(/*! core-util-is */ "./node_modules/core-util-is/lib/util.js");
util.inherits = __webpack_require__(/*! inherits */ "./node_modules/inherits/inherits_browser.js");
/*</replacement>*/

/*<replacement>*/
var internalUtil = {
  deprecate: __webpack_require__(/*! util-deprecate */ "./node_modules/util-deprecate/browser.js")
};
/*</replacement>*/

/*<replacement>*/
var Stream = __webpack_require__(/*! ./internal/streams/stream */ "./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/stream-browser.js");
/*</replacement>*/

/*<replacement>*/

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer;
var OurUint8Array = global.Uint8Array || function () {};
function _uint8ArrayToBuffer(chunk) {
  return Buffer.from(chunk);
}
function _isUint8Array(obj) {
  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;
}

/*</replacement>*/

var destroyImpl = __webpack_require__(/*! ./internal/streams/destroy */ "./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/destroy.js");

util.inherits(Writable, Stream);

function nop() {}

function WritableState(options, stream) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js");

  options = options || {};

  // Duplex streams are both readable and writable, but share
  // the same options object.
  // However, some cases require setting options to different
  // values for the readable and the writable sides of the duplex stream.
  // These options can be provided separately as readableXXX and writableXXX.
  var isDuplex = stream instanceof Duplex;

  // object stream flag to indicate whether or not this stream
  // contains buffers or objects.
  this.objectMode = !!options.objectMode;

  if (isDuplex) this.objectMode = this.objectMode || !!options.writableObjectMode;

  // the point at which write() starts returning false
  // Note: 0 is a valid value, means that we always return false if
  // the entire buffer is not flushed immediately on write()
  var hwm = options.highWaterMark;
  var writableHwm = options.writableHighWaterMark;
  var defaultHwm = this.objectMode ? 16 : 16 * 1024;

  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (writableHwm || writableHwm === 0)) this.highWaterMark = writableHwm;else this.highWaterMark = defaultHwm;

  // cast to ints.
  this.highWaterMark = Math.floor(this.highWaterMark);

  // if _final has been called
  this.finalCalled = false;

  // drain event flag.
  this.needDrain = false;
  // at the start of calling end()
  this.ending = false;
  // when end() has been called, and returned
  this.ended = false;
  // when 'finish' is emitted
  this.finished = false;

  // has it been destroyed
  this.destroyed = false;

  // should we decode strings into buffers before passing to _write?
  // this is here so that some node-core streams can optimize string
  // handling at a lower level.
  var noDecode = options.decodeStrings === false;
  this.decodeStrings = !noDecode;

  // Crypto is kind of old and crusty.  Historically, its default string
  // encoding is 'binary' so we have to make this configurable.
  // Everything else in the universe uses 'utf8', though.
  this.defaultEncoding = options.defaultEncoding || 'utf8';

  // not an actual buffer we keep track of, but a measurement
  // of how much we're waiting to get pushed to some underlying
  // socket or file.
  this.length = 0;

  // a flag to see when we're in the middle of a write.
  this.writing = false;

  // when true all writes will be buffered until .uncork() call
  this.corked = 0;

  // a flag to be able to tell if the onwrite cb is called immediately,
  // or on a later tick.  We set this to true at first, because any
  // actions that shouldn't happen until "later" should generally also
  // not happen before the first write call.
  this.sync = true;

  // a flag to know if we're processing previously buffered items, which
  // may call the _write() callback in the same tick, so that we don't
  // end up in an overlapped onwrite situation.
  this.bufferProcessing = false;

  // the callback that's passed to _write(chunk,cb)
  this.onwrite = function (er) {
    onwrite(stream, er);
  };

  // the callback that the user supplies to write(chunk,encoding,cb)
  this.writecb = null;

  // the amount that is being written when _write is called.
  this.writelen = 0;

  this.bufferedRequest = null;
  this.lastBufferedRequest = null;

  // number of pending user-supplied write callbacks
  // this must be 0 before 'finish' can be emitted
  this.pendingcb = 0;

  // emit prefinish if the only thing we're waiting for is _write cbs
  // This is relevant for synchronous Transform streams
  this.prefinished = false;

  // True if the error was already emitted and should not be thrown again
  this.errorEmitted = false;

  // count buffered requests
  this.bufferedRequestCount = 0;

  // allocate the first CorkedRequest, there is always
  // one allocated and free to use, and we maintain at most two
  this.corkedRequestsFree = new CorkedRequest(this);
}

WritableState.prototype.getBuffer = function getBuffer() {
  var current = this.bufferedRequest;
  var out = [];
  while (current) {
    out.push(current);
    current = current.next;
  }
  return out;
};

(function () {
  try {
    Object.defineProperty(WritableState.prototype, 'buffer', {
      get: internalUtil.deprecate(function () {
        return this.getBuffer();
      }, '_writableState.buffer is deprecated. Use _writableState.getBuffer ' + 'instead.', 'DEP0003')
    });
  } catch (_) {}
})();

// Test _writableState for inheritance to account for Duplex streams,
// whose prototype chain only points to Readable.
var realHasInstance;
if (typeof Symbol === 'function' && Symbol.hasInstance && typeof Function.prototype[Symbol.hasInstance] === 'function') {
  realHasInstance = Function.prototype[Symbol.hasInstance];
  Object.defineProperty(Writable, Symbol.hasInstance, {
    value: function (object) {
      if (realHasInstance.call(this, object)) return true;
      if (this !== Writable) return false;

      return object && object._writableState instanceof WritableState;
    }
  });
} else {
  realHasInstance = function (object) {
    return object instanceof this;
  };
}

function Writable(options) {
  Duplex = Duplex || __webpack_require__(/*! ./_stream_duplex */ "./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js");

  // Writable ctor is applied to Duplexes, too.
  // `realHasInstance` is necessary because using plain `instanceof`
  // would return false, as no `_writableState` property is attached.

  // Trying to use the custom `instanceof` for Writable here will also break the
  // Node.js LazyTransform implementation, which has a non-trivial getter for
  // `_writableState` that would lead to infinite recursion.
  if (!realHasInstance.call(Writable, this) && !(this instanceof Duplex)) {
    return new Writable(options);
  }

  this._writableState = new WritableState(options, this);

  // legacy.
  this.writable = true;

  if (options) {
    if (typeof options.write === 'function') this._write = options.write;

    if (typeof options.writev === 'function') this._writev = options.writev;

    if (typeof options.destroy === 'function') this._destroy = options.destroy;

    if (typeof options.final === 'function') this._final = options.final;
  }

  Stream.call(this);
}

// Otherwise people can pipe Writable streams, which is just wrong.
Writable.prototype.pipe = function () {
  this.emit('error', new Error('Cannot pipe, not readable'));
};

function writeAfterEnd(stream, cb) {
  var er = new Error('write after end');
  // TODO: defer error events consistently everywhere, not just the cb
  stream.emit('error', er);
  pna.nextTick(cb, er);
}

// Checks that a user-supplied chunk is valid, especially for the particular
// mode the stream is in. Currently this means that `null` is never accepted
// and undefined/non-string values are only allowed in object mode.
function validChunk(stream, state, chunk, cb) {
  var valid = true;
  var er = false;

  if (chunk === null) {
    er = new TypeError('May not write null values to stream');
  } else if (typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {
    er = new TypeError('Invalid non-string/buffer chunk');
  }
  if (er) {
    stream.emit('error', er);
    pna.nextTick(cb, er);
    valid = false;
  }
  return valid;
}

Writable.prototype.write = function (chunk, encoding, cb) {
  var state = this._writableState;
  var ret = false;
  var isBuf = !state.objectMode && _isUint8Array(chunk);

  if (isBuf && !Buffer.isBuffer(chunk)) {
    chunk = _uint8ArrayToBuffer(chunk);
  }

  if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (isBuf) encoding = 'buffer';else if (!encoding) encoding = state.defaultEncoding;

  if (typeof cb !== 'function') cb = nop;

  if (state.ended) writeAfterEnd(this, cb);else if (isBuf || validChunk(this, state, chunk, cb)) {
    state.pendingcb++;
    ret = writeOrBuffer(this, state, isBuf, chunk, encoding, cb);
  }

  return ret;
};

Writable.prototype.cork = function () {
  var state = this._writableState;

  state.corked++;
};

Writable.prototype.uncork = function () {
  var state = this._writableState;

  if (state.corked) {
    state.corked--;

    if (!state.writing && !state.corked && !state.finished && !state.bufferProcessing && state.bufferedRequest) clearBuffer(this, state);
  }
};

Writable.prototype.setDefaultEncoding = function setDefaultEncoding(encoding) {
  // node::ParseEncoding() requires lower case.
  if (typeof encoding === 'string') encoding = encoding.toLowerCase();
  if (!(['hex', 'utf8', 'utf-8', 'ascii', 'binary', 'base64', 'ucs2', 'ucs-2', 'utf16le', 'utf-16le', 'raw'].indexOf((encoding + '').toLowerCase()) > -1)) throw new TypeError('Unknown encoding: ' + encoding);
  this._writableState.defaultEncoding = encoding;
  return this;
};

function decodeChunk(state, chunk, encoding) {
  if (!state.objectMode && state.decodeStrings !== false && typeof chunk === 'string') {
    chunk = Buffer.from(chunk, encoding);
  }
  return chunk;
}

Object.defineProperty(Writable.prototype, 'writableHighWaterMark', {
  // making it explicit this property is not enumerable
  // because otherwise some prototype manipulation in
  // userland will fail
  enumerable: false,
  get: function () {
    return this._writableState.highWaterMark;
  }
});

// if we're already writing something, then just put this
// in the queue, and wait our turn.  Otherwise, call _write
// If we return false, then we need a drain event, so set that flag.
function writeOrBuffer(stream, state, isBuf, chunk, encoding, cb) {
  if (!isBuf) {
    var newChunk = decodeChunk(state, chunk, encoding);
    if (chunk !== newChunk) {
      isBuf = true;
      encoding = 'buffer';
      chunk = newChunk;
    }
  }
  var len = state.objectMode ? 1 : chunk.length;

  state.length += len;

  var ret = state.length < state.highWaterMark;
  // we must ensure that previous needDrain will not be reset to false.
  if (!ret) state.needDrain = true;

  if (state.writing || state.corked) {
    var last = state.lastBufferedRequest;
    state.lastBufferedRequest = {
      chunk: chunk,
      encoding: encoding,
      isBuf: isBuf,
      callback: cb,
      next: null
    };
    if (last) {
      last.next = state.lastBufferedRequest;
    } else {
      state.bufferedRequest = state.lastBufferedRequest;
    }
    state.bufferedRequestCount += 1;
  } else {
    doWrite(stream, state, false, len, chunk, encoding, cb);
  }

  return ret;
}

function doWrite(stream, state, writev, len, chunk, encoding, cb) {
  state.writelen = len;
  state.writecb = cb;
  state.writing = true;
  state.sync = true;
  if (writev) stream._writev(chunk, state.onwrite);else stream._write(chunk, encoding, state.onwrite);
  state.sync = false;
}

function onwriteError(stream, state, sync, er, cb) {
  --state.pendingcb;

  if (sync) {
    // defer the callback if we are being called synchronously
    // to avoid piling up things on the stack
    pna.nextTick(cb, er);
    // this can emit finish, and it will always happen
    // after error
    pna.nextTick(finishMaybe, stream, state);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
  } else {
    // the caller expect this to happen before if
    // it is async
    cb(er);
    stream._writableState.errorEmitted = true;
    stream.emit('error', er);
    // this can emit finish, but finish must
    // always follow error
    finishMaybe(stream, state);
  }
}

function onwriteStateUpdate(state) {
  state.writing = false;
  state.writecb = null;
  state.length -= state.writelen;
  state.writelen = 0;
}

function onwrite(stream, er) {
  var state = stream._writableState;
  var sync = state.sync;
  var cb = state.writecb;

  onwriteStateUpdate(state);

  if (er) onwriteError(stream, state, sync, er, cb);else {
    // Check if we're actually ready to finish, but don't emit yet
    var finished = needFinish(state);

    if (!finished && !state.corked && !state.bufferProcessing && state.bufferedRequest) {
      clearBuffer(stream, state);
    }

    if (sync) {
      /*<replacement>*/
      asyncWrite(afterWrite, stream, state, finished, cb);
      /*</replacement>*/
    } else {
      afterWrite(stream, state, finished, cb);
    }
  }
}

function afterWrite(stream, state, finished, cb) {
  if (!finished) onwriteDrain(stream, state);
  state.pendingcb--;
  cb();
  finishMaybe(stream, state);
}

// Must force callback to be called on nextTick, so that we don't
// emit 'drain' before the write() consumer gets the 'false' return
// value, and has a chance to attach a 'drain' listener.
function onwriteDrain(stream, state) {
  if (state.length === 0 && state.needDrain) {
    state.needDrain = false;
    stream.emit('drain');
  }
}

// if there's something in the buffer waiting, then process it
function clearBuffer(stream, state) {
  state.bufferProcessing = true;
  var entry = state.bufferedRequest;

  if (stream._writev && entry && entry.next) {
    // Fast case, write everything using _writev()
    var l = state.bufferedRequestCount;
    var buffer = new Array(l);
    var holder = state.corkedRequestsFree;
    holder.entry = entry;

    var count = 0;
    var allBuffers = true;
    while (entry) {
      buffer[count] = entry;
      if (!entry.isBuf) allBuffers = false;
      entry = entry.next;
      count += 1;
    }
    buffer.allBuffers = allBuffers;

    doWrite(stream, state, true, state.length, buffer, '', holder.finish);

    // doWrite is almost always async, defer these to save a bit of time
    // as the hot path ends with doWrite
    state.pendingcb++;
    state.lastBufferedRequest = null;
    if (holder.next) {
      state.corkedRequestsFree = holder.next;
      holder.next = null;
    } else {
      state.corkedRequestsFree = new CorkedRequest(state);
    }
    state.bufferedRequestCount = 0;
  } else {
    // Slow case, write chunks one-by-one
    while (entry) {
      var chunk = entry.chunk;
      var encoding = entry.encoding;
      var cb = entry.callback;
      var len = state.objectMode ? 1 : chunk.length;

      doWrite(stream, state, false, len, chunk, encoding, cb);
      entry = entry.next;
      state.bufferedRequestCount--;
      // if we didn't call the onwrite immediately, then
      // it means that we need to wait until it does.
      // also, that means that the chunk and cb are currently
      // being processed, so move the buffer counter past them.
      if (state.writing) {
        break;
      }
    }

    if (entry === null) state.lastBufferedRequest = null;
  }

  state.bufferedRequest = entry;
  state.bufferProcessing = false;
}

Writable.prototype._write = function (chunk, encoding, cb) {
  cb(new Error('_write() is not implemented'));
};

Writable.prototype._writev = null;

Writable.prototype.end = function (chunk, encoding, cb) {
  var state = this._writableState;

  if (typeof chunk === 'function') {
    cb = chunk;
    chunk = null;
    encoding = null;
  } else if (typeof encoding === 'function') {
    cb = encoding;
    encoding = null;
  }

  if (chunk !== null && chunk !== undefined) this.write(chunk, encoding);

  // .end() fully uncorks
  if (state.corked) {
    state.corked = 1;
    this.uncork();
  }

  // ignore unnecessary end() calls.
  if (!state.ending && !state.finished) endWritable(this, state, cb);
};

function needFinish(state) {
  return state.ending && state.length === 0 && state.bufferedRequest === null && !state.finished && !state.writing;
}
function callFinal(stream, state) {
  stream._final(function (err) {
    state.pendingcb--;
    if (err) {
      stream.emit('error', err);
    }
    state.prefinished = true;
    stream.emit('prefinish');
    finishMaybe(stream, state);
  });
}
function prefinish(stream, state) {
  if (!state.prefinished && !state.finalCalled) {
    if (typeof stream._final === 'function') {
      state.pendingcb++;
      state.finalCalled = true;
      pna.nextTick(callFinal, stream, state);
    } else {
      state.prefinished = true;
      stream.emit('prefinish');
    }
  }
}

function finishMaybe(stream, state) {
  var need = needFinish(state);
  if (need) {
    prefinish(stream, state);
    if (state.pendingcb === 0) {
      state.finished = true;
      stream.emit('finish');
    }
  }
  return need;
}

function endWritable(stream, state, cb) {
  state.ending = true;
  finishMaybe(stream, state);
  if (cb) {
    if (state.finished) pna.nextTick(cb);else stream.once('finish', cb);
  }
  state.ended = true;
  stream.writable = false;
}

function onCorkedFinish(corkReq, state, err) {
  var entry = corkReq.entry;
  corkReq.entry = null;
  while (entry) {
    var cb = entry.callback;
    state.pendingcb--;
    cb(err);
    entry = entry.next;
  }
  if (state.corkedRequestsFree) {
    state.corkedRequestsFree.next = corkReq;
  } else {
    state.corkedRequestsFree = corkReq;
  }
}

Object.defineProperty(Writable.prototype, 'destroyed', {
  get: function () {
    if (this._writableState === undefined) {
      return false;
    }
    return this._writableState.destroyed;
  },
  set: function (value) {
    // we ignore the value if the stream
    // has not been initialized yet
    if (!this._writableState) {
      return;
    }

    // backward compatibility, the user is explicitly
    // managing destroyed
    this._writableState.destroyed = value;
  }
});

Writable.prototype.destroy = destroyImpl.destroy;
Writable.prototype._undestroy = destroyImpl.undestroy;
Writable.prototype._destroy = function (err, cb) {
  this.end();
  cb(err);
};
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../../process/browser.js */ "./node_modules/process/browser.js"), __webpack_require__(/*! ./../../../../timers-browserify/main.js */ "./node_modules/timers-browserify/main.js").setImmediate, __webpack_require__(/*! ./../../../../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/BufferList.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/BufferList.js ***!
  \********************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Buffer = __webpack_require__(/*! safe-buffer */ "./node_modules/safe-buffer/index.js").Buffer;
var util = __webpack_require__(/*! util */ 1);

function copyBuffer(src, target, offset) {
  src.copy(target, offset);
}

module.exports = function () {
  function BufferList() {
    _classCallCheck(this, BufferList);

    this.head = null;
    this.tail = null;
    this.length = 0;
  }

  BufferList.prototype.push = function push(v) {
    var entry = { data: v, next: null };
    if (this.length > 0) this.tail.next = entry;else this.head = entry;
    this.tail = entry;
    ++this.length;
  };

  BufferList.prototype.unshift = function unshift(v) {
    var entry = { data: v, next: this.head };
    if (this.length === 0) this.tail = entry;
    this.head = entry;
    ++this.length;
  };

  BufferList.prototype.shift = function shift() {
    if (this.length === 0) return;
    var ret = this.head.data;
    if (this.length === 1) this.head = this.tail = null;else this.head = this.head.next;
    --this.length;
    return ret;
  };

  BufferList.prototype.clear = function clear() {
    this.head = this.tail = null;
    this.length = 0;
  };

  BufferList.prototype.join = function join(s) {
    if (this.length === 0) return '';
    var p = this.head;
    var ret = '' + p.data;
    while (p = p.next) {
      ret += s + p.data;
    }return ret;
  };

  BufferList.prototype.concat = function concat(n) {
    if (this.length === 0) return Buffer.alloc(0);
    if (this.length === 1) return this.head.data;
    var ret = Buffer.allocUnsafe(n >>> 0);
    var p = this.head;
    var i = 0;
    while (p) {
      copyBuffer(p.data, ret, i);
      i += p.data.length;
      p = p.next;
    }
    return ret;
  };

  return BufferList;
}();

if (util && util.inspect && util.inspect.custom) {
  module.exports.prototype[util.inspect.custom] = function () {
    var obj = util.inspect({ length: this.length });
    return this.constructor.name + ' ' + obj;
  };
}

/***/ }),

/***/ "./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/destroy.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/destroy.js ***!
  \*****************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


/*<replacement>*/

var pna = __webpack_require__(/*! process-nextick-args */ "./node_modules/process-nextick-args/index.js");
/*</replacement>*/

// undocumented cb() API, needed for core, not for public API
function destroy(err, cb) {
  var _this = this;

  var readableDestroyed = this._readableState && this._readableState.destroyed;
  var writableDestroyed = this._writableState && this._writableState.destroyed;

  if (readableDestroyed || writableDestroyed) {
    if (cb) {
      cb(err);
    } else if (err && (!this._writableState || !this._writableState.errorEmitted)) {
      pna.nextTick(emitErrorNT, this, err);
    }
    return this;
  }

  // we set destroyed to true before firing error callbacks in order
  // to make it re-entrance safe in case destroy() is called within callbacks

  if (this._readableState) {
    this._readableState.destroyed = true;
  }

  // if this is a duplex stream mark the writable part as destroyed as well
  if (this._writableState) {
    this._writableState.destroyed = true;
  }

  this._destroy(err || null, function (err) {
    if (!cb && err) {
      pna.nextTick(emitErrorNT, _this, err);
      if (_this._writableState) {
        _this._writableState.errorEmitted = true;
      }
    } else if (cb) {
      cb(err);
    }
  });

  return this;
}

function undestroy() {
  if (this._readableState) {
    this._readableState.destroyed = false;
    this._readableState.reading = false;
    this._readableState.ended = false;
    this._readableState.endEmitted = false;
  }

  if (this._writableState) {
    this._writableState.destroyed = false;
    this._writableState.ended = false;
    this._writableState.ending = false;
    this._writableState.finished = false;
    this._writableState.errorEmitted = false;
  }
}

function emitErrorNT(self, err) {
  self.emit('error', err);
}

module.exports = {
  destroy: destroy,
  undestroy: undestroy
};

/***/ }),

/***/ "./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/stream-browser.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/stream-browserify/node_modules/readable-stream/lib/internal/streams/stream-browser.js ***!
  \************************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! events */ "./node_modules/events/events.js").EventEmitter;


/***/ }),

/***/ "./node_modules/stream-browserify/node_modules/readable-stream/passthrough.js":
/*!************************************************************************************!*\
  !*** ./node_modules/stream-browserify/node_modules/readable-stream/passthrough.js ***!
  \************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./readable */ "./node_modules/stream-browserify/node_modules/readable-stream/readable-browser.js").PassThrough


/***/ }),

/***/ "./node_modules/stream-browserify/node_modules/readable-stream/readable-browser.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/stream-browserify/node_modules/readable-stream/readable-browser.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

exports = module.exports = __webpack_require__(/*! ./lib/_stream_readable.js */ "./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_readable.js");
exports.Stream = exports;
exports.Readable = exports;
exports.Writable = __webpack_require__(/*! ./lib/_stream_writable.js */ "./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js");
exports.Duplex = __webpack_require__(/*! ./lib/_stream_duplex.js */ "./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_duplex.js");
exports.Transform = __webpack_require__(/*! ./lib/_stream_transform.js */ "./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_transform.js");
exports.PassThrough = __webpack_require__(/*! ./lib/_stream_passthrough.js */ "./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_passthrough.js");


/***/ }),

/***/ "./node_modules/stream-browserify/node_modules/readable-stream/transform.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/stream-browserify/node_modules/readable-stream/transform.js ***!
  \**********************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./readable */ "./node_modules/stream-browserify/node_modules/readable-stream/readable-browser.js").Transform


/***/ }),

/***/ "./node_modules/stream-browserify/node_modules/readable-stream/writable-browser.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/stream-browserify/node_modules/readable-stream/writable-browser.js ***!
  \*****************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

module.exports = __webpack_require__(/*! ./lib/_stream_writable.js */ "./node_modules/stream-browserify/node_modules/readable-stream/lib/_stream_writable.js");


/***/ }),

/***/ "./node_modules/style-loader/lib/addStyles.js":
/*!****************************************************!*\
  !*** ./node_modules/style-loader/lib/addStyles.js ***!
  \****************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/*
	MIT License http://www.opensource.org/licenses/mit-license.php
	Author Tobias Koppers @sokra
*/

var stylesInDom = {};

var	memoize = function (fn) {
	var memo;

	return function () {
		if (typeof memo === "undefined") memo = fn.apply(this, arguments);
		return memo;
	};
};

var isOldIE = memoize(function () {
	// Test for IE <= 9 as proposed by Browserhacks
	// @see http://browserhacks.com/#hack-e71d8692f65334173fee715c222cb805
	// Tests for existence of standard globals is to allow style-loader
	// to operate correctly into non-standard environments
	// @see https://github.com/webpack-contrib/style-loader/issues/177
	return window && document && document.all && !window.atob;
});

var getTarget = function (target) {
  return document.querySelector(target);
};

var getElement = (function (fn) {
	var memo = {};

	return function(target) {
                // If passing function in options, then use it for resolve "head" element.
                // Useful for Shadow Root style i.e
                // {
                //   insertInto: function () { return document.querySelector("#foo").shadowRoot }
                // }
                if (typeof target === 'function') {
                        return target();
                }
                if (typeof memo[target] === "undefined") {
			var styleTarget = getTarget.call(this, target);
			// Special case to return head of iframe instead of iframe itself
			if (window.HTMLIFrameElement && styleTarget instanceof window.HTMLIFrameElement) {
				try {
					// This will throw an exception if access to iframe is blocked
					// due to cross-origin restrictions
					styleTarget = styleTarget.contentDocument.head;
				} catch(e) {
					styleTarget = null;
				}
			}
			memo[target] = styleTarget;
		}
		return memo[target]
	};
})();

var singleton = null;
var	singletonCounter = 0;
var	stylesInsertedAtTop = [];

var	fixUrls = __webpack_require__(/*! ./urls */ "./node_modules/style-loader/lib/urls.js");

module.exports = function(list, options) {
	if (typeof DEBUG !== "undefined" && DEBUG) {
		if (typeof document !== "object") throw new Error("The style-loader cannot be used in a non-browser environment");
	}

	options = options || {};

	options.attrs = typeof options.attrs === "object" ? options.attrs : {};

	// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>
	// tags it will allow on a page
	if (!options.singleton && typeof options.singleton !== "boolean") options.singleton = isOldIE();

	// By default, add <style> tags to the <head> element
        if (!options.insertInto) options.insertInto = "head";

	// By default, add <style> tags to the bottom of the target
	if (!options.insertAt) options.insertAt = "bottom";

	var styles = listToStyles(list, options);

	addStylesToDom(styles, options);

	return function update (newList) {
		var mayRemove = [];

		for (var i = 0; i < styles.length; i++) {
			var item = styles[i];
			var domStyle = stylesInDom[item.id];

			domStyle.refs--;
			mayRemove.push(domStyle);
		}

		if(newList) {
			var newStyles = listToStyles(newList, options);
			addStylesToDom(newStyles, options);
		}

		for (var i = 0; i < mayRemove.length; i++) {
			var domStyle = mayRemove[i];

			if(domStyle.refs === 0) {
				for (var j = 0; j < domStyle.parts.length; j++) domStyle.parts[j]();

				delete stylesInDom[domStyle.id];
			}
		}
	};
};

function addStylesToDom (styles, options) {
	for (var i = 0; i < styles.length; i++) {
		var item = styles[i];
		var domStyle = stylesInDom[item.id];

		if(domStyle) {
			domStyle.refs++;

			for(var j = 0; j < domStyle.parts.length; j++) {
				domStyle.parts[j](item.parts[j]);
			}

			for(; j < item.parts.length; j++) {
				domStyle.parts.push(addStyle(item.parts[j], options));
			}
		} else {
			var parts = [];

			for(var j = 0; j < item.parts.length; j++) {
				parts.push(addStyle(item.parts[j], options));
			}

			stylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};
		}
	}
}

function listToStyles (list, options) {
	var styles = [];
	var newStyles = {};

	for (var i = 0; i < list.length; i++) {
		var item = list[i];
		var id = options.base ? item[0] + options.base : item[0];
		var css = item[1];
		var media = item[2];
		var sourceMap = item[3];
		var part = {css: css, media: media, sourceMap: sourceMap};

		if(!newStyles[id]) styles.push(newStyles[id] = {id: id, parts: [part]});
		else newStyles[id].parts.push(part);
	}

	return styles;
}

function insertStyleElement (options, style) {
	var target = getElement(options.insertInto)

	if (!target) {
		throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");
	}

	var lastStyleElementInsertedAtTop = stylesInsertedAtTop[stylesInsertedAtTop.length - 1];

	if (options.insertAt === "top") {
		if (!lastStyleElementInsertedAtTop) {
			target.insertBefore(style, target.firstChild);
		} else if (lastStyleElementInsertedAtTop.nextSibling) {
			target.insertBefore(style, lastStyleElementInsertedAtTop.nextSibling);
		} else {
			target.appendChild(style);
		}
		stylesInsertedAtTop.push(style);
	} else if (options.insertAt === "bottom") {
		target.appendChild(style);
	} else if (typeof options.insertAt === "object" && options.insertAt.before) {
		var nextSibling = getElement(options.insertInto + " " + options.insertAt.before);
		target.insertBefore(style, nextSibling);
	} else {
		throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");
	}
}

function removeStyleElement (style) {
	if (style.parentNode === null) return false;
	style.parentNode.removeChild(style);

	var idx = stylesInsertedAtTop.indexOf(style);
	if(idx >= 0) {
		stylesInsertedAtTop.splice(idx, 1);
	}
}

function createStyleElement (options) {
	var style = document.createElement("style");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}

	addAttrs(style, options.attrs);
	insertStyleElement(options, style);

	return style;
}

function createLinkElement (options) {
	var link = document.createElement("link");

	if(options.attrs.type === undefined) {
		options.attrs.type = "text/css";
	}
	options.attrs.rel = "stylesheet";

	addAttrs(link, options.attrs);
	insertStyleElement(options, link);

	return link;
}

function addAttrs (el, attrs) {
	Object.keys(attrs).forEach(function (key) {
		el.setAttribute(key, attrs[key]);
	});
}

function addStyle (obj, options) {
	var style, update, remove, result;

	// If a transform function was defined, run it on the css
	if (options.transform && obj.css) {
	    result = options.transform(obj.css);

	    if (result) {
	    	// If transform returns a value, use that instead of the original css.
	    	// This allows running runtime transformations on the css.
	    	obj.css = result;
	    } else {
	    	// If the transform function returns a falsy value, don't add this css.
	    	// This allows conditional loading of css
	    	return function() {
	    		// noop
	    	};
	    }
	}

	if (options.singleton) {
		var styleIndex = singletonCounter++;

		style = singleton || (singleton = createStyleElement(options));

		update = applyToSingletonTag.bind(null, style, styleIndex, false);
		remove = applyToSingletonTag.bind(null, style, styleIndex, true);

	} else if (
		obj.sourceMap &&
		typeof URL === "function" &&
		typeof URL.createObjectURL === "function" &&
		typeof URL.revokeObjectURL === "function" &&
		typeof Blob === "function" &&
		typeof btoa === "function"
	) {
		style = createLinkElement(options);
		update = updateLink.bind(null, style, options);
		remove = function () {
			removeStyleElement(style);

			if(style.href) URL.revokeObjectURL(style.href);
		};
	} else {
		style = createStyleElement(options);
		update = applyToTag.bind(null, style);
		remove = function () {
			removeStyleElement(style);
		};
	}

	update(obj);

	return function updateStyle (newObj) {
		if (newObj) {
			if (
				newObj.css === obj.css &&
				newObj.media === obj.media &&
				newObj.sourceMap === obj.sourceMap
			) {
				return;
			}

			update(obj = newObj);
		} else {
			remove();
		}
	};
}

var replaceText = (function () {
	var textStore = [];

	return function (index, replacement) {
		textStore[index] = replacement;

		return textStore.filter(Boolean).join('\n');
	};
})();

function applyToSingletonTag (style, index, remove, obj) {
	var css = remove ? "" : obj.css;

	if (style.styleSheet) {
		style.styleSheet.cssText = replaceText(index, css);
	} else {
		var cssNode = document.createTextNode(css);
		var childNodes = style.childNodes;

		if (childNodes[index]) style.removeChild(childNodes[index]);

		if (childNodes.length) {
			style.insertBefore(cssNode, childNodes[index]);
		} else {
			style.appendChild(cssNode);
		}
	}
}

function applyToTag (style, obj) {
	var css = obj.css;
	var media = obj.media;

	if(media) {
		style.setAttribute("media", media)
	}

	if(style.styleSheet) {
		style.styleSheet.cssText = css;
	} else {
		while(style.firstChild) {
			style.removeChild(style.firstChild);
		}

		style.appendChild(document.createTextNode(css));
	}
}

function updateLink (link, options, obj) {
	var css = obj.css;
	var sourceMap = obj.sourceMap;

	/*
		If convertToAbsoluteUrls isn't defined, but sourcemaps are enabled
		and there is no publicPath defined then lets turn convertToAbsoluteUrls
		on by default.  Otherwise default to the convertToAbsoluteUrls option
		directly
	*/
	var autoFixUrls = options.convertToAbsoluteUrls === undefined && sourceMap;

	if (options.convertToAbsoluteUrls || autoFixUrls) {
		css = fixUrls(css);
	}

	if (sourceMap) {
		// http://stackoverflow.com/a/26603875
		css += "\n/*# sourceMappingURL=data:application/json;base64," + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + " */";
	}

	var blob = new Blob([css], { type: "text/css" });

	var oldSrc = link.href;

	link.href = URL.createObjectURL(blob);

	if(oldSrc) URL.revokeObjectURL(oldSrc);
}


/***/ }),

/***/ "./node_modules/style-loader/lib/urls.js":
/*!***********************************************!*\
  !*** ./node_modules/style-loader/lib/urls.js ***!
  \***********************************************/
/*! no static exports found */
/***/ (function(module, exports) {


/**
 * When source maps are enabled, `style-loader` uses a link element with a data-uri to
 * embed the css on the page. This breaks all relative urls because now they are relative to a
 * bundle instead of the current page.
 *
 * One solution is to only use full urls, but that may be impossible.
 *
 * Instead, this function "fixes" the relative urls to be absolute according to the current page location.
 *
 * A rudimentary test suite is located at `test/fixUrls.js` and can be run via the `npm test` command.
 *
 */

module.exports = function (css) {
  // get current location
  var location = typeof window !== "undefined" && window.location;

  if (!location) {
    throw new Error("fixUrls requires window.location");
  }

	// blank or null?
	if (!css || typeof css !== "string") {
	  return css;
  }

  var baseUrl = location.protocol + "//" + location.host;
  var currentDir = baseUrl + location.pathname.replace(/\/[^\/]*$/, "/");

	// convert each url(...)
	/*
	This regular expression is just a way to recursively match brackets within
	a string.

	 /url\s*\(  = Match on the word "url" with any whitespace after it and then a parens
	   (  = Start a capturing group
	     (?:  = Start a non-capturing group
	         [^)(]  = Match anything that isn't a parentheses
	         |  = OR
	         \(  = Match a start parentheses
	             (?:  = Start another non-capturing groups
	                 [^)(]+  = Match anything that isn't a parentheses
	                 |  = OR
	                 \(  = Match a start parentheses
	                     [^)(]*  = Match anything that isn't a parentheses
	                 \)  = Match a end parentheses
	             )  = End Group
              *\) = Match anything and then a close parens
          )  = Close non-capturing group
          *  = Match anything
       )  = Close capturing group
	 \)  = Match a close parens

	 /gi  = Get all matches, not the first.  Be case insensitive.
	 */
	var fixedCss = css.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi, function(fullMatch, origUrl) {
		// strip quotes (if they exist)
		var unquotedOrigUrl = origUrl
			.trim()
			.replace(/^"(.*)"$/, function(o, $1){ return $1; })
			.replace(/^'(.*)'$/, function(o, $1){ return $1; });

		// already a full url? no change
		if (/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(unquotedOrigUrl)) {
		  return fullMatch;
		}

		// convert the url to a full url
		var newUrl;

		if (unquotedOrigUrl.indexOf("//") === 0) {
		  	//TODO: should we add protocol?
			newUrl = unquotedOrigUrl;
		} else if (unquotedOrigUrl.indexOf("/") === 0) {
			// path should be relative to the base url
			newUrl = baseUrl + unquotedOrigUrl; // already starts with '/'
		} else {
			// path should be relative to current directory
			newUrl = currentDir + unquotedOrigUrl.replace(/^\.\//, ""); // Strip leading './'
		}

		// send back the fixed url(...)
		return "url(" + JSON.stringify(newUrl) + ")";
	});

	// send back the fixed css
	return fixedCss;
};


/***/ }),

/***/ "./node_modules/timers-browserify/main.js":
/*!************************************************!*\
  !*** ./node_modules/timers-browserify/main.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {var scope = (typeof global !== "undefined" && global) ||
            (typeof self !== "undefined" && self) ||
            window;
var apply = Function.prototype.apply;

// DOM APIs, for completeness

exports.setTimeout = function() {
  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);
};
exports.setInterval = function() {
  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);
};
exports.clearTimeout =
exports.clearInterval = function(timeout) {
  if (timeout) {
    timeout.close();
  }
};

function Timeout(id, clearFn) {
  this._id = id;
  this._clearFn = clearFn;
}
Timeout.prototype.unref = Timeout.prototype.ref = function() {};
Timeout.prototype.close = function() {
  this._clearFn.call(scope, this._id);
};

// Does not start the time, just sets up the members needed.
exports.enroll = function(item, msecs) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = msecs;
};

exports.unenroll = function(item) {
  clearTimeout(item._idleTimeoutId);
  item._idleTimeout = -1;
};

exports._unrefActive = exports.active = function(item) {
  clearTimeout(item._idleTimeoutId);

  var msecs = item._idleTimeout;
  if (msecs >= 0) {
    item._idleTimeoutId = setTimeout(function onTimeout() {
      if (item._onTimeout)
        item._onTimeout();
    }, msecs);
  }
};

// setimmediate attaches itself to the global object
__webpack_require__(/*! setimmediate */ "./node_modules/setimmediate/setImmediate.js");
// On some exotic environments, it's not clear which object `setimmediate` was
// able to install onto.  Search each possibility in the same order as the
// `setimmediate` library.
exports.setImmediate = (typeof self !== "undefined" && self.setImmediate) ||
                       (typeof global !== "undefined" && global.setImmediate) ||
                       (this && this.setImmediate);
exports.clearImmediate = (typeof self !== "undefined" && self.clearImmediate) ||
                         (typeof global !== "undefined" && global.clearImmediate) ||
                         (this && this.clearImmediate);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/util-deprecate/browser.js":
/*!************************************************!*\
  !*** ./node_modules/util-deprecate/browser.js ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(global) {
/**
 * Module exports.
 */

module.exports = deprecate;

/**
 * Mark that a method should not be used.
 * Returns a modified function which warns once by default.
 *
 * If `localStorage.noDeprecation = true` is set, then it is a no-op.
 *
 * If `localStorage.throwDeprecation = true` is set, then deprecated functions
 * will throw an Error when invoked.
 *
 * If `localStorage.traceDeprecation = true` is set, then deprecated functions
 * will invoke `console.trace()` instead of `console.error()`.
 *
 * @param {Function} fn - the function to deprecate
 * @param {String} msg - the string to print to the console when `fn` is invoked
 * @returns {Function} a new "deprecated" version of `fn`
 * @api public
 */

function deprecate (fn, msg) {
  if (config('noDeprecation')) {
    return fn;
  }

  var warned = false;
  function deprecated() {
    if (!warned) {
      if (config('throwDeprecation')) {
        throw new Error(msg);
      } else if (config('traceDeprecation')) {
        console.trace(msg);
      } else {
        console.warn(msg);
      }
      warned = true;
    }
    return fn.apply(this, arguments);
  }

  return deprecated;
}

/**
 * Checks `localStorage` for boolean values for the given `name`.
 *
 * @param {String} name
 * @returns {Boolean}
 * @api private
 */

function config (name) {
  // accessing global.localStorage can trigger a DOMException in sandboxed iframes
  try {
    if (!global.localStorage) return false;
  } catch (_) {
    return false;
  }
  var val = global.localStorage[name];
  if (null == val) return false;
  return String(val).toLowerCase() === 'true';
}

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../webpack/buildin/global.js */ "./node_modules/webpack/buildin/global.js")))

/***/ }),

/***/ "./node_modules/vm-browserify/index.js":
/*!*********************************************!*\
  !*** ./node_modules/vm-browserify/index.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

var indexOf = __webpack_require__(/*! indexof */ "./node_modules/indexof/index.js");

var Object_keys = function (obj) {
    if (Object.keys) return Object.keys(obj)
    else {
        var res = [];
        for (var key in obj) res.push(key)
        return res;
    }
};

var forEach = function (xs, fn) {
    if (xs.forEach) return xs.forEach(fn)
    else for (var i = 0; i < xs.length; i++) {
        fn(xs[i], i, xs);
    }
};

var defineProp = (function() {
    try {
        Object.defineProperty({}, '_', {});
        return function(obj, name, value) {
            Object.defineProperty(obj, name, {
                writable: true,
                enumerable: false,
                configurable: true,
                value: value
            })
        };
    } catch(e) {
        return function(obj, name, value) {
            obj[name] = value;
        };
    }
}());

var globals = ['Array', 'Boolean', 'Date', 'Error', 'EvalError', 'Function',
'Infinity', 'JSON', 'Math', 'NaN', 'Number', 'Object', 'RangeError',
'ReferenceError', 'RegExp', 'String', 'SyntaxError', 'TypeError', 'URIError',
'decodeURI', 'decodeURIComponent', 'encodeURI', 'encodeURIComponent', 'escape',
'eval', 'isFinite', 'isNaN', 'parseFloat', 'parseInt', 'undefined', 'unescape'];

function Context() {}
Context.prototype = {};

var Script = exports.Script = function NodeScript (code) {
    if (!(this instanceof Script)) return new Script(code);
    this.code = code;
};

Script.prototype.runInContext = function (context) {
    if (!(context instanceof Context)) {
        throw new TypeError("needs a 'context' argument.");
    }
    
    var iframe = document.createElement('iframe');
    if (!iframe.style) iframe.style = {};
    iframe.style.display = 'none';
    
    document.body.appendChild(iframe);
    
    var win = iframe.contentWindow;
    var wEval = win.eval, wExecScript = win.execScript;

    if (!wEval && wExecScript) {
        // win.eval() magically appears when this is called in IE:
        wExecScript.call(win, 'null');
        wEval = win.eval;
    }
    
    forEach(Object_keys(context), function (key) {
        win[key] = context[key];
    });
    forEach(globals, function (key) {
        if (context[key]) {
            win[key] = context[key];
        }
    });
    
    var winKeys = Object_keys(win);

    var res = wEval.call(win, this.code);
    
    forEach(Object_keys(win), function (key) {
        // Avoid copying circular objects like `top` and `window` by only
        // updating existing context properties or new properties in the `win`
        // that was only introduced after the eval.
        if (key in context || indexOf(winKeys, key) === -1) {
            context[key] = win[key];
        }
    });

    forEach(globals, function (key) {
        if (!(key in context)) {
            defineProp(context, key, win[key]);
        }
    });
    
    document.body.removeChild(iframe);
    
    return res;
};

Script.prototype.runInThisContext = function () {
    return eval(this.code); // maybe...
};

Script.prototype.runInNewContext = function (context) {
    var ctx = Script.createContext(context);
    var res = this.runInContext(ctx);

    forEach(Object_keys(ctx), function (key) {
        context[key] = ctx[key];
    });

    return res;
};

forEach(Object_keys(Script.prototype), function (name) {
    exports[name] = Script[name] = function (code) {
        var s = Script(code);
        return s[name].apply(s, [].slice.call(arguments, 1));
    };
});

exports.createScript = function (code) {
    return exports.Script(code);
};

exports.createContext = Script.createContext = function (context) {
    var copy = new Context();
    if(typeof context === 'object') {
        forEach(Object_keys(context), function (key) {
            copy[key] = context[key];
        });
    }
    return copy;
};


/***/ }),

/***/ "./node_modules/webpack/buildin/global.js":
/*!***********************************!*\
  !*** (webpack)/buildin/global.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

var g;

// This works in non-strict mode
g = (function() {
	return this;
})();

try {
	// This works if eval is allowed (see CSP)
	g = g || Function("return this")() || (1, eval)("this");
} catch (e) {
	// This works if the window reference is available
	if (typeof window === "object") g = window;
}

// g can still be undefined, but nothing to do about it...
// We return undefined, instead of nothing here, so it's
// easier to handle this case. if(!global) { ...}

module.exports = g;


/***/ }),

/***/ "./node_modules/webpack/buildin/module.js":
/*!***********************************!*\
  !*** (webpack)/buildin/module.js ***!
  \***********************************/
/*! no static exports found */
/***/ (function(module, exports) {

module.exports = function(module) {
	if (!module.webpackPolyfill) {
		module.deprecate = function() {};
		module.paths = [];
		// module.parent = undefined by default
		if (!module.children) module.children = [];
		Object.defineProperty(module, "loaded", {
			enumerable: true,
			get: function() {
				return module.l;
			}
		});
		Object.defineProperty(module, "id", {
			enumerable: true,
			get: function() {
				return module.i;
			}
		});
		module.webpackPolyfill = 1;
	}
	return module;
};


/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "./node_modules/jquery/dist/jquery.js");
/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _js_ScannerBase__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./js/ScannerBase */ "./src/js/ScannerBase.js");
/* harmony import */ var _scss_style_scss__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./scss/style.scss */ "./src/scss/style.scss");
/* harmony import */ var _scss_style_scss__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_scss_style_scss__WEBPACK_IMPORTED_MODULE_2__);





for(let [tab_title, tab_name] of [
	['NFA', 'nfa_tab'],
	['DFA', 'dfa_tab'],
	['OFA', 'ofa_tab'],
	['AST', 'ast_tab'],
]) {
	jquery__WEBPACK_IMPORTED_MODULE_0___default()('#tab_bar').append(
		jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<li name=${tab_name}></li>`).append(
			jquery__WEBPACK_IMPORTED_MODULE_0___default()(`<a class="tablinks" href="javascript:void(0);">${tab_title}</a>`).on('click', function() {
				openTab(tab_name);
			})
		)
	);
}

jquery__WEBPACK_IMPORTED_MODULE_0___default()('#generate').on('click', function() {
	_js_ScannerBase__WEBPACK_IMPORTED_MODULE_1__["default"].serialReset();

	var regexstr = jquery__WEBPACK_IMPORTED_MODULE_0___default()('#regexstr').val();
	var ast = _js_ScannerBase__WEBPACK_IMPORTED_MODULE_1__["default"].makeASTFromRegexStr(regexstr);
	var nfa = _js_ScannerBase__WEBPACK_IMPORTED_MODULE_1__["default"].makeNFAFromAST(ast);
	var dfa = _js_ScannerBase__WEBPACK_IMPORTED_MODULE_1__["default"].makeDFAFromNFA(nfa);
	var ofa = _js_ScannerBase__WEBPACK_IMPORTED_MODULE_1__["default"].makeOFAFromDFA(dfa);

	jquery__WEBPACK_IMPORTED_MODULE_0___default()('#nfa').html(
		_js_ScannerBase__WEBPACK_IMPORTED_MODULE_1__["default"].generateDotImageOfNFA(nfa)
	);
	jquery__WEBPACK_IMPORTED_MODULE_0___default()('#dfa').html(
		_js_ScannerBase__WEBPACK_IMPORTED_MODULE_1__["default"].generateDotImageOfDFA(dfa)
	);
	jquery__WEBPACK_IMPORTED_MODULE_0___default()('#ofa').html(
		_js_ScannerBase__WEBPACK_IMPORTED_MODULE_1__["default"].generateDotImageOfOFA(ofa)
	);
	jquery__WEBPACK_IMPORTED_MODULE_0___default()('#ast').html(
		_js_ScannerBase__WEBPACK_IMPORTED_MODULE_1__["default"].generateDotImageOfAST(ast)
	);

	document.getElementsByClassName('tablinks')[0].click();
});

function openTab(tabname) {
	jquery__WEBPACK_IMPORTED_MODULE_0___default()('.tabcontent').css('display', 'none');
	jquery__WEBPACK_IMPORTED_MODULE_0___default()('.tablinks').removeClass('active');
	jquery__WEBPACK_IMPORTED_MODULE_0___default()('#'+tabname).css('display', 'block');
	jquery__WEBPACK_IMPORTED_MODULE_0___default()('#tab_ul').find('[name='+tabname+']').addClass('active');
}


/***/ }),

/***/ "./src/js/AST.js":
/*!***********************!*\
  !*** ./src/js/AST.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return AST; });
/* harmony import */ var _OpType__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./OpType */ "./src/js/OpType.js");


function AST(operator, operands, regexContent) {
	this.id = AST.serialNo++;
	this.operator = operator;
	this.operands = operands;
	this.regexContent = regexContent;
} {
	AST.serialNo = 0;
	AST.prototype.withExtraParam = function(extraParam) {
		this.extraParam = extraParam;
		return this;
	};
	AST.prototype.traversal = function(f_start, f_end) {
		traversalSub(this);
		function traversalSub(ast) {
			f_start(ast);
			if(ast.operator.operandCount !== undefined) 
				for(let operand of ast.operands) {
					traversalSub(operand);
				}
			f_end(ast);
		}
	};
	AST.prototype.toRegexString = function() {
		switch(this.operator) {
		case _OpType__WEBPACK_IMPORTED_MODULE_0__["default"].NONE:
			return undefined;
		case _OpType__WEBPACK_IMPORTED_MODULE_0__["default"].CHAR:
			return '\'' + this.extraParam + '\'';
		case _OpType__WEBPACK_IMPORTED_MODULE_0__["default"].LAMBDA:
			return 'λ';
		case _OpType__WEBPACK_IMPORTED_MODULE_0__["default"].OR:
			return '|';
		case _OpType__WEBPACK_IMPORTED_MODULE_0__["default"].STAR:
			return '*';
		case _OpType__WEBPACK_IMPORTED_MODULE_0__["default"].PLUS:
			return '+';
		case _OpType__WEBPACK_IMPORTED_MODULE_0__["default"].QMARK:
			return '?';
		case _OpType__WEBPACK_IMPORTED_MODULE_0__["default"].TIMEOF:
			return this.extraParam;
		case _OpType__WEBPACK_IMPORTED_MODULE_0__["default"].CONCAT:
			return 'CONCAT';
		default:
			return undefined;
		}
	};
}


/***/ }),

/***/ "./src/js/CompoundState.js":
/*!*********************************!*\
  !*** ./src/js/CompoundState.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return CompoundState; });
/* harmony import */ var _Transition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Transition */ "./src/js/Transition.js");


function CompoundState(subStates) {
	this.id = CompoundState.serialNo++;
	this.subStates = subStates;
	this.isAccepting = undefined;
	this.transitions = [];
	this.transitionsMap = new Map();
} {
	CompoundState.serialNo = 0;
	CompoundState.prototype.linkTo = function(to, condition) {
		let tr = new _Transition__WEBPACK_IMPORTED_MODULE_0__["default"](this, to, condition);
		this.transitions.push(tr);
		this.transitionsMap.set(condition, to);
		return tr;
	};
	CompoundState.prototype.subStateReprensentation = function(to, condition) {
		return Array.from(this.subStates).map(function(e){return e.id;}).sort().join(',');
	};
}


/***/ }),

/***/ "./src/js/DFA.js":
/*!***********************!*\
  !*** ./src/js/DFA.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return DFA; });
function DFA() {
	this.id = DFA.serialNo++;
	this.startState = undefined;
	this.states = [];
	this.transitions = [];
} {
	DFA.serialNo = 0;
}


/***/ }),

/***/ "./src/js/GroppingState.js":
/*!*********************************!*\
  !*** ./src/js/GroppingState.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return GroppingState; });
function GroppingState(subStates, isAccepting) {
	this.id = GroppingState.serialNo++;
	this.subStates = subStates;
	this.isAccepting = isAccepting;
	this.transitionsMap = new Map();
	this.subStatesLabel = "";
	let self = this;
	for(let state of subStates) {
		state.group = self;
	}
} {
	GroppingState.serialNo = 0;
	GroppingState.prototype.overridelinkTo = function(to, condition) {
		if(to !== null)
			this.transitionsMap.set(condition, to);
		else
			this.transitionsMap.delete(condition);
	};
	GroppingState.prototype.subStateReprensentation = function(to, condition) {
		return Array.from(this.subStates).map(function(e){return e.id;}).sort().join(',');
	};
	// GroppingState.prototype.traversal = function() {
	// 	let traversedStates = [];

	// 	traversalSub(this);

	// 	for(let state of traversedStates) {
	// 		delete state._isTraversed;
	// 	});

	// 	return {
	// 		traversedStates: traversedStates
	// 	};

	// 	function traversalSub(state) {
	// 		if(state._isTraversed)
	// 			return;
	// 		state._isTraversed = true;
	// 		traversedStates.push(state);
	// 		state.transitionsMap.forEach(function(to, condition) {
	// 			let nextState = transition.to;
	// 			traversalSub(nextState);
	// 		});
	// 	}
	// };
}

/***/ }),

/***/ "./src/js/NFA.js":
/*!***********************!*\
  !*** ./src/js/NFA.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return NFA; });
function NFA(type) {
	this.id = NFA.serialNo++;
	this.type = type;
	this.startState = undefined;
	this.finalState = undefined;
	this.subNFA = [];
	this.addedStates = [];
	this.addedTransitions = [];
	this.regexContent = undefined;
} {
	NFA.serialNo = 0;
	NFA.prototype.traversal = function(f_start, f_end) {
		traversalSub(this);
		function traversalSub(nfa) {
			f_start(nfa);
			for(let nextNFA of nfa.subNFA) {
				traversalSub(nextNFA);
			}
			f_end(nfa);
		}
	};
}


/***/ }),

/***/ "./src/js/OFA.js":
/*!***********************!*\
  !*** ./src/js/OFA.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return OFA; });
function OFA() {
	this.id = OFA.serialNo++;
	this.startState = undefined;
	this.states = [];
	this.transitions = [];
} {
	OFA.serialNo = 0;
}


/***/ }),

/***/ "./src/js/OpType.js":
/*!**************************!*\
  !*** ./src/js/OpType.js ***!
  \**************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
let OpType = (function(){
	function OpType(name, precIn, precOut, opCount) {
		this.name = name;
		if(precIn !== undefined || precOut !== undefined) {
			this.precedence = {};
			if(precIn !== undefined)
				this.precedence.IN = precIn;
			if(precOut !== undefined)
				this.precedence.OUT = precOut;
		}
		if(opCount !== undefined)
			this.operandCount = opCount;
	}
	OpType.prototype.toString = function() {
		return 'OpType.' + this.name;
	};
	let precedence = {
		OUT: {
			LPARAM: 10, RPARAM: 2,
			STAR: 8, PLUS: 8, QMARK: 8, TIMEOF: 8,
			CONCAT: 6,
			OR: 4,
			END_OF_REGEX: -1
		},
		IN: {
			LPARAM: 1,
			STAR: 9, PLUS: 9, QMARK: 9, TIMEOF: 9,
			CONCAT: 7,
			OR: 5
		}
	};
	let operandCount = {
		OR: 2,
		STAR: 1,
		PLUS: 1,
		QMARK: 1,
		TIMEOF: 1,
		CONCAT: 2
	};

	let obj = {};
	[
		'NONE',
		'CHAR',
		'CHARSET',
		'LAMBDA',
		'LPARAM',
		'RPARAM',
		'OR',
		'STAR',
		'PLUS',
		'QMARK',
		'TIMEOF',
		'CONCAT',
		'END_OF_REGEX'
	].forEach(function(e) {
		obj[e] = new OpType(
			e,
			precedence.IN[e],
			precedence.OUT[e],
			operandCount[e]
		);
	});
	return obj;
})();

/* harmony default export */ __webpack_exports__["default"] = (OpType);


/***/ }),

/***/ "./src/js/ScannerBase.js":
/*!*******************************!*\
  !*** ./src/js/ScannerBase.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _polyfills_Array_flatMap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polyfills/Array.flatMap */ "./src/js/polyfills/Array.flatMap.js");
/* harmony import */ var _polyfills_Array_flatMap__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_polyfills_Array_flatMap__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _polyfills_Set_equals__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./polyfills/Set.equals */ "./src/js/polyfills/Set.equals.js");
/* harmony import */ var _polyfills_Set_equals__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_polyfills_Set_equals__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _AST__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AST */ "./src/js/AST.js");
/* harmony import */ var _NFA__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./NFA */ "./src/js/NFA.js");
/* harmony import */ var _DFA__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DFA */ "./src/js/DFA.js");
/* harmony import */ var _OFA__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./OFA */ "./src/js/OFA.js");
/* harmony import */ var _SimpleState__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./SimpleState */ "./src/js/SimpleState.js");
/* harmony import */ var _CompoundState__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./CompoundState */ "./src/js/CompoundState.js");
/* harmony import */ var _GroppingState__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./GroppingState */ "./src/js/GroppingState.js");
/* harmony import */ var _OpType__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./OpType */ "./src/js/OpType.js");
/* harmony import */ var _lib_viz__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./lib/viz */ "./src/js/lib/viz.js");
/* harmony import */ var _lib_viz__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_lib_viz__WEBPACK_IMPORTED_MODULE_10__);

















const ScannerBase = {
	serialReset: function(no) {
		no = no || 0;
		_AST__WEBPACK_IMPORTED_MODULE_2__["default"].serialNo = no;
		_NFA__WEBPACK_IMPORTED_MODULE_3__["default"].serialNo = no;
		_DFA__WEBPACK_IMPORTED_MODULE_4__["default"].serialNo = no;
		_OFA__WEBPACK_IMPORTED_MODULE_5__["default"].serialNo = no;
		_SimpleState__WEBPACK_IMPORTED_MODULE_6__["default"].serialNo = no;
		_CompoundState__WEBPACK_IMPORTED_MODULE_7__["default"].serialNo = no;
		_GroppingState__WEBPACK_IMPORTED_MODULE_8__["default"].serialNo = no;
	},

	makeASTFromRegexStr: function(regexstr) {
		let operandStack = [];
		let operatorStack = [];

		operatorStack.opush = function(op) {
			while(this.length !== 0) {
				let inOp = this.pop(), outOp = op;
				if(inOp.precedence.IN > outOp.precedence.OUT) {
					let operands = [];
					for(let i=0;i<inOp.operandCount;i++)
						operands.unshift(operandStack.pop());
					operandStack.push(buildOperatorAST(inOp, operands));
				} else {
					this.push(inOp);
					break;
				}
			}
			this.push(op);
		};

		let prev_op = _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].NONE;

		regexstr.split('').forEach(function(c) {
			if(c === '(') {
				checkConcat(_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].LPARAM);
				operatorStack.opush(prev_op = _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].LPARAM);
			} else if(c === ')') {
				checkLambda(_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].RPARAM);
				operatorStack.opush(prev_op = _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].RPARAM);
				console.assert(operatorStack.pop() === _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].RPARAM);
				console.assert(operatorStack.pop() === _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].LPARAM);
			} else if(c === '|') {
				checkLambda(_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].OR);
				operatorStack.opush(prev_op = _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].OR);
			} else if(c === '*') {
				operatorStack.opush(prev_op = _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].STAR);
			} else if(c === '+') {
				operatorStack.opush(prev_op = _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].PLUS);
			} else if(c === '?') {
				operatorStack.opush(prev_op = _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].QMARK);
			} else {
				checkConcat(_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].CHAR);
				operandStack.push(buildAtomAST(c));
				prev_op = _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].CHAR;
			}
		});
		operatorStack.opush(_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].END_OF_REGEX);

		return operandStack[0] || buildAtomAST(null);

		function checkLambda(currentOp) {
			if(hasALambdaBetween(prev_op, currentOp))
				operandStack.push(buildAtomAST(null));
		}
		function checkConcat(currentOp) {
			if(hasAConcateBetween(prev_op, currentOp))
				operatorStack.opush(_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].CONCAT);
		}
		function hasAConcateBetween(left, right) {
			let L = [
				_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].CHAR,
				_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].RPARAM,
				_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].LBRACK,
				_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].STAR,
				_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].PLUS,
				_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].QMARK,
				_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].TIMEOF
			];
			let R = [
				_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].CHAR,
				_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].LPARAM,
				_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].LBRACK
			];

			return L.includes(left) && R.includes(right);
		}
		function hasALambdaBetween(left, right) {
			let L = [
				_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].NONE,
				_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].LPARAM,
				_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].OR
			];
			let R = [
				_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].OR,
				_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].RPARAM
			];

			return L.includes(left) && R.includes(right);
		}

		function buildAtomAST(c) {
			if(c !== null)
				return charElement(c);
			else
				return lambdaElement();

			function charElement(c) {
				return new _AST__WEBPACK_IMPORTED_MODULE_2__["default"](_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].CHAR, [], c).withExtraParam(c);
			}
			function lambdaElement() {
				return new _AST__WEBPACK_IMPORTED_MODULE_2__["default"](_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].LAMBDA, [], '');
			}
		}
		function buildOperatorAST(op, operands) {
			if(op === _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].STAR)
				return anyOfElement(operands[0]);
			else if(op === _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].PLUS)
				return moreOfElement(operands[0]);
			else if(op === _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].QMARK)
				return optionalElement(operands[0]);
			else if(op === _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].OR)
				return orElements(operands[0], operands[1]);
			else if(op === _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].CONCAT)
				return concatElements(operands[0], operands[1]);
			else
				throw new Error(op, operands);

			function anyOfElement(a) {
				return new _AST__WEBPACK_IMPORTED_MODULE_2__["default"](
					_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].STAR, [a],
					(a.operator === _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].CHAR || a.operator === _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].OR ? a.regexContent : '('+a.regexContent+')') + '*'
				);
			}
			function moreOfElement(a) {
				return new _AST__WEBPACK_IMPORTED_MODULE_2__["default"](
					_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].PLUS, [a],
					(a.operator === _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].CHAR || a.operator === _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].OR ? a.regexContent : '('+a.regexContent+')') + '+'
				);
			}
			function optionalElement(a) {
				return new _AST__WEBPACK_IMPORTED_MODULE_2__["default"](
					_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].QMARK, [a],
					(a.operator === _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].CHAR || a.operator === _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].OR ? a.regexContent : '('+a.regexContent+')') + '?'
				);
			}
			function orElements(a, b) {
				return new _AST__WEBPACK_IMPORTED_MODULE_2__["default"](
					_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].OR, [a, b],
					'('+a.regexContent + '|' + b.regexContent+')'
				);
			}
			function concatElements(a, b) {
				return new _AST__WEBPACK_IMPORTED_MODULE_2__["default"](
					_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].CONCAT, [a, b],
					a.regexContent + b.regexContent
				);
			}
		}
	},
	makeNFAFromAST: function makeNFAFromAST(ast) {
		if(ast.operator === _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].CHAR)
			return charElement(ast.extraParam);
		else if(ast.operator === _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].CHARSET)
			return charsetElement(ast.extraParam);
		else if(ast.operator === _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].LAMBDA)
			return lambdaElement();
		else if(ast.operator === _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].STAR)
			return anyOfElement(ast.operands);
		else if(ast.operator === _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].PLUS)
			return moreOfElement(ast.operands);
		else if(ast.operator === _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].QMARK)
			return optionalElement(ast.operands);
		else if(ast.operator === _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].OR)
			return orElements(ast.operands);
		else if(ast.operator === _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].CONCAT)
			return concatElements(ast.operands);
		else
			throw new Error(ast);

		function charElement(c) {

			let startState = new _SimpleState__WEBPACK_IMPORTED_MODULE_6__["default"]();
			let finalState = new _SimpleState__WEBPACK_IMPORTED_MODULE_6__["default"]();

			let addedTransitions = [
				startState.linkTo(finalState, c)
			];

			let C = new _NFA__WEBPACK_IMPORTED_MODULE_3__["default"](_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].CHAR);
			C.startState = startState;
			C.finalState = finalState;
			C.finalState.isAccepting = true;

			C.regexContent = ast.regexContent;
			C.addedStates = [startState, finalState];
			C.addedTransitions = addedTransitions;

			return C;
		}

		function lambdaElement() {

			let startState = new _SimpleState__WEBPACK_IMPORTED_MODULE_6__["default"]();
			let finalState = new _SimpleState__WEBPACK_IMPORTED_MODULE_6__["default"]();

			let addedTransitions = [
				startState.linkTo(finalState, null)
			];

			let C = new _NFA__WEBPACK_IMPORTED_MODULE_3__["default"](_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].LAMBDA);
			C.startState = startState;
			C.finalState = finalState;
			C.finalState.isAccepting = true;

			C.regexContent = ast.regexContent;
			C.addedStates = [startState, finalState];
			C.addedTransitions = addedTransitions;

			return C;
		}

		function anyOfElement(operands) {
			let A = makeNFAFromAST(operands[0]);

			let startState = new _SimpleState__WEBPACK_IMPORTED_MODULE_6__["default"]();
			let finalState = new _SimpleState__WEBPACK_IMPORTED_MODULE_6__["default"]();

			let addedTransitions = [
				startState.linkTo(finalState, null),
				startState.linkTo(A.startState, null),
				A.finalState.linkTo(finalState, null),
				// A.finalState.linkTo(A.startState, null)
				finalState.linkTo(startState, null)
			];
			A.finalState.isAccepting = false;

			let C = new _NFA__WEBPACK_IMPORTED_MODULE_3__["default"](_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].STAR);
			C.startState = startState;
			C.finalState = finalState;
			C.finalState.isAccepting = true;

			C.subNFA = [A];
			C.regexContent = ast.regexContent;
			C.addedStates = [startState, finalState];
			C.addedTransitions = addedTransitions;

			return C;
		}

		function moreOfElement(operands) {
			let A = makeNFAFromAST(operands[0]);

			let startState = new _SimpleState__WEBPACK_IMPORTED_MODULE_6__["default"]();
			let finalState = new _SimpleState__WEBPACK_IMPORTED_MODULE_6__["default"]();

			let addedTransitions = [
				startState.linkTo(A.startState, null),
				A.finalState.linkTo(finalState, null),
				// A.finalState.linkTo(A.startState, null)
				finalState.linkTo(startState, null)
			];
			A.finalState.isAccepting = false;

			let C = new _NFA__WEBPACK_IMPORTED_MODULE_3__["default"](_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].PLUS);
			C.startState = startState;
			C.finalState = finalState;
			C.finalState.isAccepting = true;

			C.subNFA = [A];
			C.regexContent = ast.regexContent;
			C.addedStates = [startState, finalState];
			C.addedTransitions = addedTransitions;

			return C;
		}

		function optionalElement(operands) {
			let A = makeNFAFromAST(operands[0]);

			let startState = new _SimpleState__WEBPACK_IMPORTED_MODULE_6__["default"]();
			let finalState = new _SimpleState__WEBPACK_IMPORTED_MODULE_6__["default"]();

			let addedTransitions = [
				startState.linkTo(finalState, null),
				startState.linkTo(A.startState, null),
				A.finalState.linkTo(finalState, null)
			];

			A.finalState.isAccepting = false;

			let C = new _NFA__WEBPACK_IMPORTED_MODULE_3__["default"](_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].QMARK);
			C.startState = startState;
			C.finalState = finalState;
			C.finalState.isAccepting = true;

			C.subNFA = [A];
			C.regexContent = ast.regexContent;
			C.addedStates = [startState, finalState];
			C.addedTransitions = addedTransitions;

			return C;
		}

		function orElements(operands) {
			let A = makeNFAFromAST(operands[0]),
				B = makeNFAFromAST(operands[1]);

			let startState = new _SimpleState__WEBPACK_IMPORTED_MODULE_6__["default"]();
			let finalState = new _SimpleState__WEBPACK_IMPORTED_MODULE_6__["default"]();

			let addedTransitions = [
				startState.linkTo(A.startState, null),
				startState.linkTo(B.startState, null),
				A.finalState.linkTo(finalState, null),
				B.finalState.linkTo(finalState, null)
			];

			A.finalState.isAccepting = false;
			B.finalState.isAccepting = false;

			let C = new _NFA__WEBPACK_IMPORTED_MODULE_3__["default"](_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].OR);
			C.startState = startState;
			C.finalState = finalState;
			C.finalState.isAccepting = true;

			C.subNFA = [A, B];
			C.regexContent = ast.regexContent;
			C.addedStates = [startState, finalState];
			C.addedTransitions = addedTransitions;

			return C;
		}

		function concatElements(operands) {
			let A = makeNFAFromAST(operands[0]),
				B = makeNFAFromAST(operands[1]);

			let addedTransitions = [
				A.finalState.linkTo(B.startState, null)
			];
			A.finalState.isAccepting = false;

			let C = new _NFA__WEBPACK_IMPORTED_MODULE_3__["default"](_OpType__WEBPACK_IMPORTED_MODULE_9__["default"].CONCAT);
			C.startState = A.startState;
			C.finalState = B.finalState;

			C.subNFA = [A, B];
			C.regexContent = ast.regexContent;
			C.addedStates = [];
			C.addedTransitions = addedTransitions;

			return C;
		}
	},
	makeDFAFromNFA: function(nfa) {
		let dfa = new _DFA__WEBPACK_IMPORTED_MODULE_4__["default"]();
		let startState = new _CompoundState__WEBPACK_IMPORTED_MODULE_7__["default"](
			_SimpleState__WEBPACK_IMPORTED_MODULE_6__["default"].lambdaClosureOf([nfa.startState])
		);
		startState.isAccepting = startState.subStates.has(nfa.finalState);
		dfa.startState = startState;
		dfa.states.push(dfa.startState);

		let processingQueue = [startState];
		while(processingQueue.length !== 0) {
			let processingState = processingQueue.shift();

			let conditions = new Set(
				Array.from(processingState.subStates).flatMap(function(state) {
					return state.transitions.map(function(transition) {
						return transition.condition;
					});
				})
			);
			conditions.delete(null);	// exclude lambda transition

			for(let c of conditions) {
				let newSubStates = _SimpleState__WEBPACK_IMPORTED_MODULE_6__["default"].lambdaClosureOf(_SimpleState__WEBPACK_IMPORTED_MODULE_6__["default"].oneClosureOf(processingState.subStates, c));
				let existedState = undefined;
				for(let state of dfa.states) {
					if(newSubStates.equals(state.subStates)) {
						existedState = state;
						break;
					}
				}
				if(existedState === undefined) {
					let newState = new _CompoundState__WEBPACK_IMPORTED_MODULE_7__["default"](newSubStates);
					newState.isAccepting = newState.subStates.has(nfa.finalState);
					dfa.states.push(newState);
					processingQueue.push(newState);
					dfa.transitions.push(
						processingState.linkTo(newState, c)
					);
				} else {
					dfa.transitions.push(
						processingState.linkTo(existedState, c)
					);
				}
			}
		}

		return dfa;
	},
	makeOFAFromDFA: function(dfa) {
		let ofa = new _OFA__WEBPACK_IMPORTED_MODULE_5__["default"]();
		let acceptingStates = new Set();
		let nonAcceptingStates = new Set();
		for(let state of dfa.states) {
			if(state.isAccepting)
				acceptingStates.add(state);
			else
				nonAcceptingStates.add(state);
		}
		ofa.states = [
			new _GroppingState__WEBPACK_IMPORTED_MODULE_8__["default"](acceptingStates, true)
		];
		if(nonAcceptingStates.size !== 0)
			ofa.states.push(new _GroppingState__WEBPACK_IMPORTED_MODULE_8__["default"](nonAcceptingStates, false));

		let ERROR_STATE = new _CompoundState__WEBPACK_IMPORTED_MODULE_7__["default"]();
		ERROR_STATE.group = null;

		let updated;
		do {
			updated = false;
			CHECKING: for(let i=0;i<ofa.states.length;i++) {
				let processingState = ofa.states[i];
				let conditions = new Set(
					Array.from(processingState.subStates).flatMap(function(state) {
						return Array.from(state.transitionsMap.keys());
					})
				);
				for(let condition of conditions) {
					let transitionsGroups = new Map();
					for(let state of processingState.subStates) {
						let nextStateGroup = (state.transitionsMap.get(condition)||ERROR_STATE).group;
						if(!transitionsGroups.has(nextStateGroup))
							transitionsGroups.set(nextStateGroup, []);
						transitionsGroups.get(nextStateGroup).push(state);
					}
					if(transitionsGroups.size>1) {
						ofa.states.splice(i, 1);
						transitionsGroups.forEach(function(states, oldGroupState) {
							let newGroupState = new _GroppingState__WEBPACK_IMPORTED_MODULE_8__["default"](states, processingState.isAccepting);
							processingState.overridelinkTo(newGroupState, condition);
							ofa.states.push(newGroupState);
						});
						updated = true;
						break CHECKING;
					} else {
						transitionsGroups.forEach(function(states, oldGroupState) {
							processingState.overridelinkTo(oldGroupState, condition);
						});
					}
				};
			}
		} while(updated);

		ofa.startState = dfa.startState.group;

		return ofa;
	},

	generateDotImageOfAST: function(rootAST) {
		let dotFileSrc = "";
		dotFileSrc += ("digraph " + "AST" + " { ");
		// dotFileSrc += ("rankdir=\"LR\";");
		// dotFileSrc += ("node [shape=circle];");

		dotFileSrc += (
			"root -> " + rootAST.id + "; "
		);

		rootAST.traversal(function(ast) {
			dotFileSrc += (ast.id + " [label = \"" + ast.toRegexString() + "\"]; ");
			for(let operand of ast.operands) {
				dotFileSrc += (
					ast.id + " -> " + operand.id + "; "
				);
			}
		}, function() {

		});

		dotFileSrc += ("}");

		console.log(dotFileSrc);
		return _lib_viz__WEBPACK_IMPORTED_MODULE_10___default()(dotFileSrc);
	},
	generateDotImageOfNFA: function(rootNFA) {
		let dotFileSrc = "";
		dotFileSrc += ("digraph NFA { ");
		dotFileSrc += ("rankdir=\"LR\"; ");
		dotFileSrc += ("node [shape=circle]; ");

		dotFileSrc += (
			"start -> " + rootNFA.startState.id + "; "
		);

		rootNFA.traversal(function(nfa) {
			if(nfa.type !== _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].CONCAT || nfa === rootNFA) {
				dotFileSrc += ("subgraph cluster_" + nfa.id + " { ");
				dotFileSrc += ("label = \"" + nfa.regexContent + "\"; ");
				dotFileSrc += ("style = solid; ");
			}
			for(let s of nfa.addedStates) {
				if(s.isAccepting)
					dotFileSrc += (s.id + " [peripheries = 2]; ");
			}
			for(let t of nfa.addedTransitions) {
				dotFileSrc += (
					t.from.id + " -> " + t.to.id +
					" [" +
						"label = \"" + (t.condition !== null ? t.condition : 'λ') + "\" " +
						"style = " + (t.condition !== null ? "solid" : "dashed") + " " +
					"]" + "; "
				);
			}
		}, function(nfa) {
			if(nfa.type !== _OpType__WEBPACK_IMPORTED_MODULE_9__["default"].CONCAT || nfa === rootNFA) {
				dotFileSrc += ("} ");
			}
		});

		dotFileSrc += ("}");

		console.log(dotFileSrc);
		return _lib_viz__WEBPACK_IMPORTED_MODULE_10___default()(dotFileSrc);
	},
	generateDotImageOfDFA: function(rootDFA) {
		let dotFileSrc = "";
		dotFileSrc += ("digraph DFA { ");
		dotFileSrc += ("rankdir=\"LR\"; ");
		dotFileSrc += ("node [shape=circle]; ");

		dotFileSrc += (
			"start -> " + rootDFA.startState.id + "; "
		);

		for(let state of rootDFA.states) {
			dotFileSrc += (state.id + " [label = \"" + state.id + '\\n{' +state.subStateReprensentation() + "}\"]; ");
			if(state.isAccepting)
				dotFileSrc += (state.id + " [peripheries = 2]; ");
		}

		for(let t of rootDFA.transitions) {
			dotFileSrc += (
				t.from.id + " -> " + t.to.id +
				" [" +
					"label = \"" + t.condition + "\" " +
					"style = solid" +
				"]" + "; "
			);
		}

		dotFileSrc += ("}");

		console.log(dotFileSrc);
		return _lib_viz__WEBPACK_IMPORTED_MODULE_10___default()(dotFileSrc);
	},
	generateDotImageOfOFA: function(rootOFA) {
		let dotFileSrc = "";
		dotFileSrc += ("digraph OFA { ");
		dotFileSrc += ("rankdir=\"LR\"; ");
		dotFileSrc += ("node [shape=circle]; ");

		dotFileSrc += (
			"start -> " + rootOFA.startState.id + "; "
		);

		for(let state of rootOFA.states) {
			dotFileSrc += (state.id + " [label = \"" + state.id + '\\n{' +state.subStateReprensentation() + "}\"]; ");
			if(state.isAccepting)
				dotFileSrc += (state.id + " [peripheries = 2]; ");
			state.transitionsMap.forEach(function(nextState, condition) {
				dotFileSrc += (
					state.id + " -> " + nextState.id +
					" [" +
						"label = \"" + condition + "\" " +
						"style = solid" +
					"]" + "; "
				);
			});
		}

		dotFileSrc += ("}");

		console.log(dotFileSrc);
		return _lib_viz__WEBPACK_IMPORTED_MODULE_10___default()(dotFileSrc);
	},
};

/* harmony default export */ __webpack_exports__["default"] = (ScannerBase);


/***/ }),

/***/ "./src/js/SimpleState.js":
/*!*******************************!*\
  !*** ./src/js/SimpleState.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return SimpleState; });
/* harmony import */ var _Transition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./Transition */ "./src/js/Transition.js");


function SimpleState() {
	this.id = SimpleState.serialNo++;
	this.isAccepting = false;
	this.transitions = [];
} {
	SimpleState.serialNo = 0;
	SimpleState.prototype.linkTo = function(to, condition) {
		let tr = new _Transition__WEBPACK_IMPORTED_MODULE_0__["default"](this, to, condition);
		this.transitions.push(tr);
		return tr;
	};
	// SimpleState.prototype.traversal = function() {
	// 	let traversedStates = [], traversedTransitions = [];

	// 	traversalSub(this);

	// 	for(let state of traversedStates) {
	// 		delete state._isTraversed;
	// 	});

	// 	return {
	// 		traversedStates: traversedStates,
	// 		traversedTransitions: traversedTransitions
	// 	};

	// 	function traversalSub(state) {
	// 		if(state._isTraversed)
	// 			return;
	// 		state._isTraversed = true;
	// 		traversedStates.push(state);
	// 		for(let transition of state.transitions) {
	// 			let nextState = transition.to;
	// 			traversedTransitions.push(transition);
	// 			traversalSub(nextState);
	// 		});
	// 	}
	// };
	SimpleState.lambdaClosureOf = function(states) {
		let lambdaClosure = new Set(states);
		let processingQueue = Array.from(states);
		while(processingQueue.length !== 0) {
			let state = processingQueue.shift();
			for(let transition of state.transitions) {
				if(transition.condition === null) {	// lambda
					let nextState = transition.to;
					if(!lambdaClosure.has(nextState)) {
						lambdaClosure.add(nextState);
						processingQueue.push(nextState);
					}
				}
			}
		}
		return lambdaClosure;
	};
	SimpleState.oneClosureOf = function(states, condition) {
		let oneClosure = new Set();
		for(let state of states) {
			for(let transition of state.transitions) {
				if(transition.condition === condition) {
					oneClosure.add(transition.to);
				}
			}
		}

		return oneClosure;
	};
}


/***/ }),

/***/ "./src/js/Transition.js":
/*!******************************!*\
  !*** ./src/js/Transition.js ***!
  \******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return Transition; });
function Transition(from, to, condition) {
	this.from = from;
	this.to = to;
	this.condition = condition;
}


/***/ }),

/***/ "./src/js/lib/viz.js":
/*!***************************!*\
  !*** ./src/js/lib/viz.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/* WEBPACK VAR INJECTION */(function(process, __dirname, Buffer) {/*
Viz.js
Copyright (c) 2014-2017 Michael Daines
Licensed under MIT license

This distribution contains other software in object code form:

Graphviz
Licensed under Eclipse Public License - v 1.0
http://www.graphviz.org

Expat
Copyright (c) 1998, 1999, 2000 Thai Open Source Software Center Ltd and Clark Cooper
Copyright (c) 2001, 2002, 2003, 2004, 2005, 2006 Expat maintainers.
Licensed under MIT license
http://www.libexpat.org

zlib
Copyright (C) 1995-2013 Jean-loup Gailly and Mark Adler
http://www.zlib.net/zlib_license.html
*/
(function(global) {
var Module = function(Module) {
  Module = Module || {};

var e;e||(e=eval("(function() { try { return Module || {} } catch(e) { return {} } })()"));var aa={},l;for(l in e)e.hasOwnProperty(l)&&(aa[l]=e[l]);var ba="object"===typeof window,ca="function"===typeof importScripts,da="object"===typeof process&&"function"==="function"&&!ba&&!ca,fa=!ba&&!da&&!ca;
if(da){e.print||(e.print=function(a){process.stdout.write(a+"\n")});e.printErr||(e.printErr=function(a){process.stderr.write(a+"\n")});var ga=__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"fs\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),ha=__webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");e.read=function(a,b){a=ha.normalize(a);var c=ga.readFileSync(a);c||a==ha.resolve(a)||(a=path.join(__dirname,"..","src",a),c=ga.readFileSync(a));c&&!b&&(c=c.toString());return c};e.readBinary=function(a){a=e.read(a,!0);a.buffer||(a=new Uint8Array(a));assert(a.buffer);return a};e.load=function(a){ia(read(a))};e.thisProgram||(e.thisProgram=
1<process.argv.length?process.argv[1].replace(/\\/g,"/"):"unknown-program");e.arguments=process.argv.slice(2);"undefined"!==typeof module&&(module.exports=e);process.on("uncaughtException",function(a){if(!(a instanceof ja))throw a;});e.inspect=function(){return"[Emscripten Module object]"}}else if(fa)e.print||(e.print=print),"undefined"!=typeof printErr&&(e.printErr=printErr),e.read="undefined"!=typeof read?read:function(){throw"no read() available (jsc?)";},e.readBinary=function(a){if("function"===
typeof readbuffer)return new Uint8Array(readbuffer(a));a=read(a,"binary");assert("object"===typeof a);return a},"undefined"!=typeof scriptArgs?e.arguments=scriptArgs:"undefined"!=typeof arguments&&(e.arguments=arguments),eval("if (typeof gc === 'function' && gc.toString().indexOf('[native code]') > 0) var gc = undefined");else if(ba||ca)e.read=function(a){var b=new XMLHttpRequest;b.open("GET",a,!1);b.send(null);return b.responseText},"undefined"!=typeof arguments&&(e.arguments=arguments),"undefined"!==
typeof console?(e.print||(e.print=function(a){console.log(a)}),e.printErr||(e.printErr=function(a){console.log(a)})):e.print||(e.print=function(){}),ca&&(e.load=importScripts),"undefined"===typeof e.setWindowTitle&&(e.setWindowTitle=function(a){document.title=a});else throw"Unknown runtime environment. Where are we?";function ia(a){eval.call(null,a)}!e.load&&e.read&&(e.load=function(a){ia(e.read(a))});e.print||(e.print=function(){});e.printErr||(e.printErr=e.print);e.arguments||(e.arguments=[]);
e.thisProgram||(e.thisProgram="./this.program");e.print=e.print;e.X=e.printErr;e.preRun=[];e.postRun=[];for(l in aa)aa.hasOwnProperty(l)&&(e[l]=aa[l]);
var n={lb:function(a){ka=a},Za:function(){return ka},ya:function(){return m},ja:function(a){m=a},Ma:function(a){switch(a){case "i1":case "i8":return 1;case "i16":return 2;case "i32":return 4;case "i64":return 8;case "float":return 4;case "double":return 8;default:return"*"===a[a.length-1]?n.K:"i"===a[0]?(a=parseInt(a.substr(1)),assert(0===a%8),a/8):0}},Ya:function(a){return Math.max(n.Ma(a),n.K)},pd:16,Ld:function(a,b){"double"===b||"i64"===b?a&7&&(assert(4===(a&7)),a+=4):assert(0===(a&3));return a},
xd:function(a,b,c){return c||"i64"!=a&&"double"!=a?a?Math.min(b||(a?n.Ya(a):0),n.K):Math.min(b,8):8},N:function(a,b,c){return c&&c.length?(c.splice||(c=Array.prototype.slice.call(c)),c.splice(0,0,b),e["dynCall_"+a].apply(null,c)):e["dynCall_"+a].call(null,b)},ea:[],Ra:function(a){for(var b=0;b<n.ea.length;b++)if(!n.ea[b])return n.ea[b]=a,2*(1+b);throw"Finished up all reserved function pointers. Use a higher value for RESERVED_FUNCTION_POINTERS.";},ib:function(a){n.ea[(a-2)/2]=null},Q:function(a){n.Q.wa||
(n.Q.wa={});n.Q.wa[a]||(n.Q.wa[a]=1,e.X(a))},qa:{},Ad:function(a,b){assert(b);n.qa[b]||(n.qa[b]={});var c=n.qa[b];c[a]||(c[a]=function(){return n.N(b,a,arguments)});return c[a]},yd:function(){throw"You must build with -s RETAIN_COMPILER_SETTINGS=1 for Runtime.getCompilerSetting or emscripten_get_compiler_setting to work";},ia:function(a){var b=m;m=m+a|0;m=m+15&-16;return b},mb:function(a){var b=la;la=la+a|0;la=la+15&-16;return b},ba:function(a){var b=p;p=p+a|0;p=p+15&-16;return p>=w&&!ma()?(p=b,0):
b},na:function(a,b){return Math.ceil(a/(b?b:16))*(b?b:16)},Id:function(a,b,c){return c?+(a>>>0)+4294967296*+(b>>>0):+(a>>>0)+4294967296*+(b|0)},q:8,K:4,qd:0};n.addFunction=n.Ra;n.removeFunction=n.ib;var x=!1,na,oa,ka;function assert(a,b){a||y("Assertion failed: "+b)}function pa(a){var b=e["_"+a];if(!b)try{b=eval("_"+a)}catch(c){}assert(b,"Cannot call unknown function "+a+" (perhaps LLVM optimizations or closure removed it?)");return b}var qa;
(function(){var a={stackSave:function(){n.ya()},stackRestore:function(){n.ja()},arrayToC:function(a){for(var b=n.ia(a.length),c=b,d=0;d<a.length;d++)z[c++>>0]=a[d];return b},stringToC:function(a){var b=0;null!==a&&void 0!==a&&0!==a&&(b=n.ia((a.length<<2)+1),ra(a,b));return b}},b={string:a.stringToC,array:a.arrayToC};qa=function(a,c,d,h,v){a=pa(a);var q=[],r=0;if(h)for(var t=0;t<h.length;t++){var B=b[d[t]];B?(0===r&&(r=n.ya()),q[t]=B(h[t])):q[t]=h[t]}d=a.apply(null,q);"string"===c&&(d=A(d));if(0!==
r){if(v&&v.async){EmterpreterAsync.rd.push(function(){n.ja(r)});return}n.ja(r)}return d};var c=/^function\s*\(([^)]*)\)\s*{\s*([^*]*?)[\s;]*(?:return\s*(.*?)[;\s]*)?}$/,d;for(d in a)a.hasOwnProperty(d)&&a[d].toString().match(c).slice(1)})();e.ccall=qa;
function ta(a){var b;b="i32";"*"===b.charAt(b.length-1)&&(b="i32");switch(b){case "i1":return z[a>>0];case "i8":return z[a>>0];case "i16":return ua[a>>1];case "i32":return C[a>>2];case "i64":return C[a>>2];case "float":return va[a>>2];case "double":return wa[a>>3];default:y("invalid type for setValue: "+b)}return null}
function D(a,b,c,d){var f,g;"number"===typeof a?(f=!0,g=a):(f=!1,g=a.length);var k="string"===typeof b?b:null;c=4==c?d:[xa,n.ia,n.mb,n.ba][void 0===c?2:c](Math.max(g,k?1:b.length));if(f){d=c;assert(0==(c&3));for(a=c+(g&-4);d<a;d+=4)C[d>>2]=0;for(a=c+g;d<a;)z[d++>>0]=0;return c}if("i8"===k)return a.subarray||a.slice?F.set(a,c):F.set(new Uint8Array(a),c),c;d=0;for(var h,v;d<g;){var q=a[d];"function"===typeof q&&(q=n.Bd(q));f=k||b[d];if(0===f)d++;else{"i64"==f&&(f="i32");var r=c+d,t=f,t=t||"i8";"*"===
t.charAt(t.length-1)&&(t="i32");switch(t){case "i1":z[r>>0]=q;break;case "i8":z[r>>0]=q;break;case "i16":ua[r>>1]=q;break;case "i32":C[r>>2]=q;break;case "i64":oa=[q>>>0,(na=q,1<=+ya(na)?0<na?(za(+Aa(na/4294967296),4294967295)|0)>>>0:~~+Ba((na-+(~~na>>>0))/4294967296)>>>0:0)];C[r>>2]=oa[0];C[r+4>>2]=oa[1];break;case "float":va[r>>2]=q;break;case "double":wa[r>>3]=q;break;default:y("invalid type for setValue: "+t)}v!==f&&(h=n.Ma(f),v=f);d+=h}}return c}
function A(a,b){if(0===b||!a)return"";for(var c=0,d,f=0;;){d=F[a+f>>0];c|=d;if(0==d&&!b)break;f++;if(b&&f==b)break}b||(b=f);d="";if(128>c){for(;0<b;)c=String.fromCharCode.apply(String,F.subarray(a,a+Math.min(b,1024))),d=d?d+c:c,a+=1024,b-=1024;return d}return e.UTF8ToString(a)}e.Pointer_stringify=A;
function Ca(a,b){for(var c,d,f,g,k,h,v="";;){c=a[b++];if(!c)return v;c&128?(d=a[b++]&63,192==(c&224)?v+=String.fromCharCode((c&31)<<6|d):(f=a[b++]&63,224==(c&240)?c=(c&15)<<12|d<<6|f:(g=a[b++]&63,240==(c&248)?c=(c&7)<<18|d<<12|f<<6|g:(k=a[b++]&63,248==(c&252)?c=(c&3)<<24|d<<18|f<<12|g<<6|k:(h=a[b++]&63,c=(c&1)<<30|d<<24|f<<18|g<<12|k<<6|h))),65536>c?v+=String.fromCharCode(c):(c-=65536,v+=String.fromCharCode(55296|c>>10,56320|c&1023)))):v+=String.fromCharCode(c)}}
e.UTF8ToString=function(a){return Ca(F,a)};
function Da(a){function b(c,d,f){d=d||Infinity;var g="",k=[],t;if("N"===a[h]){h++;"K"===a[h]&&h++;for(t=[];"E"!==a[h];)if("S"===a[h]){h++;var E=a.indexOf("_",h);t.push(q[a.substring(h,E)||0]||"?");h=E+1}else if("C"===a[h])t.push(t[t.length-1]),h+=2;else{var E=parseInt(a.substr(h)),W=E.toString().length;if(!E||!W){h--;break}var Ib=a.substr(h+W,E);t.push(Ib);q.push(Ib);h+=W+E}h++;t=t.join("::");d--;if(0===d)return c?[t]:t}else if(("K"===a[h]||r&&"L"===a[h])&&h++,E=parseInt(a.substr(h)))W=E.toString().length,
t=a.substr(h+W,E),h+=W+E;r=!1;"I"===a[h]?(h++,E=b(!0),W=b(!0,1,!0),g+=W[0]+" "+t+"<"+E.join(", ")+">"):g=t;a:for(;h<a.length&&0<d--;)if(t=a[h++],t in v)k.push(v[t]);else switch(t){case "P":k.push(b(!0,1,!0)[0]+"*");break;case "R":k.push(b(!0,1,!0)[0]+"&");break;case "L":h++;E=a.indexOf("E",h)-h;k.push(a.substr(h,E));h+=E+2;break;case "A":E=parseInt(a.substr(h));h+=E.toString().length;if("_"!==a[h])throw"?";h++;k.push(b(!0,1,!0)[0]+" ["+E+"]");break;case "E":break a;default:g+="?"+t;break a}f||1!==
k.length||"void"!==k[0]||(k=[]);return c?(g&&k.push(g+"?"),k):g+("("+k.join(", ")+")")}var c=!!e.___cxa_demangle;if(c)try{var d=xa(a.length);ra(a.substr(1),d);var f=xa(4),g=e.___cxa_demangle(d,0,0,f);if(0===ta(f)&&g)return A(g)}catch(k){}finally{d&&Ea(d),f&&Ea(f),g&&Ea(g)}var h=3,v={v:"void",b:"bool",c:"char",s:"short",i:"int",l:"long",f:"float",d:"double",w:"wchar_t",a:"signed char",h:"unsigned char",t:"unsigned short",j:"unsigned int",m:"unsigned long",x:"long long",y:"unsigned long long",z:"..."},
q=[],r=!0,d=a;try{if("Object._main"==a||"_main"==a)return"main()";"number"===typeof a&&(a=A(a));if("_"!==a[0]||"_"!==a[1]||"Z"!==a[2])return a;switch(a[3]){case "n":return"operator new()";case "d":return"operator delete()"}d=b()}catch(t){d+="?"}0<=d.indexOf("?")&&!c&&n.Q("warning: a problem occurred in builtin C++ name demangling; build with  -s DEMANGLE_SUPPORT=1  to link in libcxxabi demangling");return d}
function Fa(){return Ga().replace(/__Z[\w\d_]+/g,function(a){var b=Da(a);return a===b?a:a+" ["+b+"]"})}function Ga(){var a=Error();if(!a.stack){try{throw Error(0);}catch(b){a=b}if(!a.stack)return"(no stack trace available)"}return a.stack.toString()}function Ha(a){0<a%4096&&(a+=4096-a%4096);return a}var z,F,ua,Ia,C,Ja,va,wa,Ka=0,la=0,La=0,m=0,Ma=0,Na=0,p=0;
function ma(){var a=Math.pow(2,31);if(p>=a)return!1;for(;w<=p;)if(w<a/2)w=Ha(2*w);else{var b=w;w=Ha((3*w+a)/4);if(w<=b)return!1}w=Math.max(w,16777216);if(w>=a)return!1;try{if(ArrayBuffer.u)buffer=ArrayBuffer.u(buffer,w);else{var c=z;buffer=new ArrayBuffer(w)}}catch(d){return!1}if(!Pa(buffer))return!1;e.buffer=buffer;e.HEAP8=z=new Int8Array(buffer);e.HEAP16=ua=new Int16Array(buffer);e.HEAP32=C=new Int32Array(buffer);e.HEAPU8=F=new Uint8Array(buffer);e.HEAPU16=Ia=new Uint16Array(buffer);e.HEAPU32=Ja=
new Uint32Array(buffer);e.HEAPF32=va=new Float32Array(buffer);e.HEAPF64=wa=new Float64Array(buffer);ArrayBuffer.u||z.set(c);return!0}var Qa;try{Qa=Function.prototype.call.bind(Object.getOwnPropertyDescriptor(ArrayBuffer.prototype,"byteLength").get),Qa(new ArrayBuffer(4))}catch(Ra){Qa=function(a){return a.byteLength}}for(var Sa=e.TOTAL_STACK||5242880,w=e.TOTAL_MEMORY||16777216,G=65536;G<w||G<2*Sa;)G=16777216>G?2*G:G+16777216;G=Math.max(G,16777216);G!==w&&(w=G);
assert("undefined"!==typeof Int32Array&&"undefined"!==typeof Float64Array&&!!(new Int32Array(1)).subarray&&!!(new Int32Array(1)).set,"JS engine does not provide full typed array support");var buffer;buffer=new ArrayBuffer(w);z=new Int8Array(buffer);ua=new Int16Array(buffer);C=new Int32Array(buffer);F=new Uint8Array(buffer);Ia=new Uint16Array(buffer);Ja=new Uint32Array(buffer);va=new Float32Array(buffer);wa=new Float64Array(buffer);C[0]=255;assert(255===F[0]&&0===F[3],"Typed arrays 2 must be run on a little-endian system");
e.HEAP=void 0;e.buffer=buffer;e.HEAP8=z;e.HEAP16=ua;e.HEAP32=C;e.HEAPU8=F;e.HEAPU16=Ia;e.HEAPU32=Ja;e.HEAPF32=va;e.HEAPF64=wa;function Ta(a){for(;0<a.length;){var b=a.shift();if("function"==typeof b)b();else{var c=b.Va;"number"===typeof c?void 0===b.aa?n.N("v",c):n.N("vi",c,[b.aa]):c(void 0===b.aa?null:b.aa)}}}var Ua=[],Va=[],Wa=[],I=[],Xa=[],Ya=!1;function Za(){var a=e.preRun.shift();Ua.unshift(a)}
function $a(a,b){for(var c=0,d=0;d<a.length;++d){var f=a.charCodeAt(d);55296<=f&&57343>=f&&(f=65536+((f&1023)<<10)|a.charCodeAt(++d)&1023);127>=f?++c:c=2047>=f?c+2:65535>=f?c+3:2097151>=f?c+4:67108863>=f?c+5:c+6}c=Array(c+1);var g=c.length,d=0;if(0<g){for(var f=d,g=d+g-1,k=0;k<a.length;++k){var h=a.charCodeAt(k);55296<=h&&57343>=h&&(h=65536+((h&1023)<<10)|a.charCodeAt(++k)&1023);if(127>=h){if(d>=g)break;c[d++]=h}else{if(2047>=h){if(d+1>=g)break;c[d++]=192|h>>6}else{if(65535>=h){if(d+2>=g)break;c[d++]=
224|h>>12}else{if(2097151>=h){if(d+3>=g)break;c[d++]=240|h>>18}else{if(67108863>=h){if(d+4>=g)break;c[d++]=248|h>>24}else{if(d+5>=g)break;c[d++]=252|h>>30;c[d++]=128|h>>24&63}c[d++]=128|h>>18&63}c[d++]=128|h>>12&63}c[d++]=128|h>>6&63}c[d++]=128|h&63}}c[d]=0;d=d-f}else d=0;b&&(c.length=d);return c}function ra(a,b){for(var c=$a(a,void 0),d=0;d<c.length;)z[b+d>>0]=c[d],d+=1}
Math.imul&&-5===Math.imul(4294967295,5)||(Math.imul=function(a,b){var c=a&65535,d=b&65535;return c*d+((a>>>16)*d+c*(b>>>16)<<16)|0});Math.Cd=Math.imul;Math.clz32||(Math.clz32=function(a){a=a>>>0;for(var b=0;32>b;b++)if(a&1<<31-b)return b;return 32});Math.td=Math.clz32;var ya=Math.abs,ab=Math.cos,bb=Math.sin,cb=Math.tan,db=Math.acos,eb=Math.asin,fb=Math.atan,gb=Math.atan2,hb=Math.exp,ib=Math.sqrt,Ba=Math.ceil,Aa=Math.floor,jb=Math.pow,za=Math.min;e.preloadedImages={};e.preloadedAudios={};Ka=8;
la=Ka+191632;Va.push();
D([0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,32,193,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,64,0,0,0,0,0,0,82,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,64,0,0,0,0,0,0,82,64,0,0,0,0,0,0,240,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,240,63,0,
0,0,0,0,0,240,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,240,63,2,16,0,0,0,0,0,0,0,0,0,0,0,0,16,64,52,174,0,0,8,0,0,0,1,0,0,0,0,0,0,0,2,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,150,64,0,0,0,0,0,128,150,64,4,144,195,0,0,0,0,0,0,0,0,0,0,0,16,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,64,0,0,0,0,0,0,88,64,0,0,12,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,64,0,0,0,0,0,0,88,64,0,32,3,2,0,0,0,0,0,0,0,0,0,0,16,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,0,0,0,0,0,0,0,0,0,0,0,0,0,66,64,0,0,0,0,0,0,66,64,0,0,0,0,0,32,131,64,0,0,0,0,0,192,136,64,0,0,0,0,0,0,82,64,0,0,0,0,0,0,82,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,64,0,0,0,0,0,0,66,64,0,0,0,0,0,32,131,64,0,0,0,0,0,192,136,64,0,0,0,0,0,0,82,64,0,0,0,0,0,0,82,64,0,176,193,0,0,0,0,0,0,0,0,0,0,0,16,64,44,180,0,0,147,0,0,0,1,0,0,0,0,0,0,0,64,1,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,64,0,0,0,0,0,0,82,64,0,16,0,2,0,0,0,0,0,0,0,0,0,0,16,64,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,64,0,0,0,0,0,0,88,64,0,176,193,0,0,0,0,0,0,0,0,0,0,0,0,0,36,184,0,0,16,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,88,64,0,0,0,0,0,0,88,64,64,32,62,3,0,0,0,0,0,0,0,0,
0,0,16,64,44,185,0,0,122,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,64,0,0,0,0,0,0,82,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,64,0,0,0,0,0,0,82,64],"i8",4,n.q);
D([51,51,51,51,51,51,211,63,60,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,154,153,153,153,153,153,169,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,240,63,1,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,240,63,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,224,63,3,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,240,63,4,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,51,51,51,51,51,51,243,63,5,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,154,153,153,153,153,153,233,63,6,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,240,63,7,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,224,63,8,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,255,255,255,255,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,63,0,0,0,0,0,0,240,191,0,0,0,0,0,0,240,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,51,51,51,51,51,211,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,128,70,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,154,153,153,153,153,153,217,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,51,51,51,51,51,227,63,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,123,20,174,71,225,122,228,191,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,
0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,1,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,1,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,128,102,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,128,102,64,154,153,153,153,153,153,217,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,5,
0,0,0,0,0,0,0,0,0,0,0,0,128,102,64,123,20,174,71,225,122,228,191,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,128,70,64,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,1,0,0,
0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,1,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,1,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,60,220,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,191,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,
63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,88,168,53,205,59,78,213,63,37,117,2,154,8,27,218,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,44,212,154,
230,29,167,234,63,106,222,113,138,142,228,232,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,0,0,0,0,0,0,224,63,93,220,70,3,120,11,226,63,0,0,0,0,0,0,208,63,88,168,53,205,59,78,213,63,0,0,0,0,0,0,208,63,211,188,227,20,29,201,209,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,211,188,227,20,29,201,209,63,211,188,227,20,
29,201,209,63,93,220,70,3,120,11,226,63,93,220,70,3,120,11,226,63,93,220,70,3,120,11,226,63,13,113,172,139,219,104,220,63,100,93,220,70,3,120,237,63,210,111,95,7,206,25,231,63,16,122,54,171,62,87,229,63,16,122,54,171,62,87,229,63,210,111,95,7,206,25,231,63,120,11,36,40,126,140,227,63,181,21,251,203,238,201,225,63,210,111,95,7,206,25,231,63,210,111,95,7,206,25,231,63,88,168,53,205,59,78,213,63,136,133,90,211,188,227,216,63,210,111,95,7,206,25,231,63,120,11,36,40,126,140,227,63,196,66,173,105,222,113,
236,63,210,111,95,7,206,25,231,63,210,111,95,7,206,25,231,63,181,21,251,203,238,201,225,63,210,111,95,7,206,25,231,63,16,122,54,171,62,87,229,63,181,21,251,203,238,201,225,63,120,11,36,40,126,140,227,63,210,111,95,7,206,25,231,63,210,111,95,7,206,25,231,63,134,56,214,197,109,52,238,63,210,111,95,7,206,25,231,63,210,111,95,7,206,25,231,63,120,11,36,40,126,140,227,63,88,168,53,205,59,78,213,63,211,188,227,20,29,201,209,63,88,168,53,205,59,78,213,63,166,10,70,37,117,2,222,63,0,0,0,0,0,0,224,63,88,168,
53,205,59,78,213,63,13,113,172,139,219,104,220,63,0,0,0,0,0,0,224,63,13,113,172,139,219,104,220,63,0,0,0,0,0,0,224,63,13,113,172,139,219,104,220,63,88,168,53,205,59,78,213,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,0,0,0,0,0,0,224,63,211,188,227,20,29,201,209,63,106,222,113,138,142,228,232,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,88,168,53,205,59,78,213,63,136,133,90,211,188,227,216,63,211,188,227,20,29,
201,209,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,210,111,95,7,206,25,231,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,13,113,172,139,219,104,220,63,244,108,86,125,174,182,222,63,17,54,60,189,82,150,201,63,244,108,86,125,174,182,222,63,59,1,77,132,13,79,225,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,
0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,88,168,53,205,59,78,213,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,62,232,217,172,250,92,197,63,0,0,0,0,
0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,130,115,70,148,246,6,199,63,13,113,172,139,219,104,220,63,0,0,0,0,0,0,224,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,181,21,251,203,238,201,225,63,181,21,251,203,238,201,225,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,7,240,22,72,80,252,220,63,162,180,55,248,194,100,214,63,88,168,53,205,59,78,213,63,13,113,172,139,219,104,220,63,13,113,172,139,
219,104,220,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,208,63,13,113,172,139,219,104,220,63,0,0,0,0,0,0,208,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,0,0,0,0,0,0,208,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,0,0,0,0,0,0,208,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,
88,168,53,205,59,78,213,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,196,66,173,105,222,113,236,63,0,0,0,0,0,0,208,63,127,217,61,121,88,168,209,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,
63,120,11,36,40,126,140,227,63,210,111,95,7,206,25,231,63,196,66,173,105,222,113,236,63,19,242,65,207,102,213,211,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,16,122,54,171,62,87,229,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,211,188,227,20,29,201,209,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,211,188,227,20,29,201,209,63,0,0,0,0,0,0,224,63,210,111,95,7,206,25,231,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,208,63,0,0,0,0,0,0,208,63,0,0,0,
0,0,0,208,63,0,0,0,0,0,0,208,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,












63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,81,218,27,124,97,50,227,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,
227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,
201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,244,108,86,125,174,182,214,63,181,21,251,203,238,201,225,63,181,21,251,203,238,201,225,63,196,66,173,105,222,113,
236,63,16,122,54,171,62,87,229,63,245,219,215,129,115,70,204,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,136,133,90,211,188,227,216,63,1,77,132,13,79,175,226,63,211,188,227,20,29,201,209,63,88,168,53,205,59,78,213,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,181,21,251,203,238,201,225,63,181,21,251,203,238,201,225,63,181,21,251,203,238,201,225,63,181,21,251,203,238,201,225,63,181,21,251,203,238,201,225,63,181,21,251,203,238,201,225,63,181,21,251,203,238,201,225,63,181,
21,251,203,238,201,225,63,181,21,251,203,238,201,225,63,181,21,251,203,238,201,225,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,1,77,132,13,79,175,226,63,1,77,132,13,79,175,226,63,1,77,132,13,79,175,226,63,181,21,251,203,238,201,225,63,204,93,75,200,7,61,240,63,16,122,54,171,62,87,229,63,16,122,54,171,62,87,229,63,210,111,95,7,206,25,231,63,210,111,95,7,206,25,231,63,16,122,54,171,62,87,229,63,120,11,36,40,126,140,227,63,106,222,113,138,142,228,232,63,210,111,95,7,206,25,231,63,211,
188,227,20,29,201,209,63,0,0,0,0,0,0,224,63,16,122,54,171,62,87,229,63,181,21,251,203,238,201,225,63,44,212,154,230,29,167,234,63,210,111,95,7,206,25,231,63,106,222,113,138,142,228,232,63,16,122,54,171,62,87,229,63,106,222,113,138,142,228,232,63,210,111,95,7,206,25,231,63,16,122,54,171,62,87,229,63,120,11,36,40,126,140,227,63,210,111,95,7,206,25,231,63,16,122,54,171,62,87,229,63,134,56,214,197,109,52,238,63,16,122,54,171,62,87,229,63,16,122,54,171,62,87,229,63,120,11,36,40,126,140,227,63,211,188,
227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,166,10,70,37,117,2,222,63,181,21,251,203,238,201,225,63,72,191,125,29,56,103,204,63,181,21,251,203,238,201,225,63,181,21,251,203,238,201,225,63,0,0,0,0,0,0,224,63,181,21,251,203,238,201,225,63,181,21,251,203,238,201,225,63,211,188,227,20,29,201,209,63,181,21,251,203,238,201,225,63,181,21,251,203,238,201,225,63,72,191,125,29,56,103,204,63,72,191,125,29,56,103,204,63,0,0,0,0,0,0,224,63,72,191,125,29,56,103,204,63,44,212,
154,230,29,167,234,63,181,21,251,203,238,201,225,63,181,21,251,203,238,201,225,63,181,21,251,203,238,201,225,63,181,21,251,203,238,201,225,63,88,168,53,205,59,78,213,63,0,0,0,0,0,0,224,63,211,188,227,20,29,201,209,63,181,21,251,203,238,201,225,63,0,0,0,0,0,0,224,63,210,111,95,7,206,25,231,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,2,154,8,27,158,94,213,63,224,190,14,156,51,162,208,63,2,154,8,27,158,94,213,63,1,77,132,13,79,175,226,63,211,188,227,20,29,201,209,63,211,188,227,20,29,
201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,
63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,88,168,53,205,59,78,213,63,181,21,251,203,238,201,225,63,181,21,
251,203,238,201,225,63,62,232,217,172,250,92,197,63,181,21,251,203,238,201,225,63,181,21,251,203,238,201,225,63,181,21,251,203,238,201,225,63,181,21,251,203,238,201,225,63,29,56,103,68,105,111,200,63,88,168,53,205,59,78,213,63,181,21,251,203,238,201,225,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,0,0,0,0,0,0,224,63,0,0,0,0,0,0,224,63,211,188,227,20,29,201,209,63,181,21,251,203,238,201,225,63,181,21,251,203,238,201,225,63,181,21,251,203,238,201,225,63,211,188,227,20,29,201,209,63,211,
188,227,20,29,201,209,63,231,29,167,232,72,46,225,63,162,180,55,248,194,100,214,63,72,191,125,29,56,103,204,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,181,21,251,203,238,201,225,63,0,0,0,0,0,0,240,63,0,0,0,0,0,0,240,63,211,188,227,20,29,201,209,63,120,11,36,40,126,140,227,63,211,188,227,20,29,201,209,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,
213,63,88,168,53,205,59,78,213,63,211,188,227,20,29,201,209,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,211,188,227,20,29,201,209,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,88,168,53,205,59,78,213,63,0,0,0,0,0,0,240,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,
63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,0,0,0,0,0,0,240,63,211,188,227,20,29,201,209,63,234,149,178,12,113,172,215,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,181,21,251,203,238,201,225,63,106,222,113,138,142,228,232,63,0,0,0,0,0,0,240,63,152,221,147,135,133,90,
215,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,196,66,173,105,222,113,236,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,72,191,125,29,56,103,204,63,120,11,36,40,126,140,227,63,134,56,214,197,109,52,238,63,120,11,36,40,126,140,227,63,211,188,227,20,29,201,209,63,211,
188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,211,188,227,20,29,201,209,63,81,160,79,228,73,210,14,64,180,200,118,190,159,58,53,192,58,34,223,165,212,37,213,191,243,130,62,71,154,46,138,63,159,229,121,112,119,214,249,191,126,253,16,27,44,156,230,63,150,236,216,8,196,235,204,63,205,206,162,119,42,224,208,63,176,227,191,64,16,32,237,191,173,161,212,94,68,219,216,63,59,161,124,230,81,150,118,63,211,110,112,249,122,132,123,63,129,204,206,162,119,42,228,191,209,173,215,244,160,160,200,63,106,223,
55,25,176,63,132,63,190,202,144,25,94,255,132,63,28,150,6,126,84,195,196,191,165,73,41,232,246,226,35,64,169,217,3,173,192,144,193,63,8,196,144,65,147,105,137,63,250,68,158,36,93,51,208,191,1,240,153,54,45,194,94,63,13,156,125,47,207,148,151,63,137,181,248,20,0,227,137,63,229,169,88,70,52,203,177,191,143,0,201,207,161,103,166,191,92,181,198,251,204,180,136,63,77,164,143,84,58,179,144,63,230,199,4,161,97,214,160,191,199,105,103,28,19,247,130,191,42,127,107,229,45,112,92,191,228,87,98,84,8,154,117,
63,209,241,135,85,114,4,183,63,149,212,9,104,34,60,51,192,100,35,16,175,235,119,16,192,167,33,170,240,103,120,199,63,218,255,0,107,213,174,193,63,78,40,68,192,33,84,247,191,170,72,133,177,133,32,245,63,157,104,87,33,229,39,246,63,77,46,198,192,58,142,205,63,89,107,40,181,23,209,220,191,3,63,170,97,191,39,204,63,166,71,83,61,153,127,218,63,182,129,59,80,167,60,174,63,81,76,222,0,51,223,185,191,245,118,149,255,218,11,166,63,212,165,53,188,15,246,148,63,31,173,32,188,44,220,144,63,40,44,241,128,178,
201,35,64,35,90,225,76,2,138,183,63,72,163,101,81,150,41,127,63,187,180,134,247,193,158,147,63,23,168,123,83,71,125,160,191,33,43,174,224,109,148,139,63,51,115,220,132,214,30,181,191,160,120,132,137,245,252,143,63,105,53,36,238,177,244,145,191,184,205,51,122,94,191,106,63,146,62,173,162,63,52,205,191,126,176,231,198,79,62,152,191,7,35,155,80,45,199,164,63,62,24,194,123,88,185,145,191,45,124,125,173,75,141,198,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,251,33,249,63,0,0,0,0,45,68,116,62,0,0,0,128,152,70,248,60,0,0,0,96,81,204,120,59,0,0,0,128,131,27,240,57,0,0,0,64,32,37,122,56,0,0,0,128,34,130,227,54,0,0,0,0,29,243,105,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,240,149,1,0,240,169,0,0,3,0,0,0,188,171,0,0,3,0,0,0,12,174,0,0,3,0,0,0,176,174,0,0,3,0,0,0,228,175,0,0,3,0,0,0,4,180,0,0,3,0,0,0,32,183,0,0,3,0,0,0,236,183,0,0,3,0,0,0,188,187,0,0,3,0,0,0,4,185,0,0,0,0,0,0,128,171,0,0,0,0,0,0,228,173,0,0,0,0,0,
0,136,174,0,0,0,0,0,0,188,175,0,0,0,0,0,0,220,179,0,0,0,0,0,0,248,182,0,0,0,0,0,0,196,183,0,0,0,0,0,0,148,187,0,0,0,0,0,0,220,184],"i8",4,n.q+33400);
D([4,0,0,0,8,189,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,3,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,27,18,2,0,1,0,0,0,144,170,0,0,8,0,0,0,4,0,0,0,254,149,1,0,1,0,0,0,8,171,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,150,1,0,1,0,0,0,0,0,0,0,128,0,0,0,0,0,0,0,11,150,1,0,1,0,0,0,0,0,0,0,128,0,0,0,1,0,0,0,18,150,1,0,1,0,0,0,0,0,0,0,72,0,0,0,2,0,0,0,28,150,1,0,1,0,0,0,0,0,0,0,128,0,0,0,3,0,0,0,38,150,1,0,1,0,0,0,0,0,0,0,128,0,0,0,4,0,0,0,52,150,1,0,1,0,0,0,0,0,0,0,128,0,0,0,5,0,0,0,62,150,1,0,1,0,0,0,0,0,0,0,128,0,0,0,6,0,0,0,75,150,1,0,1,0,0,0,0,0,0,0,128,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,172,0,0,240,172,0,0,0,173,0,0,16,173,0,0,32,173,0,0,48,173,0,0,64,173,0,0,80,173,0,0,240,172,0,0,240,172,0,0,48,173,0,0,48,173,0,0,0,0,0,0,31,0,0,0,63,0,0,0,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,10,0,0,0,11,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,0,1,0,0,0,5,0,0,0,2,0,0,0,2,0,0,0,6,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,11,151,1,0,1,0,0,0,108,173,0,0,24,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,151,1,0,1,0,0,0,0,0,0,0,56,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,3,165,2,0,32,142,2,0,177,143,2,0,241,149,2,0,232,156,2,0,39,161,2,0,167,164,2,0,184,164,2,0,0,0,0,0,3,165,2,0,32,142,2,0,241,149,2,0,177,143,2,0,39,161,2,0,232,156,2,0,184,164,2,0,167,164,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,219,152,1,0,1,0,0,0,60,175,0,0,112,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,223,152,1,0,1,0,0,0,0,0,0,0,144,1,0,0,2,0,0,0,233,152,1,0,1,0,0,0,0,0,0,0,200,1,0,0,0,0,0,0,242,152,1,0,1,0,0,0,0,0,0,0,200,1,0,0,3,0,0,0,251,152,1,0,1,0,0,0,0,0,0,0,200,1,0,
0,0,0,0,0,5,153,1,0,1,0,0,0,0,0,0,0,144,1,0,0,3,0,0,0,17,153,1,0,1,0,0,0,0,0,0,0,144,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,66,27,2,0,1,0,0,0,52,176,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,174,213,1,0,1,0,0,0,
0,0,0,0,32,2,0,0,1,0,0,0,88,154,1,0,1,0,0,0,0,0,0,0,32,2,0,0,2,0,0,0,167,213,1,0,1,0,0,0,0,0,0,0,88,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,3,0,0,0,9,0,0,0,3,0,0,0,3,0,0,0,0,0,0,0,87,158,1,0,101,158,1,0,123,158,1,0,36,178,2,0,137,158,1,0,152,158,1,0,157,158,1,0,187,158,1,0,36,
178,2,0,205,158,1,0,253,158,1,0,36,178,2,0,27,159,1,0,67,159,1,0,81,159,1,0,128,159,1,0,180,159,1,0,197,159,1,0,234,159,1,0,13,160,1,0,19,160,1,0,47,160,1,0,76,160,1,0,103,160,1,0,136,160,1,0,162,160,1,0,196,160,1,0,227,160,1,0,9,161,1,0,33,161,1,0,65,161,1,0,94,161,1,0,130,161,1,0,142,161,1,0,36,178,2,0,153,161,1,0,191,161,1,0,227,161,1,0,9,162,1,0,36,178,2,0,63,162,1,0,87,162,1,0,100,162,1,0,147,162,1,0,142,161,1,0,36,178,2,0,160,162,1,0,169,162,1,0,202,162,1,0,5,163,1,0,80,163,1,0,164,163,1,0,
198,163,1,0,219,163,1,0,242,163,1,0,8,164,1,0,32,164,1,0,36,178,2,0,54,164,1,0,81,164,1,0,117,164,1,0,153,164,1,0,190,164,1,0,36,178,2,0,223,164,1,0,249,164,1,0,11,165,1,0,24,165,1,0,37,165,1,0,57,165,1,0,72,165,1,0,80,165,1,0,101,165,1,0,115,165,1,0,177,165,1,0,188,165,1,0,142,161,1,0,36,178,2,0,194,165,1,0,206,165,1,0,221,165,1,0,13,160,1,0,36,178,2,0,240,165,1,0,25,166,1,0,55,166,1,0,71,166,1,0,88,166,1,0,95,166,1,0,110,166,1,0,126,166,1,0,194,166,1,0,201,166,1,0,13,160,1,0,36,178,2,0,211,166,
1,0,255,166,1,0,10,167,1,0,19,167,1,0,28,167,1,0,45,167,1,0,62,167,1,0,82,167,1,0,142,161,1,0,36,178,2,0,94,167,1,0,110,167,1,0,124,167,1,0,138,167,1,0,151,167,1,0,164,167,1,0,186,167,1,0,195,167,1,0,210,167,1,0,223,167,1,0,240,167,1,0,142,161,1,0,36,178,2,0,251,167,1,0,26,168,1,0,36,178,2,0,44,168,1,0,59,168,1,0,107,168,1,0,117,168,1,0,130,168,1,0,143,168,1,0,156,168,1,0,169,168,1,0,172,168,1,0,36,178,2,0,176,168,1,0,36,178,2,0,211,168,1,0,4,169,1,0,51,169,1,0,74,169,1,0,101,169,1,0,128,169,1,0,
142,161,1,0,36,178,2,0,156,169,1,0,36,178,2,0,196,169,1,0,208,169,1,0,227,169,1,0,246,169,1,0,11,170,1,0,32,170,1,0,36,170,1,0,13,160,1,0,36,178,2,0,48,170,1,0,36,178,2,0,64,170,1,0,78,170,1,0,90,170,1,0,103,170,1,0,135,170,1,0,151,170,1,0,173,170,1,0,36,178,2,0,193,170,1,0,10,171,1,0,80,171,1,0,128,171,1,0,179,171,1,0,186,171,1,0,225,171,1,0,8,172,1,0,36,178,2,0,13,172,1,0,0,0,0,0,26,0,0,0,0,0,0,0,27,0,0,0,28,0,0,0,5,0,0,0,29,0,0,0,30,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,4,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,11,0,0,0,6,0,0,0,4,0,0,0,12,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,69,27,2,0,1,0,0,0,100,179,0,0,144,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,133,214,1,0,1,0,0,0,0,0,0,0,176,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,141,2,0,66,141,2,0,197,180,1,0,135,141,2,0,194,141,2,0,228,141,2,0,234,141,2,0,3,165,2,0,17,142,2,0,32,142,2,0,61,142,2,0,72,142,2,0,106,142,2,0,160,142,2,0,214,142,2,0,17,143,2,0,71,143,
2,0,105,143,2,0,120,143,2,0,169,143,2,0,177,143,2,0,129,172,1,0,138,172,1,0,206,143,2,0,147,172,1,0,24,144,2,0,156,172,1,0,34,144,2,0,165,172,1,0,44,144,2,0,123,144,2,0,182,144,2,0,177,172,1,0,241,144,2,0,252,144,2,0,65,145,2,0,79,145,2,0,153,145,2,0,167,145,2,0,181,145,2,0,192,145,2,0,241,145,2,0,49,146,2,0,57,146,2,0,65,146,2,0,124,146,2,0,178,146,2,0,190,146,2,0,202,180,1,0,202,146,2,0,212,146,2,0,223,146,2,0,252,146,2,0,50,147,2,0,241,149,2,0,19,150,2,0,31,150,2,0,222,152,2,0,15,153,2,0,59,153,
2,0,113,153,2,0,126,153,2,0,160,153,2,0,194,153,2,0,203,153,2,0,21,154,2,0,31,154,2,0,100,154,2,0,154,154,2,0,165,154,2,0,42,155,2,0,63,155,2,0,185,172,1,0,73,155,2,0,83,155,2,0,137,155,2,0,201,155,2,0,215,155,2,0,43,156,2,0,58,156,2,0,73,156,2,0,152,156,2,0,210,180,1,0,216,156,2,0,226,156,2,0,232,156,2,0,20,157,2,0,59,157,2,0,76,157,2,0,87,157,2,0,156,157,2,0,225,157,2,0,240,157,2,0,0,158,2,0,18,158,2,0,34,158,2,0,50,158,2,0,63,158,2,0,73,158,2,0,127,158,2,0,136,158,2,0,200,158,2,0,219,158,2,0,215,
180,1,0,227,158,2,0,25,159,2,0,64,159,2,0,118,159,2,0,157,159,2,0,171,159,2,0,225,159,2,0,43,160,2,0,117,160,2,0,128,160,2,0,182,160,2,0,187,160,2,0,216,160,2,0,245,160,2,0,0,161,2,0,39,161,2,0,63,161,2,0,117,161,2,0,171,161,2,0,183,161,2,0,222,161,2,0,233,161,2,0,26,162,2,0,75,162,2,0,236,192,1,0,114,162,2,0,158,162,2,0,212,162,2,0,10,163,2,0,20,163,2,0,49,163,2,0,113,163,2,0,167,163,2,0,221,180,1,0,191,163,2,0,235,163,2,0,18,164,2,0,72,164,2,0,133,164,2,0,167,164,2,0,173,164,2,0,184,164,2,0,223,
164,2,0,0,0,0,0,0,0,0,0,39,0,0,0,0,0,0,0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,0,0,0,0,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,14,0,0,0,7,0,0,0,5,0,0,0,15,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,86,179,1,0,1,0,0,0,128,182,0,0,232,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,89,179,1,0,1,0,0,0,0,0,0,0,8,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,0,0,0,0,0,0,0,44,0,0,0,45,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,46,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,17,0,0,0,8,0,0,0,6,0,0,0,18,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,185,180,1,0,1,0,0,0,76,183,0,0,64,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,189,180,1,0,1,0,0,0,0,0,0,0,96,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,197,180,1,0,3,165,2,0,32,142,2,0,202,180,1,0,50,147,2,0,241,149,2,0,210,180,1,0,20,157,2,0,200,158,2,
0,215,180,1,0,0,161,2,0,39,161,2,0,236,192,1,0,221,180,1,0,167,164,2,0,184,164,2,0,47,0,0,0,0,0,0,0,48,0,0,0,49,0,0,0,9,0,0,0,50,0,0,0,51,0,0,0,52,0,0,0,53,0,0,0,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,58,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,20,0,0,0,10,0,0,0,7,0,0,0,21,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,118,191,1,0,1,0,0,0,100,184,0,0,152,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,122,191,1,0,1,0,0,0,0,0,0,0,184,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,135,141,2,0,130,191,1,0,3,165,2,0,32,142,2,0,61,142,2,0,141,191,1,0,147,191,1,0,158,191,1,0,165,191,1,0,72,142,2,0,160,142,2,0,173,191,1,0,179,191,1,0,190,191,1,0,71,143,2,0,105,143,2,0,177,143,2,0,197,191,1,0,24,144,2,0,44,144,2,0,182,144,2,0,207,191,1,0,65,145,2,0,79,145,2,0,153,145,2,0,218,191,1,0,167,145,2,0,226,191,1,0,235,191,1,0,249,191,1,0,3,192,1,0,124,146,2,0,12,192,1,0,190,146,2,0,223,146,2,0,252,146,2,0,18,192,1,0,67,147,2,0,110,147,2,0,151,147,2,0,186,147,2,0,227,147,2,
0,6,148,2,0,47,148,2,0,82,148,2,0,123,148,2,0,158,148,2,0,199,148,2,0,234,148,2,0,19,149,2,0,54,149,2,0,95,149,2,0,130,149,2,0,171,149,2,0,206,149,2,0,241,149,2,0,25,192,1,0,19,150,2,0,37,192,1,0,59,153,2,0,160,153,2,0,100,154,2,0,50,192,1,0,73,156,2,0,63,192,1,0,216,156,2,0,232,156,2,0,73,192,1,0,20,157,2,0,59,157,2,0,76,157,2,0,88,192,1,0,106,192,1,0,87,157,2,0,225,157,2,0,240,157,2,0,0,158,2,0,18,158,2,0,34,158,2,0,122,192,1,0,133,192,1,0,144,192,1,0,50,158,2,0,200,158,2,0,205,158,2,0,149,192,
1,0,158,192,1,0,167,192,1,0,183,192,1,0,190,192,1,0,25,159,2,0,64,159,2,0,118,159,2,0,171,159,2,0,187,160,2,0,216,160,2,0,198,192,1,0,39,161,2,0,205,192,1,0,183,161,2,0,214,192,1,0,233,161,2,0,222,192,1,0,75,162,2,0,236,192,1,0,114,162,2,0,158,162,2,0,243,192,1,0,49,163,2,0,113,163,2,0,253,192,1,0,167,163,2,0,191,163,2,0,18,164,2,0,7,193,1,0,21,193,1,0,72,164,2,0,79,164,2,0,133,164,2,0,167,164,2,0,184,164,2,0,223,164,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,0,0,0,60,0,0,0,0,0,0,0,0,0,0,0,61,0,0,0,62,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,23,0,0,0,11,0,0,0,8,0,0,0,24,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,125,202,1,0,255,255,255,255,28,187,0,0,240,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,129,202,1,0,255,255,255,255,0,0,0,0,16,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,66,0,0,234,45,2,0,65,73,0,0,196,45,2,0,65,82,0,0,151,45,2,0,65,88,0,0,255,45,2,0,66,32,0,0,59,48,2,0,66,73,0,0,76,
48,2,0,67,66,0,0,132,46,2,0,67,79,0,0,114,46,2,0,67,88,0,0,145,46,2,0,72,32,0,0,181,46,2,0,72,66,0,0,191,46,2,0,72,73,0,0,75,47,2,0,72,88,0,0,206,46,2,0,72,98,0,0,255,46,2,0,72,105,0,0,50,47,2,0,72,114,0,0,228,46,2,0,72,120,0,0,21,47,2,0,73,32,0,0,93,48,2,0,75,66,0,0,22,46,2,0,75,73,0,0,94,46,2,0,75,82,0,0,74,46,2,0,75,88,0,0,55,46,2,0,78,66,0,0,93,47,2,0,78,73,0,0,164,47,2,0,78,82,0,0,188,47,2,0,78,88,0,0,136,47,2,0,80,65,0,0,29,48,2,0,80,66,0,0,217,47,2,0,80,73,0,0,13,48,2,0,80,88,0,0,249,47,2,
0,82,32,0,0,9,50,2,0,83,32,0,0,44,48,2,0,90,68,0,0,154,48,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,15,0,0,0,39,213,1,0,1,0,0,0,240,192,0,0,0,0,0,0,16,0,0,0,47,213,1,0,1,0,0,0,240,192,0,0,0,0,0,0,17,0,0,0,55,213,1,0,1,0,0,0,240,192,0,0,0,0,0,0,17,0,0,0,64,213,1,0,1,0,0,0,240,192,0,0,0,0,0,0,17,0,0,0,72,213,1,0,1,0,0,0,240,192,0,0,0,0,0,0,19,0,0,0,80,213,1,0,1,0,0,0,244,192,0,0,0,0,0,0,20,0,0,0,88,213,1,0,1,0,0,0,244,192,0,0,0,0,0,0,21,0,0,0,96,213,1,0,1,0,0,0,244,192,0,0,0,0,0,0,21,0,0,
0,105,213,1,0,1,0,0,0,244,192,0,0,0,0,0,0,21,0,0,0,113,213,1,0,1,0,0,0,244,192,0,0,0,0,0,0,22,0,0,0,121,213,1,0,1,0,0,0,248,192,0,0,0,0,0,0,23,0,0,0,130,213,1,0,1,0,0,0,248,192,0,0,0,0,0,0,24,0,0,0,139,213,1,0,1,0,0,0,248,192,0,0,0,0,0,0,24,0,0,0,149,213,1,0,1,0,0,0,248,192,0,0,0,0,0,0,24,0,0,0,158,213,1,0,1,0,0,0,248,192,0,0,0,0,0,0,25,0,0,0,167,213,1,0,1,0,0,0,252,192,0,0,0,0,0,0,25,0,0,0,174,213,1,0,1,0,0,0,252,192,0,0,0,0,0,0,26,0,0,0,180,213,1,0,1,0,0,0,0,193,0,0,0,0,0,0,10,0,0,0,189,213,1,0,
1,0,0,0,4,193,0,0,0,0,0,0,11,0,0,0,197,213,1,0,1,0,0,0,4,193,0,0,0,0,0,0,12,0,0,0,205,213,1,0,1,0,0,0,4,193,0,0,0,0,0,0,12,0,0,0,214,213,1,0,1,0,0,0,4,193,0,0,0,0,0,0,12,0,0,0,222,213,1,0,1,0,0,0,4,193,0,0,0,0,0,0,14,0,0,0,230,213,1,0,1,0,0,0,4,193,0,0,0,0,0,0,14,0,0,0,237,213,1,0,1,0,0,0,4,193,0,0,0,0,0,0,13,0,0,0,245,213,1,0,1,0,0,0,4,193,0,0,0,0,0,0,5,0,0,0,253,213,1,0,1,0,0,0,4,193,0,0,0,0,0,0,6,0,0,0,5,214,1,0,1,0,0,0,4,193,0,0,0,0,0,0,7,0,0,0,13,214,1,0,1,0,0,0,4,193,0,0,0,0,0,0,7,0,0,0,22,
214,1,0,1,0,0,0,4,193,0,0,0,0,0,0,7,0,0,0,30,214,1,0,1,0,0,0,4,193,0,0,0,0,0,0,9,0,0,0,38,214,1,0,1,0,0,0,4,193,0,0,0,0,0,0,9,0,0,0,45,214,1,0,1,0,0,0,4,193,0,0,0,0,0,0,8,0,0,0,53,214,1,0,1,0,0,0,4,193,0,0,0,0,0,0,0,0,0,0,61,214,1,0,1,0,0,0,8,193,0,0,0,0,0,0,1,0,0,0,70,214,1,0,1,0,0,0,8,193,0,0,0,0,0,0,2,0,0,0,79,214,1,0,1,0,0,0,8,193,0,0,0,0,0,0,2,0,0,0,89,214,1,0,1,0,0,0,8,193,0,0,0,0,0,0,2,0,0,0,98,214,1,0,1,0,0,0,8,193,0,0,0,0,0,0,4,0,0,0,107,214,1,0,1,0,0,0,8,193,0,0,0,0,0,0,4,0,0,0,115,214,
1,0,1,0,0,0,8,193,0,0,0,0,0,0,3,0,0,0,124,214,1,0,1,0,0,0,8,193,0,0,0,0,0,0,18,0,0,0,133,214,1,0,1,0,0,0,240,192,0,0,0,0,0,0,27,0,0,0,141,214,1,0,1,0,0,0,12,193,0,0,0,0,0,0,28,0,0,0,149,214,1,0,1,0,0,0,12,193,0,0,0,0,0,0,29,0,0,0,157,214,1,0,1,0,0,0,12,193,0,0,0,0,0,0,29,0,0,0,166,214,1,0,1,0,0,0,12,193,0,0,0,0,0,0,29,0,0,0,174,214,1,0,1,0,0,0,12,193,0,0,0,0,0,0,30,0,0,0,182,214,1,0,1,0,0,0,16,193,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,
0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,33,218,1,0,28,193,0,0,1,0,0,0,56,193,0,0,0,0,0,0,0,0,0,0,63,0,0,0,64,0,0,0,1,0,0,0,0,0,0,0,27,18,2,0,0,0,0,0,44,193,0,0,52,193,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,2,0,0,0,1,0,0,0,2,0,0,0,4,0,0,0,24,1,0,0,48,1,0,0,176,0,0,0,0,0,0,0,25,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0,0,0,0,0,0,0,0,0,27,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,218,225,1,0,223,225,1,0,227,225,1,0,234,225,1,0,238,225,1,0,0,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,4,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,112,
230,1,0,232,194,0,0,1,0,0,0,68,195,0,0,0,0,0,0,0,0,0,0,65,0,0,0,66,0,0,0,67,0,0,0,68,0,0,0,69,0,0,0,70,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,75,0,0,0,66,0,0,0,76,0,0,0,66,0,0,0,77,0,0,0,78,0,0,0,79,0,0,0,80,0,0,0,0,0,0,0,0,0,0,0,125,230,1,0,0,0,0,0,248,194,0,0,64,195,0,0,1,0,0,0,131,230,1,0,0,0,0,0,0,195,0,0,64,195,0,0,2,0,0,0,135,230,1,0,0,0,0,0,8,195,0,0,64,195,0,0,3,0,0,0,140,230,1,0,0,0,0,0,16,195,0,0,64,195,0,0,4,0,0,0,146,230,1,0,0,0,0,0,24,195,0,0,64,195,0,0,5,0,0,0,152,230,1,0,0,0,0,0,
48,195,0,0,64,195,0,0,6,0,0,0,162,230,1,0,0,0,0,0,56,195,0,0,64,195,0,0,7,0,0,0,168,230,1,0,0,0,0,0,32,195,0,0,64,195,0,0,7,0,0,0,172,230,1,0,0,0,0,0,32,195,0,0,64,195,0,0,7,0,0,0,177,230,1,0,0,0,0,0,40,195,0,0,64,195,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,48,0,0,0,0,0,0,0,1,0,0,0,28,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,36,178,2,0,0,0,0,0,214,158,2,0,1,0,0,0,102,248,1,0,7,0,0,0,199,248,1,0,3,0,0,0,0,179,2,0,5,0,0,0,223,248,1,0,15,0,0,0,71,25,2,0,8,0,0,0,71,25,2,0,16,0,0,0,231,248,1,0,4,0,0,0,231,248,1,0,17,0,0,0,236,248,
1,0,5,0,0,0,236,248,1,0,2,0,0,0,242,248,1,0,6,0,0,0,249,248,1,0,4,0,0,0,5,249,1,0,7,0,0,0,13,249,1,0,7,0,0,0,29,249,1,0,5,0,0,0,35,249,1,0,8,0,0,0,58,249,1,0,8,0,0,0,35,249,1,0,9,0,0,0,67,249,1,0,7,0,0,0,75,249,1,0,10,0,0,0,101,249,1,0,7,0,0,0,109,249,1,0,11,0,0,0,135,249,1,0,6,0,0,0,142,249,1,0,12,0,0,0,172,249,1,0,9,0,0,0,142,249,1,0,13,0,0,0,182,249,1,0,8,0,0,0,191,249,1,0,14,0,0,0,224,249,1,0,8,0,0,0,233,249,1,0,18,0,0,0,10,250,1,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,4,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,12,0,0,0,2,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,0,0,0,0,3,0,0,0,29,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,0,0,0,0,4,0,0,0,30,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,64,0,0,0,48,200,0,0,80,200,0,0,
88,200,0,0,6,0,0,0,4,0,0,0,68,200,0,0,6,0,0,0,4,0,0,0,6,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,0,0,8,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,13,6,2,0,0,0,0,0,53,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,
0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,9,0,0,0,11,0,0,0,8,0,0,0,10,0,0,0,4,202,0,0,132,201,0,0,236,201,0,0,0,0,0,0,1,0,0,0,1,0,0,0,7,0,0,0,32,0,0,0,8,0,0,0,81,0,0,0,33,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,9,0,0,0,2,0,0,0,5,0,0,0,10,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,3,0,0,0,12,0,0,0,9,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,34,0,0,0,14,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,35,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,255,
255,255,255,0,0,0,0,0,0,0,0,36,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,
0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,1,0,0,0,4,0,0,0,5,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,6,0,0,0,1,0,0,0,1,0,0,0,7,0,0,0,8,0,0,0,9,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,10,0,0,0,1,0,0,0,1,0,0,0,11,0,0,0,1,0,0,0,12,0,0,0,1,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,19,0,0,0,20,0,0,0,21,0,0,0,22,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,19,0,0,0,26,0,0,0,27,0,
0,0,28,0,0,0,29,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,1,0,0,0,30,0,0,0,1,0,0,0,1,0,0,0,19,0,0,0,1,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,19,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,39,0,0,0,40,0,0,0,41,0,0,0,19,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,
0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,46,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,47,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,
19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,48,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,
0,19,0,0,0,19,0,0,0,19,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,2,0,0,0,3,0,0,0,1,0,0,0,4,0,0,0,1,0,0,0,5,0,0,0,1,0,0,0,6,0,0,0,7,0,0,0,7,0,0,0,1,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,3,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,37,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,131,14,2,0,8,0,0,0,3,0,0,0,140,14,2,0,144,14,2,0,11,0,0,0,6,0,0,0,66,27,2,0,156,14,2,0,2,0,0,0,1,0,0,0,159,14,2,0,163,14,2,0,4,0,0,0,2,0,0,0,168,14,2,0,172,14,2,0,4,0,0,0,4,0,0,0,177,14,2,0,182,14,2,0,5,0,0,0,5,0,0,0,188,14,2,0,192,14,2,0,4,0,0,0,7,0,0,0,197,14,2,0,201,14,2,0,5,0,0,0,9,0,0,0,207,14,2,0,211,14,2,0,4,0,0,0,10,0,0,0,216,14,2,0,221,14,2,0,4,0,0,0,12,0,0,0,226,14,2,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,193,23,2,0,0,0,0,0,1,0,0,0,201,23,2,0,1,0,0,0,0,0,0,0,120,62,2,0,1,0,0,0,1,0,0,0,214,158,2,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,61,18,2,0,49,0,0,0,0,0,0,0,0,0,0,0,5,52,2,0,16,0,0,0,76,171,2],"i8",4,n.q+43640);
D([128,0,0,0,54,18,2,0,64,0,0,0,128,40,2,0,16,0,0,0,56,18,2,0,64,0,0,0,0,0,0,0,0,0,0,0,11,18,2,0,1,0,0,0,18,18,2,0,2,0,0,0,23,18,2,0,3,0,0,0,232,57,2,0,4,0,0,0,181,40,2,0,5,0,0,0,27,18,2,0,6,0,0,0,214,158,2,0,8,0,0,0,31,18,2,0,33,0,0,0,35,18,2,0,34,0,0,0,39,18,2,0,34,0,0,0,43,18,2,0,1,0,0,0,48,18,2,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,193,22,2,0,200,22,2,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,152,132,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,27,2,0,66,27,2,0,69,27,2,0,0,0,0,0,0,0,0,0,1,0,0,0,2,0,0,0,255,255,255,255,34,27,2,0,40,27,2,0,214,158,2,0,0,0,0,0,100,0,0,0,101,0,0,0,102,0,0,0,100,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,
0,0,0,0,39,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,11,0,0,0,40,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,232,57,2,0,196,219,0,0,24,133,0,0,0,0,0,0,132,40,2,0,196,219,0,0,72,133,0,0,0,0,0,0,1,50,2,0,196,219,0,0,120,133,0,0,0,0,0,0,140,40,2,0,196,219,
0,0,120,133,0,0,0,0,0,0,145,40,2,0,196,219,0,0,168,133,0,0,0,0,0,0,152,40,2,0,220,219,0,0,168,133,0,0,0,0,0,0,158,40,2,0,196,219,0,0,216,133,0,0,0,0,0,0,162,40,2,0,196,219,0,0,8,134,0,0,0,0,0,0,214,158,2,0,196,219,0,0,56,134,0,0,0,0,0,0,171,40,2,0,196,219,0,0,56,134,0,0,0,0,0,0,181,40,2,0,196,219,0,0,104,134,0,0,0,0,0,0,189,40,2,0,196,219,0,0,152,134,0,0,0,0,0,0,199,40,2,0,196,219,0,0,200,134,0,0,0,0,0,0,213,40,2,0,196,219,0,0,248,134,0,0,0,0,0,0,219,40,2,0,196,219,0,0,40,135,0,0,0,0,0,0,228,40,2,
0,196,219,0,0,88,135,0,0,0,0,0,0,236,40,2,0,196,219,0,0,136,135,0,0,0,0,0,0,245,40,2,0,196,219,0,0,184,135,0,0,0,0,0,0,253,40,2,0,196,219,0,0,232,135,0,0,0,0,0,0,2,41,2,0,196,219,0,0,24,136,0,0,0,0,0,0,6,41,2,0,196,219,0,0,72,136,0,0,0,0,0,0,13,41,2,0,196,219,0,0,120,136,0,0,0,0,0,0,19,41,2,0,196,219,0,0,168,136,0,0,0,0,0,0,29,41,2,0,196,219,0,0,24,133,0,0,0,0,0,0,34,41,2,0,196,219,0,0,24,133,0,0,0,0,0,0,44,41,2,0,196,219,0,0,216,136,0,0,0,0,0,0,51,41,2,0,196,219,0,0,8,137,0,0,0,0,0,0,64,41,2,0,196,
219,0,0,56,137,0,0,0,0,0,0,78,41,2,0,196,219,0,0,104,137,0,0,0,0,0,0,92,41,2,0,196,219,0,0,152,137,0,0,0,0,0,0,104,41,2,0,196,219,0,0,200,137,0,0,0,0,0,0,117,41,2,0,196,219,0,0,248,137,0,0,0,0,0,0,126,41,2,0,196,219,0,0,40,138,0,0,0,0,0,0,136,41,2,0,196,219,0,0,88,138,0,0,0,0,0,0,145,41,2,0,196,219,0,0,136,138,0,0,0,0,0,0,153,41,2,0,196,219,0,0,184,138,0,0,0,0,0,0,161,41,2,0,196,219,0,0,232,138,0,0,0,0,0,0,170,41,2,0,196,219,0,0,24,139,0,0,0,0,0,0,174,41,2,0,196,219,0,0,72,139,0,0,0,0,0,0,185,41,
2,0,196,219,0,0,120,139,0,0,0,0,0,0,189,41,2,0,196,219,0,0,168,139,0,0,0,0,0,0,199,41,2,0,196,219,0,0,216,139,0,0,0,0,0,0,208,41,2,0,196,219,0,0,8,140,0,0,0,0,0,0,216,41,2,0,196,219,0,0,56,140,0,0,0,0,0,0,229,41,2,0,196,219,0,0,104,140,0,0,0,0,0,0,241,41,2,0,196,219,0,0,152,140,0,0,0,0,0,0,252,41,2,0,196,219,0,0,200,140,0,0,0,0,0,0,12,42,2,0,196,219,0,0,248,140,0,0,0,0,0,0,26,42,2,0,196,219,0,0,40,141,0,0,0,0,0,0,41,42,2,0,196,219,0,0,88,141,0,0,0,0,0,0,51,42,2,0,196,219,0,0,136,141,0,0,0,0,0,0,60,
42,2,0,196,219,0,0,184,141,0,0,0,0,0,0,70,42,2,0,196,219,0,0,232,141,0,0,0,0,0,0,80,42,2,0,196,219,0,0,24,142,0,0,0,0,0,0,87,42,2,0,196,219,0,0,72,142,0,0,0,0,0,0,94,42,2,0,196,219,0,0,120,142,0,0,0,0,0,0,104,42,2,0,244,219,0,0,0,0,0,0,0,0,0,0,111,42,2,0,244,219,0,0,0,0,0,0,0,0,0,0,83,40,2,0,12,220,0,0,0,0,0,0,0,0,0,0,119,42,2,0,36,220,0,0,168,142,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,126,40,2,0,128,40,2,0,134,171,2,0,130,40,2,0,82,0,0,0,83,0,0,0,21,0,0,0,4,0,0,0,2,0,0,0,10,0,0,0,84,0,0,0,83,
0,0,0,21,0,0,0,5,0,0,0,0,0,0,0,11,0,0,0,85,0,0,0,86,0,0,0,22,0,0,0,6,0,0,0,3,0,0,0,12,0,0,0,87,0,0,0,88,0,0,0,21,0,0,0,7,0,0,0,0,0,0,0,13,0,0,0,82,0,0,0,83,0,0,0,21,0,0,0,8,0,0,0,2,0,0,0,10,0,0,0,14,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,121,43,2,0,128,43,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,12,0,0,0,13,0,0,0,14,0,0,0,15,0,0,0,16,0,0,0,17,0,0,0,18,0,0,0,21,0,0,0,22,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,
0,0,27,0,0,0,28,0,0,0,31,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,38,0,0,0,41,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,48,0,0,0,51,0,0,0,52,0,0,0,53,0,0,0,54,0,0,0,55,0,0,0,56,0,0,0,57,0,0,0,58,0,0,0,61,0,0,0,62,0,0,0,63,0,0,0,64,0,0,0,65,0,0,0,66,0,0,0,67,0,0,0,68,0,0,0,71,0,0,0,72,0,0,0,73,0,0,0,74,0,0,0,75,0,0,0,76,0,0,0,77,0,0,0,78,0,0,0,81,0,0,0,82,0,0,0,83,0,0,0,84,0,0,0,85,0,0,0,86,0,0,0,87,0,0,0,88,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,151,45,2,0,167,45,2,0,180,45,2,0,0,0,0,0,0,0,0,0,4,0,0,0,185,45,2,0,0,0,0,0,0,0,0,0,196,45,2,0,167,45,2,0,180,45,2,0,0,0,0,0,219,45,2,0,5,0,0,0,185,45,2,0,0,0,0,0,227,45,2,0,234,45,2,0,167,45,2,0,250,45,2,0,0,0,0,0,0,0,0,0,6,0,0,0,185,45,2,0,238,61,2,0,0,0,0,0,255,45,2,0,167,45,2,0,250,45,2,0,0,0,0,0,219,45,2,0,7,0,0,0,185,45,2,0,238,61,2,0,227,45,2,0,22,46,2,0,35,46,2,0,250,45,2,0,0,0,0,0,0,0,0,0,10,0,0,0,49,46,2,0,238,61,2,0,0,0,0,0,55,46,2,0,35,46,2,0,250,45,2,0,
0,0,0,0,227,45,2,0,11,0,0,0,49,46,2,0,238,61,2,0,227,45,2,0,74,46,2,0,35,46,2,0,88,46,2,0,0,0,0,0,0,0,0,0,8,0,0,0,49,46,2,0,0,0,0,0,0,0,0,0,94,46,2,0,35,46,2,0,88,46,2,0,0,0,0,0,227,45,2,0,9,0,0,0,49,46,2,0,0,0,0,0,227,45,2,0,114,46,2,0,114,46,2,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,122,46,2,0,0,0,0,0,0,0,0,0,132,46,2,0,114,46,2,0,238,61,2,0,0,0,0,0,0,0,0,0,14,0,0,0,122,46,2,0,238,61,2,0,0,0,0,0,145,46,2,0,114,46,2,0,238,61,2,0,0,0,0,0,219,45,2,0,15,0,0,0,122,46,2,0,238,61,2,0,227,45,2,0,165,46,2,0,
114,46,2,0,0,0,0,0,0,0,0,0,219,45,2,0,13,0,0,0,122,46,2,0,0,0,0,0,227,45,2,0,181,46,2,0,181,46,2,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,185,45,2,0,0,0,0,0,0,0,0,0,191,46,2,0,181,46,2,0,238,61,2,0,0,0,0,0,0,0,0,0,18,0,0,0,185,45,2,0,238,61,2,0,0,0,0,0,206,46,2,0,181,46,2,0,238,61,2,0,0,0,0,0,219,45,2,0,19,0,0,0,185,45,2,0,238,61,2,0,227,45,2,0,228,46,2,0,181,46,2,0,0,0,0,0,245,46,2,0,0,0,0,0,20,0,0,0,185,45,2,0,0,0,0,0,0,0,0,0,255,46,2,0,181,46,2,0,238,61,2,0,245,46,2,0,0,0,0,0,22,0,0,0,185,45,2,0,238,
61,2,0,0,0,0,0,21,47,2,0,181,46,2,0,238,61,2,0,245,46,2,0,219,45,2,0,23,0,0,0,185,45,2,0,238,61,2,0,227,45,2,0,50,47,2,0,181,46,2,0,0,0,0,0,245,46,2,0,219,45,2,0,21,0,0,0,185,45,2,0,0,0,0,0,227,45,2,0,75,47,2,0,181,46,2,0,0,0,0,0,0,0,0,0,219,45,2,0,17,0,0,0,185,45,2,0,0,0,0,0,227,45,2,0,93,47,2,0,115,47,2,0,238,61,2,0,0,0,0,0,0,0,0,0,26,0,0,0,49,46,2,0,238,61,2,0,0,0,0,0,136,47,2,0,115,47,2,0,238,61,2,0,0,0,0,0,227,45,2,0,27,0,0,0,49,46,2,0,238,61,2,0,227,45,2,0,164,47,2,0,115,47,2,0,0,0,0,0,0,0,
0,0,227,45,2,0,25,0,0,0,49,46,2,0,0,0,0,0,227,45,2,0,188,47,2,0,115,47,2,0,211,47,2,0,0,0,0,0,0,0,0,0,24,0,0,0,49,46,2,0,0,0,0,0,0,0,0,0,217,47,2,0,231,47,2,0,238,61,2,0,0,0,0,0,0,0,0,0,30,0,0,0,49,46,2,0,238,61,2,0,0,0,0,0,249,47,2,0,231,47,2,0,238,61,2,0,0,0,0,0,227,45,2,0,31,0,0,0,49,46,2,0,238,61,2,0,227,45,2,0,13,48,2,0,231,47,2,0,0,0,0,0,0,0,0,0,227,45,2,0,29,0,0,0,49,46,2,0,0,0,0,0,227,45,2,0,29,48,2,0,231,47,2,0,211,47,2,0,0,0,0,0,0,0,0,0,28,0,0,0,49,46,2,0,0,0,0,0,0,0,0,0,44,48,2,0,44,48,
2,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,51,48,2,0,0,0,0,0,0,0,0,0,59,48,2,0,70,48,2,0,238,61,2,0,0,0,0,0,0,0,0,0,2,0,0,0,49,46,2,0,238,61,2,0,0,0,0,0,76,48,2,0,70,48,2,0,238,61,2,0,0,0,0,0,227,45,2,0,3,0,0,0,49,46,2,0,238,61,2,0,227,45,2,0,93,48,2,0,70,48,2,0,0,0,0,0,0,0,0,0,227,45,2,0,1,0,0,0,49,46,2,0,0,0,0,0,227,45,2,0,9,50,2,0,70,48,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,49,46,2,0,0,0,0,0,0,0,0,0,106,48,2,0,132,48,2,0,147,48,2,0,0,0,0,0,227,45,2,0,33,0,0,0,49,46,2,0,0,0,0,0,227,45,2,0,154,48,2,0,167,
48,2,0,0,0,0,0,0,0,0,0,0,0,0,0,34,0,0,0,51,48,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,0,0,0,0,12,0,0,0,43,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,52,2,0,198,0,0,0,88,52,2,0,193,0,0,0,95,52,2,0,194,0,0,0,101,52,2,0,192,0,0,0,108,52,2,0,145,3,0,0,114,52,2,0,197,0,0,0,120,52,2,0,195,0,0,0,127,52,2,0,196,0,0,0,132,52,2,0,146,3,0,0,137,52,2,0,199,
0,0,0,144,52,2,0,167,3,0,0,148,52,2,0,33,32,0,0,155,52,2,0,148,3,0,0,161,52,2,0,208,0,0,0,165,52,2,0,201,0,0,0,172,52,2,0,202,0,0,0,178,52,2,0,200,0,0,0,185,52,2,0,149,3,0,0,193,52,2,0,151,3,0,0,197,52,2,0,203,0,0,0,202,52,2,0,147,3,0,0,208,52,2,0,205,0,0,0,215,52,2,0,206,0,0,0,221,52,2,0,204,0,0,0,228,52,2,0,153,3,0,0,233,52,2,0,207,0,0,0,238,52,2,0,154,3,0,0,244,52,2,0,155,3,0,0,251,52,2,0,156,3,0,0,254,52,2,0,209,0,0,0,5,53,2,0,157,3,0,0,8,53,2,0,82,1,0,0,14,53,2,0,211,0,0,0,21,53,2,0,212,0,0,
0,27,53,2,0,210,0,0,0,34,53,2,0,169,3,0,0,40,53,2,0,159,3,0,0,48,53,2,0,216,0,0,0,55,53,2,0,213,0,0,0,62,53,2,0,214,0,0,0,67,53,2,0,166,3,0,0,71,53,2,0,160,3,0,0,74,53,2,0,51,32,0,0,80,53,2,0,168,3,0,0,84,53,2,0,161,3,0,0,88,53,2,0,96,1,0,0,95,53,2,0,163,3,0,0,101,53,2,0,222,0,0,0,107,53,2,0,164,3,0,0,111,53,2,0,152,3,0,0,117,53,2,0,218,0,0,0,124,53,2,0,219,0,0,0,130,53,2,0,217,0,0,0,137,53,2,0,165,3,0,0,145,53,2,0,220,0,0,0,150,53,2,0,158,3,0,0,153,53,2,0,221,0,0,0,160,53,2,0,120,1,0,0,165,53,2,
0,150,3,0,0,170,53,2,0,225,0,0,0,177,53,2,0,226,0,0,0,183,53,2,0,180,0,0,0,189,53,2,0,230,0,0,0,195,53,2,0,224,0,0,0,202,53,2,0,53,33,0,0,210,53,2,0,177,3,0,0,216,53,2,0,38,0,0,0,220,53,2,0,39,34,0,0,224,53,2,0,32,34,0,0,228,53,2,0,229,0,0,0,234,53,2,0,72,34,0,0,240,53,2,0,227,0,0,0,247,53,2,0,228,0,0,0,252,53,2,0,30,32,0,0,2,54,2,0,178,3,0,0,7,54,2,0,166,0,0,0,14,54,2,0,34,32,0,0,19,54,2,0,41,34,0,0,23,54,2,0,231,0,0,0,30,54,2,0,184,0,0,0,36,54,2,0,162,0,0,0,41,54,2,0,199,3,0,0,45,54,2,0,198,2,0,
0,50,54,2,0,99,38,0,0,56,54,2,0,69,34,0,0,61,54,2,0,169,0,0,0,66,54,2,0,181,33,0,0,72,54,2,0,42,34,0,0,76,54,2,0,164,0,0,0,83,54,2,0,211,33,0,0,88,54,2,0,32,32,0,0,95,54,2,0,147,33,0,0,100,54,2,0,176,0,0,0,104,54,2,0,180,3,0,0,110,54,2,0,102,38,0,0,116,54,2,0,247,0,0,0,123,54,2,0,233,0,0,0,130,54,2,0,234,0,0,0,136,54,2,0,232,0,0,0,143,54,2,0,5,34,0,0,149,54,2,0,3,32,0,0,154,54,2,0,2,32,0,0,159,54,2,0,181,3,0,0,167,54,2,0,97,34,0,0,173,54,2,0,183,3,0,0,177,54,2,0,240,0,0,0,181,54,2,0,235,0,0,0,186,
54,2,0,172,32,0,0,191,54,2,0,3,34,0,0,197,54,2,0,146,1,0,0,202,54,2,0,0,34,0,0,209,54,2,0,189,0,0,0,216,54,2,0,188,0,0,0,223,54,2,0,190,0,0,0,230,54,2,0,68,32,0,0,236,54,2,0,179,3,0,0,242,54,2,0,101,34,0,0,245,54,2,0,62,0,0,0,248,54,2,0,212,33,0,0,253,54,2,0,148,33,0,0,2,55,2,0,101,38,0,0,9,55,2,0,38,32,0,0,16,55,2,0,237,0,0,0,23,55,2,0,238,0,0,0,29,55,2,0,161,0,0,0,35,55,2,0,236,0,0,0,42,55,2,0,17,33,0,0,48,55,2,0,30,34,0,0,54,55,2,0,43,34,0,0,58,55,2,0,185,3,0,0,63,55,2,0,191,0,0,0,70,55,2,0,8,
34,0,0,75,55,2,0,239,0,0,0,80,55,2,0,186,3,0,0,86,55,2,0,208,33,0,0,91,55,2,0,187,3,0,0,98,55,2,0,41,35,0,0,103,55,2,0,171,0,0,0,109,55,2,0,144,33,0,0,114,55,2,0,8,35,0,0,120,55,2,0,28,32,0,0,126,55,2,0,100,34,0,0,129,55,2,0,10,35,0,0,136,55,2,0,23,34,0,0,143,55,2,0,202,37,0,0,147,55,2,0,14,32,0,0,151,55,2,0,57,32,0,0,158,55,2,0,24,32,0,0,164,55,2,0,60,0,0,0,167,55,2,0,175,0,0,0,172,55,2,0,20,32,0,0,178,55,2,0,181,0,0,0,184,55,2,0,183,0,0,0,152,63,2,0,18,34,0,0,191,55,2,0,188,3,0,0,194,55,2,0,7,34,
0,0,200,55,2,0,160,0,0,0,205,55,2,0,19,32,0,0,211,55,2,0,96,34,0,0,214,55,2,0,11,34,0,0,217,55,2,0,172,0,0,0,221,55,2,0,9,34,0,0,227,55,2,0,132,34,0,0,232,55,2,0,241,0,0,0,239,55,2,0,189,3,0,0,242,55,2,0,243,0,0,0,249,55,2,0,244,0,0,0,255,55,2,0,83,1,0,0,5,56,2,0,242,0,0,0,12,56,2,0,62,32,0,0,18,56,2,0,201,3,0,0,24,56,2,0,191,3,0,0,32,56,2,0,149,34,0,0,38,56,2,0,40,34,0,0,41,56,2,0,170,0,0,0,46,56,2,0,186,0,0,0,51,56,2,0,248,0,0,0,58,56,2,0,245,0,0,0,65,56,2,0,151,34,0,0,72,56,2,0,246,0,0,0,77,56,
2,0,182,0,0,0,82,56,2,0,2,34,0,0,87,56,2,0,48,32,0,0,94,56,2,0,165,34,0,0,99,56,2,0,198,3,0,0,103,56,2,0,192,3,0,0,106,56,2,0,214,3,0,0,110,56,2,0,177,0,0,0,117,56,2,0,163,0,0,0,123,56,2,0,50,32,0,0,129,56,2,0,15,34,0,0,134,56,2,0,29,34,0,0,139,56,2,0,200,3,0,0,143,56,2,0,34,0,0,0,148,56,2,0,210,33,0,0,153,56,2,0,26,34,0,0,159,56,2,0,42,35,0,0,164,56,2,0,187,0,0,0,170,56,2,0,146,33,0,0,175,56,2,0,9,35,0,0,181,56,2,0,29,32,0,0,187,56,2,0,28,33,0,0,192,56,2,0,174,0,0,0,196,56,2,0,11,35,0,0,203,56,2,
0,193,3,0,0,207,56,2,0,15,32,0,0,211,56,2,0,58,32,0,0,218,56,2,0,25,32,0,0,224,56,2,0,26,32,0,0,230,56,2,0,97,1,0,0,237,56,2,0,197,34,0,0,242,56,2,0,167,0,0,0,247,56,2,0,173,0,0,0,251,56,2,0,195,3,0,0,1,57,2,0,194,3,0,0,8,57,2,0,60,34,0,0,12,57,2,0,96,38,0,0,19,57,2,0,130,34,0,0,23,57,2,0,134,34,0,0,28,57,2,0,17,34,0,0,32,57,2,0,131,34,0,0,36,57,2,0,185,0,0,0,41,57,2,0,178,0,0,0,46,57,2,0,179,0,0,0,51,57,2,0,135,34,0,0,56,57,2,0,223,0,0,0,62,57,2,0,196,3,0,0,66,57,2,0,52,34,0,0,73,57,2,0,184,3,0,
0,79,57,2,0,209,3,0,0,88,57,2,0,9,32,0,0,95,57,2,0,254,0,0,0,101,57,2,0,220,2,0,0,107,57,2,0,215,0,0,0,113,57,2,0,34,33,0,0,119,57,2,0,209,33,0,0,124,57,2,0,250,0,0,0,131,57,2,0,145,33,0,0,136,57,2,0,251,0,0,0,142,57,2,0,249,0,0,0,149,57,2,0,168,0,0,0,153,57,2,0,210,3,0,0,159,57,2,0,197,3,0,0,167,57,2,0,252,0,0,0,172,57,2,0,24,33,0,0,179,57,2,0,190,3,0,0,182,57,2,0,253,0,0,0,189,57,2,0,165,0,0,0,193,57,2,0,255,0,0,0,198,57,2,0,182,3,0,0,203,57,2,0,13,32,0,0,207,57,2,0,12,32,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,8,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,7,0,0,0,8,0,0,0,1,1,0,0,8,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,45,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,58,63,2,0,67,63,2,0,74,63,2,0,0,0,0,0,0,0,0,0,88,63,2,0,9,0,0,0,90,63,2,0,10,0,0,0,95,63,2,0,10,0,0,0,103,63,2,0,11,0,0,0,109,63,2,0,11,0,0,0,118,63,2,0,12,0,0,0,121,63,2,0,12,0,0,0,127,63,2,0,13,0,0,0,132,63,2,0,13,0,0,0,140,63,2,0,14,0,0,0,145,63,2,0,14,0,0,0,152,63,2,0,15,0,0,0,158,63,2,0,15,0,0,0,170,63,2,0,16,0,0,0,14,0,0,0,89,0,0,0,46,0,0,0,47,0,0,0,16,0,0,0,48,0,0,0,90,0,0,0,49,0,0,0,17,0,0,0,50,0,0,0,240,63,2,0,247,63,2,0,76,64,2,0,254,63,2,0,5,64,2,0,1,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,19,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,92,65,2,0,85,93,201,127,201,127,255,0,103,65,2,0,187,45,212,190,174,212,255,0,114,65,2,0,20,119,253,253,192,134,255,0,125,65,2,0,85,93,201,127,201,127,255,0,136,65,2,0,187,45,212,190,174,212,255,0,147,65,2,0,20,119,253,253,192,134,255,0,158,65,2,0,42,102,255,255,255,153,255,0,169,65,2,0,85,93,201,127,201,127,255,0,180,65,2,0,187,45,212,190,174,212,255,0,
191,65,2,0,20,119,253,253,192,134,255,0,202,65,2,0,42,102,255,255,255,153,255,0,213,65,2,0,151,173,176,56,108,176,255,0,224,65,2,0,85,93,201,127,201,127,255,0,235,65,2,0,187,45,212,190,174,212,255,0,246,65,2,0,20,119,253,253,192,134,255,0,1,66,2,0,42,102,255,255,255,153,255,0,12,66,2,0,151,173,176,56,108,176,255,0,23,66,2,0,232,252,240,240,2,127,255,0,34,66,2,0,85,93,201,127,201,127,255,0,45,66,2,0,187,45,212,190,174,212,255,0,56,66,2,0,20,119,253,253,192,134,255,0,67,66,2,0,42,102,255,255,255,153,
255,0,78,66,2,0,151,173,176,56,108,176,255,0,89,66,2,0,232,252,240,240,2,127,255,0,100,66,2,0,17,224,191,191,91,23,255,0,111,66,2,0,85,93,201,127,201,127,255,0,122,66,2,0,187,45,212,190,174,212,255,0,133,66,2,0,20,119,253,253,192,134,255,0,144,66,2,0,42,102,255,255,255,153,255,0,155,66,2,0,151,173,176,56,108,176,255,0,166,66,2,0,232,252,240,240,2,127,255,0,177,66,2,0,17,224,191,191,91,23,255,0,188,66,2,0,0,0,102,102,102,102,255,0,199,66,2,0,147,25,247,222,235,247,255,0,209,66,2,0,142,75,225,158,202,
225,255,0,219,66,2,0,145,188,189,49,130,189,255,0,229,66,2,0,159,16,255,239,243,255,255,0,239,66,2,0,143,46,231,189,215,231,255,0,249,66,2,0,143,127,214,107,174,214,255,0,3,67,2,0,147,208,181,33,113,181,255,0,13,67,2,0,159,16,255,239,243,255,255,0,23,67,2,0,143,46,231,189,215,231,255,0,33,67,2,0,143,127,214,107,174,214,255,0,43,67,2,0,145,188,189,49,130,189,255,0,53,67,2,0,149,241,156,8,81,156,255,0,63,67,2,0,159,16,255,239,243,255,255,0,73,67,2,0,148,43,239,198,219,239,255,0,83,67,2,0,142,75,225,
158,202,225,255,0,93,67,2,0,143,127,214,107,174,214,255,0,103,67,2,0,145,188,189,49,130,189,255,0,113,67,2,0,149,241,156,8,81,156,255,0,123,67,2,0,159,16,255,239,243,255,255,0,133,67,2,0,148,43,239,198,219,239,255,0,143,67,2,0,142,75,225,158,202,225,255,0,153,67,2,0,143,127,214,107,174,214,255,0,163,67,2,0,144,169,198,66,146,198,255,0,173,67,2,0,147,208,181,33,113,181,255,0,183,67,2,0,151,241,148,8,69,148,255,0,193,67,2,0,148,8,255,247,251,255,255,0,203,67,2,0,147,25,247,222,235,247,255,0,213,67,
2,0,148,43,239,198,219,239,255,0,223,67,2,0,142,75,225,158,202,225,255,0,233,67,2,0,143,127,214,107,174,214,255,0,243,67,2,0,144,169,198,66,146,198,255,0,253,67,2,0,147,208,181,33,113,181,255,0,7,68,2,0,151,241,148,8,69,148,255,0,17,68,2,0,148,8,255,247,251,255,255,0,27,68,2,0,147,25,247,222,235,247,255,0,37,68,2,0,148,43,239,198,219,239,255,0,47,68,2,0,142,75,225,158,202,225,255,0,57,68,2,0,143,127,214,107,174,214,255,0,67,68,2,0,144,169,198,66,146,198,255,0,77,68,2,0,147,208,181,33,113,181,255,
0,87,68,2,0,149,241,156,8,81,156,255,0,97,68,2,0,152,235,107,8,48,107,255,0,107,68,2,0,23,239,84,84,48,5,255,0,117,68,2,0,119,255,60,0,60,48,255,0,128,68,2,0,23,236,140,140,81,10,255,0,138,68,2,0,24,194,191,191,129,45,255,0,148,68,2,0,29,112,223,223,194,125,255,0,158,68,2,0,30,52,246,246,232,195,255,0,168,68,2,0,121,38,234,199,234,229,255,0,178,68,2,0,120,95,205,128,205,193,255,0,188,68,2,0,124,165,151,53,151,143,255,0,198,68,2,0,124,252,102,1,102,94,255,0,208,68,2,0,23,239,84,84,48,5,255,0,218,68,
2,0,124,252,102,1,102,94,255,0,229,68,2,0,119,255,60,0,60,48,255,0,240,68,2,0,23,236,140,140,81,10,255,0,250,68,2,0,24,194,191,191,129,45,255,0,4,69,2,0,29,112,223,223,194,125,255,0,14,69,2,0,30,52,246,246,232,195,255,0,24,69,2,0,0,0,245,245,245,245,255,0,34,69,2,0,121,38,234,199,234,229,255,0,44,69,2,0,120,95,205,128,205,193,255,0,54,69,2,0,124,165,151,53,151,143,255,0,64,69,2,0,28,135,216,216,179,101,255,0,73,69,2,0,0,0,245,245,245,245,255,0,82,69,2,0,123,127,180,90,180,172,255,0,91,69,2,0,21,215,
166,166,97,26,255,0,100,69,2,0,29,112,223,223,194,125,255,0,109,69,2,0,120,95,205,128,205,193,255,0,118,69,2,0,121,253,133,1,133,113,255,0,127,69,2,0,21,215,166,166,97,26,255,0,136,69,2,0,29,112,223,223,194,125,255,0,145,69,2,0,0,0,245,245,245,245,255,0,154,69,2,0,120,95,205,128,205,193,255,0,163,69,2,0,121,253,133,1,133,113,255,0,172,69,2,0,23,236,140,140,81,10,255,0,181,69,2,0,28,135,216,216,179,101,255,0,190,69,2,0,30,52,246,246,232,195,255,0,199,69,2,0,121,38,234,199,234,229,255,0,208,69,2,0,
123,127,180,90,180,172,255,0,217,69,2,0,124,252,102,1,102,94,255,0,226,69,2,0,23,236,140,140,81,10,255,0,235,69,2,0,28,135,216,216,179,101,255,0,244,69,2,0,30,52,246,246,232,195,255,0,253,69,2,0,0,0,245,245,245,245,255,0,6,70,2,0,121,38,234,199,234,229,255,0,15,70,2,0,123,127,180,90,180,172,255,0,24,70,2,0,124,252,102,1,102,94,255,0,33,70,2,0,23,236,140,140,81,10,255,0,42,70,2,0,24,194,191,191,129,45,255,0,51,70,2,0,29,112,223,223,194,125,255,0,60,70,2,0,30,52,246,246,232,195,255,0,69,70,2,0,121,
38,234,199,234,229,255,0,78,70,2,0,120,95,205,128,205,193,255,0,87,70,2,0,124,165,151,53,151,143,255,0,96,70,2,0,124,252,102,1,102,94,255,0,105,70,2,0,23,236,140,140,81,10,255,0,114,70,2,0,24,194,191,191,129,45,255,0,123,70,2,0,29,112,223,223,194,125,255,0,132,70,2,0,30,52,246,246,232,195,255,0,141,70,2,0,0,0,245,245,245,245,255,0,150,70,2,0,121,38,234,199,234,229,255,0,159,70,2,0,120,95,205,128,205,193,255,0,168,70,2,0,124,165,151,53,151,143,255,0,177,70,2,0,124,252,102,1,102,94,255,0,186,70,2,0,
135,20,249,229,245,249,255,0,195,70,2,0,117,74,216,153,216,201,255,0,204,70,2,0,103,185,162,44,162,95,255,0,213,70,2,0,136,14,251,237,248,251,255,0,222,70,2,0,127,54,226,178,226,226,255,0,231,70,2,0,113,120,194,102,194,164,255,0,240,70,2,0,98,190,139,35,139,69,255,0,249,70,2,0,136,14,251,237,248,251,255,0,2,71,2,0,127,54,226,178,226,226,255,0,11,71,2,0,113,120,194,102,194,164,255,0,20,71,2,0,103,185,162,44,162,95,255,0,29,71,2,0,102,255,109,0,109,44,255,0,38,71,2,0,136,14,251,237,248,251,255,0,47,
71,2,0,119,34,236,204,236,230,255,0,56,71,2,0,117,74,216,153,216,201,255,0,65,71,2,0,113,120,194,102,194,164,255,0,74,71,2,0,103,185,162,44,162,95,255,0,83,71,2,0,102,255,109,0,109,44,255,0,92,71,2,0,136,14,251,237,248,251,255,0,101,71,2,0,119,34,236,204,236,230,255,0,110,71,2,0,117,74,216,153,216,201,255,0,119,71,2,0,113,120,194,102,194,164,255,0,128,71,2,0,105,159,174,65,174,118,255,0,137,71,2,0,98,190,139,35,139,69,255,0,146,71,2,0,102,255,88,0,88,36,255,0,155,71,2,0,134,6,253,247,252,253,255,
0,164,71,2,0,135,20,249,229,245,249,255,0,173,71,2,0,119,34,236,204,236,230,255,0,182,71,2,0,117,74,216,153,216,201,255,0,191,71,2,0,113,120,194,102,194,164,255,0,200,71,2,0,105,159,174,65,174,118,255,0,209,71,2,0,98,190,139,35,139,69,255,0,218,71,2,0,102,255,88,0,88,36,255,0,227,71,2,0,134,6,253,247,252,253,255,0,236,71,2,0,135,20,249,229,245,249,255,0,245,71,2,0,119,34,236,204,236,230,255,0,254,71,2,0,117,74,216,153,216,201,255,0,7,72,2,0,113,120,194,102,194,164,255,0,16,72,2,0,105,159,174,65,174,
118,255,0,25,72,2,0,98,190,139,35,139,69,255,0,34,72,2,0,102,255,109,0,109,44,255,0,43,72,2,0,101,255,68,0,68,27,255,0,52,72,2,0,144,20,244,224,236,244,255,0,61,72,2,0,148,70,218,158,188,218,255,0,70,72,2,0,196,123,167,136,86,167,255,0,79,72,2,0,136,14,251,237,248,251,255,0,88,72,2,0,146,53,227,179,205,227,255,0,97,72,2,0,162,74,198,140,150,198,255,0,106,72,2,0,202,149,157,136,65,157,255,0,115,72,2,0,136,14,251,237,248,251,255,0,124,72,2,0,146,53,227,179,205,227,255,0,133,72,2,0,162,74,198,140,150,
198,255,0,142,72,2,0,196,123,167,136,86,167,255,0,151,72,2,0,214,225,129,129,15,124,255,0,160,72,2,0,136,14,251,237,248,251,255,0,169,72,2,0,148,43,230,191,211,230,255,0,178,72,2,0,148,70,218,158,188,218,255,0,187,72,2,0,162,74,198,140,150,198,255,0,196,72,2,0,196,123,167,136,86,167,255,0,205,72,2,0,214,225,129,129,15,124,255,0,214,72,2,0,136,14,251,237,248,251,255,0,223,72,2,0,148,43,230,191,211,230,255,0,232,72,2,0,148,70,218,158,188,218,255,0,241,72,2,0,162,74,198,140,150,198,255,0,250,72,2,0,
190,100,177,140,107,177,255,0,3,73,2,0,202,149,157,136,65,157,255,0,12,73,2,0,213,252,110,110,1,107,255,0,21,73,2,0,134,6,253,247,252,253,255,0,30,73,2,0,144,20,244,224,236,244,255,0,39,73,2,0,148,43,230,191,211,230,255,0,48,73,2,0,148,70,218,158,188,218,255,0,57,73,2,0,162,74,198,140,150,198,255,0,66,73,2,0,190,100,177,140,107,177,255,0,75,73,2,0,202,149,157,136,65,157,255,0,84,73,2,0,213,252,110,110,1,107,255,0,93,73,2,0,134,6,253,247,252,253,255,0,102,73,2,0,144,20,244,224,236,244,255,0,111,73,
2,0,148,43,230,191,211,230,255,0,120,73,2,0,148,70,218,158,188,218,255,0,129,73,2,0,162,74,198,140,150,198,255,0,138,73,2,0,190,100,177,140,107,177,255,0,147,73,2,0,202,149,157,136,65,157,255,0,156,73,2,0,214,225,129,129,15,124,255,0,165,73,2,0,213,255,77,77,0,75,255,0,174,73,2,0,114,211,158,27,158,119,255,0,184,73,2,0,18,252,217,217,95,2,255,0,194,73,2,0,173,95,179,117,112,179,255,0,204,73,2,0,114,211,158,27,158,119,255,0,214,73,2,0,18,252,217,217,95,2,255,0,224,73,2,0,173,95,179,117,112,179,255,
0,234,73,2,0,233,209,231,231,41,138,255,0,244,73,2,0,114,211,158,27,158,119,255,0,254,73,2,0,18,252,217,217,95,2,255,0,8,74,2,0,173,95,179,117,112,179,255,0,18,74,2,0,233,209,231,231,41,138,255,0,28,74,2,0,62,208,166,102,166,30,255,0,38,74,2,0,114,211,158,27,158,119,255,0,48,74,2,0,18,252,217,217,95,2,255,0,58,74,2,0,173,95,179,117,112,179,255,0,68,74,2,0,233,209,231,231,41,138,255,0,78,74,2,0,62,208,166,102,166,30,255,0,88,74,2,0,31,252,230,230,171,2,255,0,98,74,2,0,114,211,158,27,158,119,255,0,
108,74,2,0,18,252,217,217,95,2,255,0,118,74,2,0,173,95,179,117,112,179,255,0,128,74,2,0,233,209,231,231,41,138,255,0,138,74,2,0,62,208,166,102,166,30,255,0,148,74,2,0,31,252,230,230,171,2,255,0,158,74,2,0,27,210,166,166,118,29,255,0,168,74,2,0,114,211,158,27,158,119,255,0,178,74,2,0,18,252,217,217,95,2,255,0,188,74,2,0,173,95,179,117,112,179,255,0,198,74,2,0,233,209,231,231,41,138,255,0,208,74,2,0,62,208,166,102,166,30,255,0,218,74,2,0,31,252,230,230,171,2,255,0,228,74,2,0,27,210,166,166,118,29,255,
0,238,74,2,0,0,0,102,102,102,102,255,0,248,74,2,0,76,25,243,224,243,219,255,0,1,75,2,0,95,61,221,168,221,181,255,0,10,75,2,0,140,170,202,67,162,202,255,0,19,75,2,0,65,17,249,240,249,232,255,0,28,75,2,0,87,46,228,186,228,188,255,0,37,75,2,0,123,101,204,123,204,196,255,0,46,75,2,0,141,197,190,43,140,190,255,0,55,75,2,0,65,17,249,240,249,232,255,0,64,75,2,0,87,46,228,186,228,188,255,0,73,75,2,0,123,101,204,123,204,196,255,0,82,75,2,0,140,170,202,67,162,202,255,0,91,75,2,0,145,243,172,8,104,172,255,0,
100,75,2,0,65,17,249,240,249,232,255,0,109,75,2,0,77,41,235,204,235,197,255,0,118,75,2,0,95,61,221,168,221,181,255,0,127,75,2,0,123,101,204,123,204,196,255,0,136,75,2,0,140,170,202,67,162,202,255,0,145,75,2,0,145,243,172,8,104,172,255,0,154,75,2,0,65,17,249,240,249,232,255,0,163,75,2,0,77,41,235,204,235,197,255,0,172,75,2,0,95,61,221,168,221,181,255,0,181,75,2,0,123,101,204,123,204,196,255,0,190,75,2,0,137,160,211,78,179,211,255,0,199,75,2,0,141,197,190,43,140,190,255,0,208,75,2,0,147,242,158,8,88,
158,255,0,217,75,2,0,60,12,252,247,252,240,255,0,226,75,2,0,76,25,243,224,243,219,255,0,235,75,2,0,77,41,235,204,235,197,255,0,244,75,2,0,95,61,221,168,221,181,255,0,253,75,2,0,123,101,204,123,204,196,255,0,6,76,2,0,137,160,211,78,179,211,255,0,15,76,2,0,141,197,190,43],"i8",4,n.q+53880);
D([140,190,255,0,24,76,2,0,147,242,158,8,88,158,255,0,33,76,2,0,60,12,252,247,252,240,255,0,42,76,2,0,76,25,243,224,243,219,255,0,51,76,2,0,77,41,235,204,235,197,255,0,60,76,2,0,95,61,221,168,221,181,255,0,69,76,2,0,123,101,204,123,204,196,255,0,78,76,2,0,137,160,211,78,179,211,255,0,87,76,2,0,141,197,190,43,140,190,255,0,96,76,2,0,145,243,172,8,104,172,255,0,105,76,2,0,150,239,129,8,64,129,255,0,114,76,2,0,74,21,245,229,245,224,255,0,125,76,2,0,80,72,217,161,217,155,255,0,136,76,2,0,98,178,163,49,
163,84,255,0,147,76,2,0,73,15,248,237,248,233,255,0,158,76,2,0,78,54,228,186,228,179,255,0,169,76,2,0,86,104,196,116,196,118,255,0,180,76,2,0,98,190,139,35,139,69,255,0,191,76,2,0,73,15,248,237,248,233,255,0,202,76,2,0,78,54,228,186,228,179,255,0,213,76,2,0,86,104,196,116,196,118,255,0,224,76,2,0,98,178,163,49,163,84,255,0,235,76,2,0,102,255,109,0,109,44,255,0,246,76,2,0,73,15,248,237,248,233,255,0,1,77,2,0,77,44,233,199,233,192,255,0,12,77,2,0,80,72,217,161,217,155,255,0,23,77,2,0,86,104,196,116,
196,118,255,0,34,77,2,0,98,178,163,49,163,84,255,0,45,77,2,0,102,255,109,0,109,44,255,0,56,77,2,0,73,15,248,237,248,233,255,0,67,77,2,0,77,44,233,199,233,192,255,0,78,77,2,0,80,72,217,161,217,155,255,0,89,77,2,0,86,104,196,116,196,118,255,0,100,77,2,0,96,158,171,65,171,93,255,0,111,77,2,0,98,190,139,35,139,69,255,0,122,77,2,0,108,255,90,0,90,50,255,0,133,77,2,0,72,7,252,247,252,245,255,0,144,77,2,0,74,21,245,229,245,224,255,0,155,77,2,0,77,44,233,199,233,192,255,0,166,77,2,0,80,72,217,161,217,155,
255,0,177,77,2,0,86,104,196,116,196,118,255,0,188,77,2,0,96,158,171,65,171,93,255,0,199,77,2,0,98,190,139,35,139,69,255,0,210,77,2,0,108,255,90,0,90,50,255,0,221,77,2,0,72,7,252,247,252,245,255,0,232,77,2,0,74,21,245,229,245,224,255,0,243,77,2,0,77,44,233,199,233,192,255,0,254,77,2,0,80,72,217,161,217,155,255,0,9,78,2,0,86,104,196,116,196,118,255,0,20,78,2,0,96,158,171,65,171,93,255,0,31,78,2,0,98,190,139,35,139,69,255,0,42,78,2,0,102,255,109,0,109,44,255,0,53,78,2,0,101,255,68,0,68,27,255,0,64,78,
2,0,0,0,240,240,240,240,255,0,74,78,2,0,0,0,189,189,189,189,255,0,84,78,2,0,0,0,99,99,99,99,255,0,94,78,2,0,0,0,247,247,247,247,255,0,104,78,2,0,0,0,204,204,204,204,255,0,114,78,2,0,0,0,150,150,150,150,255,0,124,78,2,0,0,0,82,82,82,82,255,0,134,78,2,0,0,0,247,247,247,247,255,0,144,78,2,0,0,0,204,204,204,204,255,0,154,78,2,0,0,0,150,150,150,150,255,0,164,78,2,0,0,0,99,99,99,99,255,0,174,78,2,0,0,0,37,37,37,37,255,0,184,78,2,0,0,0,247,247,247,247,255,0,194,78,2,0,0,0,217,217,217,217,255,0,204,78,2,
0,0,0,189,189,189,189,255,0,214,78,2,0,0,0,150,150,150,150,255,0,224,78,2,0,0,0,99,99,99,99,255,0,234,78,2,0,0,0,37,37,37,37,255,0,244,78,2,0,0,0,247,247,247,247,255,0,254,78,2,0,0,0,217,217,217,217,255,0,8,79,2,0,0,0,189,189,189,189,255,0,18,79,2,0,0,0,150,150,150,150,255,0,28,79,2,0,0,0,115,115,115,115,255,0,38,79,2,0,0,0,82,82,82,82,255,0,48,79,2,0,0,0,37,37,37,37,255,0,58,79,2,0,0,0,255,255,255,255,255,0,68,79,2,0,0,0,240,240,240,240,255,0,78,79,2,0,0,0,217,217,217,217,255,0,88,79,2,0,0,0,189,
189,189,189,255,0,98,79,2,0,0,0,150,150,150,150,255,0,108,79,2,0,0,0,115,115,115,115,255,0,118,79,2,0,0,0,82,82,82,82,255,0,128,79,2,0,0,0,37,37,37,37,255,0,138,79,2,0,0,0,255,255,255,255,255,0,148,79,2,0,0,0,240,240,240,240,255,0,158,79,2,0,0,0,217,217,217,217,255,0,168,79,2,0,0,0,189,189,189,189,255,0,178,79,2,0,0,0,150,150,150,150,255,0,188,79,2,0,0,0,115,115,115,115,255,0,198,79,2,0,0,0,82,82,82,82,255,0,208,79,2,0,0,0,37,37,37,37,255,0,218,79,2,0,0,0,0,0,0,0,255,0,228,79,2,0,21,48,254,254,230,
206,255,0,240,79,2,0,19,147,253,253,174,107,255,0,252,79,2,0,14,240,230,230,85,13,255,0,8,80,2,0,19,32,254,254,237,222,255,0,20,80,2,0,20,120,253,253,190,133,255,0,32,80,2,0,17,194,253,253,141,60,255,0,44,80,2,0,13,253,217,217,71,1,255,0,56,80,2,0,19,32,254,254,237,222,255,0,68,80,2,0,20,120,253,253,190,133,255,0,80,80,2,0,17,194,253,253,141,60,255,0,92,80,2,0,14,240,230,230,85,13,255,0,104,80,2,0,13,250,166,166,54,3,255,0,116,80,2,0,19,32,254,254,237,222,255,0,128,80,2,0,21,91,253,253,208,162,255,
0,140,80,2,0,19,147,253,253,174,107,255,0,152,80,2,0,17,194,253,253,141,60,255,0,164,80,2,0,14,240,230,230,85,13,255,0,176,80,2,0,13,250,166,166,54,3,255,0,188,80,2,0,19,32,254,254,237,222,255,0,200,80,2,0,21,91,253,253,208,162,255,0,212,80,2,0,19,147,253,253,174,107,255,0,224,80,2,0,17,194,253,253,141,60,255,0,236,80,2,0,16,234,241,241,105,19,255,0,248,80,2,0,13,253,217,217,72,1,255,0,4,81,2,0,12,247,140,140,45,4,255,0,16,81,2,0,21,20,255,255,245,235,255,0,28,81,2,0,21,48,254,254,230,206,255,0,40,
81,2,0,21,91,253,253,208,162,255,0,52,81,2,0,19,147,253,253,174,107,255,0,64,81,2,0,17,194,253,253,141,60,255,0,76,81,2,0,16,234,241,241,105,19,255,0,88,81,2,0,13,253,217,217,72,1,255,0,100,81,2,0,12,247,140,140,45,4,255,0,112,81,2,0,21,20,255,255,245,235,255,0,124,81,2,0,21,48,254,254,230,206,255,0,136,81,2,0,21,91,253,253,208,162,255,0,148,81,2,0,19,147,253,253,174,107,255,0,160,81,2,0,17,194,253,253,141,60,255,0,172,81,2,0,16,234,241,241,105,19,255,0,184,81,2,0,13,253,217,217,72,1,255,0,196,81,
2,0,13,250,166,166,54,3,255,0,208,81,2,0,12,246,127,127,39,4,255,0,220,81,2,0,25,54,254,254,232,200,255,0,229,81,2,0,19,121,253,253,187,132,255,0,238,81,2,0,5,197,227,227,74,51,255,0,247,81,2,0,26,37,254,254,240,217,255,0,0,82,2,0,24,115,253,253,204,138,255,0,9,82,2,0,13,164,252,252,141,89,255,0,18,82,2,0,3,218,215,215,48,31,255,0,27,82,2,0,26,37,254,254,240,217,255,0,36,82,2,0,24,115,253,253,204,138,255,0,45,82,2,0,13,164,252,252,141,89,255,0,54,82,2,0,5,197,227,227,74,51,255,0,63,82,2,0,0,255,179,
179,0,0,255,0,72,82,2,0,26,37,254,254,240,217,255,0,81,82,2,0,24,95,253,253,212,158,255,0,90,82,2,0,19,121,253,253,187,132,255,0,99,82,2,0,13,164,252,252,141,89,255,0,108,82,2,0,5,197,227,227,74,51,255,0,117,82,2,0,0,255,179,179,0,0,255,0,126,82,2,0,26,37,254,254,240,217,255,0,135,82,2,0,24,95,253,253,212,158,255,0,144,82,2,0,19,121,253,253,187,132,255,0,153,82,2,0,13,164,252,252,141,89,255,0,162,82,2,0,7,178,239,239,101,72,255,0,171,82,2,0,3,218,215,215,48,31,255,0,180,82,2,0,0,255,153,153,0,0,255,
0,189,82,2,0,24,18,255,255,247,236,255,0,198,82,2,0,25,54,254,254,232,200,255,0,207,82,2,0,24,95,253,253,212,158,255,0,216,82,2,0,19,121,253,253,187,132,255,0,225,82,2,0,13,164,252,252,141,89,255,0,234,82,2,0,7,178,239,239,101,72,255,0,243,82,2,0,3,218,215,215,48,31,255,0,252,82,2,0,0,255,153,153,0,0,255,0,5,83,2,0,24,18,255,255,247,236,255,0,14,83,2,0,25,54,254,254,232,200,255,0,23,83,2,0,24,95,253,253,212,158,255,0,32,83,2,0,19,121,253,253,187,132,255,0,41,83,2,0,13,164,252,252,141,89,255,0,50,
83,2,0,7,178,239,239,101,72,255,0,59,83,2,0,3,218,215,215,48,31,255,0,68,83,2,0,0,255,179,179,0,0,255,0,77,83,2,0,0,255,127,127,0,0,255,0,86,83,2,0,142,68,227,166,206,227,255,0,98,83,2,0,190,153,154,106,61,154,255,0,111,83,2,0,144,211,180,31,120,180,255,0,123,83,2,0,65,97,223,178,223,138,255,0,135,83,2,0,82,184,160,51,160,44,255,0,147,83,2,0,0,99,251,251,154,153,255,0,159,83,2,0,254,225,227,227,26,28,255,0,171,83,2,0,23,143,253,253,191,111,255,0,183,83,2,0,21,255,255,255,127,0,255,0,195,83,2,0,198,
42,214,202,178,214,255,0,207,83,2,0,142,68,227,166,206,227,255,0,219,83,2,0,190,153,154,106,61,154,255,0,232,83,2,0,42,102,255,255,255,153,255,0,245,83,2,0,144,211,180,31,120,180,255,0,1,84,2,0,65,97,223,178,223,138,255,0,13,84,2,0,82,184,160,51,160,44,255,0,25,84,2,0,0,99,251,251,154,153,255,0,37,84,2,0,254,225,227,227,26,28,255,0,49,84,2,0,23,143,253,253,191,111,255,0,61,84,2,0,21,255,255,255,127,0,255,0,73,84,2,0,198,42,214,202,178,214,255,0,85,84,2,0,142,68,227,166,206,227,255,0,97,84,2,0,190,
153,154,106,61,154,255,0,110,84,2,0,42,102,255,255,255,153,255,0,123,84,2,0,15,197,177,177,89,40,255,0,136,84,2,0,144,211,180,31,120,180,255,0,148,84,2,0,65,97,223,178,223,138,255,0,160,84,2,0,82,184,160,51,160,44,255,0,172,84,2,0,0,99,251,251,154,153,255,0,184,84,2,0,254,225,227,227,26,28,255,0,196,84,2,0,23,143,253,253,191,111,255,0,208,84,2,0,21,255,255,255,127,0,255,0,220,84,2,0,198,42,214,202,178,214,255,0,232,84,2,0,142,68,227,166,206,227,255,0,243,84,2,0,144,211,180,31,120,180,255,0,254,84,
2,0,65,97,223,178,223,138,255,0,9,85,2,0,142,68,227,166,206,227,255,0,20,85,2,0,144,211,180,31,120,180,255,0,31,85,2,0,65,97,223,178,223,138,255,0,42,85,2,0,82,184,160,51,160,44,255,0,53,85,2,0,142,68,227,166,206,227,255,0,64,85,2,0,144,211,180,31,120,180,255,0,75,85,2,0,65,97,223,178,223,138,255,0,86,85,2,0,82,184,160,51,160,44,255,0,97,85,2,0,0,99,251,251,154,153,255,0,108,85,2,0,142,68,227,166,206,227,255,0,119,85,2,0,144,211,180,31,120,180,255,0,130,85,2,0,65,97,223,178,223,138,255,0,141,85,2,
0,82,184,160,51,160,44,255,0,152,85,2,0,0,99,251,251,154,153,255,0,163,85,2,0,254,225,227,227,26,28,255,0,174,85,2,0,142,68,227,166,206,227,255,0,185,85,2,0,144,211,180,31,120,180,255,0,196,85,2,0,65,97,223,178,223,138,255,0,207,85,2,0,82,184,160,51,160,44,255,0,218,85,2,0,0,99,251,251,154,153,255,0,229,85,2,0,254,225,227,227,26,28,255,0,240,85,2,0,23,143,253,253,191,111,255,0,251,85,2,0,142,68,227,166,206,227,255,0,6,86,2,0,144,211,180,31,120,180,255,0,17,86,2,0,65,97,223,178,223,138,255,0,28,86,
2,0,82,184,160,51,160,44,255,0,39,86,2,0,0,99,251,251,154,153,255,0,50,86,2,0,254,225,227,227,26,28,255,0,61,86,2,0,23,143,253,253,191,111,255,0,72,86,2,0,21,255,255,255,127,0,255,0,83,86,2,0,142,68,227,166,206,227,255,0,94,86,2,0,144,211,180,31,120,180,255,0,105,86,2,0,65,97,223,178,223,138,255,0,116,86,2,0,82,184,160,51,160,44,255,0,127,86,2,0,0,99,251,251,154,153,255,0,138,86,2,0,254,225,227,227,26,28,255,0,149,86,2,0,23,143,253,253,191,111,255,0,160,86,2,0,21,255,255,255,127,0,255,0,171,86,2,
0,198,42,214,202,178,214,255,0,182,86,2,0,3,78,251,251,180,174,255,0,194,86,2,0,146,53,227,179,205,227,255,0,206,86,2,0,77,41,235,204,235,197,255,0,218,86,2,0,3,78,251,251,180,174,255,0,230,86,2,0,146,53,227,179,205,227,255,0,242,86,2,0,77,41,235,204,235,197,255,0,254,86,2,0,202,27,228,222,203,228,255,0,10,87,2,0,3,78,251,251,180,174,255,0,22,87,2,0,146,53,227,179,205,227,255,0,34,87,2,0,77,41,235,204,235,197,255,0,46,87,2,0,202,27,228,222,203,228,255,0,58,87,2,0,24,88,254,254,217,166,255,0,70,87,
2,0,3,78,251,251,180,174,255,0,82,87,2,0,146,53,227,179,205,227,255,0,94,87,2,0,77,41,235,204,235,197,255,0,106,87,2,0,202,27,228,222,203,228,255,0,118,87,2,0,24,88,254,254,217,166,255,0,130,87,2,0,42,50,255,255,255,204,255,0,142,87,2,0,3,78,251,251,180,174,255,0,154,87,2,0,146,53,227,179,205,227,255,0,166,87,2,0,77,41,235,204,235,197,255,0,178,87,2,0,202,27,228,222,203,228,255,0,190,87,2,0,24,88,254,254,217,166,255,0,202,87,2,0,42,50,255,255,255,204,255,0,214,87,2,0,28,44,229,229,216,189,255,0,226,
87,2,0,3,78,251,251,180,174,255,0,238,87,2,0,146,53,227,179,205,227,255,0,250,87,2,0,77,41,235,204,235,197,255,0,6,88,2,0,202,27,228,222,203,228,255,0,18,88,2,0,24,88,254,254,217,166,255,0,30,88,2,0,42,50,255,255,255,204,255,0,42,88,2,0,28,44,229,229,216,189,255,0,54,88,2,0,233,35,253,253,218,236,255,0,66,88,2,0,3,78,251,251,180,174,255,0,78,88,2,0,146,53,227,179,205,227,255,0,90,88,2,0,77,41,235,204,235,197,255,0,102,88,2,0,202,27,228,222,203,228,255,0,114,88,2,0,24,88,254,254,217,166,255,0,126,
88,2,0,42,50,255,255,255,204,255,0,138,88,2,0,28,44,229,229,216,189,255,0,150,88,2,0,233,35,253,253,218,236,255,0,162,88,2,0,0,0,242,242,242,242,255,0,174,88,2,0,108,53,226,179,226,205,255,0,186,88,2,0,17,81,253,253,205,172,255,0,198,88,2,0,155,31,232,203,213,232,255,0,210,88,2,0,108,53,226,179,226,205,255,0,222,88,2,0,17,81,253,253,205,172,255,0,234,88,2,0,155,31,232,203,213,232,255,0,246,88,2,0,228,43,244,244,202,228,255,0,2,89,2,0,108,53,226,179,226,205,255,0,14,89,2,0,17,81,253,253,205,172,255,
0,26,89,2,0,155,31,232,203,213,232,255,0,38,89,2,0,228,43,244,244,202,228,255,0,50,89,2,0,56,45,245,230,245,201,255,0,62,89,2,0,108,53,226,179,226,205,255,0,74,89,2,0,17,81,253,253,205,172,255,0,86,89,2,0,155,31,232,203,213,232,255,0,98,89,2,0,228,43,244,244,202,228,255,0,110,89,2,0,56,45,245,230,245,201,255,0,122,89,2,0,35,81,255,255,242,174,255,0,134,89,2,0,108,53,226,179,226,205,255,0,146,89,2,0,17,81,253,253,205,172,255,0,158,89,2,0,155,31,232,203,213,232,255,0,170,89,2,0,228,43,244,244,202,228,
255,0,182,89,2,0,56,45,245,230,245,201,255,0,194,89,2,0,35,81,255,255,242,174,255,0,206,89,2,0,25,39,241,241,226,204,255,0,218,89,2,0,108,53,226,179,226,205,255,0,230,89,2,0,17,81,253,253,205,172,255,0,242,89,2,0,155,31,232,203,213,232,255,0,254,89,2,0,228,43,244,244,202,228,255,0,10,90,2,0,56,45,245,230,245,201,255,0,22,90,2,0,35,81,255,255,242,174,255,0,34,90,2,0,25,39,241,241,226,204,255,0,46,90,2,0,0,0,204,204,204,204,255,0,58,90,2,0,230,253,142,142,1,82,255,0,68,90,2,0,77,191,100,39,100,25,255,
0,79,90,2,0,230,220,197,197,27,125,255,0,89,90,2,0,232,118,222,222,119,174,255,0,99,90,2,0,229,62,241,241,182,218,255,0,109,90,2,0,233,29,253,253,224,239,255,0,119,90,2,0,59,38,245,230,245,208,255,0,129,90,2,0,61,103,225,184,225,134,255,0,139,90,2,0,63,166,188,127,188,65,255,0,149,90,2,0,68,197,146,77,146,33,255,0,159,90,2,0,230,253,142,142,1,82,255,0,169,90,2,0,68,197,146,77,146,33,255,0,180,90,2,0,77,191,100,39,100,25,255,0,191,90,2,0,230,220,197,197,27,125,255,0,201,90,2,0,232,118,222,222,119,
174,255,0,211,90,2,0,229,62,241,241,182,218,255,0,221,90,2,0,233,29,253,253,224,239,255,0,231,90,2,0,0,0,247,247,247,247,255,0,241,90,2,0,59,38,245,230,245,208,255,0,251,90,2,0,61,103,225,184,225,134,255,0,5,91,2,0,63,166,188,127,188,65,255,0,15,91,2,0,231,76,233,233,163,201,255,0,24,91,2,0,0,0,247,247,247,247,255,0,33,91,2,0,63,129,215,161,215,106,255,0,42,91,2,0,228,220,208,208,28,139,255,0,51,91,2,0,229,62,241,241,182,218,255,0,60,91,2,0,61,103,225,184,225,134,255,0,69,91,2,0,72,198,172,77,172,
38,255,0,78,91,2,0,228,220,208,208,28,139,255,0,87,91,2,0,229,62,241,241,182,218,255,0,96,91,2,0,0,0,247,247,247,247,255,0,105,91,2,0,61,103,225,184,225,134,255,0,114,91,2,0,72,198,172,77,172,38,255,0,123,91,2,0,230,220,197,197,27,125,255,0,132,91,2,0,231,76,233,233,163,201,255,0,141,91,2,0,233,29,253,253,224,239,255,0,150,91,2,0,59,38,245,230,245,208,255,0,159,91,2,0,63,129,215,161,215,106,255,0,168,91,2,0,68,197,146,77,146,33,255,0,177,91,2,0,230,220,197,197,27,125,255,0,186,91,2,0,231,76,233,233,
163,201,255,0,195,91,2,0,233,29,253,253,224,239,255,0,204,91,2,0,0,0,247,247,247,247,255,0,213,91,2,0,59,38,245,230,245,208,255,0,222,91,2,0,63,129,215,161,215,106,255,0,231,91,2,0,68,197,146,77,146,33,255,0,240,91,2,0,230,220,197,197,27,125,255,0,249,91,2,0,232,118,222,222,119,174,255,0,2,92,2,0,229,62,241,241,182,218,255,0,11,92,2,0,233,29,253,253,224,239,255,0,20,92,2,0,59,38,245,230,245,208,255,0,29,92,2,0,61,103,225,184,225,134,255,0,38,92,2,0,63,166,188,127,188,65,255,0,47,92,2,0,68,197,146,
77,146,33,255,0,56,92,2,0,230,220,197,197,27,125,255,0,65,92,2,0,232,118,222,222,119,174,255,0,74,92,2,0,229,62,241,241,182,218,255,0,83,92,2,0,233,29,253,253,224,239,255,0,92,92,2,0,0,0,247,247,247,247,255,0,101,92,2,0,59,38,245,230,245,208,255,0,110,92,2,0,61,103,225,184,225,134,255,0,119,92,2,0,63,166,188,127,188,65,255,0,128,92,2,0,68,197,146,77,146,33,255,0,137,92,2,0,206,255,75,64,0,75,255,0,147,92,2,0,101,255,68,0,68,27,255,0,158,92,2,0,206,173,131,118,42,131,255,0,168,92,2,0,199,87,171,153,
112,171,255,0,178,92,2,0,199,51,207,194,165,207,255,0,188,92,2,0,210,21,232,231,212,232,255,0,198,92,2,0,76,30,240,217,240,211,255,0,208,92,2,0,80,68,219,166,219,160,255,0,218,92,2,0,88,123,174,90,174,97,255,0,228,92,2,0,97,197,120,27,120,55,255,0,238,92,2,0,206,255,75,64,0,75,255,0,248,92,2,0,97,197,120,27,120,55,255,0,3,93,2,0,101,255,68,0,68,27,255,0,14,93,2,0,206,173,131,118,42,131,255,0,24,93,2,0,199,87,171,153,112,171,255,0,34,93,2,0,199,51,207,194,165,207,255,0,44,93,2,0,210,21,232,231,212,
232,255,0,54,93,2,0,0,0,247,247,247,247,255,0,64,93,2,0,76,30,240,217,240,211,255,0,74,93,2,0,80,68,219,166,219,160,255,0,84,93,2,0,88,123,174,90,174,97,255,0,94,93,2,0,196,70,195,175,141,195,255,0,103,93,2,0,0,0,247,247,247,247,255,0,112,93,2,0,82,90,191,127,191,123,255,0,121,93,2,0,201,168,148,123,50,148,255,0,130,93,2,0,199,51,207,194,165,207,255,0,139,93,2,0,80,68,219,166,219,160,255,0,148,93,2,0,102,255,136,0,136,55,255,0,157,93,2,0,201,168,148,123,50,148,255,0,166,93,2,0,199,51,207,194,165,
207,255,0,175,93,2,0,0,0,247,247,247,247,255,0,184,93,2,0,80,68,219,166,219,160,255,0,193,93,2,0,102,255,136,0,136,55,255,0,202,93,2,0,206,173,131,118,42,131,255,0,211,93,2,0,196,70,195,175,141,195,255,0,220,93,2,0,210,21,232,231,212,232,255,0,229,93,2,0,76,30,240,217,240,211,255,0,238,93,2,0,82,90,191,127,191,123,255,0,247,93,2,0,97,197,120,27,120,55,255,0,0,94,2,0,206,173,131,118,42,131,255,0,9,94,2,0,196,70,195,175,141,195,255,0,18,94,2,0,210,21,232,231,212,232,255,0,27,94,2,0,0,0,247,247,247,
247,255,0,36,94,2,0,76,30,240,217,240,211,255,0,45,94,2,0,82,90,191,127,191,123,255,0,54,94,2,0,97,197,120,27,120,55,255,0,63,94,2,0,206,173,131,118,42,131,255,0,72,94,2,0,199,87,171,153,112,171,255,0,81,94,2,0,199,51,207,194,165,207,255,0,90,94,2,0,210,21,232,231,212,232,255,0,99,94,2,0,76,30,240,217,240,211,255,0,108,94,2,0,80,68,219,166,219,160,255,0,117,94,2,0,88,123,174,90,174,97,255,0,126,94,2,0,97,197,120,27,120,55,255,0,135,94,2,0,206,173,131,118,42,131,255,0,144,94,2,0,199,87,171,153,112,
171,255,0,153,94,2,0,199,51,207,194,165,207,255,0,162,94,2,0,210,21,232,231,212,232,255,0,171,94,2,0,0,0,247,247,247,247,255,0,180,94,2,0,76,30,240,217,240,211,255,0,189,94,2,0,80,68,219,166,219,160,255,0,198,94,2,0,88,123,174,90,174,97,255,0,207,94,2,0,97,197,120,27,120,55,255,0,216,94,2,0,189,11,242,236,231,242,255,0,225,94,2,0,151,61,219,166,189,219,255,0,234,94,2,0,141,197,190,43,140,190,255,0,243,94,2,0,185,8,246,241,238,246,255,0,252,94,2,0,155,40,225,189,201,225,255,0,5,95,2,0,145,112,207,
116,169,207,255,0,14,95,2,0,143,247,176,5,112,176,255,0,23,95,2,0,185,8,246,241,238,246,255,0,32,95,2,0,155,40,225,189,201,225,255,0,41,95,2,0,145,112,207,116,169,207,255,0,50,95,2,0,141,197,190,43,140,190,255,0,59,95,2,0,143,247,141,4,90,141,255,0,68,95,2,0,185,8,246,241,238,246,255,0,77,95,2,0,168,24,230,208,209,230,255,0,86,95,2,0,151,61,219,166,189,219,255,0,95,95,2,0,145,112,207,116,169,207,255,0,104,95,2,0,141,197,190,43,140,190,255,0,113,95,2,0,143,247,141,4,90,141,255,0,122,95,2,0,185,8,246,
241,238,246,255,0,131,95,2,0,168,24,230,208,209,230,255,0,140,95,2,0,151,61,219,166,189,219,255,0,149,95,2,0,145,112,207,116,169,207,255,0,158,95,2,0,142,183,192,54,144,192,255,0,167,95,2,0,143,247,176,5,112,176,255,0,176,95,2,0,143,248,123,3,78,123,255,0,185,95,2,0,233,8,255,255,247,251,255,0,194,95,2,0,189,11,242,236,231,242,255,0,203,95,2,0,168,24,230,208,209,230,255,0,212,95,2,0,151,61,219,166,189,219,255,0,221,95,2,0,145,112,207,116,169,207,255,0,230,95,2,0,142,183,192,54,144,192,255,0,239,95,
2,0,143,247,176,5,112,176,255,0,248,95,2,0,143,248,123,3,78,123,255,0,1,96,2,0,233,8,255,255,247,251,255,0,10,96,2,0,189,11,242,236,231,242,255,0,19,96,2,0,168,24,230,208,209,230,255,0,28,96,2,0,151,61,219,166,189,219,255,0,37,96,2,0,145,112,207,116,169,207,255,0,46,96,2,0,142,183,192,54,144,192,255,0,55,96,2,0,143,247,176,5,112,176,255,0,64,96,2,0,143,247,141,4,90,141,255,0,73,96,2,0,143,249,88,2,56,88,255,0,82,96,2,0,200,14,240,236,226,240,255,0,93,96,2,0,151,61,219,166,189,219,255,0,104,96,2,0,
130,208,153,28,144,153,255,0,115,96,2,0,207,8,247,246,239,247,255,0,126,96,2,0,155,40,225,189,201,225,255,0,137,96,2,0,143,128,207,103,169,207,255,0,148,96,2,0,130,251,138,2,129,138,255,0,159,96,2,0,207,8,247,246,239,247,255,0,170,96,2,0,155,40,225,189,201,225,255,0,181,96,2,0,143,128,207,103,169,207,255,0,192,96,2,0,130,208,153,28,144,153,255,0,203,96,2,0,119,252,108,1,108,89,255,0,214,96,2,0,207,8,247,246,239,247,255,0,225,96,2,0,168,24,230,208,209,230,255,0,236,96,2,0,151,61,219,166,189,219,255,
0,247,96,2,0,143,128,207,103,169,207,255,0,2,97,2,0,130,208,153,28,144,153,255,0,13,97,2,0,119,252,108,1,108,89,255,0,24,97,2,0,207,8,247,246,239,247,255,0,35,97,2,0,168,24,230,208,209,230,255,0,46,97,2,0,151,61,219,166,189,219,255,0,57,97,2,0,143,128,207,103,169,207,255,0,68,97,2,0,142,183,192,54,144,192,255,0,79,97,2,0,130,251,138,2,129,138,255,0,90,97,2,0,118,252,100,1,100,80,255,0,101,97,2,0,233,8,255,255,247,251,255,0,112,97,2,0,200,14,240,236,226,240,255,0,123,97,2,0,168,24,230,208,209,230,
255,0,134,97,2,0,151,61,219,166,189,219,255,0,145,97,2,0,143,128,207,103,169,207,255,0,156,97,2,0,142,183,192,54,144,192,255,0,167,97,2,0,130,251,138,2,129,138,255,0,178,97,2,0,118,252,100,1,100,80,255,0,189,97,2,0,233,8,255,255,247,251,255,0,200,97,2,0,200,14,240,236,226,240,255,0,211,97,2,0,168,24,230,208,209,230,255,0,222,97,2,0,151,61,219,166,189,219,255,0,233,97,2,0,143,128,207,103,169,207,255,0,244,97,2,0,142,183,192,54,144,192,255,0,255,97,2,0,130,251,138,2,129,138,255,0,10,98,2,0,119,252,
108,1,108,89,255,0,21,98,2,0,117,251,70,1,70,54,255,0,32,98,2,0,18,238,127,127,59,8,255,0,42,98,2,0,195,255,75,45,0,75,255,0,53,98,2,0,20,246,179,179,88,6,255,0,63,98,2,0,22,232,224,224,130,20,255,0,73,98,2,0,23,155,253,253,184,99,255,0,83,98,2,0,24,72,254,254,224,182,255,0,93,98,2,0,165,20,235,216,218,235,255,0,103,98,2,0,177,47,210,178,171,210,255,0,113,98,2,0,179,84,172,128,115,172,255,0,123,98,2,0,189,181,136,84,39,136,255,0,133,98,2,0,18,238,127,127,59,8,255,0,143,98,2,0,189,181,136,84,39,136,
255,0,154,98,2,0,195,255,75,45,0,75,255,0,165,98,2,0,20,246,179,179,88,6,255,0,175,98,2,0,22,232,224,224,130,20,255,0,185,98,2,0,23,155,253,253,184,99,255,0,195,98,2,0,24,72,254,254,224,182,255,0,205,98,2,0,0,0,247,247,247,247,255,0,215,98,2,0,165,20,235,216,218,235,255,0,225,98,2,0,177,47,210,178,171,210,255,0,235,98,2,0,179,84,172,128,115,172,255,0,245,98,2,0,23,187,241,241,163,64,255,0,254,98,2,0,0,0,247,247,247,247,255,0,7,99,2,0,178,69,195,153,142,195,255,0,16,99,2,0,17,253,230,230,97,1,255,
0,25,99,2,0,23,155,253,253,184,99,255,0,34,99,2,0,177,47,210,178,171,210,255,0,43,99,2,0,185,155,153,94,60,153,255,0,52,99,2,0,17,253,230,230,97,1,255,0,61,99,2,0,23,155,253,253,184,99,255,0,70,99,2,0,0,0,247,247,247,247,255,0,79,99,2,0,177,47,210,178,171,210,255,0,88,99,2,0,185,155,153,94,60,153,255,0,97,99,2,0,20,246,179,179,88,6,255,0,106,99,2,0,23,187,241,241,163,64,255,0,115,99,2,0,24,72,254,254,224,182,255,0,124,99,2,0,165,20,235,216,218,235,255,0,133,99,2,0,178,69,195,153,142,195,255,0,142,
99,2,0,189,181,136,84,39,136,255,0,151,99,2,0,20,246,179,179,88,6,255,0,160,99,2,0,23,187,241,241,163,64,255,0,169,99,2,0,24,72,254,254,224,182,255,0,178,99,2,0,0,0,247,247,247,247,255,0,187,99,2,0,165,20,235,216,218,235,255,0,196,99,2,0,178,69,195,153,142,195,255,0,205,99,2,0,189,181,136,84,39,136,255,0,214,99,2,0,20,246,179,179,88,6,255,0,223,99,2,0,22,232,224,224,130,20,255,0,232,99,2,0,23,155,253,253,184,99,255,0,241,99,2,0,24,72,254,254,224,182,255,0,250,99,2,0,165,20,235,216,218,235,255,0,3,
100,2,0,177,47,210,178,171,210,255,0,12,100,2,0,179,84,172,128,115,172,255,0,21,100,2,0,189,181,136,84,39,136,255,0,30,100,2,0,20,246,179,179,88,6,255,0,39,100,2,0,22,232,224,224,130,20,255,0,48,100,2,0,23,155,253,253,184,99,255,0,57,100,2,0,24,72,254,254,224,182,255,0,66,100,2,0,0,0,247,247,247,247,255,0,75,100,2,0,165,20,235,216,218,235,255,0,84,100,2,0,177,47,210,178,171,210,255,0,93,100,2,0,179,84,172,128,115,172,255,0,102,100,2,0,189,181,136,84,39,136,255,0,111,100,2,0,188,14,239,231,225,239,
255,0,120,100,2,0,214,67,201,201,148,199,255,0,129,100,2,0,234,222,221,221,28,119,255,0,138,100,2,0,185,8,246,241,238,246,255,0,147,100,2,0,211,41,216,215,181,216,255,0,156,100,2,0,228,139,223,223,101,176,255,0,165,100,2,0,239,232,206,206,18,86,255,0,174,100,2,0,185,8,246,241,238,246,255,0,183,100,2,0,211,41,216,215,181,216,255,0,192,100,2,0,228,139,223,223,101,176,255,0,201,100,2,0,234,222,221,221,28,119,255,0,210,100,2,0,236,255,152,152,0,67,255,0,219,100,2,0,185,8,246,241,238,246,255,0,228,100,
2,0,204,38,218,212,185,218,255,0,237,100,2,0,214,67,201,201,148,199,255,0,246,100,2,0,228,139,223,223,101,176,255,0,255,100,2,0,234,222,221,221,28,119,255,0,8,101,2,0,236,255,152,152,0,67,255,0,17,101,2,0,185,8,246,241,238,246,255,0,26,101,2,0,204,38,218,212,185,218,255,0,35,101,2,0,214,67,201,201,148,199,255,0,44,101,2,0,228,139,223,223,101,176,255,0,53,101,2,0,233,209,231,231,41,138,255,0,62,101,2,0,239,232,206,206,18,86,255,0,71,101,2,0,236,255,145,145,0,63,255,0,80,101,2,0,195,5,249,247,244,249,
255,0,89,101,2,0,188,14,239,231,225,239,255,0,98,101,2,0,204,38,218,212,185,218,255,0,107,101,2,0,214,67,201,201,148,199,255,0,116,101,2,0,228,139,223,223,101,176,255,0,125,101,2,0,233,209,231,231,41,138,255,0,134,101,2,0,239,232,206,206,18,86,255,0,143,101,2,0,236,255,145,145,0,63,255,0,152,101,2,0,195,5,249,247,244,249,255,0,161,101,2,0,188,14,239,231,225,239,255,0,170,101,2,0,204,38,218,212,185,218,255,0,179,101,2,0,214,67,201,201,148,199,255,0,188,101,2,0,228,139,223,223,101,176,255,0,197,101,
2,0,233,209,231,231,41,138,255,0,206,101,2,0,239,232,206,206,18,86,255,0,215,101,2,0,236,255,152,152,0,67,255,0,224,101,2,0,242,255,103,103,0,31,255,0,233,101,2,0,180,8,245,239,237,245,255,0,245,101,2,0,168,37,220,188,189,220,255,0,1,102,2,0,176,100,177,117,107,177,255,0,13,102,2,0,182,7,247,242,240,247,255,0,25,102,2,0,173,28,226,203,201,226,255,0,37,102,2,0,173,58,200,158,154,200,255,0,49,102,2,0,182,128,163,106,81,163,255,0,61,102,2,0,182,7,247,242,240,247,255,0,73,102,2,0,173,28,226,203,201,226,
255,0,85,102,2,0,173,58,200,158,154,200,255,0,97,102,2,0,176,100,177,117,107,177,255,0,109,102,2,0,188,185,143,84,39,143,255,0,121,102,2,0,182,7,247,242,240,247,255,0,133,102,2,0,170,18,235,218,218,235,255,0,145,102,2,0,168,37,220,188,189,220,255,0,157,102,2,0,173,58,200,158,154,200,255,0,169,102,2,0,176,100,177,117,107,177,255,0,181,102,2,0,188,185,143,84,39,143,255,0,193,102,2,0,182,7,247,242,240,247,255,0,205,102,2,0,170,18,235,218,218,235,255,0,217,102,2,0,168,37,220,188,189,220,255,0,229,102,
2,0,173,58,200,158,154,200,255,0,241,102,2,0,172,83,186,128,125,186,255,0,253,102,2,0,182,128,163,106,81,163,255,0,9,103,2,0,190,216,134,74,20,134,255,0,21,103,2,0,191,2,253,252,251,253,255,0,33,103,2,0,180,8,245,239,237,245,255,0,45,103,2,0,170,18,235,218,218,235,255,0,57,103,2,0,168,37,220,188,189,220,255,0,69,103,2,0,173,58,200,158,154,200,255,0,81,103,2,0,172,83,186,128,125,186,255,0,93,103,2,0,182,128,163,106,81,163,255,0,105,103,2,0,190,216,134,74,20,134,255,0,117,103,2,0,191,2,253,252,251,
253,255,0,129,103,2,0,180,8,245,239,237,245,255,0,141,103,2,0,170,18,235,218,218,235,255,0,153,103,2,0,168,37,220,188,189,220,255,0,165,103,2,0,173,58,200,158,154,200,255,0,177,103,2,0,172,83,186,128,125,186,255,0,189,103,2,0,182,128,163,106,81,163,255,0,201,103,2,0,188,185,143,84,39,143,255,0,213,103,2,0,191,255,125,63,0,125,255,0,225,103,2,0,242,255,103,103,0,31,255,0,235,103,2,0,150,241,97,5,48,97,255,0,246,103,2,0,249,220,178,178,24,43,255,0,0,104,2,0,5,163,214,214,96,77,255,0,10,104,2,0,13,119,
244,244,165,130,255,0,20,104,2,0,15,54,253,253,219,199,255,0,30,104,2,0,142,32,240,209,229,240,255,0,40,104,2,0,141,87,222,146,197,222,255,0,50,104,2,0,143,167,195,67,147,195,255,0,60,104,2,0,148,206,172,33,102,172,255,0,70,104,2,0,242,255,103,103,0,31,255,0,80,104,2,0,148,206,172,33,102,172,255,0,91,104,2,0,150,241,97,5,48,97,255,0,102,104,2,0,249,220,178,178,24,43,255,0,112,104,2,0,5,163,214,214,96,77,255,0,122,104,2,0,13,119,244,244,165,130,255,0,132,104,2,0,15,54,253,253,219,199,255,0,142,104,
2,0,0,0,247,247,247,247,255,0,152,104,2,0,142,32,240,209,229,240,255,0,162,104,2,0,141,87,222,146,197,222,255,0,172,104,2,0,143,167,195,67,147,195,255,0,182,104,2,0,12,150,239,239,138,98,255,0,191,104,2,0,0,0,247,247,247,247,255,0,200,104,2,0,143,128,207,103,169,207,255,0,209,104,2,0,248,255,202,202,0,32,255,0,218,104,2,0,13,119,244,244,165,130,255,0,227,104,2,0,141,87,222,146,197,222,255,0,236,104,2,0,143,247,176,5,113,176,255,0,245,104,2,0,248,255,202,202,0,32,255,0,254,104,2,0,13,119,244,244,165,
130,255,0,7,105,2,0,0,0,247,247,247,247,255,0,16,105,2,0,141,87,222,146,197,222,255,0,25,105,2,0,143,247,176,5,113,176,255,0,34,105,2,0,249,220,178,178,24,43,255,0,43,105,2,0,12,150,239,239,138,98,255,0,52,105,2,0,15,54,253,253,219,199,255,0,61,105,2,0,142,32,240,209,229,240,255,0,70,105,2,0,143,128,207,103,169,207,255,0,79,105,2,0,148,206,172,33,102,172,255,0,88,105,2,0,249,220,178,178,24,43,255,0,97,105,2,0,12,150,239,239,138,98,255,0,106,105,2,0,15,54,253,253,219,199,255,0,115,105,2,0,0,0,247,
247,247,247,255,0,124,105,2,0,142,32,240,209,229,240,255,0,133,105,2,0,143,128,207,103,169,207,255,0,142,105,2,0,148,206,172,33,102,172,255,0,151,105,2,0,249,220,178,178,24,43,255,0,160,105,2,0,5,163,214,214,96,77,255,0,169,105,2,0,13,119,244,244,165,130,255,0,178,105,2,0,15,54,253,253,219,199,255,0,187,105,2,0,142,32,240,209,229,240,255,0,196,105,2,0,141,87,222,146,197,222,255,0,205,105,2,0,143,167,195,67,147,195,255,0,214,105,2,0,148,206,172,33,102,172,255,0,223,105,2,0,249,220,178,178,24,43,255,
0,232,105,2,0,5,163,214,214,96,77,255,0,241,105,2,0,13,119,244,244,165,130,255,0,250,105,2,0,15,54,253,253,219,199,255,0,3,106,2,0,0,0,247,247,247,247,255,0,12,106,2,0,142,32,240,209,229,240,255,0,21,106,2,0,141,87,222,146,197,222,255,0,30,106,2,0,143,167,195,67,147,195,255,0,39,106,2,0,148,206,172,33,102,172,255,0,48,106,2,0,242,255,103,103,0,31,255,0,58,106,2,0,0,0,26,26,26,26,255,0,69,106,2,0,249,220,178,178,24,43,255,0,79,106,2,0,5,163,214,214,96,77,255,0,89,106,2,0,13,119,244,244,165,130,255,
0,99,106,2,0,15,54,253,253,219,199,255,0,109,106,2,0,0,0,224,224,224,224,255,0,119,106,2,0,0,0,186,186,186,186,255,0,129,106,2,0,0,0,135,135,135,135,255,0,139,106,2,0,0,0,77,77,77,77,255,0,149,106,2,0,242,255,103,103,0,31,255,0,159,106,2,0,0,0,77,77,77,77,255,0,170,106,2,0,0,0,26,26,26,26,255,0,181,106,2,0,249,220,178,178,24,43,255,0,191,106,2,0,5,163,214,214,96,77,255,0,201,106,2,0,13,119,244,244,165,130,255,0,211,106,2,0,15,54,253,253,219,199,255,0,221,106,2,0,0,0,255,255,255,255,255,0,231,106,
2,0,0,0,224,224,224,224,255,0,241,106,2,0,0,0,186,186,186,186,255,0,251,106,2,0,0,0,135,135,135,135,255,0,5,107,2,0,12,150,239,239,138,98,255,0,14,107,2,0,0,0,255,255,255,255,255,0,23,107,2,0,0,0,153,153,153,153,255,0,32,107,2,0,248,255,202,202,0,32,255,0,41,107,2,0,13,119,244,244,165,130,255,0,50,107,2,0,0,0,186,186,186,186,255,0,59,107,2,0,0,0,64,64,64,64,255,0,68,107,2,0,248,255,202,202,0,32,255,0,77,107,2,0,13,119,244,244,165,130,255,0,86,107,2,0,0,0,255,255,255,255,255,0,95,107,2,0,0,0,186,186,
186,186,255,0,104,107,2,0,0,0,64,64,64,64,255,0,113,107,2,0,249,220,178,178,24,43,255,0,122,107,2,0,12,150,239,239,138,98,255,0,131,107,2,0,15,54,253,253,219,199,255,0,140,107,2,0,0,0,224,224,224,224,255,0,149,107,2,0,0,0,153,153,153,153,255,0,158,107,2,0,0,0,77,77,77,77,255,0,167,107,2,0,249,220,178,178,24,43,255,0,176,107,2,0,12,150,239,239,138,98,255,0,185,107,2,0,15,54,253,253,219,199,255,0,194,107,2,0,0,0,255,255,255,255,255,0,203,107,2,0,0,0,224,224,224,224,255,0,212,107,2,0,0,0,153,153,153,
153,255,0,221,107,2,0,0,0,77,77,77,77,255,0,230,107,2,0,249,220,178,178,24,43,255,0,239,107,2,0,5,163,214,214,96,77,255,0,248,107,2,0,13,119,244,244,165,130,255,0,1,108,2,0,15,54,253,253,219,199,255,0,10,108,2,0,0,0,224,224,224,224,255,0,19,108,2,0,0,0,186,186,186,186,255,0,28,108,2,0,0,0,135,135,135,135,255,0,37,108,2,0,0,0,77,77,77,77,255,0,46,108,2,0,249,220,178,178,24,43,255,0,55,108,2,0,5,163,214,214,96,77,255,0,64,108,2,0,13,119,244,244,165,130,255,0,73,108,2,0,15,54,253,253,219,199,255,0,82,
108,2,0,0,0,255,255,255,255,255,0,91,108,2,0,0,0,224,224,224,224,255,0,100,108,2,0,0,0,186,186,186,186,255,0,109,108,2,0,0,0,135,135,135,135,255,0,118,108,2,0,0,0,77,77,77,77,255,0,127,108,2,0,3,32,253,253,224,221,255,0,136,108,2,0,244,92,250,250,159,181,255,0,145,108,2,0,227,220,197,197,27,138,255,0,154,108,2,0,13,28,254,254,235,226,255,0,163,108,2,0,252,72,251,251,180,185,255,0,172,108,2,0,238,147,247,247,104,161,255,0,181,108,2,0,224,253,174,174,1,126,255,0,190,108,2,0,13,28,254,254,235,226,255,
0,199,108,2,0,252,72,251,251,180,185,255,0,208,108,2,0,238,147,247,247,104,161,255,0,217,108,2,0,227,220,197,197,27,138,255,0,226,108,2,0,213,252,122,122,1,119,255,0,235,108,2,0,13,28,254,254,235,226,255,0,244,108,2,0,3,60,252,252,197,192,255,0,253,108,2,0,244,92,250,250,159,181,255,0,6,109,2,0,238,147,247,247,104,161,255,0,15,109,2,0,227,220,197,197,27,138,255,0,24,109,2,0,213,252,122,122,1,119,255,0,33,109,2,0,13,28,254,254,235,226,255,0,42,109,2,0,3,60,252,252,197,192,255,0,51,109,2,0,244,92,250,
250,159,181,255,0,60,109,2,0,238,147,247,247,104,161,255,0,69,109,2,0,230,195,221,221,52,151,255,0,78,109,2,0,224,253,174,174,1,126,255,0,87,109,2,0,213,252,122,122,1,119,255,0,96,109,2,0,14,12,255,255,247,243,255,0,105,109,2,0,3,32,253,253,224,221,255,0,114,109,2,0,3,60,252,252,197,192,255,0,123,109,2,0,244,92,250,250,159,181,255,0,132,109,2,0,238,147,247,247,104,161,255,0,141,109,2,0,230,195,221,221,52,151,255,0,150,109,2,0,224,253,174,174,1,126,255,0,159,109,2,0,213,252,122,122,1,119,255,0,168,
109,2,0,14,12,255,255,247,243,255,0,177,109,2,0,3,32,253,253,224,221,255,0,186,109,2,0,3,60,252,252,197,192,255,0,195,109,2,0,244,92,250,250,159,181,255,0,204,109,2,0,238,147,247,247,104,161,255,0,213,109,2,0,230,195,221,221,52,151,255,0,222,109,2,0,224,253,174,174,1,126,255,0,231,109,2,0,213,252,122,122,1,119,255,0,240,109,2,0,199,255,106,73,0,106,255],"i8",4,n.q+64120);
D([249,109,2,0,245,255,165,165,0,38,255,0,5,110,2,0,167,171,149,49,54,149,255,0,18,110,2,0,2,208,215,215,48,39,255,0,30,110,2,0,10,184,244,244,109,67,255,0,42,110,2,0,20,157,253,253,174,97,255,0,54,110,2,0,30,110,254,254,224,144,255,0,66,110,2,0,136,24,248,224,243,248,255,0,78,110,2,0,138,67,233,171,217,233,255,0,90,110,2,0,143,113,209,116,173,209,255,0,102,110,2,0,151,157,180,69,117,180,255,0,114,110,2,0,245,255,165,165,0,38,255,0,126,110,2,0,151,157,180,69,117,180,255,0,139,110,2,0,167,171,149,
49,54,149,255,0,152,110,2,0,2,208,215,215,48,39,255,0,164,110,2,0,10,184,244,244,109,67,255,0,176,110,2,0,20,157,253,253,174,97,255,0,188,110,2,0,30,110,254,254,224,144,255,0,200,110,2,0,42,64,255,255,255,191,255,0,212,110,2,0,136,24,248,224,243,248,255,0,224,110,2,0,138,67,233,171,217,233,255,0,236,110,2,0,143,113,209,116,173,209,255,0,248,110,2,0,13,164,252,252,141,89,255,0,3,111,2,0,42,64,255,255,255,191,255,0,14,111,2,0,143,86,219,145,191,219,255,0,25,111,2,0,254,225,215,215,25,28,255,0,36,111,
2,0,20,157,253,253,174,97,255,0,47,111,2,0,138,67,233,171,217,233,255,0,58,111,2,0,145,193,182,44,123,182,255,0,69,111,2,0,254,225,215,215,25,28,255,0,80,111,2,0,20,157,253,253,174,97,255,0,91,111,2,0,42,64,255,255,255,191,255,0,102,111,2,0,138,67,233,171,217,233,255,0,113,111,2,0,145,193,182,44,123,182,255,0,124,111,2,0,2,208,215,215,48,39,255,0,135,111,2,0,13,164,252,252,141,89,255,0,146,111,2,0,30,110,254,254,224,144,255,0,157,111,2,0,136,24,248,224,243,248,255,0,168,111,2,0,143,86,219,145,191,
219,255,0,179,111,2,0,151,157,180,69,117,180,255,0,190,111,2,0,2,208,215,215,48,39,255,0,201,111,2,0,13,164,252,252,141,89,255,0,212,111,2,0,30,110,254,254,224,144,255,0,223,111,2,0,42,64,255,255,255,191,255,0,234,111,2,0,136,24,248,224,243,248,255,0,245,111,2,0,143,86,219,145,191,219,255,0,0,112,2,0,151,157,180,69,117,180,255,0,11,112,2,0,2,208,215,215,48,39,255,0,22,112,2,0,10,184,244,244,109,67,255,0,33,112,2,0,20,157,253,253,174,97,255,0,44,112,2,0,30,110,254,254,224,144,255,0,55,112,2,0,136,
24,248,224,243,248,255,0,66,112,2,0,138,67,233,171,217,233,255,0,77,112,2,0,143,113,209,116,173,209,255,0,88,112,2,0,151,157,180,69,117,180,255,0,99,112,2,0,2,208,215,215,48,39,255,0,110,112,2,0,10,184,244,244,109,67,255,0,121,112,2,0,20,157,253,253,174,97,255,0,132,112,2,0,30,110,254,254,224,144,255,0,143,112,2,0,42,64,255,255,255,191,255,0,154,112,2,0,136,24,248,224,243,248,255,0,165,112,2,0,138,67,233,171,217,233,255,0,176,112,2,0,143,113,209,116,173,209,255,0,187,112,2,0,151,157,180,69,117,180,
255,0,198,112,2,0,245,255,165,165,0,38,255,0,210,112,2,0,107,255,104,0,104,55,255,0,223,112,2,0,2,208,215,215,48,39,255,0,235,112,2,0,10,184,244,244,109,67,255,0,247,112,2,0,20,157,253,253,174,97,255,0,3,113,2,0,31,115,254,254,224,139,255,0,15,113,2,0,51,106,239,217,239,139,255,0,27,113,2,0,62,130,217,166,217,106,255,0,39,113,2,0,83,121,189,102,189,99,255,0,51,113,2,0,103,211,152,26,152,80,255,0,63,113,2,0,245,255,165,165,0,38,255,0,75,113,2,0,103,211,152,26,152,80,255,0,88,113,2,0,107,255,104,0,
104,55,255,0,101,113,2,0,2,208,215,215,48,39,255,0,113,113,2,0,10,184,244,244,109,67,255,0,125,113,2,0,20,157,253,253,174,97,255,0,137,113,2,0,31,115,254,254,224,139,255,0,149,113,2,0,42,64,255,255,255,191,255,0,161,113,2,0,51,106,239,217,239,139,255,0,173,113,2,0,62,130,217,166,217,106,255,0,185,113,2,0,83,121,189,102,189,99,255,0,197,113,2,0,13,164,252,252,141,89,255,0,208,113,2,0,42,64,255,255,255,191,255,0,219,113,2,0,66,136,207,145,207,96,255,0,230,113,2,0,254,225,215,215,25,28,255,0,241,113,
2,0,20,157,253,253,174,97,255,0,252,113,2,0,62,130,217,166,217,106,255,0,7,114,2,0,98,210,150,26,150,65,255,0,18,114,2,0,254,225,215,215,25,28,255,0,29,114,2,0,20,157,253,253,174,97,255,0,40,114,2,0,42,64,255,255,255,191,255,0,51,114,2,0,62,130,217,166,217,106,255,0,62,114,2,0,98,210,150,26,150,65,255,0,73,114,2,0,2,208,215,215,48,39,255,0,84,114,2,0,13,164,252,252,141,89,255,0,95,114,2,0,31,115,254,254,224,139,255,0,106,114,2,0,51,106,239,217,239,139,255,0,117,114,2,0,66,136,207,145,207,96,255,0,
128,114,2,0,103,211,152,26,152,80,255,0,139,114,2,0,2,208,215,215,48,39,255,0,150,114,2,0,13,164,252,252,141,89,255,0,161,114,2,0,31,115,254,254,224,139,255,0,172,114,2,0,42,64,255,255,255,191,255,0,183,114,2,0,51,106,239,217,239,139,255,0,194,114,2,0,66,136,207,145,207,96,255,0,205,114,2,0,103,211,152,26,152,80,255,0,216,114,2,0,2,208,215,215,48,39,255,0,227,114,2,0,10,184,244,244,109,67,255,0,238,114,2,0,20,157,253,253,174,97,255,0,249,114,2,0,31,115,254,254,224,139,255,0,4,115,2,0,51,106,239,217,
239,139,255,0,15,115,2,0,62,130,217,166,217,106,255,0,26,115,2,0,83,121,189,102,189,99,255,0,37,115,2,0,103,211,152,26,152,80,255,0,48,115,2,0,2,208,215,215,48,39,255,0,59,115,2,0,10,184,244,244,109,67,255,0,70,115,2,0,20,157,253,253,174,97,255,0,81,115,2,0,31,115,254,254,224,139,255,0,92,115,2,0,42,64,255,255,255,191,255,0,103,115,2,0,51,106,239,217,239,139,255,0,114,115,2,0,62,130,217,166,217,106,255,0,125,115,2,0,83,121,189,102,189,99,255,0,136,115,2,0,103,211,152,26,152,80,255,0,147,115,2,0,13,
44,254,254,224,210,255,0,156,115,2,0,9,139,252,252,146,114,255,0,165,115,2,0,1,211,222,222,45,38,255,0,174,115,2,0,13,37,254,254,229,217,255,0,183,115,2,0,11,108,252,252,174,145,255,0,192,115,2,0,7,179,251,251,106,74,255,0,201,115,2,0,253,224,203,203,24,29,255,0,210,115,2,0,13,37,254,254,229,217,255,0,219,115,2,0,11,108,252,252,174,145,255,0,228,115,2,0,7,179,251,251,106,74,255,0,237,115,2,0,1,211,222,222,45,38,255,0,246,115,2,0,253,231,165,165,15,21,255,0,255,115,2,0,13,37,254,254,229,217,255,0,
8,116,2,0,12,92,252,252,187,161,255,0,17,116,2,0,9,139,252,252,146,114,255,0,26,116,2,0,7,179,251,251,106,74,255,0,35,116,2,0,1,211,222,222,45,38,255,0,44,116,2,0,253,231,165,165,15,21,255,0,53,116,2,0,13,37,254,254,229,217,255,0,62,116,2,0,12,92,252,252,187,161,255,0,71,116,2,0,9,139,252,252,146,114,255,0,80,116,2,0,7,179,251,251,106,74,255,0,89,116,2,0,3,208,239,239,59,44,255,0,98,116,2,0,253,224,203,203,24,29,255,0,107,116,2,0,251,255,153,153,0,13,255,0,116,116,2,0,14,15,255,255,245,240,255,0,
125,116,2,0,13,44,254,254,224,210,255,0,134,116,2,0,12,92,252,252,187,161,255,0,143,116,2,0,9,139,252,252,146,114,255,0,152,116,2,0,7,179,251,251,106,74,255,0,161,116,2,0,3,208,239,239,59,44,255,0,170,116,2,0,253,224,203,203,24,29,255,0,179,116,2,0,251,255,153,153,0,13,255,0,188,116,2,0,14,15,255,255,245,240,255,0,197,116,2,0,13,44,254,254,224,210,255,0,206,116,2,0,12,92,252,252,187,161,255,0,215,116,2,0,9,139,252,252,146,114,255,0,224,116,2,0,7,179,251,251,106,74,255,0,233,116,2,0,3,208,239,239,
59,44,255,0,242,116,2,0,253,224,203,203,24,29,255,0,251,116,2,0,253,231,165,165,15,21,255,0,4,117,2,0,249,255,103,103,0,13,255,0,13,117,2,0,254,225,228,228,26,28,255,0,22,117,2,0,146,178,184,55,126,184,255,0,31,117,2,0,83,147,175,77,175,74,255,0,40,117,2,0,254,225,228,228,26,28,255,0,49,117,2,0,146,178,184,55,126,184,255,0,58,117,2,0,83,147,175,77,175,74,255,0,67,117,2,0,207,132,163,152,78,163,255,0,76,117,2,0,254,225,228,228,26,28,255,0,85,117,2,0,146,178,184,55,126,184,255,0,94,117,2,0,83,147,175,
77,175,74,255,0,103,117,2,0,207,132,163,152,78,163,255,0,112,117,2,0,21,255,255,255,127,0,255,0,121,117,2,0,254,225,228,228,26,28,255,0,130,117,2,0,146,178,184,55,126,184,255,0,139,117,2,0,83,147,175,77,175,74,255,0,148,117,2,0,207,132,163,152,78,163,255,0,157,117,2,0,21,255,255,255,127,0,255,0,166,117,2,0,42,204,255,255,255,51,255,0,175,117,2,0,254,225,228,228,26,28,255,0,184,117,2,0,146,178,184,55,126,184,255,0,193,117,2,0,83,147,175,77,175,74,255,0,202,117,2,0,207,132,163,152,78,163,255,0,211,
117,2,0,21,255,255,255,127,0,255,0,220,117,2,0,42,204,255,255,255,51,255,0,229,117,2,0,15,193,166,166,86,40,255,0,238,117,2,0,254,225,228,228,26,28,255,0,247,117,2,0,146,178,184,55,126,184,255,0,0,118,2,0,83,147,175,77,175,74,255,0,9,118,2,0,207,132,163,152,78,163,255,0,18,118,2,0,21,255,255,255,127,0,255,0,27,118,2,0,42,204,255,255,255,51,255,0,36,118,2,0,15,193,166,166,86,40,255,0,45,118,2,0,232,121,247,247,129,191,255,0,54,118,2,0,254,225,228,228,26,28,255,0,63,118,2,0,146,178,184,55,126,184,255,
0,72,118,2,0,83,147,175,77,175,74,255,0,81,118,2,0,207,132,163,152,78,163,255,0,90,118,2,0,21,255,255,255,127,0,255,0,99,118,2,0,42,204,255,255,255,51,255,0,108,118,2,0,15,193,166,166,86,40,255,0,117,118,2,0,232,121,247,247,129,191,255,0,126,118,2,0,0,0,153,153,153,153,255,0,135,118,2,0,114,120,194,102,194,165,255,0,144,118,2,0,11,155,252,252,141,98,255,0,153,118,2,0,156,77,203,141,160,203,255,0,162,118,2,0,114,120,194,102,194,165,255,0,171,118,2,0,11,155,252,252,141,98,255,0,180,118,2,0,156,77,203,
141,160,203,255,0,189,118,2,0,228,102,231,231,138,195,255,0,198,118,2,0,114,120,194,102,194,165,255,0,207,118,2,0,11,155,252,252,141,98,255,0,216,118,2,0,156,77,203,141,160,203,255,0,225,118,2,0,228,102,231,231,138,195,255,0,234,118,2,0,58,155,216,166,216,84,255,0,243,118,2,0,114,120,194,102,194,165,255,0,252,118,2,0,11,155,252,252,141,98,255,0,5,119,2,0,156,77,203,141,160,203,255,0,14,119,2,0,228,102,231,231,138,195,255,0,23,119,2,0,58,155,216,166,216,84,255,0,32,119,2,0,34,208,255,255,217,47,255,
0,41,119,2,0,114,120,194,102,194,165,255,0,50,119,2,0,11,155,252,252,141,98,255,0,59,119,2,0,156,77,203,141,160,203,255,0,68,119,2,0,228,102,231,231,138,195,255,0,77,119,2,0,58,155,216,166,216,84,255,0,86,119,2,0,34,208,255,255,217,47,255,0,95,119,2,0,25,90,229,229,196,148,255,0,104,119,2,0,114,120,194,102,194,165,255,0,113,119,2,0,11,155,252,252,141,98,255,0,122,119,2,0,156,77,203,141,160,203,255,0,131,119,2,0,228,102,231,231,138,195,255,0,140,119,2,0,58,155,216,166,216,84,255,0,149,119,2,0,34,208,
255,255,217,47,255,0,158,119,2,0,25,90,229,229,196,148,255,0,167,119,2,0,0,0,179,179,179,179,255,0,176,119,2,0,120,84,211,141,211,199,255,0,186,119,2,0,211,82,189,188,128,189,255,0,197,119,2,0,42,76,255,255,255,179,255,0,207,119,2,0,175,37,218,190,186,218,255,0,217,119,2,0,4,139,251,251,128,114,255,0,227,119,2,0,144,100,211,128,177,211,255,0,237,119,2,0,22,156,253,253,180,98,255,0,247,119,2,0,58,134,222,179,222,105,255,0,1,120,2,0,233,47,252,252,205,229,255,0,11,120,2,0,0,0,217,217,217,217,255,0,
21,120,2,0,120,84,211,141,211,199,255,0,31,120,2,0,211,82,189,188,128,189,255,0,42,120,2,0,77,41,235,204,235,197,255,0,53,120,2,0,42,76,255,255,255,179,255,0,63,120,2,0,175,37,218,190,186,218,255,0,73,120,2,0,4,139,251,251,128,114,255,0,83,120,2,0,144,100,211,128,177,211,255,0,93,120,2,0,22,156,253,253,180,98,255,0,103,120,2,0,58,134,222,179,222,105,255,0,113,120,2,0,233,47,252,252,205,229,255,0,123,120,2,0,0,0,217,217,217,217,255,0,133,120,2,0,120,84,211,141,211,199,255,0,143,120,2,0,211,82,189,
188,128,189,255,0,154,120,2,0,77,41,235,204,235,197,255,0,165,120,2,0,37,144,255,255,237,111,255,0,176,120,2,0,42,76,255,255,255,179,255,0,186,120,2,0,175,37,218,190,186,218,255,0,196,120,2,0,4,139,251,251,128,114,255,0,206,120,2,0,144,100,211,128,177,211,255,0,216,120,2,0,22,156,253,253,180,98,255,0,226,120,2,0,58,134,222,179,222,105,255,0,236,120,2,0,233,47,252,252,205,229,255,0,246,120,2,0,0,0,217,217,217,217,255,0,0,121,2,0,120,84,211,141,211,199,255,0,9,121,2,0,42,76,255,255,255,179,255,0,18,
121,2,0,175,37,218,190,186,218,255,0,27,121,2,0,120,84,211,141,211,199,255,0,36,121,2,0,42,76,255,255,255,179,255,0,45,121,2,0,175,37,218,190,186,218,255,0,54,121,2,0,4,139,251,251,128,114,255,0,63,121,2,0,120,84,211,141,211,199,255,0,72,121,2,0,42,76,255,255,255,179,255,0,81,121,2,0,175,37,218,190,186,218,255,0,90,121,2,0,4,139,251,251,128,114,255,0,99,121,2,0,144,100,211,128,177,211,255,0,108,121,2,0,120,84,211,141,211,199,255,0,117,121,2,0,42,76,255,255,255,179,255,0,126,121,2,0,175,37,218,190,
186,218,255,0,135,121,2,0,4,139,251,251,128,114,255,0,144,121,2,0,144,100,211,128,177,211,255,0,153,121,2,0,22,156,253,253,180,98,255,0,162,121,2,0,120,84,211,141,211,199,255,0,171,121,2,0,42,76,255,255,255,179,255,0,180,121,2,0,175,37,218,190,186,218,255,0,189,121,2,0,4,139,251,251,128,114,255,0,198,121,2,0,144,100,211,128,177,211,255,0,207,121,2,0,22,156,253,253,180,98,255,0,216,121,2,0,58,134,222,179,222,105,255,0,225,121,2,0,120,84,211,141,211,199,255,0,234,121,2,0,42,76,255,255,255,179,255,0,
243,121,2,0,175,37,218,190,186,218,255,0,252,121,2,0,4,139,251,251,128,114,255,0,5,122,2,0,144,100,211,128,177,211,255,0,14,122,2,0,22,156,253,253,180,98,255,0,23,122,2,0,58,134,222,179,222,105,255,0,32,122,2,0,233,47,252,252,205,229,255,0,41,122,2,0,120,84,211,141,211,199,255,0,50,122,2,0,42,76,255,255,255,179,255,0,59,122,2,0,175,37,218,190,186,218,255,0,68,122,2,0,4,139,251,251,128,114,255,0,77,122,2,0,144,100,211,128,177,211,255,0,86,122,2,0,22,156,253,253,180,98,255,0,95,122,2,0,58,134,222,179,
222,105,255,0,104,122,2,0,233,47,252,252,205,229,255,0,113,122,2,0,0,0,217,217,217,217,255,0,122,122,2,0,237,253,158,158,1,66,255,0,136,122,2,0,177,130,162,94,79,162,255,0,151,122,2,0,250,180,213,213,62,79,255,0,165,122,2,0,10,184,244,244,109,67,255,0,179,122,2,0,20,157,253,253,174,97,255,0,193,122,2,0,31,115,254,254,224,139,255,0,207,122,2,0,49,96,245,230,245,152,255,0,221,122,2,0,79,65,221,171,221,164,255,0,235,122,2,0,114,120,194,102,194,165,255,0,249,122,2,0,143,187,189,50,136,189,255,0,7,123,
2,0,237,253,158,158,1,66,255,0,21,123,2,0,143,187,189,50,136,189,255,0,36,123,2,0,177,130,162,94,79,162,255,0,51,123,2,0,250,180,213,213,62,79,255,0,65,123,2,0,10,184,244,244,109,67,255,0,79,123,2,0,20,157,253,253,174,97,255,0,93,123,2,0,31,115,254,254,224,139,255,0,107,123,2,0,42,64,255,255,255,191,255,0,121,123,2,0,49,96,245,230,245,152,255,0,135,123,2,0,79,65,221,171,221,164,255,0,149,123,2,0,114,120,194,102,194,165,255,0,163,123,2,0,13,164,252,252,141,89,255,0,176,123,2,0,42,64,255,255,255,191,
255,0,189,123,2,0,81,77,213,153,213,148,255,0,202,123,2,0,254,225,215,215,25,28,255,0,215,123,2,0,20,157,253,253,174,97,255,0,228,123,2,0,79,65,221,171,221,164,255,0,241,123,2,0,143,196,186,43,131,186,255,0,254,123,2,0,254,225,215,215,25,28,255,0,11,124,2,0,20,157,253,253,174,97,255,0,24,124,2,0,42,64,255,255,255,191,255,0,37,124,2,0,79,65,221,171,221,164,255,0,50,124,2,0,143,196,186,43,131,186,255,0,63,124,2,0,250,180,213,213,62,79,255,0,76,124,2,0,13,164,252,252,141,89,255,0,89,124,2,0,31,115,254,
254,224,139,255,0,102,124,2,0,49,96,245,230,245,152,255,0,115,124,2,0,81,77,213,153,213,148,255,0,128,124,2,0,143,187,189,50,136,189,255,0,141,124,2,0,250,180,213,213,62,79,255,0,154,124,2,0,13,164,252,252,141,89,255,0,167,124,2,0,31,115,254,254,224,139,255,0,180,124,2,0,42,64,255,255,255,191,255,0,193,124,2,0,49,96,245,230,245,152,255,0,206,124,2,0,81,77,213,153,213,148,255,0,219,124,2,0,143,187,189,50,136,189,255,0,232,124,2,0,250,180,213,213,62,79,255,0,245,124,2,0,10,184,244,244,109,67,255,0,
2,125,2,0,20,157,253,253,174,97,255,0,15,125,2,0,31,115,254,254,224,139,255,0,28,125,2,0,49,96,245,230,245,152,255,0,41,125,2,0,79,65,221,171,221,164,255,0,54,125,2,0,114,120,194,102,194,165,255,0,67,125,2,0,143,187,189,50,136,189,255,0,80,125,2,0,250,180,213,213,62,79,255,0,93,125,2,0,10,184,244,244,109,67,255,0,106,125,2,0,20,157,253,253,174,97,255,0,119,125,2,0,31,115,254,254,224,139,255,0,132,125,2,0,42,64,255,255,255,191,255,0,145,125,2,0,49,96,245,230,245,152,255,0,158,125,2,0,79,65,221,171,
221,164,255,0,171,125,2,0,114,120,194,102,194,165,255,0,184,125,2,0,143,187,189,50,136,189,255,0,197,125,2,0,147,15,255,240,248,255,255,0,212,125,2,0,24,35,250,250,235,215,255,0,230,125,2,0,127,255,255,0,255,255,255,0,240,125,2,0,113,128,255,127,255,212,255,0,0,126,2,0,127,15,255,240,255,255,255,0,11,126,2,0,42,26,245,245,245,220,255,0,22,126,2,0,23,58,255,255,228,196,255,0,34,126,2,0,0,0,0,0,0,0,255,0,45,126,2,0,25,49,255,255,235,205,255,0,65,126,2,0,170,255,255,0,0,255,255,0,75,126,2,0,192,206,
226,138,43,226,255,0,91,126,2,0,0,190,165,165,42,42,255,0,102,126,2,0,23,99,222,222,184,135,255,0,117,126,2,0,128,103,160,95,158,160,255,0,132,126,2,0,63,255,255,127,255,0,255,0,148,126,2,0,17,218,210,210,105,30,255,0,163,126,2,0,11,175,255,255,127,80,255,0,174,126,2,0,154,147,237,100,149,237,255,0,194,126,2,0,33,34,255,255,248,220,255,0,208,126,2,0,246,231,220,220,20,60,255,0,221,126,2,0,127,255,255,0,255,255,255,0,231,126,2,0,170,255,139,0,0,139,255,0,245,126,2,0,127,255,139,0,139,139,255,0,3,127,
2,0,30,239,184,184,134,11,255,0,22,127,2,0,0,0,169,169,169,169,255,0,36,127,2,0,85,255,100,0,100,0,255,0,51,127,2,0,0,0,169,169,169,169,255,0,65,127,2,0,39,110,189,189,183,107,255,0,80,127,2,0,212,255,139,139,0,139,255,0,97,127,2,0,58,142,107,85,107,47,255,0,117,127,2,0,23,255,255,255,140,0,255,0,133,127,2,0,198,192,204,153,50,204,255,0,149,127,2,0,0,255,139,139,0,0,255,0,162,127,2,0,10,121,233,233,150,122,255,0,178,127,2,0,85,61,188,143,188,143,255,0,196,127,2,0,175,143,139,72,61,139,255,0,215,127,
2,0,127,103,79,47,79,79,255,0,234,127,2,0,127,103,79,47,79,79,255,0,253,127,2,0,128,255,209,0,206,209,255,0,16,128,2,0,199,255,211,148,0,211,255,0,32,128,2,0,232,235,255,255,20,147,255,0,46,128,2,0,138,255,255,0,191,255,255,0,63,128,2,0,0,0,105,105,105,105,255,0,76,128,2,0,0,0,105,105,105,105,255,0,89,128,2,0,148,225,255,30,144,255,255,0,105,128,2,0,0,206,178,178,34,34,255,0,120,128,2,0,28,15,255,255,250,240,255,0,137,128,2,0,85,192,139,34,139,34,255,0,154,128,2,0,212,255,255,255,0,255,255,0,167,
128,2,0,0,0,220,220,220,220,255,0,182,128,2,0,170,7,255,248,248,255,255,0,198,128,2,0,35,255,255,255,215,0,255,0,208,128,2,0,30,217,218,218,165,32,255,0,223,128,2,0,0,0,128,128,128,128,255,0,233,128,2,0,85,255,128,0,128,0,255,0,244,128,2,0,59,208,255,173,255,47,255,0,5,129,2,0,0,0,128,128,128,128,255,0,15,129,2,0,85,15,255,240,255,240,255,0,29,129,2,0,233,150,255,255,105,180,255,0,42,129,2,0,0,140,205,205,92,92,255,0,57,129,2,0,194,255,130,75,0,130,255,0,69,129,2,0,42,15,255,255,255,240,255,0,80,
129,2,0,38,106,240,240,230,140,255,0,91,129,2,0,170,20,250,230,230,250,255,0,105,129,2,0,240,15,255,255,240,245,255,0,124,129,2,0,64,255,252,124,252,0,255,0,139,129,2,0,38,49,255,255,250,205,255,0,157,129,2,0,137,63,230,173,216,230,255,0,172,129,2,0,0,119,240,240,128,128,255,0,188,129,2,0,127,31,255,224,255,255,255,0,203,129,2,0,42,40,250,250,250,210,255,0,229,129,2,0,0,0,211,211,211,211,255,0,244,129,2,0,85,100,238,144,238,144,255,0,4,130,2,0,0,0,211,211,211,211,255,0,19,130,2,0,248,73,255,255,182,
193,255,0,34,130,2,0,12,132,255,255,160,122,255,0,51,130,2,0,125,209,178,32,178,170,255,0,70,130,2,0,143,117,250,135,206,250,255,0,88,130,2,0,148,56,153,119,136,153,255,0,108,130,2,0,148,56,153,119,136,153,255,0,128,130,2,0,151,52,222,176,196,222,255,0,148,130,2,0,42,31,255,255,255,224,255,0,165,130,2,0,85,255,255,0,255,0,255,0,175,130,2,0,85,192,205,50,205,50,255,0,190,130,2,0,21,20,250,250,240,230,255,0,201,130,2,0,212,255,255,255,0,255,255,0,214,130,2,0,0,255,128,128,0,0,255,0,226,130,2,0,113,
128,205,102,205,170,255,0,248,130,2,0,170,255,205,0,0,205,255,0,8,131,2,0,204,152,211,186,85,211,255,0,26,131,2,0,183,124,219,147,112,219,255,0,44,131,2,0,103,169,179,60,179,113,255,0,64,131,2,0,176,143,238,123,104,238,255,0,85,131,2,0,111,255,250,0,250,154,255,0,108,131,2,0,125,167,209,72,209,204,255,0,129,131,2,0,228,228,199,199,21,133,255,0,150,131,2,0,170,198,112,25,25,112,255,0,168,131,2,0,106,9,255,245,255,250,255,0,183,131,2,0,4,30,255,255,228,225,255,0,198,131,2,0,26,73,255,255,228,181,255,
0,212,131,2,0,25,81,255,255,222,173,255,0,229,131,2,0,170,255,128,0,0,128,255,0,239,131,2,0,27,23,253,253,245,230,255,0,252,131,2,0,42,255,128,128,128,0,255,0,7,132,2,0,56,192,142,107,142,35,255,0,22,132,2,0,27,255,255,255,165,0,255,0,34,132,2,0,11,255,255,255,69,0,255,0,49,132,2,0,214,123,218,218,112,214,255,0,61,132,2,0,38,72,238,238,232,170,255,0,80,132,2,0,85,100,251,152,251,152,255,0,95,132,2,0,127,67,238,175,238,238,255,0,114,132,2,0,241,124,219,219,112,147,255,0,133,132,2,0,26,41,255,255,239,
213,255,0,149,132,2,0,20,70,255,255,218,185,255,0,164,132,2,0,20,176,205,205,133,63,255,0,174,132,2,0,247,63,255,255,192,203,255,0,184,132,2,0,212,70,221,221,160,221,255,0,194,132,2,0,132,59,230,176,224,230,255,0,210,132,2,0,212,255,128,128,0,128,255,0,222,132,2,0,0,255,255,255,0,0,255,0,231,132,2,0,0,61,188,188,143,143,255,0,246,132,2,0,159,181,225,65,105,225,255,0,5,133,2,0,17,220,139,139,69,19,255,0,22,133,2,0,4,138,250,250,128,114,255,0,34,133,2,0,19,154,244,244,164,96,255,0,50,133,2,0,103,170,
139,46,139,87,255,0,64,133,2,0,17,16,255,255,245,238,255,0,78,133,2,0,13,183,160,160,82,45,255,0,90,133,2,0,0,0,192,192,192,192,255,0,102,133,2,0,139,108,235,135,206,235,255,0,115,133,2,0,175,143,205,106,90,205,255,0,130,133,2,0,148,56,144,112,128,144,255,0,145,133,2,0,148,56,144,112,128,144,255,0,160,133,2,0,0,5,255,255,250,250,255,0,170,133,2,0,106,255,255,0,255,127,255,0,187,133,2,0,146,155,180,70,130,180,255,0,202,133,2,0,24,84,210,210,180,140,255,0,211,133,2,0,127,255,128,0,128,128,255,0,221,
133,2,0,212,29,216,216,191,216,255,0,234,133,2,0,6,184,255,255,99,71,255,0,246,133,2,0,123,182,224,64,224,208,255,0,5,134,2,0,212,115,238,238,130,238,255,0,17,134,2,0,27,68,245,245,222,179,255,0,28,134,2,0,0,0,255,255,255,255,255,0,39,134,2,0,0,0,245,245,245,245,255,0,55,134,2,0,42,255,255,255,255,0,255,0,67,134,2,0,56,192,205,154,205,50,255,0,84,134,2,0,45,67,252,247,252,185,255,0,93,134,2,0,68,91,221,173,221,142,255,0,102,134,2,0,98,178,163,49,163,84,255,0,111,134,2,0,42,50,255,255,255,204,255,
0,120,134,2,0,62,85,230,194,230,153,255,0,129,134,2,0,85,100,198,120,198,121,255,0,138,134,2,0,99,187,132,35,132,67,255,0,147,134,2,0,42,50,255,255,255,204,255,0,156,134,2,0,62,85,230,194,230,153,255,0,165,134,2,0,85,100,198,120,198,121,255,0,174,134,2,0,98,178,163,49,163,84,255,0,183,134,2,0,107,255,104,0,104,55,255,0,192,134,2,0,42,50,255,255,255,204,255,0,201,134,2,0,55,81,240,217,240,163,255,0,210,134,2,0,68,91,221,173,221,142,255,0,219,134,2,0,85,100,198,120,198,121,255,0,228,134,2,0,98,178,
163,49,163,84,255,0,237,134,2,0,107,255,104,0,104,55,255,0,246,134,2,0,42,50,255,255,255,204,255,0,255,134,2,0,55,81,240,217,240,163,255,0,8,135,2,0,68,91,221,173,221,142,255,0,17,135,2,0,85,100,198,120,198,121,255,0,26,135,2,0,96,158,171,65,171,93,255,0,35,135,2,0,99,187,132,35,132,67,255,0,44,135,2,0,108,255,90,0,90,50,255,0,53,135,2,0,42,25,255,255,255,229,255,0,62,135,2,0,45,67,252,247,252,185,255,0,71,135,2,0,55,81,240,217,240,163,255,0,80,135,2,0,68,91,221,173,221,142,255,0,89,135,2,0,85,100,
198,120,198,121,255,0,98,135,2,0,96,158,171,65,171,93,255,0,107,135,2,0,99,187,132,35,132,67,255,0,116,135,2,0,108,255,90,0,90,50,255,0,125,135,2,0,42,25,255,255,255,229,255,0,134,135,2,0,45,67,252,247,252,185,255,0,143,135,2,0,55,81,240,217,240,163,255,0,152,135,2,0,68,91,221,173,221,142,255,0,161,135,2,0,85,100,198,120,198,121,255,0,170,135,2,0,96,158,171,65,171,93,255,0,179,135,2,0,99,187,132,35,132,67,255,0,188,135,2,0,107,255,104,0,104,55,255,0,197,135,2,0,110,255,69,0,69,41,255,0,206,135,2,
0,49,73,248,237,248,177,255,0,217,135,2,0,117,97,205,127,205,187,255,0,228,135,2,0,144,194,184,44,127,184,255,0,239,135,2,0,42,50,255,255,255,204,255,0,250,135,2,0,99,66,218,161,218,180,255,0,5,136,2,0,132,170,196,65,182,196,255,0,16,136,2,0,150,203,168,34,94,168,255,0,27,136,2,0,42,50,255,255,255,204,255,0,38,136,2,0,99,66,218,161,218,180,255,0,49,136,2,0,132,170,196,65,182,196,255,0,60,136,2,0,144,194,184,44,127,184,255,0,71,136,2,0,164,191,148,37,52,148,255,0,82,136,2,0,42,50,255,255,255,204,255,
0,93,136,2,0,69,58,233,199,233,180,255,0,104,136,2,0,117,97,205,127,205,187,255,0,115,136,2,0,132,170,196,65,182,196,255,0,126,136,2,0,144,194,184,44,127,184,255,0,137,136,2,0,164,191,148,37,52,148,255,0,148,136,2,0,42,50,255,255,255,204,255,0,159,136,2,0,69,58,233,199,233,180,255,0,170,136,2,0,117,97,205,127,205,187,255,0,181,136,2,0,132,170,196,65,182,196,255,0,192,136,2,0,139,216,192,29,145,192,255,0,203,136,2,0,150,203,168,34,94,168,255,0,214,136,2,0,158,231,132,12,44,132,255,0,225,136,2,0,42,
38,255,255,255,217,255,0,236,136,2,0,49,73,248,237,248,177,255,0,247,136,2,0,69,58,233,199,233,180,255,0,2,137,2,0,117,97,205,127,205,187,255,0,13,137,2,0,132,170,196,65,182,196,255,0,24,137,2,0,139,216,192,29,145,192,255,0,35,137,2,0,150,203,168,34,94,168,255,0,46,137,2,0,158,231,132,12,44,132,255,0,57,137,2,0,42,38,255,255,255,217,255,0,68,137,2,0,49,73,248,237,248,177,255,0,79,137,2,0,69,58,233,199,233,180,255,0,90,137,2,0,117,97,205,127,205,187,255,0,101,137,2,0,132,170,196,65,182,196,255,0,112,
137,2,0,139,216,192,29,145,192,255,0,123,137,2,0,150,203,168,34,94,168,255,0,134,137,2,0,164,191,148,37,52,148,255,0,145,137,2,0,158,231,88,8,29,88,255,0,156,137,2,0,37,66,255,255,247,188,255,0,167,137,2,0,28,175,254,254,196,79,255,0,178,137,2,0,16,238,217,217,95,14,255,0,189,137,2,0,42,42,255,255,255,212,255,0,200,137,2,0,28,112,254,254,217,142,255,0,211,137,2,0,22,213,254,254,153,41,255,0,222,137,2,0,15,252,204,204,76,2,255,0,233,137,2,0,42,42,255,255,255,212,255,0,244,137,2,0,28,112,254,254,217,
142,255,0,255,137,2,0,22,213,254,254,153,41,255,0,10,138,2,0,16,238,217,217,95,14,255,0,21,138,2,0,13,248,153,153,52,4,255,0,32,138,2,0,42,42,255,255,255,212,255,0,43,138,2,0,31,109,254,254,227,145,255,0,54,138,2,0,28,175,254,254,196,79,255,0,65,138,2,0,22,213,254,254,153,41,255,0,76,138,2,0,16,238,217,217,95,14,255,0,87,138,2,0,13,248,153,153,52,4,255,0,98,138,2,0,42,42,255,255,255,212,255,0,109,138,2,0,31,109,254,254,227,145,255,0,120,138,2,0,28,175,254,254,196,79,255,0,131,138,2,0,22,213,254,254,
153,41,255,0,142,138,2,0,18,233,236,236,112,20,255,0,153,138,2,0,15,252,204,204,76,2,255,0,164,138,2,0,12,247,140,140,45,4,255,0,175,138,2,0,42,25,255,255,255,229,255,0,186,138,2,0,37,66,255,255,247,188,255,0,197,138,2,0,31,109,254,254,227,145,255,0,208,138,2,0,28,175,254,254,196,79,255,0,219,138,2,0,22,213,254,254,153,41,255,0,230,138,2,0,18,233,236,236,112,20,255,0,241,138,2,0,15,252,204,204,76,2,255,0,252,138,2,0,12,247,140,140,45,4,255,0,7,139,2,0,42,25,255,255,255,229,255,0,18,139,2,0,37,66,
255,255,247,188,255,0,29,139,2,0,31,109,254,254,227,145,255,0,40,139,2,0,28,175,254,254,196,79,255,0,51,139,2,0,22,213,254,254,153,41,255,0,62,139,2,0,18,233,236,236,112,20,255,0,73,139,2,0,15,252,204,204,76,2,255,0,84,139,2,0,13,248,153,153,52,4,255,0,95,139,2,0,13,240,102,102,37,6,255,0,106,139,2,0,34,95,255,255,237,160,255,0,117,139,2,0,24,178,254,254,178,76,255,0,128,139,2,0,5,221,240,240,59,32,255,0,139,139,2,0,42,77,255,255,255,178,255,0,150,139,2,0,29,162,254,254,204,92,255,0,161,139,2,0,17,
194,253,253,141,60,255,0,172,139,2,0,254,225,227,227,26,28,255,0,183,139,2,0,42,77,255,255,255,178,255,0,194,139,2,0,29,162,254,254,204,92,255,0,205,139,2,0,17,194,253,253,141,60,255,0,216,139,2,0,5,221,240,240,59,32,255,0,227,139,2,0,246,255,189,189,0,38,255,0,238,139,2,0,42,77,255,255,255,178,255,0,249,139,2,0,30,136,254,254,217,118,255,0,4,140,2,0,24,178,254,254,178,76,255,0,15,140,2,0,17,194,253,253,141,60,255,0,26,140,2,0,5,221,240,240,59,32,255,0,37,140,2,0,246,255,189,189,0,38,255,0,48,140,
2,0,42,77,255,255,255,178,255,0,59,140,2,0,30,136,254,254,217,118,255,0,70,140,2,0,24,178,254,254,178,76,255,0,81,140,2,0,17,194,253,253,141,60,255,0,92,140,2,0,7,212,252,252,78,42,255,0,103,140,2,0,254,225,227,227,26,28,255,0,114,140,2,0,245,255,177,177,0,38,255,0,125,140,2,0,42,50,255,255,255,204,255,0,136,140,2,0,34,95,255,255,237,160,255,0,147,140,2,0,30,136,254,254,217,118,255,0,158,140,2,0,24,178,254,254,178,76,255,0,169,140,2,0,17,194,253,253,141,60,255,0,180,140,2,0,7,212,252,252,78,42,255,
0,191,140,2,0,254,225,227,227,26,28,255,0,202,140,2,0,245,255,177,177,0,38,255,0,213,140,2,0,42,50,255,255,255,204,255,0,224,140,2,0,34,95,255,255,237,160,255,0,235,140,2,0,30,136,254,254,217,118,255,0,246,140,2,0,24,178,254,254,178,76,255,0,1,141,2,0,17,194,253,253,141,60,255,0,12,141,2,0,7,212,252,252,78,42,255,0,23,141,2,0,254,225,227,227,26,28,255,0,34,141,2,0,246,255,189,189,0,38,255,0,45,141,2,0,242,255,128,128,0,38,255,0,56,141,2,0,147,15,255,240,248,255,255,0,66,141,2,0,24,35,250,250,235,
215,255,0,79,141,2,0,23,36,255,255,239,219,255,0,93,141,2,0,23,36,238,238,223,204,255,0,107,141,2,0,23,36,205,205,192,176,255,0,121,141,2,0,24,34,139,139,131,120,255,0,135,141,2,0,113,128,255,127,255,212,255,0,146,141,2,0,113,128,255,127,255,212,255,0,158,141,2,0,113,128,238,118,238,198,255,0,170,141,2,0,113,128,205,102,205,170,255,0,182,141,2,0,113,128,139,69,139,116,255,0,194,141,2,0,127,15,255,240,255,255,255,0,200,141,2,0,127,15,255,240,255,255,255,0,207,141,2,0,127,15,238,224,238,238,255,0,214,
141,2,0,127,14,205,193,205,205,255,0,221,141,2,0,127,14,139,131,139,139,255,0,228,141,2,0,42,26,245,245,245,220,255,0,234,141,2,0,23,58,255,255,228,196,255,0,241,141,2,0,23,58,255,255,228,196,255,0,249,141,2,0,23,58,238,238,213,183,255,0,1,142,2,0,22,58,205,205,183,158,255,0,9,142,2,0,23,58,139,139,125,107,255,0,3,165,2,0,0,0,0,0,0,0,255,0,17,142,2,0,25,49,255,255,235,205,255,0,32,142,2,0,170,255,255,0,0,255,255,0,37,142,2,0,170,255,255,0,0,255,255,0,43,142,2,0,170,255,238,0,0,238,255,0,49,142,2,
0,170,255,205,0,0,205,255,0,55,142,2,0,170,255,139,0,0,139,255,0,61,142,2,0,192,206,226,138,43,226,255,0,72,142,2,0,0,190,165,165,42,42,255,0,78,142,2,0,0,191,255,255,64,64,255,0,85,142,2,0,0,191,238,238,59,59,255,0,92,142,2,0,0,191,205,205,51,51,255,0,99,142,2,0,0,190,139,139,35,35,255,0,106,142,2,0,23,99,222,222,184,135,255,0,116,142,2,0,23,100,255,255,211,155,255,0,127,142,2,0,23,99,238,238,197,145,255,0,138,142,2,0,23,99,205,205,170,125,255,0,149,142,2,0,23,99,139,139,115,85,255,0,160,142,2,0,
128,103,160,95,158,160,255,0,170,142,2,0,131,103,255,152,245,255,255,0,181,142,2,0,131,102,238,142,229,238,255,0,192,142,2,0,131,103,205,122,197,205,255,0,203,142,2,0,131,102,139,83,134,139,255,0,214,142,2,0,63,255,255,127,255,0,255,0,225,142,2,0,63,255,255,127,255,0,255,0,237,142,2,0,63,255,238,118,238,0,255,0,249,142,2,0,63,255,205,102,205,0,255,0,5,143,2,0,63,255,139,69,139,0,255,0,17,143,2,0,17,218,210,210,105,30,255,0,27,143,2,0,17,219,255,255,127,36,255,0,38,143,2,0,17,219,238,238,118,33,255,
0,49,143,2,0,17,218,205,205,102,29,255,0,60,143,2,0,17,220,139,139,69,19,255,0,71,143,2,0,11,175,255,255,127,80,255,0,77,143,2,0,7,169,255,255,114,86,255,0,84,143,2,0,6,169,238,238,106,80,255,0,91,143,2,0,6,169,205,205,91,69,255,0,98,143,2,0,6,168,139,139,62,47,255,0,105,143,2,0,154,147,237,100,149,237,255,0,120,143,2,0,33,34,255,255,248,220,255,0,129,143,2,0,33,34,255,255,248,220,255,0,139,143,2,0,34,35,238,238,232,205,255,0,149,143,2,0,34,34,205,205,200,177,255,0,159,143,2,0,35,34,139,139,136,120,
255,0,169,143,2,0,246,231,220,220,20,60,255,0,177,143,2,0,127,255,255,0,255,255,255,0,182,143,2,0,127,255,255,0,255,255,255,0,188,143,2,0,127,255,238,0,238,238,255,0,194,143,2,0,127,255,205,0,205,205,255,0,200,143,2,0,127,255,139,0,139,139,255,0,206,143,2,0,30,239,184,184,134,11,255,0,220,143,2,0,30,240,255,255,185,15,255,0,235,143,2,0,30,240,238,238,173,14,255,0,250,143,2,0,30,240,205,205,149,12,255,0,9,144,2,0,30,240,139,139,101,8,255,0,24,144,2,0,85,255,100,0,100,0,255,0,34,144,2,0,39,110,189,
189,183,107,255,0,44,144,2,0,58,142,107,85,107,47,255,0,59,144,2,0,58,143,255,202,255,112,255,0,75,144,2,0,58,143,238,188,238,104,255,0,91,144,2,0,58,143,205,162,205,90,255,0,107,144,2,0,58,143,139,110,139,61,255,0,123,144,2,0,23,255,255,255,140,0,255,0,134,144,2,0,21,255,255,255,127,0,255,0,146,144,2,0,21,255,238,238,118,0,255,0,158,144,2,0,21,255,205,205,102,0,255,0,170,144,2,0,21,255,139,139,69,0,255,0,182,144,2,0,198,192,204,153,50,204,255,0,193,144,2,0,198,193,255,191,62,255,255,0,205,144,2,
0,198,192,238,178,58,238,255,0,217,144,2,0,198,192,205,154,50,205,255,0,229,144,2,0,198,192,139,104,34,139,255,0,241,144,2,0,10,121,233,233,150,122,255,0,252,144,2,0,85,61,188,143,188,143,255,0,9,145,2,0,85,62,255,193,255,193,255,0,23,145,2,0,85,62,238,180,238,180,255,0,37,145,2,0,85,62,205,155,205,155,255,0,51,145,2,0,85,62,139,105,139,105,255,0,65,145,2,0,175,143,139,72,61,139,255,0,79,145,2,0,127,103,79,47,79,79,255,0,93,145,2,0,127,104,255,151,255,255,255,0,108,145,2,0,127,103,238,141,238,238,
255,0,123,145,2,0,127,104,205,121,205,205,255,0,138,145,2,0,127,104,139,82,139,139,255,0,153,145,2,0,127,103,79,47,79,79,255,0,167,145,2,0,128,255,209,0,206,209,255,0,181,145,2,0,199,255,211,148,0,211,255,0,192,145,2,0,232,235,255,255,20,147,255,0,201,145,2,0,232,235,255,255,20,147,255,0,211,145,2,0,232,235,238,238,18,137,255,0,221,145,2,0,232,235,205,205,16,118,255,0,231,145,2,0,231,236,139,139,10,80,255,0,241,145,2,0,138,255,255,0,191,255,255,0,253,145,2,0,138,255,255,0,191,255,255,0,10,146,2,0,
138,255,238,0,178,238,255,0,23,146,2,0,138,255,205,0,154,205,255,0,36,146,2,0,138,255,139,0,104,139,255,0,49,146,2,0,0,0,105,105,105,105,255,0,57,146,2,0,0,0,105,105,105,105,255,0,65,146,2,0,148,225,255,30,144,255,255,0,76,146,2,0,148,225,255,30,144,255,255,0,88,146,2,0,148,225,238,28,134,238,255,0,100,146,2,0,148,225,205,24,116,205,255,0,112,146,2,0,148,225,139,16,78,139,255,0,124,146,2,0,0,206,178,178,34,34,255,0,134,146,2,0,0,207,255,255,48,48,255,0,145,146,2,0,0,207,238,238,44,44,255,0,156,146,
2,0,0,207,205,205,38,38,255,0,167,146,2,0,0,207,139,139,26,26,255,0,178,146,2,0,28,15,255,255,250,240,255,0,190,146,2,0,85,192,139,34,139,34,255,0,202,146,2,0,0,0,220,220,220,220,255,0,212,146,2,0,170,7,255,248,248,255,255,0,223,146,2,0,35,255,255,255,215,0,255,0,228,146,2,0,35,255,255,255,215,0,255,0,234,146,2,0,35,255,238,238,201,0,255,0,240,146,2,0,35,255,205,205,173,0,255,0,246,146,2,0,35,255,139,139,117,0,255,0,252,146,2,0,30,217,218,218,165,32,255,0,6,147,2,0,30,218,255,255,193,37,255,0,17,
147,2,0,30,218,238,238,180,34,255,0,28,147,2,0,30,218,205,205,155,29,255,0,39,147,2,0,30,218,139,139,105,20,255,0,50,147,2,0,0,0,192,192,192,192,255,0,55,147,2,0,0,0,0,0,0,0,255,0,61,147,2,0,0,0,3,3,3,3,255,0,67,147,2,0,0,0,26,26,26,26,255,0,74,147,2,0,0,0,255,255,255,255,255,0,82,147,2,0,0,0,28,28,28,28,255,0,89,147,2,0,0,0,31,31,31,31,255,0,96,147,2,0,0,0,33,33,33,33,255,0,103,147,2,0,0,0,36,36,36,36,255,0,110,147,2,0,0,0,38,38,38,38,255,0,117,147,2,0,0,0,41,41,41,41,255,0,124,147,2,0,0,0,43,43,
43,43,255,0,131,147,2],"i8",4,n.q+74360);
D([46,46,46,46,255,0,138,147,2,0,0,0,48,48,48,48,255,0,145,147,2,0,0,0,5,5,5,5,255,0,151,147,2,0,0,0,51,51,51,51,255,0,158,147,2,0,0,0,54,54,54,54,255,0,165,147,2,0,0,0,56,56,56,56,255,0,172,147,2,0,0,0,59,59,59,59,255,0,179,147,2,0,0,0,61,61,61,61,255,0,186,147,2,0,0,0,64,64,64,64,255,0,193,147,2,0,0,0,66,66,66,66,255,0,200,147,2,0,0,0,69,69,69,69,255,0,207,147,2,0,0,0,71,71,71,71,255,0,214,147,2,0,0,0,74,74,74,74,255,0,221,147,2,0,0,0,8,8,8,8,255,0,227,147,2,0,0,0,77,77,77,77,255,0,234,147,2,0,
0,0,79,79,79,79,255,0,241,147,2,0,0,0,82,82,82,82,255,0,248,147,2,0,0,0,84,84,84,84,255,0,255,147,2,0,0,0,87,87,87,87,255,0,6,148,2,0,0,0,89,89,89,89,255,0,13,148,2,0,0,0,92,92,92,92,255,0,20,148,2,0,0,0,94,94,94,94,255,0,27,148,2,0,0,0,97,97,97,97,255,0,34,148,2,0,0,0,99,99,99,99,255,0,41,148,2,0,0,0,10,10,10,10,255,0,47,148,2,0,0,0,102,102,102,102,255,0,54,148,2,0,0,0,105,105,105,105,255,0,61,148,2,0,0,0,107,107,107,107,255,0,68,148,2,0,0,0,110,110,110,110,255,0,75,148,2,0,0,0,112,112,112,112,255,
0,82,148,2,0,0,0,115,115,115,115,255,0,89,148,2,0,0,0,117,117,117,117,255,0,96,148,2,0,0,0,120,120,120,120,255,0,103,148,2,0,0,0,122,122,122,122,255,0,110,148,2,0,0,0,125,125,125,125,255,0,117,148,2,0,0,0,13,13,13,13,255,0,123,148,2,0,0,0,127,127,127,127,255,0,130,148,2,0,0,0,130,130,130,130,255,0,137,148,2,0,0,0,133,133,133,133,255,0,144,148,2,0,0,0,135,135,135,135,255,0,151,148,2,0,0,0,138,138,138,138,255,0,158,148,2,0,0,0,140,140,140,140,255,0,165,148,2,0,0,0,143,143,143,143,255,0,172,148,2,0,
0,0,145,145,145,145,255,0,179,148,2,0,0,0,148,148,148,148,255,0,186,148,2,0,0,0,150,150,150,150,255,0,193,148,2,0,0,0,15,15,15,15,255,0,199,148,2,0,0,0,153,153,153,153,255,0,206,148,2,0,0,0,156,156,156,156,255,0,213,148,2,0,0,0,158,158,158,158,255,0,220,148,2,0,0,0,161,161,161,161,255,0,227,148,2,0,0,0,163,163,163,163,255,0,234,148,2,0,0,0,166,166,166,166,255,0,241,148,2,0,0,0,168,168,168,168,255,0,248,148,2,0,0,0,171,171,171,171,255,0,255,148,2,0,0,0,173,173,173,173,255,0,6,149,2,0,0,0,176,176,176,
176,255,0,13,149,2,0,0,0,18,18,18,18,255,0,19,149,2,0,0,0,179,179,179,179,255,0,26,149,2,0,0,0,181,181,181,181,255,0,33,149,2,0,0,0,184,184,184,184,255,0,40,149,2,0,0,0,186,186,186,186,255,0,47,149,2,0,0,0,189,189,189,189,255,0,54,149,2,0,0,0,191,191,191,191,255,0,61,149,2,0,0,0,194,194,194,194,255,0,68,149,2,0,0,0,196,196,196,196,255,0,75,149,2,0,0,0,199,199,199,199,255,0,82,149,2,0,0,0,201,201,201,201,255,0,89,149,2,0,0,0,20,20,20,20,255,0,95,149,2,0,0,0,204,204,204,204,255,0,102,149,2,0,0,0,207,
207,207,207,255,0,109,149,2,0,0,0,209,209,209,209,255,0,116,149,2,0,0,0,212,212,212,212,255,0,123,149,2,0,0,0,214,214,214,214,255,0,130,149,2,0,0,0,217,217,217,217,255,0,137,149,2,0,0,0,219,219,219,219,255,0,144,149,2,0,0,0,222,222,222,222,255,0,151,149,2,0,0,0,224,224,224,224,255,0,158,149,2,0,0,0,227,227,227,227,255,0,165,149,2,0,0,0,23,23,23,23,255,0,171,149,2,0,0,0,229,229,229,229,255,0,178,149,2,0,0,0,232,232,232,232,255,0,185,149,2,0,0,0,235,235,235,235,255,0,192,149,2,0,0,0,237,237,237,237,
255,0,199,149,2,0,0,0,240,240,240,240,255,0,206,149,2,0,0,0,242,242,242,242,255,0,213,149,2,0,0,0,245,245,245,245,255,0,220,149,2,0,0,0,247,247,247,247,255,0,227,149,2,0,0,0,250,250,250,250,255,0,234,149,2,0,0,0,252,252,252,252,255,0,241,149,2,0,85,255,255,0,255,0,255,0,247,149,2,0,85,255,255,0,255,0,255,0,254,149,2,0,85,255,238,0,238,0,255,0,5,150,2,0,85,255,205,0,205,0,255,0,12,150,2,0,85,255,139,0,139,0,255,0,19,150,2,0,59,208,255,173,255,47,255,0,31,150,2,0,0,0,192,192,192,192,255,0,36,150,2,
0,0,0,0,0,0,0,255,0,42,150,2,0,0,0,3,3,3,3,255,0,48,150,2,0,0,0,26,26,26,26,255,0,55,150,2,0,0,0,255,255,255,255,255,0,63,150,2,0,0,0,28,28,28,28,255,0,70,150,2,0,0,0,31,31,31,31,255,0,77,150,2,0,0,0,33,33,33,33,255,0,84,150,2,0,0,0,36,36,36,36,255,0,91,150,2,0,0,0,38,38,38,38,255,0,98,150,2,0,0,0,41,41,41,41,255,0,105,150,2,0,0,0,43,43,43,43,255,0,112,150,2,0,0,0,46,46,46,46,255,0,119,150,2,0,0,0,48,48,48,48,255,0,126,150,2,0,0,0,5,5,5,5,255,0,132,150,2,0,0,0,51,51,51,51,255,0,139,150,2,0,0,0,54,
54,54,54,255,0,146,150,2,0,0,0,56,56,56,56,255,0,153,150,2,0,0,0,59,59,59,59,255,0,160,150,2,0,0,0,61,61,61,61,255,0,167,150,2,0,0,0,64,64,64,64,255,0,174,150,2,0,0,0,66,66,66,66,255,0,181,150,2,0,0,0,69,69,69,69,255,0,188,150,2,0,0,0,71,71,71,71,255,0,195,150,2,0,0,0,74,74,74,74,255,0,202,150,2,0,0,0,8,8,8,8,255,0,208,150,2,0,0,0,77,77,77,77,255,0,215,150,2,0,0,0,79,79,79,79,255,0,222,150,2,0,0,0,82,82,82,82,255,0,229,150,2,0,0,0,84,84,84,84,255,0,236,150,2,0,0,0,87,87,87,87,255,0,243,150,2,0,0,
0,89,89,89,89,255,0,250,150,2,0,0,0,92,92,92,92,255,0,1,151,2,0,0,0,94,94,94,94,255,0,8,151,2,0,0,0,97,97,97,97,255,0,15,151,2,0,0,0,99,99,99,99,255,0,22,151,2,0,0,0,10,10,10,10,255,0,28,151,2,0,0,0,102,102,102,102,255,0,35,151,2,0,0,0,105,105,105,105,255,0,42,151,2,0,0,0,107,107,107,107,255,0,49,151,2,0,0,0,110,110,110,110,255,0,56,151,2,0,0,0,112,112,112,112,255,0,63,151,2,0,0,0,115,115,115,115,255,0,70,151,2,0,0,0,117,117,117,117,255,0,77,151,2,0,0,0,120,120,120,120,255,0,84,151,2,0,0,0,122,122,
122,122,255,0,91,151,2,0,0,0,125,125,125,125,255,0,98,151,2,0,0,0,13,13,13,13,255,0,104,151,2,0,0,0,127,127,127,127,255,0,111,151,2,0,0,0,130,130,130,130,255,0,118,151,2,0,0,0,133,133,133,133,255,0,125,151,2,0,0,0,135,135,135,135,255,0,132,151,2,0,0,0,138,138,138,138,255,0,139,151,2,0,0,0,140,140,140,140,255,0,146,151,2,0,0,0,143,143,143,143,255,0,153,151,2,0,0,0,145,145,145,145,255,0,160,151,2,0,0,0,148,148,148,148,255,0,167,151,2,0,0,0,150,150,150,150,255,0,174,151,2,0,0,0,15,15,15,15,255,0,180,
151,2,0,0,0,153,153,153,153,255,0,187,151,2,0,0,0,156,156,156,156,255,0,194,151,2,0,0,0,158,158,158,158,255,0,201,151,2,0,0,0,161,161,161,161,255,0,208,151,2,0,0,0,163,163,163,163,255,0,215,151,2,0,0,0,166,166,166,166,255,0,222,151,2,0,0,0,168,168,168,168,255,0,229,151,2,0,0,0,171,171,171,171,255,0,236,151,2,0,0,0,173,173,173,173,255,0,243,151,2,0,0,0,176,176,176,176,255,0,250,151,2,0,0,0,18,18,18,18,255,0,0,152,2,0,0,0,179,179,179,179,255,0,7,152,2,0,0,0,181,181,181,181,255,0,14,152,2,0,0,0,184,
184,184,184,255,0,21,152,2,0,0,0,186,186,186,186,255,0,28,152,2,0,0,0,189,189,189,189,255,0,35,152,2,0,0,0,191,191,191,191,255,0,42,152,2,0,0,0,194,194,194,194,255,0,49,152,2,0,0,0,196,196,196,196,255,0,56,152,2,0,0,0,199,199,199,199,255,0,63,152,2,0,0,0,201,201,201,201,255,0,70,152,2,0,0,0,20,20,20,20,255,0,76,152,2,0,0,0,204,204,204,204,255,0,83,152,2,0,0,0,207,207,207,207,255,0,90,152,2,0,0,0,209,209,209,209,255,0,97,152,2,0,0,0,212,212,212,212,255,0,104,152,2,0,0,0,214,214,214,214,255,0,111,152,
2,0,0,0,217,217,217,217,255,0,118,152,2,0,0,0,219,219,219,219,255,0,125,152,2,0,0,0,222,222,222,222,255,0,132,152,2,0,0,0,224,224,224,224,255,0,139,152,2,0,0,0,227,227,227,227,255,0,146,152,2,0,0,0,23,23,23,23,255,0,152,152,2,0,0,0,229,229,229,229,255,0,159,152,2,0,0,0,232,232,232,232,255,0,166,152,2,0,0,0,235,235,235,235,255,0,173,152,2,0,0,0,237,237,237,237,255,0,180,152,2,0,0,0,240,240,240,240,255,0,187,152,2,0,0,0,242,242,242,242,255,0,194,152,2,0,0,0,245,245,245,245,255,0,201,152,2,0,0,0,247,
247,247,247,255,0,208,152,2,0,0,0,250,250,250,250,255,0,215,152,2,0,0,0,252,252,252,252,255,0,222,152,2,0,85,15,255,240,255,240,255,0,231,152,2,0,85,15,255,240,255,240,255,0,241,152,2,0,85,15,238,224,238,224,255,0,251,152,2,0,85,14,205,193,205,193,255,0,5,153,2,0,85,14,139,131,139,131,255,0,15,153,2,0,233,150,255,255,105,180,255,0,23,153,2,0,234,145,255,255,110,180,255,0,32,153,2,0,235,141,238,238,106,167,255,0,41,153,2,0,236,135,205,205,96,144,255,0,50,153,2,0,234,148,139,139,58,98,255,0,59,153,
2,0,0,140,205,205,92,92,255,0,69,153,2,0,0,148,255,255,106,106,255,0,80,153,2,0,0,148,238,238,99,99,255,0,91,153,2,0,0,149,205,205,85,85,255,0,102,153,2,0,0,148,139,139,58,58,255,0,113,153,2,0,194,255,130,75,0,130,255,0,120,153,2,0,42,0,255,255,255,254,0,0,126,153,2,0,42,15,255,255,255,240,255,0,132,153,2,0,42,15,255,255,255,240,255,0,139,153,2,0,42,15,238,238,238,224,255,0,146,153,2,0,42,14,205,205,205,193,255,0,153,153,2,0,42,14,139,139,139,131,255,0,160,153,2,0,38,106,240,240,230,140,255,0,166,
153,2,0,39,112,255,255,246,143,255,0,173,153,2,0,39,112,238,238,230,133,255,0,180,153,2,0,39,111,205,205,198,115,255,0,187,153,2,0,39,111,139,139,134,78,255,0,194,153,2,0,170,20,250,230,230,250,255,0,203,153,2,0,240,15,255,255,240,245,255,0,217,153,2,0,240,15,255,255,240,245,255,0,232,153,2,0,239,15,238,238,224,229,255,0,247,153,2,0,240,14,205,205,193,197,255,0,6,154,2,0,239,14,139,139,131,134,255,0,21,154,2,0,64,255,252,124,252,0,255,0,31,154,2,0,38,49,255,255,250,205,255,0,44,154,2,0,38,49,255,
255,250,205,255,0,58,154,2,0,37,50,238,238,233,191,255,0,72,154,2,0,38,49,205,205,201,165,255,0,86,154,2,0,39,49,139,139,137,112,255,0,100,154,2,0,137,63,230,173,216,230,255,0,110,154,2,0,138,64,255,191,239,255,255,0,121,154,2,0,138,64,238,178,223,238,255,0,132,154,2,0,138,63,205,154,192,205,255,0,143,154,2,0,137,64,139,104,131,139,255,0,154,154,2,0,0,119,240,240,128,128,255,0,165,154,2,0,127,31,255,224,255,255,255,0,175,154,2,0,127,31,255,224,255,255,255,0,186,154,2,0,127,31,238,209,238,238,255,
0,197,154,2,0,127,31,205,180,205,205,255,0,208,154,2,0,127,31,139,122,139,139,255,0,219,154,2,0,35,115,238,238,221,130,255,0,234,154,2,0,35,116,255,255,236,139,255,0,250,154,2,0,35,115,238,238,220,130,255,0,10,155,2,0,35,115,205,205,190,112,255,0,26,155,2,0,35,115,139,139,129,76,255,0,42,155,2,0,42,40,250,250,250,210,255,0,63,155,2,0,0,0,211,211,211,211,255,0,73,155,2,0,0,0,211,211,211,211,255,0,83,155,2,0,248,73,255,255,182,193,255,0,93,155,2,0,249,81,255,255,174,185,255,0,104,155,2,0,248,81,238,
238,162,173,255,0,115,155,2,0,249,80,205,205,140,149,255,0,126,155,2,0,249,80,139,139,95,101,255,0,137,155,2,0,12,132,255,255,160,122,255,0,149,155,2,0,12,132,255,255,160,122,255,0,162,155,2,0,11,132,238,238,149,114,255,0,175,155,2,0,12,133,205,205,129,98,255,0,188,155,2,0,12,133,139,139,87,66,255,0,201,155,2,0,125,209,178,32,178,170,255,0,215,155,2,0,143,117,250,135,206,250,255,0,228,155,2,0,143,79,255,176,226,255,255,0,242,155,2,0,143,79,238,164,211,238,255,0,0,156,2,0,142,79,205,141,182,205,255,
0,14,156,2,0,143,78,139,96,123,139,255,0,28,156,2,0,175,143,255,132,112,255,255,0,43,156,2,0,148,56,153,119,136,153,255,0,58,156,2,0,148,56,153,119,136,153,255,0,73,156,2,0,151,52,222,176,196,222,255,0,88,156,2,0,151,53,255,202,225,255,255,0,104,156,2,0,151,53,238,188,210,238,255,0,120,156,2,0,151,53,205,162,181,205,255,0,136,156,2,0,150,53,139,110,123,139,255,0,152,156,2,0,42,31,255,255,255,224,255,0,164,156,2,0,42,31,255,255,255,224,255,0,177,156,2,0,42,31,238,238,238,209,255,0,190,156,2,0,42,31,
205,205,205,180,255,0,203,156,2,0,42,31,139,139,139,122,255,0,216,156,2,0,85,192,205,50,205,50,255,0,226,156,2,0,21,20,250,250,240,230,255,0,232,156,2,0,212,255,255,255,0,255,255,0,240,156,2,0,212,255,255,255,0,255,255,0,249,156,2,0,212,255,238,238,0,238,255,0,2,157,2,0,212,255,205,205,0,205,255,0,11,157,2,0,212,255,139,139,0,139,255,0,20,157,2,0,239,185,176,176,48,96,255,0,27,157,2,0,228,203,255,255,52,179,255,0,35,157,2,0,228,203,238,238,48,167,255,0,43,157,2,0,228,204,205,205,41,144,255,0,51,157,
2,0,228,203,139,139,28,98,255,0,59,157,2,0,113,128,205,102,205,170,255,0,76,157,2,0,170,255,205,0,0,205,255,0,87,157,2,0,204,152,211,186,85,211,255,0,100,157,2,0,203,153,255,224,102,255,255,0,114,157,2,0,203,153,238,209,95,238,255,0,128,157,2,0,203,153,205,180,82,205,255,0,142,157,2,0,203,154,139,122,55,139,255,0,156,157,2,0,183,124,219,147,112,219,255,0,169,157,2,0,183,125,255,171,130,255,255,0,183,157,2,0,183,125,238,159,121,238,255,0,197,157,2,0,183,125,205,137,104,205,255,0,211,157,2,0,183,124,
139,93,71,139,255,0,225,157,2,0,103,169,179,60,179,113,255,0,240,157,2,0,176,143,238,123,104,238,255,0,0,158,2,0,111,255,250,0,250,154,255,0,18,158,2,0,125,167,209,72,209,204,255,0,34,158,2,0,228,228,199,199,21,133,255,0,50,158,2,0,170,198,112,25,25,112,255,0,63,158,2,0,106,9,255,245,255,250,255,0,73,158,2,0,4,30,255,255,228,225,255,0,83,158,2,0,4,30,255,255,228,225,255,0,94,158,2,0,4,30,238,238,213,210,255,0,105,158,2,0,3,29,205,205,183,181,255,0,116,158,2,0,5,29,139,139,125,123,255,0,127,158,2,
0,26,73,255,255,228,181,255,0,136,158,2,0,25,81,255,255,222,173,255,0,148,158,2,0,25,81,255,255,222,173,255,0,161,158,2,0,25,82,238,238,207,161,255,0,174,158,2,0,25,82,205,205,179,139,255,0,187,158,2,0,25,82,139,139,121,94,255,0,200,158,2,0,170,255,128,0,0,128,255,0,205,158,2,0,170,255,128,0,0,128,255,0,214,158,2,0,42,0,255,255,255,254,0,0,219,158,2,0,27,23,253,253,245,230,255,0,227,158,2,0,56,192,142,107,142,35,255,0,237,158,2,0,56,193,255,192,255,62,255,0,248,158,2,0,56,192,238,179,238,58,255,0,
3,159,2,0,56,192,205,154,205,50,255,0,14,159,2,0,56,192,139,105,139,34,255,0,25,159,2,0,27,255,255,255,165,0,255,0,32,159,2,0,27,255,255,255,165,0,255,0,40,159,2,0,27,255,238,238,154,0,255,0,48,159,2,0,27,255,205,205,133,0,255,0,56,159,2,0,27,255,139,139,90,0,255,0,64,159,2,0,11,255,255,255,69,0,255,0,74,159,2,0,11,255,255,255,69,0,255,0,85,159,2,0,11,255,238,238,64,0,255,0,96,159,2,0,11,255,205,205,55,0,255,0,107,159,2,0,11,255,139,139,37,0,255,0,118,159,2,0,214,123,218,218,112,214,255,0,125,159,
2,0,214,124,255,255,131,250,255,0,133,159,2,0,214,124,238,238,122,233,255,0,141,159,2,0,214,124,205,205,105,201,255,0,149,159,2,0,213,124,139,139,71,137,255,0,157,159,2,0,38,72,238,238,232,170,255,0,171,159,2,0,85,100,251,152,251,152,255,0,181,159,2,0,85,101,255,154,255,154,255,0,192,159,2,0,85,100,238,144,238,144,255,0,203,159,2,0,85,100,205,124,205,124,255,0,214,159,2,0,85,100,139,84,139,84,255,0,225,159,2,0,127,67,238,175,238,238,255,0,239,159,2,0,127,68,255,187,255,255,255,0,254,159,2,0,127,68,
238,174,238,238,255,0,13,160,2,0,127,68,205,150,205,205,255,0,28,160,2,0,127,67,139,102,139,139,255,0,43,160,2,0,241,124,219,219,112,147,255,0,57,160,2,0,241,125,255,255,130,171,255,0,72,160,2,0,241,125,238,238,121,159,255,0,87,160,2,0,241,125,205,205,104,137,255,0,102,160,2,0,241,124,139,139,71,93,255,0,117,160,2,0,26,41,255,255,239,213,255,0,128,160,2,0,20,70,255,255,218,185,255,0,138,160,2,0,20,70,255,255,218,185,255,0,149,160,2,0,19,69,238,238,203,173,255,0,160,160,2,0,19,69,205,205,175,149,255,
0,171,160,2,0,20,69,139,139,119,101,255,0,182,160,2,0,20,176,205,205,133,63,255,0,187,160,2,0,247,63,255,255,192,203,255,0,192,160,2,0,245,73,255,255,181,197,255,0,198,160,2,0,245,73,238,238,169,184,255,0,204,160,2,0,245,74,205,205,145,158,255,0,210,160,2,0,245,73,139,139,99,108,255,0,216,160,2,0,212,70,221,221,160,221,255,0,221,160,2,0,212,68,255,255,187,255,255,0,227,160,2,0,212,68,238,238,174,238,255,0,233,160,2,0,212,68,205,205,150,205,255,0,239,160,2,0,212,67,139,139,102,139,255,0,245,160,2,
0,132,59,230,176,224,230,255,0,0,161,2,0,196,221,240,160,32,240,255,0,7,161,2,0,191,207,255,155,48,255,255,0,15,161,2,0,192,207,238,145,44,238,255,0,23,161,2,0,192,207,205,125,38,205,255,0,31,161,2,0,192,207,139,85,26,139,255,0,39,161,2,0,0,255,255,255,0,0,255,0,43,161,2,0,0,255,255,255,0,0,255,0,48,161,2,0,0,255,238,238,0,0,255,0,53,161,2,0,0,255,205,205,0,0,255,0,58,161,2,0,0,255,139,139,0,0,255,0,63,161,2,0,0,61,188,188,143,143,255,0,73,161,2,0,0,62,255,255,193,193,255,0,84,161,2,0,0,62,238,238,
180,180,255,0,95,161,2,0,0,62,205,205,155,155,255,0,106,161,2,0,0,62,139,139,105,105,255,0,117,161,2,0,159,181,225,65,105,225,255,0,127,161,2,0,159,183,255,72,118,255,255,0,138,161,2,0,159,183,238,67,110,238,255,0,149,161,2,0,159,182,205,58,95,205,255,0,160,161,2,0,159,183,139,39,64,139,255,0,171,161,2,0,17,220,139,139,69,19,255,0,183,161,2,0,4,138,250,250,128,114,255,0,190,161,2,0,9,150,255,255,140,105,255,0,198,161,2,0,9,150,238,238,130,98,255,0,206,161,2,0,9,150,205,205,112,84,255,0,214,161,2,
0,9,150,139,139,76,57,255,0,222,161,2,0,19,154,244,244,164,96,255,0,233,161,2,0,103,170,139,46,139,87,255,0,242,161,2,0,103,171,255,84,255,159,255,0,252,161,2,0,103,171,238,78,238,148,255,0,6,162,2,0,103,171,205,67,205,128,255,0,16,162,2,0,103,170,139,46,139,87,255,0,26,162,2,0,17,16,255,255,245,238,255,0,35,162,2,0,17,16,255,255,245,238,255,0,45,162,2,0,18,17,238,238,229,222,255,0,55,162,2,0,18,17,205,205,197,191,255,0,65,162,2,0,18,16,139,139,134,130,255,0,75,162,2,0,13,183,160,160,82,45,255,0,
82,162,2,0,13,184,255,255,130,71,255,0,90,162,2,0,13,184,238,238,121,66,255,0,98,162,2,0,13,184,205,205,104,57,255,0,106,162,2,0,13,185,139,139,71,38,255,0,114,162,2,0,139,108,235,135,206,235,255,0,122,162,2,0,144,120,255,135,206,255,255,0,131,162,2,0,144,120,238,126,192,238,255,0,140,162,2,0,144,120,205,108,166,205,255,0,149,162,2,0,145,119,139,74,112,139,255,0,158,162,2,0,175,143,205,106,90,205,255,0,168,162,2,0,175,144,255,131,111,255,255,0,179,162,2,0,175,144,238,122,103,238,255,0,190,162,2,0,
175,144,205,105,89,205,255,0,201,162,2,0,175,144,139,71,60,139,255,0,212,162,2,0,148,56,144,112,128,144,255,0,222,162,2,0,149,56,255,198,226,255,255,0,233,162,2,0,149,56,238,185,211,238,255,0,244,162,2,0,148,57,205,159,182,205,255,0,255,162,2,0,149,56,139,108,123,139,255,0,10,163,2,0,148,56,144,112,128,144,255,0,20,163,2,0,0,5,255,255,250,250,255,0,25,163,2,0,0,5,255,255,250,250,255,0,31,163,2,0,0,5,238,238,233,233,255,0,37,163,2,0,0,4,205,205,201,201,255,0,43,163,2,0,0,3,139,139,137,137,255,0,49,
163,2,0,106,255,255,0,255,127,255,0,61,163,2,0,106,255,255,0,255,127,255,0,74,163,2,0,106,255,238,0,238,118,255,0,87,163,2,0,106,255,205,0,205,102,255,0,100,163,2,0,106,255,139,0,139,69,255,0,113,163,2,0,146,155,180,70,130,180,255,0,123,163,2,0,146,156,255,99,184,255,255,0,134,163,2,0,146,156,238,92,172,238,255,0,145,163,2,0,146,156,205,79,148,205,255,0,156,163,2,0,147,155,139,54,100,139,255,0,167,163,2,0,24,84,210,210,180,140,255,0,171,163,2,0,20,176,255,255,165,79,255,0,176,163,2,0,20,176,238,238,
154,73,255,0,181,163,2,0,20,176,205,205,133,63,255,0,186,163,2,0,20,176,139,139,90,43,255,0,191,163,2,0,212,29,216,216,191,216,255,0,199,163,2,0,212,30,255,255,225,255,255,0,208,163,2,0,212,30,238,238,210,238,255,0,217,163,2,0,212,29,205,205,181,205,255,0,226,163,2,0,212,29,139,139,123,139,255,0,235,163,2,0,6,184,255,255,99,71,255,0,242,163,2,0,6,184,255,255,99,71,255,0,250,163,2,0,6,184,238,238,92,66,255,0,2,164,2,0,6,184,205,205,79,57,255,0,10,164,2,0,6,185,139,139,54,38,255,0,4,167,2,0,42,0,255,
255,255,254,0,0,18,164,2,0,123,182,224,64,224,208,255,0,28,164,2,0,129,255,255,0,245,255,255,0,39,164,2,0,129,255,238,0,229,238,255,0,50,164,2,0,129,255,205,0,197,205,255,0,61,164,2,0,129,255,139,0,134,139,255,0,72,164,2,0,212,115,238,238,130,238,255,0,79,164,2,0,227,215,208,208,32,144,255,0,89,164,2,0,235,193,255,255,62,150,255,0,100,164,2,0,235,192,238,238,58,140,255,0,111,164,2,0,235,192,205,205,50,120,255,0,122,164,2,0,235,192,139,139,34,82,255,0,133,164,2,0,27,68,245,245,222,179,255,0,139,164,
2,0,27,69,255,255,231,186,255,0,146,164,2,0,27,68,238,238,216,174,255,0,153,164,2,0,27,68,205,205,186,150,255,0,160,164,2,0,27,67,139,139,126,102,255,0,167,164,2,0,0,0,255,255,255,255,255,0,173,164,2,0,0,0,245,245,245,245,255,0,184,164,2,0,42,255,255,255,255,0,255,0,191,164,2,0,42,255,255,255,255,0,255,0,199,164,2,0,42,255,238,238,238,0,255,0,207,164,2,0,42,255,205,205,205,0,255,0,215,164,2,0,42,255,139,139,139,0,255,0,223,164,2,0,56,192,205,154,205,50,255,0,0,0,0,0,0,0,0,0,0,0,0,0,161,169,2,0,162,
166,2,0,164,166,2,0,166,166,2,0,168,166,2,0,170,166,2,0,172,166,2,0,174,166,2,0,176,166,2,0,178,166,2,0,180,166,2,0,183,166,2,0,186,166,2,0,189,166,2,0,192,166,2,0,195,166,2,0,198,166,2,0,201,166,2,0,204,166,2,0,207,166,2,0,210,166,2,0,0,0,0,0,0,0,0,0,4,0,0,0,4,0,0,0,13,0,0,0,51,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,38,168,2,0,98,169,2,0,8,0,0,0,16,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,8,0,0,0,16,0,0,0,24,0,0,0,0,0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,4,0,0,0,0,0,0,0,0,0,0,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,53,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,179,2,0,9,0,0,0,218,179,2,0,10,0,0,0,226,179,2,0,11,0,0,0,122,182,2,0,12,0,0,0,233,179,2,0,13,0,0,0,245,179,2,0,14,0,0,0,69,179,2,0,15,0,0,0,133,182,2,0,16,0,0,0,9,180,2,0,17,0,0,0,19,180,2,0,18,0,0,0,33,180,2,0,19,0,0,0,40,180,2,0,20,0,0,0,45,180,2,0,21,0,0,0,48,180,2,0,22,0,0,0,141,182,2,0,23,0,0,0,61,180,2,0,24,0,0,0,67,180,2,0,25,0,0,0,73,180,2,0,26,0,
0,0,80,180,2,0,27,0,0,0,86,180,2,0,27,0,0,0,94,180,2,0,28,0,0,0,101,180,2,0,29,0,0,0,10,179,2,0,30,0,0,0,211,179,2,0,31,0,0,0,218,179,2,0,10,0,0,0,226,179,2,0,11,0,0,0,233,179,2,0,13,0,0,0,245,179,2,0,14,0,0,0,69,179,2,0,15,0,0,0,1,180,2,0,32,0,0,0,9,180,2,0,17,0,0,0,19,180,2,0,18,0,0,0,33,180,2,0,19,0,0,0,40,180,2,0,20,0,0,0,45,180,2,0,21,0,0,0,48,180,2,0,22,0,0,0,53,180,2,0,33,0,0,0,61,180,2,0,24,0,0,0,67,180,2,0,25,0,0,0,73,180,2,0,26,0,0,0,80,180,2,0,27,0,0,0,86,180,2,0,27,0,0,0,94,180,2,0,28,
0,0,0,101,180,2,0,29,0,0,0,69,179,2,0,34,0,0,0,75,179,2,0,35,0,0,0,80,179,2,0,36,0,0,0,10,179,2,0,37,0,0,0,0,179,2,0,38,0,0,0,6,179,2,0,39,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,184,2,0,128,184,2,0,141,184,2,0,158,184,2,0,190,184,2,
0,205,184,2,0,223,184,2,0,238,184,2,0,2,185,2,0,30,185,2,0,65,185,2,0,82,185,2,0,109,185,2,0,129,185,2,0,167,185,2,0,194,185,2,0,236,185,2,0,27,186,2,0,44,186,2,0,95,186,2,0,118,186,2,0,164,186,2,0,191,186,2,0,242,186,2,0,22,187,2,0,74,187,2,0,119,187,2,0,134,187,2,0,160,187,2,0,198,187,2,0,230,187,2,0,7,188,2,0,41,188,2,0,58,188,2,0,79,188,2,0,95,188,2,0,112,188,2,0,156,188,2,0,236,188,2,0,39,189,2,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,14,0,0,0,29,0,0,0,40,0,0,0,41,0,0,0,30,0,0,
0,42,0,0,0,15,0,0,0,23,0,0,0,31,0,0,0,6,0,0,0,7,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,10,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,16,12,19,28,30,3,13,31,32,33,34,35,27,26,17,25,25,25,25,25,25,25,25,25,25,22,18,2,14,11,15,28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,20,28,4,28,22,28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,36,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,
28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,22,28,28,28,28,28,28,28,28,28,28,22,28,26,28,28,22,28,28,28,28,28,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,22,22,22,22,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,4,254,255,255,135,254,255,255,7,0,0,0,0,0,0,0,0,255,255,127,255,255,255,127,255,255,255,255,255,255,255,243,127,254,253,255,255,255,255,255,127,255,255,255,255,255,255,255,255,15,224,255,255,255,255,49,252,255,255,255,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,1,0,248,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,215,255,255,251,255,255,255,255,127,127,84,253,255,15,0,254,223,255,255,255,255,255,255,
255,255,254,223,255,255,255,255,3,0,255,255,255,255,255,255,159,25,255,255,255,207,63,3,0,0,0,0,0,0,254,255,255,255,127,2,254,255,255,255,127,0,0,0,0,0,0,0,0,0,255,255,255,7,7,0,0,0,0,0,254,255,255,7,254,7,0,0,0,0,254,255,255,255,255,255,255,255,255,124,255,127,47,0,96,0,0,0,224,255,255,255,255,255,255,35,0,0,0,255,3,0,0,0,224,159,249,255,255,253,197,3,0,0,0,176,3,0,3,0,224,135,249,255,255,253,109,3,0,0,0,94,0,0,28,0,224,175,251,255,255,253,237,35,0,0,0,0,1,0,0,0,224,159,249,255,255,253,205,35,0,
0,0,176,3,0,0,0,224,199,61,214,24,199,191,3,0,0,0,0,0,0,0,0,224,223,253,255,255,253,239,3,0,0,0,0,3,0,0,0,224,223,253,255,255,253,239,3,0,0,0,64,3,0,0,0,224,223,253,255,255,253,255,3,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,254,255,255,255,255,127,13,0,63,0,0,0,0,0,0,0,150,37,240,254,174,108,13,32,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,254,255,255,255,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,63,0,255,255,255,255,127,0,237,218,7,0,0,0,0,80,
1,80,49,130,171,98,44,0,0,0,0,64,0,201,128,245,7,0,0,0,0,8,1,2,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,15,255,255,255,255,255,255,255,255,255,255,255,3,255,255,63,63,255,255,255,255,63,63,255,170,255,255,255,63,255,255,255,255,255,255,223,95,220,31,207,15,255,31,220,31,0,0,0,0,64,76,0,0,0,0,0,0,0,0,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,254,3,0,0,254,255,255,255,255,255,255,255,255,255,31,0,254,255,255,255,255,255,255,255,255,255,255,7,224,255,255,255,255,
31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,63,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,255,7,254,255,255,135,254,255,255,7,0,0,0,0,0,0,128,0,255,255,127,255,255,255,127,255,255,255,255,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,1,0,248,3,0,3,0,0,0,0,0,255,255,255,255,255,255,255,255,63,0,0,0,3,
0,0,0,192,215,255,255,251,255,255,255,255,127,127,84,253,255,15,0,254,223,255,255,255,255,255,255,255,255,254,223,255,255,255,255,123,0,255,255,255,255,255,255,159,25,255,255,255,207,63,3,0,0,0,0,0,0,254,255,255,255,127,2,254,255,255,255,127,0,254,255,251,255,255,187,22,0,255,255,255,7,7,0,0,0,0,0,254,255,255,7,255,255,7,0,255,3,255,255,255,255,255,255,255,255,255,124,255,127,239,255,255,61,255,3,238,255,255,255,255,255,255,243,255,63,30,255,207,255,0,0,238,159,249,255,255,253,197,211,159,57,128,
176,207,255,3,0,228,135,249,255,255,253,109,211,135,57,0,94,192,255,31,0,238,175,251,255,255,253,237,243,191,59,0,0,193,255,0,0,238,159,249,255,255,253,205,243,143,57,192,176,195,255,0,0,236,199,61,214,24,199,191,195,199,61,128,0,128,255,0,0,238,223,253,255,255,253,239,195,223,61,96,0,195,255,0,0,236,223,253,255,255,253,239,195,223,61,96,64,195,255,0,0,236,223,253,255,255,253,255,195,207,61,128,0,195,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,254,255,255,255,255,127,255,7,255,127,255,3,0,0,0,0,150,37,
240,254,174,108,255,59,95,63,255,3,0,0,0,0,0,0,0,3,255,3,160,194,255,254,255,255,255,3,254,255,223,15,191,254,255,63,254,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,31,2,0,0,0,160,0,0,0,254,255,62,0,254,255,255,255,255,255,255,255,255,255,31,102,254,255,255,255,255,255,255,255,255,255,255,119,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,14,0,0,0,29,0,0,0,40,0,0,0,41,0,0,0,30,0,0,0,42,0,0,0,15,0,0,0,23,0,0,0,31,0,0,0,8,0,0,0,9,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,
0,0,0,0,21,10,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,16,12,19,28,30,3,13,31,32,33,34,35,27,26,17,25,25,25,25,25,25,25,25,25,25,22,18,2,14,11,15,28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,20,28,4,28,22,28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,36,28,28,28,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,0,0,0,0,0,0,0,0,0,1,1,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,45,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,14,0,0,0,29,0,0,0,40,0,0,0,41,0,0,0,30,0,0,0,42,0,0,0,15,0,0,0,23,0,0,0,31,0,0,0,8,0,0,0,9,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,21,10,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,16,12,19,28,30,3,13,31,32,33,34,35,27,26,17,25,25,25,25,25,25,25,25,25,25,23,18,2,14,11,
15,28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,20,28,4,28,22,28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,36,28,28,28,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,0,0,0,0,0,0,0,0,0,1,1,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,45,0,0,
0,48,0,0,0,49,0,0,0,50,0,0,0,28,113,1,0,140,114,1,0,252,115,1,0,108,117,1,0,108,117,1,0,220,118,1,0,252,115,1,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,14,0,0,0,29,0,0,0,40,0,0,0,41,0,0,0,30,0,0,0,42,0,0,0,15,0,0,0,23,0,0,0,31,0,0,0,6,0,0,0,7,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,10,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,16,12,19,28,30,3,13,31,32,33,34,35,27,26,17,25,25,25,25,25,25,25,25,25,25,23,18,2,14,11,15,28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,
22,22,22,22,22,22,20,28,4,28,22,28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,36,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,22,28,28,28,28,28,28,28,28,28,28,22,28,26,28,28,22,28,28,28,28,28,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,22,22,22,22,22,
22,22,22],"i8",4,n.q+84602);
D([23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,14,0,0,0,29,0,0,0,40,0,0,0,41,0,0,0,30,0,0,0,42,0,0,0,15,0,0,0,23,0,0,0,31,0,0,0,10,0,0,0,7,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,21,10,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,16,12,19,28,30,3,13,31,32,33,34,35,27,26,17,25,25,25,25,25,25,25,25,25,25,23,18,2,14,11,15,28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,20,28,4,28,22,28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,
22,22,28,36,28,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,14,0,0,0,29,0,0,0,40,0,0,0,41,0,0,0,30,0,0,0,42,0,0,0,15,0,0,0,23,0,0,0,31,0,0,0,8,0,0,0,9,0,0,0,1,
0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,21,10,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,16,12,19,28,30,3,13,31,32,33,34,35,27,26,17,25,25,25,25,25,25,25,25,25,25,23,18,2,14,11,15,28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,20,28,4,28,22,28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,36,28,28,28,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,5,5,5,5,
5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,0,0,0,0,0,0,0,0,0,1,1,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,45,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,16,0,0,0,38,0,0,0,51,0,0,0,52,0,0,0,39,0,0,0,53,0,0,0,17,0,0,0,24,0,0,0,40,0,0,0,11,0,0,0,12,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,10,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,16,12,19,28,30,3,13,31,32,33,34,35,27,26,17,25,25,25,25,25,25,
25,25,25,25,23,18,2,14,11,15,28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,20,28,4,28,22,28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,36,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,22,28,28,28,28,28,28,28,28,28,28,22,28,26,28,28,22,28,28,28,28,28,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,22,22,22,22,22,22,
22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,22,22,22,22,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,18,0,0,0,47,0,0,0,54,0,0,0,55,0,0,0,48,0,0,0,56,0,0,0,19,0,0,0,25,0,0,0,49,0,0,0,13,0,0,0,14,0,0,0,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,21,10,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,16,12,19,28,30,3,13,31,32,33,34,35,27,26,17,25,25,25,25,25,25,25,25,25,25,23,18,2,14,11,15,
28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,20,28,4,28,22,28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,36,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,22,28,28,28,28,28,28,28,28,28,28,22,28,26,28,28,22,28,28,28,28,28,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,
22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,22,22,22,22,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,176,103,1,0,104,120,1,0,216,121,1,0,72,123,1,0,72,123,1,0,184,124,1,0,216,121,1,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,14,0,0,0,29,0,0,0,40,0,0,0,41,0,0,0,30,0,0,0,42,0,0,0,15,0,0,0,23,0,0,0,31,0,0,0,10,0,0,0,7,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,21,10,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,16,12,19,28,30,3,13,31,32,33,34,35,27,
26,17,25,25,25,25,25,25,25,25,25,25,22,18,2,14,11,15,28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,20,28,4,28,22,28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,36,28,28,28,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,24,0,0,0,25,0,0,0,26,0,0,0,27,0,0,0,28,0,0,0,14,0,0,0,29,0,0,0,40,0,0,0,41,0,0,0,30,0,0,0,42,0,0,0,15,0,0,0,23,0,0,0,31,0,0,0,8,0,0,0,9,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,21,10,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,16,12,19,28,30,3,13,31,32,33,34,35,27,26,17,25,25,25,25,25,25,25,25,25,25,22,18,2,14,11,15,28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,20,28,4,28,22,28,24,24,
24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,36,28,28,28,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,7,7,7,7,0,0,0,0,0,0,0,0,0,1,1,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,47,0,0,0,45,0,0,0,48,0,0,0,49,0,0,0,50,0,0,0,32,0,0,0,33,0,0,0,34,0,0,0,35,0,0,0,36,0,0,0,37,0,0,0,16,0,0,0,38,0,0,0,51,0,
0,0,52,0,0,0,39,0,0,0,53,0,0,0,17,0,0,0,24,0,0,0,40,0,0,0,11,0,0,0,12,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,10,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,16,12,19,28,30,3,13,31,32,33,34,35,27,26,17,25,25,25,25,25,25,25,25,25,25,22,18,2,14,11,15,28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,20,28,4,28,22,28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,36,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,
28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,22,28,28,28,28,28,28,28,28,28,28,22,28,26,28,28,22,28,28,28,28,28,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,22,22,22,22,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,41,0,0,0,42,0,0,0,43,0,0,0,44,0,0,0,45,0,0,0,46,0,0,0,18,0,0,0,47,0,0,0,54,0,0,0,55,0,0,0,48,0,0,0,56,0,0,
0,19,0,0,0,25,0,0,0,49,0,0,0,13,0,0,0,14,0,0,0,2,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,21,10,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,16,12,19,28,30,3,13,31,32,33,34,35,27,26,17,25,25,25,25,25,25,25,25,25,25,22,18,2,14,11,15,28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,20,28,4,28,22,28,24,24,24,24,24,24,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,36,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,
28,28,28,28,28,28,28,28,28,28,28,28,28,22,28,28,28,28,28,28,28,28,28,28,22,28,26,28,28,22,28,28,28,28,28,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,28,22,22,22,22,22,22,22,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,178,192,2,0,184,192,2,0,187,192,2,0,193,192,2,0,92,192,2,0,200,192,2,0,209,192,2,0,217,192,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,192,3,0,0,192,4,0,0,192,5,0,0,192,6,0,0,192,7,0,0,192,8,0,0,192,9,0,0,192,10,0,0,192,11,0,0,192,12,0,0,192,13,0,0,192,14,0,0,192,15,0,0,192,16,0,0,192,17,0,0,192,18,0,0,192,19,0,0,192,20,0,0,192,21,0,0,192,22,0,0,192,23,0,0,192,24,0,0,192,25,0,0,192,26,0,0,192,27,0,0,192,28,0,0,192,29,0,0,192,30,0,0,192,31,0,0,192,0,0,0,179,1,0,0,195,2,0,0,195,3,0,0,195,4,0,0,195,5,0,0,195,6,0,0,195,7,0,0,195,8,0,0,195,9,0,0,195,10,0,0,195,11,0,0,195,12,0,0,
195,13,0,0,211,14,0,0,195,15,0,0,195,0,0,12,187,1,0,12,195,2,0,12,195,3,0,12,195,4,0,12,211,96,129,1,0,208,129,1,0,64,130,1,0,64,130,1,0,32,0,0,0,9,0,0,0,10,0,0,0,13,0,0,0,11,0,0,0,12,0,0,0,133,0,0,0,0,32,0,0,1,32,0,0,2,32,0,0,3,32,0,0,4,32,0,0,5,32,0,0,6,32,0,0,8,32,0,0,9,32,0,0,10,32,0,0,40,32,0,0,41,32,0,0,95,32,0,0,0,48,0,0,0,0,0,0,0,0,0,0,10,0,0,0,100,0,0,0,232,3,0,0,16,39,0,0,160,134,1,0,64,66,15,0,128,150,152,0,0,225,245,5,3,0,0,0,4,0,0,0,4,0,0,0,6,0,0,0,131,249,162,0,68,78,110,0,252,41,21,
0,209,87,39,0,221,52,245,0,98,219,192,0,60,153,149,0,65,144,67,0,99,81,254,0,187,222,171,0,183,97,197,0,58,110,36,0,210,77,66,0,73,6,224,0,9,234,46,0,28,146,209,0,235,29,254,0,41,177,28,0,232,62,167,0,245,53,130,0,68,187,46,0,156,233,132,0,180,38,112,0,65,126,95,0,214,145,57,0,83,131,57,0,156,244,57,0,139,95,132,0,40,249,189,0,248,31,59,0,222,255,151,0,15,152,5,0,17,47,239,0,10,90,139,0,109,31,109,0,207,126,54,0,9,203,39,0,70,79,183,0,158,102,63,0,45,234,95,0,186,39,117,0,229,235,199,0,61,123,241,
0,247,57,7,0,146,82,138,0,251,107,234,0,31,177,95,0,8,93,141,0,48,3,86,0,123,252,70,0,240,171,107,0,32,188,207,0,54,244,154,0,227,169,29,0,94,97,145,0,8,27,230,0,133,153,101,0,160,20,95,0,141,64,104,0,128,216,255,0,39,115,77,0,6,6,49,0,202,86,21,0,201,168,115,0,123,226,96,0,107,140,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,22,0,0,0,26,234,2,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,22,0,0,0,18,230,2,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,0,0,22,0,0,0,10,226,2,0,0,4,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,116,0,0,0,48,236,2,0,110,0,0,0,50,236,2,0,114,0,0,0,52,236,2,0,102,0,0,0,54,236,2,0,97,0,0,0,56,236,2,0,101,0,0,0,58,236,2,0,119,0,0,0,60,236,2,0,87,0,0,0,73,236,2,0,115,0,0,0,87,236,2,0,83,0,0,0,99,236,2,0,100,0,0,0,112,236,2,0,68,0,0,0,124,
236,2],"i8",4,n.q+94852);
D([4,0,4,0,27,0,27,0,32,0,32,0,35,0,33,0,10,0,2,0,22,0,9,0,33,0,33,0,33,0,21,0,28,0,1,0,20,0,20,0,20,0,20,0,20,0,20,0,20,0,8,0,4,0,5,0,27,0,2,0,23,0,27,0,32,0,31,0,30,0,29,0,9,0,19,0,0,0,21,0,18,0,21,0,3,0,7,0,21,0,21,0,20,0,20,0,20,0,20,0,20,0,20,0,20,0,20,0,8,0,4,0,5,0,5,0,6,0,27,0,26,0,24,0,25,0,32,0,7,0,21,0,20,0,20,0,20,0,20,0,20,0,20,0,11,0,20,0,13,0,20,0,12,0,20,0,20,0,20,0,14,0,20,0,20,0,20,0,16,0,20,0,15,0,20,0,17,0,0,0,0,0,0,0,142,0,46,0,47,0,51,0,53,0,48,0,55,0,146,0,230,0,230,0,230,0,
230,0,0,0,61,0,125,0,55,0,55,0,230,0,230,0,0,0,40,0,53,0,46,0,50,0,47,0,81,0,0,0,0,0,71,0,0,0,0,0,230,0,81,0,0,0,230,0,230,0,230,0,0,0,230,0,113,0,85,0,230,0,86,0,230,0,0,0,89,0,230,0,0,0,62,0,66,0,75,0,83,0,77,0,86,0,67,0,0,0,0,0,98,0,99,0,230,0,0,0,230,0,230,0,230,0,0,0,0,0,102,0,83,0,95,0,90,0,98,0,98,0,101,0,0,0,108,0,0,0,103,0,0,0,110,0,102,0,104,0,0,0,104,0,120,0,117,0,0,0,116,0,0,0,121,0,0,0,230,0,158,0,165,0,172,0,179,0,182,0,73,0,188,0,195,0,202,0,209,0,216,0,222,0,0,0,1,0,1,0,1,0,1,0,1,
0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,3,0,4,0,7,0,3,0,4,0,5,0,5,0,6,0,6,0,8,0,7,0,7,0,17,0,22,0,18,0,17,0,18,0,8,0,8,0,15,0,15,0,23,0,15,0,24,0,15,0,25,0,26,0,26,0,30,0,22,0,98,0,30,0,5,0,50,0,6,0,34,0,34,0,51,0,23,0,24,0,52,0,25,0,26,0,26,0,42,0,44,0,42,0,44,0,47,0,50,0,47,0,53,0,55,0,51,0,54,0,59,0,60,0,52,0,59,0,60,0,69,0,68,0,34,0,68,0,70,0,56,0,71,0,72,0,53,
0,55,0,54,0,73,0,74,0,76,0,41,0,78,0,69,0,80,0,27,0,81,0,82,0,70,0,71,0,84,0,72,0,85,0,16,0,73,0,74,0,86,0,76,0,78,0,88,0,90,0,80,0,81,0,82,0,9,0,2,0,84,0,0,0,0,0,85,0,0,0,0,0,86,0,0,0,0,0,88,0,90,0,93,0,93,0,93,0,93,0,93,0,93,0,93,0,94,0,94,0,94,0,94,0,94,0,94,0,94,0,95,0,95,0,95,0,95,0,95,0,95,0,95,0,96,0,0,0,96,0,96,0,96,0,96,0,96,0,97,0,97,0,99,0,0,0,99,0,99,0,99,0,99,0,99,0,100,0,0,0,100,0,0,0,100,0,100,0,100,0,101,0,0,0,101,0,101,0,101,0,101,0,101,0,102,0,102,0,0,0,102,0,102,0,102,0,102,0,103,
0,0,0,103,0,103,0,103,0,103,0,104,0,0,0,104,0,104,0,104,0,104,0,104,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,0,0,92,0,1,0,93,0,93,0,94,0,94,0,95,0,95,0,92,0,92,0,92,0,92,0,92,0,96,0,92,0,92,0,92,0,97,0,92,0,92,0,98,0,98,0,98,0,98,0,98,0,98,0,98,0,99,0,100,0,101,0,102,0,102,0,92,0,92,0,103,0,92,
0,92,0,92,0,96,0,92,0,92,0,97,0,92,0,97,0,92,0,104,0,97,0,92,0,98,0,98,0,98,0,98,0,98,0,98,0,98,0,98,0,99,0,100,0,101,0,101,0,92,0,102,0,92,0,92,0,92,0,103,0,104,0,97,0,98,0,98,0,98,0,98,0,98,0,98,0,98,0,98,0,98,0,98,0,98,0,98,0,98,0,98,0,98,0,98,0,98,0,98,0,98,0,98,0,98,0,98,0,98,0,0,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,0,0,10,0,11,0,12,0,13,0,14,0,10,0,15,0,16,0,17,0,18,0,19,0,10,0,20,0,21,0,21,0,21,0,22,0,23,0,21,0,24,0,21,0,21,0,25,0,21,0,21,0,21,0,26,0,21,0,21,0,10,0,
21,0,21,0,21,0,22,0,23,0,24,0,21,0,21,0,25,0,21,0,21,0,21,0,26,0,21,0,21,0,21,0,21,0,27,0,12,0,12,0,36,0,30,0,30,0,32,0,33,0,32,0,33,0,36,0,37,0,38,0,45,0,50,0,47,0,46,0,42,0,37,0,38,0,40,0,41,0,51,0,42,0,52,0,43,0,53,0,54,0,55,0,60,0,50,0,49,0,61,0,34,0,69,0,34,0,63,0,64,0,70,0,51,0,52,0,71,0,53,0,54,0,55,0,47,0,92,0,42,0,44,0,92,0,69,0,68,0,72,0,74,0,70,0,73,0,92,0,60,0,71,0,92,0,61,0,76,0,92,0,65,0,68,0,77,0,75,0,78,0,79,0,72,0,74,0,73,0,80,0,81,0,82,0,44,0,83,0,76,0,84,0,56,0,85,0,86,0,77,0,78,
0,87,0,79,0,88,0,44,0,80,0,81,0,89,0,82,0,83,0,90,0,91,0,84,0,85,0,86,0,92,0,28,0,87,0,92,0,92,0,88,0,92,0,92,0,89,0,92,0,92,0,90,0,91,0,29,0,29,0,29,0,29,0,29,0,29,0,29,0,31,0,31,0,31,0,31,0,31,0,31,0,31,0,35,0,35,0,35,0,35,0,35,0,35,0,35,0,39,0,92,0,39,0,39,0,39,0,39,0,39,0,48,0,48,0,57,0,92,0,57,0,57,0,57,0,57,0,57,0,58,0,92,0,58,0,92,0,58,0,58,0,58,0,59,0,92,0,59,0,59,0,59,0,59,0,59,0,62,0,62,0,92,0,62,0,62,0,62,0,62,0,66,0,92,0,66,0,66,0,66,0,66,0,67,0,92,0,67,0,67,0,67,0,67,0,67,0,9,0,92,0,
92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,92,0,8,0,174,255,209,0,10,0,174,255,174,255,11,0,174,255,174,255,174,255,174,255,174,255,174,255,174,255,174,255,5,0,209,0,174,255,209,0,209,0,209,0,209,0,209,0,209,0,209,0,209,0,174,255,251,255,174,255,14,0,236,255,174,255,174,255,174,255,174,255,209,0,209,0,209,0,209,0,
209,0,13,0,37,0,12,0,66,0,16,0,80,0,19,0,109,0,123,0,20,0,152,0,15,0,166,0,195,0,174,255,174,255,174,255,174,255,174,255,174,255,174,255,174,255,174,255,174,255,174,255,174,255,174,255,174,255,174,255,174,255,174,255,174,255,174,255,174,255,174,255,174,255,174,255,174,255,23,0,174,255,119,0,174,255,7,0,46,0,174,255,38,0,174,255,23,0,17,0,35,0,174,255,13,0,174,255,174,255,174,255,174,255,58,0,174,255,174,255,53,0,174,255,174,255,174,255,40,0,174,255,7,0,174,255,59,0,69,0,174,255,72,0,174,255,174,255,
174,255,174,255,174,255,174,255,174,255,252,255,232,0,246,255,255,255,26,0,0,0,39,0,1,0,50,0,174,255,174,255,2,0,36,0,3,0,47,0,174,255,174,255,174,255,174,255,174,255,254,255,148,0,174,255,9,0,27,0,174,255,188,255,174,255,174,255,175,255,174,255,174,255,174,255,174,255,174,255,174,255,174,255,0,0,0,0,0,0,109,230,236,222,5,0,11,0,0,0,0,0,0,0,73,0,49,1,83,0,127,1,48,1,105,0,120,1,255,0,129,1,83,2,130,1,131,1,132,1,133,1,134,1,84,2,135,1,136,1,137,1,86,2,138,1,87,2,139,1,140,1,142,1,221,1,143,1,89,2,
144,1,91,2,145,1,146,1,147,1,96,2,148,1,99,2,150,1,105,2,151,1,104,2,152,1,153,1,156,1,111,2,157,1,114,2,159,1,117,2,166,1,128,2,167,1,168,1,169,1,131,2,172,1,173,1,174,1,136,2,175,1,176,1,177,1,138,2,178,1,139,2,183,1,146,2,184,1,185,1,188,1,189,1,196,1,198,1,196,1,197,1,197,1,198,1,199,1,201,1,199,1,200,1,200,1,201,1,202,1,204,1,202,1,203,1,203,1,204,1,241,1,243,1,241,1,242,1,242,1,243,1,244,1,245,1,246,1,149,1,247,1,191,1,32,2,158,1,134,3,172,3,136,3,173,3,137,3,174,3,138,3,175,3,140,3,204,3,142,
3,205,3,143,3,206,3,153,3,69,3,153,3,190,31,163,3,194,3,247,3,248,3,250,3,251,3,96,30,155,30,223,0,223,0,158,30,223,0,89,31,81,31,91,31,83,31,93,31,85,31,95,31,87,31,188,31,179,31,204,31,195,31,236,31,229,31,252,31,243,31,58,2,101,44,59,2,60,2,61,2,154,1,62,2,102,44,65,2,66,2,67,2,128,1,68,2,137,2,69,2,140,2,244,3,184,3,249,3,242,3,253,3,123,3,254,3,124,3,255,3,125,3,192,4,207,4,38,33,201,3,42,33,107,0,43,33,229,0,50,33,78,33,131,33,132,33,96,44,97,44,98,44,107,2,99,44,125,29,100,44,125,2,109,44,
81,2,110,44,113,2,111,44,80,2,112,44,82,2,114,44,115,44,117,44,118,44,126,44,63,2,127,44,64,2,242,44,243,44,125,167,121,29,139,167,140,167,141,167,101,2,170,167,102,2,199,16,39,45,205,16,45,45,118,3,119,3,156,3,181,0,146,3,208,3,152,3,209,3,166,3,213,3,160,3,214,3,154,3,240,3,161,3,241,3,149,3,245,3,207,3,215,3,0,0,0,0,65,0,32,26,192,0,32,31,0,1,1,47,50,1,1,5,57,1,1,15,74,1,1,45,121,1,1,5,112,3,1,3,145,3,32,17,163,3,32,9,0,4,80,16,16,4,32,32,96,4,1,33,138,4,1,53,193,4,1,13,208,4,1,63,20,5,1,19,49,
5,48,38,160,1,1,5,179,1,1,3,205,1,1,15,222,1,1,17,248,1,1,39,34,2,1,17,216,3,1,23,0,30,1,149,160,30,1,95,8,31,248,8,24,31,248,6,40,31,248,8,56,31,248,8,72,31,248,6,104,31,248,8,136,31,248,8,152,31,248,8,168,31,248,8,184,31,248,2,186,31,182,2,200,31,170,4,216,31,248,2,218,31,156,2,232,31,248,2,234,31,144,2,248,31,128,2,250,31,130,2,70,2,1,9,16,5,1,3,96,33,16,16,0,44,48,47,103,44,1,5,128,44,1,99,235,44,1,3,64,166,1,45,128,166,1,23,34,167,1,13,50,167,1,61,121,167,1,3,126,167,1,9,144,167,1,3,160,167,
1,9,33,255,32,26,0,0,0,0,99,111,114,101,0,73,32,0,37,46,48,50,102,0,120,100,111,116,0,100,111,116,58,100,111,116,0,103,118,58,100,111,116,0,99,97,110,111,110,58,100,111,116,0,112,108,97,105,110,58,100,111,116,0,112,108,97,105,110,45,101,120,116,58,100,111,116,0,120,100,111,116,58,120,100,111,116,0,120,100,111,116,49,46,50,58,120,100,111,116,0,120,100,111,116,49,46,52,58,120,100,111,116,0,0,0,0,0,0,0,0,0,0,0,32,37,100,32,0,35,37,48,50,120,37,48,50,120,37,48,50,120,37,48,50,120,0,115,101,116,108,105,
110,101,119,105,100,116,104,40,0,37,46,51,102,0,83,32,0,67,32,0,50,32,0,69,32,0,101,32,0,70,32,0,116,32,37,117,32,0,84,32,0,120,100,111,116,118,101,114,115,105,111,110,0,49,46,52,0,49,46,50,0,49,46,55,0,95,108,100,114,97,119,95,0,95,104,100,114,97,119,95,0,95,116,100,114,97,119,95,0,95,104,108,100,114,97,119,95,0,95,116,108,100,114,97,119,95,0,120,100,111,116,32,118,101,114,115,105,111,110,32,34,37,115,34,32,116,111,111,32,108,111,110,103,0,37,115,37,100,32,45,0,102,105,103,0,102,105,103,58,102,105,
103,0,35,32,37,115,10,0,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,46,49,102,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,10,0,110,32,62,61,32,52,0,103,118,114,101,110,100,101,114,95,99,111,114,101,95,102,105,103,46,99,0,102,105,103,95,98,101,122,105,101,114,0,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,46,49,102,32,37,100,32,37,100,32,37,100,32,37,100,10,0,37,100,32,37,100,32,37,100,
32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,46,51,102,32,37,100,32,37,46,52,102,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,10,0,37,100,32,37,100,32,35,37,48,50,120,37,48,50,120,37,48,50,120,10,0,102,105,103,95,114,101,115,111,108,118,101,95,99,111,108,111,114,0,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,46,49,102,32,37,46,52,102,32,37,100,32,37,46,49,102,32,37,46,49,102,32,37,100,32,37,100,32,37,115,92,48,48,49,10,0,35,
32,101,110,100,32,111,102,32,70,73,71,32,102,105,108,101,10,0,35,70,73,71,32,51,46,50,10,0,35,32,71,101,110,101,114,97,116,101,100,32,98,121,32,37,115,32,118,101,114,115,105,111,110,32,37,115,32,40,37,115,41,10,0,35,32,84,105,116,108,101,58,32,37,115,10,0,35,32,80,97,103,101,115,58,32,37,100,10,0,80,111,114,116,114,97,105,116,10,0,67,101,110,116,101,114,10,0,73,110,99,104,101,115,10,0,76,101,116,116,101,114,10,0,49,48,48,46,48,48,10,0,83,105,110,103,108,101,10,0,45,50,10,0,49,50,48,48,0,32,50,10,
0,109,97,112,0,105,115,109,97,112,58,109,97,112,0,99,109,97,112,58,109,97,112,0,105,109,97,112,58,109,97,112,0,99,109,97,112,120,58,109,97,112,0,105,109,97,112,95,110,112,58,109,97,112,0,99,109,97,112,120,95,110,112,58,109,97,112,0,114,101,99,116,32,37,115,32,37,100,44,37,100,32,37,100,44,37,100,10,0,99,105,114,99,108,101,32,37,115,32,37,100,44,37,100,44,37,100,10,0,112,111,108,121,32,37,115,0,32,37,100,44,37,100,0,103,118,114,101,110,100,101,114,95,99,111,114,101,95,109,97,112,46,99,0,109,97,112,
95,111,117,116,112,117,116,95,115,104,97,112,101,0,114,101,99,116,97,110,103,108,101,32,40,37,100,44,37,100,41,32,40,37,100,44,37,100,41,32,37,115,32,37,115,10,0,60,97,114,101,97,32,115,104,97,112,101,61,34,99,105,114,99,108,101,34,0,60,97,114,101,97,32,115,104,97,112,101,61,34,114,101,99,116,34,0,60,97,114,101,97,32,115,104,97,112,101,61,34,112,111,108,121,34,0,32,105,100,61,34,0,32,104,114,101,102,61,34,0,32,116,105,116,108,101,61,34,0,32,97,108,116,61,34,34,0,32,99,111,111,114,100,115,61,34,0,
37,100,44,37,100,44,37,100,0,37,100,44,37,100,44,37,100,44,37,100,0,37,100,44,37,100,0,44,37,100,44,37,100,0,34,62,10,0,60,47,109,97,112,62,10,0,98,97,115,101,32,114,101,102,101,114,101,114,10,0,100,101,102,97,117,108,116,32,0,60,109,97,112,32,105,100,61,34,0,34,32,110,97,109,101,61,34,0,112,115,50,58,112,115,0,32,93,32,32,37,100,32,116,114,117,101,32,37,115,10,0,32,93,32,32,37,100,32,102,97,108,115,101,32,37,115,10,0,32,115,101,116,108,105,110,101,119,105,100,116,104,10,0,37,115,32,0,115,101,116,
104,115,98,0,37,46,53,103,32,37,46,53,103,32,37,46,53,103,32,37,115,99,111,108,111,114,10,0,37,32,0,110,101,119,112,97,116,104,32,0,32,109,111,118,101,116,111,10,0,32,108,105,110,101,116,111,10,0,115,116,114,111,107,101,10,0,32,99,117,114,118,101,116,111,10,0,99,108,111,115,101,112,97,116,104,32,102,105,108,108,10,0,99,108,111,115,101,112,97,116,104,32,115,116,114,111,107,101,10,0,32,101,108,108,105,112,115,101,95,112,97,116,104,32,102,105,108,108,10,0,32,101,108,108,105,112,115,101,95,112,97,116,
104,32,115,116,114,111,107,101,10,0,32,47,37,115,32,115,101,116,95,102,111,110,116,10,0,32,109,111,118,101,116,111,32,0,32,37,115,32,97,108,105,103,110,101,100,116,101,120,116,10,0,91,32,47,82,101,99,116,32,91,32,0,32,93,10,0,32,32,47,66,111,114,100,101,114,32,91,32,48,32,48,32,48,32,93,10,32,32,47,65,99,116,105,111,110,32,60,60,32,47,83,117,98,116,121,112,101,32,47,85,82,73,32,47,85,82,73,32,37,115,32,62,62,10,32,32,47,83,117,98,116,121,112,101,32,47,76,105,110,107,10,47,65,78,78,32,112,100,102,
109,97,114,107,10,0,103,115,97,118,101,10,0,37,37,32,37,115,10,0,48,32,48,32,48,32,101,100,103,101,99,111,108,111,114,10,0,101,110,100,112,97,103,101,10,115,104,111,119,112,97,103,101,10,103,114,101,115,116,111,114,101,10,0,37,37,80,97,103,101,84,114,97,105,108,101,114,10,0,37,37,37,37,69,110,100,80,97,103,101,58,32,37,100,10,0,37,37,37,37,80,97,103,101,58,32,37,100,32,37,100,10,0,37,37,37,37,80,97,103,101,66,111,117,110,100,105,110,103,66,111,120,58,32,37,100,32,37,100,32,37,100,32,37,100,10,0,76,
97,110,100,115,99,97,112,101,0,80,111,114,116,114,97,105,116,0,37,37,37,37,80,97,103,101,79,114,105,101,110,116,97,116,105,111,110,58,32,37,115,10,0,60,60,32,47,80,97,103,101,83,105,122,101,32,91,37,100,32,37,100,93,32,62,62,32,115,101,116,112,97,103,101,100,101,118,105,99,101,10,0,37,100,32,37,100,32,37,100,32,98,101,103,105,110,112,97,103,101,10,0,103,115,97,118,101,10,37,100,32,37,100,32,37,100,32,37,100,32,98,111,120,112,114,105,109,32,99,108,105,112,32,110,101,119,112,97,116,104,10,0,37,103,
32,37,103,32,115,101,116,95,115,99,97,108,101,32,37,100,32,114,111,116,97,116,101,32,37,103,32,37,103,32,116,114,97,110,115,108,97,116,101,10,0,99,97,110,118,97,115,32,115,105,122,101,32,40,37,100,44,37,100,41,32,101,120,99,101,101,100,115,32,80,68,70,32,108,105,109,105,116,32,40,37,100,41,10,9,40,115,117,103,103,101,115,116,32,115,101,116,116,105,110,103,32,97,32,98,111,117,110,100,105,110,103,32,98,111,120,32,115,105,122,101,44,32,115,101,101,32,100,111,116,40,49,41,41,10,0,91,32,47,67,114,111,
112,66,111,120,32,91,37,100,32,37,100,32,37,100,32,37,100,93,32,47,80,65,71,69,83,32,112,100,102,109,97,114,107,10,0,37,100,32,37,100,32,115,101,116,108,97,121,101,114,10,0,0,37,37,37,37,84,105,116,108,101,58,32,37,115,10,0,37,37,80,97,103,101,115,58,32,40,97,116,101,110,100,41,10,0,37,37,80,97,103,101,115,58,32,49,10,0,37,37,66,111,117,110,100,105,110,103,66,111,120,58,32,40,97,116,101,110,100,41,10,0,37,37,37,37,66,111,117,110,100,105,110,103,66,111,120,58,32,37,100,32,37,100,32,37,100,32,37,100,
10,0,37,37,69,110,100,67,111,109,109,101,110,116,115,10,115,97,118,101,10,0,115,101,116,117,112,76,97,116,105,110,49,10,0,91,32,123,67,97,116,97,108,111,103,125,32,60,60,32,47,85,82,73,32,60,60,32,47,66,97,115,101,32,37,115,32,62,62,32,62,62,10,47,80,85,84,32,112,100,102,109,97,114,107,10,0,37,37,66,101,103,105,110,80,114,111,108,111,103,0,47,68,111,116,68,105,99,116,32,50,48,48,32,100,105,99,116,32,100,101,102,0,68,111,116,68,105,99,116,32,98,101,103,105,110,0,47,115,101,116,117,112,76,97,116,105,
110,49,32,123,0,109,97,114,107,0,47,69,110,99,111,100,105,110,103,86,101,99,116,111,114,32,50,53,54,32,97,114,114,97,121,32,100,101,102,0,32,69,110,99,111,100,105,110,103,86,101,99,116,111,114,32,48,0,73,83,79,76,97,116,105,110,49,69,110,99,111,100,105,110,103,32,48,32,50,53,53,32,103,101,116,105,110,116,101,114,118,97,108,32,112,117,116,105,110,116,101,114,118,97,108,0,69,110,99,111,100,105,110,103,86,101,99,116,111,114,32,52,53,32,47,104,121,112,104,101,110,32,112,117,116,0,37,32,83,101,116,32,
117,112,32,73,83,79,32,76,97,116,105,110,32,49,32,99,104,97,114,97,99,116,101,114,32,101,110,99,111,100,105,110,103,0,47,115,116,97,114,110,101,116,73,83,79,32,123,0,32,32,32,32,32,32,32,32,100,117,112,32,100,117,112,32,102,105,110,100,102,111,110,116,32,100,117,112,32,108,101,110,103,116,104,32,100,105,99,116,32,98,101,103,105,110,0,32,32,32,32,32,32,32,32,123,32,49,32,105,110,100,101,120,32,47,70,73,68,32,110,101,32,123,32,100,101,102,32,125,123,32,112,111,112,32,112,111,112,32,125,32,105,102,101,
108,115,101,0,32,32,32,32,32,32,32,32,125,32,102,111,114,97,108,108,0,32,32,32,32,32,32,32,32,47,69,110,99,111,100,105,110,103,32,69,110,99,111,100,105,110,103,86,101,99,116,111,114,32,100,101,102,0,32,32,32,32,32,32,32,32,99,117,114,114,101,110,116,100,105,99,116,32,101,110,100,32,100,101,102,105,110,101,102,111,110,116,0,125,32,100,101,102,0,47,84,105,109,101,115,45,82,111,109,97,110,32,115,116,97,114,110,101,116,73,83,79,32,100,101,102,0,47,84,105,109,101,115,45,73,116,97,108,105,99,32,115,116,
97,114,110,101,116,73,83,79,32,100,101,102,0,47,84,105,109,101,115,45,66,111,108,100,32,115,116,97,114,110,101,116,73,83,79,32,100,101,102,0,47,84,105,109,101,115,45,66,111,108,100,73,116,97,108,105,99,32,115,116,97,114,110,101,116,73,83,79,32,100,101,102,0,47,72,101,108,118,101,116,105,99,97,32,115,116,97,114,110,101,116,73,83,79,32,100,101,102,0,47,72,101,108,118,101,116,105,99,97,45,79,98,108,105,113,117,101,32,115,116,97,114,110,101,116,73,83,79,32,100,101,102,0,47,72,101,108,118,101,116,105,
99,97,45,66,111,108,100,32,115,116,97,114,110,101,116,73,83,79,32,100,101,102,0,47,72,101,108,118,101,116,105,99,97,45,66,111,108,100,79,98,108,105,113,117,101,32,115,116,97,114,110,101,116,73,83,79,32,100,101,102,0,47,67,111,117,114,105,101,114,32,115,116,97,114,110,101,116,73,83,79,32,100,101,102,0,47,67,111,117,114,105,101,114,45,79,98,108,105,113,117,101,32,115,116,97,114,110,101,116,73,83,79,32,100,101,102,0,47,67,111,117,114,105,101,114,45,66,111,108,100,32,115,116,97,114,110,101,116,73,83,
79,32,100,101,102,0,47,67,111,117,114,105,101,114,45,66,111,108,100,79,98,108,105,113,117,101,32,115,116,97,114,110,101,116,73,83,79,32,100,101,102,0,99,108,101,97,114,116,111,109,97,114,107,0,125,32,98,105,110,100,32,100,101,102,0,37,37,66,101,103,105,110,82,101,115,111,117,114,99,101,58,32,112,114,111,99,115,101,116,32,103,114,97,112,104,118,105,122,32,48,32,48,0,47,99,111,111,114,100,45,102,111,110,116,45,102,97,109,105,108,121,32,47,84,105,109,101,115,45,82,111,109,97,110,32,100,101,102,0,47,
100,101,102,97,117,108,116,45,102,111,110,116,45,102,97,109,105,108,121,32,47,84,105,109,101,115,45,82,111,109,97,110,32,100,101,102,0,47,99,111,111,114,100,102,111,110,116,32,99,111,111,114,100,45,102,111,110,116,45,102,97,109,105,108,121,32,102,105,110,100,102,111,110,116,32,56,32,115,99,97,108,101,102,111,110,116,32,100,101,102,0,47,73,110,118,83,99,97,108,101,70,97,99,116,111,114,32,49,46,48,32,100,101,102,0,47,115,101,116,95,115,99,97,108,101,32,123,0,32,32,32,32,32,32,32,100,117,112,32,49,32,
101,120,99,104,32,100,105,118,32,47,73,110,118,83,99,97,108,101,70,97,99,116,111,114,32,101,120,99,104,32,100,101,102,0,32,32,32,32,32,32,32,115,99,97,108,101,0,37,32,115,116,121,108,101,115,0,47,115,111,108,105,100,32,123,32,91,93,32,48,32,115,101,116,100,97,115,104,32,125,32,98,105,110,100,32,100,101,102,0,47,100,97,115,104,101,100,32,123,32,91,57,32,73,110,118,83,99,97,108,101,70,97,99,116,111,114,32,109,117,108,32,100,117,112,32,93,32,48,32,115,101,116,100,97,115,104,32,125,32,98,105,110,100,
32,100,101,102,0,47,100,111,116,116,101,100,32,123,32,91,49,32,73,110,118,83,99,97,108,101,70,97,99,116,111,114,32,109,117,108,32,54,32,73,110,118,83,99,97,108,101,70,97,99,116,111,114,32,109,117,108,93,32,48,32,115,101,116,100,97,115,104,32,125,32,98,105,110,100,32,100,101,102,0,47,105,110,118,105,115,32,123,47,102,105,108,108,32,123,110,101,119,112,97,116,104,125,32,100,101,102,32,47,115,116,114,111,107,101,32,123,110,101,119,112,97,116,104,125,32,100,101,102,32,47,115,104,111,119,32,123,112,111,
112,32,110,101,119,112,97,116,104,125,32,100,101,102,125,32,98,105,110,100,32,100,101,102,0,47,98,111,108,100,32,123,32,50,32,115,101,116,108,105,110,101,119,105,100,116,104,32,125,32,98,105,110,100,32,100,101,102,0,47,102,105,108,108,101,100,32,123,32,125,32,98,105,110,100,32,100,101,102,0,47,117,110,102,105,108,108,101,100,32,123,32,125,32,98,105,110,100,32,100,101,102,0,47,114,111,117,110,100,101,100,32,123,32,125,32,98,105,110,100,32,100,101,102,0,47,100,105,97,103,111,110,97,108,115,32,123,32,
125,32,98,105,110,100,32,100,101,102,0,47,116,97,112,101,114,101,100,32,123,32,125,32,98,105,110,100,32,100,101,102,0,37,32,104,111,111,107,115,32,102,111,114,32,115,101,116,116,105,110,103,32,99,111,108,111,114,32,0,47,110,111,100,101,99,111,108,111,114,32,123,32,115,101,116,104,115,98,99,111,108,111,114,32,125,32,98,105,110,100,32,100,101,102,0,47,101,100,103,101,99,111,108,111,114,32,123,32,115,101,116,104,115,98,99,111,108,111,114,32,125,32,98,105,110,100,32,100,101,102,0,47,103,114,97,112,104,
99,111,108,111,114,32,123,32,115,101,116,104,115,98,99,111,108,111,114,32,125,32,98,105,110,100,32,100,101,102,0,47,110,111,112,99,111,108,111,114,32,123,112,111,112,32,112,111,112,32,112,111,112,125,32,98,105,110,100,32,100,101,102,0,47,98,101,103,105,110,112,97,103,101,32,123,9,37,32,105,32,106,32,110,112,97,103,101,115,0,9,47,110,112,97,103,101,115,32,101,120,99,104,32,100,101,102,0,9,47,106,32,101,120,99,104,32,100,101,102,0,9,47,105,32,101,120,99,104,32,100,101,102,0,9,47,115,116,114,32,49,48,
32,115,116,114,105,110,103,32,100,101,102,0,9,110,112,97,103,101,115,32,49,32,103,116,32,123,0,9,9,103,115,97,118,101,0,9,9,9,99,111,111,114,100,102,111,110,116,32,115,101,116,102,111,110,116,0,9,9,9,48,32,48,32,109,111,118,101,116,111,0,9,9,9,40,92,40,41,32,115,104,111,119,32,105,32,115,116,114,32,99,118,115,32,115,104,111,119,32,40,44,41,32,115,104,111,119,32,106,32,115,116,114,32,99,118,115,32,115,104,111,119,32,40,92,41,41,32,115,104,111,119,0,9,9,103,114,101,115,116,111,114,101,0,9,125,32,105,
102,0,47,115,101,116,95,102,111,110,116,32,123,0,9,102,105,110,100,102,111,110,116,32,101,120,99,104,0,9,115,99,97,108,101,102,111,110,116,32,115,101,116,102,111,110,116,0,37,32,100,114,97,119,32,116,101,120,116,32,102,105,116,116,101,100,32,116,111,32,105,116,115,32,101,120,112,101,99,116,101,100,32,119,105,100,116,104,0,47,97,108,105,103,110,101,100,116,101,120,116,32,123,9,9,9,37,32,119,105,100,116,104,32,116,101,120,116,0,9,47,116,101,120,116,32,101,120,99,104,32,100,101,102,0,9,47,119,105,100,
116,104,32,101,120,99,104,32,100,101,102,0,9,103,115,97,118,101,0,9,9,119,105,100,116,104,32,48,32,103,116,32,123,0,9,9,9,91,93,32,48,32,115,101,116,100,97,115,104,0,9,9,9,116,101,120,116,32,115,116,114,105,110,103,119,105,100,116,104,32,112,111,112,32,119,105,100,116,104,32,101,120,99,104,32,115,117,98,32,116,101,120,116,32,108,101,110,103,116,104,32,100,105,118,32,48,32,116,101,120,116,32,97,115,104,111,119,0,9,9,125,32,105,102,0,9,103,114,101,115,116,111,114,101,0,47,98,111,120,112,114,105,109,
32,123,9,9,9,9,37,32,120,99,111,114,110,101,114,32,121,99,111,114,110,101,114,32,120,115,105,122,101,32,121,115,105,122,101,0,9,9,52,32,50,32,114,111,108,108,0,9,9,109,111,118,101,116,111,0,9,9,50,32,99,111,112,121,0,9,9,101,120,99,104,32,48,32,114,108,105,110,101,116,111,0,9,9,48,32,101,120,99,104,32,114,108,105,110,101,116,111,0,9,9,112,111,112,32,110,101,103,32,48,32,114,108,105,110,101,116,111,0,9,9,99,108,111,115,101,112,97,116,104,0,47,101,108,108,105,112,115,101,95,112,97,116,104,32,123,0,
9,47,114,121,32,101,120,99,104,32,100,101,102,0,9,47,114,120,32,101,120,99,104,32,100,101,102,0,9,47,121,32,101,120,99,104,32,100,101,102,0,9,47,120,32,101,120,99,104,32,100,101,102,0,9,109,97,116,114,105,120,32,99,117,114,114,101,110,116,109,97,116,114,105,120,0,9,110,101,119,112,97,116,104,0,9,120,32,121,32,116,114,97,110,115,108,97,116,101,0,9,114,120,32,114,121,32,115,99,97,108,101,0,9,48,32,48,32,49,32,48,32,51,54,48,32,97,114,99,0,9,115,101,116,109,97,116,114,105,120,0,47,101,110,100,112,97,
103,101,32,123,32,115,104,111,119,112,97,103,101,32,125,32,98,105,110,100,32,100,101,102,0,47,115,104,111,119,112,97,103,101,32,123,32,125,32,100,101,102,0,47,108,97,121,101,114,99,111,108,111,114,115,101,113,0,9,91,9,37,32,108,97,121,101,114,32,99,111,108,111,114,32,115,101,113,117,101,110,99,101,32,45,32,100,97,114,107,101,115,116,32,116,111,32,108,105,103,104,116,101,115,116,0,9,9,91,48,32,48,32,48,93,0,9,9,91,46,50,32,46,56,32,46,56,93,0,9,9,91,46,52,32,46,56,32,46,56,93,0,9,9,91,46,54,32,46,
56,32,46,56,93,0,9,9,91,46,56,32,46,56,32,46,56,93,0,9,93,0,100,101,102,0,47,108,97,121,101,114,108,101,110,32,108,97,121,101,114,99,111,108,111,114,115,101,113,32,108,101,110,103,116,104,32,100,101,102,0,47,115,101,116,108,97,121,101,114,32,123,47,109,97,120,108,97,121,101,114,32,101,120,99,104,32,100,101,102,32,47,99,117,114,108,97,121,101,114,32,101,120,99,104,32,100,101,102,0,9,108,97,121,101,114,99,111,108,111,114,115,101,113,32,99,117,114,108,97,121,101,114,32,49,32,115,117,98,32,108,97,121,
101,114,108,101,110,32,109,111,100,32,103,101,116,0,9,97,108,111,97,100,32,112,111,112,32,115,101,116,104,115,98,99,111,108,111,114,0,9,47,110,111,100,101,99,111,108,111,114,32,123,110,111,112,99,111,108,111,114,125,32,100,101,102,0,9,47,101,100,103,101,99,111,108,111,114,32,123,110,111,112,99,111,108,111,114,125,32,100,101,102,0,9,47,103,114,97,112,104,99,111,108,111,114,32,123,110,111,112,99,111,108,111,114,125,32,100,101,102,0,47,111,110,108,97,121,101,114,32,123,32,99,117,114,108,97,121,101,114,
32,110,101,32,123,105,110,118,105,115,125,32,105,102,32,125,32,100,101,102,0,47,111,110,108,97,121,101,114,115,32,123,0,9,47,109,121,117,112,112,101,114,32,101,120,99,104,32,100,101,102,0,9,47,109,121,108,111,119,101,114,32,101,120,99,104,32,100,101,102,0,9,99,117,114,108,97,121,101,114,32,109,121,108,111,119,101,114,32,108,116,0,9,99,117,114,108,97,121,101,114,32,109,121,117,112,112,101,114,32,103,116,0,9,111,114,0,9,123,105,110,118,105,115,125,32,105,102,0,47,99,117,114,108,97,121,101,114,32,48,
32,100,101,102,0,37,37,69,110,100,82,101,115,111,117,114,99,101,0,37,37,69,110,100,80,114,111,108,111,103,0,37,37,66,101,103,105,110,83,101,116,117,112,0,49,52,32,100,101,102,97,117,108,116,45,102,111,110,116,45,102,97,109,105,108,121,32,115,101,116,95,102,111,110,116,0,49,32,115,101,116,109,105,116,101,114,108,105,109,105,116,0,37,32,47,97,114,114,111,119,108,101,110,103,116,104,32,49,48,32,100,101,102,0,37,32,47,97,114,114,111,119,119,105,100,116,104,32,53,32,100,101,102,0,37,32,109,97,107,101,
32,115,117,114,101,32,112,100,102,109,97,114,107,32,105,115,32,104,97,114,109,108,101,115,115,32,102,111,114,32,80,83,45,105,110,116,101,114,112,114,101,116,101,114,115,32,111,116,104,101,114,32,116,104,97,110,32,68,105,115,116,105,108,108,101,114,0,47,112,100,102,109,97,114,107,32,119,104,101,114,101,32,123,112,111,112,125,32,123,117,115,101,114,100,105,99,116,32,47,112,100,102,109,97,114,107,32,47,99,108,101,97,114,116,111,109,97,114,107,32,108,111,97,100,32,112,117,116,125,32,105,102,101,108,115,
101,0,37,32,109,97,107,101,32,39,60,60,39,32,97,110,100,32,39,62,62,39,32,115,97,102,101,32,111,110,32,80,83,32,76,101,118,101,108,32,49,32,100,101,118,105,99,101,115,0,47,108,97,110,103,117,97,103,101,108,101,118,101,108,32,119,104,101,114,101,32,123,112,111,112,32,108,97,110,103,117,97,103,101,108,101,118,101,108,125,123,49,125,32,105,102,101,108,115,101,0,50,32,108,116,32,123,0,32,32,32,32,117,115,101,114,100,105,99,116,32,40,60,60,41,32,99,118,110,32,40,91,41,32,99,118,110,32,108,111,97,100,32,
112,117,116,0,32,32,32,32,117,115,101,114,100,105,99,116,32,40,62,62,41,32,99,118,110,32,40,91,41,32,99,118,110,32,108,111,97,100,32,112,117,116,0,125,32,105,102,0,37,37,69,110,100,83,101,116,117,112,0,37,37,84,114,97,105,108,101,114,10,0,37,37,37,37,80,97,103,101,115,58,32,37,100,10,0,101,110,100,10,114,101,115,116,111,114,101,10,0,37,37,69,79,70,10,0,37,33,80,83,45,65,100,111,98,101,45,51,46,48,0,32,69,80,83,70,45,51,46,48,10,0,37,37,37,37,67,114,101,97,116,111,114,58,32,37,115,32,118,101,114,115,
105,111,110,32,37,115,32,40,37,115,41,10,0,100,97,114,107,98,108,117,101,0,100,97,114,107,99,121,97,110,0,100,97,114,107,103,114,97,121,0,100,97,114,107,103,114,101,121,0,100,97,114,107,109,97,103,101,110,116,97,0,100,97,114,107,114,101,100,0,108,105,103,104,116,103,114,101,101,110,0,60,33,45,45,32,0,60,112,111,108,121,108,105,110,101,0,32,112,111,105,110,116,115,61,34,0,37,103,44,37,103,32,0,34,47,62,10,0,32,102,105,108,108,61,34,0,117,114,108,40,35,108,95,37,100,41,0,117,114,108,40,35,114,95,37,
100,41,0,34,32,102,105,108,108,45,111,112,97,99,105,116,121,61,34,37,102,0,34,32,115,116,114,111,107,101,61,34,0,34,32,115,116,114,111,107,101,45,119,105,100,116,104,61,34,37,103,0,34,32,115,116,114,111,107,101,45,100,97,115,104,97,114,114,97,121,61,34,37,115,0,53,44,50,0,49,44,53,0,34,32,115,116,114,111,107,101,45,111,112,97,99,105,116,121,61,34,37,102,0,103,118,114,101,110,100,101,114,95,99,111,114,101,95,115,118,103,46,99,0,115,118,103,95,112,114,105,110,116,95,99,111,108,111,114,0,60,112,97,116,
104,0,32,100,61,34,0,37,99,37,103,44,37,103,0,60,100,101,102,115,62,10,60,114,97,100,105,97,108,71,114,97,100,105,101,110,116,32,105,100,61,34,114,95,37,100,34,32,99,120,61,34,53,48,37,37,34,32,99,121,61,34,53,48,37,37,34,32,114,61,34,55,53,37,37,34,32,102,120,61,34,37,100,37,37,34,32,102,121,61,34,37,100,37,37,34,62,10,0,60,115,116,111,112,32,111,102,102,115,101,116,61,34,48,34,32,115,116,121,108,101,61,34,115,116,111,112,45,99,111,108,111,114,58,0,59,115,116,111,112,45,111,112,97,99,105,116,121,
58,0,49,46,0,59,34,47,62,10,0,60,115,116,111,112,32,111,102,102,115,101,116,61,34,49,34,32,115,116,121,108,101,61,34,115,116,111,112,45,99,111,108,111,114,58,0,59,34,47,62,10,60,47,114,97,100,105,97,108,71,114,97,100,105,101,110,116,62,10,60,47,100,101,102,115,62,10,0,60,100,101,102,115,62,10,60,108,105,110,101,97,114,71,114,97,100,105,101,110,116,32,105,100,61,34,108,95,37,100,34,32,103,114,97,100,105,101,110,116,85,110,105,116,115,61,34,117,115,101,114,83,112,97,99,101,79,110,85,115,101,34,32,0,
120,49,61,34,37,103,34,32,121,49,61,34,37,103,34,32,120,50,61,34,37,103,34,32,121,50,61,34,37,103,34,32,62,10,0,60,115,116,111,112,32,111,102,102,115,101,116,61,34,37,46,48,51,102,34,32,115,116,121,108,101,61,34,115,116,111,112,45,99,111,108,111,114,58,0,59,34,47,62,10,60,47,108,105,110,101,97,114,71,114,97,100,105,101,110,116,62,10,60,47,100,101,102,115,62,10,0,60,112,111,108,121,103,111,110,0,37,103,44,37,103,0,60,101,108,108,105,112,115,101,0,32,99,120,61,34,37,103,34,32,99,121,61,34,37,103,34,
0,32,114,120,61,34,37,103,34,32,114,121,61,34,37,103,34,0,60,116,101,120,116,0,32,116,101,120,116,45,97,110,99,104,111,114,61,34,115,116,97,114,116,34,0,32,116,101,120,116,45,97,110,99,104,111,114,61,34,101,110,100,34,0,32,116,101,120,116,45,97,110,99,104,111,114,61,34,109,105,100,100,108,101,34,0,32,120,61,34,37,103,34,32,121,61,34,37,103,34,0,32,102,111,110,116,45,102,97,109,105,108,121,61,34,37,115,0,44,37,115,0,32,102,111,110,116,45,119,101,105,103,104,116,61,34,37,115,34,0,32,102,111,110,116,
45,115,116,114,101,116,99,104,61,34,37,115,34,0,32,102,111,110,116,45,115,116,121,108,101,61,34,37,115,34,0,32,102,111,110,116,45,102,97,109,105,108,121,61,34,37,115,34,0,32,102,111,110,116,45,119,101,105,103,104,116,61,34,98,111,108,100,34,0,32,102,111,110,116,45,115,116,121,108,101,61,34,105,116,97,108,105,99,34,0,32,116,101,120,116,45,100,101,99,111,114,97,116,105,111,110,61,34,0,37,115,111,118,101,114,108,105,110,101,0,37,115,108,105,110,101,45,116,104,114,111,117,103,104,0,32,98,97,115,101,108,
105,110,101,45,115,104,105,102,116,61,34,115,117,112,101,114,34,0,32,98,97,115,101,108,105,110,101,45,115,104,105,102,116,61,34,115,117,98,34,0,32,102,111,110,116,45,115,105,122,101,61,34,37,46,50,102,34,0,32,102,105,108,108,61,34,37,115,34,0,32,102,105,108,108,61,34,35,37,48,50,120,37,48,50,120,37,48,50,120,34,0,115,118,103,95,116,101,120,116,115,112,97,110,0,62,0,60,47,116,101,120,116,62,10,0,60,47,103,62,10,0,60,103,0,32,105,100,61,34,97,95,0,32,120,108,105,110,107,58,104,114,101,102,61,34,0,32,
120,108,105,110,107,58,116,105,116,108,101,61,34,0,32,116,97,114,103,101,116,61,34,0,60,103,32,105,100,61,34,0,34,32,99,108,97,115,115,61,34,101,100,103,101,34,62,0,60,116,105,116,108,101,62,0,60,47,116,105,116,108,101,62,10,0,95,37,115,0,34,32,99,108,97,115,115,61,34,110,111,100,101,34,62,0,34,32,99,108,97,115,115,61,34,99,108,117,115,116,101,114,34,62,0,34,32,99,108,97,115,115,61,34,103,114,97,112,104,34,0,32,116,114,97,110,115,102,111,114,109,61,34,115,99,97,108,101,40,37,103,32,37,103,41,32,114,
111,116,97,116,101,40,37,100,41,32,116,114,97,110,115,108,97,116,101,40,37,103,32,37,103,41,34,62,10,0,34,32,99,108,97,115,115,61,34,108,97,121,101,114,34,62,10,0,60,47,115,118,103,62,10,0,60,33,45,45,0,32,80,97,103,101,115,58,32,37,100,32,45,45,62,10,0,60,115,118,103,32,119,105,100,116,104,61,34,37,100,112,116,34,32,104,101,105,103,104,116,61,34,37,100,112,116,34,10,0,32,118,105,101,119,66,111,120,61,34,37,46,50,102,32,37,46,50,102,32,37,46,50,102,32,37,46,50,102,34,0,32,120,109,108,110,115,61,34,
104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,50,48,48,48,47,115,118,103,34,0,32,120,109,108,110,115,58,120,108,105,110,107,61,34,104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,49,57,57,57,47,120,108,105,110,107,34,0,60,63,120,109,108,32,118,101,114,115,105,111,110,61,34,49,46,48,34,32,101,110,99,111,100,105,110,103,61,34,85,84,70,45,56,34,32,115,116,97,110,100,97,108,111,110,101,61,34,110,111,34,63,62,10,0,115,116,121,108,101,115,104,101,101,116,0,60,63,120,109,
108,45,115,116,121,108,101,115,104,101,101,116,32,104,114,101,102,61,34,0,34,32,116,121,112,101,61,34,116,101,120,116,47,99,115,115,34,63,62,10,0,60,33,68,79,67,84,89,80,69,32,115,118,103,32,80,85,66,76,73,67,32,34,45,47,47,87,51,67,47,47,68,84,68,32,83,86,71,32,49,46,49,47,47,69,78,34,10,0,32],"i8",4,n.q+101126);
D([34,104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,71,114,97,112,104,105,99,115,47,83,86,71,47,49,46,49,47,68,84,68,47,115,118,103,49,49,46,100,116,100,34,62,10,0,60,33,45,45,32,71,101,110,101,114,97,116,101,100,32,98,121,32,0,116,107,0,116,107,58,116,107,0,35,32,0,32,99,114,101,97,116,101,32,108,105,110,101,32,0,32,45,102,105,108,108,32,0,32,45,100,97,115,104,32,53,0,32,45,100,97,115,104,32,50,0,103,118,114,101,110,100,101,114,95,99,111,114,101,95,116,107,46,99,0,116,107,103,
101,110,95,112,114,105,110,116,95,116,97,103,115,0,103,114,97,112,104,32,108,97,98,101,108,0,32,45,116,97,103,115,32,123,37,100,37,115,37,100,125,0,116,107,103,101,110,95,112,114,105,110,116,95,99,111,108,111,114,0,36,99,0,32,45,119,105,100,116,104,32,0,32,45,115,109,111,111,116,104,32,98,101,122,105,101,114,32,0,32,99,114,101,97,116,101,32,112,111,108,121,103,111,110,32,0,32,45,111,117,116,108,105,110,101,32,0,32,99,114,101,97,116,101,32,111,118,97,108,32,0,32,99,114,101,97,116,101,32,116,101,120,
116,32,0,32,45,116,101,120,116,32,123,0,125,0,32,45,102,111,110,116,32,123,0,32,37,100,125,0,32,45,97,110,99,104,111,114,32,119,0,32,45,97,110,99,104,111,114,32,101,0,35,0,32,84,105,116,108,101,58,32,0,32,80,97,103,101,115,58,32,37,100,10,0,35,32,71,101,110,101,114,97,116,101,100,32,98,121,32,0,41,10,0,69,114,114,111,114,32,100,117,114,105,110,103,32,99,111,110,118,101,114,115,105,111,110,32,116,111,32,34,85,84,70,45,56,34,46,32,32,81,117,105,116,105,110,103,46,10,0,118,109,108,0,118,109,108,58,118,
109,108,0,97,113,117,97,0,102,117,99,104,115,105,97,0,108,105,109,101,0,111,108,105,118,101,0,116,101,97,108,0,32,32,32,32,32,32,60,33,45,45,32,0,32,45,45,62,10,0,32,60,118,58,115,104,97,112,101,32,115,116,121,108,101,61,34,112,111,115,105,116,105,111,110,58,97,98,115,111,108,117,116,101,59,32,0,32,119,105,100,116,104,58,32,37,100,59,32,104,101,105,103,104,116,58,32,37,100,34,32,102,105,108,108,101,100,61,34,102,97,108,115,101,34,62,0,60,118,58,112,97,116,104,32,118,61,34,0,32,109,32,0,37,46,48,102,
44,37,46,48,102,32,0,32,108,32,0,32,101,32,0,34,47,62,0,60,47,118,58,115,104,97,112,101,62,10,0,60,118,58,115,116,114,111,107,101,32,99,111,108,111,114,61,34,0,34,32,119,101,105,103,104,116,61,34,37,46,48,102,112,116,0,34,32,100,97,115,104,115,116,121,108,101,61,34,100,97,115,104,0,34,32,100,97,115,104,115,116,121,108,101,61,34,100,111,116,0,34,32,47,62,0,35,37,48,50,120,37,48,50,120,37,48,50,120,0,103,118,114,101,110,100,101,114,95,99,111,114,101,95,118,109,108,46,99,0,118,109,108,95,112,114,105,
110,116,95,99,111,108,111,114,0,32,119,105,100,116,104,58,32,37,100,59,32,104,101,105,103,104,116,58,32,37,100,34,0,32,62,0,60,118,58,112,97,116,104,32,32,118,61,34,0,109,32,0,37,115,37,46,48,102,44,37,46,48,102,32,0,99,32,0,47,62,60,47,118,58,115,104,97,112,101,62,10,0,32,102,105,108,108,101,100,61,34,116,114,117,101,34,32,102,105,108,108,99,111,108,111,114,61,34,0,34,32,0,32,102,105,108,108,101,100,61,34,102,97,108,115,101,34,32,0,37,46,48,102,32,37,46,48,102,32,0,108,32,0,120,32,101,32,34,47,62,
0,32,32,60,118,58,111,118,97,108,32,115,116,121,108,101,61,34,112,111,115,105,116,105,111,110,58,97,98,115,111,108,117,116,101,59,0,32,108,101,102,116,58,32,37,46,50,102,59,32,116,111,112,58,32,37,46,50,102,59,0,32,119,105,100,116,104,58,32,37,46,50,102,59,32,104,101,105,103,104,116,58,32,37,46,50,102,34,0,60,47,118,58,111,118,97,108,62,10,0,60,118,58,114,101,99,116,32,115,116,121,108,101,61,34,112,111,115,105,116,105,111,110,58,97,98,115,111,108,117,116,101,59,32,0,32,115,116,114,111,107,101,100,
61,34,102,97,108,115,101,34,32,102,105,108,108,101,100,61,34,102,97,108,115,101,34,62,10,0,60,118,58,116,101,120,116,98,111,120,32,105,110,115,101,116,61,34,48,44,48,44,48,44,48,34,32,115,116,121,108,101,61,34,112,111,115,105,116,105,111,110,58,97,98,115,111,108,117,116,101,59,32,118,45,116,101,120,116,45,119,114,97,112,112,105,110,103,58,39,102,97,108,115,101,39,59,112,97,100,100,105,110,103,58,39,48,39,59,0,102,111,110,116,45,102,97,109,105,108,121,58,32,39,37,115,39,59,0,102,111,110,116,45,119,
101,105,103,104,116,58,32,37,115,59,0,102,111,110,116,45,115,116,114,101,116,99,104,58,32,37,115,59,0,102,111,110,116,45,115,116,121,108,101,58,32,37,115,59,0,32,102,111,110,116,45,115,105,122,101,58,32,37,46,50,102,112,116,59,0,99,111,108,111,114,58,37,115,59,0,99,111,108,111,114,58,35,37,48,50,120,37,48,50,120,37,48,50,120,59,0,118,109,108,95,116,101,120,116,115,112,97,110,0,34,62,60,99,101,110,116,101,114,62,0,60,47,99,101,110,116,101,114,62,60,47,118,58,116,101,120,116,98,111,120,62,10,0,60,47,
118,58,114,101,99,116,62,10,0,60,47,97,62,10,0,60,97,0,32,104,114,101,102,61,34,37,115,34,0,32,116,105,116,108,101,61,34,37,115,34,0,32,116,97,114,103,101,116,61,34,37,115,34,0,62,10,0,60,47,118,58,103,114,111,117,112,62,10,0,60,47,68,73,86,62,10,0,60,68,73,86,32,105,100,61,39,95,86,77,76,50,95,39,32,115,116,121,108,101,61,34,112,111,115,105,116,105,111,110,58,114,101,108,97,116,105,118,101,59,118,105,115,105,98,105,108,105,116,121,58,104,105,100,100,101,110,34,62,10,0,60,33,45,45,32,105,110,115,
101,114,116,32,97,110,121,32,111,116,104,101,114,32,104,116,109,108,32,99,111,110,116,101,110,116,32,104,101,114,101,32,45,45,62,10,0,60,68,73,86,32,105,100,61,39,95,110,111,116,86,77,76,49,95,39,32,115,116,121,108,101,61,34,112,111,115,105,116,105,111,110,58,114,101,108,97,116,105,118,101,59,34,62,10,0,60,33,45,45,32,116,104,105,115,32,115,104,111,117,108,100,32,111,110,108,121,32,100,105,115,112,108,97,121,32,111,110,32,78,79,78,45,73,69,32,98,114,111,119,115,101,114,115,32,45,45,62,10,0,60,72,
50,62,83,111,114,114,121,44,32,116,104,105,115,32,100,105,97,103,114,97,109,32,119,105,108,108,32,111,110,108,121,32,100,105,115,112,108,97,121,32,99,111,114,114,101,99,116,108,121,32,111,110,32,73,110,116,101,114,110,101,116,32,69,120,112,108,111,114,101,114,32,53,32,40,97,110,100,32,117,112,41,32,98,114,111,119,115,101,114,115,46,60,47,72,50,62,10,0,60,68,73,86,32,105,100,61,39,95,110,111,116,86,77,76,50,95,39,32,115,116,121,108,101,61,34,112,111,115,105,116,105,111,110,58,114,101,108,97,116,105,
118,101,59,34,62,10,0,60,33,45,45,32,105,110,115,101,114,116,32,97,110,121,32,111,116,104,101,114,32,78,79,78,45,73,69,32,104,116,109,108,32,99,111,110,116,101,110,116,32,104,101,114,101,32,45,45,62,10,0,60,47,66,79,68,89,62,10,60,47,72,84,77,76,62,10,0,60,72,69,65,68,62,0,60,77,69,84,65,32,104,116,116,112,45,101,113,117,105,118,61,34,67,111,110,116,101,110,116,45,84,121,112,101,34,32,99,111,110,116,101,110,116,61,34,116,101,120,116,47,104,116,109,108,59,32,99,104,97,114,115,101,116,61,85,84,70,45,
56,34,62,10,0,60,84,73,84,76,69,62,0,60,47,84,73,84,76,69,62,0,60,33,45,45,32,80,97,103,101,115,58,32,37,100,32,45,45,62,10,0,32,32,32,60,83,67,82,73,80,84,32,76,65,78,71,85,65,71,69,61,39,74,97,118,97,115,99,114,105,112,116,39,62,10,0,32,32,32,102,117,110,99,116,105,111,110,32,98,114,111,119,115,101,114,99,104,101,99,107,40,41,10,0,32,32,32,123,10,0,32,32,32,32,32,32,118,97,114,32,117,97,32,61,32,119,105,110,100,111,119,46,110,97,118,105,103,97,116,111,114,46,117,115,101,114,65,103,101,110,116,10,
0,32,32,32,32,32,32,118,97,114,32,109,115,105,101,32,61,32,117,97,46,105,110,100,101,120,79,102,32,40,32,39,77,83,73,69,32,39,32,41,10,0,32,32,32,32,32,32,118,97,114,32,105,101,118,101,114,115,59,10,0,32,32,32,32,32,32,118,97,114,32,105,116,101,109,59,10,0,32,32,32,32,32,32,118,97,114,32,86,77,76,121,101,115,61,110,101,119,32,65,114,114,97,121,40,39,95,86,77,76,49,95,39,44,39,95,86,77,76,50,95,39,41,59,10,0,32,32,32,32,32,32,118,97,114,32,86,77,76,110,111,61,110,101,119,32,65,114,114,97,121,40,39,
95,110,111,116,86,77,76,49,95,39,44,39,95,110,111,116,86,77,76,50,95,39,41,59,10,0,32,32,32,32,32,32,105,102,32,40,32,109,115,105,101,32,62,32,48,32,41,123,32,32,32,32,32,32,47,47,32,73,102,32,73,110,116,101,114,110,101,116,32,69,120,112,108,111,114,101,114,44,32,114,101,116,117,114,110,32,118,101,114,115,105,111,110,32,110,117,109,98,101,114,10,0,32,32,32,32,32,32,32,32,32,105,101,118,101,114,115,61,32,112,97,114,115,101,73,110,116,32,40,117,97,46,115,117,98,115,116,114,105,110,103,32,40,109,115,
105,101,43,53,44,32,117,97,46,105,110,100,101,120,79,102,32,40,39,46,39,44,32,109,115,105,101,32,41,41,41,10,0,32,32,32,32,32,32,125,10,0,32,32,32,32,32,32,105,102,32,40,105,101,118,101,114,115,62,61,53,41,123,10,0,32,32,32,32,32,32,32,102,111,114,32,40,120,32,105,110,32,86,77,76,121,101,115,41,123,10,0,32,32,32,32,32,32,32,32,32,105,116,101,109,32,61,32,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,66,121,73,100,40,86,77,76,121,101,115,91,120,93,41,59,10,0,32,32,32,32,
32,32,32,32,32,105,102,32,40,105,116,101,109,41,32,123,10,0,32,32,32,32,32,32,32,32,32,32,32,105,116,101,109,46,115,116,121,108,101,46,118,105,115,105,98,105,108,105,116,121,61,39,118,105,115,105,98,108,101,39,59,10,0,32,32,32,32,32,32,32,32,32,125,10,0,32,32,32,32,32,32,32,125,10,0,32,32,32,32,32,32,32,102,111,114,32,40,120,32,105,110,32,86,77,76,110,111,41,123,10,0,32,32,32,32,32,32,32,32,32,105,116,101,109,32,61,32,100,111,99,117,109,101,110,116,46,103,101,116,69,108,101,109,101,110,116,66,121,
73,100,40,86,77,76,110,111,91,120,93,41,59,10,0,32,32,32,32,32,32,32,32,32,32,32,105,116,101,109,46,115,116,121,108,101,46,118,105,115,105,98,105,108,105,116,121,61,39,104,105,100,100,101,110,39,59,10,0,32,32,32,32,32,125,101,108,115,101,123,10,0,32,32,32,32,32,125,10,0,32,32,32,125,10,0,32,32,32,60,47,83,67,82,73,80,84,62,10,0,60,47,72,69,65,68,62,0,60,66,79,68,89,32,111,110,108,111,97,100,61,39,98,114,111,119,115,101,114,99,104,101,99,107,40,41,59,39,62,10,0,60,68,73,86,32,105,100,61,39,95,86,77,
76,49,95,39,32,115,116,121,108,101,61,34,112,111,115,105,116,105,111,110,58,114,101,108,97,116,105,118,101,59,32,100,105,115,112,108,97,121,58,105,110,108,105,110,101,59,32,118,105,115,105,98,105,108,105,116,121,58,104,105,100,100,101,110,0,32,119,105,100,116,104,58,32,37,100,112,116,59,32,104,101,105,103,104,116,58,32,37,100,112,116,34,62,10,0,60,83,84,89,76,69,62,10,0,118,92,58,42,32,123,32,98,101,104,97,118,105,111,114,58,32,117,114,108,40,35,100,101,102,97,117,108,116,35,86,77,76,41,59,100,105,
115,112,108,97,121,58,105,110,108,105,110,101,45,98,108,111,99,107,125,10,0,60,47,83,84,89,76,69,62,10,0,60,120,109,108,58,110,97,109,101,115,112,97,99,101,32,110,115,61,34,117,114,110,58,115,99,104,101,109,97,115,45,109,105,99,114,111,115,111,102,116,45,99,111,109,58,118,109,108,34,32,112,114,101,102,105,120,61,34,118,34,32,47,62,10,0,32,60,118,58,103,114,111,117,112,32,115,116,121,108,101,61,34,112,111,115,105,116,105,111,110,58,114,101,108,97,116,105,118,101,59,32,0,32,119,105,100,116,104,58,32,
37,100,112,116,59,32,104,101,105,103,104,116,58,32,37,100,112,116,34,0,32,99,111,111,114,100,111,114,105,103,105,110,61,34,48,44,48,34,32,99,111,111,114,100,115,105,122,101,61,34,37,100,44,37,100,34,32,62,0,60,72,84,77,76,62,10,0,10,60,33,45,45,32,71,101,110,101,114,97,116,101,100,32,98,121,32,0,32,118,101,114,115,105,111,110,32,0,32,40,0,41,10,45,45,62,10,0,112,111,118,0,112,111,118,58,112,111,118,0,98,97,107,101,114,115,99,104,111,99,0,98,114,97,115,115,0,98,114,105,103,104,116,103,111,108,100,
0,98,114,111,110,122,101,0,98,114,111,110,122,101,50,0,99,108,101,97,114,0,99,111,111,108,99,111,112,112,101,114,0,99,111,112,112,101,114,0,100,97,114,107,98,114,111,119,110,0,100,97,114,107,112,117,114,112,108,101,0,100,97,114,107,116,97,110,0,100,97,114,107,119,111,111,100,0,100,107,103,114,101,101,110,99,111,112,112,101,114,0,100,117,115,116,121,114,111,115,101,0,102,101,108,100,115,112,97,114,0,102,108,101,115,104,0,103,114,97,121,48,53,0,103,114,101,101,110,99,111,112,112,101,114,0,104,117,110,
116,101,114,115,103,114,101,101,110,0,108,105,103,104,116,95,112,117,114,112,108,101,0,108,105,103,104,116,119,111,111,100,0,109,97,110,100,97,114,105,110,111,114,97,110,103,101,0,109,101,100,105,117,109,102,111,114,101,115,116,103,114,101,101,110,0,109,101,100,105,117,109,103,111,108,100,101,110,114,111,100,0,109,101,100,105,117,109,119,111,111,100,0,109,101,100,95,112,117,114,112,108,101,0,109,105,99,97,0,110,101,111,110,98,108,117,101,0,110,101,111,110,112,105,110,107,0,110,101,119,109,105,100,
110,105,103,104,116,98,108,117,101,0,110,101,119,116,97,110,0,111,108,100,103,111,108,100,0,113,117,97,114,116,122,0,114,105,99,104,98,108,117,101,0,115,99,97,114,108,101,116,0,115,101,109,105,83,119,101,101,116,67,104,111,99,0,115,105,108,118,101,114,0,115,112,105,99,121,112,105,110,107,0,115,117,109,109,101,114,115,107,121,0,118,101,114,121,100,97,114,107,98,114,111,119,110,0,118,101,114,121,95,108,105,103,104,116,95,112,117,114,112,108,101,0,47,47,42,42,42,32,99,111,109,109,101,110,116,58,32,37,
115,10,0,47,47,42,42,42,32,112,111,108,121,108,105,110,101,10,0,115,99,97,108,101,32,32,32,32,60,37,57,46,51,102,44,32,37,57,46,51,102,44,32,37,57,46,51,102,62,10,0,114,111,116,97,116,101,32,32,32,60,37,57,46,51,102,44,32,37,57,46,51,102,44,32,37,57,46,51,102,62,10,0,116,114,97,110,115,108,97,116,101,60,37,57,46,51,102,44,32,37,57,46,51,102,44,32,37,57,46,51,102,62,10,0,115,112,104,101,114,101,95,115,119,101,101,112,32,123,10,32,32,32,32,37,115,10,32,32,32,32,37,100,44,10,0,108,105,110,101,97,114,
95,115,112,108,105,110,101,0,60,37,57,46,51,102,44,32,37,57,46,51,102,44,32,37,57,46,51,102,62,44,32,37,46,51,102,10,0,37,115,32,32,32,32,37,115,0,32,32,32,32,116,111,108,101,114,97,110,99,101,32,48,46,48,49,10,32,32,32,32,37,115,32,32,32,32,37,115,32,32,32,32,37,115,32,32,32,32,37,115,125,10,0,37,115,37,115,0,37,115,32,116,114,97,110,115,109,105,116,32,37,46,51,102,0,82,101,100,0,71,114,101,101,110,0,66,108,117,101,0,114,103,98,60,37,57,46,51,102,44,32,37,57,46,51,102,44,32,37,57,46,51,102,62,32,
116,114,97,110,115,109,105,116,32,37,46,51,102,0,111,111,112,115,44,32,105,110,116,101,114,110,97,108,32,101,114,114,111,114,58,32,117,110,104,97,110,100,108,101,100,32,99,111,108,111,114,32,116,121,112,101,61,37,100,32,37,115,10,0,103,118,114,101,110,100,101,114,95,99,111,114,101,95,112,111,118,46,99,0,112,111,118,95,99,111,108,111,114,95,97,115,95,115,116,114,0,112,105,103,109,101,110,116,32,123,32,99,111,108,111,114,32,37,115,32,125,10,0,47,47,42,42,42,32,98,101,122,105,101,114,10,0,98,95,115,
112,108,105,110,101,0,32,32,32,32,32,32,32,32,116,111,108,101,114,97,110,99,101,32,48,46,48,49,10,32,32,32,32,37,115,32,32,32,32,37,115,32,32,32,32,37,115,32,32,32,32,37,115,125,10,0,47,47,42,42,42,32,112,111,108,121,103,111,110,10,0,32,32,32,32,116,111,108,101,114,97,110,99,101,32,48,46,49,10,32,32,32,32,37,115,32,32,32,32,37,115,32,32,32,32,37,115,32,32,32,32,37,115,125,10,0,112,111,108,121,103,111,110,32,123,32,37,100,44,10,0,60,37,57,46,51,102,44,32,37,57,46,51,102,44,32,37,57,46,51,102,62,0,
37,115,10,32,32,32,32,37,115,0,10,32,32,32,32,37,115,32,32,32,32,37,115,32,32,32,32,37,115,32,32,32,32,37,115,125,10,0,47,47,42,42,42,32,101,108,108,105,112,115,101,10,0,116,111,114,117,115,32,123,32,37,46,51,102,44,32,37,46,51,102,10,32,32,32,32,37,115,32,32,32,32,37,115,32,32,32,32,37,115,32,32,32,32,37,115,125,10,0,115,112,104,101,114,101,32,123,60,37,57,46,51,102,44,32,37,57,46,51,102,44,32,37,57,46,51,102,62,44,32,49,46,48,10,32,32,32,32,37,115,32,32,32,32,37,115,32,32,32,32,37,115,32,32,32,
32,37,115,125,10,0,47,47,42,42,42,32,116,101,120,116,115,112,97,110,58,32,37,115,44,32,102,111,110,116,115,105,122,101,32,61,32,37,46,51,102,44,32,102,111,110,116,110,97,109,101,32,61,32,37,115,10,0,115,99,97,108,101,32,37,46,51,102,10,0,116,101,120,116,32,123,10,32,32,32,32,116,116,102,32,34,37,115,34,44,10,32,32,32,32,34,37,115,34,44,32,37,46,51,102,44,32,37,46,51,102,10,32,32,32,32,37,115,32,32,32,32,37,115,32,32,32,32,37,115,32,32,32,32,37,115,32,32,32,32,37,115,125,10,0,32,32,32,32,110,111,95,
115,104,97,100,111,119,10,0,47,47,42,42,42,32,101,110,100,95,101,100,103,101,10,0,47,47,42,42,42,32,98,101,103,105,110,95,101,100,103,101,10,0,47,47,42,42,42,32,101,110,100,95,110,111,100,101,10,0,47,47,42,42,42,32,98,101,103,105,110,95,110,111,100,101,58,32,37,115,10,0,47,47,42,42,42,32,101,110,100,95,99,108,117,115,116,101,114,10,0,47,47,42,42,42,32,98,101,103,105,110,95,99,108,117,115,116,101,114,10,0,47,47,42,42,42,32,101,110,100,95,112,97,103,101,10,0,47,47,42,42,42,32,98,101,103,105,110,95,
112,97,103,101,10,0,47,47,42,42,42,32,101,110,100,95,108,97,121,101,114,10,0,47,47,42,42,42,32,98,101,103,105,110,95,108,97,121,101,114,58,32,37,115,44,32,37,100,47,37,100,10,0,47,47,42,42,42,32,101,110,100,95,103,114,97,112,104,10,0,47,47,42,42,42,32,98,101,103,105,110,95,103,114,97,112,104,32,37,115,10,0,99,97,109,101,114,97,32,123,32,108,111,99,97,116,105,111,110,32,60,37,46,51,102,32,44,32,37,46,51,102,32,44,32,37,46,51,102,62,10,32,32,32,32,32,32,32,32,32,108,111,111,107,95,97,116,32,32,60,37,
46,51,102,32,44,32,37,46,51,102,32,44,32,37,46,51,102,62,10,32,32,32,32,32,32,32,32,32,114,105,103,104,116,32,120,32,42,32,105,109,97,103,101,95,119,105,100,116,104,32,47,32,105,109,97,103,101,95,104,101,105,103,104,116,10,32,32,32,32,32,32,32,32,32,97,110,103,108,101,32,37,46,51,102,10,125,10,0,47,47,115,107,121,10,112,108,97,110,101,32,123,32,60,48,44,32,49,44,32,48,62,44,32,49,32,104,111,108,108,111,119,10,32,32,32,32,116,101,120,116,117,114,101,32,123,10,32,32,32,32,32,32,32,32,112,105,103,109,
101,110,116,32,123,32,98,111,122,111,32,116,117,114,98,117,108,101,110,99,101,32,48,46,57,53,10,32,32,32,32,32,32,32,32,32,32,32,32,99,111,108,111,114,95,109,97,112,32,123,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,48,46,48,48,32,114,103,98,32,60,48,46,48,53,44,32,48,46,50,48,44,32,48,46,53,48,62,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,48,46,53,48,32,114,103,98,32,60,48,46,48,53,44,32,48,46,50,48,44,32,48,46,53,48,62,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,
91,48,46,55,53,32,114,103,98,32,60,49,46,48,48,44,32,49,46,48,48,44,32,49,46,48,48,62,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,48,46,55,53,32,114,103,98,32,60,48,46,50,53,44,32,48,46,50,53,44,32,48,46,50,53,62,93,10,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,91,49,46,48,48,32,114,103,98,32,60,48,46,53,48,44,32,48,46,53,48,44,32,48,46,53,48,62,93,10,32,32,32,32,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,32,32,32,32,115,99,97,108,101,32,60,49,46,48,48,44,32,49,46,48,
48,44,32,49,46,53,48,62,32,42,32,50,46,53,48,10,32,32,32,32,32,32,32,32,32,32,32,32,116,114,97,110,115,108,97,116,101,32,60,48,46,48,48,44,32,48,46,48,48,44,32,48,46,48,48,62,10,32,32,32,32,32,32,32,32,125,10,32,32,32,32,32,32,32,32,102,105,110,105,115,104,32,123,32,97,109,98,105,101,110,116,32,49,32,100,105,102,102,117,115,101,32,48,32,125,10,32,32,32,32,125,10,32,32,32,32,115,99,97,108,101,32,49,48,48,48,48,10,125,10,47,47,109,105,115,116,10,102,111,103,32,123,32,102,111,103,95,116,121,112,101,
32,50,10,32,32,32,32,100,105,115,116,97,110,99,101,32,53,48,10,32,32,32,32,99,111,108,111,114,32,114,103,98,32,60,49,46,48,48,44,32,49,46,48,48,44,32,49,46,48,48,62,32,42,32,48,46,55,53,10,32,32,32,32,102,111,103,95,111,102,102,115,101,116,32,48,46,49,48,10,32,32,32,32,102,111,103,95,97,108,116,32,49,46,53,48,10,32,32,32,32,116,117,114,98,117,108,101,110,99,101,32,49,46,55,53,10,125,10,47,47,103,110,100,10,112,108,97,110,101,32,123,32,60,48,46,48,48,44,32,49,46,48,48,44,32,48,46,48,48,62,44,32,48,
10,32,32,32,32,116,101,120,116,117,114,101,32,123,10,32,32,32,32,32,32,32,32,112,105,103,109,101,110,116,123,32,99,111,108,111,114,32,114,103,98,32,60,48,46,50,53,44,32,48,46,52,53,44,32,48,46,48,48,62,32,125,10,32,32,32,32,32,32,32,32,110,111,114,109,97,108,32,123,32,98,117,109,112,115,32,48,46,55,53,32,115,99,97,108,101,32,48,46,48,49,32,125,10,32,32,32,32,32,32,32,32,102,105,110,105,115,104,32,123,32,112,104,111,110,103,32,48,46,49,48,32,125,10,32,32,32,32,125,10,125,10,0,108,105,103,104,116,95,
115,111,117,114,99,101,32,123,32,60,49,53,48,48,44,51,48,48,48,44,45,50,53,48,48,62,32,99,111,108,111,114,32,87,104,105,116,101,32,125,10,0,35,118,101,114,115,105,111,110,32,51,46,54,59,10,0,103,108,111,98,97,108,95,115,101,116,116,105,110,103,115,32,123,32,97,115,115,117,109,101,100,95,103,97,109,109,97,32,49,46,48,32,125,10,0,35,100,101,102,97,117,108,116,32,123,32,102,105,110,105,115,104,32,123,32,97,109,98,105,101,110,116,32,48,46,49,32,100,105,102,102,117,115,101,32,48,46,57,32,125,32,125,10,
0,35,105,110,99,108,117,100,101,32,34,99,111,108,111,114,115,46,105,110,99,34,10,35,105,110,99,108,117,100,101,32,34,116,101,120,116,117,114,101,115,46,105,110,99,34,10,35,105,110,99,108,117,100,101,32,34,115,104,97,112,101,115,46,105,110,99,34,10,0,35,100,101,99,108,97,114,101,32,37,115,32,61,32,37,115,59,10,0,66,108,97,99,107,0,87,104,105,116,101,0,112,105,99,0,112,105,99,58,112,105,99,0,37,115,32,37,115,10,0,46,92,34,32,0,32,37,100,32,37,100,0,32,37,115,10,0,32,37,100,0,102,105,108,108,32,0,101,
108,108,105,112,115,101,32,97,116,116,114,115,37,100,32,37,115,119,105,100,32,37,46,53,102,32,104,116,32,37,46,53,102,32,97,116,32,40,37,46,53,102,44,37,46,53,102,41,59,10,0,37,115,37,115,32,105,115,32,110,111,116,32,97,32,116,114,111,102,102,32,102,111,110,116,10,0,100,111,116,32,112,105,99,32,112,108,117,103,105,110,58,32,0,82,0,46,102,116,32,37,115,10,0,46,112,115,32,37,100,42,92,110,40,83,70,117,47,37,46,48,102,117,10,0,37,48,51,111,0,34,37,115,34,32,97,116,32,40,37,46,53,102,44,37,46,53,102,
41,59,10,0,93,10,46,80,69,10,0,37,115,37,115,32,117,110,115,117,112,112,111,114,116,101,100,10,0,46,80,83,32,37,46,53,102,32,37,46,53,102,10,0,37,115,32,116,111,32,99,104,97,110,103,101,32,100,114,97,119,105,110,103,32,115,105,122,101,44,32,109,117,108,116,105,112,108,121,32,116,104,101,32,119,105,100,116,104,32,97,110,100,32,104,101,105,103,104,116,32,111,110,32,116,104,101,32,46,80,83,32,108,105,110,101,32,97,98,111,118,101,32,97,110,100,32,116,104,101,32,110,117,109,98,101,114,32,111,110,32,116,
104,101,32,116,119,111,32,108,105,110,101,115,32,98,101,108,111,119,32,40,114,111,117,110,100,101,100,32,116,111,32,116,104,101,32,110,101,97,114,101,115,116,32,105,110,116,101,103,101,114,41,32,98,121,32,97,32,115,99,97,108,101,32,102,97,99,116,111,114,10,0,46,110,114,32,83,70,32,37,46,48,102,10,115,99,97,108,101,116,104,105,99,107,110,101,115,115,32,61,32,37,46,48,102,10,0,37,115,32,100,111,110,39,116,32,99,104,97,110,103,101,32,97,110,121,116,104,105,110,103,32,98,101,108,111,119,32,116,104,105,
115,32,108,105,110,101,32,105,110,32,116,104,105,115,32,100,114,97,119,105,110,103,10,0,37,115,32,110,111,110,45,102,97,116,97,108,32,114,117,110,45,116,105,109,101,32,112,105,99,32,118,101,114,115,105,111,110,32,100,101,116,101,114,109,105,110,97,116,105,111,110,44,32,118,101,114,115,105,111,110,32,50,10,0,98,111,120,114,97,100,61,50,46,48,32,37,115,32,119,105,108,108,32,98,101,32,114,101,115,101,116,32,116,111,32,48,46,48,32,98,121,32,103,112,105,99,32,111,110,108,121,10,0,115,99,97,108,101,61,
49,46,48,32,37,115,32,114,101,113,117,105,114,101,100,32,102,111,114,32,99,111,109,112,97,114,105,115,111,110,115,10,0,37,115,32,98,111,120,114,97,100,32,105,115,32,110,111,119,32,48,46,48,32,105,110,32,103,112,105,99,44,32,101,108,115,101,32,105,116,32,114,101,109,97,105,110,115,32,50,46,48,10,0,37,115,32,100,97,115,104,119,105,100,32,105,115,32,48,46,49,32,105,110,32,49,48,116,104,32,69,100,105,116,105,111,110,44,32,48,46,48,53,32,105,110,32,68,87,66,32,50,32,97,110,100,32,105,110,32,103,112,105,
99,10,0,37,115,32,102,105,108,108,118,97,108,32,105,115,32,48,46,51,32,105,110,32,49,48,116,104,32,69,100,105,116,105,111,110,32,40,102,105,108,108,32,48,32,109,101,97,110,115,32,98,108,97,99,107,41,44,32,48,46,53,32,105,110,32,103,112,105,99,32,40,102,105,108,108,32,48,32,109,101,97,110,115,32,119,104,105,116,101,41,44,32,117,110,100,101,102,105,110,101,100,32,105,110,32,68,87,66,32,50,10,0,37,115,32,102,105,108,108,32,104,97,115,32,110,111,32,109,101,97,110,105,110,103,32,105,110,32,68,87,66,32,
50,44,32,103,112,105,99,32,99,97,110,32,117,115,101,32,102,105,108,108,32,111,114,32,102,105,108,108,101,100,44,32,49,48,116,104,32,69,100,105,116,105,111,110,32,117,115,101,115,32,102,105,108,108,32,111,110,108,121,10,0,37,115,32,68,87,66,32,50,32,100,111,101,115,110,39,116,32,117,115,101,32,102,105,108,108,32,97,110,100,32,100,111,101,115,110,39,116,32,100,101,102,105,110,101,32,102,105,108,108,118,97,108,10,0,37,115,32,114,101,115,101,116,32,119,111,114,107,115,32,105,110,32,103,112,105,99,32,
97,110,100,32,49,48,116,104,32,101,100,105,116,105,111,110,44,32,98,117,116,32,105,115,110,39,116,32,100,101,102,105,110,101,100,32,105,110,32,68,87,66,32,50,10,0,37,115,32,68,87,66,32,50,32,99,111,109,112,97,116,105,98,105,108,105,116,121,32,100,101,102,105,110,105,116,105,111,110,115,10,0,105,102,32,98,111,120,114,97,100,32,62,32,49,46,48,32,38,38,32,100,97,115,104,119,105,100,32,60,32,48,46,48,55,53,32,116,104,101,110,32,88,10,9,102,105,108,108,118,97,108,32,61,32,49,59,10,9,100,101,102,105,110,
101,32,102,105,108,108,32,89,32,89,59,10,9,100,101,102,105,110,101,32,115,111,108,105,100,32,89,32,89,59,10,9,100,101,102,105,110,101,32,114,101,115,101,116,32,89,32,115,99,97,108,101,61,49,46,48,32,89,59,10,88,10,0,114,101,115,101,116,32,37,115,32,115,101,116,32,116,111,32,107,110,111,119,110,32,115,116,97,116,101,10,0,37,115,32,71,78,85,32,112,105,99,32,118,115,46,32,49,48,116,104,32,69,100,105,116,105,111,110,32,100,92,40,101,39,116,101,110,116,101,10,0,105,102,32,102,105,108,108,118,97,108,32,
62,32,48,46,52,32,116,104,101,110,32,88,10,9,100,101,102,105,110,101,32,115,101,116,102,105,108,108,118,97,108,32,89,32,102,105,108,108,118,97,108,32,61,32,49,32,45,32,89,59,10,9,100,101,102,105,110,101,32,98,111,108,100,32,89,32,116,104,105,99,107,110,101,115,115,32,50,32,89,59,10,0,9,37,115,32,105,102,32,121,111,117,32,117,115,101,32,103,112,105,99,32,97,110,100,32,105,116,32,98,97,114,102,115,32,111,110,32,101,110,99,111,117,110,116,101,114,105,110,103,32,34,115,111,108,105,100,34,44,10,0,9,37,
115,9,105,110,115,116,97,108,108,32,97,32,109,111,114,101,32,114,101,99,101,110,116,32,118,101,114,115,105,111,110,32,111,102,32,103,112,105,99,32,111,114,32,115,119,105,116,99,104,32,116,111,32,68,87,66,32,111,114,32,49,48,116,104,32,69,100,105,116,105,111,110,32,112,105,99,59,10,0,9,37,115,9,115,111,114,114,121,44,32,116,104,101,32,103,114,111,102,102,32,102,111,108,107,115,32,99,104,97,110,103,101,100,32,103,112,105,99,59,32,115,101,110,100,32,97,110,121,32,99,111,109,112,108,97,105,110,116,32,
116,111,32,116,104,101,109,59,10,0,88,32,101,108,115,101,32,90,10,9,100,101,102,105,110,101,32,115,101,116,102,105,108,108,118,97,108,32,89,32,102,105,108,108,118,97,108,32,61,32,89,59,10,9,100,101,102,105,110,101,32,98,111,108,100,32,89,32,89,59,10,9,100,101,102,105,110,101,32,102,105,108,108,101,100,32,89,32,102,105,108,108,32,89,59,10,90,10,0,37,115,32,97,114,114,111,119,104,101,97,100,32,104,97,115,32,110,111,32,109,101,97,110,105,110,103,32,105,110,32,68,87,66,32,50,44,32,97,114,114,111,119,
104,101,97,100,32,61,32,55,32,109,97,107,101,115,32,102,105,108,108,101,100,32,97,114,114,111,119,104,101,97,100,115,32,105,110,32,103,112,105,99,32,97,110,100,32,105,110,32,49,48,116,104,32,69,100,105,116,105,111,110,10,0,37,115,32,97,114,114,111,119,104,101,97,100,32,105,115,32,117,110,100,101,102,105,110,101,100,32,105,110,32,68,87,66,32,50,44,32,105,110,105,116,105,97,108,108,121,32,49,32,105,110,32,103,112,105,99,44,32,50,32,105,110,32,49,48,116,104,32,69,100,105,116,105,111,110,10,0,97,114,
114,111,119,104,101,97,100,32,61,32,55,32,37,115,32,110,111,116,32,117,115,101,100,32,98,121,32,103,114,97,112,104,118,105,122,10,0,37,115,32,71,78,85,32,112,105,99,32,115,117,112,112,111,114,116,115,32,97,32,98,111,120,114,97,100,32,118,97,114,105,97,98,108,101,32,116,111,32,100,114,97,119,32,98,111,120,101,115,32,119,105,116,104,32,114,111,117,110,100,101,100,32,99,111,114,110,101,114,115,59,32,68,87,66,32,97,110,100,32,49,48,116,104,32,69,100,46,32,100,111,32,110,111,116,10,0,98,111,120,114,97,
100,32,61,32,48,32,37,115,32,110,111,32,114,111,117,110,100,101,100,32,99,111,114,110,101,114,115,32,105,110,32,103,114,97,112,104,118,105,122,10,0,37,115,32,71,78,85,32,112,105,99,32,115,117,112,112,111,114,116,115,32,97,32,108,105,110,101,116,104,105,99,107,32,118,97,114,105,97,98,108,101,32,116,111,32,115,101,116,32,108,105,110,101,32,116,104,105,99,107,110,101,115,115,59,32,68,87,66,32,97,110,100,32,49,48,116,104,32,69,100,46,32,100,111,32,110,111,116,10,0,108,105,110,101,116,104,105,99,107,32,
61,32,48,59,32,111,108,100,108,105,110,101,116,104,105,99,107,32,61,32,108,105,110,101,116,104,105,99,107,10,0,37,115,32,46,80,83,32,119,47,111,32,97,114,103,115,32,99,97,117,115,101,115,32,71,78,85,32,112,105,99,32,116,111,32,115,99,97,108,101,32,100,114,97,119,105,110,103,32,116,111,32,102,105,116,32,56,46,53,120,49,49,32,112,97,112,101,114,59,32,68,87,66,32,100,111,101,115,32,110,111,116,10,0,37,115,32,109,97,120,112,115,104,116,32,97,110,100,32,109,97,120,112,115,119,105,100,32,104,97,118,101,
32,110,111,32,109,101,97,110,105,110,103,32,105,110,32,68,87,66,32,50,46,48,44,32,115,101,116,32,112,97,103,101,32,98,111,117,110,100,97,114,105,101,115,32,105,110,32,103,112,105,99,32,97,110,100,32,105,110,32,49,48,116,104,32,69,100,105,116,105,111,110,10,0,37,115,32,109,97,120,112,115,104,116,32,97,110,100,32,109,97,120,112,115,119,105,100,32,97,114,101,32,112,114,101,100,101,102,105,110,101,100,32,116,111,32,49,49,46,48,32,97,110,100,32,56,46,53,32,105,110,32,103,112,105,99,10,0,109,97,120,112,
115,104,116,32,61,32,37,102,10,109,97,120,112,115,119,105,100,32,61,32,37,102,10,0,68,111,116,58,32,91,10,0,100,101,102,105,110,101,32,97,116,116,114,115,48,32,37,37,32,37,37,59,32,100,101,102,105,110,101,32,117,110,102,105,108,108,101,100,32,37,37,32,37,37,59,32,100,101,102,105,110,101,32,114,111,117,110,100,101,100,32,37,37,32,37,37,59,32,100,101,102,105,110,101,32,100,105,97,103,111,110,97,108,115,32,37,37,32,37,37,10,0,37,115,32,114,101,115,116,111,114,101,32,112,111,105,110,116,32,115,105,122,
101,32,97,110,100,32,102,111,110,116,10,46,112,115,32,92,110,40,46,83,10,46,102,116,32,92,110,40,68,70,10,0,37,115,32,67,114,101,97,116,111,114,58,32,37,115,32,118,101,114,115,105,111,110,32,37,115,32,40,37,115,41,10,0,37,115,32,84,105,116,108,101,58,32,37,115,10,0,37,115,32,115,97,118,101,32,112,111,105,110,116,32,115,105,122,101,32,97,110,100,32,102,111,110,116,10,46,110,114,32,46,83,32,92,110,40,46,115,10,46,110,114,32,68,70,32,92,110,40,46,102,10,0,112,110,103,58,115,118,103,0,103,105,102,58,
115,118,103,0,106,112,101,103,58,115,118,103,0,106,112,101,58,115,118,103,0,106,112,103,58,115,118,103,0,112,110,103,58,102,105,103,0,103,105,102,58,102,105,103,0,106,112,101,103,58,102,105,103,0,106,112,101,58,102,105,103,0,106,112,103,58,102,105,103,0,112,110,103,58,118,114,109,108,0,103,105,102,58,118,114,109,108,0,106,112,101,103,58,118,114,109,108,0,106,112,101,58,118,114,109,108,0,106,112,103,58,118,114,109,108,0,101,112,115,58,112,115,0,112,115,58,112,115,0,40,108,105,98,41,58,112,115,0,112,
110,103,58,109,97,112,0,103,105,102,58,109,97,112,0,106,112,101,103,58,109,97,112,0,106,112,101,58,109,97,112,0,106,112,103,58,109,97,112,0,112,115,58,109,97,112,0,101,112,115,58,109,97,112,0,115,118,103,58,109,97,112,0,112,110,103,58,100,111,116,0,103,105,102,58,100,111,116,0,106,112,101,103,58,100,111,116,0,106,112,101,58,100,111,116,0,106,112,103,58,100,111,116,0,112,115,58,100,111,116,0,101,112,115,58,100,111,116,0,115,118,103,58,100,111,116,0,112,110,103,58,120,100,111,116,0,103,105,102,58,120,
100,111,116,0,106,112,101,103,58,120,100,111,116,0,106,112,101,58,120,100,111,116,0,106,112,103,58,120,100,111,116,0,112,115,58,120,100,111,116,0,101,112,115,58,120,100,111,116,0,115,118,103,58,120,100,111,116,0,115,118,103,58,115,118,103,0,112,110,103,58,118,109,108,0,103,105,102,58,118,109,108,0,106,112,101,103,58,118,109,108,0,106,112,101,58,118,109,108,0,106,112,103,58,118,109,108,0,103,105,102,58,116,107,0,105,109,97,103,101,32,99,114,101,97,116,101,32,112,104,111,116,111,32,34,112,104,111,116,
111,95,37,115,34,32,45,102,105,108,101,32,34,37,115,34,10,0,36,99,32,99,114,101,97,116,101,32,105,109,97,103,101,32,37,46,50,102,32,37,46,50,102,32,45,105,109,97,103,101,32,34,112,104,111,116,111,95,37,115,34,10,0,60,118,58,105,109,97,103,101,32,115,114,99,61,34,37,115,34,32,115,116,121,108,101,61,34,32,112,111,115,105,116,105,111,110,58,97,98,115,111,108,117,116,101,59,32,119,105,100,116,104,58,37,46,50,102,59,32,104,101,105,103,104,116,58,37,46,50,102,59,32,108,101,102,116,58,37,46,50,102,32,59,
32,116,111,112,58,37,46,50,102,34,0,32,47,62,10,0,103,118,108,111,97,100,105,109,97,103,101,95,99,111,114,101,46,99,0,99,111,114,101,95,108,111,97,100,105,109,97,103,101,95,112,115,108,105,98,0,91,32,0,37,103,32,37,103,32,0,93,32,32,37,100,32,116,114,117,101,32,37,115,10,0,93,32,32,37,100,32,102,97,108,115,101,32,37,115,10,0,99,111,114,101,95,108,111,97,100,105,109,97,103,101,95,112,115,0,103,115,97,118,101,32,37,103,32,37,103,32,116,114,97,110,115,108,97,116,101,32,110,101,119,112,97,116,104,10,
0,117,115,101,114,95,115,104,97,112,101,95,37,100,10,0,103,114,101,115,116,111,114,101,10,0,99,111,114,101,95,108,111,97,100,105,109,97,103,101,95,118,114,109,108,0,83,104,97,112,101,32,123,10,0,32,32,97,112,112,101,97,114,97,110,99,101,32,65,112,112,101,97,114,97,110,99,101,32,123,10,0,32,32,32,32,109,97,116,101,114,105,97,108,32,77,97,116,101,114,105,97,108,32,123,10,0,32,32,32,32,32,32,97,109,98,105,101,110,116,73,110,116,101,110,115,105,116,121,32,48,46,51,51,10,0,32,32,32,32,32,32,32,32,100,
105,102,102,117,115,101,67,111,108,111,114,32,49,32,49,32,49,10,0,32,32,32,32,125,10,0,32,32,32,32,116,101,120,116,117,114,101,32,73,109,97,103,101,84,101,120,116,117,114,101,32,123,32,117,114,108,32,34,37,115,34,32,125,10,0,32,32,125,10,0,99,111,114,101,95,108,111,97,100,105,109,97,103,101,95,102,105,103,0,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,46,49,102,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,10,32,37,100,32,37,115,10,0,32,
37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,32,37,100,10,0,99,111,114,101,95,108,111,97,100,105,109,97,103,101,95,115,118,103,0,60,105,109,97,103,101,32,120,108,105,110,107,58,104,114,101,102,61,34,0,34,32,119,105,100,116,104,61,34,37,103,112,120,34,32,104,101,105,103,104,116,61,34,37,103,112,120,34,32,112,114,101,115,101,114,118,101,65,115,112,101,99,116,82,97,116,105,111,61,34,120,77,105,100,89,77,105,100,32,109,101,101,116,34,32,120,61,34,37,103,34,32,
121,61,34,37,103,34,0,32,116,114,97,110,115,102,111,114,109,61,34,114,111,116,97,116,101,40,37,100,32,37,103,32,37,103,41,34,0,34,32,119,105,100,116,104,61,34,37,103,112,120,34,32,104,101,105,103,104,116,61,34,37,103,112,120,34,32,112,114,101,115,101,114,118,101,65,115,112,101,99,116,82,97,116,105,111,61,34,120,77,105,110,89,77,105,110,32,109,101,101,116,34,32,120,61,34,37,103,34,32,121,61,34,37,103,34,0,47,62,10,0,100,111,116,95,108,97,121,111,117,116,0,112,104,97,115,101,0,100,111,116,32,100,111,
101,115,32,110,111,116,32,115,117,112,112,111,114,116,32,116,104,101,32,97,115,112,101,99,116,32,97,116,116,114,105,98,117,116,101,32,102,111,114,32,100,105,115,99,111,110,110,101,99,116,101,100,32,103,114,97,112,104,115,32,111,114,32,103,114,97,112,104,115,32,119,105,116,104,32,99,108,117,115,116,101,114,115,10,0,118,32,61,61,32,110,0,100,111,116,105,110,105,116,46,99,0,114,101,109,111,118,101,95,102,114,111,109,95,114,97,110,107,0,99,111,109,112,111,117,110,100,0,111,114,100,101,114,0,101,100,103,
101,32,108,97,98,101,108,115,32,119,105,116,104,32,115,112,108,105,110,101,115,61,99,117,114,118,101,100,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,105,110,32,100,111,116,32,45,32,117,115,101,32,120,108,97,98,101,108,115,10,0,40,108,32,61,32,69,68,95,108,97,98,101],"i8",4,n.q+111366);
D([108,40,102,101,41,41,0,100,111,116,115,112,108,105,110,101,115,46,99,0,115,101,116,69,100,103,101,76,97,98,101,108,80,111,115,0,69,68,95,108,97,98,101,108,40,102,101,41,0,95,100,111,116,95,115,112,108,105,110,101,115,0,97,117,120,103,0,108,97,98,101,108,95,102,108,111,97,116,0,102,105,120,101,100,0,120,120,120,0,49,48,48,48,48,0,123,37,115,125,0,101,32,33,61,32,78,85,76,76,0,102,97,115,116,103,114,46,99,0,100,101,108,101,116,101,95,102,97,115,116,95,101,100,103,101,0,110,32,33,61,32,78,68,95,110,
101,120,116,40,110,41,0,102,97,115,116,95,110,111,100,101,0,117,32,33,61,32,118,0,102,97,115,116,95,110,111,100,101,97,112,112,0,78,68,95,110,101,120,116,40,118,41,32,61,61,32,78,85,76,76,0,102,105,110,100,95,102,97,115,116,95,110,111,100,101,40,103,44,32,110,41,0,100,101,108,101,116,101,95,102,97,115,116,95,110,111,100,101,0,100,101,108,101,116,101,95,102,108,97,116,95,101,100,103,101,0,109,101,114,103,101,95,111,110,101,119,97,121,32,103,108,105,116,99,104,10,0,109,101,114,103,101,95,111,110,101,
119,97,121,0,0,109,99,108,105,109,105,116,0,109,101,114,103,101,50,58,32,103,114,97,112,104,32,37,115,44,32,114,97,110,107,32,37,100,32,104,97,115,32,111,110,108,121,32,37,100,32,60,32,37,100,32,110,111,100,101,115,10,0,114,101,109,105,110,99,114,111,115,115,0,109,105,110,99,114,111,115,115,32,37,115,58,32,37,100,32,99,114,111,115,115,105,110,103,115,44,32,37,46,50,102,32,115,101,99,115,46,10,0,105,110,115,116,97,108,108,95,105,110,95,114,97,110,107,44,32,108,105,110,101,32,37,100,58,32,37,115,32,
37,115,32,114,97,110,107,32,37,100,32,105,32,61,32,37,100,32,97,110,32,61,32,48,10,0,71,68,95,114,97,110,107,40,103,41,91,114,93,46,110,32,60,61,32,71,68,95,114,97,110,107,40,103,41,91,114,93,46,97,110,0,109,105,110,99,114,111,115,115,46,99,0,105,110,115,116,97,108,108,95,105,110,95,114,97,110,107,0,105,110,115,116,97,108,108,95,105,110,95,114,97,110,107,44,32,108,105,110,101,32,37,100,58,32,78,68,95,111,114,100,101,114,40,37,115,41,32,91,37,100,93,32,62,32,71,68,95,114,97,110,107,40,82,111,111,116,
41,91,37,100,93,46,97,110,32,91,37,100,93,10,0,105,110,115,116,97,108,108,95,105,110,95,114,97,110,107,44,32,108,105,110,101,32,37,100,58,32,114,97,110,107,32,37,100,32,110,111,116,32,105,110,32,114,97,110,107,32,114,97,110,103,101,32,91,37,100,44,37,100,93,10,0,105,110,115,116,97,108,108,95,105,110,95,114,97,110,107,44,32,108,105,110,101,32,37,100,58,32,71,68,95,114,97,110,107,40,103,41,91,37,100,93,46,118,32,43,32,78,68,95,111,114,100,101,114,40,37,115,41,32,91,37,100,93,32,62,32,71,68,95,114,97,
110,107,40,103,41,91,37,100,93,46,97,118,32,43,32,71,68,95,114,97,110,107,40,82,111,111,116,41,91,37,100,93,46,97,110,32,91,37,100,93,10,0,115,117,114,112,114,105,115,101,10,0,78,68,95,111,114,100,101,114,40,118,41,32,60,32,78,68,95,111,114,100,101,114,40,119,41,0,116,114,97,110,115,112,111,115,101,95,115,116,101,112,0,118,0,110,101,105,103,104,98,111,114,0,40,114,118,32,61,61,32,48,41,32,124,124,32,40,78,68,95,111,114,100,101,114,40,114,118,41,45,78,68,95,111,114,100,101,114,40,118,41,41,42,100,
105,114,32,62,32,48,0,99,111,110,115,116,114,97,105,110,105,110,103,95,102,108,97,116,95,101,100,103,101,40,103,44,118,44,101,41,32,61,61,32,70,65,76,83,69,0,102,108,97,116,95,114,101,111,114,100,101,114,0,78,68,95,114,97,110,107,40,118,41,32,61,61,32,114,0,112,111,115,116,111,114,100,101,114,0,102,108,97,116,105,110,100,101,120,40,97,103,104,101,97,100,40,101,41,41,32,60,32,77,45,62,110,114,111,119,115,0,102,108,97,116,95,115,101,97,114,99,104,0,102,108,97,116,105,110,100,101,120,40,97,103,116,97,
105,108,40,101,41,41,32,60,32,77,45,62,110,99,111,108,115,0,109,105,110,99,114,111,115,115,58,32,112,97,115,115,32,37,100,32,105,116,101,114,32,37,100,32,116,114,121,105,110,103,32,37,100,32,99,117,114,95,99,114,111,115,115,32,37,100,32,98,101,115,116,95,99,114,111,115,115,32,37,100,10,0,98,97,108,97,110,99,101,0,111,117,116,0,111,114,100,101,114,105,110,103,32,39,37,115,39,32,110,111,116,32,114,101,99,111,103,110,105,122,101,100,46,10,0,111,114,100,101,114,105,110,103,32,39,37,115,39,32,110,111,
116,32,114,101,99,111,103,110,105,122,101,100,32,102,111,114,32,110,111,100,101,32,39,37,115,39,46,10,0,95,110,101,119,95,114,97,110,107,0,69,100,103,101,32,108,101,110,103,116,104,32,37,102,32,108,97,114,103,101,114,32,116,104,97,110,32,109,97,120,105,109,117,109,32,37,117,32,97,108,108,111,119,101,100,46,10,67,104,101,99,107,32,102,111,114,32,111,118,101,114,119,105,100,101,32,110,111,100,101,40,115,41,46,10,0,104,112,0,112,111,115,105,116,105,111,110,46,99,0,99,111,110,110,101,99,116,71,114,97,
112,104,0,114,97,110,107,40,103,44,32,50,44,32,110,115,105,116,101,114,50,40,103,41,41,32,61,61,32,48,0,100,111,116,95,112,111,115,105,116,105,111,110,0,65,82,61,37,48,46,52,108,102,9,32,65,114,101,97,61,32,37,48,46,52,108,102,9,0,68,117,109,109,121,61,37,100,10,0,71,111,105,110,103,32,116,111,32,97,112,112,108,121,32,97,110,111,116,104,101,114,32,101,120,112,97,110,115,105,111,110,46,10,0,110,101,120,116,35,105,116,101,114,61,37,100,10,0,110,115,108,105,109,105,116,0,99,111,110,116,97,105,110,95,
110,111,100,101,115,32,99,108,117,115,116,32,37,115,32,114,97,110,107,32,37,100,32,109,105,115,115,105,110,103,32,110,111,100,101,10,0,110,115,108,105,109,105,116,49,0,110,101,119,114,97,110,107,0,108,101,118,101,108,32,97,115,115,105,103,110,109,101,110,116,32,99,111,110,115,116,114,97,105,110,116,115,0,108,101,118,101,108,32,103,114,97,112,104,32,114,101,99,0,99,111,109,112,97,99,116,0,95,119,101,97,107,95,37,100,0,127,114,111,111,116,0,77,97,120,114,97,110,107,32,61,32,37,100,44,32,109,105,110,
114,97,110,107,32,61,32,37,100,10,0,108,101,97,100,101,114,32,33,61,32,78,85,76,76,0,114,97,110,107,46,99,0,99,108,117,115,116,101,114,95,108,101,97,100,101,114,0,40,78,68,95,85,70,95,115,105,122,101,40,110,41,32,60,61,32,49,41,32,124,124,32,40,110,32,61,61,32,108,101,97,100,101,114,41,0,97,103,104,101,97,100,40,101,41,32,61,61,32,85,70,95,102,105,110,100,40,97,103,104,101,97,100,40,101,41,41,0,109,105,110,109,97,120,95,101,100,103,101,115,0,97,103,116,97,105,108,40,101,41,32,61,61,32,85,70,95,102,
105,110,100,40,97,103,116,97,105,108,40,101,41,41,0,114,97,110,107,0,115,97,109,101,0,109,105,110,0,115,111,117,114,99,101,0,109,97,120,0,115,105,110,107,0,127,116,111,112,0,127,98,111,116,0,114,97,110,107,105,110,103,58,32,102,97,105,108,117,114,101,32,116,111,32,99,114,101,97,116,101,32,115,116,114,111,110,103,32,99,111,110,115,116,114,97,105,110,116,32,101,100,103,101,32,98,101,116,119,101,101,110,32,110,111,100,101,115,32,37,115,32,97,110,100,32,37,115,10,0,108,101,118,101,108,32,101,100,103,
101,32,114,101,99,0,108,101,118,101,108,32,110,111,100,101,32,114,101,99,0,115,97,109,101,104,101,97,100,0,115,97,109,101,116,97,105,108,0,116,111,111,32,109,97,110,121,32,40,62,32,37,100,41,32,115,97,109,101,123,104,101,97,100,44,116,97,105,108,125,32,103,114,111,117,112,115,32,102,111,114,32,110,111,100,101,32,37,115,10,0,99,111,109,98,105,65,82,32,61,32,37,108,102,10,0,37,108,102,44,37,100,0,116,104,101,32,97,115,112,101,99,116,32,97,116,116,114,105,98,117,116,101,32,104,97,115,32,98,101,101,110,
32,100,105,115,97,98,108,101,100,32,100,117,101,32,116,111,32,105,109,112,108,101,109,101,110,116,97,116,105,111,110,32,102,108,97,119,115,32,45,32,97,116,116,114,105,98,117,116,101,32,105,103,110,111,114,101,100,46,10,0,69,68,95,116,111,95,118,105,114,116,40,101,41,32,61,61,32,78,85,76,76,0,99,108,97,115,115,50,46,99,0,109,101,114,103,101,95,99,104,97,105,110,0,69,68,95,116,111,95,118,105,114,116,40,111,114,105,103,41,32,61,61,32,78,85,76,76,0,109,97,107,101,95,99,104,97,105,110,0,69,68,95,116,111,
95,118,105,114,116,40,111,114,105,103,41,32,33,61,32,78,85,76,76,0,37,115,32,119,97,115,32,97,108,114,101,97,100,121,32,105,110,32,97,32,114,97,110,107,115,101,116,44,32,100,101,108,101,116,101,100,32,102,114,111,109,32,99,108,117,115,116,101,114,32,37,115,10,0,78,68,95,114,97,110,107,40,102,114,111,109,41,32,60,32,78,68,95,114,97,110,107,40,116,111,41,0,99,108,117,115,116,101,114,46,99,0,109,97,112,95,112,97,116,104,0,108,104,101,97,100,0,108,116,97,105,108,0,37,115,32,45,62,32,37,115,58,32,115,
112,108,105,110,101,32,115,105,122,101,32,62,32,49,32,110,111,116,32,115,117,112,112,111,114,116,101,100,10,0,37,115,32,45,62,32,37,115,58,32,104,101,97,100,32,110,111,116,32,105,110,115,105,100,101,32,104,101,97,100,32,99,108,117,115,116,101,114,32,37,115,10,0,37,115,32,45,62,32,37,115,58,32,116,97,105,108,32,105,115,32,105,110,115,105,100,101,32,104,101,97,100,32,99,108,117,115,116,101,114,32,37,115,10,0,98,101,122,45,62,115,102,108,97,103,0,99,111,109,112,111,117,110,100,46,99,0,109,97,107,101,
67,111,109,112,111,117,110,100,69,100,103,101,0,98,101,122,45,62,101,102,108,97,103,0,37,115,32,45,62,32,37,115,58,32,116,97,105,108,32,110,111,116,32,105,110,115,105,100,101,32,116,97,105,108,32,99,108,117,115,116,101,114,32,37,115,10,0,37,115,32,45,62,32,37,115,58,32,104,101,97,100,32,105,115,32,105,110,115,105,100,101,32,116,97,105,108,32,99,108,117,115,116,101,114,32,37,115,10,0,40,37,46,53,103,44,37,46,53,103,41,0,115,101,103,109,101,110,116,32,91,37,115,44,37,115,93,32,100,111,101,115,32,110,
111,116,32,105,110,116,101,114,115,101,99,116,32,98,111,120,32,108,108,61,37,115,44,117,114,61,37,115,10,0,98,111,120,73,110,116,101,114,115,101,99,116,102,0,99,108,117,115,116,101,114,32,110,97,109,101,100,32,37,115,32,110,111,116,32,102,111,117,110,100,10,0,99,111,110,99,101,110,116,114,97,116,101,61,116,114,117,101,32,109,97,121,32,110,111,116,32,119,111,114,107,32,99,111,114,114,101,99,116,108,121,46,10,0,114,101,98,117,105,108,116,100,95,118,108,105,115,116,115,58,32,114,97,110,107,32,108,101,
97,100,32,37,115,32,110,111,116,32,105,110,32,111,114,100,101,114,32,37,100,32,111,102,32,114,97,110,107,32,37,100,10,0,100,101,103,101,110,101,114,97,116,101,32,99,111,110,99,101,110,116,114,97,116,101,100,32,114,97,110,107,32,37,115,44,37,100,10,0,78,68,95,105,110,40,114,105,103,104,116,41,46,115,105,122,101,32,43,32,78,68,95,111,117,116,40,114,105,103,104,116,41,46,115,105,122,101,32,61,61,32,48,0,99,111,110,99,46,99,0,109,101,114,103,101,118,105,114,116,117,97,108,0,0,71,68,95,109,105,110,114,
97,110,107,40,103,41,32,61,61,32,48,0,102,108,97,116,46,99,0,97,98,111,109,105,110,97,116,105,111,110,0,78,68,95,111,117,116,40,118,41,46,115,105,122,101,32,61,61,32,50,0,115,101,116,98,111,117,110,100,115,0,110,101,97,116,111,95,108,97,121,111,117,116,0,110,101,97,116,111,0,102,100,112,0,115,102,100,112,0,116,119,111,112,105,0,99,105,114,99,111,0,112,97,116,99,104,119,111,114,107,0,111,115,97,103,101,0,110,111,112,0,110,111,112,49,0,110,111,112,50,0,37,108,102,44,37,108,102,44,37,108,102,37,99,0,
110,111,100,101,32,37,115,44,32,112,111,115,105,116,105,111,110,32,37,115,44,32,101,120,112,101,99,116,101,100,32,116,119,111,32,100,111,117,98,108,101,115,10,0,110,111,100,101,32,37,115,32,105,110,32,103,114,97,112,104,32,37,115,32,104,97,115,32,110,111,32,112,111,115,105,116,105,111,110,10,0,115,44,37,108,102,44,37,108,102,37,110,0,32,101,44,37,108,102,44,37,108,102,37,110,0,0,112,111,115,32,97,116,116,114,105,98,117,116,101,32,102,111,114,32,101,100,103,101,32,40,37,115,44,37,115,41,32,100,111,
101,115,110,39,116,32,104,97,118,101,32,51,110,43,49,32,112,111,105,110,116,115,10,0,37,108,102,44,37,108,102,37,110,0,115,121,110,116,97,120,32,101,114,114,111,114,32,105,110,32,112,111,115,32,97,116,116,114,105,98,117,116,101,32,102,111,114,32,101,100,103,101,32,40,37,115,44,37,115,41,10,0,115,116,97,114,116,0,115,101,108,102,0,114,97,110,100,111,109,0,110,111,100,101,32,112,111,115,105,116,105,111,110,115,32,97,114,101,32,105,103,110,111,114,101,100,32,117,110,108,101,115,115,32,115,116,97,114,
116,61,114,97,110,100,111,109,10,0,97,115,32,114,101,113,117,105,114,101,100,32,98,121,32,116,104,101,32,45,110,32,102,108,97,103,10,0,109,111,100,101,0,75,75,0,109,97,106,111,114,0,104,105,101,114,0,73,108,108,101,103,97,108,32,118,97,108,117,101,32,37,115,32,102,111,114,32,97,116,116,114,105,98,117,116,101,32,34,109,111,100,101,34,32,105,110,32,103,114,97,112,104,32,37,115,32,45,32,105,103,110,111,114,101,100,10,0,109,111,100,101,108,0,99,105,114,99,117,105,116,0,115,117,98,115,101,116,0,115,104,
111,114,116,112,97,116,104,0,109,100,115,0,101,100,103,101,115,32,105,110,32,103,114,97,112,104,32,37,115,32,104,97,118,101,32,110,111,32,108,101,110,32,97,116,116,114,105,98,117,116,101,46,32,72,101,110,99,101,44,32,116,104,101,32,109,100,115,32,109,111,100,101,108,10,0,105,115,32,105,110,97,112,112,114,111,112,114,105,97,116,101,46,32,82,101,118,101,114,116,105,110,103,32,116,111,32,116,104,101,32,115,104,111,114,116,101,115,116,32,112,97,116,104,32,109,111,100,101,108,46,10,0,85,110,107,110,111,
119,110,32,118,97,108,117,101,32,37,115,32,102,111,114,32,97,116,116,114,105,98,117,116,101,32,34,109,111,100,101,108,34,32,105,110,32,103,114,97,112,104,32,37,115,32,45,32,105,103,110,111,114,101,100,10,0,95,110,101,97,116,111,95,99,99,0,115,116,114,101,115,115,119,116,0,37,115,32,97,116,116,114,105,98,117,116,101,32,118,97,108,117,101,32,109,117,115,116,32,98,101,32,49,32,111,114,32,50,32,45,32,105,103,110,111,114,105,110,103,10,0,109,111,100,101,108,32,37,100,32,115,109,97,114,116,95,105,110,105,
116,32,37,100,32,115,116,114,101,115,115,119,116,32,37,100,32,105,116,101,114,97,116,105,111,110,115,32,37,100,32,116,111,108,32,37,102,10,0,99,111,110,118,101,114,116,32,103,114,97,112,104,58,32,0,109,97,106,111,114,105,122,97,116,105,111,110,10,0,37,100,32,110,111,100,101,115,32,37,46,50,102,32,115,101,99,10,0,108,101,118,101,108,115,103,97,112,0,108,97,121,111,117,116,32,97,98,111,114,116,101,100,10,0,103,114,97,112,104,32,37,115,32,105,115,32,100,105,115,99,111,110,110,101,99,116,101,100,46,32,
72,101,110,99,101,44,32,116,104,101,32,99,105,114,99,117,105,116,32,109,111,100,101,108,10,0,65,108,116,101,114,110,97,116,105,118,101,108,121,44,32,99,111,110,115,105,100,101,114,32,114,117,110,110,105,110,103,32,110,101,97,116,111,32,117,115,105,110,103,32,45,71,112,97,99,107,61,116,114,117,101,32,111,114,32,100,101,99,111,109,112,111,115,105,110,103,10,0,116,104,101,32,103,114,97,112,104,32,105,110,116,111,32,99,111,110,110,101,99,116,101,100,32,99,111,109,112,111,110,101,110,116,115,46,10,0,83,
111,108,118,105,110,103,32,109,111,100,101,108,32,37,100,32,105,116,101,114,97,116,105,111,110,115,32,37,100,32,116,111,108,32,37,102,10,0,78,68,95,105,100,40,110,112,41,32,61,61,32,105,0,110,101,97,116,111,105,110,105,116,46,99,0,109,97,107,101,71,114,97,112,104,68,97,116,97,0,102,32,60,32,103,114,97,112,104,91,106,93,46,110,101,100,103,101,115,0,100,102,115,67,121,99,108,101,0,37,108,102,44,37,108,102,44,37,108,102,44,37,108,102,0,98,32,61,61,32,110,0,110,101,97,116,111,115,112,108,105,110,101,
115,46,99,0,109,97,107,101,95,98,97,114,114,105,101,114,115,0,109,97,107,101,83,112,108,105,110,101,58,32,102,97,105,108,101,100,32,116,111,32,109,97,107,101,32,115,112,108,105,110,101,32,101,100,103,101,32,40,37,115,44,37,115,41,10,0,115,112,108,105,110,101,32,37,115,32,37,115,10,0,116,104,101,32,98,111,117,110,100,105,110,103,32,98,111,120,101,115,32,111,102,32,115,111,109,101,32,110,111,100,101,115,32,116,111,117,99,104,32,45,32,102,97,108,108,105,110,103,32,98,97,99,107,32,116,111,32,115,116,
114,97,105,103,104,116,32,108,105,110,101,32,101,100,103,101,115,10,0,115,111,109,101,32,110,111,100,101,115,32,119,105,116,104,32,109,97,114,103,105,110,32,40,37,46,48,50,102,44,37,46,48,50,102,41,32,116,111,117,99,104,32,45,32,102,97,108,108,105,110,103,32,98,97,99,107,32,116,111,32,115,116,114,97,105,103,104,116,32,108,105,110,101,32,101,100,103,101,115,10,0,112,111,108,121,108,105,110,101,115,0,111,114,116,104,111,103,111,110,97,108,32,108,105,110,101,115,0,108,105,110,101,32,115,101,103,109,
101,110,116,115,0,67,114,101,97,116,105,110,103,32,101,100,103,101,115,32,117,115,105,110,103,32,37,115,10,0,112,111,108,121,108,105,110,101,32,37,115,32,37,115,10,0,109,100,115,77,111,100,101,108,58,32,100,101,108,116,97,32,61,32,37,102,10,0,83,101,116,116,105,110,103,32,117,112,32,115,116,114,101,115,115,32,102,117,110,99,116,105,111,110,0,83,111,108,118,105,110,103,32,109,111,100,101,108,58,32,0,10,102,105,110,97,108,32,101,32,61,32,37,102,32,37,100,32,105,116,101,114,97,116,105,111,110,115,32,
37,46,50,102,32,115,101,99,10,0,83,99,97,110,110,105,110,103,32,103,114,97,112,104,32,37,115,44,32,37,100,32,110,111,100,101,115,10,0,68,97,109,112,105,110,103,0,100,101,102,97,117,108,116,100,105,115,116,0,83,101,116,116,105,110,103,32,105,110,105,116,105,97,108,32,112,111,115,105,116,105,111,110,115,10,0,115,116,97,114,116,61,37,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,119,105,116,104,32,109,111,100,101,61,115,101,108,102,32,45,32,105,103,110,111,114,101,100,10,0,83,101,116,
116,105,110,103,32,117,112,32,115,112,114,105,110,103,32,109,111,100,101,108,58,32,0,37,46,50,102,32,115,101,99,10,0,10,102,105,110,97,108,32,101,32,61,32,37,102,0,33,0,32,37,100,37,115,32,105,116,101,114,97,116,105,111,110,115,32,37,46,50,102,32,115,101,99,10,0,77,97,120,46,32,105,116,101,114,97,116,105,111,110,115,32,40,37,100,41,32,114,101,97,99,104,101,100,32,111,110,32,103,114,97,112,104,32,37,115,10,0,37,46,51,102,32,0,37,115,32,37,46,51,102,10,0,78,68,95,104,101,97,112,105,110,100,101,120,
40,118,41,32,60,32,48,0,115,116,117,102,102,46,99,0,110,101,97,116,111,95,101,110,113,117,101,117,101,0,67,97,108,99,117,108,97,116,105,110,103,32,115,104,111,114,116,101,115,116,32,112,97,116,104,115,58,32,0,98,97,100,32,101,100,103,101,32,108,101,110,32,34,37,115,34,0,32,105,110,32,37,115,32,45,32,115,101,116,116,105,110,103,32,116,111,32,37,46,48,50,102,10,0,115,112,101,99,105,102,105,101,100,32,114,111,111,116,32,110,111,100,101,32,34,37,115,34,32,119,97,115,32,110,111,116,32,102,111,117,110,
100,46,0,85,115,105,110,103,32,100,101,102,97,117,108,116,32,99,97,108,99,117,108,97,116,105,111,110,32,102,111,114,32,114,111,111,116,32,110,111,100,101,10,0,114,101,112,111,115,105,116,105,111,110,32,37,115,10,0,37,115,32,58,32,37,102,32,37,102,10,0,37,115,32,58,32,37,102,32,37,102,32,37,102,32,37,102,10,0,32,32,0,71,114,97,112,104,32,37,115,32,104,97,115,32,97,114,114,97,121,32,112,97,99,107,105,110,103,32,119,105,116,104,32,117,115,101,114,32,118,97,108,117,101,115,32,98,117,116,32,110,111,32,
34,115,111,114,116,118,34,32,97,116,116,114,105,98,117,116,101,115,32,97,114,101,32,100,101,102,105,110,101,100,46,0,112,105,110,0,87,97,114,110,105,110,103,58,32,110,111,100,101,32,37,115,44,32,112,111,115,105,116,105,111,110,32,37,115,44,32,101,120,112,101,99,116,101,100,32,116,119,111,32,102,108,111,97,116,115,10,0,99,111,111,114,100,115,0,115,112,108,105,110,101,115,32,97,110,100,32,99,108,117,115,116,101,114,32,101,100,103,101,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,45,32,
117,115,105,110,103,32,108,105,110,101,32,115,101,103,109,101,110,116,115,10,0,108,97,121,111,117,116,32,37,115,10,0,95,100,103,95,37,100,0,100,101,114,105,118,101,32,103,114,97,112,104,32,37,115,32,111,102,32,37,115,10,0,37,108,102,44,37,108,102,44,37,108,102,44,37,108,102,37,99,0,103,114,97,112,104,32,37,115,44,32,99,111,111,114,100,32,37,115,44,32,101,120,112,101,99,116,101,100,32,102,111,117,114,32,100,111,117,98,108,101,115,10,0,110,111,100,101,32,34,37,115,34,32,105,115,32,99,111,110,116,97,
105,110,101,100,32,105,110,32,116,119,111,32,110,111,110,45,99,111,109,112,97,114,97,98,108,101,32,99,108,117,115,116,101,114,115,32,34,37,115,34,32,97,110,100,32,34,37,115,34,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,95,112,111,114,116,95,37,115,95,37,115,95,37,115,95,37,108,100,0,95,112,111,114,116,95,37,115,95,40,37,100,41,95,40,37,100,41,95,37,108,100,0,105,32,61,61,32,100,101,103,0,108,97,121,111,117,116,46,99,0,103,101,116,69,100,103,101,76,105,115,116,0,105,100,120,32,61,61,32,115,122,0,101,120,112,97,110,100,67,108,117,115,116,101,
114,0,101,110,100,32,37,115,10,0,109,97,120,105,116,101,114,0,84,48,0,102,100,112,32,100,111,101,115,32,110,111,116,32,115,117,112,112,111,114,116,32,115,116,97,114,116,61,115,101,108,102,32,45,32,105,103,110,111,114,105,110,103,10,0,120,76,97,121,111,117,116,32,0,57,58,112,114,105,115,109,0,116,114,105,101,115,32,61,32,37,100,44,32,109,111,100,101,32,61,32,37,115,10,0,100,101,114,105,118,101,100,0,105,110,102,111,0,100,105,109,101,110,0,100,105,109,0,115,102,100,112,32,111,110,108,121,32,115,117,
112,112,111,114,116,115,32,115,116,97,114,116,61,114,97,110,100,111,109,10,0,75,0,114,101,112,117,108,115,105,118,101,102,111,114,99,101,0,108,101,118,101,108,115,0,115,109,111,111,116,104,105,110,103,0,97,118,103,95,100,105,115,116,0,103,114,97,112,104,95,100,105,115,116,0,112,111,119,101,114,95,100,105,115,116,0,115,112,114,105,110,103,0,113,117,97,100,116,114,101,101,0,102,97,115,116,0,98,101,97,117,116,105,102,121,0,111,118,101,114,108,97,112,95,115,104,114,105,110,107,0,114,111,116,97,116,105,
111,110,0,108,97,98,101,108,95,115,99,104,101,109,101,0,108,97,98,101,108,95,115,99,104,101,109,101,32,61,32,37,100,32,62,32,52,32,58,32,105,103,110,111,114,105,110,103,10,0,13,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,105,116,101,114,32,61,32,37,100,44,32,115,116,101,112,32,61,32,37,102,32,70,110,111,114,109,32,61,32,37,102,32,110,122,32,61,32,37,100,32,32,75,32,61,32,37,102,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,0,115,112,114,
105,110,103,95,101,108,101,99,116,114,105,99,97,108,95,101,109,98,101,100,100,105,110,103,95,115,108,111,119,0,100,109,101,97,110,32,61,32,37,102,44,32,114,104,111,32,61,32,37,102,10,0,115,101,110,100,32,114,97,110,100,111,109,32,99,111,111,114,100,105,110,97,116,101,115,10,0,115,99,97,108,105,110,103,32,102,97,99,116,111,114,32,61,32,37,102,10,0,120,120,120,32,37,100,32,37,100,10,0,37,100,32,37,100,10,0,81,85,65,68,95,84,82,69,69,95,72,89,66,82,73,68,44,32,115,105,122,101,32,108,97,114,103,101,114,
32,116,104,97,110,32,37,100,44,32,115,119,105,116,99,104,32,116,111,32,102,97,115,116,32,113,117,97,100,116,114,101,101,0,99,116,114,108,45,62,111,118,101,114,108,97,112,61,37,100,10,0,117,110,105,102,111,114,109,95,115,116,114,101,115,115,46,99,0,85,110,105,102,111,114,109,83,116,114,101,115,115,83,109,111,111,116,104,101,114,95,110,101,119,0,83,112,97,114,115,101,77,97,116,114,105,120,95,105,115,95,115,121,109,109,101,116,114,105,99,40,66,44,32,70,65,76,83,69,41,0,117,110,105,102,111,114,109,95,
115,116,114,101,115,115,0,124,101,100,103,101,108,97,98,101,108,124,0,108,101,110,0,110,111,114,109,97,108,105,122,101,0,111,118,101,114,108,97,112,0,115,99,97,108,101,32,61,32,40,37,46,48,51,102,44,37,46,48,51,102,41,10,0,65,100,106,117,115,116,105,110,103,32,37,115,32,117,115,105,110,103,32,37,115,10,0,85,110,104,97,110,100,108,101,100,32,97,100,106,117,115,116,32,111,112,116,105,111,110,32,37,115,10,0,118,111,114,111,95,109,97,114,103,105,110,0,78,117,109,98,101,114,32,111,102,32,105,116,101,114,
97,116,105,111,110,115,32,61,32,37,100,10,0,78,117,109,98,101,114,32,111,102,32,105,110,99,114,101,97,115,101,115,32,61,32,37,100,10,0,115,101,112,0,101,115,101,112,0,78,111,100,101,32,115,101,112,97,114,97,116,105,111,110,58,32,97,100,100,61,37,100,32,40,37,102,44,37,102,41,10,0,69,100,103,101,32,115,101,112,97,114,97,116,105,111,110,58,32,97,100,100,61,37,100,32,40,37,102,44,37,102,41,10,0,37,102,44,37,102,0,111,118,101,114,108,97,112,32,91,37,100,93,32,58,32,37,100,10,0,118,111,114,111,110,111,
105,0,79,118,101,114,108,97,112,32,118,97,108,117,101,32,34,37,115,34,32,117,110,115,117,112,112,111,114,116,101,100,32,45,32,105,103,110,111,114,101,100,10,0,85,110,114,101,99,111,103,110,105,122,101,100,32,111,118,101,114,108,97,112,32,118,97,108,117,101,32,34,37,115,34,32,45,32,117,115,105,110,103,32,102,97,108,115,101,10,0,86,111,114,111,110,111,105,0,111,118,101,114,108,97,112,95,115,99,97,108,105,110,103,0,115,99,97,108,105,110,103,0,118,112,115,99,0,105,112,115,101,112,0,111,115,99,97,108,
101,0,111,108,100,32,115,99,97,108,105,110,103,0,115,99,97,108,101,120,121,0,120,32,97,110,100,32,121,32,115,99,97,108,105,110,103,0,111,114,116,104,111,0,111,114,116,104,111,103,111,110,97,108,32,99,111,110,115,116,114,97,105,110,116,115,0,111,114,116,104,111,95,121,120,0,111,114,116,104,111,120,121,0,120,121,32,111,114,116,104,111,103,111,110,97,108,32,99,111,110,115,116,114,97,105,110,116,115,0,111,114,116,104,111,121,120,0,121,120,32,111,114,116,104,111,103,111,110,97,108,32,99,111,110,115,116,
114,97,105,110,116,115,0,112,111,114,116,104,111,0,112,115,101,117,100,111,45,111,114,116,104,111,103,111,110,97,108,32,99,111,110,115,116,114,97,105,110,116,115,0,112,111,114,116,104,111,95,121,120,0,112,111,114,116,104,111,120,121,0,120,121,32,112,115,101,117,100,111,45,111,114,116,104,111,103,111,110,97,108,32,99,111,110,115,116,114,97,105,110,116,115,0,112,111,114,116,104,111,121,120,0,121,120,32,112,115,101,117,100,111,45,111,114,116,104,111,103,111,110,97,108,32,99,111,110,115,116,114,97,105,
110,116,115,0,112,114,105,115,109,0,67,97,108,99,117,108,97,116,105,110,103,32,99,105,114,99,117,105,116,32,109,111,100,101,108,0,99,111,110,106,117,103,97,116,101,95,103,114,97,100,105,101,110,116,58,32,117,110,101,120,112,101,99,116,101,100,32,108,101,110,103,116,104,32,48,32,118,101,99,116,111,114,10,0,67,97,108,99,117,108,97,116,105,110,103,32,115,117,98,115,101,116,32,109,111,100,101,108,0,103,114,97,112,104,32,105,115,32,100,105,115,99,111,110,110,101,99,116,101,100,46,32,72,101,110,99,101,
44,32,116,104,101,32,99,105,114,99,117,105,116,32,109,111,100,101,108,10,0,105,115,32,117,110,100,101,102,105,110,101,100,46,32,82,101,118,101,114,116,105,110,103,32,116,111,32,116,104,101,32,115,104,111,114,116,101,115,116,32,112,97,116,104,32,109,111,100,101,108,46,10,0,67,97,108,99,117,108,97,116,105,110,103,32,77,68,83,32,109,111,100,101,108,0,67,97,108,99,117,108,97,116,105,110,103,32,115,104,111,114,116,101,115,116,32,112,97,116,104,115,0,58,32,37,46,50,102,32,115,101,99,10,0,83,101,116,116,
105,110,103,32,105,110,105,116,105,97,108,32,112,111,115,105,116,105,111,110,115,0,58,32,37,46,50,102,32,115,101,99,0,99,111,109,112,114,101,115,115,32,37,103,32,10,0,98,101,115,116,99,111,115,116,32,60,32,72,85,71,69,95,86,65,76,0,99,111,110,115,116,114,97,105,110,116,46,99,0,99,111,109,112,117,116,101,83,99,97,108,101,88,89,0,115,99,97,108,101,32,98,121,32,37,103,44,37,103,32,10,0,99,103,0,100,101,108,116,97,32,60,61,32,48,120,70,70,70,70,0,109,107,78,67,111,110,115,116,114,97,105,110,116,71,0,
118,103,0,71,114,97,112,104,118,105,122,32,98,117,105,108,116,32,119,105,116,104,111,117,116,32,97,110,121,32,116,114,105,97,110,103,117,108,97,116,105,111,110,32,108,105,98,114,97,114,121,10,0,100,101,108,97,117,110,97,121,95,116,114,105,97,110,103,117,108,97,116,105,111,110,58,32,37,115,10,0,100,101,108,97,117,110,97,121,95,116,114,105,58,32,37,115,10,0,10,105,110,116,101,114,115,101,99,116,105,111,110,32,97,116,32,37,46,51,102,32,37,46,51,102,10,0,116,114,121,105,110,103,32,116,111,32,100,101,
108,101,116,101,32,97,32,110,111,110,45,108,105,110,101,10,0,115,101,103,35,37,100,32,58,32,40,37,46,51,102,44,32,37,46,51,102,41,32,40,37,46,51,102,44,32,37,46,51,102,41,10,0,114,101,109,111,118,101,95,111,118,101,114,108,97,112,58,32,71,114,97,112,104,118,105,122,32,110,111,116,32,98,117,105,108,116,32,119,105,116,104,32,116,114,105,97,110,103,117,108,97,116,105,111,110,32,108,105,98,114,97,114,121,10,0,109,97,107,101,65,100,100,80,111,108,121,58,32,117,110,107,110,111,119,110,32,115,104,97,112,
101,32,116,121,112,101,32,37,115,10,0,109,97,107,101,80,111,108,121,58,32,117,110,107,110,111,119,110,32,115,104,97,112,101,32,116,121,112,101,32,37,115,10,0,120,33,61,78,85,76,76,0,115,109,97,114,116,95,105,110,105,95,120,46,99,0,73,77,68,83,95,103,105,118,101,110,95,100,105,109,0,105,108,108,45,99,111,110,100,105,116,105,111,110,101,100,0,116,119,111,112,105,58,32,117,115,101,32,111,102,32,119,101,105,103,104,116,61,48,32,99,114,101,97,116,101,115,32,100,105,115,99,111,110,110,101,99,116,101,100,
32,99,111,109,112,111,110,101,110,116,46,10,0,82,97,110,107,32,115,101,112,97,114,97,116,105,111,110,32,61,32,0,37,46,48,51,108,102,32,0,97,114,101,97,0,105,110,115,101,116,0,37,46,48,51,102,0,37,115,32,99,111,111,114,100,32,37,46,53,103,32,37,46,53,103,32,104,116,32,37,102,32,119,105,100,116,104,32,37,102,10,0,114,101,99,32,37,102,32,37,102,32,37,102,32,37,102,10,0,37,102,32,45,32,37,102,32,37,102,32,37,102,32,37,102,32,61,32,37,102,32,40,37,102,32,37,102,32,37,102,32,37,102,41,10,0,116,114,121,
105,110,103,32,116,111,32,97,100,100,32,116,111,32,114,101,99,116,32,123,37,102,32,43,47,45,32,37,102,44,32,37,102,32,43,47,45,32,37,102,125,10,0,116,111,116,97,108,32,97,100,100,101,100,32,115,111,32,102,97,114,32,61,32,37,100,10,0,97,100,100,105,110,103,32,37,100,32,105,116,101,109,115,44,32,116,111,116,97,108,32,97,114,101,97,32,61,32,37,102,44,32,119,32,61,32,37,102,44,32,97,114,101,97,47,119,61,37,102,10,0,99,111,109,112,111,117,110,100,69,100,103,101,115,58,32,99,111,117,108,100,32,110,111,
116,32,99,111,110,115,116,114,117,99,116,32,111,98,115,116,97,99,108,101,115,32,45,32,102,97,108,108,105,110,103,32,98,97,99,107,32,116,111,32,115,116,114,97,105,103,104,116,32,108,105,110,101,32,101,100,103,101,115,10,0,110,111,100,101,115,32,116,111,117,99,104,32,45,32,102,97,108,108,105,110,103,32,98,97,99,107,32,116,111,32,115,116,114,97,105,103,104,116,32,108,105,110,101,32,101,100,103,101,115,10,0,99,99,37,115,95,37,100,0,99,99,37,115,43,37,100,0,99,95,99,110,116,32,61,61,32,48,0,99,111,109,
112,46,99,0,102,105,110,100,67,67,111,109,112,0,103,114,105,100,40,37,100,44,37,100,41,58,32,37,115,10,0,119,105,100,116,104,32,62,32,48,0,81,117,97,100,84,114,101,101,46,99,0,81,117,97,100,84,114,101,101,95,110,101,119,0,33,40,113,45,62,108,41,0,81,117,97,100,84,114,101,101,95,97,100,100,95,105,110,116,101,114,110,97,108,0,105,105,32,60,32,49,60,60,100,105,109,32,38,38,32,105,105,32,62,61,32,48,0,113,45,62,113,116,115,91,105,105,93,0,113,45,62,110,32,61,61,32,49,0,33,40,113,45,62,113,116,115,41,
0,113,45,62,108,0,119,103,116,32,62,32,48,0,81,117,97,100,84,114,101,101,95,114,101,112,117,108,115,105,118,101,95,102,111,114,99,101,95,97,99,99,117,109,117,108,97,116,101,0,113,116,50,45,62,110,32,62,32,48,0,113,116,49,45,62,110,32,62,32,48,32,38,38,32,113,116,50,45,62,110,32,62,32,48,0,81,117,97,100,84,114,101,101,95,114,101,112,117,108,115,105,118,101,95,102,111,114,99,101,95,105,110,116,101,114,97,99,116,0,100,105,115,116,32,62,32,48,0,65,45,62,102,111,114,109,97,116,32,61,61,32,70,79,82,77,
65,84,95,67,83,82,0,83,112,97,114,115,101,77,97,116,114,105,120,46,99,0,83,112,97,114,115,101,77,97,116,114,105,120,95,116,114,97,110,115,112,111,115,101,0,83,112,97,114,115,101,77,97,116,114,105,120,95,105,115,95,115,121,109,109,101,116,114,105,99,0,65,32,38,38,32,66,0,83,112,97,114,115,101,77,97,116,114,105,120,95,97,100,100,0,65,45,62,102,111,114,109,97,116,32,61,61,32,66,45,62,102,111,114,109,97,116,32,38,38,32,65,45,62,102,111,114,109,97,116,32,61,61,32,70,79,82,77,65,84,95,67,83,82,0,65,45,
62,116,121,112,101,32,61,61,32,66,45,62,116,121,112,101,0,65,45,62,102,111,114,109,97,116,32,61,61,32,70,79,82,77,65,84,95,67,79,79,82,68,0,83,112,97,114,115,101,77,97,116,114,105,120,95,102,114,111,109,95,99,111,111,114,100,105,110,97,116,101,95,102,111,114,109,97,116,0,83,112,97,114,115,101,77,97,116,114,105,120,95,109,117,108,116,105,112,108,121,95,100,101,110,115,101,49,0,65,45,62,116,121,112,101,32,61,61,32,77,65,84,82,73,88,95,84,89,80,69,95,82,69,65,76,0,83,112,97,114,115,101,77,97,116,114,
105,120,95,109,117,108,116,105,112,108,121,95,100,101,110,115,101,50,0,83,112,97,114,115,101,77,97,116,114,105,120,95,109,117,108,116,105,112,108,121,95,118,101,99,116,111,114,0,65,45,62,116,121,112,101,32,61,61,32,77,65,84,82,73,88,95,84,89,80,69,95,82,69,65,76,32,124,124,32,65,45,62,116,121,112,101,32,61,61,32,77,65,84,82,73,88,95,84,89,80,69,95,73,78,84,69,71,69,82,0,83,112,97,114,115,101,77,97,116,114,105,120,95,109,117,108,116,105,112,108,121,0,106,99,91,109,97,115,107,91,106,98,91,107,93,93,
93,32,61,61,32,106,98,91,107,93,0,83,112,97,114,115,101,77,97,116,114,105,120,95,109,117,108,116,105,112,108,121,51,0,106,100,91,109,97,115,107,91,106,99,91,107,93,93,93,32,61,61,32,106,99,91,107,93,0,106,97,91,109,97,115,107,91,106,97,91,106,93,93,93,32,61,61,32,106,97,91,106,93,0,83,112,97,114,115,101,77,97,116,114,105,120,95,115,117,109,95,114,101,112,101,97,116,95,101,110,116,114,105,101,115,0,105,100,32,60,32,110,42,40,121,109,97,120,45,121,109,105,110,43,49,41,0,106,97,91,109,97,115,107,91,
105,100,93,93,32,61,61,32,106,97,91,106,93,0,83,112,97,114,115,101,77,97,116,114,105,120,95,99,111,111,114,100,105,110,97,116,101,95,102,111,114,109,95,97,100,100,95,101,110,116,114,105,101,115,0,83,112,97,114,115,101,77,97,116,114,105,120,95,100,105,118,105,100,101,95,114,111,119,95,98,121,95,100,101,103,114,101,101,0,109,32,62,32,48,32,38,38,32,110,32,62,32,48,32,38,38,32,110,122,32,62,61,32,48,0,83,112,97,114,115,101,77,97,116,114,105,120,95,102,114,111,109,95,99,111,111,114,100,105,110,97,116,
101,95,97,114,114,97,121,115,95,105,110,116,101,114,110],"i8",4,n.q+121606);
D([97,108,0,65,0,110,32,62,32,49,0,103,101,110,101,114,97,108,46,99,0,105,114,97,110,100,0,109,105,110,100,105,115,116,0,97,114,116,105,99,117,108,97,116,105,111,110,95,112,111,115,0,114,111,111,116,0,111,110,101,98,108,111,99,107,0,80,114,105,111,114,105,116,121,81,117,101,117,101,46,99,0,80,114,105,111,114,105,116,121,81,117,101,117,101,95,112,117,115,104,0,103,97,105,110,32,60,61,32,113,45,62,110,103,97,105,110,0,83,112,97,114,115,101,77,97,116,114,105,120,95,105,115,95,115,121,109,109,101,116,
114,105,99,40,65,44,32,70,65,76,83,69,41,0,112,111,115,116,95,112,114,111,99,101,115,115,46,99,0,105,100,101,97,108,95,100,105,115,116,97,110,99,101,95,109,97,116,114,105,120,0,108,101,110,32,62,32,48,0,83,116,114,101,115,115,77,97,106,111,114,105,122,97,116,105,111,110,83,109,111,111,116,104,101,114,50,95,110,101,119,0,110,122,32,62,32,48,0,105,100,101,97,108,95,100,105,115,116,95,115,99,104,101,109,101,32,118,97,108,117,101,32,119,114,111,110,103,0,83,112,97,114,115,101,77,97,116,114,105,120,95,
105,115,95,115,121,109,109,101,116,114,105,99,40,65,44,32,70,65,76,83,69,41,32,38,38,32,65,45,62,116,121,112,101,32,61,61,32,77,65,84,82,73,88,95,84,89,80,69,95,82,69,65,76,0,83,112,97,114,115,101,83,116,114,101,115,115,77,97,106,111,114,105,122,97,116,105,111,110,83,109,111,111,116,104,101,114,95,110,101,119,0,40,33,106,99,110,41,32,38,38,32,40,33,118,97,108,41,0,103,101,116,95,101,100,103,101,95,108,97,98,101,108,95,109,97,116,114,105,120,0,105,100,105,97,103,32,62,61,32,48,0,83,116,114,101,115,
115,77,97,106,111,114,105,122,97,116,105,111,110,83,109,111,111,116,104,101,114,95,115,109,111,111,116,104,0,84,114,105,97,110,103,108,101,83,109,111,111,116,104,101,114,95,110,101,119,0,106,100,105,97,103,32,62,61,32,48,0,83,112,114,105,110,103,83,109,111,111,116,104,101,114,95,110,101,119,0,33,102,108,97,103,0,83,112,114,105,110,103,83,109,111,111,116,104,101,114,95,115,109,111,111,116,104,0,110,101,105,103,104,98,61,37,100,10,0,114,111,111,116,32,61,32,37,115,10,0,115,45,62,115,122,32,62,32,48,
0,98,108,111,99,107,116,114,101,101,46,99,0,112,111,112,0,95,98,108,111,99,107,95,37,100,0,97,99,116,117,97,108,0,110,111,100,101,108,105,115,116,46,99,0,105,110,115,101,114,116,78,111,100,101,108,105,115,116,0,95,99,108,111,110,101,95,37,100,0,95,115,112,97,110,95,37,100,0,105,112,0,100,101,103,108,105,115,116,46,99,0,114,101,109,111,118,101,68,101,103,108,105,115,116,0,117,115,101,114,111,117,116,58,32,99,111,117,108,100,32,110,111,116,32,97,108,108,111,99,97,116,101,32,109,101,109,111,114,121,
10,0,69,114,114,111,114,0,87,97,114,110,105,110,103,0,37,115,58,32,0,95,65,71,95,100,97,116,97,100,105,99,116,0,97,103,100,105,99,116,111,102,58,32,117,110,107,110,111,119,110,32,107,105,110,100,32,37,100,10,0,95,65,71,95,115,116,114,100,97,116,97,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,99,37,108,100,0,109,101,109,111,114,121,32,97,108,108,111,99,97,116,105,111,110,32,102,97,105,108,117,114,101,0,97,103,100,101,108,101,116,101,32,111,110,32,119,114,111,110,103,32,103,
114,97,112,104,0,97,103,100,101,108,101,116,101,32,111,110,32,98,97,100,32,111,98,106,101,99,116,0,97,103,114,97,112,104,111,102,32,97,32,98,97,100,32,111,98,106,101,99,116,0,97,103,114,111,111,116,32,111,102,32,97,32,98,97,100,32,111,98,106,101,99,116,0,95,65,71,95,112,101,110,100,105,110,103,0,97,103,114,101,99,111,114,100,95,99,97,108,108,98,97,99,107,32,111,102,32,97,32,98,97,100,32,111,98,106,101,99,116,0,112,101,110,100,32,100,105,99,116,111,102,32,97,32,98,97,100,32,111,98,106,101,99,116,0,
109,111,118,101,32,116,111,32,102,114,111,110,116,32,108,111,99,107,32,105,110,99,111,110,115,105,115,116,101,110,99,121,0,108,105,110,101,108,101,110,103,116,104,0,59,10,0,32,91,107,101,121,61,0,93,0,32,91,0,44,10,0,61,0,95,37,108,100,95,83,85,83,80,69,67,84,0,100,105,0,115,116,114,105,99,116,32,0,123,10,0,93,59,10,0,34,34,0,115,116,114,105,99,116,0,97,103,97,112,112,108,121,58,32,117,110,107,110,111,119,110,32,111,98,106,101,99,116,32,116,121,112,101,32,37,100,10,0,18,238,238,20,9,3,238,254,238,
238,238,1,238,238,238,1,238,238,10,254,238,19,25,21,238,19,1,238,238,238,238,11,17,238,238,238,238,238,238,238,238,238,1,238,238,22,9,1,1,29,15,23,238,238,26,23,27,238,238,28,238,238,238,238,1,25,251,238,238,238,1,238,16,238,238,30,238,238,238,238,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,23,17,2,2,2,2,2,2,2,2,2,2,2,2,2,18,16,2,19,2,2,22,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,20,2,21,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
14,2,15,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,3,4,5,6,7,8,9,10,11,12,13,11,3,4,5,15,7,3,12,13,6,12,13,14,12,13,26,21,22,0,1,0,3,7,14,6,15,8,12,13,18,19,42,16,17,9,16,47,48,17,50,23,19,13,20,18,46,18,20,65,19,50,19,44,64,42,66,25,44,66,70,34,12,13,14,35,15,9,16,17,10,16,17,201,
16,17,45,69,70,252,1,6,246,15,7,246,36,2,16,17,47,48,54,77,78,40,38,59,60,42,54,49,57,61,63,47,58,64,216,68,48,62,37,55,67,53,75,43,56,73,76,0,3,9,0,0,0,1,14,2,11,12,8,35,36,37,54,59,61,0,13,16,18,27,22,28,18,39,50,34,23,51,30,60,6,7,53,5,15,17,20,24,41,0,19,41,0,0,0,0,0,55,21,40,29,30,0,33,38,52,31,48,62,25,44,0,27,0,32,26,42,0,43,58,46,47,0,49,56,57,45,0,2,2,1,0,3,3,1,0,1,0,1,1,1,0,2,1,1,0,2,2,3,1,1,0,0,5,0,1,3,1,3,5,3,1,1,1,1,2,0,1,0,4,2,0,2,1,1,3,2,1,0,3,2,1,0,1,1,0,1,1,1,3,107,101,121,0,0,24,
25,25,25,26,27,28,28,29,29,30,30,31,31,32,32,33,33,34,34,35,36,36,38,39,37,37,40,40,41,41,41,42,42,43,43,43,44,44,45,45,46,47,47,48,49,49,50,51,52,54,53,55,55,55,56,56,56,57,57,58,58,238,238,255,238,238,238,238,238,238,31,32,238,0,239,238,238,238,12,238,238,238,8,13,238,238,238,248,238,238,238,238,238,238,245,238,255,3,8,4,33,5,11,18,19,39,20,21,22,41,50,65,23,24,25,26,44,51,52,66,71,72,27,74,28,29,46,30,79,31,32,97,116,116,114,105,98,117,116,101,32,109,97,99,114,111,115,32,110,111,116,32,105,109,
112,108,101,109,101,110,116,101,100,0,37,115,58,37,115,0,0,108,105,110,101,0,37,100,32,37,49,91,34,93,37,110,0,105,110,112,117,116,0,115,121,110,116,97,120,32,97,109,98,105,103,117,105,116,121,32,45,32,98,97,100,108,121,32,100,101,108,105,109,105,116,101,100,32,110,117,109,98,101,114,32,39,0,39,32,105,110,32,108,105,110,101,32,37,100,32,111,102,32,0,32,115,112,108,105,116,115,32,105,110,116,111,32,116,119,111,32,116,111,107,101,110,115,10,0,92,92,0,102,97,116,97,108,32,102,108,101,120,32,115,99,97,
110,110,101,114,32,105,110,116,101,114,110,97,108,32,101,114,114,111,114,45,45,101,110,100,32,111,102,32,98,117,102,102,101,114,32,109,105,115,115,101,100,0,102,97,116,97,108,32,101,114,114,111,114,32,45,32,115,99,97,110,110,101,114,32,105,110,112,117,116,32,98,117,102,102,101,114,32,111,118,101,114,102,108,111,119,0,111,117,116,32,111,102,32,100,121,110,97,109,105,99,32,109,101,109,111,114,121,32,105,110,32,97,97,103,95,103,101,116,95,110,101,120,116,95,98,117,102,102,101,114,40,41,0,102,97,116,
97,108,32,102,108,101,120,32,115,99,97,110,110,101,114,32,105,110,116,101,114,110,97,108,32,101,114,114,111,114,45,45,110,111,32,97,99,116,105,111,110,32,102,111,117,110,100,0,111,117,116,32,111,102,32,100,121,110,97,109,105,99,32,109,101,109,111,114,121,32,105,110,32,97,97,103,95,99,114,101,97,116,101,95,98,117,102,102,101,114,40,41,0,58,32,0,32,105,110,32,108,105,110,101,32,37,100,32,110,101,97,114,32,39,0,39,10,0,102,108,101,120,32,115,99,97,110,110,101,114,32,112,117,115,104,45,98,97,99,107,32,
111,118,101,114,102,108,111,119,0,37,115,10,0,111,117,116,32,111,102,32,100,121,110,97,109,105,99,32,109,101,109,111,114,121,32,105,110,32,97,97,103,101,110,115,117,114,101,95,98,117,102,102,101,114,95,115,116,97,99,107,40,41,0,46,37,100,0,110,111,110,97,109,101,46,103,118,0,67,111,117,108,100,32,110,111,116,32,111,112,101,110,32,34,37,115,34,32,102,111,114,32,119,114,105,116,105,110,103,32,58,32,37,115,10,0,78,111,32,108,105,98,122,32,115,117,112,112,111,114,116,46,10,0,109,101,109,111,114,121,32,
97,108,108,111,99,97,116,105,111,110,32,102,97,105,108,117,114,101,10,0,103,118,119,114,105,116,101,95,110,111,95,122,32,112,114,111,98,108,101,109,32,37,100,10,0,78,111,32,108,105,98,122,32,115,117,112,112,111,114,116,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,45,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,46,57,57,0,103,118,117,115,101,114,115,104,97,112,101,46,99,0,103,118,117,115,101,114,115,104,97,112,101,95,102,105,110,100,0,103,118,117,115,101,114,115,104,97,112,101,95,102,105,108,101,95,
97,99,99,101,115,115,0,70,105,108,101,110,97,109,101,32,34,37,115,34,32,105,115,32,117,110,115,97,102,101,10,0,37,115,32,119,104,105,108,101,32,111,112,101,110,105,110,103,32,37,115,10,0,117,115,45,62,102,0,103,118,117,115,101,114,115,104,97,112,101,95,111,112,101,110,0,60,115,118,103,0,87,69,66,80,0,119,101,98,112,0,40,108,105,98,41,0,34,37,115,34,32,119,97,115,32,110,111,116,32,102,111,117,110,100,32,97,115,32,97,32,102,105,108,101,32,111,114,32,97,115,32,97,32,115,104,97,112,101,32,108,105,98,
114,97,114,121,32,109,101,109,98,101,114,10,0,1,208,209,210,211,212,213,214,215,216,217,0,37,37,66,111,117,110,100,105,110,103,66,111,120,58,0,40,91,97,45,122,93,91,97,45,122,65,45,90,93,42,41,61,34,40,91,94,34,93,42,41,34,0,99,97,110,110,111,116,32,99,111,109,112,105,108,101,32,114,101,103,117,108,97,114,32,101,120,112,114,101,115,115,105,111,110,32,37,115,0,37,108,102,37,50,115,0,112,116,0,118,105,101,119,66,111,120,0,37,108,102,32,37,108,102,32,37,108,102,32,37,108,102,0,47,77,101,100,105,97,66,
111,120,0,105,110,0,112,120,0,112,99,0,34,0,99,109,0,109,109,0,137,80,78,71,13,10,26,10,0,112,110,103,0,37,33,80,83,45,65,100,111,98,101,45,0,66,77,0,98,109,112,0,71,73,70,56,0,103,105,102,0,255,216,255,224,0,106,112,101,103,0,37,80,68,70,45,0,112,100,102,0,197,208,211,198,0,101,112,115,0,60,63,120,109,108,0,120,109,108,0,82,73,70,70,0,114,105,102,102,0,0,0,1,0,0,105,99,111,0,37,100,32,37,100,32,37,100,32,37,100,0,76,97,121,111,117,116,32,119,97,115,32,110,111,116,32,100,111,110,101,10,0,102,97,105,
108,117,114,101,32,109,97,108,108,111,99,39,105,110,103,32,102,111,114,32,114,101,115,117,108,116,32,115,116,114,105,110,103,0,99,99,103,114,97,112,104,105,110,102,111,0,99,99,103,110,111,100,101,105,110,102,111,0,100,103,0,40,37,52,108,100,41,32,37,55,108,100,32,110,111,100,101,115,32,37,55,108,100,32,101,100,103,101,115,10,0,32,32,32,32,32,32,32,37,55,100,32,110,111,100,101,115,32,37,55,100,32,101,100,103,101,115,32,37,55,108,100,32,99,111,109,112,111,110,101,110,116,115,32,37,115,10,0,69,114,114,
111,114,58,32,110,111,100,101,32,34,37,115,34,32,98,101,108,111,110,103,115,32,116,111,32,116,119,111,32,110,111,110,45,110,101,115,116,101,100,32,99,108,117,115,116,101,114,115,32,34,37,115,34,32,97,110,100,32,34,37,115,34,10,0,103,99,58,32,79,117,116,32,111,102,32,109,101,109,111,114,121,10,0,95,99,99,95,0,98,98,91,37,115,93,32,37,46,53,103,32,37,46,53,103,32,37,46,53,103,32,37,46,53,103,10,0,115,116,101,112,32,115,105,122,101,32,61,32,37,100,10,0,37,115,32,110,111,46,32,99,101,108,108,115,32,37,
100,32,87,32,37,100,32,72,32,37,100,10,0,32,32,37,100,32,37,100,32,99,101,108,108,10,0,99,99,32,40,37,100,32,99,101,108,108,115,41,32,97,116,32,40,37,100,44,37,100,41,10,0,112,111,115,91,37,100,93,32,37,100,32,37,100,10,0,115,111,114,116,118,0,112,105,110,102,111,0,112,97,99,107,46,99,0,103,101,116,80,97,99,107,73,110,102,111,0,32,32,109,97,114,103,105,110,32,37,100,10,0,112,97,99,107,109,111,100,101,0,112,97,114,115,101,80,97,99,107,77,111,100,101,73,110,102,111,0,97,114,114,97,121,0,97,115,112,
101,99,116,0,37,102,0,112,97,99,107,32,105,110,102,111,58,10,0,117,110,100,101,102,105,110,101,100,0,32,32,109,111,100,101,32,32,32,37,115,10,0,32,32,97,115,112,101,99,116,32,37,102,10,0,32,32,115,105,122,101,32,32,32,37,100,10,0,32,32,102,108,97,103,115,32,32,37,100,10,0,112,97,99,107,0,114,111,119,32,109,97,106,111,114,0,99,111,108,117,109,110,32,109,97,106,111,114,0,97,114,114,97,121,32,112,97,99,107,105,110,103,58,32,37,115,32,37,100,32,114,111,119,115,32,37,100,32,99,111,108,117,109,110,115,
10,0,99,99,32,40,37,100,32,99,101,108,108,115,41,32,97,116,32,40,37,100,44,37,100,41,32,40,37,100,44,37,100,41,10,0,108,105,98,112,97,99,107,58,32,100,105,115,99,32,61,32,37,102,32,40,32,60,32,48,41,10,0,80,97,99,107,105,110,103,58,32,99,111,109,112,117,116,101,32,103,114,105,100,32,115,105,122,101,10,0,97,32,37,102,32,98,32,37,102,32,99,32,37,102,32,100,32,37,102,32,114,32,37,102,10,0,114,111,111,116,32,37,100,32,40,37,102,41,32,37,100,32,40,37,102,41,10,0,32,114,49,32,37,102,32,114,50,32,37,102,
10,0,65,114,114,111,119,32,116,121,112,101,32,34,37,115,34,32,117,110,107,110,111,119,110,32,45,32,105,103,110,111,114,105,110,103,10,0,110,111,114,109,97,108,0,99,114,111,119,0,116,101,101,0,100,111,116,0,105,110,118,0,118,101,101,0,112,101,110,0,109,112,116,121,0,99,117,114,118,101,0,108,0,104,97,108,102,0,105,110,118,101,109,112,116,121,0,95,98,97,99,107,103,114,111,117,110,100,0,95,100,114,97,119,95,0,67,111,117,108,100,32,110,111,116,32,112,97,114,115,101,32,34,95,98,97,99,107,103,114,111,117,
110,100,34,32,97,116,116,114,105,98,117,116,101,32,105,110,32,103,114,97,112,104,32,37,115,10,0,32,32,34,37,115,34,10,0,110,111,32,109,101,109,111,114,121,32,102,114,111,109,32,122,109,97,108,108,111,99,40,41,10,0,111,98,106,0,101,109,105,116,46,99,0,112,111,112,95,111,98,106,95,115,116,97,116,101,0,99,108,117,115,116,0,37,108,100,0,108,110,114,108,97,121,101,114,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,105,110,32,37,115,32,111,117,116,112,117,116,10,0,99,111,108,111,114,115,99,
104,101,109,101,0,103,114,97,100,105,101,110,116,32,112,101,110,32,99,111,108,111,114,115,32,110,111,116,32,121,101,116,32,115,117,112,112,111,114,116,101,100,46,10,0,73,109,97,103,101,115,32,117,110,115,117,112,112,111,114,116,101,100,32,105,110,32,34,98,97,99,107,103,114,111,117,110,100,34,32,97,116,116,114,105,98,117,116,101,10,0,105,110,32,99,108,117,115,116,101,114,32,37,115,10,0,77,111,114,101,32,116,104,97,110,32,50,32,99,111,108,111,114,115,32,115,112,101,99,105,102,105,101,100,32,102,111,
114,32,97,32,103,114,97,100,105,101,110,116,32,45,32,105,103,110,111,114,105,110,103,32,114,101,109,97,105,110,105,110,103,10,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,110,101,115,116,105,110,103,32,110,111,116,32,97,108,108,111,119,101,100,32,105,110,32,115,116,121,108,101,58,32,37,
115,10,0,117,110,109,97,116,99,104,101,100,32,39,41,39,32,105,110,32,115,116,121,108,101,58,32,37,115,10,0,116,114,117,110,99,97,116,105,110,103,32,115,116,121,108,101,32,39,37,115,39,10,0,117,110,109,97,116,99,104,101,100,32,39,40,39,32,105,110,32,115,116,121,108,101,58,32,37,115,10,0,67,0,76,97,121,111,117,116,32,119,97,115,32,110,111,116,32,100,111,110,101,46,32,32,77,105,115,115,105,110,103,32,108,97,121,111,117,116,32,112,108,117,103,105,110,115,63,32,10,0,103,118,82,101,110,100,101,114,74,111,
98,115,32,37,115,58,32,37,46,50,102,32,115,101,99,115,46,10,0,115,112,108,45,62,115,105,122,101,32,62,32,48,0,105,110,105,116,95,115,112,108,105,110,101,115,95,98,98,0,112,97,100,0,66,76,0,112,97,103,101,100,105,114,0,108,97,121,101,114,115,0,108,97,121,101,114,115,101,112,0,58,9,32,0,108,97,121,101,114,108,105,115,116,115,101,112,0,44,0,84,104,101,32,99,104,97,114,97,99,116,101,114,32,39,37,99,39,32,97,112,112,101,97,114,115,32,105,110,32,98,111,116,104,32,116,104,101,32,108,97,121,101,114,115,101,
112,32,97,110,100,32,108,97,121,101,114,108,105,115,116,115,101,112,32,97,116,116,114,105,98,117,116,101,115,32,45,32,108,97,121,101,114,108,105,115,116,115,101,112,32,105,103,110,111,114,101,100,46,10,0,108,97,121,101,114,115,101,108,101,99,116,0,84,104,101,32,108,97,121,101,114,115,101,108,101,99,116,32,97,116,116,114,105,98,117,116,101,32,34,37,115,34,32,100,111,101,115,32,110,111,116,32,109,97,116,99,104,32,97,110,121,32,108,97,121,101,114,32,115,112,101,99,105,102,101,100,32,98,121,32,116,104,
101,32,108,97,121,101,114,115,32,97,116,116,114,105,98,117,116,101,32,45,32,105,103,110,111,114,101,100,46,10,0,108,97,121,111,117,116,32,119,97,115,32,110,111,116,32,100,111,110,101,10,0,114,101,110,100,101,114,101,114,32,102,111,114,32,37,115,32,105,115,32,117,110,97,118,97,105,108,97,98,108,101,10,0,111,117,116,112,117,116,111,114,100,101,114,0,111,100,101,115,102,105,114,115,116,0,100,103,101,115,102,105,114,115,116,0,118,105,101,119,112,111,114,116,0,37,108,102,44,37,108,102,44,37,108,102,44,
39,37,91,94,39,93,39,0,37,108,102,44,37,108,102,44,37,108,102,44,37,91,94,44,93,37,115,0,37,108,102,44,37,108,102,44,37,108,102,44,37,108,102,44,37,108,102,0,112,97,103,101,100,105,114,61,37,115,32,105,103,110,111,114,101,100,10,0,115,111,108,105,100,0,0,115,101,116,108,105,110,101,119,105,100,116,104,0,49,0,0,98,122,46,115,105,122,101,32,62,32,48,0,98,101,122,105,101,114,95,98,98,0,98,122,46,115,105,122,101,32,37,32,51,32,61,61,32,49,0,97,108,108,0,101,100,103,101,104,114,101,102,0,101,100,103,101,
85,82,76,0,108,97,98,101,108,104,114,101,102,0,108,97,98,101,108,85,82,76,0,116,97,105,108,104,114,101,102,0,116,97,105,108,85,82,76,0,104,101,97,100,104,114,101,102,0,104,101,97,100,85,82,76,0,101,100,103,101,116,97,114,103,101,116,0,108,97,98,101,108,116,97,114,103,101,116,0,116,97,105,108,116,97,114,103,101,116,0,104,101,97,100,116,97,114,103,101,116,0,101,100,103,101,116,111,111,108,116,105,112,0,108,97,98,101,108,116,111,111,108,116,105,112,0,116,97,105,108,116,111,111,108,116,105,112,0,104,
101,97,100,116,111,111,108,116,105,112,0,32,45,62,32,0,32,45,45,32,0,105,110,32,101,100,103,101,32,37,115,37,115,37,115,10,0,102,111,114,119,97,114,100,0,98,97,99,107,0,101,109,105,116,95,101,100,103,101,95,108,97,98,101,108,0,37,115,45,37,115,0,84,111,116,97,108,32,115,105,122,101,32,62,32,49,32,105,110,32,34,37,115,34,32,99,111,108,111,114,32,115,112,101,99,32,0,73,108,108,101,103,97,108,32,108,101,110,103,116,104,32,118,97,108,117,101,32,105,110,32,34,37,115,34,32,99,111,108,111,114,32,97,116,
116,114,105,98,117,116,101,32,0,112,97,103,101,37,100,44,37,100,95,0,0,0,0,37,108,102,0,102,111,110,116,112,97,116,104,0,68,79,84,70,79,78,84,80,65,84,72,0,71,68,70,79,78,84,80,65,84,72,0,99,104,97,114,115,101,116,0,117,116,102,45,56,0,108,97,116,105,110,45,49,0,108,97,116,105,110,49,0,108,49,0,73,83,79,45,56,56,53,57,45,49,0,73,83,79,95,56,56,53,57,45,49,0,73,83,79,56,56,53,57,45,49,0,73,83,79,45,73,82,45,49,48,48,0,98,105,103,45,53,0,98,105,103,53,0,117,116,102,56,0,85,110,115,117,112,112,111,114,
116,101,100,32,99,104,97,114,115,101,116,32,34,37,115,34,32,45,32,97,115,115,117,109,105,110,103,32,117,116,102,45,56,10,0,105,109,97,103,101,112,97,116,104,0,113,117,97,110,116,117,109,0,114,97,110,107,100,105,114,0,76,82,0,66,84,0,82,76,0,110,111,100,101,115,101,112,0,114,97,110,107,115,101,112,0,101,113,117,97,108,108,121,0,115,104,111,119,98,111,120,101,115,0,102,111,110,116,110,97,109,101,115,0,114,97,116,105,111,0,97,117,116,111,0,99,111,109,112,114,101,115,115,0,101,120,112,97,110,100,0,102,
105,108,108,0,115,105,122,101,0,112,97,103,101,0,99,101,110,116,101,114,0,114,111,116,97,116,101,0,111,114,105,101,110,116,97,116,105,111,110,0,108,97,110,100,115,99,97,112,101,0,99,108,117,115,116,101,114,114,97,110,107,0,99,111,110,99,101,110,116,114,97,116,101,0,100,112,105,0,114,101,115,111,108,117,116,105,111,110,0,111,114,100,101,114,105,110,103,0,102,105,108,108,99,111,108,111,114,0,102,111,110,116,115,105,122,101,0,102,111,110,116,110,97,109,101,0,102,111,110,116,99,111,108,111,114,0,120,
108,97,98,101,108,0,112,101,110,119,105,100,116,104,0,112,101,114,105,112,104,101,114,105,101,115,0,115,107,101,119,0,100,105,115,116,111,114,116,105,111,110,0,110,111,106,117,115,116,105,102,121,0,108,97,121,101,114,0,103,114,111,117,112,0,99,111,109,109,101,110,116,0,118,101,114,116,105,99,101,115,0,122,0,119,101,105,103,104,116,0,108,97,98,101,108,102,108,111,97,116,0,100,105,114,0,97,114,114,111,119,104,101,97,100,0,97,114,114,111,119,116,97,105,108,0,104,101,97,100,108,97,98,101,108,0,116,97,
105,108,108,97,98,101,108,0,108,97,98,101,108,102,111,110,116,115,105,122,101,0,108,97,98,101,108,102,111,110,116,110,97,109,101,0,108,97,98,101,108,102,111,110,116,99,111,108,111,114,0,108,97,98,101,108,100,105,115,116,97,110,99,101,0,108,97,98,101,108,97,110,103,108,101,0,109,105,110,108,101,110,0,100,101,99,111,114,97,116,101,0,97,114,114,111,119,115,105,122,101,0,99,111,110,115,116,114,97,105,110,116,0,116,97,105,108,99,108,105,112,0,104,101,97,100,99,108,105,112,0,108,97,98,101,108,106,117,115,
116,0,85,110,115,117,112,112,111,114,116,101,100,32,99,104,97,114,115,101,116,32,118,97,108,117,101,32,37,100,10,0,85,84,70,45,56,0,66,73,71,45,53,0,108,111,99,97,108,0,103,108,111,98,97,108,0,37,108,102,44,37,108,102,37,99,0,37,108,102,37,99,0,103,100,0,112,115,0,115,118,103,0,105,110,32,108,97,98,101,108,32,111,102,32,103,114,97,112,104,32,37,115,10,0,105,110,32,108,97,98,101,108,32,111,102,32,110,111,100,101,32,37,115,10,0,105,110,32,108,97,98,101,108,32,111,102,32,101,100,103,101,32,37,115,32,
37,115,32,37,115,10,0,107,105,110,100,32,61,61,32,76,84,95,78,79,78,69,0,108,97,98,101,108,115,46,99,0,109,97,107,101,95,108,97,98,101,108,0,38,113,117,111,116,59,0,38,35,49,54,48,59,0,38,97,109,112,59,0,38,35,51,57,59,0,38,35,52,53,59,0,38,103,116,59,0,38,108,116,59,0,92,76,0,92,71,0,92,69,0,92,72,0,92,84,0,37,115,32,37,100,32,110,111,100,101,115,32,37,100,32,101,100,103,101,115,32,109,97,120,105,116,101,114,61,37,100,32,98,97,108,97,110,99,101,61,37,100,10,0,110,101,116,119,111,114,107,32,115,105,
109,112,108,101,120,58,32,0,116,114,111,117,98,108,101,32,105,110,32,105,110,105,116,95,114,97,110,107,10,0,9,37,115,32,37,100,10,0,117,112,100,97,116,101,58,32,109,105,115,109,97,116,99,104,101,100,32,108,99,97,32,105,110,32,116,114,101,101,117,112,100,97,116,101,115,10,0,37,100,32,0,37,115,37,100,32,110,111,100,101,115,32,37,100,32,101,100,103,101,115,32,37,100,32,105,116,101,114,32,37,46,50,102,32,115,101,99,10,0,115,101,97,114,99,104,115,105,122,101,0,97,100,100,95,116,114,101,101,95,101,100,
103,101,58,32,109,105,115,115,105,110,103,32,116,114,101,101,32,101,100,103,101,10,0,97,100,100,95,116,114,101,101,95,101,100,103,101,58,32,101,109,112,116,121,32,111,117,116,101,100,103,101,32,108,105,115,116,10,0,97,100,100,95,116,114,101,101,95,101,100,103,101,58,32,101,109,112,116,121,32,105,110,101,100,103,101,32,108,105,115,116,10,0,103,114,97,112,104,32,0,37,46,53,103,0,32,0,0,0,110,111,100,101,32,0,115,116,111,112,10,0,112,111,115,0,114,101,99,116,115,0,120,108,112,0,108,112,0,104,101,97,
100,95,108,112,0,116,97,105,108,95,108,112,0,108,119,105,100,116,104,0,108,104,101,105,103,104,116,0,98,98,0,37,46,53,103,44,37,46,53,103,44,37,46,53,103,0,44,37,46,53,103,0,37,46,53,103,44,37,46,53,103,0,115,97,109,112,108,101,112,111,105,110,116,115,0,37,46,53,103,32,37,46,53,103,0,115,44,37,46,53,103,44,37,46,53,103,32,0,101,44,37,46,53,103,44,37,46,53,103,32,0,37,46,53,103,44,37,46,53,103,44,37,46,53,103,44,37,46,53,103,0,37,46,50,102,0,37,46,53,103,44,37,46,53,103,44,37,46,53,103,44,37,46,53,
103,32,0,0,110,111,32,112,111,115,105,116,105,111,110,32,102,111,114,32,101,100,103,101,32,119,105,116,104,32,108,97,98,101,108,32,37,115,0,110,111,32,112,111,115,105,116,105,111,110,32,102,111,114,32,101,100,103,101,32,119,105,116,104,32,116,97,105,108,32,108,97,98,101,108,32,37,115,0,110,111,32,112,111,115,105,116,105,111,110,32,102,111,114,32,101,100,103,101,32,119,105,116,104,32,104,101,97,100,32,108,97,98,101,108,32,37,115,0,110,111,32,112,111,115,105,116,105,111,110,32,102,111,114,32,101,100,
103,101,32,119,105,116,104,32,120,108,97,98,101,108,32,37,115,0,102,111,114,99,101,108,97,98,101,108,115,0,37,100,32,111,98,106,115,32,37,100,32,120,108,97,98,101,108,115,32,102,111,114,99,101,61,37,100,32,98,98,61,40,37,46,48,50,102,44,37,46,48,50,102,41,32,40,37,46,48,50,102,44,37,46,48,50,102,41,10,0,111,98,106,101,99,116,115,10,0,32,91,37,100,93,32,40,37,46,48,50,102,44,37,46,48,50,102,41,32,40,37,46,48,50,102,44,37,46,48,50,102,41,32,37,112,32,34,37,115,34,10,0,120,108,97,98,101,108,115,10,0,
32,91,37,100,93,32,37,112,32,115,101,116,32,37,100,32,40,37,46,48,50,102,44,37,46,48,50,102,41,32,40,37,46,48,50,102,44,37,46,48,50,102,41,32,37,115,10,0,37,100,32,111,117,116,32,111,102,32,37,100,32,108,97,98,101,108,115,32,112,111,115,105,116,105,111,110,101,100,46,10,0,37,100,32,111,117,116,32,111,102,32,37,100,32,101,120,116,101,114,105,111,114,32,108,97,98,101,108,115,32,112,111,115,105,116,105,111,110,101,100,46,10,0,108,111,115,116,32,37,115,32,37,115,32,101,100,103,101,10,0,47,112,97,116,
104,98,111,120,32,123,10,32,32,32,32,47,88,32,101,120,99,104,32,110,101,103,32,37,46,53,103,32,115,117,98,32,100,101,102,10,32,32,32,32,47,89,32,101,120,99,104,32,37,46,53,103,32,115,117,98,32,100,101,102,10,32,32,32,32,47,120,32,101,120,99,104,32,110,101,103,32,37,46,53,103,32,115,117,98,32,100,101,102,10,32,32,32,32,47,121,32,101,120,99,104,32,37,46,53,103,32,115,117,98,32,100,101,102,10,32,32,32,32,110,101,119,112,97,116,104,32,120,32,121,32,109,111,118,101,116,111,10,32,32,32,32,88,32,121,32,
108,105,110,101,116,111,10,32,32,32,32,88,32,89,32,108,105,110,101,116,111,10,32,32,32,32,120,32,89,32,108,105,110,101,116,111,10,32,32,32,32,99,108,111,115,101,112,97,116,104,32,115,116,114,111,107,101,10,125,32,100,101,102,10,0,47,112,97,116,104,98,111,120,32,123,10,32,32,32,32,47,89,32,101,120,99,104,32,37,46,53,103,32,115,117,98,32,100,101,102,10,32,32,32,32,47,88,32,101,120,99,104,32,37,46,53,103,32,115,117,98,32,100,101,102,10,32,32,32,32,47,121,32,101,120,99,104,32,37,46,53,103,32,115,117,
98,32,100,101,102,10,32,32,32,32,47,120,32,101,120,99,104,32,37,46,53,103,32,115,117,98,32,100,101,102,10,32,32,32,32,110,101,119,112,97,116,104,32,120,32,121,32,109,111,118,101,116,111,10,32,32,32,32,88,32,121,32,108,105,110,101,116,111,10,32,32,32,32,88,32,89,32,108,105,110,101,116,111,10,32,32,32,32,120,32,89,32,108,105,110,101,116,111,10,32,32,32,32,99,108,111,115,101,112,97,116,104,32,115,116,114,111,107,101,10,32,125,32,100,101,102,10,47,100,98,103,115,116,97,114,116,32,123,32,103,115,97,118,
101,32,37,46,53,103,32,37,46,53,103,32,116,114,97,110,115,108,97,116,101,32,125,32,100,101,102,10,47,97,114,114,111,119,108,101,110,103,116,104,32,49,48,32,100,101,102,10,47,97,114,114,111,119,119,105,100,116,104,32,97,114,114,111,119,108,101,110,103,116,104,32,50,32,100,105,118,32,100,101,102,10,47,97,114,114,111,119,104,101,97,100,32,123,10,32,32,32,32,103,115,97,118,101,10,32,32,32,32,114,111,116,97,116,101,10,32,32,32,32,99,117,114,114,101,110,116,112,111,105,110,116,10,32,32,32,32,110,101,119,
112,97,116,104,10,32,32,32,32,109,111,118,101,116,111,10,32,32,32,32,97,114,114,111,119,108,101,110,103,116,104,32,97,114,114,111,119,119,105,100,116,104,32,50,32,100,105,118,32,114,108,105,110,101,116,111,10,32,32,32,32,48,32,97,114,114,111,119,119,105,100,116,104,32,110,101,103,32,114,108,105,110,101,116,111,10,32,32,32,32,99,108,111,115,101,112,97,116,104,32,102,105,108,108,10,32,32,32,32,103,114,101,115,116,111,114,101,10,125,32,98,105,110,100,32,100,101,102,10,47,109,97,107,101,97,114,114,111,
119,32,123,10,32,32,32,32,99,117,114,114,101,110,116,112,111,105,110,116,32,101,120,99,104,32,112,111,112,32,115,117,98,32,101,120,99,104,32,99,117,114,114,101,110,116,112,111,105,110,116,32,112,111,112,32,115,117,98,32,97,116,97,110,10,32,32,32,32,97,114,114,111,119,104,101,97,100,10,125,32,98,105,110,100,32,100,101,102,10,47,112,111,105,110,116,32,123,32,32,32,32,110,101,119,112,97,116,104,32,32,32,32,50,32,48,32,51,54,48,32,97,114,99,32,102,105,108,108,125,32,100,101,102,47,109,97,107,101,118,
101,99,32,123,10,32,32,32,32,47,89,32,101,120,99,104,32,100,101,102,10,32,32,32,32,47,88,32,101,120,99,104,32,100,101,102,10,32,32,32,32,47,121,32,101,120,99,104,32,100,101,102,10,32,32,32,32,47,120,32,101,120,99,104,32,100,101,102,10,32,32,32,32,110,101,119,112,97,116,104,32,120,32,121,32,109,111,118,101,116,111,10,32,32,32,32,88,32,89,32,108,105,110,101,116,111,32,115,116,114,111,107,101,10,32,32,32,32,88,32,89,32,109,111,118,101,116,111,10,32,32,32,32,120,32,121,32,109,97,107,101,97,114,114,111,
119,10,125,32,100,101,102,10,0,99,111,117,108,100,110,39,116,32,111,112,101,110,32,101,112,115,102,32,102,105,108,101,32,37,115,10,0,37,37,37,37,66,111,117,110,100,105,110,103,66,111,120,58,32,37,100,32,37,100,32,37,100,32,37,100,0,114,101,97,100,0,66,111,117,110,100,105,110,103,66,111,120,32,110,111,116,32,102,111,117,110,100,32,105,110,32,101,112,115,102,32,102,105,108,101,32,37,115,10,0,115,104,97,112,101,102,105,108,101,32,110,111,116,32,115,101,116,32,111,114,32,110,111,116,32,102,111,117,110,
100,32,102,111,114,32,101,112,115,102,32,110,111,100,101,32,37,115,10,0,99,97,110,39,116,32,102,105,110,100,32,108,105,98,114,97,114,121,32,102,105,108,101,32,37,115,10,0,99,97,110,39,116,32,111,112,101,110,32,108,105,98,114,97,114,121,32,102,105,108,101,32,37,115,10,0,69,79,70,0,66,69,71,73,78,0,69,78,68,0,84,82,65,73,76,69,82,0,47,117,115,101,114,95,115,104,97,112,101,95,37,100,32,123,10,0,37,37,66,101,103,105,110,68,111,99,117,109,101,110,116,58,10,0,37,37,69,110,100,68,111,99,117,109,101,110,
116,10,0,125,32,98,105,110,100,32,100,101,102,10,0,85,84,70,45,56,32,105,110,112,117,116,32,117,115,101,115,32,110,111,110,45,76,97,116,105,110,49,32,99,104,97,114,97,99,116,101,114,115,32,119,104,105,99,104,32,99,97,110,110,111,116,32,98,101,32,104,97,110,100,108,101,100,32,98,121,32,116,104,105,115,32,80,111,115,116,83,99,114,105,112,116,32,100,114,105,118,101,114,10,0,114,111,117,116,101,115,112,108,105,110,101,115,105,110,105,116,58,32,99,97,110,110,111,116,32,97,108,108,111,99,97,116,101,32,
112,115,10,0,114,111,117,116,101,115,112,108,105,110,101,115,58,32,37,100,32,101,100,103,101,115,44,32,37,100,32,98,111,120,101,115,32,37,46,50,102,32,115,101,99,10,0,105,110,32,114,111,117,116,101,115,112,108,105,110,101,115,44,32,99,97,110,110,111,116,32,102,105,110,100,32,78,79,82,77,65,76,32,101,100,103,101,10,0,105,110,32,99,104,101,99,107,112,97,116,104,44,32,98,111,120,32,48,32,104,97,115,32,76,76,32,99,111,111,114,100,32,62,32,85,82,32,99,111,111,114,100,10,0,105,110,32,99,104,101,99,107,
112,97,116,104,44,32,98,111,120,32,37,100,32,104,97,115,32,76,76,32,99,111,111,114,100,32,62,32,85,82,32,99,111,111,114,100,10,0,105,110,32,99,104,101,99,107,112,97,116,104,44,32,98,111,120,101,115,32,37,100,32,97,110,100,32,37,100,32,100,111,110,39,116,32,116,111,117,99,104,10,0,105,110,32,99,104,101,99,107,112,97,116,104,44,32,115,116,97,114,116,32,112,111,114,116,32,110,111,116,32,105,110,32,102,105,114,115,116,32,98,111,120,10,0,105,110,32,99,104,101,99,107,112,97,116,104,44,32,101,110,100,32,
112,111,114,116,32,110,111,116,32,105,110,32,108,97,115,116,32,98,111,120,10,0,105,110,32,114,111,117,116,101,115,112,108,105,110,101,115,44,32,105,108,108,101,103,97,108,32,118,97,108,117,101,115,32,111,102,32,112,114,101,118,32,37,100,32,97,110,100,32,110,101,120,116,32,37,100,44,32,108,105,110,101,32,37,100,10,0,105,110,32,114,111,117,116,101,115,112,108,105,110,101,115,44,32,101,100,103,101,32,105,115,32,97,32,108,111,111,112,32,97,116,32,37,115,10,0,105,110,32,114,111,117,116,101,115,112,108,
105,110,101,115,44,32,80,115,104,111,114,116,101,115,116,112,97,116,104,32,102,97,105,108,101,100,10,0,105,110,32,114,111,117,116,101,115,112,108,105,110,101,115,44,32,80,114,111,117,116,101,115,112,108,105,110,101,32,102,97,105,108,101,100,10,0,85,110,97,98,108,101,32,116,111,32,114,101,99,108,97,105,109,32,98,111,120,32,115,112,97,99,101,32,105,110,32,115,112,108,105,110,101,32,114,111,117,116,105,110,103,32,102,111,114,32,101,100,103,101,32,34,37,115,34,32,45,62,32,34,37,115,34,46,32,83,111,109,
101,116,104,105,110,103,32,105,115,32,112,114,111,98,97,98,108,121,32,115,101,114,105,111,117,115,108,121,32,119,114,111,110,103,46,10,0,37,100,32,98,111,120,101,115,58,10,0,37,100,32,40,37,46,53,103,44,32,37,46,53,103,41,44,32,40,37,46,53,103,44,32,37,46,53,103,41,10,0,99,111,110,115,116,114,97,105,110,101,100,0,110,111,116,32,99,111,110,115,116,114,97,105,110,101,100,0,115,116,97,114,116,32,112,111,114,116,58,32,40,37,46,53,103,44,32,37,46,53,103,41,44,32,116,97,110,103,101,110,116,32,97,110,103,
108,101,58,32,37,46,53,103,44,32,37,115,10,0,101,110,100,32,112,111,114,116,58,32,40,37,46,53,103,44,32,37,46,53,103,41,44,32,116,97,110,103,101,110,116,32,97,110,103,108,101,58,32,37,46,53,103,44,32,37,115,10,0,99,97,110,110,111,116,32,114,101,45,97,108,108,111,99,97,116,101,32,112,115,10,0,115,105,100,101,115,32,61,61,32,52,0,115,104,97,112,101,115,46,99,0,114,111,117,110,100,95,99,111,114,110,101,114,115,0,115,104,97,112,101,102,105,108,101,0,101,112,115,102,0,99,117,115,116,111,109,0,117,115,
105,110,103,32,37,115,32,102,111,114,32,117,110,107,110,111,119,110,32,115,104,97,112,101,32,37,115,10,0,115,0,101,0,119,0,112,111,108,121,103,111,110,0,111,118,97,108,0,99,105,114,99,108,101,0,112,111,105,110,116,0,101,103,103,0,116,114,105,97,110,103,108,101,0,112,108,97,105,110,116,101,120,116,0,100,105,97,109,111,110,100,0,116,114,97,112,101,122,105,117,109,0,112,97,114,97,108,108,101,108,111,103,114,97,109,0,104,111,117,115,101,0,112,101,110,116,97,103,111,110,0,104,101,120,97,103,111,110,0,
115,101,112,116,97,103,111,110,0,111,99,116,97,103,111,110,0,110,111,116,101,0,116,97,98,0,102,111,108,100,101,114,0,98,111,120,51,100,0,99,111,109,112,111,110,101,110,116,0,114,101,99,116,0,114,101,99,116,97,110,103,108,101,0,115,113,117,97,114,101,0,100,111,117,98,108,101,99,105,114,99,108,101,0,100,111,117,98,108,101,111,99,116,97,103,111,110,0,116,114,105,112,108,101,111,99,116,97,103,111,110,0,105,110,118,116,114,105,97,110,103,108,101,0,105,110,118,116,114,97,112,101,122,105,117,109,0,105,110,
118,104,111,117,115,101,0,117,110,100,101,114,108,105,110,101,0,77,100,105,97,109,111,110,100,0,77,115,113,117,97,114,101,0,77,99,105,114,99,108,101,0,112,114,111,109,111,116,101,114,0,99,100,115,0,116,101,114,109,105,110,97,116,111,114,0,117,116,114,0,105,110,115,117,108,97,116,111,114,0,114,105,98,111,115,105,116,101,0,114,110,97,115,116,97,98,0,112,114,111,116,101,97,115,101,115,105,116,101,0,112,114,111,116,101,105,110,115,116,97,98,0,112,114,105,109,101,114,115,105,116,101,0,114,101,115,116,
114,105,99,116,105,111,110,115,105,116,101,0,102,105,118,101,112,111,118,101,114,104,97,110,103,0,116,104,114,101,101,112,111,118,101,114,104,97,110,103,0,110,111,118,101,114,104,97,110,103,0,97,115,115,101,109,98,108,121,0,115,105,103,110,97,116,117,114,101,0,114,112,114,111,109,111,116,101,114,0,108,97,114,114,111,119,0,114,97,114,114,111,119,0,108,112,114,111,109,111,116,101,114,0,114,101,99,111,114,100,0,77,114,101,99,111,114,100,0,115,116,97,114,0,35,56,48,56,48,56,48,0,35,102,99,102,99,102,
99,0,35,51,48,51,48,51,48,0,35,101,56,101,56,101,56,0,35,101,48,101,48,101,48,0,35,102,48,102,48,102,48,0,35,49,48,49,48,49,48,0,35,102,56,102,56,102,56,0,105,110,32,110,111,100,101,32,37,115,10,0,114,111,117,110,100,101,100,0,100,105,97,103,111,110,97,108,115,0,114,97,100,105,97,108,0,115,116,114,105,112,101,100,0,119,101,100,103,101,100,0,95,0,110,111,100,101,32,37,115,44,32,112,111,114,116,32,37,115,44,32,117,110,114,101,99,111,103,110,105,122],"i8",4,n.q+131846);
D([101,100,32,99,111,109,112,97,115,115,32,112,111,105,110,116,32,39,37,115,39,32,45,32,105,103,110,111,114,101,100,10,0,110,111,100,101,32,37,115,44,32,112,111,114,116,32,37,115,32,117,110,114,101,99,111,103,110,105,122,101,100,10,0,37,46,53,103,32,37,46,53,103,32,116,114,97,110,115,108,97,116,101,32,110,101,119,112,97,116,104,32,117,115,101,114,95,115,104,97,112,101,95,37,100,10,0,105,110,118,105,115,0,0,102,105,108,108,101,100,0,0,98,97,100,32,108,97,98,101,108,32,102,111,114,109,97,116,32,37,
115,10,0,92,78,0,109,97,114,103,105,110,0,37,108,102,44,37,108,102,0,114,101,103,117,108,97,114,0,60,110,105,108,62,0,78,111,32,111,114,32,105,109,112,114,111,112,101,114,32,115,104,97,112,101,102,105,108,101,61,34,37,115,34,32,102,111,114,32,110,111,100,101,32,34,37,115,34,10,0,78,111,32,111,114,32,105,109,112,114,111,112,101,114,32,105,109,97,103,101,61,34,37,115,34,32,102,111,114,32,110,111,100,101,32,34,37,115,34,10,0,108,97,98,101,108,108,111,99,0,110,111,100,101,32,39,37,115,39,44,32,103,114,
97,112,104,32,39,37,115,39,32,115,105,122,101,32,116,111,111,32,115,109,97,108,108,32,102,111,114,32,108,97,98,101,108,10,0,115,112,108,105,110,101,115,46,99,0,98,101,103,105,110,112,97,116,104,0,80,45,62,101,110,100,46,116,104,101,116,97,32,60,32,50,32,42,32,77,95,80,73,0,101,110,100,112,97,116,104,0,109,97,107,101,83,101,108,102,69,100,103,101,0,112,111,108,121,108,105,110,101,77,105,100,112,111,105,110,116,0,103,101,116,115,112,108,105,110,101,112,111,105,110,116,115,58,32,110,111,32,115,112,108,
105,110,101,32,112,111,105,110,116,115,32,97,118,97,105,108,97,98,108,101,32,102,111,114,32,101,100,103,101,32,40,37,115,44,37,115,41,10,0,115,112,97,110,45,62,102,111,110,116,0,116,101,120,116,115,112,97,110,46,99,0,116,101,120,116,115,112,97,110,95,115,105,122,101,0,102,111,110,116,45,62,110,97,109,101,0,99,111,117,114,0,97,114,105,97,108,0,104,101,108,118,101,116,105,99,97,0,91,105,110,116,101,114,110,97,108,32,116,105,109,101,115,93,0,91,105,110,116,101,114,110,97,108,32,99,111,117,114,105,101,
114,93,0,91,105,110,116,101,114,110,97,108,32,97,114,105,97,108,93,0,102,111,110,116,110,97,109,101,58,32,34,37,115,34,32,114,101,115,111,108,118,101,100,32,116,111,58,32,37,115,10,0,102,111,110,116,110,97,109,101,58,32,117,110,97,98,108,101,32,116,111,32,114,101,115,111,108,118,101,32,34,37,115,34,10,0,65,118,97,110,116,71,97,114,100,101,45,66,111,111,107,0,85,82,87,32,71,111,116,104,105,99,32,76,0,98,111,111,107,0,115,97,110,115,45,83,101,114,105,102,0,65,118,97,110,116,71,97,114,100,101,45,66,
111,111,107,79,98,108,105,113,117,101,0,111,98,108,105,113,117,101,0,105,116,97,108,105,99,0,65,118,97,110,116,71,97,114,100,101,45,68,101,109,105,0,100,101,109,105,0,65,118,97,110,116,71,97,114,100,101,45,68,101,109,105,79,98,108,105,113,117,101,0,66,111,111,107,109,97,110,45,68,101,109,105,0,85,82,87,32,66,111,111,107,109,97,110,32,76,0,115,101,114,105,102,0,66,111,111,107,109,97,110,45,68,101,109,105,73,116,97,108,105,99,0,66,111,111,107,109,97,110,45,76,105,103,104,116,0,108,105,103,104,116,0,
66,111,111,107,109,97,110,45,76,105,103,104,116,73,116,97,108,105,99,0,67,111,117,114,105,101,114,0,109,111,110,111,115,112,97,99,101,0,67,111,117,114,105,101,114,45,66,111,108,100,0,67,111,117,114,105,101,114,45,66,111,108,100,79,98,108,105,113,117,101,0,67,111,117,114,105,101,114,45,79,98,108,105,113,117,101,0,72,101,108,118,101,116,105,99,97,0,72,101,108,118,101,116,105,99,97,45,66,111,108,100,0,72,101,108,118,101,116,105,99,97,45,66,111,108,100,79,98,108,105,113,117,101,0,72,101,108,118,101,116,
105,99,97,45,78,97,114,114,111,119,0,99,111,110,100,101,110,115,101,100,0,72,101,108,118,101,116,105,99,97,45,78,97,114,114,111,119,45,66,111,108,100,0,72,101,108,118,101,116,105,99,97,45,78,97,114,114,111,119,45,66,111,108,100,79,98,108,105,113,117,101,0,72,101,108,118,101,116,105,99,97,45,78,97,114,114,111,119,45,79,98,108,105,113,117,101,0,72,101,108,118,101,116,105,99,97,45,79,98,108,105,113,117,101,0,78,101,119,67,101,110,116,117,114,121,83,99,104,108,98,107,45,66,111,108,100,0,67,101,110,116,
117,114,121,32,83,99,104,111,111,108,98,111,111,107,32,76,0,78,101,119,67,101,110,116,117,114,121,83,99,104,108,98,107,45,66,111,108,100,73,116,97,108,105,99,0,78,101,119,67,101,110,116,117,114,121,83,99,104,108,98,107,45,73,116,97,108,105,99,0,78,101,119,67,101,110,116,117,114,121,83,99,104,108,98,107,45,82,111,109,97,110,0,114,111,109,97,110,0,80,97,108,97,116,105,110,111,45,66,111,108,100,0,80,97,108,97,116,105,110,111,32,76,105,110,111,116,121,112,101,0,80,97,108,97,116,105,110,111,45,66,111,
108,100,73,116,97,108,105,99,0,80,97,108,97,116,105,110,111,45,73,116,97,108,105,99,0,80,97,108,97,116,105,110,111,45,82,111,109,97,110,0,83,121,109,98,111,108,0,102,97,110,116,97,115,121,0,84,105,109,101,115,45,66,111,108,100,0,84,105,109,101,115,0,84,105,109,101,115,45,66,111,108,100,73,116,97,108,105,99,0,84,105,109,101,115,45,73,116,97,108,105,99,0,90,97,112,102,67,104,97,110,99,101,114,121,45,77,101,100,105,117,109,73,116,97,108,105,99,0,85,82,87,32,67,104,97,110,99,101,114,121,32,76,0,109,101,
100,105,117,109,0,90,97,112,102,68,105,110,103,98,97,116,115,0,68,105,110,103,98,97,116,115,0,105,110,112,117,116,115,99,97,108,101,0,117,116,105,108,115,46,99,0,117,32,61,61,32,85,70,95,102,105,110,100,40,117,41,0,85,70,95,115,101,116,110,97,109,101,0,1,102,105,108,101,32,108,111,97,100,105,110,103,32,105,115,32,100,105,115,97,98,108,101,100,32,98,101,99,97,117,115,101,32,116,104,101,32,101,110,118,105,114,111,110,109,101,110,116,32,99,111,110,116,97,105,110,115,32,83,69,82,86,69,82,95,78,65,77,
69,61,34,37,115,34,10,97,110,100,32,116,104,101,32,71,86,95,70,73,76,69,95,80,65,84,72,32,118,97,114,105,97,98,108,101,32,105,115,32,117,110,115,101,116,32,111,114,32,101,109,112,116,121,46,10,0,80,97,116,104,32,112,114,111,118,105,100,101,100,32,116,111,32,102,105,108,101,58,32,34,37,115,34,32,104,97,115,32,98,101,101,110,32,105,103,110,111,114,101,100,32,98,101,99,97,117,115,101,32,102,105,108,101,115,32,97,114,101,32,111,110,108,121,32,112,101,114,109,105,116,116,101,100,32,116,111,32,98,101,32,
108,111,97,100,101,100,32,102,114,111,109,32,116,104,101,32,100,105,114,101,99,116,111,114,105,101,115,32,105,110,32,34,37,115,34,32,119,104,101,110,32,114,117,110,110,105,110,103,32,105,110,32,97,110,32,104,116,116,112,32,115,101,114,118,101,114,46,10,0,110,111,0,116,114,117,101,0,121,101,115,0,101,108,108,105,112,115,101,0,84,105,109,101,115,45,82,111,109,97,110,0,99,108,117,115,116,101,114,0,95,95,99,108,117,115,116,101,114,110,111,100,101,115,0,99,108,117,115,116,101,114,32,99,121,99,108,101,
32,37,115,32,45,45,32,37,115,32,110,111,116,32,115,117,112,112,111,114,116,101,100,10,0,116,97,105,108,32,99,108,117,115,116,101,114,32,37,115,32,105,110,115,105,100,101,32,104,101,97,100,32,99,108,117,115,116,101,114,32,37,115,10,0,104,101,97,100,32,99,108,117,115,116,101,114,32,37,115,32,105,110,115,105,100,101,32,116,97,105,108,32,99,108,117,115,116,101,114,32,37,115,10,0,116,97,105,108,32,110,111,100,101,32,37,115,32,105,110,115,105,100,101,32,104,101,97,100,32,99,108,117,115,116,101,114,32,37,
115,10,0,104,101,97,100,32,110,111,100,101,32,37,115,32,105,110,115,105,100,101,32,116,97,105,108,32,99,108,117,115,116,101,114,32,37,115,10,0,0,85,84,70,56,32,99,111,100,101,115,32,62,32,52,32,98,121,116,101,115,32,97,114,101,32,110,111,116,32,99,117,114,114,101,110,116,108,121,32,115,117,112,112,111,114,116,101,100,32,40,103,114,97,112,104,32,37,115,41,32,45,32,116,114,101,97,116,101,100,32,97,115,32,76,97,116,105,110,45,49,46,32,80,101,114,104,97,112,115,32,34,45,71,99,104,97,114,115,101,116,61,
108,97,116,105,110,49,34,32,105,115,32,110,101,101,100,101,100,63,10,0,73,110,118,97,108,105,100,32,37,100,45,98,121,116,101,32,85,84,70,56,32,102,111,117,110,100,32,105,110,32,105,110,112,117,116,32,111,102,32,103,114,97,112,104,32,37,115,32,45,32,116,114,101,97,116,101,100,32,97,115,32,76,97,116,105,110,45,49,46,32,80,101,114,104,97,112,115,32,34,45,71,99,104,97,114,115,101,116,61,108,97,116,105,110,49,34,32,105,115,32,110,101,101,100,101,100,63,10,0,98,122,46,115,105,122,101,0,111,118,101,114,
108,97,112,95,98,101,122,105,101,114,0,117,114,118,101,100,0,111,109,112,111,117,110,100,0,97,108,115,101,0,105,110,101,0,111,110,101,0,111,0,114,116,104,111,0,111,108,121,108,105,110,101,0,112,108,105,110,101,0,114,117,101,0,101,115,0,85,110,107,110,111,119,110,32,34,115,112,108,105,110,101,115,34,32,118,97,108,117,101,58,32,34,37,115,34,32,45,32,105,103,110,111,114,101,100,10,0,115,112,108,105,110,101,115,0,65,69,108,105,103,0,65,97,99,117,116,101,0,65,99,105,114,99,0,65,103,114,97,118,101,0,65,
108,112,104,97,0,65,114,105,110,103,0,65,116,105,108,100,101,0,65,117,109,108,0,66,101,116,97,0,67,99,101,100,105,108,0,67,104,105,0,68,97,103,103,101,114,0,68,101,108,116,97,0,69,84,72,0,69,97,99,117,116,101,0,69,99,105,114,99,0,69,103,114,97,118,101,0,69,112,115,105,108,111,110,0,69,116,97,0,69,117,109,108,0,71,97,109,109,97,0,73,97,99,117,116,101,0,73,99,105,114,99,0,73,103,114,97,118,101,0,73,111,116,97,0,73,117,109,108,0,75,97,112,112,97,0,76,97,109,98,100,97,0,77,117,0,78,116,105,108,100,101,
0,78,117,0,79,69,108,105,103,0,79,97,99,117,116,101,0,79,99,105,114,99,0,79,103,114,97,118,101,0,79,109,101,103,97,0,79,109,105,99,114,111,110,0,79,115,108,97,115,104,0,79,116,105,108,100,101,0,79,117,109,108,0,80,104,105,0,80,105,0,80,114,105,109,101,0,80,115,105,0,82,104,111,0,83,99,97,114,111,110,0,83,105,103,109,97,0,84,72,79,82,78,0,84,97,117,0,84,104,101,116,97,0,85,97,99,117,116,101,0,85,99,105,114,99,0,85,103,114,97,118,101,0,85,112,115,105,108,111,110,0,85,117,109,108,0,88,105,0,89,97,99,
117,116,101,0,89,117,109,108,0,90,101,116,97,0,97,97,99,117,116,101,0,97,99,105,114,99,0,97,99,117,116,101,0,97,101,108,105,103,0,97,103,114,97,118,101,0,97,108,101,102,115,121,109,0,97,108,112,104,97,0,97,109,112,0,97,110,100,0,97,110,103,0,97,114,105,110,103,0,97,115,121,109,112,0,97,116,105,108,100,101,0,97,117,109,108,0,98,100,113,117,111,0,98,101,116,97,0,98,114,118,98,97,114,0,98,117,108,108,0,99,97,112,0,99,99,101,100,105,108,0,99,101,100,105,108,0,99,101,110,116,0,99,104,105,0,99,105,114,
99,0,99,108,117,98,115,0,99,111,110,103,0,99,111,112,121,0,99,114,97,114,114,0,99,117,112,0,99,117,114,114,101,110,0,100,65,114,114,0,100,97,103,103,101,114,0,100,97,114,114,0,100,101,103,0,100,101,108,116,97,0,100,105,97,109,115,0,100,105,118,105,100,101,0,101,97,99,117,116,101,0,101,99,105,114,99,0,101,103,114,97,118,101,0,101,109,112,116,121,0,101,109,115,112,0,101,110,115,112,0,101,112,115,105,108,111,110,0,101,113,117,105,118,0,101,116,97,0,101,116,104,0,101,117,109,108,0,101,117,114,111,0,101,
120,105,115,116,0,102,110,111,102,0,102,111,114,97,108,108,0,102,114,97,99,49,50,0,102,114,97,99,49,52,0,102,114,97,99,51,52,0,102,114,97,115,108,0,103,97,109,109,97,0,103,101,0,103,116,0,104,65,114,114,0,104,97,114,114,0,104,101,97,114,116,115,0,104,101,108,108,105,112,0,105,97,99,117,116,101,0,105,99,105,114,99,0,105,101,120,99,108,0,105,103,114,97,118,101,0,105,109,97,103,101,0,105,110,102,105,110,0,105,110,116,0,105,111,116,97,0,105,113,117,101,115,116,0,105,115,105,110,0,105,117,109,108,0,107,
97,112,112,97,0,108,65,114,114,0,108,97,109,98,100,97,0,108,97,110,103,0,108,97,113,117,111,0,108,97,114,114,0,108,99,101,105,108,0,108,100,113,117,111,0,108,101,0,108,102,108,111,111,114,0,108,111,119,97,115,116,0,108,111,122,0,108,114,109,0,108,115,97,113,117,111,0,108,115,113,117,111,0,108,116,0,109,97,99,114,0,109,100,97,115,104,0,109,105,99,114,111,0,109,105,100,100,111,116,0,109,117,0,110,97,98,108,97,0,110,98,115,112,0,110,100,97,115,104,0,110,101,0,110,105,0,110,111,116,0,110,111,116,105,
110,0,110,115,117,98,0,110,116,105,108,100,101,0,110,117,0,111,97,99,117,116,101,0,111,99,105,114,99,0,111,101,108,105,103,0,111,103,114,97,118,101,0,111,108,105,110,101,0,111,109,101,103,97,0,111,109,105,99,114,111,110,0,111,112,108,117,115,0,111,114,0,111,114,100,102,0,111,114,100,109,0,111,115,108,97,115,104,0,111,116,105,108,100,101,0,111,116,105,109,101,115,0,111,117,109,108,0,112,97,114,97,0,112,97,114,116,0,112,101,114,109,105,108,0,112,101,114,112,0,112,104,105,0,112,105,0,112,105,118,0,112,
108,117,115,109,110,0,112,111,117,110,100,0,112,114,105,109,101,0,112,114,111,100,0,112,114,111,112,0,112,115,105,0,113,117,111,116,0,114,65,114,114,0,114,97,100,105,99,0,114,97,110,103,0,114,97,113,117,111,0,114,97,114,114,0,114,99,101,105,108,0,114,100,113,117,111,0,114,101,97,108,0,114,101,103,0,114,102,108,111,111,114,0,114,104,111,0,114,108,109,0,114,115,97,113,117,111,0,114,115,113,117,111,0,115,98,113,117,111,0,115,99,97,114,111,110,0,115,100,111,116,0,115,101,99,116,0,115,104,121,0,115,105,
103,109,97,0,115,105,103,109,97,102,0,115,105,109,0,115,112,97,100,101,115,0,115,117,98,0,115,117,98,101,0,115,117,109,0,115,117,112,0,115,117,112,49,0,115,117,112,50,0,115,117,112,51,0,115,117,112,101,0,115,122,108,105,103,0,116,97,117,0,116,104,101,114,101,52,0,116,104,101,116,97,0,116,104,101,116,97,115,121,109,0,116,104,105,110,115,112,0,116,104,111,114,110,0,116,105,108,100,101,0,116,105,109,101,115,0,116,114,97,100,101,0,117,65,114,114,0,117,97,99,117,116,101,0,117,97,114,114,0,117,99,105,114,
99,0,117,103,114,97,118,101,0,117,109,108,0,117,112,115,105,104,0,117,112,115,105,108,111,110,0,117,117,109,108,0,119,101,105,101,114,112,0,120,105,0,121,97,99,117,116,101,0,121,101,110,0,121,117,109,108,0,122,101,116,97,0,122,119,106,0,122,119,110,106,0,109,97,112,78,0,95,95,0,108,97,98,101,108,0,115,104,97,112,101,0,98,111,120,0,84,119,111,32,99,108,117,115,116,101,114,115,32,110,97,109,101,100,32,37,115,32,45,32,116,104,101,32,115,101,99,111,110,100,32,119,105,108,108,32,98,101,32,105,103,110,
111,114,101,100,10,0,37,115,37,115,37,115,0,47,0,58,0,111,100,98,0,79,114,116,104,111,103,111,110,97,108,32,101,100,103,101,115,32,100,111,32,110,111,116,32,99,117,114,114,101,110,116,108,121,32,104,97,110,100,108,101,32,101,100,103,101,32,108,97,98,101,108,115,46,32,84,114,121,32,117,115,105,110,103,32,120,108,97,98,101,108,115,46,10,0,37,37,33,80,83,45,65,100,111,98,101,45,50,46,48,10,37,37,37,37,66,111,117,110,100,105,110,103,66,111,120,58,32,40,97,116,101,110,100,41,10,47,112,111,105,110,116,
32,123,10,32,32,47,89,32,101,120,99,104,32,100,101,102,10,32,32,47,88,32,101,120,99,104,32,100,101,102,10,32,32,110,101,119,112,97,116,104,10,32,32,88,32,89,32,51,32,48,32,51,54,48,32,97,114,99,32,102,105,108,108,10,125,32,100,101,102,10,47,99,101,108,108,32,123,10,32,32,47,89,32,101,120,99,104,32,100,101,102,10,32,32,47,88,32,101,120,99,104,32,100,101,102,10,32,32,47,121,32,101,120,99,104,32,100,101,102,10,32,32,47,120,32,101,120,99,104,32,100,101,102,10,32,32,110,101,119,112,97,116,104,10,32,32,
120,32,121,32,109,111,118,101,116,111,10,32,32,120,32,89,32,108,105,110,101,116,111,10,32,32,88,32,89,32,108,105,110,101,116,111,10,32,32,88,32,121,32,108,105,110,101,116,111,10,32,32,99,108,111,115,101,112,97,116,104,32,115,116,114,111,107,101,10,125,32,100,101,102,10,47,110,111,100,101,32,123,10,32,47,117,32,101,120,99,104,32,100,101,102,10,32,47,114,32,101,120,99,104,32,100,101,102,10,32,47,100,32,101,120,99,104,32,100,101,102,10,32,47,108,32,101,120,99,104,32,100,101,102,10,32,110,101,119,112,
97,116,104,32,108,32,100,32,109,111,118,101,116,111,10,32,114,32,100,32,108,105,110,101,116,111,32,114,32,117,32,108,105,110,101,116,111,32,108,32,117,32,108,105,110,101,116,111,10,32,99,108,111,115,101,112,97,116,104,32,102,105,108,108,10,125,32,100,101,102,10,10,0,37,100,32,37,100,32,116,114,97,110,115,108,97,116,101,10,0,110,101,119,112,97,116,104,32,37,100,32,37,100,32,109,111,118,101,116,111,10,0,37,100,32,37,100,32,108,105,110,101,116,111,10,0,37,100,32,37,100,32,108,105,110,101,116,111,32,
115,116,114,111,107,101,10,0,48,46,56,32,48,46,56,32,48,46,56,32,115,101,116,114,103,98,99,111,108,111,114,10,0,115,104,111,119,112,97,103,101,10,37,37,37,37,84,114,97,105,108,101,114,10,37,37,37,37,66,111,117,110,100,105,110,103,66,111,120,58,32,37,100,32,37,100,32,37,100,32,37,100,10,0,111,114,116,104,111,32,37,115,32,37,115,10,0,99,104,97,110,110,101,108,32,37,100,32,40,37,102,44,37,102,41,10,0,32,45,62,10,0,32,32,32,32,32,0,66,95,82,73,71,72,84,0,66,95,68,79,87,78,0,66,95,76,69,70,84,0,66,95,
85,80,0,66,95,78,79,68,69,0,40,40,37,102,44,37,102,41,44,40,37,102,44,37,102,41,41,32,37,115,32,37,115,0,115,101,103,0,111,114,116,104,111,46,99,0,110,101,120,116,95,115,101,103,0,100,101,99,105,100,101,95,112,111,105,110,116,0,105,110,99,111,109,112,97,114,97,98,108,101,32,115,101,103,109,101,110,116,115,32,33,33,32,45,45,32,65,98,111,114,116,105,110,103,10,0,115,49,45,62,99,111,109,109,95,99,111,111,114,100,61,61,115,50,45,62,99,111,109,109,95,99,111,111,114,100,0,105,115,95,112,97,114,97,108,108,
101,108,0,99,104,97,110,105,0,99,104,97,110,83,101,97,114,99,104,0,99,112,0,103,114,97,112,104,32,71,32,123,10,0,32,110,111,100,101,91,115,104,97,112,101,61,112,111,105,110,116,93,10,0,32,32,37,100,32,91,112,111,115,61,34,37,100,44,37,100,34,93,10,0,32,32,37,100,32,45,45,32,37,100,91,108,101,110,61,34,37,102,34,93,10,0,125,10,0,115,111,108,105,100,0,105,110,118,105,115,105,98,108,101,0,98,111,108,100,0,115,101,116,108,105,110,101,119,105,100,116,104,0,102,105,108,108,101,100,0,117,110,102,105,108,
108,101,100,0,116,97,112,101,114,101,100,0,103,118,114,101,110,100,101,114,95,115,101,116,95,115,116,121,108,101,58,32,117,110,115,117,112,112,111,114,116,101,100,32,115,116,121,108,101,32,37,115,32,45,32,105,103,110,111,114,105,110,103,10,0,103,118,114,101,110,100,101,114,46,99,0,103,118,114,101,110,100,101,114,95,117,115,101,114,115,104,97,112,101,0,110,97,109,101,0,110,97,109,101,91,48,93,0,98,111,116,104,0,99,111,108,111,114,32,37,115,0,37,115,32,105,115,32,110,111,116,32,97,32,107,110,111,119,
110,32,99,111,108,111,114,46,10,0,101,114,114,111,114,32,105,110,32,99,111,108,120,108,97,116,101,40,41,10,0,76,97,121,111,117,116,32,116,121,112,101,58,32,34,37,115,34,32,110,111,116,32,114,101,99,111,103,110,105,122,101,100,46,32,85,115,101,32,111,110,101,32,111,102,58,37,115,10,0,106,111,98,0,103,118,108,111,97,100,105,109,97,103,101,46,99,0,103,118,108,111,97,100,105,109,97,103,101,0,117,115,0,117,115,45,62,110,97,109,101,0,117,115,45,62,110,97,109,101,91,48,93,0,78,111,32,108,111,97,100,105,
109,97,103,101,32,112,108,117,103,105,110,32,102,111,114,32,34,37,115,34,10,0,103,114,97,112,104,118,105,122,0,50,46,51,56,46,48,0,50,48,49,52,48,52,49,51,46,50,48,52,49,0,81,0,76,101,102,116,0,75,80,95,76,101,102,116,0,82,105,103,104,116,0,75,80,95,82,105,103,104,116,0,85,112,0,75,80,95,85,112,0,68,111,119,110,0,75,80,95,68,111,119,110,0,112,108,117,115,0,75,80,95,65,100,100,0,109,105,110,117,115,0,75,80,95,83,117,98,116,114,97,99,116,0,70,0,71,0,110,101,119,46,103,118,0,110,111,100,101,0,85,82,
76,0,101,100,103,101,0,116,97,105,108,112,111,114,116,0,104,101,97,100,112,111,114,116,0,107,101,121,0,100,105,103,114,97,112,104,0,103,114,97,112,104,0,115,117,98,103,114,97,112,104,0,114,101,110,100,101,114,0,108,97,121,111,117,116,0,100,101,118,105,99,101,0,108,111,97,100,105,109,97,103,101,0,100,121,110,97,109,105,99,32,108,111,97,100,105,110,103,32,110,111,116,32,97,118,97,105,108,97,98,108,101,10,0,85,115,105,110,103,32,37,115,58,32,37,115,58,37,115,10,0,95,76,84,88,95,108,105,98,114,97,114,
121,0,116,101,120,116,108,97,121,111,117,116,0,111,117,116,32,111,102,32,109,101,109,111,114,121,10,0,114,101,99,116,46,98,111,117,110,100,97,114,121,91,50,93,32,60,32,73,78,84,95,77,65,88,0,120,108,97,98,101,108,115,46,99,0,111,98,106,112,108,112,109,107,115,0,114,101,99,116,46,98,111,117,110,100,97,114,121,91,51,93,32,60,32,73,78,84,95,77,65,88,0,118,112,0,120,108,104,100,120,117,110,108,111,97,100,0,115,105,122,101,61,61,102,114,101,101,100,0,111,98,106,112,45,62,108,98,108,0,120,108,105,110,116,
101,114,115,101,99,116,105,111,110,115,0,111,98,106,112,49,45,62,115,122,46,120,32,61,61,32,48,32,38,38,32,111,98,106,112,49,45,62,115,122,46,121,32,61,61,32,48,0,108,98,108,101,110,99,108,111,115,105,110,103,0,108,112,32,33,61,32,99,108,112,0,103,101,116,105,110,116,114,115,120,105,0,35,37,50,120,37,50,120,37,50,120,37,50,120,0,37,108,102,37,108,102,37,108,102,0,108,97,99,107,0,104,105,116,101,0,105,103,104,116,103,114,101,121,0,88,49,49,47,0,47,97,99,99,101,110,116,51,47,49,0,47,97,99,99,101,110,
116,51,47,50,0,47,97,99,99,101,110,116,51,47,51,0,47,97,99,99,101,110,116,52,47,49,0,47,97,99,99,101,110,116,52,47,50,0,47,97,99,99,101,110,116,52,47,51,0,47,97,99,99,101,110,116,52,47,52,0,47,97,99,99,101,110,116,53,47,49,0,47,97,99,99,101,110,116,53,47,50,0,47,97,99,99,101,110,116,53,47,51,0,47,97,99,99,101,110,116,53,47,52,0,47,97,99,99,101,110,116,53,47,53,0,47,97,99,99,101,110,116,54,47,49,0,47,97,99,99,101,110,116,54,47,50,0,47,97,99,99,101,110,116,54,47,51,0,47,97,99,99,101,110,116,54,47,52,
0,47,97,99,99,101,110,116,54,47,53,0,47,97,99,99,101,110,116,54,47,54,0,47,97,99,99,101,110,116,55,47,49,0,47,97,99,99,101,110,116,55,47,50,0,47,97,99,99,101,110,116,55,47,51,0,47,97,99,99,101,110,116,55,47,52,0,47,97,99,99,101,110,116,55,47,53,0,47,97,99,99,101,110,116,55,47,54,0,47,97,99,99,101,110,116,55,47,55,0,47,97,99,99,101,110,116,56,47,49,0,47,97,99,99,101,110,116,56,47,50,0,47,97,99,99,101,110,116,56,47,51,0,47,97,99,99,101,110,116,56,47,52,0,47,97,99,99,101,110,116,56,47,53,0,47,97,99,
99,101,110,116,56,47,54,0,47,97,99,99,101,110,116,56,47,55,0,47,97,99,99,101,110,116,56,47,56,0,47,98,108,117,101,115,51,47,49,0,47,98,108,117,101,115,51,47,50,0,47,98,108,117,101,115,51,47,51,0,47,98,108,117,101,115,52,47,49,0,47,98,108,117,101,115,52,47,50,0,47,98,108,117,101,115,52,47,51,0,47,98,108,117,101,115,52,47,52,0,47,98,108,117,101,115,53,47,49,0,47,98,108,117,101,115,53,47,50,0,47,98,108,117,101,115,53,47,51,0,47,98,108,117,101,115,53,47,52,0,47,98,108,117,101,115,53,47,53,0,47,98,108,
117,101,115,54,47,49,0,47,98,108,117,101,115,54,47,50,0,47,98,108,117,101,115,54,47,51,0,47,98,108,117,101,115,54,47,52,0,47,98,108,117,101,115,54,47,53,0,47,98,108,117,101,115,54,47,54,0,47,98,108,117,101,115,55,47,49,0,47,98,108,117,101,115,55,47,50,0,47,98,108,117,101,115,55,47,51,0,47,98,108,117,101,115,55,47,52,0,47,98,108,117,101,115,55,47,53,0,47,98,108,117,101,115,55,47,54,0,47,98,108,117,101,115,55,47,55,0,47,98,108,117,101,115,56,47,49,0,47,98,108,117,101,115,56,47,50,0,47,98,108,117,101,
115,56,47,51,0,47,98,108,117,101,115,56,47,52,0,47,98,108,117,101,115,56,47,53,0,47,98,108,117,101,115,56,47,54,0,47,98,108,117,101,115,56,47,55,0,47,98,108,117,101,115,56,47,56,0,47,98,108,117,101,115,57,47,49,0,47,98,108,117,101,115,57,47,50,0,47,98,108,117,101,115,57,47,51,0,47,98,108,117,101,115,57,47,52,0,47,98,108,117,101,115,57,47,53,0,47,98,108,117,101,115,57,47,54,0,47,98,108,117,101,115,57,47,55,0,47,98,108,117,101,115,57,47,56,0,47,98,108,117,101,115,57,47,57,0,47,98,114,98,103,49,48,47,
49,0,47,98,114,98,103,49,48,47,49,48,0,47,98,114,98,103,49,48,47,50,0,47,98,114,98,103,49,48,47,51,0,47,98,114,98,103,49,48,47,52,0,47,98,114,98,103,49,48,47,53,0,47,98,114,98,103,49,48,47,54,0,47,98,114,98,103,49,48,47,55,0,47,98,114,98,103,49,48,47,56,0,47,98,114,98,103,49,48,47,57,0,47,98,114,98,103,49,49,47,49,0,47,98,114,98,103,49,49,47,49,48,0,47,98,114,98,103,49,49,47,49,49,0,47,98,114,98,103,49,49,47,50,0,47,98,114,98,103,49,49,47,51,0,47,98,114,98,103,49,49,47,52,0,47,98,114,98,103,49,49,
47,53,0,47,98,114,98,103,49,49,47,54,0,47,98,114,98,103,49,49,47,55,0,47,98,114,98,103,49,49,47,56,0,47,98,114,98,103,49,49,47,57,0,47,98,114,98,103,51,47,49,0,47,98,114,98,103,51,47,50,0,47,98,114,98,103,51,47,51,0,47,98,114,98,103,52,47,49,0,47,98,114,98,103,52,47,50,0,47,98,114,98,103,52,47,51,0,47,98,114,98,103,52,47,52,0,47,98,114,98,103,53,47,49,0,47,98,114,98,103,53,47,50,0,47,98,114,98,103,53,47,51,0,47,98,114,98,103,53,47,52,0,47,98,114,98,103,53,47,53,0,47,98,114,98,103,54,47,49,0,47,98,
114,98,103,54,47,50,0,47,98,114,98,103,54,47,51,0,47,98,114,98,103,54,47,52,0,47,98,114,98,103,54,47,53,0,47,98,114,98,103,54,47,54,0,47,98,114,98,103,55,47,49,0,47,98,114,98,103,55,47,50,0,47,98,114,98,103,55,47,51,0,47,98,114,98,103,55,47,52,0,47,98,114,98,103,55,47,53,0,47,98,114,98,103,55,47,54,0,47,98,114,98,103,55,47,55,0,47,98,114,98,103,56,47,49,0,47,98,114,98,103,56,47,50,0,47,98,114,98,103,56,47,51,0,47,98,114,98,103,56,47,52,0,47,98,114,98,103,56,47,53,0,47,98,114,98,103,56,47,54,0,47,
98,114,98,103,56,47,55,0,47,98,114,98,103,56,47,56,0,47,98,114,98,103,57,47,49,0,47,98,114,98,103,57,47,50,0,47,98,114,98,103,57,47,51,0,47,98,114,98,103,57,47,52,0,47,98,114,98,103,57,47,53,0,47,98,114,98,103,57,47,54,0,47,98,114,98,103,57,47,55,0,47,98,114,98,103,57,47,56,0,47,98,114,98,103,57,47,57,0,47,98,117,103,110,51,47,49,0,47,98,117,103,110,51,47,50,0,47,98,117,103,110,51,47,51,0,47,98,117,103,110,52,47,49,0,47,98,117,103,110,52,47,50,0,47,98,117,103,110,52,47,51,0,47,98,117,103,110,52,47,
52,0,47,98,117,103,110,53,47,49,0,47,98,117,103,110,53,47,50,0,47,98,117,103,110,53,47,51,0,47,98,117,103,110,53,47,52,0,47,98,117,103,110,53,47,53,0,47,98,117,103,110,54,47,49,0,47,98,117,103,110,54,47,50,0,47,98,117,103,110,54,47,51,0,47,98,117,103,110,54,47,52,0,47,98,117,103,110,54,47,53,0,47,98,117,103,110,54,47,54,0,47,98,117,103,110,55,47,49,0,47,98,117,103,110,55,47,50,0,47,98,117,103,110,55,47,51,0,47,98,117,103,110,55,47,52,0,47,98,117,103,110,55,47,53,0,47,98,117,103,110,55,47,54,0,47,
98,117,103,110,55,47,55,0,47,98,117,103,110,56,47,49,0,47,98,117,103,110,56,47,50,0,47,98,117,103,110,56,47,51,0,47,98,117,103,110,56,47,52,0,47,98,117,103,110,56,47,53,0,47,98,117,103,110,56,47,54,0,47,98,117,103,110,56,47,55,0,47,98,117,103,110,56,47,56,0,47,98,117,103,110,57,47,49,0,47,98,117,103,110,57,47,50,0,47,98,117,103,110,57,47,51,0,47,98,117,103,110,57,47,52,0,47,98,117,103,110,57,47,53,0,47,98,117,103,110,57,47,54,0,47,98,117,103,110,57,47,55,0,47,98,117,103,110,57,47,56,0,47,98,117,103,
110,57,47,57,0,47,98,117,112,117,51,47,49,0,47,98,117,112,117,51,47,50,0,47,98,117,112,117,51,47,51,0,47,98,117,112,117,52,47,49,0,47,98,117,112,117,52,47,50,0,47,98,117,112,117,52,47,51,0,47,98,117,112,117,52,47,52,0,47,98,117,112,117,53,47,49,0,47,98,117,112,117,53,47,50,0,47,98,117,112,117,53,47,51,0,47,98,117,112,117,53,47,52,0,47,98,117,112,117,53,47,53,0,47,98,117,112,117,54,47,49,0,47,98,117,112,117,54,47,50,0,47,98,117,112,117,54,47,51,0,47,98,117,112,117,54,47,52,0,47,98,117,112,117,54,47,
53,0,47,98,117,112,117,54,47,54,0,47,98,117,112,117,55,47,49,0,47,98,117,112,117,55,47,50,0,47,98,117,112,117,55,47,51,0,47,98,117,112,117,55,47,52,0,47,98,117,112,117,55,47,53,0,47,98,117,112,117,55,47,54,0,47,98,117,112,117,55,47,55,0,47,98,117,112,117,56,47,49,0,47,98,117,112,117,56,47,50,0,47,98,117,112,117,56,47,51,0,47,98,117,112,117,56,47,52,0,47,98,117,112,117,56,47,53,0,47,98,117,112,117,56,47,54,0,47,98,117,112,117,56,47,55,0,47,98,117,112,117,56,47,56,0,47,98,117,112,117,57,47,49,0,47,
98,117,112,117,57,47,50,0,47,98,117,112,117,57,47,51,0,47,98,117,112,117,57,47,52,0,47,98,117,112,117,57,47,53,0,47,98,117,112,117,57,47,54,0,47,98,117,112,117,57,47,55,0,47,98,117,112,117,57,47,56,0,47,98,117,112,117,57,47,57,0,47,100,97,114,107,50,51,47,49,0,47,100,97,114,107,50,51,47,50,0,47,100,97,114,107,50,51,47,51,0,47,100,97,114,107,50,52,47,49,0,47,100,97,114,107,50,52,47,50,0,47,100,97,114,107,50,52,47,51,0,47,100,97,114,107,50,52,47,52,0,47,100,97,114,107,50,53,47,49,0,47,100,97,114,107,
50,53,47,50,0,47,100,97,114,107,50,53,47,51,0,47,100,97,114,107,50,53,47,52,0,47,100,97,114,107,50,53,47,53,0,47,100,97,114,107,50,54,47,49,0,47,100,97,114,107,50,54,47,50,0,47,100,97,114,107,50,54,47,51,0,47,100,97,114,107,50,54,47,52,0,47,100,97,114,107,50,54,47,53,0,47,100,97,114,107,50,54,47,54,0,47,100,97,114,107,50,55,47,49,0,47,100,97,114,107,50,55,47,50,0,47,100,97,114,107,50,55,47,51,0,47,100,97,114,107,50,55,47,52,0,47,100,97,114,107,50,55,47,53,0,47,100,97,114,107,50,55,47,54,0,47,100,
97,114,107,50,55,47,55,0,47,100,97,114,107,50,56,47,49,0,47,100,97,114,107,50,56,47,50,0,47,100,97,114,107,50,56,47,51,0,47,100,97,114,107,50,56,47,52,0,47,100,97,114,107,50,56,47,53,0,47,100,97,114,107,50,56,47,54,0,47,100,97,114,107,50,56,47,55,0,47,100,97,114,107,50,56,47,56,0,47,103,110,98,117,51,47,49,0,47,103,110,98,117,51,47,50,0,47,103,110,98,117,51,47,51,0,47,103,110,98,117,52,47,49,0,47,103,110,98,117,52,47,50,0,47,103,110,98,117,52,47,51,0,47,103,110,98,117,52,47,52,0,47,103,110,98,117,
53,47,49,0,47,103,110,98,117,53,47,50,0,47,103,110,98,117,53,47,51,0,47,103,110,98,117,53,47,52,0,47,103,110,98,117,53,47,53,0,47,103,110,98,117,54,47,49,0,47,103,110,98,117,54,47,50,0,47,103,110,98,117,54,47,51,0,47,103,110,98,117,54,47,52,0,47,103,110,98,117,54,47,53,0,47,103,110,98,117,54,47,54,0,47,103,110,98,117,55,47,49,0,47,103,110,98,117,55,47,50,0,47,103,110,98,117,55,47,51,0,47,103,110,98,117,55,47,52,0,47,103,110,98,117,55,47,53,0,47,103,110,98,117,55,47,54,0,47,103,110,98,117,55,47,55,
0,47,103,110,98,117,56,47,49,0,47,103,110,98,117,56,47,50,0,47,103,110,98,117,56,47,51,0,47,103,110,98,117,56,47,52,0,47,103,110,98,117,56,47,53,0,47,103,110,98,117,56,47,54,0,47,103,110,98,117,56,47,55,0,47,103,110,98,117,56,47,56,0,47,103,110,98,117,57,47,49,0,47,103,110,98,117,57,47,50,0,47,103,110,98,117,57,47,51,0,47,103,110,98,117,57,47,52,0,47,103,110,98,117,57,47,53,0,47,103,110,98,117,57,47,54,0,47,103,110,98,117,57,47,55,0,47,103,110,98,117,57,47,56,0,47,103,110,98,117,57,47,57,0,47,103,
114,101,101,110,115,51,47,49,0,47,103,114,101,101,110,115,51,47,50,0,47,103,114,101,101,110,115,51,47,51,0,47,103,114,101,101,110,115,52,47,49,0,47,103,114,101,101,110,115,52,47,50,0,47,103,114,101,101,110,115,52,47,51,0,47,103,114,101,101,110,115,52,47,52,0,47,103,114,101,101,110,115,53,47,49,0,47,103,114,101,101,110,115,53,47,50,0,47,103,114,101,101,110,115,53,47,51,0,47,103,114,101,101,110,115,53,47,52,0,47,103,114,101,101,110,115,53,47,53,0,47,103,114,101,101,110,115,54,47,49,0,47,103,114,101,
101,110,115,54,47,50,0,47,103,114,101,101,110,115,54,47,51,0,47,103,114,101,101,110,115,54,47,52,0,47,103,114,101,101,110,115,54,47,53,0,47,103,114,101,101,110,115,54,47,54,0,47,103,114,101,101,110,115,55,47,49,0,47,103,114,101,101,110,115,55,47,50,0,47,103,114,101,101,110,115,55,47,51,0,47,103,114,101,101,110,115,55,47,52,0,47,103,114,101,101,110,115,55,47,53,0,47,103,114,101,101,110,115,55,47,54,0,47,103,114,101,101,110,115,55,47,55,0,47,103,114,101,101,110,115,56,47,49,0,47,103,114,101,101,110,
115,56,47,50,0,47,103,114,101,101,110,115,56,47,51,0,47,103,114,101,101,110,115,56,47,52,0,47,103,114,101,101,110,115,56,47,53,0,47,103,114,101,101,110,115,56,47,54,0,47,103,114,101,101,110,115,56,47,55,0,47,103,114,101,101,110,115,56,47,56,0,47,103,114,101,101,110,115,57,47,49,0,47,103,114,101,101,110,115,57,47,50,0,47,103,114,101,101,110,115,57,47,51,0,47,103,114,101,101,110,115,57,47,52,0,47,103,114,101,101,110,115,57,47,53,0,47,103,114,101,101,110,115,57,47,54,0,47,103,114,101,101,110,115,57,
47,55,0,47,103,114,101,101,110,115,57,47,56,0,47,103,114,101,101,110,115,57,47,57,0,47,103,114,101,121,115,51,47,49,0,47,103,114,101,121,115,51,47,50,0,47,103,114,101,121,115,51,47,51,0,47,103,114,101,121,115,52,47,49,0,47,103,114,101,121,115,52,47,50,0,47,103,114,101,121,115,52,47,51,0,47,103,114,101,121,115,52,47,52,0,47,103,114,101,121,115,53,47,49,0,47,103,114,101,121,115,53,47,50,0,47,103,114,101,121,115,53,47,51,0,47,103,114,101,121,115,53,47,52,0,47,103,114,101,121,115,53,47,53,0,47,103,114,
101,121,115,54,47,49,0,47,103,114,101,121,115,54,47,50,0,47,103,114,101,121,115,54,47,51,0,47,103,114,101,121,115,54,47,52,0,47,103,114,101,121,115,54,47,53,0,47,103,114,101,121,115,54,47,54,0,47,103,114,101,121,115,55,47,49,0,47,103,114,101,121,115,55,47,50,0,47,103,114,101,121,115,55,47,51,0,47,103,114,101,121,115,55,47,52,0,47,103,114,101,121,115,55,47,53,0,47,103,114,101,121,115,55,47,54,0,47,103,114,101,121,115,55,47,55,0,47,103,114,101,121,115,56,47,49,0,47,103,114,101,121,115,56,47,50,0,47,
103,114,101,121,115,56,47,51,0,47,103,114,101,121,115,56,47,52,0,47,103,114,101,121,115,56,47,53,0,47,103,114,101,121,115,56,47,54,0,47,103,114,101,121,115,56,47,55,0,47,103,114,101,121,115,56,47,56,0,47,103,114,101,121,115,57,47,49,0,47,103,114,101,121,115,57,47,50,0,47,103,114,101,121,115,57,47,51,0,47,103,114,101,121,115,57,47,52,0,47,103,114,101,121,115,57,47,53,0,47,103,114,101,121,115,57,47,54,0,47,103,114,101,121,115,57,47,55,0,47,103,114,101,121,115,57,47,56,0,47,103,114,101,121,115,57,47,
57,0,47,111,114,97,110,103,101,115,51,47,49,0,47,111,114,97,110,103,101,115,51,47,50,0,47,111,114,97,110,103,101,115,51,47,51,0,47,111,114,97,110,103,101,115,52,47,49,0,47,111,114,97,110,103,101,115,52,47,50,0,47,111,114,97,110,103,101,115,52,47,51,0,47,111,114,97,110,103,101,115,52,47,52,0,47,111,114,97,110,103,101,115,53,47,49,0,47,111,114,97,110,103,101,115,53,47,50,0,47,111,114,97,110,103,101,115,53,47,51,0,47,111,114,97,110,103,101,115,53,47,52,0,47,111,114,97,110,103,101,115,53,47,53,0,47,111,
114,97,110,103,101,115,54,47,49,0,47,111,114,97,110,103,101,115,54,47,50,0,47,111,114,97,110,103,101,115,54,47,51,0,47,111,114,97,110,103,101,115,54,47,52,0,47,111,114,97,110,103,101,115,54,47,53,0,47,111,114,97,110,103,101,115,54,47,54,0,47,111,114,97,110,103,101,115,55,47,49,0,47,111,114,97,110,103,101,115,55,47,50,0,47,111,114,97,110,103,101,115,55,47,51,0,47,111,114,97,110,103,101,115,55,47,52,0,47,111,114,97,110,103,101,115,55,47,53,0,47,111,114,97,110,103,101,115,55,47,54,0,47,111,114,97,110,
103,101,115,55,47,55,0,47,111,114,97,110,103,101,115,56,47,49,0,47,111,114,97,110,103,101,115,56,47,50,0,47,111,114,97,110,103,101,115,56,47,51,0,47,111,114,97,110,103,101,115,56,47,52,0,47,111,114,97,110,103,101,115,56,47,53,0,47,111,114,97,110,103,101,115,56,47,54,0,47,111,114,97,110,103,101,115,56,47,55,0,47,111,114,97,110,103,101,115,56,47,56,0,47,111,114,97,110,103,101,115,57,47,49,0,47,111,114,97,110,103,101,115,57,47,50,0,47,111,114,97,110,103,101,115,57,47,51,0,47,111,114,97,110,103,101,115,
57,47,52,0,47,111,114,97,110,103,101,115,57,47,53,0,47,111,114,97,110,103,101,115,57,47,54,0,47,111,114,97,110,103,101,115,57,47,55,0,47,111,114,97,110,103,101,115,57,47,56,0,47,111,114,97,110,103,101,115,57,47,57,0,47,111,114,114,100,51,47,49,0,47,111,114,114,100,51,47,50,0,47,111,114,114,100,51,47,51,0,47,111,114,114,100,52,47,49,0,47,111,114,114,100,52,47,50,0,47,111,114,114,100,52,47,51,0,47,111,114,114,100,52,47,52,0,47,111,114,114,100,53,47,49,0,47,111,114,114,100,53,47,50,0,47,111,114,114,
100,53,47,51,0,47,111,114,114,100,53,47,52,0,47,111,114,114,100,53,47,53,0,47,111,114,114,100,54,47,49,0,47,111,114,114,100,54,47,50,0,47,111,114,114,100,54,47,51,0,47,111,114,114,100,54,47,52,0,47,111,114,114,100,54,47,53,0,47,111,114,114,100,54,47,54,0,47,111,114,114,100,55,47,49,0,47,111,114,114,100,55,47,50,0,47,111,114,114,100,55,47,51,0,47,111,114,114,100,55,47,52,0,47,111,114,114,100,55,47,53,0,47,111,114,114,100,55,47,54,0,47,111,114,114,100,55,47,55,0,47,111,114,114,100,56,47,49,0,47,111,
114,114,100,56,47,50,0,47,111,114,114,100,56,47,51,0,47,111,114,114,100,56,47,52,0,47,111,114,114,100,56,47,53,0,47,111,114,114,100,56,47,54,0,47,111,114,114,100,56,47,55,0,47,111,114,114,100,56,47,56,0,47,111,114,114,100,57,47,49],"i8",4,n.q+142086);
D([47,111,114,114,100,57,47,50,0,47,111,114,114,100,57,47,51,0,47,111,114,114,100,57,47,52,0,47,111,114,114,100,57,47,53,0,47,111,114,114,100,57,47,54,0,47,111,114,114,100,57,47,55,0,47,111,114,114,100,57,47,56,0,47,111,114,114,100,57,47,57,0,47,112,97,105,114,101,100,49,48,47,49,0,47,112,97,105,114,101,100,49,48,47,49,48,0,47,112,97,105,114,101,100,49,48,47,50,0,47,112,97,105,114,101,100,49,48,47,51,0,47,112,97,105,114,101,100,49,48,47,52,0,47,112,97,105,114,101,100,49,48,47,53,0,47,112,97,105,114,
101,100,49,48,47,54,0,47,112,97,105,114,101,100,49,48,47,55,0,47,112,97,105,114,101,100,49,48,47,56,0,47,112,97,105,114,101,100,49,48,47,57,0,47,112,97,105,114,101,100,49,49,47,49,0,47,112,97,105,114,101,100,49,49,47,49,48,0,47,112,97,105,114,101,100,49,49,47,49,49,0,47,112,97,105,114,101,100,49,49,47,50,0,47,112,97,105,114,101,100,49,49,47,51,0,47,112,97,105,114,101,100,49,49,47,52,0,47,112,97,105,114,101,100,49,49,47,53,0,47,112,97,105,114,101,100,49,49,47,54,0,47,112,97,105,114,101,100,49,49,47,
55,0,47,112,97,105,114,101,100,49,49,47,56,0,47,112,97,105,114,101,100,49,49,47,57,0,47,112,97,105,114,101,100,49,50,47,49,0,47,112,97,105,114,101,100,49,50,47,49,48,0,47,112,97,105,114,101,100,49,50,47,49,49,0,47,112,97,105,114,101,100,49,50,47,49,50,0,47,112,97,105,114,101,100,49,50,47,50,0,47,112,97,105,114,101,100,49,50,47,51,0,47,112,97,105,114,101,100,49,50,47,52,0,47,112,97,105,114,101,100,49,50,47,53,0,47,112,97,105,114,101,100,49,50,47,54,0,47,112,97,105,114,101,100,49,50,47,55,0,47,112,
97,105,114,101,100,49,50,47,56,0,47,112,97,105,114,101,100,49,50,47,57,0,47,112,97,105,114,101,100,51,47,49,0,47,112,97,105,114,101,100,51,47,50,0,47,112,97,105,114,101,100,51,47,51,0,47,112,97,105,114,101,100,52,47,49,0,47,112,97,105,114,101,100,52,47,50,0,47,112,97,105,114,101,100,52,47,51,0,47,112,97,105,114,101,100,52,47,52,0,47,112,97,105,114,101,100,53,47,49,0,47,112,97,105,114,101,100,53,47,50,0,47,112,97,105,114,101,100,53,47,51,0,47,112,97,105,114,101,100,53,47,52,0,47,112,97,105,114,101,
100,53,47,53,0,47,112,97,105,114,101,100,54,47,49,0,47,112,97,105,114,101,100,54,47,50,0,47,112,97,105,114,101,100,54,47,51,0,47,112,97,105,114,101,100,54,47,52,0,47,112,97,105,114,101,100,54,47,53,0,47,112,97,105,114,101,100,54,47,54,0,47,112,97,105,114,101,100,55,47,49,0,47,112,97,105,114,101,100,55,47,50,0,47,112,97,105,114,101,100,55,47,51,0,47,112,97,105,114,101,100,55,47,52,0,47,112,97,105,114,101,100,55,47,53,0,47,112,97,105,114,101,100,55,47,54,0,47,112,97,105,114,101,100,55,47,55,0,47,112,
97,105,114,101,100,56,47,49,0,47,112,97,105,114,101,100,56,47,50,0,47,112,97,105,114,101,100,56,47,51,0,47,112,97,105,114,101,100,56,47,52,0,47,112,97,105,114,101,100,56,47,53,0,47,112,97,105,114,101,100,56,47,54,0,47,112,97,105,114,101,100,56,47,55,0,47,112,97,105,114,101,100,56,47,56,0,47,112,97,105,114,101,100,57,47,49,0,47,112,97,105,114,101,100,57,47,50,0,47,112,97,105,114,101,100,57,47,51,0,47,112,97,105,114,101,100,57,47,52,0,47,112,97,105,114,101,100,57,47,53,0,47,112,97,105,114,101,100,57,
47,54,0,47,112,97,105,114,101,100,57,47,55,0,47,112,97,105,114,101,100,57,47,56,0,47,112,97,105,114,101,100,57,47,57,0,47,112,97,115,116,101,108,49,51,47,49,0,47,112,97,115,116,101,108,49,51,47,50,0,47,112,97,115,116,101,108,49,51,47,51,0,47,112,97,115,116,101,108,49,52,47,49,0,47,112,97,115,116,101,108,49,52,47,50,0,47,112,97,115,116,101,108,49,52,47,51,0,47,112,97,115,116,101,108,49,52,47,52,0,47,112,97,115,116,101,108,49,53,47,49,0,47,112,97,115,116,101,108,49,53,47,50,0,47,112,97,115,116,101,
108,49,53,47,51,0,47,112,97,115,116,101,108,49,53,47,52,0,47,112,97,115,116,101,108,49,53,47,53,0,47,112,97,115,116,101,108,49,54,47,49,0,47,112,97,115,116,101,108,49,54,47,50,0,47,112,97,115,116,101,108,49,54,47,51,0,47,112,97,115,116,101,108,49,54,47,52,0,47,112,97,115,116,101,108,49,54,47,53,0,47,112,97,115,116,101,108,49,54,47,54,0,47,112,97,115,116,101,108,49,55,47,49,0,47,112,97,115,116,101,108,49,55,47,50,0,47,112,97,115,116,101,108,49,55,47,51,0,47,112,97,115,116,101,108,49,55,47,52,0,47,
112,97,115,116,101,108,49,55,47,53,0,47,112,97,115,116,101,108,49,55,47,54,0,47,112,97,115,116,101,108,49,55,47,55,0,47,112,97,115,116,101,108,49,56,47,49,0,47,112,97,115,116,101,108,49,56,47,50,0,47,112,97,115,116,101,108,49,56,47,51,0,47,112,97,115,116,101,108,49,56,47,52,0,47,112,97,115,116,101,108,49,56,47,53,0,47,112,97,115,116,101,108,49,56,47,54,0,47,112,97,115,116,101,108,49,56,47,55,0,47,112,97,115,116,101,108,49,56,47,56,0,47,112,97,115,116,101,108,49,57,47,49,0,47,112,97,115,116,101,108,
49,57,47,50,0,47,112,97,115,116,101,108,49,57,47,51,0,47,112,97,115,116,101,108,49,57,47,52,0,47,112,97,115,116,101,108,49,57,47,53,0,47,112,97,115,116,101,108,49,57,47,54,0,47,112,97,115,116,101,108,49,57,47,55,0,47,112,97,115,116,101,108,49,57,47,56,0,47,112,97,115,116,101,108,49,57,47,57,0,47,112,97,115,116,101,108,50,51,47,49,0,47,112,97,115,116,101,108,50,51,47,50,0,47,112,97,115,116,101,108,50,51,47,51,0,47,112,97,115,116,101,108,50,52,47,49,0,47,112,97,115,116,101,108,50,52,47,50,0,47,112,
97,115,116,101,108,50,52,47,51,0,47,112,97,115,116,101,108,50,52,47,52,0,47,112,97,115,116,101,108,50,53,47,49,0,47,112,97,115,116,101,108,50,53,47,50,0,47,112,97,115,116,101,108,50,53,47,51,0,47,112,97,115,116,101,108,50,53,47,52,0,47,112,97,115,116,101,108,50,53,47,53,0,47,112,97,115,116,101,108,50,54,47,49,0,47,112,97,115,116,101,108,50,54,47,50,0,47,112,97,115,116,101,108,50,54,47,51,0,47,112,97,115,116,101,108,50,54,47,52,0,47,112,97,115,116,101,108,50,54,47,53,0,47,112,97,115,116,101,108,50,
54,47,54,0,47,112,97,115,116,101,108,50,55,47,49,0,47,112,97,115,116,101,108,50,55,47,50,0,47,112,97,115,116,101,108,50,55,47,51,0,47,112,97,115,116,101,108,50,55,47,52,0,47,112,97,115,116,101,108,50,55,47,53,0,47,112,97,115,116,101,108,50,55,47,54,0,47,112,97,115,116,101,108,50,55,47,55,0,47,112,97,115,116,101,108,50,56,47,49,0,47,112,97,115,116,101,108,50,56,47,50,0,47,112,97,115,116,101,108,50,56,47,51,0,47,112,97,115,116,101,108,50,56,47,52,0,47,112,97,115,116,101,108,50,56,47,53,0,47,112,97,
115,116,101,108,50,56,47,54,0,47,112,97,115,116,101,108,50,56,47,55,0,47,112,97,115,116,101,108,50,56,47,56,0,47,112,105,121,103,49,48,47,49,0,47,112,105,121,103,49,48,47,49,48,0,47,112,105,121,103,49,48,47,50,0,47,112,105,121,103,49,48,47,51,0,47,112,105,121,103,49,48,47,52,0,47,112,105,121,103,49,48,47,53,0,47,112,105,121,103,49,48,47,54,0,47,112,105,121,103,49,48,47,55,0,47,112,105,121,103,49,48,47,56,0,47,112,105,121,103,49,48,47,57,0,47,112,105,121,103,49,49,47,49,0,47,112,105,121,103,49,49,
47,49,48,0,47,112,105,121,103,49,49,47,49,49,0,47,112,105,121,103,49,49,47,50,0,47,112,105,121,103,49,49,47,51,0,47,112,105,121,103,49,49,47,52,0,47,112,105,121,103,49,49,47,53,0,47,112,105,121,103,49,49,47,54,0,47,112,105,121,103,49,49,47,55,0,47,112,105,121,103,49,49,47,56,0,47,112,105,121,103,49,49,47,57,0,47,112,105,121,103,51,47,49,0,47,112,105,121,103,51,47,50,0,47,112,105,121,103,51,47,51,0,47,112,105,121,103,52,47,49,0,47,112,105,121,103,52,47,50,0,47,112,105,121,103,52,47,51,0,47,112,105,
121,103,52,47,52,0,47,112,105,121,103,53,47,49,0,47,112,105,121,103,53,47,50,0,47,112,105,121,103,53,47,51,0,47,112,105,121,103,53,47,52,0,47,112,105,121,103,53,47,53,0,47,112,105,121,103,54,47,49,0,47,112,105,121,103,54,47,50,0,47,112,105,121,103,54,47,51,0,47,112,105,121,103,54,47,52,0,47,112,105,121,103,54,47,53,0,47,112,105,121,103,54,47,54,0,47,112,105,121,103,55,47,49,0,47,112,105,121,103,55,47,50,0,47,112,105,121,103,55,47,51,0,47,112,105,121,103,55,47,52,0,47,112,105,121,103,55,47,53,0,47,
112,105,121,103,55,47,54,0,47,112,105,121,103,55,47,55,0,47,112,105,121,103,56,47,49,0,47,112,105,121,103,56,47,50,0,47,112,105,121,103,56,47,51,0,47,112,105,121,103,56,47,52,0,47,112,105,121,103,56,47,53,0,47,112,105,121,103,56,47,54,0,47,112,105,121,103,56,47,55,0,47,112,105,121,103,56,47,56,0,47,112,105,121,103,57,47,49,0,47,112,105,121,103,57,47,50,0,47,112,105,121,103,57,47,51,0,47,112,105,121,103,57,47,52,0,47,112,105,121,103,57,47,53,0,47,112,105,121,103,57,47,54,0,47,112,105,121,103,57,47,
55,0,47,112,105,121,103,57,47,56,0,47,112,105,121,103,57,47,57,0,47,112,114,103,110,49,48,47,49,0,47,112,114,103,110,49,48,47,49,48,0,47,112,114,103,110,49,48,47,50,0,47,112,114,103,110,49,48,47,51,0,47,112,114,103,110,49,48,47,52,0,47,112,114,103,110,49,48,47,53,0,47,112,114,103,110,49,48,47,54,0,47,112,114,103,110,49,48,47,55,0,47,112,114,103,110,49,48,47,56,0,47,112,114,103,110,49,48,47,57,0,47,112,114,103,110,49,49,47,49,0,47,112,114,103,110,49,49,47,49,48,0,47,112,114,103,110,49,49,47,49,49,
0,47,112,114,103,110,49,49,47,50,0,47,112,114,103,110,49,49,47,51,0,47,112,114,103,110,49,49,47,52,0,47,112,114,103,110,49,49,47,53,0,47,112,114,103,110,49,49,47,54,0,47,112,114,103,110,49,49,47,55,0,47,112,114,103,110,49,49,47,56,0,47,112,114,103,110,49,49,47,57,0,47,112,114,103,110,51,47,49,0,47,112,114,103,110,51,47,50,0,47,112,114,103,110,51,47,51,0,47,112,114,103,110,52,47,49,0,47,112,114,103,110,52,47,50,0,47,112,114,103,110,52,47,51,0,47,112,114,103,110,52,47,52,0,47,112,114,103,110,53,47,
49,0,47,112,114,103,110,53,47,50,0,47,112,114,103,110,53,47,51,0,47,112,114,103,110,53,47,52,0,47,112,114,103,110,53,47,53,0,47,112,114,103,110,54,47,49,0,47,112,114,103,110,54,47,50,0,47,112,114,103,110,54,47,51,0,47,112,114,103,110,54,47,52,0,47,112,114,103,110,54,47,53,0,47,112,114,103,110,54,47,54,0,47,112,114,103,110,55,47,49,0,47,112,114,103,110,55,47,50,0,47,112,114,103,110,55,47,51,0,47,112,114,103,110,55,47,52,0,47,112,114,103,110,55,47,53,0,47,112,114,103,110,55,47,54,0,47,112,114,103,110,
55,47,55,0,47,112,114,103,110,56,47,49,0,47,112,114,103,110,56,47,50,0,47,112,114,103,110,56,47,51,0,47,112,114,103,110,56,47,52,0,47,112,114,103,110,56,47,53,0,47,112,114,103,110,56,47,54,0,47,112,114,103,110,56,47,55,0,47,112,114,103,110,56,47,56,0,47,112,114,103,110,57,47,49,0,47,112,114,103,110,57,47,50,0,47,112,114,103,110,57,47,51,0,47,112,114,103,110,57,47,52,0,47,112,114,103,110,57,47,53,0,47,112,114,103,110,57,47,54,0,47,112,114,103,110,57,47,55,0,47,112,114,103,110,57,47,56,0,47,112,114,
103,110,57,47,57,0,47,112,117,98,117,51,47,49,0,47,112,117,98,117,51,47,50,0,47,112,117,98,117,51,47,51,0,47,112,117,98,117,52,47,49,0,47,112,117,98,117,52,47,50,0,47,112,117,98,117,52,47,51,0,47,112,117,98,117,52,47,52,0,47,112,117,98,117,53,47,49,0,47,112,117,98,117,53,47,50,0,47,112,117,98,117,53,47,51,0,47,112,117,98,117,53,47,52,0,47,112,117,98,117,53,47,53,0,47,112,117,98,117,54,47,49,0,47,112,117,98,117,54,47,50,0,47,112,117,98,117,54,47,51,0,47,112,117,98,117,54,47,52,0,47,112,117,98,117,
54,47,53,0,47,112,117,98,117,54,47,54,0,47,112,117,98,117,55,47,49,0,47,112,117,98,117,55,47,50,0,47,112,117,98,117,55,47,51,0,47,112,117,98,117,55,47,52,0,47,112,117,98,117,55,47,53,0,47,112,117,98,117,55,47,54,0,47,112,117,98,117,55,47,55,0,47,112,117,98,117,56,47,49,0,47,112,117,98,117,56,47,50,0,47,112,117,98,117,56,47,51,0,47,112,117,98,117,56,47,52,0,47,112,117,98,117,56,47,53,0,47,112,117,98,117,56,47,54,0,47,112,117,98,117,56,47,55,0,47,112,117,98,117,56,47,56,0,47,112,117,98,117,57,47,49,
0,47,112,117,98,117,57,47,50,0,47,112,117,98,117,57,47,51,0,47,112,117,98,117,57,47,52,0,47,112,117,98,117,57,47,53,0,47,112,117,98,117,57,47,54,0,47,112,117,98,117,57,47,55,0,47,112,117,98,117,57,47,56,0,47,112,117,98,117,57,47,57,0,47,112,117,98,117,103,110,51,47,49,0,47,112,117,98,117,103,110,51,47,50,0,47,112,117,98,117,103,110,51,47,51,0,47,112,117,98,117,103,110,52,47,49,0,47,112,117,98,117,103,110,52,47,50,0,47,112,117,98,117,103,110,52,47,51,0,47,112,117,98,117,103,110,52,47,52,0,47,112,117,
98,117,103,110,53,47,49,0,47,112,117,98,117,103,110,53,47,50,0,47,112,117,98,117,103,110,53,47,51,0,47,112,117,98,117,103,110,53,47,52,0,47,112,117,98,117,103,110,53,47,53,0,47,112,117,98,117,103,110,54,47,49,0,47,112,117,98,117,103,110,54,47,50,0,47,112,117,98,117,103,110,54,47,51,0,47,112,117,98,117,103,110,54,47,52,0,47,112,117,98,117,103,110,54,47,53,0,47,112,117,98,117,103,110,54,47,54,0,47,112,117,98,117,103,110,55,47,49,0,47,112,117,98,117,103,110,55,47,50,0,47,112,117,98,117,103,110,55,47,
51,0,47,112,117,98,117,103,110,55,47,52,0,47,112,117,98,117,103,110,55,47,53,0,47,112,117,98,117,103,110,55,47,54,0,47,112,117,98,117,103,110,55,47,55,0,47,112,117,98,117,103,110,56,47,49,0,47,112,117,98,117,103,110,56,47,50,0,47,112,117,98,117,103,110,56,47,51,0,47,112,117,98,117,103,110,56,47,52,0,47,112,117,98,117,103,110,56,47,53,0,47,112,117,98,117,103,110,56,47,54,0,47,112,117,98,117,103,110,56,47,55,0,47,112,117,98,117,103,110,56,47,56,0,47,112,117,98,117,103,110,57,47,49,0,47,112,117,98,117,
103,110,57,47,50,0,47,112,117,98,117,103,110,57,47,51,0,47,112,117,98,117,103,110,57,47,52,0,47,112,117,98,117,103,110,57,47,53,0,47,112,117,98,117,103,110,57,47,54,0,47,112,117,98,117,103,110,57,47,55,0,47,112,117,98,117,103,110,57,47,56,0,47,112,117,98,117,103,110,57,47,57,0,47,112,117,111,114,49,48,47,49,0,47,112,117,111,114,49,48,47,49,48,0,47,112,117,111,114,49,48,47,50,0,47,112,117,111,114,49,48,47,51,0,47,112,117,111,114,49,48,47,52,0,47,112,117,111,114,49,48,47,53,0,47,112,117,111,114,49,
48,47,54,0,47,112,117,111,114,49,48,47,55,0,47,112,117,111,114,49,48,47,56,0,47,112,117,111,114,49,48,47,57,0,47,112,117,111,114,49,49,47,49,0,47,112,117,111,114,49,49,47,49,48,0,47,112,117,111,114,49,49,47,49,49,0,47,112,117,111,114,49,49,47,50,0,47,112,117,111,114,49,49,47,51,0,47,112,117,111,114,49,49,47,52,0,47,112,117,111,114,49,49,47,53,0,47,112,117,111,114,49,49,47,54,0,47,112,117,111,114,49,49,47,55,0,47,112,117,111,114,49,49,47,56,0,47,112,117,111,114,49,49,47,57,0,47,112,117,111,114,51,
47,49,0,47,112,117,111,114,51,47,50,0,47,112,117,111,114,51,47,51,0,47,112,117,111,114,52,47,49,0,47,112,117,111,114,52,47,50,0,47,112,117,111,114,52,47,51,0,47,112,117,111,114,52,47,52,0,47,112,117,111,114,53,47,49,0,47,112,117,111,114,53,47,50,0,47,112,117,111,114,53,47,51,0,47,112,117,111,114,53,47,52,0,47,112,117,111,114,53,47,53,0,47,112,117,111,114,54,47,49,0,47,112,117,111,114,54,47,50,0,47,112,117,111,114,54,47,51,0,47,112,117,111,114,54,47,52,0,47,112,117,111,114,54,47,53,0,47,112,117,111,
114,54,47,54,0,47,112,117,111,114,55,47,49,0,47,112,117,111,114,55,47,50,0,47,112,117,111,114,55,47,51,0,47,112,117,111,114,55,47,52,0,47,112,117,111,114,55,47,53,0,47,112,117,111,114,55,47,54,0,47,112,117,111,114,55,47,55,0,47,112,117,111,114,56,47,49,0,47,112,117,111,114,56,47,50,0,47,112,117,111,114,56,47,51,0,47,112,117,111,114,56,47,52,0,47,112,117,111,114,56,47,53,0,47,112,117,111,114,56,47,54,0,47,112,117,111,114,56,47,55,0,47,112,117,111,114,56,47,56,0,47,112,117,111,114,57,47,49,0,47,112,
117,111,114,57,47,50,0,47,112,117,111,114,57,47,51,0,47,112,117,111,114,57,47,52,0,47,112,117,111,114,57,47,53,0,47,112,117,111,114,57,47,54,0,47,112,117,111,114,57,47,55,0,47,112,117,111,114,57,47,56,0,47,112,117,111,114,57,47,57,0,47,112,117,114,100,51,47,49,0,47,112,117,114,100,51,47,50,0,47,112,117,114,100,51,47,51,0,47,112,117,114,100,52,47,49,0,47,112,117,114,100,52,47,50,0,47,112,117,114,100,52,47,51,0,47,112,117,114,100,52,47,52,0,47,112,117,114,100,53,47,49,0,47,112,117,114,100,53,47,50,
0,47,112,117,114,100,53,47,51,0,47,112,117,114,100,53,47,52,0,47,112,117,114,100,53,47,53,0,47,112,117,114,100,54,47,49,0,47,112,117,114,100,54,47,50,0,47,112,117,114,100,54,47,51,0,47,112,117,114,100,54,47,52,0,47,112,117,114,100,54,47,53,0,47,112,117,114,100,54,47,54,0,47,112,117,114,100,55,47,49,0,47,112,117,114,100,55,47,50,0,47,112,117,114,100,55,47,51,0,47,112,117,114,100,55,47,52,0,47,112,117,114,100,55,47,53,0,47,112,117,114,100,55,47,54,0,47,112,117,114,100,55,47,55,0,47,112,117,114,100,
56,47,49,0,47,112,117,114,100,56,47,50,0,47,112,117,114,100,56,47,51,0,47,112,117,114,100,56,47,52,0,47,112,117,114,100,56,47,53,0,47,112,117,114,100,56,47,54,0,47,112,117,114,100,56,47,55,0,47,112,117,114,100,56,47,56,0,47,112,117,114,100,57,47,49,0,47,112,117,114,100,57,47,50,0,47,112,117,114,100,57,47,51,0,47,112,117,114,100,57,47,52,0,47,112,117,114,100,57,47,53,0,47,112,117,114,100,57,47,54,0,47,112,117,114,100,57,47,55,0,47,112,117,114,100,57,47,56,0,47,112,117,114,100,57,47,57,0,47,112,117,
114,112,108,101,115,51,47,49,0,47,112,117,114,112,108,101,115,51,47,50,0,47,112,117,114,112,108,101,115,51,47,51,0,47,112,117,114,112,108,101,115,52,47,49,0,47,112,117,114,112,108,101,115,52,47,50,0,47,112,117,114,112,108,101,115,52,47,51,0,47,112,117,114,112,108,101,115,52,47,52,0,47,112,117,114,112,108,101,115,53,47,49,0,47,112,117,114,112,108,101,115,53,47,50,0,47,112,117,114,112,108,101,115,53,47,51,0,47,112,117,114,112,108,101,115,53,47,52,0,47,112,117,114,112,108,101,115,53,47,53,0,47,112,117,
114,112,108,101,115,54,47,49,0,47,112,117,114,112,108,101,115,54,47,50,0,47,112,117,114,112,108,101,115,54,47,51,0,47,112,117,114,112,108,101,115,54,47,52,0,47,112,117,114,112,108,101,115,54,47,53,0,47,112,117,114,112,108,101,115,54,47,54,0,47,112,117,114,112,108,101,115,55,47,49,0,47,112,117,114,112,108,101,115,55,47,50,0,47,112,117,114,112,108,101,115,55,47,51,0,47,112,117,114,112,108,101,115,55,47,52,0,47,112,117,114,112,108,101,115,55,47,53,0,47,112,117,114,112,108,101,115,55,47,54,0,47,112,117,
114,112,108,101,115,55,47,55,0,47,112,117,114,112,108,101,115,56,47,49,0,47,112,117,114,112,108,101,115,56,47,50,0,47,112,117,114,112,108,101,115,56,47,51,0,47,112,117,114,112,108,101,115,56,47,52,0,47,112,117,114,112,108,101,115,56,47,53,0,47,112,117,114,112,108,101,115,56,47,54,0,47,112,117,114,112,108,101,115,56,47,55,0,47,112,117,114,112,108,101,115,56,47,56,0,47,112,117,114,112,108,101,115,57,47,49,0,47,112,117,114,112,108,101,115,57,47,50,0,47,112,117,114,112,108,101,115,57,47,51,0,47,112,117,
114,112,108,101,115,57,47,52,0,47,112,117,114,112,108,101,115,57,47,53,0,47,112,117,114,112,108,101,115,57,47,54,0,47,112,117,114,112,108,101,115,57,47,55,0,47,112,117,114,112,108,101,115,57,47,56,0,47,112,117,114,112,108,101,115,57,47,57,0,47,114,100,98,117,49,48,47,49,0,47,114,100,98,117,49,48,47,49,48,0,47,114,100,98,117,49,48,47,50,0,47,114,100,98,117,49,48,47,51,0,47,114,100,98,117,49,48,47,52,0,47,114,100,98,117,49,48,47,53,0,47,114,100,98,117,49,48,47,54,0,47,114,100,98,117,49,48,47,55,0,47,
114,100,98,117,49,48,47,56,0,47,114,100,98,117,49,48,47,57,0,47,114,100,98,117,49,49,47,49,0,47,114,100,98,117,49,49,47,49,48,0,47,114,100,98,117,49,49,47,49,49,0,47,114,100,98,117,49,49,47,50,0,47,114,100,98,117,49,49,47,51,0,47,114,100,98,117,49,49,47,52,0,47,114,100,98,117,49,49,47,53,0,47,114,100,98,117,49,49,47,54,0,47,114,100,98,117,49,49,47,55,0,47,114,100,98,117,49,49,47,56,0,47,114,100,98,117,49,49,47,57,0,47,114,100,98,117,51,47,49,0,47,114,100,98,117,51,47,50,0,47,114,100,98,117,51,47,
51,0,47,114,100,98,117,52,47,49,0,47,114,100,98,117,52,47,50,0,47,114,100,98,117,52,47,51,0,47,114,100,98,117,52,47,52,0,47,114,100,98,117,53,47,49,0,47,114,100,98,117,53,47,50,0,47,114,100,98,117,53,47,51,0,47,114,100,98,117,53,47,52,0,47,114,100,98,117,53,47,53,0,47,114,100,98,117,54,47,49,0,47,114,100,98,117,54,47,50,0,47,114,100,98,117,54,47,51,0,47,114,100,98,117,54,47,52,0,47,114,100,98,117,54,47,53,0,47,114,100,98,117,54,47,54,0,47,114,100,98,117,55,47,49,0,47,114,100,98,117,55,47,50,0,47,
114,100,98,117,55,47,51,0,47,114,100,98,117,55,47,52,0,47,114,100,98,117,55,47,53,0,47,114,100,98,117,55,47,54,0,47,114,100,98,117,55,47,55,0,47,114,100,98,117,56,47,49,0,47,114,100,98,117,56,47,50,0,47,114,100,98,117,56,47,51,0,47,114,100,98,117,56,47,52,0,47,114,100,98,117,56,47,53,0,47,114,100,98,117,56,47,54,0,47,114,100,98,117,56,47,55,0,47,114,100,98,117,56,47,56,0,47,114,100,98,117,57,47,49,0,47,114,100,98,117,57,47,50,0,47,114,100,98,117,57,47,51,0,47,114,100,98,117,57,47,52,0,47,114,100,
98,117,57,47,53,0,47,114,100,98,117,57,47,54,0,47,114,100,98,117,57,47,55,0,47,114,100,98,117,57,47,56,0,47,114,100,98,117,57,47,57,0,47,114,100,103,121,49,48,47,49,0,47,114,100,103,121,49,48,47,49,48,0,47,114,100,103,121,49,48,47,50,0,47,114,100,103,121,49,48,47,51,0,47,114,100,103,121,49,48,47,52,0,47,114,100,103,121,49,48,47,53,0,47,114,100,103,121,49,48,47,54,0,47,114,100,103,121,49,48,47,55,0,47,114,100,103,121,49,48,47,56,0,47,114,100,103,121,49,48,47,57,0,47,114,100,103,121,49,49,47,49,0,47,
114,100,103,121,49,49,47,49,48,0,47,114,100,103,121,49,49,47,49,49,0,47,114,100,103,121,49,49,47,50,0,47,114,100,103,121,49,49,47,51,0,47,114,100,103,121,49,49,47,52,0,47,114,100,103,121,49,49,47,53,0,47,114,100,103,121,49,49,47,54,0,47,114,100,103,121,49,49,47,55,0,47,114,100,103,121,49,49,47,56,0,47,114,100,103,121,49,49,47,57,0,47,114,100,103,121,51,47,49,0,47,114,100,103,121,51,47,50,0,47,114,100,103,121,51,47,51,0,47,114,100,103,121,52,47,49,0,47,114,100,103,121,52,47,50,0,47,114,100,103,121,
52,47,51,0,47,114,100,103,121,52,47,52,0,47,114,100,103,121,53,47,49,0,47,114,100,103,121,53,47,50,0,47,114,100,103,121,53,47,51,0,47,114,100,103,121,53,47,52,0,47,114,100,103,121,53,47,53,0,47,114,100,103,121,54,47,49,0,47,114,100,103,121,54,47,50,0,47,114,100,103,121,54,47,51,0,47,114,100,103,121,54,47,52,0,47,114,100,103,121,54,47,53,0,47,114,100,103,121,54,47,54,0,47,114,100,103,121,55,47,49,0,47,114,100,103,121,55,47,50,0,47,114,100,103,121,55,47,51,0,47,114,100,103,121,55,47,52,0,47,114,100,
103,121,55,47,53,0,47,114,100,103,121,55,47,54,0,47,114,100,103,121,55,47,55,0,47,114,100,103,121,56,47,49,0,47,114,100,103,121,56,47,50,0,47,114,100,103,121,56,47,51,0,47,114,100,103,121,56,47,52,0,47,114,100,103,121,56,47,53,0,47,114,100,103,121,56,47,54,0,47,114,100,103,121,56,47,55,0,47,114,100,103,121,56,47,56,0,47,114,100,103,121,57,47,49,0,47,114,100,103,121,57,47,50,0,47,114,100,103,121,57,47,51,0,47,114,100,103,121,57,47,52,0,47,114,100,103,121,57,47,53,0,47,114,100,103,121,57,47,54,0,47,
114,100,103,121,57,47,55,0,47,114,100,103,121,57,47,56,0,47,114,100,103,121,57,47,57,0,47,114,100,112,117,51,47,49,0,47,114,100,112,117,51,47,50,0,47,114,100,112,117,51,47,51,0,47,114,100,112,117,52,47,49,0,47,114,100,112,117,52,47,50,0,47,114,100,112,117,52,47,51,0,47,114,100,112,117,52,47,52,0,47,114,100,112,117,53,47,49,0,47,114,100,112,117,53,47,50,0,47,114,100,112,117,53,47,51,0,47,114,100,112,117,53,47,52,0,47,114,100,112,117,53,47,53,0,47,114,100,112,117,54,47,49,0,47,114,100,112,117,54,47,
50,0,47,114,100,112,117,54,47,51,0,47,114,100,112,117,54,47,52,0,47,114,100,112,117,54,47,53,0,47,114,100,112,117,54,47,54,0,47,114,100,112,117,55,47,49,0,47,114,100,112,117,55,47,50,0,47,114,100,112,117,55,47,51,0,47,114,100,112,117,55,47,52,0,47,114,100,112,117,55,47,53,0,47,114,100,112,117,55,47,54,0,47,114,100,112,117,55,47,55,0,47,114,100,112,117,56,47,49,0,47,114,100,112,117,56,47,50,0,47,114,100,112,117,56,47,51,0,47,114,100,112,117,56,47,52,0,47,114,100,112,117,56,47,53,0,47,114,100,112,117,
56,47,54,0,47,114,100,112,117,56,47,55,0,47,114,100,112,117,56,47,56,0,47,114,100,112,117,57,47,49,0,47,114,100,112,117,57,47,50,0,47,114,100,112,117,57,47,51,0,47,114,100,112,117,57,47,52,0,47,114,100,112,117,57,47,53,0,47,114,100,112,117,57,47,54,0,47,114,100,112,117,57,47,55,0,47,114,100,112,117,57,47,56,0,47,114,100,112,117,57,47,57,0,47,114,100,121,108,98,117,49,48,47,49,0,47,114,100,121,108,98,117,49,48,47,49,48,0,47,114,100,121,108,98,117,49,48,47,50,0,47,114,100,121,108,98,117,49,48,47,51,
0,47,114,100,121,108,98,117,49,48,47,52,0,47,114,100,121,108,98,117,49,48,47,53,0,47,114,100,121,108,98,117,49,48,47,54,0,47,114,100,121,108,98,117,49,48,47,55,0,47,114,100,121,108,98,117,49,48,47,56,0,47,114,100,121,108,98,117,49,48,47,57,0,47,114,100,121,108,98,117,49,49,47,49,0,47,114,100,121,108,98,117,49,49,47,49,48,0,47,114,100,121,108,98,117,49,49,47,49,49,0,47,114,100,121,108,98,117,49,49,47,50,0,47,114,100,121,108,98,117,49,49,47,51,0,47,114,100,121,108,98,117,49,49,47,52,0,47,114,100,121,
108,98,117,49,49,47,53,0,47,114,100,121,108,98,117,49,49,47,54,0,47,114,100,121,108,98,117,49,49,47,55,0,47,114,100,121,108,98,117,49,49,47,56,0,47,114,100,121,108,98,117,49,49,47,57,0,47,114,100,121,108,98,117,51,47,49,0,47,114,100,121,108,98,117,51,47,50,0,47,114,100,121,108,98,117,51,47,51,0,47,114,100,121,108,98,117,52,47,49,0,47,114,100,121,108,98,117,52,47,50,0,47,114,100,121,108,98,117,52,47,51,0,47,114,100,121,108,98,117,52,47,52,0,47,114,100,121,108,98,117,53,47,49,0,47,114,100,121,108,98,
117,53,47,50,0,47,114,100,121,108,98,117,53,47,51,0,47,114,100,121,108,98,117,53,47,52,0,47,114,100,121,108,98,117,53,47,53,0,47,114,100,121,108,98,117,54,47,49,0,47,114,100,121,108,98,117,54,47,50,0,47,114,100,121,108,98,117,54,47,51,0,47,114,100,121,108,98,117,54,47,52,0,47,114,100,121,108,98,117,54,47,53,0,47,114,100,121,108,98,117,54,47,54,0,47,114,100,121,108,98,117,55,47,49,0,47,114,100,121,108,98,117,55,47,50,0,47,114,100,121,108,98,117,55,47,51,0,47,114,100,121,108,98,117,55,47,52,0,47,114,
100,121,108,98,117,55,47,53,0,47,114,100,121,108,98,117,55,47,54,0,47,114,100,121,108,98,117,55,47,55,0,47,114,100,121,108,98,117,56,47,49,0,47,114,100,121,108,98,117,56,47,50,0,47,114,100,121,108,98,117,56,47,51,0,47,114,100,121,108,98,117,56,47,52,0,47,114,100,121,108,98,117,56,47,53,0,47,114,100,121,108,98,117,56,47,54,0,47,114,100,121,108,98,117,56,47,55,0,47,114,100,121,108,98,117,56,47,56,0,47,114,100,121,108,98,117,57,47,49,0,47,114,100,121,108,98,117,57,47,50,0,47,114,100,121,108,98,117,57,
47,51,0,47,114,100,121,108,98,117,57,47,52,0,47,114,100,121,108,98,117,57,47,53,0,47,114,100,121,108,98,117,57,47,54,0,47,114,100,121,108,98,117,57,47,55,0,47,114,100,121,108,98,117,57,47,56,0,47,114,100,121,108,98,117,57,47,57,0,47,114,100,121,108,103,110,49,48,47,49,0,47,114,100,121,108,103,110,49,48,47,49,48,0,47,114,100,121,108,103,110,49,48,47,50,0,47,114,100,121,108,103,110,49,48,47,51,0,47,114,100,121,108,103,110,49,48,47,52,0,47,114,100,121,108,103,110,49,48,47,53,0,47,114,100,121,108,103,
110,49,48,47,54,0,47,114,100,121,108,103,110,49,48,47,55,0,47,114,100,121,108,103,110,49,48,47,56,0,47,114,100,121,108,103,110,49,48,47,57,0,47,114,100,121,108,103,110,49,49,47,49,0,47,114,100,121,108,103,110,49,49,47,49,48,0,47,114,100,121,108,103,110,49,49,47,49,49,0,47,114,100,121,108,103,110,49,49,47,50,0,47,114,100,121,108,103,110,49,49,47,51,0,47,114,100,121,108,103,110,49,49,47,52,0,47,114,100,121,108,103,110,49,49,47,53,0,47,114,100,121,108,103,110,49,49,47,54,0,47,114,100,121,108,103,110,
49,49,47,55,0,47,114,100,121,108,103,110,49,49,47,56,0,47,114,100,121,108,103,110,49,49,47,57,0,47,114,100,121,108,103,110,51,47,49,0,47,114,100,121,108,103,110,51,47,50,0,47,114,100,121,108,103,110,51,47,51,0,47,114,100,121,108,103,110,52,47,49,0,47,114,100,121,108,103,110,52,47,50,0,47,114,100,121,108,103,110,52,47,51,0,47,114,100,121,108,103,110,52,47,52,0,47,114,100,121,108,103,110,53,47,49,0,47,114,100,121,108,103,110,53,47,50,0,47,114,100,121,108,103,110,53,47,51,0,47,114,100,121,108,103,110,
53,47,52,0,47,114,100,121,108,103,110,53,47,53,0,47,114,100,121,108,103,110,54,47,49,0,47,114,100,121,108,103,110,54,47,50,0,47,114,100,121,108,103,110,54,47,51,0,47,114,100,121,108,103,110,54,47,52,0,47,114,100,121,108,103,110,54,47,53,0,47,114,100,121,108,103,110,54,47,54,0,47,114,100,121,108,103,110,55,47,49,0,47,114,100,121,108,103,110,55,47,50,0,47,114,100,121,108,103,110,55,47,51,0,47,114,100,121,108,103,110,55,47,52,0,47,114,100,121,108,103,110,55,47,53,0,47,114,100,121,108,103,110,55,47,54,
0,47,114,100,121,108,103,110,55,47,55,0,47,114,100,121,108,103,110,56,47,49,0,47,114,100,121,108,103,110,56,47,50,0,47,114,100,121,108,103,110,56,47,51,0,47,114,100,121,108,103,110,56,47,52,0,47,114,100,121,108,103,110,56,47,53,0,47,114,100,121,108,103,110,56,47,54,0,47,114,100,121,108,103,110,56,47,55,0,47,114,100,121,108,103,110,56,47,56,0,47,114,100,121,108,103,110,57,47,49,0,47,114,100,121,108,103,110,57,47,50,0,47,114,100,121,108,103,110,57,47,51,0,47,114,100,121,108,103,110,57,47,52,0,47,114,
100,121,108,103,110,57,47,53,0,47,114,100,121,108,103,110,57,47,54,0,47,114,100,121,108,103,110,57,47,55,0,47,114,100,121,108,103,110,57,47,56,0,47,114,100,121,108,103,110,57,47,57,0,47,114,101,100,115,51,47,49,0,47,114,101,100,115,51,47,50,0,47,114,101,100,115,51,47,51,0,47,114,101,100,115,52,47,49,0,47,114,101,100,115,52,47,50,0,47,114,101,100,115,52,47,51,0,47,114,101,100,115,52,47,52,0,47,114,101,100,115,53,47,49,0,47,114,101,100,115,53,47,50,0,47,114,101,100,115,53,47,51,0,47,114,101,100,115,
53,47,52,0,47,114,101,100,115,53,47,53,0,47,114,101,100,115,54,47,49,0,47,114,101,100,115,54,47,50,0,47,114,101,100,115,54,47,51,0,47,114,101,100,115,54,47,52,0,47,114,101,100,115,54,47,53,0,47,114,101,100,115,54,47,54,0,47,114,101,100,115,55,47,49,0,47,114,101,100,115,55,47,50,0,47,114,101,100,115,55,47,51,0,47,114,101,100,115,55,47,52,0,47,114,101,100,115,55,47,53,0,47,114,101,100,115,55,47,54,0,47,114,101,100,115,55,47,55,0,47,114,101,100,115,56,47,49,0,47,114,101,100,115,56,47,50,0,47,114,101,
100,115,56,47,51,0,47,114,101,100,115,56,47,52,0,47,114,101,100,115,56,47,53,0,47,114,101,100,115,56,47,54,0,47,114,101,100,115,56,47,55,0,47,114,101,100,115,56,47,56,0,47,114,101,100,115,57,47,49,0,47,114,101,100,115,57,47,50,0,47,114,101,100,115,57,47,51,0,47,114,101,100,115,57,47,52,0,47,114,101,100,115,57,47,53,0,47,114,101,100,115,57,47,54,0,47,114,101,100,115,57,47,55,0,47,114,101,100,115,57,47,56,0,47,114,101,100,115,57,47,57,0,47,115,101,116,49,51,47,49,0,47,115,101,116,49,51,47,50,0,47,115,
101,116,49,51,47,51,0,47,115,101,116,49,52,47,49,0,47,115,101,116,49,52,47,50,0,47,115,101,116,49,52,47,51,0,47,115,101,116,49,52,47,52,0,47,115,101,116,49,53,47,49,0,47,115,101,116,49,53,47,50,0,47,115,101,116,49,53,47,51,0,47,115,101,116,49,53,47,52,0,47,115,101,116,49,53,47,53,0,47,115,101,116,49,54,47,49,0,47,115,101,116,49,54,47,50,0,47,115,101,116,49,54,47,51,0,47,115,101,116,49,54,47,52,0,47,115,101,116,49,54,47,53,0,47,115,101,116,49,54,47,54,0,47,115,101,116,49,55,47,49,0,47,115,101,116,
49,55,47,50,0,47,115,101,116,49,55,47,51,0,47,115,101,116,49,55,47,52,0,47,115,101,116,49,55,47,53,0,47,115,101,116,49,55,47,54,0,47,115,101,116,49,55,47,55,0,47,115,101,116,49,56,47,49,0,47,115,101,116,49,56,47,50,0,47,115,101,116,49,56,47,51,0,47,115,101,116,49,56,47,52,0,47,115,101,116,49,56,47,53,0,47,115,101,116,49,56,47,54,0,47,115,101,116,49,56,47,55,0,47,115,101,116,49,56,47,56,0,47,115,101,116,49,57,47,49,0,47,115,101,116,49,57,47,50,0,47,115,101,116,49,57,47,51,0,47,115,101,116,49,57,47,
52,0,47,115,101,116,49,57,47,53,0,47,115,101,116,49,57,47,54,0,47,115,101,116,49,57,47,55,0,47,115,101,116,49,57,47,56,0,47,115,101,116,49,57,47,57,0,47,115,101,116,50,51,47,49,0,47,115,101,116,50,51,47,50,0,47,115,101,116,50,51,47,51,0,47,115,101,116,50,52,47,49,0,47,115,101,116,50,52,47,50,0,47,115,101,116,50,52,47,51,0,47,115,101,116,50,52,47,52,0,47,115,101,116,50,53,47,49,0,47,115,101,116,50,53,47,50,0,47,115,101,116,50,53,47,51,0,47,115,101,116,50,53,47,52,0,47,115,101,116,50,53,47,53,0,47,
115,101,116,50,54,47,49,0,47,115,101,116,50,54,47,50,0,47,115,101,116,50,54,47,51,0,47,115,101,116,50,54,47,52,0,47,115,101,116,50,54,47,53,0,47,115,101,116,50,54,47,54,0,47,115,101,116,50,55,47,49,0,47,115,101,116,50,55,47,50,0,47,115,101,116,50,55,47,51,0,47,115,101,116,50,55,47,52,0,47,115,101,116,50,55,47,53,0,47,115,101,116,50,55,47,54,0,47,115,101,116,50,55,47,55,0,47,115,101,116,50,56,47,49,0,47,115,101,116,50,56,47,50,0,47,115,101,116,50,56,47,51,0,47,115,101,116,50,56,47,52,0,47,115,101,
116,50,56,47,53,0,47,115,101,116,50,56,47,54,0,47,115,101,116,50,56,47,55,0,47,115,101,116,50,56,47,56,0,47,115,101,116,51,49,48,47,49,0,47,115,101,116,51,49,48,47,49,48,0,47,115,101,116,51,49,48,47,50,0,47,115,101,116,51,49,48,47,51,0,47,115,101,116,51,49,48,47,52,0,47,115,101,116,51,49,48,47,53,0,47,115,101,116,51,49,48,47,54,0,47,115,101,116,51,49,48,47,55,0,47,115,101,116,51,49,48,47,56,0,47,115,101,116,51,49,48,47,57,0,47,115,101,116,51,49,49,47,49,0,47,115,101,116,51,49,49,47,49,48,0,47,115,
101,116,51,49,49,47,49,49,0,47,115,101,116,51,49,49,47,50,0,47,115,101,116,51,49,49,47,51,0,47,115,101,116,51,49,49,47,52,0,47,115,101,116,51,49,49,47,53,0,47,115,101,116,51,49,49,47,54,0,47,115,101,116,51,49,49,47,55,0,47,115,101,116,51,49,49,47,56,0,47,115,101,116,51,49,49,47,57,0,47,115,101,116,51,49,50,47,49,0,47,115,101,116,51,49,50,47,49,48,0,47,115,101,116,51,49,50,47,49,49,0,47,115,101,116,51,49,50,47,49,50,0,47,115,101,116,51,49,50,47,50,0,47,115,101,116,51,49,50,47,51,0,47,115,101,116,51,
49,50,47,52,0,47,115,101,116,51,49,50,47,53,0,47,115,101,116,51,49,50,47,54,0,47,115,101,116,51,49,50,47,55,0,47,115,101,116,51,49,50,47,56,0,47,115,101,116,51,49,50,47,57,0,47,115,101,116,51,51,47,49,0,47,115,101,116,51,51,47,50,0,47,115,101,116,51,51,47,51,0,47,115,101,116,51,52,47,49,0,47,115,101,116,51,52,47,50,0,47,115,101,116,51,52,47,51,0,47,115,101,116,51,52,47,52,0,47,115,101,116,51,53,47,49,0,47,115,101,116,51,53,47,50,0,47,115,101,116,51,53,47,51,0,47,115,101,116,51,53,47,52,0,47,115,101,
116,51,53,47,53,0,47,115,101,116,51,54,47,49,0,47,115,101,116,51,54,47,50,0,47,115,101,116,51,54,47,51,0,47,115,101,116,51,54,47,52,0,47,115,101,116,51,54,47,53,0,47,115,101,116,51,54,47,54,0,47,115,101,116,51,55,47,49,0,47,115,101,116,51,55,47,50,0,47,115,101,116,51,55,47,51,0,47,115,101,116,51,55,47,52,0,47,115,101,116,51,55,47,53,0,47,115,101,116,51,55,47,54,0,47,115,101,116,51,55,47,55,0,47,115,101,116,51,56,47,49,0,47,115,101,116,51,56,47,50,0,47,115,101,116,51,56,47,51,0,47,115,101,116,51,56,
47,52,0,47,115,101,116,51,56,47,53,0,47,115,101,116,51,56,47,54,0,47,115,101,116,51,56,47,55,0,47,115,101,116,51,56,47,56,0,47,115,101,116,51,57,47,49,0,47,115,101,116,51,57,47,50,0,47,115,101,116,51,57,47,51,0,47,115,101,116,51,57,47,52,0,47,115,101,116,51,57,47,53,0,47,115,101,116,51,57,47,54,0,47,115,101,116,51,57,47,55,0,47,115,101,116,51,57,47,56,0,47,115,101,116,51,57,47,57,0,47,115,112,101,99,116,114,97,108,49,48,47,49,0,47,115,112,101,99,116,114,97,108,49,48,47,49,48,0,47,115,112,101,99,116,
114,97,108,49,48,47,50,0,47,115,112,101,99,116,114,97,108,49,48,47,51,0,47,115,112,101,99,116,114,97,108,49,48,47,52,0,47,115,112,101,99,116,114,97,108,49,48,47,53,0,47,115,112,101,99,116,114,97,108,49,48,47,54,0,47,115,112,101,99,116,114,97,108,49,48,47,55,0,47,115,112,101,99,116,114,97,108,49,48,47,56,0,47,115,112,101,99,116,114,97,108,49,48,47,57,0,47,115,112,101,99,116,114],"i8",4,n.q+152326);
D([97,108,49,49,47,49,0,47,115,112,101,99,116,114,97,108,49,49,47,49,48,0,47,115,112,101,99,116,114,97,108,49,49,47,49,49,0,47,115,112,101,99,116,114,97,108,49,49,47,50,0,47,115,112,101,99,116,114,97,108,49,49,47,51,0,47,115,112,101,99,116,114,97,108,49,49,47,52,0,47,115,112,101,99,116,114,97,108,49,49,47,53,0,47,115,112,101,99,116,114,97,108,49,49,47,54,0,47,115,112,101,99,116,114,97,108,49,49,47,55,0,47,115,112,101,99,116,114,97,108,49,49,47,56,0,47,115,112,101,99,116,114,97,108,49,49,47,57,0,47,
115,112,101,99,116,114,97,108,51,47,49,0,47,115,112,101,99,116,114,97,108,51,47,50,0,47,115,112,101,99,116,114,97,108,51,47,51,0,47,115,112,101,99,116,114,97,108,52,47,49,0,47,115,112,101,99,116,114,97,108,52,47,50,0,47,115,112,101,99,116,114,97,108,52,47,51,0,47,115,112,101,99,116,114,97,108,52,47,52,0,47,115,112,101,99,116,114,97,108,53,47,49,0,47,115,112,101,99,116,114,97,108,53,47,50,0,47,115,112,101,99,116,114,97,108,53,47,51,0,47,115,112,101,99,116,114,97,108,53,47,52,0,47,115,112,101,99,116,
114,97,108,53,47,53,0,47,115,112,101,99,116,114,97,108,54,47,49,0,47,115,112,101,99,116,114,97,108,54,47,50,0,47,115,112,101,99,116,114,97,108,54,47,51,0,47,115,112,101,99,116,114,97,108,54,47,52,0,47,115,112,101,99,116,114,97,108,54,47,53,0,47,115,112,101,99,116,114,97,108,54,47,54,0,47,115,112,101,99,116,114,97,108,55,47,49,0,47,115,112,101,99,116,114,97,108,55,47,50,0,47,115,112,101,99,116,114,97,108,55,47,51,0,47,115,112,101,99,116,114,97,108,55,47,52,0,47,115,112,101,99,116,114,97,108,55,47,
53,0,47,115,112,101,99,116,114,97,108,55,47,54,0,47,115,112,101,99,116,114,97,108,55,47,55,0,47,115,112,101,99,116,114,97,108,56,47,49,0,47,115,112,101,99,116,114,97,108,56,47,50,0,47,115,112,101,99,116,114,97,108,56,47,51,0,47,115,112,101,99,116,114,97,108,56,47,52,0,47,115,112,101,99,116,114,97,108,56,47,53,0,47,115,112,101,99,116,114,97,108,56,47,54,0,47,115,112,101,99,116,114,97,108,56,47,55,0,47,115,112,101,99,116,114,97,108,56,47,56,0,47,115,112,101,99,116,114,97,108,57,47,49,0,47,115,112,101,
99,116,114,97,108,57,47,50,0,47,115,112,101,99,116,114,97,108,57,47,51,0,47,115,112,101,99,116,114,97,108,57,47,52,0,47,115,112,101,99,116,114,97,108,57,47,53,0,47,115,112,101,99,116,114,97,108,57,47,54,0,47,115,112,101,99,116,114,97,108,57,47,55,0,47,115,112,101,99,116,114,97,108,57,47,56,0,47,115,112,101,99,116,114,97,108,57,47,57,0,47,115,118,103,47,97,108,105,99,101,98,108,117,101,0,47,115,118,103,47,97,110,116,105,113,117,101,119,104,105,116,101,0,47,115,118,103,47,97,113,117,97,0,47,115,118,
103,47,97,113,117,97,109,97,114,105,110,101,0,47,115,118,103,47,97,122,117,114,101,0,47,115,118,103,47,98,101,105,103,101,0,47,115,118,103,47,98,105,115,113,117,101,0,47,115,118,103,47,98,108,97,99,107,0,47,115,118,103,47,98,108,97,110,99,104,101,100,97,108,109,111,110,100,0,47,115,118,103,47,98,108,117,101,0,47,115,118,103,47,98,108,117,101,118,105,111,108,101,116,0,47,115,118,103,47,98,114,111,119,110,0,47,115,118,103,47,98,117,114,108,121,119,111,111,100,0,47,115,118,103,47,99,97,100,101,116,98,
108,117,101,0,47,115,118,103,47,99,104,97,114,116,114,101,117,115,101,0,47,115,118,103,47,99,104,111,99,111,108,97,116,101,0,47,115,118,103,47,99,111,114,97,108,0,47,115,118,103,47,99,111,114,110,102,108,111,119,101,114,98,108,117,101,0,47,115,118,103,47,99,111,114,110,115,105,108,107,0,47,115,118,103,47,99,114,105,109,115,111,110,0,47,115,118,103,47,99,121,97,110,0,47,115,118,103,47,100,97,114,107,98,108,117,101,0,47,115,118,103,47,100,97,114,107,99,121,97,110,0,47,115,118,103,47,100,97,114,107,
103,111,108,100,101,110,114,111,100,0,47,115,118,103,47,100,97,114,107,103,114,97,121,0,47,115,118,103,47,100,97,114,107,103,114,101,101,110,0,47,115,118,103,47,100,97,114,107,103,114,101,121,0,47,115,118,103,47,100,97,114,107,107,104,97,107,105,0,47,115,118,103,47,100,97,114,107,109,97,103,101,110,116,97,0,47,115,118,103,47,100,97,114,107,111,108,105,118,101,103,114,101,101,110,0,47,115,118,103,47,100,97,114,107,111,114,97,110,103,101,0,47,115,118,103,47,100,97,114,107,111,114,99,104,105,100,0,47,
115,118,103,47,100,97,114,107,114,101,100,0,47,115,118,103,47,100,97,114,107,115,97,108,109,111,110,0,47,115,118,103,47,100,97,114,107,115,101,97,103,114,101,101,110,0,47,115,118,103,47,100,97,114,107,115,108,97,116,101,98,108,117,101,0,47,115,118,103,47,100,97,114,107,115,108,97,116,101,103,114,97,121,0,47,115,118,103,47,100,97,114,107,115,108,97,116,101,103,114,101,121,0,47,115,118,103,47,100,97,114,107,116,117,114,113,117,111,105,115,101,0,47,115,118,103,47,100,97,114,107,118,105,111,108,101,116,
0,47,115,118,103,47,100,101,101,112,112,105,110,107,0,47,115,118,103,47,100,101,101,112,115,107,121,98,108,117,101,0,47,115,118,103,47,100,105,109,103,114,97,121,0,47,115,118,103,47,100,105,109,103,114,101,121,0,47,115,118,103,47,100,111,100,103,101,114,98,108,117,101,0,47,115,118,103,47,102,105,114,101,98,114,105,99,107,0,47,115,118,103,47,102,108,111,114,97,108,119,104,105,116,101,0,47,115,118,103,47,102,111,114,101,115,116,103,114,101,101,110,0,47,115,118,103,47,102,117,99,104,115,105,97,0,47,
115,118,103,47,103,97,105,110,115,98,111,114,111,0,47,115,118,103,47,103,104,111,115,116,119,104,105,116,101,0,47,115,118,103,47,103,111,108,100,0,47,115,118,103,47,103,111,108,100,101,110,114,111,100,0,47,115,118,103,47,103,114,97,121,0,47,115,118,103,47,103,114,101,101,110,0,47,115,118,103,47,103,114,101,101,110,121,101,108,108,111,119,0,47,115,118,103,47,103,114,101,121,0,47,115,118,103,47,104,111,110,101,121,100,101,119,0,47,115,118,103,47,104,111,116,112,105,110,107,0,47,115,118,103,47,105,110,
100,105,97,110,114,101,100,0,47,115,118,103,47,105,110,100,105,103,111,0,47,115,118,103,47,105,118,111,114,121,0,47,115,118,103,47,107,104,97,107,105,0,47,115,118,103,47,108,97,118,101,110,100,101,114,0,47,115,118,103,47,108,97,118,101,110,100,101,114,98,108,117,115,104,0,47,115,118,103,47,108,97,119,110,103,114,101,101,110,0,47,115,118,103,47,108,101,109,111,110,99,104,105,102,102,111,110,0,47,115,118,103,47,108,105,103,104,116,98,108,117,101,0,47,115,118,103,47,108,105,103,104,116,99,111,114,97,
108,0,47,115,118,103,47,108,105,103,104,116,99,121,97,110,0,47,115,118,103,47,108,105,103,104,116,103,111,108,100,101,110,114,111,100,121,101,108,108,111,119,0,47,115,118,103,47,108,105,103,104,116,103,114,97,121,0,47,115,118,103,47,108,105,103,104,116,103,114,101,101,110,0,47,115,118,103,47,108,105,103,104,116,103,114,101,121,0,47,115,118,103,47,108,105,103,104,116,112,105,110,107,0,47,115,118,103,47,108,105,103,104,116,115,97,108,109,111,110,0,47,115,118,103,47,108,105,103,104,116,115,101,97,103,
114,101,101,110,0,47,115,118,103,47,108,105,103,104,116,115,107,121,98,108,117,101,0,47,115,118,103,47,108,105,103,104,116,115,108,97,116,101,103,114,97,121,0,47,115,118,103,47,108,105,103,104,116,115,108,97,116,101,103,114,101,121,0,47,115,118,103,47,108,105,103,104,116,115,116,101,101,108,98,108,117,101,0,47,115,118,103,47,108,105,103,104,116,121,101,108,108,111,119,0,47,115,118,103,47,108,105,109,101,0,47,115,118,103,47,108,105,109,101,103,114,101,101,110,0,47,115,118,103,47,108,105,110,101,110,
0,47,115,118,103,47,109,97,103,101,110,116,97,0,47,115,118,103,47,109,97,114,111,111,110,0,47,115,118,103,47,109,101,100,105,117,109,97,113,117,97,109,97,114,105,110,101,0,47,115,118,103,47,109,101,100,105,117,109,98,108,117,101,0,47,115,118,103,47,109,101,100,105,117,109,111,114,99,104,105,100,0,47,115,118,103,47,109,101,100,105,117,109,112,117,114,112,108,101,0,47,115,118,103,47,109,101,100,105,117,109,115,101,97,103,114,101,101,110,0,47,115,118,103,47,109,101,100,105,117,109,115,108,97,116,101,
98,108,117,101,0,47,115,118,103,47,109,101,100,105,117,109,115,112,114,105,110,103,103,114,101,101,110,0,47,115,118,103,47,109,101,100,105,117,109,116,117,114,113,117,111,105,115,101,0,47,115,118,103,47,109,101,100,105,117,109,118,105,111,108,101,116,114,101,100,0,47,115,118,103,47,109,105,100,110,105,103,104,116,98,108,117,101,0,47,115,118,103,47,109,105,110,116,99,114,101,97,109,0,47,115,118,103,47,109,105,115,116,121,114,111,115,101,0,47,115,118,103,47,109,111,99,99,97,115,105,110,0,47,115,118,
103,47,110,97,118,97,106,111,119,104,105,116,101,0,47,115,118,103,47,110,97,118,121,0,47,115,118,103,47,111,108,100,108,97,99,101,0,47,115,118,103,47,111,108,105,118,101,0,47,115,118,103,47,111,108,105,118,101,100,114,97,98,0,47,115,118,103,47,111,114,97,110,103,101,0,47,115,118,103,47,111,114,97,110,103,101,114,101,100,0,47,115,118,103,47,111,114,99,104,105,100,0,47,115,118,103,47,112,97,108,101,103,111,108,100,101,110,114,111,100,0,47,115,118,103,47,112,97,108,101,103,114,101,101,110,0,47,115,118,
103,47,112,97,108,101,116,117,114,113,117,111,105,115,101,0,47,115,118,103,47,112,97,108,101,118,105,111,108,101,116,114,101,100,0,47,115,118,103,47,112,97,112,97,121,97,119,104,105,112,0,47,115,118,103,47,112,101,97,99,104,112,117,102,102,0,47,115,118,103,47,112,101,114,117,0,47,115,118,103,47,112,105,110,107,0,47,115,118,103,47,112,108,117,109,0,47,115,118,103,47,112,111,119,100,101,114,98,108,117,101,0,47,115,118,103,47,112,117,114,112,108,101,0,47,115,118,103,47,114,101,100,0,47,115,118,103,47,
114,111,115,121,98,114,111,119,110,0,47,115,118,103,47,114,111,121,97,108,98,108,117,101,0,47,115,118,103,47,115,97,100,100,108,101,98,114,111,119,110,0,47,115,118,103,47,115,97,108,109,111,110,0,47,115,118,103,47,115,97,110,100,121,98,114,111,119,110,0,47,115,118,103,47,115,101,97,103,114,101,101,110,0,47,115,118,103,47,115,101,97,115,104,101,108,108,0,47,115,118,103,47,115,105,101,110,110,97,0,47,115,118,103,47,115,105,108,118,101,114,0,47,115,118,103,47,115,107,121,98,108,117,101,0,47,115,118,
103,47,115,108,97,116,101,98,108,117,101,0,47,115,118,103,47,115,108,97,116,101,103,114,97,121,0,47,115,118,103,47,115,108,97,116,101,103,114,101,121,0,47,115,118,103,47,115,110,111,119,0,47,115,118,103,47,115,112,114,105,110,103,103,114,101,101,110,0,47,115,118,103,47,115,116,101,101,108,98,108,117,101,0,47,115,118,103,47,116,97,110,0,47,115,118,103,47,116,101,97,108,0,47,115,118,103,47,116,104,105,115,116,108,101,0,47,115,118,103,47,116,111,109,97,116,111,0,47,115,118,103,47,116,117,114,113,117,
111,105,115,101,0,47,115,118,103,47,118,105,111,108,101,116,0,47,115,118,103,47,119,104,101,97,116,0,47,115,118,103,47,119,104,105,116,101,0,47,115,118,103,47,119,104,105,116,101,115,109,111,107,101,0,47,115,118,103,47,121,101,108,108,111,119,0,47,115,118,103,47,121,101,108,108,111,119,103,114,101,101,110,0,47,121,108,103,110,51,47,49,0,47,121,108,103,110,51,47,50,0,47,121,108,103,110,51,47,51,0,47,121,108,103,110,52,47,49,0,47,121,108,103,110,52,47,50,0,47,121,108,103,110,52,47,51,0,47,121,108,103,
110,52,47,52,0,47,121,108,103,110,53,47,49,0,47,121,108,103,110,53,47,50,0,47,121,108,103,110,53,47,51,0,47,121,108,103,110,53,47,52,0,47,121,108,103,110,53,47,53,0,47,121,108,103,110,54,47,49,0,47,121,108,103,110,54,47,50,0,47,121,108,103,110,54,47,51,0,47,121,108,103,110,54,47,52,0,47,121,108,103,110,54,47,53,0,47,121,108,103,110,54,47,54,0,47,121,108,103,110,55,47,49,0,47,121,108,103,110,55,47,50,0,47,121,108,103,110,55,47,51,0,47,121,108,103,110,55,47,52,0,47,121,108,103,110,55,47,53,0,47,121,
108,103,110,55,47,54,0,47,121,108,103,110,55,47,55,0,47,121,108,103,110,56,47,49,0,47,121,108,103,110,56,47,50,0,47,121,108,103,110,56,47,51,0,47,121,108,103,110,56,47,52,0,47,121,108,103,110,56,47,53,0,47,121,108,103,110,56,47,54,0,47,121,108,103,110,56,47,55,0,47,121,108,103,110,56,47,56,0,47,121,108,103,110,57,47,49,0,47,121,108,103,110,57,47,50,0,47,121,108,103,110,57,47,51,0,47,121,108,103,110,57,47,52,0,47,121,108,103,110,57,47,53,0,47,121,108,103,110,57,47,54,0,47,121,108,103,110,57,47,55,
0,47,121,108,103,110,57,47,56,0,47,121,108,103,110,57,47,57,0,47,121,108,103,110,98,117,51,47,49,0,47,121,108,103,110,98,117,51,47,50,0,47,121,108,103,110,98,117,51,47,51,0,47,121,108,103,110,98,117,52,47,49,0,47,121,108,103,110,98,117,52,47,50,0,47,121,108,103,110,98,117,52,47,51,0,47,121,108,103,110,98,117,52,47,52,0,47,121,108,103,110,98,117,53,47,49,0,47,121,108,103,110,98,117,53,47,50,0,47,121,108,103,110,98,117,53,47,51,0,47,121,108,103,110,98,117,53,47,52,0,47,121,108,103,110,98,117,53,47,
53,0,47,121,108,103,110,98,117,54,47,49,0,47,121,108,103,110,98,117,54,47,50,0,47,121,108,103,110,98,117,54,47,51,0,47,121,108,103,110,98,117,54,47,52,0,47,121,108,103,110,98,117,54,47,53,0,47,121,108,103,110,98,117,54,47,54,0,47,121,108,103,110,98,117,55,47,49,0,47,121,108,103,110,98,117,55,47,50,0,47,121,108,103,110,98,117,55,47,51,0,47,121,108,103,110,98,117,55,47,52,0,47,121,108,103,110,98,117,55,47,53,0,47,121,108,103,110,98,117,55,47,54,0,47,121,108,103,110,98,117,55,47,55,0,47,121,108,103,
110,98,117,56,47,49,0,47,121,108,103,110,98,117,56,47,50,0,47,121,108,103,110,98,117,56,47,51,0,47,121,108,103,110,98,117,56,47,52,0,47,121,108,103,110,98,117,56,47,53,0,47,121,108,103,110,98,117,56,47,54,0,47,121,108,103,110,98,117,56,47,55,0,47,121,108,103,110,98,117,56,47,56,0,47,121,108,103,110,98,117,57,47,49,0,47,121,108,103,110,98,117,57,47,50,0,47,121,108,103,110,98,117,57,47,51,0,47,121,108,103,110,98,117,57,47,52,0,47,121,108,103,110,98,117,57,47,53,0,47,121,108,103,110,98,117,57,47,54,
0,47,121,108,103,110,98,117,57,47,55,0,47,121,108,103,110,98,117,57,47,56,0,47,121,108,103,110,98,117,57,47,57,0,47,121,108,111,114,98,114,51,47,49,0,47,121,108,111,114,98,114,51,47,50,0,47,121,108,111,114,98,114,51,47,51,0,47,121,108,111,114,98,114,52,47,49,0,47,121,108,111,114,98,114,52,47,50,0,47,121,108,111,114,98,114,52,47,51,0,47,121,108,111,114,98,114,52,47,52,0,47,121,108,111,114,98,114,53,47,49,0,47,121,108,111,114,98,114,53,47,50,0,47,121,108,111,114,98,114,53,47,51,0,47,121,108,111,114,
98,114,53,47,52,0,47,121,108,111,114,98,114,53,47,53,0,47,121,108,111,114,98,114,54,47,49,0,47,121,108,111,114,98,114,54,47,50,0,47,121,108,111,114,98,114,54,47,51,0,47,121,108,111,114,98,114,54,47,52,0,47,121,108,111,114,98,114,54,47,53,0,47,121,108,111,114,98,114,54,47,54,0,47,121,108,111,114,98,114,55,47,49,0,47,121,108,111,114,98,114,55,47,50,0,47,121,108,111,114,98,114,55,47,51,0,47,121,108,111,114,98,114,55,47,52,0,47,121,108,111,114,98,114,55,47,53,0,47,121,108,111,114,98,114,55,47,54,0,47,
121,108,111,114,98,114,55,47,55,0,47,121,108,111,114,98,114,56,47,49,0,47,121,108,111,114,98,114,56,47,50,0,47,121,108,111,114,98,114,56,47,51,0,47,121,108,111,114,98,114,56,47,52,0,47,121,108,111,114,98,114,56,47,53,0,47,121,108,111,114,98,114,56,47,54,0,47,121,108,111,114,98,114,56,47,55,0,47,121,108,111,114,98,114,56,47,56,0,47,121,108,111,114,98,114,57,47,49,0,47,121,108,111,114,98,114,57,47,50,0,47,121,108,111,114,98,114,57,47,51,0,47,121,108,111,114,98,114,57,47,52,0,47,121,108,111,114,98,114,
57,47,53,0,47,121,108,111,114,98,114,57,47,54,0,47,121,108,111,114,98,114,57,47,55,0,47,121,108,111,114,98,114,57,47,56,0,47,121,108,111,114,98,114,57,47,57,0,47,121,108,111,114,114,100,51,47,49,0,47,121,108,111,114,114,100,51,47,50,0,47,121,108,111,114,114,100,51,47,51,0,47,121,108,111,114,114,100,52,47,49,0,47,121,108,111,114,114,100,52,47,50,0,47,121,108,111,114,114,100,52,47,51,0,47,121,108,111,114,114,100,52,47,52,0,47,121,108,111,114,114,100,53,47,49,0,47,121,108,111,114,114,100,53,47,50,0,
47,121,108,111,114,114,100,53,47,51,0,47,121,108,111,114,114,100,53,47,52,0,47,121,108,111,114,114,100,53,47,53,0,47,121,108,111,114,114,100,54,47,49,0,47,121,108,111,114,114,100,54,47,50,0,47,121,108,111,114,114,100,54,47,51,0,47,121,108,111,114,114,100,54,47,52,0,47,121,108,111,114,114,100,54,47,53,0,47,121,108,111,114,114,100,54,47,54,0,47,121,108,111,114,114,100,55,47,49,0,47,121,108,111,114,114,100,55,47,50,0,47,121,108,111,114,114,100,55,47,51,0,47,121,108,111,114,114,100,55,47,52,0,47,121,
108,111,114,114,100,55,47,53,0,47,121,108,111,114,114,100,55,47,54,0,47,121,108,111,114,114,100,55,47,55,0,47,121,108,111,114,114,100,56,47,49,0,47,121,108,111,114,114,100,56,47,50,0,47,121,108,111,114,114,100,56,47,51,0,47,121,108,111,114,114,100,56,47,52,0,47,121,108,111,114,114,100,56,47,53,0,47,121,108,111,114,114,100,56,47,54,0,47,121,108,111,114,114,100,56,47,55,0,47,121,108,111,114,114,100,56,47,56,0,47,121,108,111,114,114,100,57,47,49,0,47,121,108,111,114,114,100,57,47,50,0,47,121,108,111,
114,114,100,57,47,51,0,47,121,108,111,114,114,100,57,47,52,0,47,121,108,111,114,114,100,57,47,53,0,47,121,108,111,114,114,100,57,47,54,0,47,121,108,111,114,114,100,57,47,55,0,47,121,108,111,114,114,100,57,47,56,0,47,121,108,111,114,114,100,57,47,57,0,97,108,105,99,101,98,108,117,101,0,97,110,116,105,113,117,101,119,104,105,116,101,0,97,110,116,105,113,117,101,119,104,105,116,101,49,0,97,110,116,105,113,117,101,119,104,105,116,101,50,0,97,110,116,105,113,117,101,119,104,105,116,101,51,0,97,110,116,
105,113,117,101,119,104,105,116,101,52,0,97,113,117,97,109,97,114,105,110,101,0,97,113,117,97,109,97,114,105,110,101,49,0,97,113,117,97,109,97,114,105,110,101,50,0,97,113,117,97,109,97,114,105,110,101,51,0,97,113,117,97,109,97,114,105,110,101,52,0,97,122,117,114,101,0,97,122,117,114,101,49,0,97,122,117,114,101,50,0,97,122,117,114,101,51,0,97,122,117,114,101,52,0,98,101,105,103,101,0,98,105,115,113,117,101,0,98,105,115,113,117,101,49,0,98,105,115,113,117,101,50,0,98,105,115,113,117,101,51,0,98,105,
115,113,117,101,52,0,98,108,97,110,99,104,101,100,97,108,109,111,110,100,0,98,108,117,101,0,98,108,117,101,49,0,98,108,117,101,50,0,98,108,117,101,51,0,98,108,117,101,52,0,98,108,117,101,118,105,111,108,101,116,0,98,114,111,119,110,0,98,114,111,119,110,49,0,98,114,111,119,110,50,0,98,114,111,119,110,51,0,98,114,111,119,110,52,0,98,117,114,108,121,119,111,111,100,0,98,117,114,108,121,119,111,111,100,49,0,98,117,114,108,121,119,111,111,100,50,0,98,117,114,108,121,119,111,111,100,51,0,98,117,114,108,
121,119,111,111,100,52,0,99,97,100,101,116,98,108,117,101,0,99,97,100,101,116,98,108,117,101,49,0,99,97,100,101,116,98,108,117,101,50,0,99,97,100,101,116,98,108,117,101,51,0,99,97,100,101,116,98,108,117,101,52,0,99,104,97,114,116,114,101,117,115,101,0,99,104,97,114,116,114,101,117,115,101,49,0,99,104,97,114,116,114,101,117,115,101,50,0,99,104,97,114,116,114,101,117,115,101,51,0,99,104,97,114,116,114,101,117,115,101,52,0,99,104,111,99,111,108,97,116,101,0,99,104,111,99,111,108,97,116,101,49,0,99,104,
111,99,111,108,97,116,101,50,0,99,104,111,99,111,108,97,116,101,51,0,99,104,111,99,111,108,97,116,101,52,0,99,111,114,97,108,0,99,111,114,97,108,49,0,99,111,114,97,108,50,0,99,111,114,97,108,51,0,99,111,114,97,108,52,0,99,111,114,110,102,108,111,119,101,114,98,108,117,101,0,99,111,114,110,115,105,108,107,0,99,111,114,110,115,105,108,107,49,0,99,111,114,110,115,105,108,107,50,0,99,111,114,110,115,105,108,107,51,0,99,111,114,110,115,105,108,107,52,0,99,114,105,109,115,111,110,0,99,121,97,110,0,99,121,
97,110,49,0,99,121,97,110,50,0,99,121,97,110,51,0,99,121,97,110,52,0,100,97,114,107,103,111,108,100,101,110,114,111,100,0,100,97,114,107,103,111,108,100,101,110,114,111,100,49,0,100,97,114,107,103,111,108,100,101,110,114,111,100,50,0,100,97,114,107,103,111,108,100,101,110,114,111,100,51,0,100,97,114,107,103,111,108,100,101,110,114,111,100,52,0,100,97,114,107,103,114,101,101,110,0,100,97,114,107,107,104,97,107,105,0,100,97,114,107,111,108,105,118,101,103,114,101,101,110,0,100,97,114,107,111,108,105,
118,101,103,114,101,101,110,49,0,100,97,114,107,111,108,105,118,101,103,114,101,101,110,50,0,100,97,114,107,111,108,105,118,101,103,114,101,101,110,51,0,100,97,114,107,111,108,105,118,101,103,114,101,101,110,52,0,100,97,114,107,111,114,97,110,103,101,0,100,97,114,107,111,114,97,110,103,101,49,0,100,97,114,107,111,114,97,110,103,101,50,0,100,97,114,107,111,114,97,110,103,101,51,0,100,97,114,107,111,114,97,110,103,101,52,0,100,97,114,107,111,114,99,104,105,100,0,100,97,114,107,111,114,99,104,105,100,
49,0,100,97,114,107,111,114,99,104,105,100,50,0,100,97,114,107,111,114,99,104,105,100,51,0,100,97,114,107,111,114,99,104,105,100,52,0,100,97,114,107,115,97,108,109,111,110,0,100,97,114,107,115,101,97,103,114,101,101,110,0,100,97,114,107,115,101,97,103,114,101,101,110,49,0,100,97,114,107,115,101,97,103,114,101,101,110,50,0,100,97,114,107,115,101,97,103,114,101,101,110,51,0,100,97,114,107,115,101,97,103,114,101,101,110,52,0,100,97,114,107,115,108,97,116,101,98,108,117,101,0,100,97,114,107,115,108,97,
116,101,103,114,97,121,0,100,97,114,107,115,108,97,116,101,103,114,97,121,49,0,100,97,114,107,115,108,97,116,101,103,114,97,121,50,0,100,97,114,107,115,108,97,116,101,103,114,97,121,51,0,100,97,114,107,115,108,97,116,101,103,114,97,121,52,0,100,97,114,107,115,108,97,116,101,103,114,101,121,0,100,97,114,107,116,117,114,113,117,111,105,115,101,0,100,97,114,107,118,105,111,108,101,116,0,100,101,101,112,112,105,110,107,0,100,101,101,112,112,105,110,107,49,0,100,101,101,112,112,105,110,107,50,0,100,101,
101,112,112,105,110,107,51,0,100,101,101,112,112,105,110,107,52,0,100,101,101,112,115,107,121,98,108,117,101,0,100,101,101,112,115,107,121,98,108,117,101,49,0,100,101,101,112,115,107,121,98,108,117,101,50,0,100,101,101,112,115,107,121,98,108,117,101,51,0,100,101,101,112,115,107,121,98,108,117,101,52,0,100,105,109,103,114,97,121,0,100,105,109,103,114,101,121,0,100,111,100,103,101,114,98,108,117,101,0,100,111,100,103,101,114,98,108,117,101,49,0,100,111,100,103,101,114,98,108,117,101,50,0,100,111,100,
103,101,114,98,108,117,101,51,0,100,111,100,103,101,114,98,108,117,101,52,0,102,105,114,101,98,114,105,99,107,0,102,105,114,101,98,114,105,99,107,49,0,102,105,114,101,98,114,105,99,107,50,0,102,105,114,101,98,114,105,99,107,51,0,102,105,114,101,98,114,105,99,107,52,0,102,108,111,114,97,108,119,104,105,116,101,0,102,111,114,101,115,116,103,114,101,101,110,0,103,97,105,110,115,98,111,114,111,0,103,104,111,115,116,119,104,105,116,101,0,103,111,108,100,0,103,111,108,100,49,0,103,111,108,100,50,0,103,
111,108,100,51,0,103,111,108,100,52,0,103,111,108,100,101,110,114,111,100,0,103,111,108,100,101,110,114,111,100,49,0,103,111,108,100,101,110,114,111,100,50,0,103,111,108,100,101,110,114,111,100,51,0,103,111,108,100,101,110,114,111,100,52,0,103,114,97,121,0,103,114,97,121,48,0,103,114,97,121,49,0,103,114,97,121,49,48,0,103,114,97,121,49,48,48,0,103,114,97,121,49,49,0,103,114,97,121,49,50,0,103,114,97,121,49,51,0,103,114,97,121,49,52,0,103,114,97,121,49,53,0,103,114,97,121,49,54,0,103,114,97,121,49,
55,0,103,114,97,121,49,56,0,103,114,97,121,49,57,0,103,114,97,121,50,0,103,114,97,121,50,48,0,103,114,97,121,50,49,0,103,114,97,121,50,50,0,103,114,97,121,50,51,0,103,114,97,121,50,52,0,103,114,97,121,50,53,0,103,114,97,121,50,54,0,103,114,97,121,50,55,0,103,114,97,121,50,56,0,103,114,97,121,50,57,0,103,114,97,121,51,0,103,114,97,121,51,48,0,103,114,97,121,51,49,0,103,114,97,121,51,50,0,103,114,97,121,51,51,0,103,114,97,121,51,52,0,103,114,97,121,51,53,0,103,114,97,121,51,54,0,103,114,97,121,51,55,
0,103,114,97,121,51,56,0,103,114,97,121,51,57,0,103,114,97,121,52,0,103,114,97,121,52,48,0,103,114,97,121,52,49,0,103,114,97,121,52,50,0,103,114,97,121,52,51,0,103,114,97,121,52,52,0,103,114,97,121,52,53,0,103,114,97,121,52,54,0,103,114,97,121,52,55,0,103,114,97,121,52,56,0,103,114,97,121,52,57,0,103,114,97,121,53,0,103,114,97,121,53,48,0,103,114,97,121,53,49,0,103,114,97,121,53,50,0,103,114,97,121,53,51,0,103,114,97,121,53,52,0,103,114,97,121,53,53,0,103,114,97,121,53,54,0,103,114,97,121,53,55,0,
103,114,97,121,53,56,0,103,114,97,121,53,57,0,103,114,97,121,54,0,103,114,97,121,54,48,0,103,114,97,121,54,49,0,103,114,97,121,54,50,0,103,114,97,121,54,51,0,103,114,97,121,54,52,0,103,114,97,121,54,53,0,103,114,97,121,54,54,0,103,114,97,121,54,55,0,103,114,97,121,54,56,0,103,114,97,121,54,57,0,103,114,97,121,55,0,103,114,97,121,55,48,0,103,114,97,121,55,49,0,103,114,97,121,55,50,0,103,114,97,121,55,51,0,103,114,97,121,55,52,0,103,114,97,121,55,53,0,103,114,97,121,55,54,0,103,114,97,121,55,55,0,103,
114,97,121,55,56,0,103,114,97,121,55,57,0,103,114,97,121,56,0,103,114,97,121,56,48,0,103,114,97,121,56,49,0,103,114,97,121,56,50,0,103,114,97,121,56,51,0,103,114,97,121,56,52,0,103,114,97,121,56,53,0,103,114,97,121,56,54,0,103,114,97,121,56,55,0,103,114,97,121,56,56,0,103,114,97,121,56,57,0,103,114,97,121,57,0,103,114,97,121,57,48,0,103,114,97,121,57,49,0,103,114,97,121,57,50,0,103,114,97,121,57,51,0,103,114,97,121,57,52,0,103,114,97,121,57,53,0,103,114,97,121,57,54,0,103,114,97,121,57,55,0,103,114,
97,121,57,56,0,103,114,97,121,57,57,0,103,114,101,101,110,0,103,114,101,101,110,49,0,103,114,101,101,110,50,0,103,114,101,101,110,51,0,103,114,101,101,110,52,0,103,114,101,101,110,121,101,108,108,111,119,0,103,114,101,121,0,103,114,101,121,48,0,103,114,101,121,49,0,103,114,101,121,49,48,0,103,114,101,121,49,48,48,0,103,114,101,121,49,49,0,103,114,101,121,49,50,0,103,114,101,121,49,51,0,103,114,101,121,49,52,0,103,114,101,121,49,53,0,103,114,101,121,49,54,0,103,114,101,121,49,55,0,103,114,101,121,
49,56,0,103,114,101,121,49,57,0,103,114,101,121,50,0,103,114,101,121,50,48,0,103,114,101,121,50,49,0,103,114,101,121,50,50,0,103,114,101,121,50,51,0,103,114,101,121,50,52,0,103,114,101,121,50,53,0,103,114,101,121,50,54,0,103,114,101,121,50,55,0,103,114,101,121,50,56,0,103,114,101,121,50,57,0,103,114,101,121,51,0,103,114,101,121,51,48,0,103,114,101,121,51,49,0,103,114,101,121,51,50,0,103,114,101,121,51,51,0,103,114,101,121,51,52,0,103,114,101,121,51,53,0,103,114,101,121,51,54,0,103,114,101,121,51,
55,0,103,114,101,121,51,56,0,103,114,101,121,51,57,0,103,114,101,121,52,0,103,114,101,121,52,48,0,103,114,101,121,52,49,0,103,114,101,121,52,50,0,103,114,101,121,52,51,0,103,114,101,121,52,52,0,103,114,101,121,52,53,0,103,114,101,121,52,54,0,103,114,101,121,52,55,0,103,114,101,121,52,56,0,103,114,101,121,52,57,0,103,114,101,121,53,0,103,114,101,121,53,48,0,103,114,101,121,53,49,0,103,114,101,121,53,50,0,103,114,101,121,53,51,0,103,114,101,121,53,52,0,103,114,101,121,53,53,0,103,114,101,121,53,54,
0,103,114,101,121,53,55,0,103,114,101,121,53,56,0,103,114,101,121,53,57,0,103,114,101,121,54,0,103,114,101,121,54,48,0,103,114,101,121,54,49,0,103,114,101,121,54,50,0,103,114,101,121,54,51,0,103,114,101,121,54,52,0,103,114,101,121,54,53,0,103,114,101,121,54,54,0,103,114,101,121,54,55,0,103,114,101,121,54,56,0,103,114,101,121,54,57,0,103,114,101,121,55,0,103,114,101,121,55,48,0,103,114,101,121,55,49,0,103,114,101,121,55,50,0,103,114,101,121,55,51,0,103,114,101,121,55,52,0,103,114,101,121,55,53,0,103,
114,101,121,55,54,0,103,114,101,121,55,55,0,103,114,101,121,55,56,0,103,114,101,121,55,57,0,103,114,101,121,56,0,103,114,101,121,56,48,0,103,114,101,121,56,49,0,103,114,101,121,56,50,0,103,114,101,121,56,51,0,103,114,101,121,56,52,0,103,114,101,121,56,53,0,103,114,101,121,56,54,0,103,114,101,121,56,55,0,103,114,101,121,56,56,0,103,114,101,121,56,57,0,103,114,101,121,57,0,103,114,101,121,57,48,0,103,114,101,121,57,49,0,103,114,101,121,57,50,0,103,114,101,121,57,51,0,103,114,101,121,57,52,0,103,114,
101,121,57,53,0,103,114,101,121,57,54,0,103,114,101,121,57,55,0,103,114,101,121,57,56,0,103,114,101,121,57,57,0,104,111,110,101,121,100,101,119,0,104,111,110,101,121,100,101,119,49,0,104,111,110,101,121,100,101,119,50,0,104,111,110,101,121,100,101,119,51,0,104,111,110,101,121,100,101,119,52,0,104,111,116,112,105,110,107,0,104,111,116,112,105,110,107,49,0,104,111,116,112,105,110,107,50,0,104,111,116,112,105,110,107,51,0,104,111,116,112,105,110,107,52,0,105,110,100,105,97,110,114,101,100,0,105,110,
100,105,97,110,114,101,100,49,0,105,110,100,105,97,110,114,101,100,50,0,105,110,100,105,97,110,114,101,100,51,0,105,110,100,105,97,110,114,101,100,52,0,105,110,100,105,103,111,0,105,110,118,105,115,0,105,118,111,114,121,0,105,118,111,114,121,49,0,105,118,111,114,121,50,0,105,118,111,114,121,51,0,105,118,111,114,121,52,0,107,104,97,107,105,0,107,104,97,107,105,49,0,107,104,97,107,105,50,0,107,104,97,107,105,51,0,107,104,97,107,105,52,0,108,97,118,101,110,100,101,114,0,108,97,118,101,110,100,101,114,
98,108,117,115,104,0,108,97,118,101,110,100,101,114,98,108,117,115,104,49,0,108,97,118,101,110,100,101,114,98,108,117,115,104,50,0,108,97,118,101,110,100,101,114,98,108,117,115,104,51,0,108,97,118,101,110,100,101,114,98,108,117,115,104,52,0,108,97,119,110,103,114,101,101,110,0,108,101,109,111,110,99,104,105,102,102,111,110,0,108,101,109,111,110,99,104,105,102,102,111,110,49,0,108,101,109,111,110,99,104,105,102,102,111,110,50,0,108,101,109,111,110,99,104,105,102,102,111,110,51,0,108,101,109,111,110,
99,104,105,102,102,111,110,52,0,108,105,103,104,116,98,108,117,101,0,108,105,103,104,116,98,108,117,101,49,0,108,105,103,104,116,98,108,117,101,50,0,108,105,103,104,116,98,108,117,101,51,0,108,105,103,104,116,98,108,117,101,52,0,108,105,103,104,116,99,111,114,97,108,0,108,105,103,104,116,99,121,97,110,0,108,105,103,104,116,99,121,97,110,49,0,108,105,103,104,116,99,121,97,110,50,0,108,105,103,104,116,99,121,97,110,51,0,108,105,103,104,116,99,121,97,110,52,0,108,105,103,104,116,103,111,108,100,101,
110,114,111,100,0,108,105,103,104,116,103,111,108,100,101,110,114,111,100,49,0,108,105,103,104,116,103,111,108,100,101,110,114,111,100,50,0,108,105,103,104,116,103,111,108,100,101,110,114,111,100,51,0,108,105,103,104,116,103,111,108,100,101,110,114,111,100,52,0,108,105,103,104,116,103,111,108,100,101,110,114,111,100,121,101,108,108,111,119,0,108,105,103,104,116,103,114,97,121,0,108,105,103,104,116,103,114,101,121,0,108,105,103,104,116,112,105,110,107,0,108,105,103,104,116,112,105,110,107,49,0,108,
105,103,104,116,112,105,110,107,50,0,108,105,103,104,116,112,105,110,107,51,0,108,105,103,104,116,112,105,110,107,52,0,108,105,103,104,116,115,97,108,109,111,110,0,108,105,103,104,116,115,97,108,109,111,110,49,0,108,105,103,104,116,115,97,108,109,111,110,50,0,108,105,103,104,116,115,97,108,109,111,110,51,0,108,105,103,104,116,115,97,108,109,111,110,52,0,108,105,103,104,116,115,101,97,103,114,101,101,110,0,108,105,103,104,116,115,107,121,98,108,117,101,0,108,105,103,104,116,115,107,121,98,108,117,
101,49,0,108,105,103,104,116,115,107,121,98,108,117,101,50,0,108,105,103,104,116,115,107,121,98,108,117,101,51,0,108,105,103,104,116,115,107,121,98,108,117,101,52,0,108,105,103,104,116,115,108,97,116,101,98,108,117,101,0,108,105,103,104,116,115,108,97,116,101,103,114,97,121,0,108,105,103,104,116,115,108,97,116,101,103,114,101,121,0,108,105,103,104,116,115,116,101,101,108,98,108,117,101,0,108,105,103,104,116,115,116,101,101,108,98,108,117,101,49,0,108,105,103,104,116,115,116,101,101,108,98,108,117,
101,50,0,108,105,103,104,116,115,116,101,101,108,98,108,117,101,51,0,108,105,103,104,116,115,116,101,101,108,98,108,117,101,52,0,108,105,103,104,116,121,101,108,108,111,119,0,108,105,103,104,116,121,101,108,108,111,119,49,0,108,105,103,104,116,121,101,108,108,111,119,50,0,108,105,103,104,116,121,101,108,108,111,119,51,0,108,105,103,104,116,121,101,108,108,111,119,52,0,108,105,109,101,103,114,101,101,110,0,108,105,110,101,110,0,109,97,103,101,110,116,97,0,109,97,103,101,110,116,97,49,0,109,97,103,
101,110,116,97,50,0,109,97,103,101,110,116,97,51,0,109,97,103,101,110,116,97,52,0,109,97,114,111,111,110,0,109,97,114,111,111,110,49,0,109,97,114,111,111,110,50,0,109,97,114,111,111,110,51,0,109,97,114,111,111,110,52,0,109,101,100,105,117,109,97,113,117,97,109,97,114,105,110,101,0,109,101,100,105,117,109,98,108,117,101,0,109,101,100,105,117,109,111,114,99,104,105,100,0,109,101,100,105,117,109,111,114,99,104,105,100,49,0,109,101,100,105,117,109,111,114,99,104,105,100,50,0,109,101,100,105,117,109,111,
114,99,104,105,100,51,0,109,101,100,105,117,109,111,114,99,104,105,100,52,0,109,101,100,105,117,109,112,117,114,112,108,101,0,109,101,100,105,117,109,112,117,114,112,108,101,49,0,109,101,100,105,117,109,112,117,114,112,108,101,50,0,109,101,100,105,117,109,112,117,114,112,108,101,51,0,109,101,100,105,117,109,112,117,114,112,108,101,52,0,109,101,100,105,117,109,115,101,97,103,114,101,101,110,0,109,101,100,105,117,109,115,108,97,116,101,98,108,117,101,0,109,101,100,105,117,109,115,112,114,105,110,103,
103,114,101,101,110,0,109,101,100,105,117,109,116,117,114,113,117,111,105,115,101,0,109,101,100,105,117,109,118,105,111,108,101,116,114,101,100,0,109,105,100,110,105,103,104,116,98,108,117,101,0,109,105,110,116,99,114,101,97,109,0,109,105,115,116,121,114,111,115,101,0,109,105,115,116,121,114,111,115,101,49,0,109,105,115,116,121,114,111,115,101,50,0,109,105,115,116,121,114,111,115,101,51,0,109,105,115,116,121,114,111,115,101,52,0,109,111,99,99,97,115,105,110,0,110,97,118,97,106,111,119,104,105,116,
101,0,110,97,118,97,106,111,119,104,105,116,101,49,0,110,97,118,97,106,111,119,104,105,116,101,50,0,110,97,118,97,106,111,119,104,105,116,101,51,0,110,97,118,97,106,111,119,104,105,116,101,52,0,110,97,118,121,0,110,97,118,121,98,108,117,101,0,110,111,110,101,0,111,108,100,108,97,99,101,0,111,108,105,118,101,100,114,97,98,0,111,108,105,118,101,100,114,97,98,49,0,111,108,105,118,101,100,114,97,98,50,0,111,108,105,118,101,100,114,97,98,51,0,111,108,105,118,101,100,114,97,98,52,0,111,114,97,110,103,101,
0,111,114,97,110,103,101,49,0,111,114,97,110,103,101,50,0,111,114,97,110,103,101,51,0,111,114,97,110,103,101,52,0,111,114,97,110,103,101,114,101,100,0,111,114,97,110,103,101,114,101,100,49,0,111,114,97,110,103,101,114,101,100,50,0,111,114,97,110,103,101,114,101,100,51,0,111,114,97,110,103,101,114,101,100,52,0,111,114,99,104,105,100,0,111,114,99,104,105,100,49,0,111,114,99,104,105,100,50,0,111,114,99,104,105,100,51,0,111,114,99,104,105,100,52,0,112,97,108,101,103,111,108,100,101,110,114,111,100,0,
112,97,108,101,103,114,101,101,110,0,112,97,108,101,103,114,101,101,110,49,0,112,97,108,101,103,114,101,101,110,50,0,112,97,108,101,103,114,101,101,110,51,0,112,97,108,101,103,114,101,101,110,52,0,112,97,108,101,116,117,114,113,117,111,105,115,101,0,112,97,108,101,116,117,114,113,117,111,105,115,101,49,0,112,97,108,101,116,117,114,113,117,111,105,115,101,50,0,112,97,108,101,116,117,114,113,117,111,105,115,101,51,0,112,97,108,101,116,117,114,113,117,111,105,115,101,52,0,112,97,108,101,118,105,111,
108,101,116,114,101,100,0,112,97,108,101,118,105,111,108,101,116,114,101,100,49,0,112,97,108,101,118,105,111,108,101,116,114,101,100,50,0,112,97,108,101,118,105,111,108,101,116,114,101,100,51,0,112,97,108,101,118,105,111,108,101,116,114,101,100,52,0,112,97,112,97,121,97,119,104,105,112,0,112,101,97,99,104,112,117,102,102,0,112,101,97,99,104,112,117,102,102,49,0,112,101,97,99,104,112,117,102,102,50,0,112,101,97,99,104,112,117,102,102,51,0,112,101,97,99,104,112,117,102,102,52,0,112,101,114,117,0,112,
105,110,107,0,112,105,110,107,49,0,112,105,110,107,50,0,112,105,110,107,51,0,112,105,110,107,52,0,112,108,117,109,0,112,108,117,109,49,0,112,108,117,109,50,0,112,108,117,109,51,0,112,108,117,109,52,0,112,111,119,100,101,114,98,108,117,101,0,112,117,114,112,108,101,0,112,117,114,112,108,101,49,0,112,117,114,112,108,101,50,0,112,117,114,112,108,101,51,0,112,117,114,112,108,101,52,0,114,101,100,0,114,101,100,49,0,114,101,100,50,0,114,101,100,51,0,114,101,100,52,0,114,111,115,121,98,114,111,119,110,0,
114,111,115,121,98,114,111,119,110,49,0,114,111,115,121,98,114,111,119,110,50,0,114,111,115,121,98,114,111,119,110,51,0,114,111,115,121,98,114,111,119,110,52,0,114,111,121,97,108,98,108,117,101,0,114,111,121,97,108,98,108,117,101,49,0,114,111,121,97,108,98,108,117,101,50,0,114,111,121,97,108,98,108,117,101,51,0,114,111,121,97,108,98,108,117,101,52,0,115,97,100,100,108,101,98,114,111,119,110,0,115,97,108,109,111,110,0,115,97,108,109,111,110,49,0,115,97,108,109,111,110,50,0,115,97,108,109,111,110,51,
0,115,97,108,109,111,110,52,0,115,97,110,100,121,98,114,111,119,110,0,115,101,97,103,114,101,101,110,0,115,101,97,103,114,101,101,110,49,0,115,101,97,103,114,101,101,110,50,0,115,101,97,103,114,101,101,110,51,0,115,101,97,103,114,101,101,110,52,0,115,101,97,115,104,101,108,108,0,115,101,97,115,104,101,108,108,49,0,115,101,97,115,104,101,108,108,50,0,115,101,97,115,104,101,108,108,51,0,115,101,97,115,104,101,108,108,52,0,115,105,101,110,110,97,0,115,105,101,110,110,97,49,0,115,105,101,110,110,97,50,
0,115,105,101,110,110,97,51,0,115,105,101,110,110,97,52,0,115,107,121,98,108,117,101,0,115,107,121,98,108,117,101,49,0,115,107,121,98,108,117,101,50,0,115,107,121,98,108,117,101,51,0,115,107,121,98,108,117,101,52,0,115,108,97,116,101,98,108,117,101,0,115,108,97,116,101,98,108,117,101,49,0,115,108,97,116,101,98,108,117,101,50,0,115,108,97,116,101,98,108,117,101,51,0,115,108,97,116,101,98,108,117,101,52,0,115,108,97,116,101,103,114,97,121,0,115,108,97,116,101,103,114,97,121,49,0,115,108,97,116,101,
103,114,97,121,50,0,115,108,97,116,101,103,114,97,121,51,0,115,108,97,116,101,103,114,97,121,52,0,115,108,97,116],"i8",4,n.q+162566);
D([101,103,114,101,121,0,115,110,111,119,0,115,110,111,119,49,0,115,110,111,119,50,0,115,110,111,119,51,0,115,110,111,119,52,0,115,112,114,105,110,103,103,114,101,101,110,0,115,112,114,105,110,103,103,114,101,101,110,49,0,115,112,114,105,110,103,103,114,101,101,110,50,0,115,112,114,105,110,103,103,114,101,101,110,51,0,115,112,114,105,110,103,103,114,101,101,110,52,0,115,116,101,101,108,98,108,117,101,0,115,116,101,101,108,98,108,117,101,49,0,115,116,101,101,108,98,108,117,101,50,0,115,116,101,101,
108,98,108,117,101,51,0,115,116,101,101,108,98,108,117,101,52,0,116,97,110,0,116,97,110,49,0,116,97,110,50,0,116,97,110,51,0,116,97,110,52,0,116,104,105,115,116,108,101,0,116,104,105,115,116,108,101,49,0,116,104,105,115,116,108,101,50,0,116,104,105,115,116,108,101,51,0,116,104,105,115,116,108,101,52,0,116,111,109,97,116,111,0,116,111,109,97,116,111,49,0,116,111,109,97,116,111,50,0,116,111,109,97,116,111,51,0,116,111,109,97,116,111,52,0,116,117,114,113,117,111,105,115,101,0,116,117,114,113,117,111,
105,115,101,49,0,116,117,114,113,117,111,105,115,101,50,0,116,117,114,113,117,111,105,115,101,51,0,116,117,114,113,117,111,105,115,101,52,0,118,105,111,108,101,116,0,118,105,111,108,101,116,114,101,100,0,118,105,111,108,101,116,114,101,100,49,0,118,105,111,108,101,116,114,101,100,50,0,118,105,111,108,101,116,114,101,100,51,0,118,105,111,108,101,116,114,101,100,52,0,119,104,101,97,116,0,119,104,101,97,116,49,0,119,104,101,97,116,50,0,119,104,101,97,116,51,0,119,104,101,97,116,52,0,119,104,105,116,
101,0,119,104,105,116,101,115,109,111,107,101,0,121,101,108,108,111,119,0,121,101,108,108,111,119,49,0,121,101,108,108,111,119,50,0,121,101,108,108,111,119,51,0,121,101,108,108,111,119,52,0,121,101,108,108,111,119,103,114,101,101,110,0,47,37,115,47,37,115,0,105,109,97,103,101,115,99,97,108,101,0,102,97,108,115,101,0,98,108,97,99,107,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,37,100,0,65,103,110,111,100,101,105,110,102,111,95,116,0,114,111,119,103,0,99,111,108,103,0,65,103,114,97,112,104,105,110,102,111,95,116,0,45,62,0,100,101,108,120,32,62,61,32,48,0,104,116,109,108,116,97,98,108,101,46,99,0,112,111,115,95,104,116,109,108,95,116,98,108,0,100,101,108,121,32,62,61,32,48,0,116,97,98,108,101,32,115,105,122,101,32,116,111,111,32,115,109,97,108,108,32,102,111,114,32,99,111,110,116,101,110,116,10,0,102,105,120,101,100,32,116,97,98,108,101,
32,115,105,122,101,32,119,105,116,104,32,117,110,115,112,101,99,105,102,105,101,100,32,119,105,100,116,104,32,111,114,32,104,101,105,103,104,116,10,0,78,111,32,111,114,32,105,109,112,114,111,112,101,114,32,105,109,97,103,101,32,102,105,108,101,61,34,37,115,34,10,0,99,101,108,108,32,115,105,122,101,32,116,111,111,32,115,109,97,108,108,32,102,111,114,32,99,111,110,116,101,110,116,10,0,102,105,120,101,100,32,99,101,108,108,32,115,105,122,101,32,119,105,116,104,32,117,110,115,112,101,99,105,102,105,101,
100,32,119,105,100,116,104,32,111,114,32,104,101,105,103,104,116,10,0,112,101,110,99,111,108,111,114,0,65,103,101,100,103,101,105,110,102,111,95,116,0,49,0,50,0,51,0,52,0,53,0,54,0,55,0,56,0,57,0,49,48,0,49,49,0,49,50,0,49,51,0,49,52,0,49,53,0,49,54,0,49,55,0,49,56,0,49,57,0,50,48,0,99,112,45,62,115,114,99,0,101,109,105,116,95,104,116,109,108,95,105,109,103,0,99,112,45,62,115,114,99,91,48,93,0,100,97,115,104,101,100,0,100,111,116,116,101,100,0,116,114,97,110,115,112,97,114,101,110,116,0,95,37,100,
0,102,80,81,46,99,0,80,81,99,104,101,99,107,0,72,101,97,112,32,111,118,101,114,102,108,111,119,10,0,37,37,37,37,80,97,103,101,58,32,49,32,49,10,37,37,37,37,80,97,103,101,66,111,117,110,100,105,110,103,66,111,120,58,32,37,100,32,37,100,32,37,100,32,37,100,10,0,37,102,32,37,102,32,116,114,97,110,115,108,97,116,101,10,0,48,32,48,32,49,32,115,101,116,114,103,98,99,111,108,111,114,10,0,37,102,32,37,102,32,37,102,32,37,102,32,110,111,100,101,10,0,48,32,48,32,48,32,115,101,116,114,103,98,99,111,108,111,
114,10,0,37,102,32,37,102,32,37,102,32,37,102,32,99,101,108,108,10,0,49,32,48,32,48,32,115,101,116,114,103,98,99,111,108,111,114,10,0,102,97,105,108,101,100,32,97,116,32,110,111,100,101,32,37,100,91,48,93,10,0,110,112,45,62,99,101,108,108,115,91,48,93,0,109,97,122,101,46,99,0,99,104,107,83,103,114,97,112,104,0,102,97,105,108,101,100,32,97,116,32,110,111,100,101,32,37,100,91,49,93,10,0,110,112,45,62,99,101,108,108,115,91,49,93,0,37,33,80,83,45,65,100,111,98,101,45,50,46,48,10,47,110,111,100,101,32,
123,10,32,32,47,89,32,101,120,99,104,32,100,101,102,10,32,32,47,88,32,101,120,99,104,32,100,101,102,10,32,32,47,121,32,101,120,99,104,32,100,101,102,10,32,32,47,120,32,101,120,99,104,32,100,101,102,10,32,32,110,101,119,112,97,116,104,10,32,32,120,32,121,32,109,111,118,101,116,111,10,32,32,120,32,89,32,108,105,110,101,116,111,10,32,32,88,32,89,32,108,105,110,101,116,111,10,32,32,88,32,121,32,108,105,110,101,116,111,10,32,32,99,108,111,115,101,112,97,116,104,32,102,105,108,108,10,125,32,100,101,102,
10,47,99,101,108,108,32,123,10,32,32,47,89,32,101,120,99,104,32,100,101,102,10,32,32,47,88,32,101,120,99,104,32,100,101,102,10,32,32,47,121,32,101,120,99,104,32,100,101,102,10,32,32,47,120,32,101,120,99,104,32,100,101,102,10,32,32,110,101,119,112,97,116,104,10,32,32,120,32,121,32,109,111,118,101,116,111,10,32,32,120,32,89,32,108,105,110,101,116,111,10,32,32,88,32,89,32,108,105,110,101,116,111,10,32,32,88,32,121,32,108,105,110,101,116,111,10,32,32,99,108,111,115,101,112,97,116,104,32,115,116,114,111,
107,101,10,125,32,100,101,102,10,0,115,104,111,119,112,97,103,101,10,0,100,105,116,101,109,115,0,102,105,110,100,83,86,101,114,116,0,117,110,101,120,112,101,99,116,101,100,32,99,97,115,101,32,105,110,32,108,111,99,97,116,101,95,101,110,100,112,111,105,110,116,10,0,48,0,116,114,97,112,101,122,111,105,100,46,99,0,108,111,99,97,116,101,95,101,110,100,112,111,105,110,116,0,97,100,100,95,115,101,103,109,101,110,116,58,32,101,114,114,111,114,10,0,110,101,119,116,114,97,112,58,32,84,114,97,112,101,122,111,
105,100,45,116,97,98,108,101,32,111,118,101,114,102,108,111,119,32,37,100,10,0,110,101,119,116,114,97,112,0,110,101,119,110,111,100,101,58,32,81,117,101,114,121,45,116,97,98,108,101,32,111,118,101,114,102,108,111,119,10,0,110,101,119,110,111,100,101,0,105,110,100,101,120,46,99,0,82,84,114,101,101,83,101,97,114,99,104,0,110,45,62,108,101,118,101,108,32,62,61,32,48,0,82,84,114,101,101,73,110,115,101,114,116,0,108,101,118,101,108,32,62,61,32,48,32,38,38,32,108,101,118,101,108,32,60,61,32,40,42,110,41,
45,62,108,101,118,101,108,0,114,45,62,98,111,117,110,100,97,114,121,91,105,93,32,60,61,32,114,45,62,98,111,117,110,100,97,114,121,91,78,85,77,68,73,77,83,32,43,32,105,93,0,114,32,38,38,32,110,32,38,38,32,110,101,119,0,82,84,114,101,101,73,110,115,101,114,116,50,0,108,101,118,101,108,32,62,61,32,48,32,38,38,32,108,101,118,101,108,32,60,61,32,110,45,62,108,101,118,101,108,0,70,65,76,83,69,0,110,111,100,101,46,99,0,78,111,100,101,67,111,118,101,114,0,114,32,38,38,32,110,0,80,105,99,107,66,114,97,110,
99,104,0,65,100,100,66,114,97,110,99,104,0,105,32,60,32,78,79,68,69,67,65,82,68,0,110,101,119,0,110,32,38,38,32,105,32,62,61,32,48,32,38,38,32,105,32,60,32,78,79,68,69,67,65,82,68,0,68,105,115,99,111,110,66,114,97,110,99,104,0,114,0,114,101,99,116,97,110,103,108,101,46,99,0,82,101,99,116,65,114,101,97,0,114,32,38,38,32,114,114,0,67,111,109,98,105,110,101,82,101,99,116,0,114,32,38,38,32,115,0,79,118,101,114,108,97,112,0,110,0,115,112,108,105,116,46,113,46,99,0,83,112,108,105,116,78,111,100,101,0,98,
0,110,45,62,98,114,97,110,99,104,91,105,93,46,99,104,105,108,100,0,71,101,116,66,114,97,110,99,104,101,115,0,114,116,112,45,62,115,112,108,105,116,46,80,97,114,116,105,116,105,111,110,115,91,48,93,46,99,111,117,110,116,91,48,93,32,43,32,114,116,112,45,62,115,112,108,105,116,46,80,97,114,116,105,116,105,111,110,115,91,48,93,46,99,111,117,110,116,91,49,93,32,61,61,32,78,79,68,69,67,65,82,68,32,43,32,49,0,77,101,116,104,111,100,90,101,114,111,0,114,116,112,45,62,115,112,108,105,116,46,80,97,114,116,
105,116,105,111,110,115,91,48,93,46,99,111,117,110,116,91,48,93,32,62,61,32,114,116,112,45,62,77,105,110,70,105,108,108,32,38,38,32,114,116,112,45,62,115,112,108,105,116,46,80,97,114,116,105,116,105,111,110,115,91,48,93,46,99,111,117,110,116,91,49,93,32,62,61,32,114,116,112,45,62,77,105,110,70,105,108,108,0,113,0,76,111,97,100,78,111,100,101,115,0,114,116,112,45,62,115,112,108,105,116,46,80,97,114,116,105,116,105,111,110,115,91,48,93,46,112,97,114,116,105,116,105,111,110,91,105,93,32,61,61,32,48,
32,124,124,32,114,116,112,45,62,115,112,108,105,116,46,80,97,114,116,105,116,105,111,110,115,91,48,93,46,112,97,114,116,105,116,105,111,110,91,105,93,32,61,61,32,49,0,110,45,62,99,111,117,110,116,32,43,32,40,42,110,110,41,45,62,99,111,117,110,116,32,61,61,32,78,79,68,69,67,65,82,68,32,43,32,49,0,33,114,116,112,45,62,115,112,108,105,116,46,80,97,114,116,105,116,105,111,110,115,91,48,93,46,116,97,107,101,110,91,105,93,0,67,108,97,115,115,105,102,121,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,
2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,
17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,2,2,2,2,2,2,16,12,89,1,0,31,80,8,3,7,18,19,20,87,22,23,8,11,105,12,31,10,5,12,14,41,17,43,15,45,16,47,48,32,50,6,52,53,27,28,29,30,11,12,33,34,35,36,37,38,39,40,12,24,25,23,4,10,27,28,26,32,42,10,33,34,35,36,37,38,39,40,12,10,14,83,10,44,88,49,88,88,88,88,88,88,12,27,28,15,46,88,51,33,34,35,36,37,38,39,40,27,28,255,83,255,255,33,34,35,36,37,38,39,40,12,255,255,5,255,255,255,9,20,255,255,255,255,255,12,27,28,255,16,21,22,33,34,
35,36,37,38,39,40,27,28,255,255,255,255,33,34,35,36,37,38,39,40,12,255,18,19,20,17,22,23,255,255,255,255,255,255,12,27,28,255,255,255,18,33,34,35,36,37,38,39,40,27,28,255,255,255,255,33,34,35,36,37,38,39,40,12,255,255,255,255,255,255,19,255,255,255,255,255,255,12,27,28,255,255,255,255,33,34,35,36,37,38,39,40,27,28,255,255,255,255,33,34,35,36,37,38,39,40,18,19,20,21,22,23,24,25,255,255,255,255,255,255,255,255,255,35,36,37,38,39,27,18,19,20,22,23,34,54,104,1,31,56,86,33,32,2,27,27,27,94,27,27,55,57,
112,54,210,194,79,4,60,34,71,34,63,34,68,34,34,88,34,101,34,34,5,6,95,96,57,4,7,8,9,10,11,12,13,14,4,102,103,93,106,109,5,6,111,88,59,113,7,8,9,10,11,12,13,14,4,114,60,91,115,62,97,70,27,18,19,20,22,23,4,5,6,63,65,98,73,7,8,9,10,11,12,13,14,5,6,0,92,0,0,7,8,9,10,11,12,13,14,4,0,0,79,0,0,0,83,66,0,0,0,0,0,4,5,6,0,68,84,85,7,8,9,10,11,12,13,14,5,6,0,0,0,0,7,8,9,10,11,12,13,14,4,0,42,44,46,71,49,51,0,0,0,0,0,0,4,5,6,0,0,0,74,7,8,9,10,11,12,13,14,5,6,0,0,0,0,7,8,9,10,11,12,13,14,4,0,0,0,0,0,0,76,0,0,
0,0,0,0,4,5,6,0,0,0,0,7,8,9,10,11,12,13,14,5,6,0,0,0,0,7,8,9,10,11,12,13,14,41,43,45,47,48,50,52,53,0,0,0,0,0,0,0,0,0,41,43,45,48,50,0,4,47,0,36,35,0,18,20,22,26,28,30,32,24,0,5,7,47,47,47,0,47,47,0,0,9,8,40,0,0,1,34,2,6,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,37,3,38,19,10,41,21,11,42,23,14,45,25,17,27,12,43,29,13,44,31,15,33,16,0,51,0,48,0,47,67,0,49,0,47,0,53,46,39,66,50,65,0,58,56,0,60,52,69,0,54,0,64,0,0,63,0,68,55,59,57,61,0,2,3,3,1,1,2,1,1,1,3,3,3,3,3,3,3,3,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,
1,1,2,0,6,1,3,3,3,3,3,1,0,1,2,3,0,4,1,2,3,0,4,0,4,0,4,0,3,2,1,2,1,2,1,83,121,110,116,97,120,32,101,114,114,111,114,58,32,110,111,110,45,115,112,97,99,101,32,115,116,114,105,110,103,32,117,115,101,100,32,98,101,102,111,114,101,32,60,84,65,66,76,69,62,0,83,121,110,116,97,120,32,101,114,114,111,114,58,32,110,111,110,45,115,112,97,99,101,32,115,116,114,105,110,103,32,117,115,101,100,32,97,102,116,101,114,32,60,47,84,65,66,76,69,62,0,0,41,42,42,42,43,44,44,45,45,45,45,45,45,45,45,45,45,46,47,48,49,50,
51,52,53,54,55,56,57,58,59,60,61,62,62,63,63,65,64,66,66,66,66,66,66,67,67,68,68,68,70,69,71,71,71,73,72,74,72,75,72,76,72,77,77,78,78,79,79,255,3,15,16,17,35,58,36,61,37,64,21,67,38,69,39,72,24,75,25,77,26,40,28,78,29,30,80,81,82,89,90,108,107,110,99,100,87,105,109,101,109,111,114,121,32,101,120,104,97,117,115,116,101,100,0,0,37,115,32,105,110,32,108,105,110,101,32,37,100,32,10,0,45,45,0,85,110,99,108,111,115,101,100,32,99,111,109,109,101,110,116,10,0,76,97,98,101,108,32,99,108,111,115,101,100,32,
98,101,102,111,114,101,32,101,110,100,32,111,102,32,72,84,77,76,32,101,108,101,109,101,110,116,10,0,60,72,84,77,76,62,0,60,47,72,84,77,76,62,0,84,65,66,76,69,0,84,82,0,84,72,0,84,68,0,72,84,77,76,0,70,79,78,84,0,66,0,85,0,79,0,73,0,83,85,80,0,83,85,66,0,83,0,66,82,0,72,82,0,86,82,0,73,77,71,0,85,110,107,110,111,119,110,32,72,84,77,76,32,101,108,101,109,101,110,116,32,60,37,115,62,32,111,110,32,108,105,110,101,32,37,100,32,10,0,60,84,65,66,76,69,62,0,60,84,68,62,0,60,70,79,78,84,62,0,60,66,82,62,0,
60,73,77,71,62,0,115,99,97,108,101,0,115,114,99,0,97,108,105,103,110,0,73,71,72,84,0,69,70,84,0,69,78,84,69,82,0,73,108,108,101,103,97,108,32,118,97,108,117,101,32,37,115,32,102,111,114,32,65,76,73,71,78,32,45,32,105,103,110,111,114,101,100,10,0,99,111,108,111,114,0,102,97,99,101,0,112,111,105,110,116,45,115,105,122,101,0,80,79,73,78,84,45,83,73,90,69,0,73,109,112,114,111,112,101,114,32,37,115,32,118,97,108,117,101,32,37,115,32,45,32,105,103,110,111,114,101,100,0,37,115,32,118,97,108,117,101,32,37,
115,32,62,32,37,100,32,45,32,116,111,111,32,108,97,114,103,101,32,45,32,105,103,110,111,114,101,100,0,37,115,32,118,97,108,117,101,32,37,115,32,60,32,37,100,32,45,32,116,111,111,32,115,109,97,108,108,32,45,32,105,103,110,111,114,101,100,0,98,97,108,105,103,110,0,98,103,99,111,108,111,114,0,98,111,114,100,101,114,0,99,101,108,108,112,97,100,100,105,110,103,0,99,101,108,108,115,112,97,99,105,110,103,0,99,111,108,115,112,97,110,0,102,105,120,101,100,115,105,122,101,0,103,114,97,100,105,101,110,116,97,
110,103,108,101,0,104,101,105,103,104,116,0,104,114,101,102,0,105,100,0,112,111,114,116,0,114,111,119,115,112,97,110,0,115,105,100,101,115,0,115,116,121,108,101,0,116,97,114,103,101,116,0,116,105,116,108,101,0,116,111,111,108,116,105,112,0,118,97,108,105,103,110,0,119,105,100,116,104,0,87,73,68,84,72,0,79,84,84,79,77,0,79,80,0,73,68,68,76,69,0,73,108,108,101,103,97,108,32,118,97,108,117,101,32,37,115,32,102,111,114,32,86,65,76,73,71,78,32,45,32,105,103,110,111,114,101,100,10,0,32,44,0,79,85,78,68,
69,68,0,65,68,73,65,76,0,73,108,108,101,103,97,108,32,118,97,108,117,101,32,37,115,32,102,111,114,32,83,84,89,76,69,32,45,32,105,103,110,111,114,101,100,10,0,83,79,76,73,68,0,73,78,86,73,83,73,66,76,69,0,73,78,86,73,83,0,68,79,84,84,69,68,0,68,65,83,72,69,68,0,85,110,114,101,99,111,103,110,105,122,101,100,32,99,104,97,114,97,99,116,101,114,32,39,37,99,39,32,40,37,100,41,32,105,110,32,115,105,100,101,115,32,97,116,116,114,105,98,117,116,101,10,0,82,79,87,83,80,65,78,0,82,79,87,83,80,65,78,32,118,97,
108,117,101,32,99,97,110,110,111,116,32,98,101,32,48,32,45,32,105,103,110,111,114,101,100,10,0,72,69,73,71,72,84,0,71,82,65,68,73,69,78,84,65,78,71,76,69,0,82,85,69,0,65,76,83,69,0,73,108,108,101,103,97,108,32,118,97,108,117,101,32,37,115,32,102,111,114,32,70,73,88,69,68,83,73,90,69,32,45,32,105,103,110,111,114,101,100,10,0,67,79,76,83,80,65,78,0,67,79,76,83,80,65,78,32,118,97,108,117,101,32,99,97,110,110,111,116,32,98,101,32,48,32,45,32,105,103,110,111,114,101,100,10,0,67,69,76,76,83,80,65,67,73,
78,71,0,67,69,76,76,80,65,68,68,73,78,71,0,66,79,82,68,69,82,0,73,108,108,101,103,97,108,32,118,97,108,117,101,32,37,115,32,102,111,114,32,66,65,76,73,71,78,32,105,110,32,84,68,32,45,32,105,103,110,111,114,101,100,10,0,69,88,84,0,73,108,108,101,103,97,108,32,118,97,108,117,101,32,37,115,32,102,111,114,32,65,76,73,71,78,32,105,110,32,84,68,32,45,32,105,103,110,111,114,101,100,10,0,73,108,108,101,103,97,108,32,97,116,116,114,105,98,117,116,101,32,37,115,32,105,110,32,37,115,32,45,32,105,103,110,111,
114,101,100,10,0,99,101,108,108,98,111,114,100,101,114,0,99,111,108,117,109,110,115,0,114,111,119,115,0,85,110,107,110,111,119,110,32,118,97,108,117,101,32,37,115,32,102,111,114,32,82,79,87,83,32,45,32,105,103,110,111,114,101,100,10,0,85,110,107,110,111,119,110,32,118,97,108,117,101,32,37,115,32,102,111,114,32,67,79,76,85,77,78,83,32,45,32,105,103,110,111,114,101,100,10,0,67,69,76,76,83,66,79,82,68,69,82,0,46,46,46,32,37,115,32,46,46,46,10,0,106,32,61,61,32,48,0,99,118,116,46,99,0,80,111,98,115,112,
97,116,104,0,114,111,117,116,101,46,99,0,108,105,98,112,97,116,104,47,37,115,58,37,100,58,32,37,115,10,0,115,104,111,114,116,101,115,116,46,99,0,99,97,110,110,111,116,32,109,97,108,108,111,99,32,112,110,108,115,0,99,97,110,110,111,116,32,109,97,108,108,111,99,32,112,110,108,112,115,0,99,97,110,110,111,116,32,114,101,97,108,108,111,99,32,112,110,108,115,0,99,97,110,110,111,116,32,114,101,97,108,108,111,99,32,112,110,108,112,115,0,99,97,110,110,111,116,32,109,97,108,108,111,99,32,100,113,46,112,110,
108,115,0,99,97,110,110,111,116,32,114,101,97,108,108,111,99,32,100,113,46,112,110,108,115,0,116,114,105,97,110,103,117,108,97,116,105,111,110,32,102,97,105,108,101,100,0,115,111,117,114,99,101,32,112,111,105,110,116,32,110,111,116,32,105,110,32,97,110,121,32,116,114,105,97,110,103,108,101,0,100,101,115,116,105,110,97,116,105,111,110,32,112,111,105,110,116,32,110,111,116,32,105,110,32,97,110,121,32,116,114,105,97,110,103,108,101,0,99,97,110,110,111,116,32,102,105,110,100,32,116,114,105,97,110,103,
108,101,32,112,97,116,104,0,99,97,110,110,111,116,32,109,97,108,108,111,99,32,111,112,115,0,99,97,110,110,111,116,32,114,101,97,108,108,111,99,32,111,112,115,0,99,97,110,110,111,116,32,109,97,108,108,111,99,32,116,114,105,115,0,99,97,110,110,111,116,32,114,101,97,108,108,111,99,32,116,114,105,115,0,111,117,116,32,111,102,32,109,101,109,111,114,121,0,115,121,110,116,97,120,32,101,114,114,111,114,0,110,111,32,101,108,101,109,101,110,116,32,102,111,117,110,100,0,110,111,116,32,119,101,108,108,45,102,
111,114,109,101,100,32,40,105,110,118,97,108,105,100,32,116,111,107,101,110,41,0,117,110,99,108,111,115,101,100,32,116,111,107,101,110,0,112,97,114,116,105,97,108,32,99,104,97,114,97,99,116,101,114,0,109,105,115,109,97,116,99,104,101,100,32,116,97,103,0,100,117,112,108,105,99,97,116,101,32,97,116,116,114,105,98,117,116,101,0,106,117,110,107,32,97,102,116,101,114,32,100,111,99,117,109,101,110,116,32,101,108,101,109,101,110,116,0,105,108,108,101,103,97,108,32,112,97,114,97,109,101,116,101,114,32,101,
110,116,105,116,121,32,114,101,102,101,114,101,110,99,101,0,117,110,100,101,102,105,110,101,100,32,101,110,116,105,116,121,0,114,101,99,117,114,115,105,118,101,32,101,110,116,105,116,121,32,114,101,102,101,114,101,110,99,101,0,97,115,121,110,99,104,114,111,110,111,117,115,32,101,110,116,105,116,121,0,114,101,102,101,114,101,110,99,101,32,116,111,32,105,110,118,97,108,105,100,32,99,104,97,114,97,99,116,101,114,32,110,117,109,98,101,114,0,114,101,102,101,114,101,110,99,101,32,116,111,32,98,105,110,
97,114,121,32,101,110,116,105,116,121,0,114,101,102,101,114,101,110,99,101,32,116,111,32,101,120,116,101,114,110,97,108,32,101,110,116,105,116,121,32,105,110,32,97,116,116,114,105,98,117,116,101,0,88,77,76,32,111,114,32,116,101,120,116,32,100,101,99,108,97,114,97,116,105,111,110,32,110,111,116,32,97,116,32,115,116,97,114,116,32,111,102,32,101,110,116,105,116,121,0,117,110,107,110,111,119,110,32,101,110,99,111,100,105,110,103,0,101,110,99,111,100,105,110,103,32,115,112,101,99,105,102,105,101,100,32,
105,110,32,88,77,76,32,100,101,99,108,97,114,97,116,105,111,110,32,105,115,32,105,110,99,111,114,114,101,99,116,0,117,110,99,108,111,115,101,100,32,67,68,65,84,65,32,115,101,99,116,105,111,110,0,101,114,114,111,114,32,105,110,32,112,114,111,99,101,115,115,105,110,103,32,101,120,116,101,114,110,97,108,32,101,110,116,105,116,121,32,114,101,102,101,114,101,110,99,101,0,100,111,99,117,109,101,110,116,32,105,115,32,110,111,116,32,115,116,97,110,100,97,108,111,110,101,0,117,110,101,120,112,101,99,116,101,
100,32,112,97,114,115,101,114,32,115,116,97,116,101,32,45,32,112,108,101,97,115,101,32,115,101,110,100,32,97,32,98,117,103,32,114,101,112,111,114,116,0,101,110,116,105,116,121,32,100,101,99,108,97,114,101,100,32,105,110,32,112,97,114,97,109,101,116,101,114,32,101,110,116,105,116,121,0,114,101,113,117,101,115,116,101,100,32,102,101,97,116,117,114,101,32,114,101,113,117,105,114,101,115,32,88,77,76,95,68,84,68,32,115,117,112,112,111,114,116,32,105,110,32,69,120,112,97,116,0,99,97,110,110,111,116,32,
99,104,97,110,103,101,32,115,101,116,116,105,110,103,32,111,110,99,101,32,112,97,114,115,105,110,103,32,104,97,115,32,98,101,103,117,110,0,117,110,98,111,117,110,100,32,112,114,101,102,105,120,0,109,117,115,116,32,110,111,116,32,117,110,100,101,99,108,97,114,101,32,112,114,101,102,105,120,0,105,110,99,111,109,112,108,101,116,101,32,109,97,114,107,117,112,32,105,110,32,112,97,114,97,109,101,116,101,114,32,101,110,116,105,116,121,0,88,77,76,32,100,101,99,108,97,114,97,116,105,111,110,32,110,111,116,
32,119,101,108,108,45,102,111,114,109,101,100,0,116,101,120,116,32,100,101,99,108,97,114,97,116,105,111,110,32,110,111,116,32,119,101,108,108,45,102,111,114,109,101,100,0,105,108,108,101,103,97,108,32,99,104,97,114,97,99,116,101,114,40,115,41,32,105,110,32,112,117,98,108,105,99,32,105,100,0,112,97,114,115,101,114,32,115,117,115,112,101,110,100,101,100,0,112,97,114,115,101,114,32,110,111,116,32,115,117,115,112,101,110,100,101,100,0,112,97,114,115,105,110,103,32,97,98,111,114,116,101,100,0,112,97,114,
115,105,110,103,32,102,105,110,105,115,104,101,100,0,99,97,110,110,111,116,32,115,117,115,112,101,110,100,32,105,110,32,101,120,116,101,114,110,97,108,32,112,97,114,97,109,101,116,101,114,32,101,110,116,105,116,121,0,114,101,115,101,114,118,101,100,32,112,114,101,102,105,120,32,40,120,109,108,41,32,109,117,115,116,32,110,111,116,32,98,101,32,117,110,100,101,99,108,97,114,101,100,32,111,114,32,98,111,117,110,100,32,116,111,32,97,110,111,116,104,101,114,32,110,97,109,101,115,112,97,99,101,32,110,97,
109,101,0,114,101,115,101,114,118,101,100,32,112,114,101,102,105,120,32,40,120,109,108,110,115,41,32,109,117,115,116,32,110,111,116,32,98,101,32,100,101,99,108,97,114,101,100,32,111,114,32,117,110,100,101,99,108,97,114,101,100,0,112,114,101,102,105,120,32,109,117,115,116,32,110,111,116,32,98,101,32,98,111,117,110,100,32,116,111,32,111,110,101,32,111,102,32,116,104,101,32,114,101,115,101,114,118,101,100,32,110,97,109,101,115,112,97,99,101,32,110,97,109,101,115,0,120,109,108,61,104,116,116,112,58,47,
47,119,119,119,46,119,51,46,111,114,103,47,88,77,76,47,49,57,57,56,47,110,97,109,101,115,112,97,99,101,0,67,68,65,84,65,0,73,68,0,73,68,82,69,70,0,73,68,82,69,70,83,0,69,78,84,73,84,89,0,69,78,84,73,84,73,69,83,0,78,77,84,79,75,69,78,0,78,77,84,79,75,69,78,83,0,78,79,84,65,84,73,79,78,40,0,40,0,124,0,104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,88,77,76,47,49,57,57,56,47,110,97,109,101,115,112,97,99,101,0,104,116,116,112,58,47,47,119,119,119,46,119,51,46,111,114,103,47,50,48,48,
48,47,120,109,108,110,115,47,0,2,3,4,5,6,7,8,0,0,9,10,11,12,13,14,15,16,17,0,0,0,0,0,0,0,0,0,0,0,0,18,19,0,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,23,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,24,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,3,26,27,28,29,30,0,0,31,32,33,34,35,36,37,16,17,0,0,0,0,0,0,0,0,0,0,0,0,18,19,38,20,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,23,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
1,1,1,24,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,85,84,70,45,49,54,0,67,68,65,84,65,91,118,101,114,115,105,111,110,0,101,110,99,111,100,105,110,103,0,115,116,97,110,100,97,108,111,110,101,0,85,83,45,65,83,67,73,73,0,85,84,70,45,49,54,66,69,0,85,84,70,45,49,54,76,69,0,69,78,84,73,84,89,0,65,84,84,76,73,83,84,0,69,76,69,77,69,78,84,0,78,79,84,65,84,73,79,78,0,83,89,83,84,69,77,0,80,85,66,76,73,67,0,69,77,80,84,89,0,65,78,89,0,80,67,68,65,84,65,0,73,77,80,76,73,
69,68,0,82,69,81,85,73,82,69,68,0,70,73,88,69,68,0,67,68,65,84,65,0,73,68,0,73,68,82,69,70,0,73,68,82,69,70,83,0,69,78,84,73,84,73,69,83,0,78,77,84,79,75,69,78,0,78,77,84,79,75,69,78,83,0,78,68,65,84,65,0,73,78,67,76,85,68,69,0,73,71,78,79,82,69,0,68,79,67,84,89,80,69,0,18,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,17,34,35,36,17,37,38,39,40,41,42,43,44,17,45,46,47,16,16,48,16,16,16,16,16,16,16,49,50,51,16,52,53,16,16,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,
54,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,55,17,17,17,17,56,17,57,58,59,60,61,62,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,63,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,
16,16,16,16,16,17,64,65,17,66,67,68,69,70,71,72,73,16,16,16,74,75,76,77,78,16,16,16,79,80,16,16,16,16,81,16,16,16,16,16,16,16,16,16,17,17,17,82,83,16,16,16,16,16,16,16,16,16,16,16,17,17,17,17,84,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,17,17,85,16,16,16,16,86,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,

0,0,0,0,0,254,255,255,7,254,255,255,7,0,0,0,0,0,4,32,4,255,255,127,255,255,255,127,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,195,255,3,0,31,80,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,223,60,64,215,255,255,251,255,255,255,255,255,255,255,255,255,191,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,3,252,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,254,255,255,255,127,2,254,255,255,255,255,0,0,0,0,
0,255,191,182,0,255,255,255,7,7,0,0,0,255,7,255,255,255,255,255,255,255,254,255,195,255,255,255,255,255,255,255,255,255,255,255,255,239,31,254,225,255,159,0,0,255,255,255,255,255,255,0,224,255,255,255,255,255,255,255,255,255,255,255,255,3,0,255,255,255,255,255,7,48,4,255,255,255,252,255,31,0,0,255,255,255,1,0,0,0,0,0,0,0,0,253,31,0,0,0,0,0,0,240,3,255,127,255,255,255,255,255,255,255,239,255,223,225,255,207,255,254,254,238,159,249,255,255,253,197,227,159,89,128,176,207,255,3,0,238,135,249,255,255,
253,109,195,135,25,2,94,192,255,63,0,238,191,251,255,255,253,237,227,191,27,1,0,207,255,0,0,238,159,249,255,255,253,237,227,159,25,192,176,207,255,2,0,236,199,61,214,24,199,255,195,199,29,129,0,192,255,0,0,238,223,253,255,255,253,239,227,223,29,96,3,207,255,0,0,236,223,253,255,255,253,239,227,223,29,96,64,207,255,6,0,236,223,253,255,255,255,255,231,223,93,128,0,207,255,0,252,236,255,127,252,255,255,251,47,127,128,95,255,0,0,12,0,254,255,255,255,255,127,255,7,63,32,255,3,0,0,0,0,150,37,240,254,174,
236,255,59,95,32,255,243,0,0,0,0,1,0,0,0,255,3,0,0,255,254,255,255,255,31,254,255,3,255,255,254,255,255,255,31,0,0,0,0,0,0,0,0,255,255,255,255,255,255,127,249,255,3,255,255,231,193,255,255,127,64,255,51,255,255,255,255,191,32,255,255,255,255,255,247,255,255,255,255,255,255,255,255,255,61,127,61,255,255,255,255,255,61,255,255,255,255,61,127,61,255,127,255,255,255,255,255,255,255,61,255,255,255,255,255,255,255,255,135,0,0,0,0,255,255,0,0,255,255,255,255,255,255,255,255,255,255,31,0,254,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,159,255,255,254,255,255,7,255,255,255,255,255,255,255,255,255,199,1,0,255,223,15,0,255,255,15,0,255,255,15,0,255,223,13,0,255,255,255,255,255,255,207,255,255,1,128,16,255,3,0,0,0,0,255,3,255,255,255,255,255,255,255,255,255,255,255,0,255,255,255,255,255,7,255,255,255,255,255,255,255,255,63,0,255,255,255,31,255,15,255,1,192,255,255,255,255,
63,31,0,255,255,255,255,255,15,255,255,255,3,255,3,0,0,0,0,255,255,255,15,255,255,255,255,255,255,255,127,254,255,31,0,255,3,255,3,128,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,239,255,239,15,255,3,0,0,0,0,255,255,255,255,255,243,255,255,255,255,255,255,191,255,3,0,255,255,255,255,255,255,63,0,255,227,255,255,255,255,255,63,0,0,0,0,0,0,0,0,0,0,0,0,0,222,111,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,255,255,63,63,255,255,255,
255,63,63,255,170,255,255,255,63,255,255,255,255,255,255,223,95,220,31,207,15,255,31,220,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,128,0,0,255,31,0,0,0,0,0,0,0,0,0,0,0,0,132,252,47,62,80,189,255,243,224,67,0,0,255,255,255,255,255,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,255,255,255,255,255,255,3,0,0,255,255,255,255,255,127,255,255,255,255,255,127,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,31,120,12,0,255,255,255,255,191,32,255,255,255,255,255,255,255,
128,0,0,255,255,127,0,127,127,127,127,127,127,127,127,255,255,255,255,0,0,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,0,0,0,254,3,62,31,254,255,255,255,255,255,255,255,255,255,127,224,254,255,255,255,255,255,255,255,255,255,255,247,224,255,255,255,255,63,254,255,255,255,255,255,255,255,255,255,255,127,0,0,255,255,255,7,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,63,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,31,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,31,0,0,0,0,0,0,0,0,255,255,255,255,255,63,255,31,255,255,255,15,0,0,255,255,255,255,255,127,240,143,255,255,255,128,255,255,255,255,255,255,255,255,255,255,0,0,0,0,128,255,252,255,255,255,255,255,255,255,255,255,255,255,255,121,15,0,255,7,0,0,0,0,0,0,0,0,0,255,187,247,255,255,255,0,0,0,255,255,255,255,255,255,15,0,255,255,255,255,255,255,255,255,15,
0,255,3,0,0,252,8,255,255,255,255,255,7,255,255,255,255,7,0,255,255,255,31,255,255,255,255,255,255,247,255,0,128,255,3,0,0,0,0,255,255,255,255,255,255,127,0,255,63,255,3,255,255,127,4,255,255,255,255,255,255,255,127,5,0,0,56,255,255,60,0,126,126,126,0,127,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,7,255,3,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,15,0,255,255,127,248,255,255,255,255,255,15,255,255,255,255,255,255,255,255,255,255,255,255,255,63,
255,255,255,255,255,255,255,255,255,255,255,255,255,3,0,0,0,0,127,0,248,224,255,253,127,95,219,255,255,255,255,255,255,255,255,255,255,255,255,255,3,0,0,0,248,255,255,255,255,255,255,255,255,255,255,255,255,63,0,0,255,255,255,255,255,255,255,255,252,255,255,255,255,255,255,0,0,0,0,0,255,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,223,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,31,0,0,255,3,254,255,255,7,254,255,255,7,192,255,255,255,255,255,255,255,255,255,255,127,252,252,252,28,0,0,0,0,255,
239,255,255,127,255,255,183,255,63,255,63,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,7,0,0,0,0,0,0,0,0,255,255,255,255,255,255,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,31,255,255,255,255,255,255,1,0,0,0,0,0,255,255,255,127,0,0,255,255,255,7,0,0,0,0,0,0,255,255,255,63,255,255,255,255,15,255,62,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,63,255,3,0,0,0,0,0,0,0,0,0,0,63,253,255,255,255,255,191,
145,255,255,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,63,0,255,255,255,3,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,192,0,0,0,0,0,0,0,0,111,240,239,254,255,255,15,0,0,0,0,0,255,255,255,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,63,0,255,255,63,0,255,255,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,63,0,0,0,192,255,0,0,252,255,255,255,255,255,255,1,0,0,255,255,255,1,
255,3,255,255,255,255,255,255,199,255],"i8",4,n.q+172806);
D([255,255,255,255,255,255,255,255,30,0,255,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,63,0,255,3,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,31,
0,255,255,255,255,255,127,0,0,248,255,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,223,255,255,255,255,255,255,255,255,223,100,222,255,235,239,255,255,255,255,255,255,255,191,231,223,223,255,255,255,123,95,252,253,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,63,255,255,255,253,255,255,247,255,255,255,
247,255,255,223,255,255,255,223,255,255,127,255,255,255,127,255,255,255,253,255,255,255,253,255,255,247,207,255,255,255,255,255,255,239,255,255,255,150,254,247,10,132,234,150,170,150,247,247,94,255,251,255,15,238,251,255,15,0,0,0,0,0,0,0,0,97,108,110,117,109,0,97,108,112,104,97,0,98,108,97,110,107,0,99,110,116,114,108,0,100,105,103,105,116,0,103,114,97,112,104,0,108,111,119,101,114,0,112,114,105,110,116,0,112,117,110,99,116,0,115,112,97,99,101,0,117,112,112,101,114,0,120,100,105,103,105,116,0,18,
16,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,16,16,34,35,16,36,37,38,39,40,41,42,43,16,44,45,46,17,47,48,17,17,49,17,17,17,50,51,52,53,54,55,56,57,17,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,58,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,59,16,60,61,
62,63,64,65,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,66,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,67,16,16,68,16,69,70,71,16,72,16,73,16,16,16,16,74,75,76,77,16,16,78,16,79,80,16,16,16,16,81,16,16,16,16,16,16,16,16,16,16,16,16,16,82,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,
16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,83,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,84,85,86,87,16,16,88,89,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,90,16,91,92,93,94,95,96,
97,98,16,16,16,16,16,16,16,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,0,0,0,254,255,0,252,1,0,0,248,1,0,0,120,0,0,0,0,255,251,223,251,0,0,128,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,60,0,252,255,224,175,255,255,255,255,255,255,255,255,255,255,223,255,255,255,255,255,32,64,176,0,0,0,0,0,0,0,0,0,0,0,0,0,64,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,252,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,0,0,0,0,0,134,254,255,255,255,0,64,73,0,0,0,0,0,24,0,223,255,0,200,0,0,0,0,0,0,0,1,0,60,0,0,0,0,0,0,0,0,0,0,0,0,16,224,1,30,0,96,255,191,0,0,0,0,0,0,255,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,207,3,0,0,0,3,0,32,255,127,0,0,0,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,0,0,0,0,0,0,0,0,0,16,0,32,30,0,48,0,1,0,0,0,0,0,0,0,0,16,0,32,0,0,0,0,252,15,0,0,0,0,0,0,0,16,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,32,0,0,0,0,3,0,0,0,0,0,0,0,0,
16,0,32,0,0,0,0,253,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,255,7,0,0,0,0,0,0,0,0,0,32,0,0,0,0,0,255,0,0,0,0,0,0,0,16,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,0,0,0,0,63,2,0,0,0,0,0,0,0,0,0,4,0,0,0,0,16,0,0,0,0,0,0,128,0,128,192,223,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,0,254,255,255,255,0,252,255,255,0,0,0,0,0,0,0,0,252,0,0,0,0,0,0,192,255,223,255,7,0,0,0,0,0,0,0,0,0,0,128,6,0,252,0,0,24,62,0,0,128,191,0,204,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,96,255,255,255,31,0,0,255,3,0,0,0,0,0,0,0,0,0,0,
0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,96,0,0,1,0,0,24,0,0,0,0,0,0,0,0,0,56,0,0,0,0,16,0,0,0,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,0,0,254,127,47,0,0,255,3,255,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,49,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,196,255,255,255,255,0,0,0,192,0,0,0,0,0,0,0,0,1,0,224,159,0,0,0,0,127,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,16,0,0,252,255,255,255,31,0,0,0,0,0,12,0,0,0,0,0,0,64,0,12,
240,0,0,0,0,0,0,192,248,0,0,0,0,0,0,0,192,0,0,0,0,0,0,0,0,255,0,255,255,255,33,16,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,127,0,0,240,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,160,3,224,0,224,0,224,0,96,128,248,255,255,255,252,255,255,255,255,255,127,31,252,241,127,255,127,0,0,255,255,255,3,0,0,255,255,255,255,1,0,123,3,208,193,175,66,0,12,31,188,255,255,0,0,0,0,0,2,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,15,0,255,255,255,255,127,0,0,0,255,7,0,0,255,255,255,255,255,255,255,255,255,255,63,0,0,0,0,0,0,252,255,255,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,31,255,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,224,135,3,254,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,128,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,127,255,15,0,0,0,0,0,0,0,0,255,255,255,251,255,255,255,255,255,255,255,255,255,255,15,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,63,0,0,0,255,15,30,255,255,255,1,252,193,224,0,0,0,0,0,0,0,0,0,0,0,30,1,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,0,0,0,0,255,255,255,255,15,0,0,0,255,255,255,127,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,127,0,0,0,0,0,0,192,0,224,0,0,0,0,0,0,0,0,0,0,0,128,15,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,255,255,127,0,3,0,0,0,0,0,0,0,0,0,0,0,0,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,68,8,0,0,0,15,255,3,0,0,0,0,0,0,240,0,0,0,0,0,0,0,0,0,16,192,0,0,255,255,3,7,0,0,0,0,0,248,0,0,0,0,8,128,0,0,0,0,0,0,0,0,0,0,8,0,255,63,0,192,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,240,0,0,128,11,0,0,0,0,0,0,0,128,2,0,0,192,0,0,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,252,255,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,48,255,255,255,3,127,0,255,255,255,255,247,255,127,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,254,255,0,252,1,0,0,
248,1,0,0,248,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,127,127,0,48,135,255,255,255,255,255,143,255,0,0,0,0,0,0,224,255,255,7,255,15,0,0,0,0,0,0,255,255,255,255,255,63,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,143,0,0,0,128,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,135,255,0,255,1,0,0,0,224,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,254,0,0,0,255,0,0,0,255,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,127,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,63,252,255,63,0,0,0,3,0,0,0,0,0,0,254,3,0,0,0,0,0,0,0,0,0,0,0,0,0,24,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,225,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,192,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,128,7,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,63,0,255,255,255,255,127,254,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,63,0,0,0,0,255,255,255,255,255,255,255,255,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,127,0,255,255,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,8,0,0,0,8,0,0,32,0,0,0,32,0,0,128,0,0,0,128,0,0,0,2,0,0,0,2,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,3,0,255,255,255,255,255,15,255,255,255,255,255,255,255,255,255,255,255,255,15,0,255,127,254,127,254,255,254,255,0,0,0,0,255,7,255,255,255,127,255,255,255,255,255,255,255,15,255,255,255,255,255,7,0,0,0,0,0,0,0,0,192,255,255,255,7,0,255,255,255,255,255,7,255,1,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,255,255,255,1,0,191,255,255,255,255,255,255,255,255,31,255,255,15,0,255,255,255,255,223,7,0,0,255,255,1,0,255,255,255,255,255,255,255,127,253,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,30,255,255,255,255,255,255,255,63,15,0,255,255,255,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,248,255,255,255,255,255,255,255,255,225,255,0,0,0,0,0,0,255,255,255,255,255,255,255,255,63,0,0,0,0,0,0,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,15,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,84,33,34,25,13,1,2,3,17,75,28,12,16,4,11,29,18,30,39,104,110,111,112,113,98,32,5,6,15,19,20,21,26,8,22,7,40,36,23,24,9,10,14,27,31,37,35,131,130,125,38,42,43,
60,61,62,63,67,71,74,77,88,89,90,91,92,93,94,95,96,97,99,100,101,102,103,105,106,107,108,114,115,116,121,122,123,124,0,73,108,108,101,103,97,108,32,98,121,116,101,32,115,101,113,117,101,110,99,101,0,68,111,109,97,105,110,32,101,114,114,111,114,0,82,101,115,117,108,116,32,110,111,116,32,114,101,112,114,101,115,101,110,116,97,98,108,101,0,78,111,116,32,97,32,116,116,121,0,80,101,114,109,105,115,115,105,111,110,32,100,101,110,105,101,100,0,79,112,101,114,97,116,105,111,110,32,110,111,116,32,112,101,
114,109,105,116,116,101,100,0,78,111,32,115,117,99,104,32,102,105,108,101,32,111,114,32,100,105,114,101,99,116,111,114,121,0,78,111,32,115,117,99,104,32,112,114,111,99,101,115,115,0,70,105,108,101,32,101,120,105,115,116,115,0,86,97,108,117,101,32,116,111,111,32,108,97,114,103,101,32,102,111,114,32,100,97,116,97,32,116,121,112,101,0,78,111,32,115,112,97,99,101,32,108,101,102,116,32,111,110,32,100,101,118,105,99,101,0,79,117,116,32,111,102,32,109,101,109,111,114,121,0,82,101,115,111,117,114,99,101,
32,98,117,115,121,0,73,110,116,101,114,114,117,112,116,101,100,32,115,121,115,116,101,109,32,99,97,108,108,0,82,101,115,111,117,114,99,101,32,116,101,109,112,111,114,97,114,105,108,121,32,117,110,97,118,97,105,108,97,98,108,101,0,73,110,118,97,108,105,100,32,115,101,101,107,0,67,114,111,115,115,45,100,101,118,105,99,101,32,108,105,110,107,0,82,101,97,100,45,111,110,108,121,32,102,105,108,101,32,115,121,115,116,101,109,0,68,105,114,101,99,116,111,114,121,32,110,111,116,32,101,109,112,116,121,0,67,
111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,112,101,101,114,0,79,112,101,114,97,116,105,111,110,32,116,105,109,101,100,32,111,117,116,0,67,111,110,110,101,99,116,105,111,110,32,114,101,102,117,115,101,100,0,72,111,115,116,32,105,115,32,100,111,119,110,0,72,111,115,116,32,105,115,32,117,110,114,101,97,99,104,97,98,108,101,0,65,100,100,114,101,115,115,32,105,110,32,117,115,101,0,66,114,111,107,101,110,32,112,105,112,101,0,73,47,79,32,101,114,114,111,114,0,78,111,32,115,117,
99,104,32,100,101,118,105,99,101,32,111,114,32,97,100,100,114,101,115,115,0,66,108,111,99,107,32,100,101,118,105,99,101,32,114,101,113,117,105,114,101,100,0,78,111,32,115,117,99,104,32,100,101,118,105,99,101,0,78,111,116,32,97,32,100,105,114,101,99,116,111,114,121,0,73,115,32,97,32,100,105,114,101,99,116,111,114,121,0,84,101,120,116,32,102,105,108,101,32,98,117,115,121,0,69,120,101,99,32,102,111,114,109,97,116,32,101,114,114,111,114,0,73,110,118,97,108,105,100,32,97,114,103,117,109,101,110,116,0,
65,114,103,117,109,101,110,116,32,108,105,115,116,32,116,111,111,32,108,111,110,103,0,83,121,109,98,111,108,105,99,32,108,105,110,107,32,108,111,111,112,0,70,105,108,101,110,97,109,101,32,116,111,111,32,108,111,110,103,0,84,111,111,32,109,97,110,121,32,111,112,101,110,32,102,105,108,101,115,32,105,110,32,115,121,115,116,101,109,0,78,111,32,102,105,108,101,32,100,101,115,99,114,105,112,116,111,114,115,32,97,118,97,105,108,97,98,108,101,0,66,97,100,32,102,105,108,101,32,100,101,115,99,114,105,112,116,
111,114,0,78,111,32,99,104,105,108,100,32,112,114,111,99,101,115,115,0,66,97,100,32,97,100,100,114,101,115,115,0,70,105,108,101,32,116,111,111,32,108,97,114,103,101,0,84,111,111,32,109,97,110,121,32,108,105,110,107,115,0,78,111,32,108,111,99,107,115,32,97,118,97,105,108,97,98,108,101,0,82,101,115,111,117,114,99,101,32,100,101,97,100,108,111,99,107,32,119,111,117,108,100,32,111,99,99,117,114,0,83,116,97,116,101,32,110,111,116,32,114,101,99,111,118,101,114,97,98,108,101,0,80,114,101,118,105,111,117,
115,32,111,119,110,101,114,32,100,105,101,100,0,79,112,101,114,97,116,105,111,110,32,99,97,110,99,101,108,101,100,0,70,117,110,99,116,105,111,110,32,110,111,116,32,105,109,112,108,101,109,101,110,116,101,100,0,78,111,32,109,101,115,115,97,103,101,32,111,102,32,100,101,115,105,114,101,100,32,116,121,112,101,0,73,100,101,110,116,105,102,105,101,114,32,114,101,109,111,118,101,100,0,68,101,118,105,99,101,32,110,111,116,32,97,32,115,116,114,101,97,109,0,78,111,32,100,97,116,97,32,97,118,97,105,108,97,
98,108,101,0,68,101,118,105,99,101,32,116,105,109,101,111,117,116,0,79,117,116,32,111,102,32,115,116,114,101,97,109,115,32,114,101,115,111,117,114,99,101,115,0,76,105,110,107,32,104,97,115,32,98,101,101,110,32,115,101,118,101,114,101,100,0,80,114,111,116,111,99,111,108,32,101,114,114,111,114,0,66,97,100,32,109,101,115,115,97,103,101,0,70,105,108,101,32,100,101,115,99,114,105,112,116,111,114,32,105,110,32,98,97,100,32,115,116,97,116,101,0,78,111,116,32,97,32,115,111,99,107,101,116,0,68,101,115,116,
105,110,97,116,105,111,110,32,97,100,100,114,101,115,115,32,114,101,113,117,105,114,101,100,0,77,101,115,115,97,103,101,32,116,111,111,32,108,97,114,103,101,0,80,114,111,116,111,99,111,108,32,119,114,111,110,103,32,116,121,112,101,32,102,111,114,32,115,111,99,107,101,116,0,80,114,111,116,111,99,111,108,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,80,114,111,116,111,99,111,108,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,83,111,99,107,101,116,32,116,121,112,101,32,110,111,116,32,
115,117,112,112,111,114,116,101,100,0,78,111,116,32,115,117,112,112,111,114,116,101,100,0,80,114,111,116,111,99,111,108,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,0,65,100,100,114,101,115,115,32,102,97,109,105,108,121,32,110,111,116,32,115,117,112,112,111,114,116,101,100,32,98,121,32,112,114,111,116,111,99,111,108,0,65,100,100,114,101,115,115,32,110,111,116,32,97,118,97,105,108,97,98,108,101,0,78,101,116,119,111,114,107,32,105,115,32,100,111,119,110,0,78,101,116,
119,111,114,107,32,117,110,114,101,97,99,104,97,98,108,101,0,67,111,110,110,101,99,116,105,111,110,32,114,101,115,101,116,32,98,121,32,110,101,116,119,111,114,107,0,67,111,110,110,101,99,116,105,111,110,32,97,98,111,114,116,101,100,0,78,111,32,98,117,102,102,101,114,32,115,112,97,99,101,32,97,118,97,105,108,97,98,108,101,0,83,111,99,107,101,116,32,105,115,32,99,111,110,110,101,99,116,101,100,0,83,111,99,107,101,116,32,110,111,116,32,99,111,110,110,101,99,116,101,100,0,67,97,110,110,111,116,32,115,
101,110,100,32,97,102,116,101,114,32,115,111,99,107,101,116,32,115,104,117,116,100,111,119,110,0,79,112,101,114,97,116,105,111,110,32,97,108,114,101,97,100,121,32,105,110,32,112,114,111,103,114,101,115,115,0,79,112,101,114,97,116,105,111,110,32,105,110,32,112,114,111,103,114,101,115,115,0,83,116,97,108,101,32,102,105,108,101,32,104,97,110,100,108,101,0,82,101,109,111,116,101,32,73,47,79,32,101,114,114,111,114,0,81,117,111,116,97,32,101,120,99,101,101,100,101,100,0,78,111,32,109,101,100,105,117,109,
32,102,111,117,110,100,0,87,114,111,110,103,32,109,101,100,105,117,109,32,116,121,112,101,0,78,111,32,101,114,114,111,114,32,105,110,102,111,114,109,97,116,105,111,110,0,0,105,110,102,105,110,105,116,121,0,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,3,4,5,6,7,8,9,255,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,
27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,
255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,255,0,1,2,4,7,3,6,5,0,47,112,114,111,99,47,115,101,108,102,47,102,100,47,0,67,46,85,84,70,45,56,0,114,119,97,0,119,43,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,116,109,112,0,47,116,109,112,47,116,37,120,45,37,120],"i8",4,n.q+183047);
D([17,0,10,0,17,17,17,0,0,0,0,5,0,0,0,0,0,0,9,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,15,10,17,17,17,3,10,7,0,1,19,9,11,11,0,0,9,6,11,0,0,11,0,6,17,0,0,0,17,17,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,17,0,10,10,17,17,17,0,10,0,0,2,0,9,11,0,0,0,9,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,0,0,0,0,0,0,0,0,0,0,0,13,0,0,0,4,13,0,0,0,0,9,14,0,0,0,0,0,14,
0,0,14,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,0,0,0,0,15,0,0,0,0,15,0,0,0,0,9,16,0,0,0,0,0,16,0,0,16,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,18,0,0,0,18,18,18,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,0,0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,10,0,0,0,0,9,11,0,0,0,0,0,11,0,0,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,12,0,0,0,0,9,12,0,0,0,0,0,12,0,0,12,0,0,
48,49,50,51,52,53,54,55,56,57,65,66,67,68,69,70,45,43,32,32,32,48,88,48,120,0,40,110,117,108,108,41,0,45,48,88,43,48,88,32,48,88,45,48,120,43,48,120,32,48,120,0,105,110,102,0,73,78,70,0,110,97,110,0,78,65,78,0,46,0,9,0,10,0,13,0,12,0,7,0,27,0,91,91,58,97,108,110,117,109,58,93,95,93,0,91,94,91,58,97,108,110,117,109,58,93,95,93,0,91,91,58,115,112,97,99,101,58,93,93,0,91,94,91,58,115,112,97,99,101,58,93,93,0,91,91,58,100,105,103,105,116,58,93,93,0,91,94,91,58,100,105,103,105,116,58,93,93,0],"i8",4,n.q+
190994);var kb=n.na(D(12,"i8",2),8);assert(0==kb%8);e._i64Subtract=lb;var mb=ya;e._i64Add=nb;
var J={J:1,H:2,$c:3,Xb:4,Y:5,Da:6,qb:7,uc:8,S:9,Eb:10,za:11,ld:11,Ba:12,R:13,Qb:14,Gc:15,ka:16,Aa:17,md:18,Z:19,ma:20,M:21,p:22,pc:23,Qa:24,T:25,hd:26,Rb:27,Cc:28,$:29,Xc:30,ic:31,Qc:32,Nb:33,Uc:34,yc:42,Ub:43,Fb:44,$b:45,ac:46,bc:47,hc:48,jd:49,sc:50,Zb:51,Kb:35,vc:37,wb:52,zb:53,nd:54,qc:55,Ab:56,Bb:57,Lb:35,Cb:59,Ec:60,tc:61,dd:62,Dc:63,zc:64,Ac:65,Wc:66,wc:67,tb:68,ad:69,Gb:70,Rc:71,kc:72,Ob:73,yb:74,Lc:76,xb:77,Vc:78,cc:79,dc:80,gc:81,fc:82,ec:83,Fc:38,Ca:39,lc:36,la:40,Mc:95,Pc:96,Jb:104,rc:105,
ub:97,Tc:91,Jc:88,Bc:92,Yc:108,Ib:111,rb:98,Hb:103,oc:101,mc:100,ed:110,Sb:112,Tb:113,Wb:115,vb:114,Mb:89,jc:90,Sc:93,Zc:94,sb:99,nc:102,Yb:106,Hc:107,gd:109,kd:87,Pb:122,bd:116,Kc:95,xc:123,Vb:84,Nc:75,Db:125,Ic:131,Oc:130,cd:86},ob={0:"Success",1:"Not super-user",2:"No such file or directory",3:"No such process",4:"Interrupted system call",5:"I/O error",6:"No such device or address",7:"Arg list too long",8:"Exec format error",9:"Bad file number",10:"No children",11:"No more processes",12:"Not enough core",
13:"Permission denied",14:"Bad address",15:"Block device required",16:"Mount device busy",17:"File exists",18:"Cross-device link",19:"No such device",20:"Not a directory",21:"Is a directory",22:"Invalid argument",23:"Too many open files in system",24:"Too many open files",25:"Not a typewriter",26:"Text file busy",27:"File too large",28:"No space left on device",29:"Illegal seek",30:"Read only file system",31:"Too many links",32:"Broken pipe",33:"Math arg out of domain of func",34:"Math result not representable",
35:"File locking deadlock error",36:"File or path name too long",37:"No record locks available",38:"Function not implemented",39:"Directory not empty",40:"Too many symbolic links",42:"No message of desired type",43:"Identifier removed",44:"Channel number out of range",45:"Level 2 not synchronized",46:"Level 3 halted",47:"Level 3 reset",48:"Link number out of range",49:"Protocol driver not attached",50:"No CSI structure available",51:"Level 2 halted",52:"Invalid exchange",53:"Invalid request descriptor",
54:"Exchange full",55:"No anode",56:"Invalid request code",57:"Invalid slot",59:"Bad font file fmt",60:"Device not a stream",61:"No data (for no delay io)",62:"Timer expired",63:"Out of streams resources",64:"Machine is not on the network",65:"Package not installed",66:"The object is remote",67:"The link has been severed",68:"Advertise error",69:"Srmount error",70:"Communication error on send",71:"Protocol error",72:"Multihop attempted",73:"Cross mount point (not really error)",74:"Trying to read unreadable message",
75:"Value too large for defined data type",76:"Given log. name not unique",77:"f.d. invalid for this operation",78:"Remote address changed",79:"Can   access a needed shared lib",80:"Accessing a corrupted shared lib",81:".lib section in a.out corrupted",82:"Attempting to link in too many libs",83:"Attempting to exec a shared library",84:"Illegal byte sequence",86:"Streams pipe error",87:"Too many users",88:"Socket operation on non-socket",89:"Destination address required",90:"Message too long",91:"Protocol wrong type for socket",
92:"Protocol not available",93:"Unknown protocol",94:"Socket type not supported",95:"Not supported",96:"Protocol family not supported",97:"Address family not supported by protocol family",98:"Address already in use",99:"Address not available",100:"Network interface is not configured",101:"Network is unreachable",102:"Connection reset by network",103:"Connection aborted",104:"Connection reset by peer",105:"No buffer space available",106:"Socket is already connected",107:"Socket is not connected",108:"Can't send after socket shutdown",
109:"Too many references",110:"Connection timed out",111:"Connection refused",112:"Host is down",113:"Host is unreachable",114:"Socket already connected",115:"Connection already in progress",116:"Stale file handle",122:"Quota exceeded",123:"No medium (in tape drive)",125:"Operation canceled",130:"Previous owner died",131:"State not recoverable"};function pb(a){e.___errno_location&&(C[e.___errno_location()>>2]=a);return a}
function qb(a,b){for(var c=0,d=a.length-1;0<=d;d--){var f=a[d];"."===f?a.splice(d,1):".."===f?(a.splice(d,1),c++):c&&(a.splice(d,1),c--)}if(b)for(;c--;c)a.unshift("..");return a}function rb(a){var b="/"===a.charAt(0),c="/"===a.substr(-1);(a=qb(a.split("/").filter(function(a){return!!a}),!b).join("/"))||b||(a=".");a&&c&&(a+="/");return(b?"/":"")+a}
function sb(a){var b=/^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/.exec(a).slice(1);a=b[0];b=b[1];if(!a&&!b)return".";b&&(b=b.substr(0,b.length-1));return a+b}function tb(a){if("/"===a)return"/";var b=a.lastIndexOf("/");return-1===b?a:a.substr(b+1)}function ub(){var a=Array.prototype.slice.call(arguments,0);return rb(a.join("/"))}function vb(a,b){return rb(a+"/"+b)}
function wb(){for(var a="",b=!1,c=arguments.length-1;-1<=c&&!b;c--){b=0<=c?arguments[c]:"/";if("string"!==typeof b)throw new TypeError("Arguments to path.resolve must be strings");if(!b)return"";a=b+"/"+a;b="/"===b.charAt(0)}a=qb(a.split("/").filter(function(a){return!!a}),!b).join("/");return(b?"/":"")+a||"."}var xb=[];function yb(a,b){xb[a]={input:[],output:[],P:b};zb(a,Ab)}
var Ab={open:function(a){var b=xb[a.g.rdev];if(!b)throw new K(J.Z);a.tty=b;a.seekable=!1},close:function(a){a.tty.P.flush(a.tty)},flush:function(a){a.tty.P.flush(a.tty)},read:function(a,b,c,d){if(!a.tty||!a.tty.P.Na)throw new K(J.Da);for(var f=0,g=0;g<d;g++){var k;try{k=a.tty.P.Na(a.tty)}catch(h){throw new K(J.Y);}if(void 0===k&&0===f)throw new K(J.za);if(null===k||void 0===k)break;f++;b[c+g]=k}f&&(a.g.timestamp=Date.now());return f},write:function(a,b,c,d){if(!a.tty||!a.tty.P.ta)throw new K(J.Da);
for(var f=0;f<d;f++)try{a.tty.P.ta(a.tty,b[c+f])}catch(g){throw new K(J.Y);}d&&(a.g.timestamp=Date.now());return f}},Bb={Na:function(a){if(!a.input.length){var b=null;if(da){var c=new Buffer(256),d=0,f=process.stdin.fd,g=!1;try{f=fs.openSync("/dev/stdin","r"),g=!0}catch(k){}d=fs.readSync(f,c,0,256,null);g&&fs.closeSync(f);0<d?b=c.slice(0,d).toString("utf-8"):b=null}else"undefined"!=typeof window&&"function"==typeof window.prompt?(b=window.prompt("Input: "),null!==b&&(b+="\n")):"function"==typeof readline&&
(b=readline(),null!==b&&(b+="\n"));if(!b)return null;a.input=$a(b,!0)}return a.input.shift()},ta:function(a,b){null===b||10===b?(e.print(Ca(a.output,0)),a.output=[]):0!=b&&a.output.push(b)},flush:function(a){a.output&&0<a.output.length&&(e.print(Ca(a.output,0)),a.output=[])}},Cb={ta:function(a,b){null===b||10===b?(e.printErr(Ca(a.output,0)),a.output=[]):0!=b&&a.output.push(b)},flush:function(a){a.output&&0<a.output.length&&(e.printErr(Ca(a.output,0)),a.output=[])}},L={G:null,B:function(){return L.createNode(null,
"/",16895,0)},createNode:function(a,b,c,d){if(24576===(c&61440)||4096===(c&61440))throw new K(J.J);L.G||(L.G={dir:{g:{D:L.k.D,F:L.k.F,lookup:L.k.lookup,U:L.k.U,rename:L.k.rename,unlink:L.k.unlink,rmdir:L.k.rmdir,readdir:L.k.readdir,symlink:L.k.symlink},stream:{I:L.n.I}},file:{g:{D:L.k.D,F:L.k.F},stream:{I:L.n.I,read:L.n.read,write:L.n.write,Ea:L.n.Ea,ga:L.n.ga,ha:L.n.ha}},link:{g:{D:L.k.D,F:L.k.F,readlink:L.k.readlink},stream:{}},Ga:{g:{D:L.k.D,F:L.k.F},stream:Db}});c=Eb(a,b,c,d);M(c.mode)?(c.k=L.G.dir.g,
c.n=L.G.dir.stream,c.e={}):32768===(c.mode&61440)?(c.k=L.G.file.g,c.n=L.G.file.stream,c.o=0,c.e=null):40960===(c.mode&61440)?(c.k=L.G.link.g,c.n=L.G.link.stream):8192===(c.mode&61440)&&(c.k=L.G.Ga.g,c.n=L.G.Ga.stream);c.timestamp=Date.now();a&&(a.e[b]=c);return c},Xa:function(a){if(a.e&&a.e.subarray){for(var b=[],c=0;c<a.o;++c)b.push(a.e[c]);return b}return a.e},zd:function(a){return a.e?a.e.subarray?a.e.subarray(0,a.o):new Uint8Array(a.e):new Uint8Array},Ia:function(a,b){a.e&&a.e.subarray&&b>a.e.length&&
(a.e=L.Xa(a),a.o=a.e.length);if(!a.e||a.e.subarray){var c=a.e?a.e.buffer.byteLength:0;c>=b||(b=Math.max(b,c*(1048576>c?2:1.125)|0),0!=c&&(b=Math.max(b,256)),c=a.e,a.e=new Uint8Array(b),0<a.o&&a.e.set(c.subarray(0,a.o),0))}else for(!a.e&&0<b&&(a.e=[]);a.e.length<b;)a.e.push(0)},jb:function(a,b){if(a.o!=b)if(0==b)a.e=null,a.o=0;else{if(!a.e||a.e.subarray){var c=a.e;a.e=new Uint8Array(new ArrayBuffer(b));c&&a.e.set(c.subarray(0,Math.min(b,a.o)))}else if(a.e||(a.e=[]),a.e.length>b)a.e.length=b;else for(;a.e.length<
b;)a.e.push(0);a.o=b}},k:{D:function(a){var b={};b.dev=8192===(a.mode&61440)?a.id:1;b.ino=a.id;b.mode=a.mode;b.nlink=1;b.uid=0;b.gid=0;b.rdev=a.rdev;M(a.mode)?b.size=4096:32768===(a.mode&61440)?b.size=a.o:40960===(a.mode&61440)?b.size=a.link.length:b.size=0;b.atime=new Date(a.timestamp);b.mtime=new Date(a.timestamp);b.ctime=new Date(a.timestamp);b.L=4096;b.blocks=Math.ceil(b.size/b.L);return b},F:function(a,b){void 0!==b.mode&&(a.mode=b.mode);void 0!==b.timestamp&&(a.timestamp=b.timestamp);void 0!==
b.size&&L.jb(a,b.size)},lookup:function(){throw Fb[J.H];},U:function(a,b,c,d){return L.createNode(a,b,c,d)},rename:function(a,b,c){if(M(a.mode)){var d;try{d=Gb(b,c)}catch(f){}if(d)for(var g in d.e)throw new K(J.Ca);}delete a.parent.e[a.name];a.name=c;b.e[c]=a;a.parent=b},unlink:function(a,b){delete a.e[b]},rmdir:function(a,b){var c=Gb(a,b),d;for(d in c.e)throw new K(J.Ca);delete a.e[b]},readdir:function(a){var b=[".",".."],c;for(c in a.e)a.e.hasOwnProperty(c)&&b.push(c);return b},symlink:function(a,
b,c){a=L.createNode(a,b,41471,0);a.link=c;return a},readlink:function(a){if(40960!==(a.mode&61440))throw new K(J.p);return a.link}},n:{read:function(a,b,c,d,f){var g=a.g.e;if(f>=a.g.o)return 0;a=Math.min(a.g.o-f,d);assert(0<=a);if(8<a&&g.subarray)b.set(g.subarray(f,f+a),c);else for(d=0;d<a;d++)b[c+d]=g[f+d];return a},write:function(a,b,c,d,f,g){if(!d)return 0;a=a.g;a.timestamp=Date.now();if(b.subarray&&(!a.e||a.e.subarray)){if(g)return a.e=b.subarray(c,c+d),a.o=d;if(0===a.o&&0===f)return a.e=new Uint8Array(b.subarray(c,
c+d)),a.o=d;if(f+d<=a.o)return a.e.set(b.subarray(c,c+d),f),d}L.Ia(a,f+d);if(a.e.subarray&&b.subarray)a.e.set(b.subarray(c,c+d),f);else for(g=0;g<d;g++)a.e[f+g]=b[c+g];a.o=Math.max(a.o,f+d);return d},I:function(a,b,c){1===c?b+=a.position:2===c&&32768===(a.g.mode&61440)&&(b+=a.g.o);if(0>b)throw new K(J.p);return b},Ea:function(a,b,c){L.Ia(a.g,b+c);a.g.o=Math.max(a.g.o,b+c)},ga:function(a,b,c,d,f,g,k){if(32768!==(a.g.mode&61440))throw new K(J.Z);c=a.g.e;if(k&2||c.buffer!==b&&c.buffer!==b.buffer){if(0<
f||f+d<a.g.o)c.subarray?c=c.subarray(f,f+d):c=Array.prototype.slice.call(c,f,f+d);a=!0;d=xa(d);if(!d)throw new K(J.Ba);b.set(c,d)}else a=!1,d=c.byteOffset;return{gb:d,oa:a}},ha:function(a,b,c,d,f){if(32768!==(a.g.mode&61440))throw new K(J.Z);if(f&2)return 0;L.n.write(a,b,0,d,c,!1);return 0}}},N={fa:!1,nb:function(){N.fa=!!process.platform.match(/^win/)},B:function(a){assert(da);return N.createNode(null,"/",N.La(a.sa.root),0)},createNode:function(a,b,c){if(!M(c)&&32768!==(c&61440)&&40960!==(c&61440))throw new K(J.p);
a=Eb(a,b,c);a.k=N.k;a.n=N.n;return a},La:function(a){var b;try{b=fs.lstatSync(a),N.fa&&(b.mode=b.mode|(b.mode&146)>>1)}catch(c){if(!c.code)throw c;throw new K(J[c.code]);}return b.mode},C:function(a){for(var b=[];a.parent!==a;)b.push(a.name),a=a.parent;b.push(a.B.sa.root);b.reverse();return ub.apply(null,b)},Ja:{0:"r",1:"r+",2:"r+",64:"r",65:"r+",66:"r+",129:"rx+",193:"rx+",514:"w+",577:"w",578:"w+",705:"wx",706:"wx+",1024:"a",1025:"a",1026:"a+",1089:"a",1090:"a+",1153:"ax",1154:"ax+",1217:"ax",1218:"ax+",
4096:"rs",4098:"rs+"},Ua:function(a){a&=-32769;if(a in N.Ja)return N.Ja[a];throw new K(J.p);},k:{D:function(a){a=N.C(a);var b;try{b=fs.lstatSync(a)}catch(c){if(!c.code)throw c;throw new K(J[c.code]);}N.fa&&!b.L&&(b.L=4096);N.fa&&!b.blocks&&(b.blocks=(b.size+b.L-1)/b.L|0);return{dev:b.dev,ino:b.ino,mode:b.mode,nlink:b.nlink,uid:b.uid,gid:b.gid,rdev:b.rdev,size:b.size,atime:b.atime,mtime:b.mtime,ctime:b.ctime,L:b.L,blocks:b.blocks}},F:function(a,b){var c=N.C(a);try{void 0!==b.mode&&(fs.chmodSync(c,
b.mode),a.mode=b.mode),void 0!==b.size&&fs.truncateSync(c,b.size)}catch(d){if(!d.code)throw d;throw new K(J[d.code]);}},lookup:function(a,b){var c=vb(N.C(a),b),c=N.La(c);return N.createNode(a,b,c)},U:function(a,b,c,d){a=N.createNode(a,b,c,d);b=N.C(a);try{M(a.mode)?fs.mkdirSync(b,a.mode):fs.writeFileSync(b,"",{mode:a.mode})}catch(f){if(!f.code)throw f;throw new K(J[f.code]);}return a},rename:function(a,b,c){a=N.C(a);b=vb(N.C(b),c);try{fs.renameSync(a,b)}catch(d){if(!d.code)throw d;throw new K(J[d.code]);
}},unlink:function(a,b){var c=vb(N.C(a),b);try{fs.unlinkSync(c)}catch(d){if(!d.code)throw d;throw new K(J[d.code]);}},rmdir:function(a,b){var c=vb(N.C(a),b);try{fs.rmdirSync(c)}catch(d){if(!d.code)throw d;throw new K(J[d.code]);}},readdir:function(a){a=N.C(a);try{return fs.readdirSync(a)}catch(b){if(!b.code)throw b;throw new K(J[b.code]);}},symlink:function(a,b,c){a=vb(N.C(a),b);try{fs.symlinkSync(c,a)}catch(d){if(!d.code)throw d;throw new K(J[d.code]);}},readlink:function(a){var b=N.C(a);try{return b=
fs.readlinkSync(b),b=Hb.relative(Hb.resolve(a.B.sa.root),b)}catch(c){if(!c.code)throw c;throw new K(J[c.code]);}}},n:{open:function(a){var b=N.C(a.g);try{32768===(a.g.mode&61440)&&(a.W=fs.openSync(b,N.Ua(a.flags)))}catch(c){if(!c.code)throw c;throw new K(J[c.code]);}},close:function(a){try{32768===(a.g.mode&61440)&&a.W&&fs.closeSync(a.W)}catch(b){if(!b.code)throw b;throw new K(J[b.code]);}},read:function(a,b,c,d,f){if(0===d)return 0;var g=new Buffer(d),k;try{k=fs.readSync(a.W,g,0,d,f)}catch(h){throw new K(J[h.code]);
}if(0<k)for(a=0;a<k;a++)b[c+a]=g[a];return k},write:function(a,b,c,d,f){b=new Buffer(b.subarray(c,c+d));var g;try{g=fs.writeSync(a.W,b,0,d,f)}catch(k){throw new K(J[k.code]);}return g},I:function(a,b,c){if(1===c)b+=a.position;else if(2===c&&32768===(a.g.mode&61440))try{b+=fs.fstatSync(a.W).size}catch(d){throw new K(J[d.code]);}if(0>b)throw new K(J.p);return b}}};D(1,"i32*",2);D(1,"i32*",2);D(1,"i32*",2);var Jb=null,Kb=[null],O=[],Lb=1,P=null,Mb=!0,Q={},K=null,Fb={};
function R(a,b){a=wb("/",a);b=b||{};if(!a)return{path:"",g:null};var c={Ka:!0,ua:0},d;for(d in c)void 0===b[d]&&(b[d]=c[d]);if(8<b.ua)throw new K(J.la);var c=qb(a.split("/").filter(function(a){return!!a}),!1),f=Jb;d="/";for(var g=0;g<c.length;g++){var k=g===c.length-1;if(k&&b.parent)break;f=Gb(f,c[g]);d=vb(d,c[g]);f.V&&(!k||k&&b.Ka)&&(f=f.V.root);if(!k||b.da)for(k=0;40960===(f.mode&61440);)if(f=Nb(d),d=wb(sb(d),f),f=R(d,{ua:b.ua}).g,40<k++)throw new K(J.la);}return{path:d,g:f}}
function Ob(a){for(var b;;){if(a===a.parent)return a=a.B.Oa,b?"/"!==a[a.length-1]?a+"/"+b:a+b:a;b=b?a.name+"/"+b:a.name;a=a.parent}}function Pb(a,b){for(var c=0,d=0;d<b.length;d++)c=(c<<5)-c+b.charCodeAt(d)|0;return(a+c>>>0)%P.length}function Qb(a){var b=Pb(a.parent.id,a.name);a.O=P[b];P[b]=a}function Gb(a,b){var c;if(c=(c=Rb(a,"x"))?c:a.k.lookup?0:J.R)throw new K(c,a);for(c=P[Pb(a.id,b)];c;c=c.O){var d=c.name;if(c.parent.id===a.id&&d===b)return c}return a.k.lookup(a,b)}
function Eb(a,b,c,d){Sb||(Sb=function(a,b,c,d){a||(a=this);this.parent=a;this.B=a.B;this.V=null;this.id=Lb++;this.name=b;this.mode=c;this.k={};this.n={};this.rdev=d},Sb.prototype={},Object.defineProperties(Sb.prototype,{read:{get:function(){return 365===(this.mode&365)},set:function(a){a?this.mode|=365:this.mode&=-366}},write:{get:function(){return 146===(this.mode&146)},set:function(a){a?this.mode|=146:this.mode&=-147}},Fd:{get:function(){return M(this.mode)}},Ed:{get:function(){return 8192===(this.mode&
61440)}}}));a=new Sb(a,b,c,d);Qb(a);return a}function M(a){return 16384===(a&61440)}var Tb={r:0,rs:1052672,"r+":2,w:577,wx:705,xw:705,"w+":578,"wx+":706,"xw+":706,a:1089,ax:1217,xa:1217,"a+":1090,"ax+":1218,"xa+":1218};function Rb(a,b){if(Mb)return 0;if(-1===b.indexOf("r")||a.mode&292){if(-1!==b.indexOf("w")&&!(a.mode&146)||-1!==b.indexOf("x")&&!(a.mode&73))return J.R}else return J.R;return 0}function Ub(a,b){try{return Gb(a,b),J.Aa}catch(c){}return Rb(a,"wx")}
function Vb(a){var b;b=4096;for(a=a||0;a<=b;a++)if(!O[a])return a;throw new K(J.Qa);}function Wb(a,b){Xb||(Xb=function(){},Xb.prototype={},Object.defineProperties(Xb.prototype,{object:{get:function(){return this.g},set:function(a){this.g=a}},Gd:{get:function(){return 1!==(this.flags&2097155)}},Hd:{get:function(){return 0!==(this.flags&2097155)}},Dd:{get:function(){return this.flags&1024}}}));var c=new Xb,d;for(d in a)c[d]=a[d];a=c;c=Vb(b);a.fd=c;return O[c]=a}
var Db={open:function(a){a.n=Kb[a.g.rdev].n;a.n.open&&a.n.open(a)},I:function(){throw new K(J.$);}};function zb(a,b){Kb[a]={n:b}}function Yb(a,b){var c="/"===b,d=!b,f;if(c&&Jb)throw new K(J.ka);if(!c&&!d){f=R(b,{Ka:!1});b=f.path;f=f.g;if(f.V)throw new K(J.ka);if(!M(f.mode))throw new K(J.ma);}var d={type:a,sa:{},Oa:b,fb:[]},g=a.B(d);g.B=d;d.root=g;c?Jb=g:f&&(f.V=d,f.B&&f.B.fb.push(d))}
function Zb(a,b,c){var d=R(a,{parent:!0}).g;a=tb(a);if(!a||"."===a||".."===a)throw new K(J.p);var f=Ub(d,a);if(f)throw new K(f);if(!d.k.U)throw new K(J.J);return d.k.U(d,a,b,c)}function S(a){var b;b=(void 0!==b?b:511)&1023;b|=16384;Zb(a,b,0)}function $b(a,b,c){"undefined"===typeof c&&(c=b,b=438);Zb(a,b|8192,c)}function ac(a,b){if(!wb(a))throw new K(J.H);var c=R(b,{parent:!0}).g;if(!c)throw new K(J.H);var d=tb(b),f=Ub(c,d);if(f)throw new K(f);if(!c.k.symlink)throw new K(J.J);c.k.symlink(c,d,a)}
function Nb(a){a=R(a).g;if(!a)throw new K(J.H);if(!a.k.readlink)throw new K(J.p);return wb(Ob(a.parent),a.k.readlink(a))}
function bc(a,b,c,d){if(""===a)throw new K(J.H);if("string"===typeof b){var f=Tb[b];if("undefined"===typeof f)throw Error("Unknown file open mode: "+b);b=f}c=b&64?("undefined"===typeof c?438:c)&4095|32768:0;var g;if("object"===typeof a)g=a;else{a=rb(a);try{g=R(a,{da:!(b&131072)}).g}catch(k){}}f=!1;if(b&64)if(g){if(b&128)throw new K(J.Aa);}else g=Zb(a,c,0),f=!0;if(!g)throw new K(J.H);8192===(g.mode&61440)&&(b&=-513);if(b&65536&&!M(g.mode))throw new K(J.ma);if(!f&&(g?40960===(g.mode&61440)?c=J.la:M(g.mode)&&
(0!==(b&2097155)||b&512)?c=J.M:(c=["r","w","rw"][b&3],b&512&&(c+="w"),c=Rb(g,c)):c=J.H,c))throw new K(c);if(b&512){c=g;var h;"string"===typeof c?h=R(c,{da:!0}).g:h=c;if(!h.k.F)throw new K(J.J);if(M(h.mode))throw new K(J.M);if(32768!==(h.mode&61440))throw new K(J.p);if(c=Rb(h,"w"))throw new K(c);h.k.F(h,{size:0,timestamp:Date.now()})}b&=-641;d=Wb({g:g,path:Ob(g),flags:b,seekable:!0,position:0,n:g.n,ob:[],error:!1},d);d.n.open&&d.n.open(d);!e.logReadFiles||b&1||(cc||(cc={}),a in cc||(cc[a]=1,e.printErr("read file: "+
a)));try{Q.onOpenFile&&(g=0,1!==(b&2097155)&&(g|=1),0!==(b&2097155)&&(g|=2),Q.onOpenFile(a,g))}catch(v){console.log("FS.trackingDelegate['onOpenFile']('"+a+"', flags) threw an exception: "+v.message)}return d}function dc(a){a.ra&&(a.ra=null);try{a.n.close&&a.n.close(a)}catch(b){throw b;}finally{O[a.fd]=null}}function ec(a,b,c){if(!a.seekable||!a.n.I)throw new K(J.$);a.position=a.n.I(a,b,c);a.ob=[]}
function fc(){K||(K=function(a,b){this.g=b;this.kb=function(a){this.A=a;for(var b in J)if(J[b]===a){this.code=b;break}};this.kb(a);this.message=ob[a]},K.prototype=Error(),K.prototype.constructor=K,[J.H].forEach(function(a){Fb[a]=new K(a);Fb[a].stack="<generic error, no stack>"}))}var gc;function hc(a,b){var c=0;a&&(c|=365);b&&(c|=146);return c}
function ic(a,b,c){a=vb("/dev",a);var d=hc(!!b,!!c);jc||(jc=64);var f=jc++<<8|0;zb(f,{open:function(a){a.seekable=!1},close:function(){c&&c.buffer&&c.buffer.length&&c(10)},read:function(a,c,d,f){for(var q=0,r=0;r<f;r++){var t;try{t=b()}catch(B){throw new K(J.Y);}if(void 0===t&&0===q)throw new K(J.za);if(null===t||void 0===t)break;q++;c[d+r]=t}q&&(a.g.timestamp=Date.now());return q},write:function(a,b,d,f){for(var q=0;q<f;q++)try{c(b[d+q])}catch(r){throw new K(J.Y);}f&&(a.g.timestamp=Date.now());return q}});
$b(a,d,f)}var jc,T={},Sb,Xb,cc,kc={};
function lc(a,b){try{var c,d=R(a,{da:!0}).g;if(!d)throw new K(J.H);if(!d.k.D)throw new K(J.J);c=d.k.D(d)}catch(f){if(f&&f.g&&rb(a)!==rb(Ob(f.g)))return-J.ma;throw f;}C[b>>2]=c.dev;C[b+4>>2]=0;C[b+8>>2]=c.ino;C[b+12>>2]=c.mode;C[b+16>>2]=c.nlink;C[b+20>>2]=c.uid;C[b+24>>2]=c.gid;C[b+28>>2]=c.rdev;C[b+32>>2]=0;C[b+36>>2]=c.size;C[b+40>>2]=4096;C[b+44>>2]=c.blocks;C[b+48>>2]=c.atime.getTime()/1E3|0;C[b+52>>2]=0;C[b+56>>2]=c.mtime.getTime()/1E3|0;C[b+60>>2]=0;C[b+64>>2]=c.ctime.getTime()/1E3|0;C[b+68>>
2]=0;C[b+72>>2]=c.ino;return 0}var U=0;function X(){U+=4;return C[U-4>>2]}function mc(){var a;a=X();a=O[a];if(!a)throw new K(J.S);return a}function nc(){throw"bad";}e._realloc=nc;e._saveSetjmp=oc;function pc(a){e.exit(a)}e._bitshift64Lshr=qc;function rc(a,b){I.push(function(){n.N("vi",a,[b])});rc.level=I.length}e._testSetjmp=sc;function tc(a,b){Y.setThrew(a,b||1);throw"longjmp";}var uc=Ba;e._memcpy=vc;
function wc(a){wc.bb||(p=Ha(p),wc.bb=!0,assert(n.ba),wc.Wa=n.ba,n.ba=function(){y("cannot dynamically allocate, sbrk now has control")});var b=p;return 0==a||wc.Wa(a)?b:4294967295}e._memmove=xc;e._memset=yc;e._bitshift64Shl=zc;var Ac=ya,Bc=Aa,Cc=D(1,"i32*",2);
function Dc(a){var b,c;Dc.u?(c=C[Cc>>2],b=C[c>>2]):(Dc.u=!0,Z.USER=Z.LOGNAME="web_user",Z.PATH="/",Z.PWD="/",Z.HOME="/home/web_user",Z.LANG="C",Z._=e.thisProgram,b=D(1024,"i8",2),c=D(256,"i8*",2),C[c>>2]=b,C[Cc>>2]=c);var d=[],f=0,g;for(g in a)if("string"===typeof a[g]){var k=g+"="+a[g];d.push(k);f+=k.length}if(1024<f)throw Error("Environment size exceeded TOTAL_ENV_SIZE!");for(a=0;a<d.length;a++){f=k=d[a];g=b;for(var h=0;h<f.length;++h)z[g++>>0]=f.charCodeAt(h);z[g>>0]=0;C[c+4*a>>2]=b;b+=k.length+
1}C[c+4*d.length>>2]=0}var Z={};function Ec(a,b){Fc=a;Gc=b;if(!Hc)return 1;if(0==a)Ic=function(){setTimeout(Jc,b)},Kc="timeout";else if(1==a)Ic=function(){Lc(Jc)},Kc="rAF";else if(2==a){if(!window.setImmediate){var c=[];window.addEventListener("message",function(a){a.source===window&&"__emcc"===a.data&&(a.stopPropagation(),c.shift()())},!0);window.setImmediate=function(a){c.push(a);window.postMessage("__emcc","*")}}Ic=function(){window.setImmediate(Jc)};Kc="immediate"}return 0}
function Mc(a,b,c,d,f){e.noExitRuntime=!0;assert(!Hc,"emscripten_set_main_loop: there can only be one main loop function at once: call emscripten_cancel_main_loop to cancel the previous one before setting a new one with different parameters.");Hc=a;Nc=d;var g=Oc;Jc=function(){if(!x)if(0<Pc.length){var b=Date.now(),c=Pc.shift();c.Va(c.aa);if(Qc){var f=Qc,q=0==f%1?f-1:Math.floor(f);Qc=c.ud?q:(8*f+(q+.5))/9}console.log('main loop blocker "'+c.name+'" took '+(Date.now()-b)+" ms");Rc();setTimeout(Jc,0)}else g<
Oc||(Sc=Sc+1|0,1==Fc&&1<Gc&&0!=Sc%Gc?Ic():("timeout"===Kc&&e.pa&&(e.X("Looks like you are rendering without using requestAnimationFrame for the main loop. You should use 0 for the frame rate in emscripten_set_main_loop in order to use requestAnimationFrame, as that can greatly improve your frame rates!"),Kc=""),Tc(function(){"undefined"!==typeof d?n.N("vi",a,[d]):n.N("v",a)}),g<Oc||("object"===typeof SDL&&SDL.audio&&SDL.audio.hb&&SDL.audio.hb(),Ic())))};f||(b&&0<b?Ec(0,1E3/b):Ec(1,1),Ic());if(c)throw"SimulateInfiniteLoop";
}var Ic=null,Kc="",Oc=0,Hc=null,Nc=0,Fc=0,Gc=0,Sc=0,Pc=[];function Rc(){if(e.setStatus){var a=e.statusMessage||"Please wait...",b=Qc,c=Uc.wd;b?b<c?e.setStatus(a+" ("+(c-b)+"/"+c+")"):e.setStatus(a):e.setStatus("")}}function Tc(a){if(!(x||e.preMainLoop&&!1===e.preMainLoop())){try{a()}catch(b){if(b instanceof ja)return;b&&"object"===typeof b&&b.stack&&e.X("exception thrown: "+[b,b.stack]);throw b;}e.postMainLoop&&e.postMainLoop()}}var Uc={},Jc,Qc,Vc=!1,Wc=!1,Xc=[];
function Yc(){function a(){Wc=document.pointerLockElement===c||document.mozPointerLockElement===c||document.webkitPointerLockElement===c||document.msPointerLockElement===c}e.preloadPlugins||(e.preloadPlugins=[]);if(!Zc){Zc=!0;try{$c=!0}catch(b){$c=!1,console.log("warning: no blob constructor, cannot create blobs with mimetypes")}ad="undefined"!=typeof MozBlobBuilder?MozBlobBuilder:"undefined"!=typeof WebKitBlobBuilder?WebKitBlobBuilder:$c?null:console.log("warning: no BlobBuilder");bd="undefined"!=
typeof window?window.URL?window.URL:window.webkitURL:void 0;e.Pa||"undefined"!==typeof bd||(console.log("warning: Browser does not support creating object URLs. Built-in browser image decoding will not be available."),e.Pa=!0);e.preloadPlugins.push({canHandle:function(a){return!e.Pa&&/\.(jpg|jpeg|png|bmp)$/i.test(a)},handle:function(a,b,c,k){var h=null;if($c)try{h=new Blob([a],{type:cd(b)}),h.size!==a.length&&(h=new Blob([(new Uint8Array(a)).buffer],{type:cd(b)}))}catch(v){n.Q("Blob constructor present but fails: "+
v+"; falling back to blob builder")}h||(h=new ad,h.append((new Uint8Array(a)).buffer),h=h.getBlob());var q=bd.createObjectURL(h),r=new Image;r.onload=function(){assert(r.complete,"Image "+b+" could not be decoded");var h=document.createElement("canvas");h.width=r.width;h.height=r.height;h.getContext("2d").drawImage(r,0,0);e.preloadedImages[b]=h;bd.revokeObjectURL(q);c&&c(a)};r.onerror=function(){console.log("Image "+q+" could not be decoded");k&&k()};r.src=q}});e.preloadPlugins.push({canHandle:function(a){return!e.Kd&&
a.substr(-4)in{".ogg":1,".wav":1,".mp3":1}},handle:function(a,b,c,k){function h(h){q||(q=!0,e.preloadedAudios[b]=h,c&&c(a))}function v(){q||(q=!0,e.preloadedAudios[b]=new Audio,k&&k())}var q=!1;if($c){try{var r=new Blob([a],{type:cd(b)})}catch(t){return v()}var r=bd.createObjectURL(r),B=new Audio;B.addEventListener("canplaythrough",function(){h(B)},!1);B.onerror=function(){if(!q){console.log("warning: browser could not fully decode audio "+b+", trying slower base64 approach");for(var c="",g=0,k=0,
r=0;r<a.length;r++)for(g=g<<8|a[r],k+=8;6<=k;)var t=g>>k-6&63,k=k-6,c=c+"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[t];2==k?(c+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[(g&3)<<4],c+="=="):4==k&&(c+="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/"[(g&15)<<2],c+="=");B.src="data:audio/x-"+b.substr(-3)+";base64,"+c;h(B)}};B.src=r;dd(function(){h(B)})}else return v()}});var c=e.canvas;c&&(c.va=c.requestPointerLock||c.mozRequestPointerLock||
c.webkitRequestPointerLock||c.msRequestPointerLock||function(){},c.Ha=document.exitPointerLock||document.mozExitPointerLock||document.webkitExitPointerLock||document.msExitPointerLock||function(){},c.Ha=c.Ha.bind(document),document.addEventListener("pointerlockchange",a,!1),document.addEventListener("mozpointerlockchange",a,!1),document.addEventListener("webkitpointerlockchange",a,!1),document.addEventListener("mspointerlockchange",a,!1),e.elementPointerLock&&c.addEventListener("click",function(a){!Wc&&
c.va&&(c.va(),a.preventDefault())},!1))}}function ed(a,b,c,d){if(b&&e.pa&&a==e.canvas)return e.pa;var f,g;if(b){g={antialias:!1,alpha:!1};if(d)for(var k in d)g[k]=d[k];if(g=GL.createContext(a,g))f=GL.getContext(g).od;a.style.backgroundColor="black"}else f=a.getContext("2d");if(!f)return null;c&&(b||assert("undefined"===typeof GLctx,"cannot set in module if GLctx is used, but we are a non-GL context that would replace it"),e.pa=f,b&&GL.Jd(g),e.Md=b,Xc.forEach(function(a){a()}),Yc());return f}
var fd=!1,gd=void 0,hd=void 0;
function id(a,b,c){function d(){Vc=!1;var a=f.parentNode;(document.webkitFullScreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.mozFullscreenElement||document.fullScreenElement||document.fullscreenElement||document.msFullScreenElement||document.msFullscreenElement||document.webkitCurrentFullScreenElement)===a?(f.Fa=document.cancelFullScreen||document.mozCancelFullScreen||document.webkitCancelFullScreen||document.msExitFullscreen||document.exitFullscreen||function(){},
f.Fa=f.Fa.bind(document),gd&&f.va(),Vc=!0,hd&&jd()):(a.parentNode.insertBefore(f,a),a.parentNode.removeChild(a),hd&&kd());if(e.onFullScreen)e.onFullScreen(Vc);ld(f)}gd=a;hd=b;md=c;"undefined"===typeof gd&&(gd=!0);"undefined"===typeof hd&&(hd=!1);"undefined"===typeof md&&(md=null);var f=e.canvas;fd||(fd=!0,document.addEventListener("fullscreenchange",d,!1),document.addEventListener("mozfullscreenchange",d,!1),document.addEventListener("webkitfullscreenchange",d,!1),document.addEventListener("MSFullscreenChange",
d,!1));var g=document.createElement("div");f.parentNode.insertBefore(g,f);g.appendChild(f);g.u=g.requestFullScreen||g.mozRequestFullScreen||g.msRequestFullscreen||(g.webkitRequestFullScreen?function(){g.webkitRequestFullScreen(Element.ALLOW_KEYBOARD_INPUT)}:null);c?g.u({Nd:c}):g.u()}var nd=0;function od(a){var b=Date.now();if(0===nd)nd=b+1E3/60;else for(;b+2>=nd;)nd+=1E3/60;b=Math.max(nd-b,0);setTimeout(a,b)}
function Lc(a){"undefined"===typeof window?od(a):(window.requestAnimationFrame||(window.requestAnimationFrame=window.requestAnimationFrame||window.mozRequestAnimationFrame||window.webkitRequestAnimationFrame||window.msRequestAnimationFrame||window.oRequestAnimationFrame||od),window.requestAnimationFrame(a))}function dd(a){e.noExitRuntime=!0;setTimeout(function(){x||a()},1E4)}
function cd(a){return{jpg:"image/jpeg",jpeg:"image/jpeg",png:"image/png",bmp:"image/bmp",ogg:"audio/ogg",wav:"audio/wav",mp3:"audio/mpeg"}[a.substr(a.lastIndexOf(".")+1)]}var pd=[];function qd(){var a=e.canvas;pd.forEach(function(b){b(a.width,a.height)})}function jd(){if("undefined"!=typeof SDL){var a=Ja[SDL.screen+0*n.K>>2];C[SDL.screen+0*n.K>>2]=a|8388608}qd()}function kd(){if("undefined"!=typeof SDL){var a=Ja[SDL.screen+0*n.K>>2];C[SDL.screen+0*n.K>>2]=a&-8388609}qd()}
function ld(a,b,c){b&&c?(a.pb=b,a.$a=c):(b=a.pb,c=a.$a);var d=b,f=c;e.forcedAspectRatio&&0<e.forcedAspectRatio&&(d/f<e.forcedAspectRatio?d=Math.round(f*e.forcedAspectRatio):f=Math.round(d/e.forcedAspectRatio));if((document.webkitFullScreenElement||document.webkitFullscreenElement||document.mozFullScreenElement||document.mozFullscreenElement||document.fullScreenElement||document.fullscreenElement||document.msFullScreenElement||document.msFullscreenElement||document.webkitCurrentFullScreenElement)===
a.parentNode&&"undefined"!=typeof screen)var g=Math.min(screen.width/d,screen.height/f),d=Math.round(d*g),f=Math.round(f*g);hd?(a.width!=d&&(a.width=d),a.height!=f&&(a.height=f),"undefined"!=typeof a.style&&(a.style.removeProperty("width"),a.style.removeProperty("height"))):(a.width!=b&&(a.width=b),a.height!=c&&(a.height=c),"undefined"!=typeof a.style&&(d!=b||f!=c?(a.style.setProperty("width",d+"px","important"),a.style.setProperty("height",f+"px","important")):(a.style.removeProperty("width"),a.style.removeProperty("height"))))}
var Zc,$c,ad,bd,md;function rd(a){if(0===a)return 0;a=A(a);if(!Z.hasOwnProperty(a))return 0;rd.u&&Ea(rd.u);rd.u=D($a(Z[a]),"i8",0);return rd.u}fc();P=Array(4096);Yb(L,"/");S("/tmp");S("/home");S("/home/web_user");
(function(){S("/dev");zb(259,{read:function(){return 0},write:function(a,b,f,g){return g}});$b("/dev/null",259);yb(1280,Bb);yb(1536,Cb);$b("/dev/tty",1280);$b("/dev/tty1",1536);var a;if("undefined"!==typeof crypto){var b=new Uint8Array(1);a=function(){crypto.getRandomValues(b);return b[0]}}else a=da?function(){return __webpack_require__(/*! crypto */ "./node_modules/crypto-browserify/index.js").randomBytes(1)[0]}:function(){return 256*Math.random()|0};ic("random",a);ic("urandom",a);S("/dev/shm");S("/dev/shm/tmp")})();S("/proc");S("/proc/self");S("/proc/self/fd");
Yb({B:function(){var a=Eb("/proc/self","fd",16895,73);a.k={lookup:function(a,c){var d=O[+c];if(!d)throw new K(J.S);var f={parent:null,B:{Oa:"fake"},k:{readlink:function(){return d.path}}};return f.parent=f}};return a}},"/proc/self/fd");
Va.unshift(function(){if(!e.noFSInit&&!gc){assert(!gc,"FS.init was previously called. If you want to initialize later with custom parameters, remove any earlier calls (note that one is automatically added to the generated code)");gc=!0;fc();e.stdin=e.stdin;e.stdout=e.stdout;e.stderr=e.stderr;e.stdin?ic("stdin",e.stdin):ac("/dev/tty","/dev/stdin");e.stdout?ic("stdout",null,e.stdout):ac("/dev/tty","/dev/stdout");e.stderr?ic("stderr",null,e.stderr):ac("/dev/tty1","/dev/stderr");var a=bc("/dev/stdin",
"r");assert(0===a.fd,"invalid handle for stdin ("+a.fd+")");a=bc("/dev/stdout","w");assert(1===a.fd,"invalid handle for stdout ("+a.fd+")");a=bc("/dev/stderr","w");assert(2===a.fd,"invalid handle for stderr ("+a.fd+")")}});Wa.push(function(){Mb=!1});I.push(function(){gc=!1;var a=e._fflush;a&&a(0);for(a=0;a<O.length;a++){var b=O[a];b&&dc(b)}});Va.unshift(function(){});I.push(function(){});if(da){var fs=__webpack_require__(!(function webpackMissingModule() { var e = new Error("Cannot find module \"fs\""); e.code = 'MODULE_NOT_FOUND'; throw e; }())),Hb=__webpack_require__(/*! path */ "./node_modules/path-browserify/index.js");N.nb()}Dc(Z);e.requestFullScreen=function(a,b,c){id(a,b,c)};
e.requestAnimationFrame=function(a){Lc(a)};e.setCanvasSize=function(a,b,c){ld(e.canvas,a,b);c||qd()};e.pauseMainLoop=function(){Ic=null;Oc++};e.resumeMainLoop=function(){Oc++;var a=Fc,b=Gc,c=Hc;Hc=null;Mc(c,0,!1,Nc,!0);Ec(a,b);Ic()};e.getUserMedia=function(){window.u||(window.u=navigator.getUserMedia||navigator.mozGetUserMedia);window.u(void 0)};e.createContext=function(a,b,c,d){return ed(a,b,c,d)};La=m=n.na(la);Ma=La+Sa;Na=p=n.na(Ma);assert(Na<w,"TOTAL_MEMORY not big enough for stack");
var sd=D([8,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,7,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,6,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,5,0,1,0,2,0,1,0,3,0,1,0,2,0,1,0,4,0,1,0,2,0,
1,0,3,0,1,0,2,0,1,0],"i8",3);e.Sa={Math:Math,Int8Array:Int8Array,Int16Array:Int16Array,Int32Array:Int32Array,Uint8Array:Uint8Array,Uint16Array:Uint16Array,Uint32Array:Uint32Array,Float32Array:Float32Array,Float64Array:Float64Array,NaN:NaN,Infinity:Infinity,byteLength:Qa};
e.Ta={abort:y,assert:assert,invoke_viiiii:function(a,b,c,d,f,g){try{e.dynCall_viiiii(a,b,c,d,f,g)}catch(k){if("number"!==typeof k&&"longjmp"!==k)throw k;Y.setThrew(1,0)}},invoke_vi:function(a,b){try{e.dynCall_vi(a,b)}catch(c){if("number"!==typeof c&&"longjmp"!==c)throw c;Y.setThrew(1,0)}},invoke_iiidd:function(a,b,c,d,f){try{return e.dynCall_iiidd(a,b,c,d,f)}catch(g){if("number"!==typeof g&&"longjmp"!==g)throw g;Y.setThrew(1,0)}},invoke_vii:function(a,b,c){try{e.dynCall_vii(a,b,c)}catch(d){if("number"!==
typeof d&&"longjmp"!==d)throw d;Y.setThrew(1,0)}},invoke_iiiiiiiiiii:function(a,b,c,d,f,g,k,h,v,q,r){try{return e.dynCall_iiiiiiiiiii(a,b,c,d,f,g,k,h,v,q,r)}catch(t){if("number"!==typeof t&&"longjmp"!==t)throw t;Y.setThrew(1,0)}},invoke_ii:function(a,b){try{return e.dynCall_ii(a,b)}catch(c){if("number"!==typeof c&&"longjmp"!==c)throw c;Y.setThrew(1,0)}},invoke_iiiiii:function(a,b,c,d,f,g){try{return e.dynCall_iiiiii(a,b,c,d,f,g)}catch(k){if("number"!==typeof k&&"longjmp"!==k)throw k;Y.setThrew(1,
0)}},invoke_iiii:function(a,b,c,d){try{return e.dynCall_iiii(a,b,c,d)}catch(f){if("number"!==typeof f&&"longjmp"!==f)throw f;Y.setThrew(1,0)}},invoke_viiiiii:function(a,b,c,d,f,g,k){try{e.dynCall_viiiiii(a,b,c,d,f,g,k)}catch(h){if("number"!==typeof h&&"longjmp"!==h)throw h;Y.setThrew(1,0)}},invoke_di:function(a,b){try{return e.dynCall_di(a,b)}catch(c){if("number"!==typeof c&&"longjmp"!==c)throw c;Y.setThrew(1,0)}},invoke_iiiiiii:function(a,b,c,d,f,g,k){try{return e.dynCall_iiiiiii(a,b,c,d,f,g,k)}catch(h){if("number"!==
typeof h&&"longjmp"!==h)throw h;Y.setThrew(1,0)}},invoke_dd:function(a,b){try{return e.dynCall_dd(a,b)}catch(c){if("number"!==typeof c&&"longjmp"!==c)throw c;Y.setThrew(1,0)}},invoke_dddd:function(a,b,c,d){try{return e.dynCall_dddd(a,b,c,d)}catch(f){if("number"!==typeof f&&"longjmp"!==f)throw f;Y.setThrew(1,0)}},invoke_viiiiiiiii:function(a,b,c,d,f,g,k,h,v,q){try{e.dynCall_viiiiiiiii(a,b,c,d,f,g,k,h,v,q)}catch(r){if("number"!==typeof r&&"longjmp"!==r)throw r;Y.setThrew(1,0)}},invoke_iii:function(a,
b,c){try{return e.dynCall_iii(a,b,c)}catch(d){if("number"!==typeof d&&"longjmp"!==d)throw d;Y.setThrew(1,0)}},invoke_d:function(a){try{return e.dynCall_d(a)}catch(b){if("number"!==typeof b&&"longjmp"!==b)throw b;Y.setThrew(1,0)}},invoke_i:function(a){try{return e.dynCall_i(a)}catch(b){if("number"!==typeof b&&"longjmp"!==b)throw b;Y.setThrew(1,0)}},invoke_viiiddi:function(a,b,c,d,f,g,k){try{e.dynCall_viiiddi(a,b,c,d,f,g,k)}catch(h){if("number"!==typeof h&&"longjmp"!==h)throw h;Y.setThrew(1,0)}},invoke_iiiii:function(a,
b,c,d,f){try{return e.dynCall_iiiii(a,b,c,d,f)}catch(g){if("number"!==typeof g&&"longjmp"!==g)throw g;Y.setThrew(1,0)}},invoke_viii:function(a,b,c,d){try{e.dynCall_viii(a,b,c,d)}catch(f){if("number"!==typeof f&&"longjmp"!==f)throw f;Y.setThrew(1,0)}},invoke_v:function(a){try{e.dynCall_v(a)}catch(b){if("number"!==typeof b&&"longjmp"!==b)throw b;Y.setThrew(1,0)}},invoke_viid:function(a,b,c,d){try{e.dynCall_viid(a,b,c,d)}catch(f){if("number"!==typeof f&&"longjmp"!==f)throw f;Y.setThrew(1,0)}},invoke_iiiid:function(a,
b,c,d,f){try{return e.dynCall_iiiid(a,b,c,d,f)}catch(g){if("number"!==typeof g&&"longjmp"!==g)throw g;Y.setThrew(1,0)}},invoke_viiii:function(a,b,c,d,f){try{e.dynCall_viiii(a,b,c,d,f)}catch(g){if("number"!==typeof g&&"longjmp"!==g)throw g;Y.setThrew(1,0)}},_pthread_cleanup_pop:function(){assert(rc.level==I.length,"cannot pop if something else added meanwhile!");I.pop();rc.level=I.length},_fabs:Ac,_sin:bb,_exp:hb,_llvm_pow_f64:jb,___syscall265:function(a,b){U=b;return 0},___syscall54:function(a,b){U=
b;try{var c=mc(),d=X();switch(d){case 21505:return c.tty?0:-J.T;case 21506:return c.tty?0:-J.T;case 21519:if(!c.tty)return-J.T;var f=X();return C[f>>2]=0;case 21520:return c.tty?-J.p:-J.T;case 21531:f=X();if(!c.n.ab)throw new K(J.T);return c.n.ab(c,d,f);default:y("bad ioctl syscall "+d)}}catch(g){return"undefined"!==typeof T&&g instanceof K||y(g),-g.A}},_abort:function(){e.abort()},_atan2:gb,_emscripten_set_main_loop_timing:Ec,___syscall20:function(a,b){U=b;return 42},_setenv:function(a,b,c){if(0===
a)return pb(J.p),-1;a=A(a);b=A(b);if(""===a||-1!==a.indexOf("="))return pb(J.p),-1;if(Z.hasOwnProperty(a)&&!c)return 0;Z[a]=b;Dc(Z);return 0},___assert_fail:function(a,b,c,d){x=!0;throw"Assertion failed: "+A(a)+", at: "+[b?A(b):"unknown filename",c,d?A(d):"unknown function"]+" at "+Fa();},_asin:eb,___buildEnvironment:Dc,_longjmp:tc,_cos:ab,_times:function(a){0!==a&&yc(a,0,16);return 0},___setErrNo:pb,_fabsf:mb,_sbrk:wc,___syscall192:function(a,b){U=b;try{var c=X(),d=X(),f=X(),g=X(),k=X(),h=X(),h=
h<<12,v,q=!1;if(-1===k){v=xa(d);if(!v)return-J.Ba;yc(v,0,d);q=!0}else{var r=O[k];if(!r)return-J.S;var t,B=F;if(1===(r.flags&2097155))throw new K(J.R);if(!r.n.ga)throw new K(J.Z);t=r.n.ga(r,B,c,d,h,f,g);v=t.gb;q=t.oa}kc[v]={eb:v,cb:d,oa:q,fd:k,flags:g};return v}catch(H){return"undefined"!==typeof T&&H instanceof K||y(H),-H.A}},___syscall197:function(a,b){U=b;try{var c=mc(),d=X();return lc(c.path,d)}catch(f){return"undefined"!==typeof T&&f instanceof K||y(f),-f.A}},___syscall195:function(a,b){U=b;try{var c=
A(X()),d=X();return lc(c,d)}catch(f){return"undefined"!==typeof T&&f instanceof K||y(f),-f.A}},_sysconf:function(a){switch(a){case 30:return 4096;case 85:return G/4096;case 132:case 133:case 12:case 137:case 138:case 15:case 235:case 16:case 17:case 18:case 19:case 20:case 149:case 13:case 10:case 236:case 153:case 9:case 21:case 22:case 159:case 154:case 14:case 77:case 78:case 139:case 80:case 81:case 82:case 68:case 67:case 164:case 11:case 29:case 47:case 48:case 95:case 52:case 51:case 46:return 200809;
case 79:return 0;case 27:case 246:case 127:case 128:case 23:case 24:case 160:case 161:case 181:case 182:case 242:case 183:case 184:case 243:case 244:case 245:case 165:case 178:case 179:case 49:case 50:case 168:case 169:case 175:case 170:case 171:case 172:case 97:case 76:case 32:case 173:case 35:return-1;case 176:case 177:case 7:case 155:case 8:case 157:case 125:case 126:case 92:case 93:case 129:case 130:case 131:case 94:case 91:return 1;case 74:case 60:case 69:case 70:case 4:return 1024;case 31:case 42:case 72:return 32;
case 87:case 26:case 33:return 2147483647;case 34:case 1:return 47839;case 38:case 36:return 99;case 43:case 37:return 2048;case 0:return 2097152;case 3:return 65536;case 28:return 32768;case 44:return 32767;case 75:return 16384;case 39:return 1E3;case 89:return 700;case 71:return 256;case 40:return 255;case 2:return 100;case 180:return 64;case 25:return 20;case 5:return 16;case 6:return 6;case 73:return 4;case 84:return"object"===typeof navigator?navigator.hardwareConcurrency||1:1}pb(J.p);return-1},
___syscall221:function(a,b){U=b;try{var c=mc();switch(X()){case 0:var d=X();return 0>d?-J.p:bc(c.path,c.flags,0,d).fd;case 1:case 2:return 0;case 3:return c.flags;case 4:return d=X(),c.flags|=d,0;case 12:case 12:return d=X(),ua[d+0>>1]=2,0;case 13:case 14:case 13:case 14:return 0;case 16:case 8:return-J.p;case 9:return pb(J.p),-1;default:return-J.p}}catch(f){return"undefined"!==typeof T&&f instanceof K||y(f),-f.A}},_emscripten_memcpy_big:function(a,b,c){F.set(F.subarray(b,b+c),a);return a},___syscall91:function(a,
b){U=b;try{var c=X(),d=X(),f=kc[c];if(!f)return 0;if(d===f.cb){var g=O[f.fd],k=f.flags,h=new Uint8Array(F.subarray(c,c+d));g&&g.n.ha&&g.n.ha(g,h,0,d,k);kc[c]=null;f.oa&&Ea(f.eb)}return 0}catch(v){return"undefined"!==typeof T&&v instanceof K||y(v),-v.A}},_atanf:fb,_atan:fb,_pthread_self:function(){return 0},_acos:db,_getenv:rd,___syscall33:function(a,b){U=b;try{var c=A(X()),d;var f=X();if(f&-8)d=-J.p;else{var g;g=R(c,{da:!0}).g;c="";f&4&&(c+="r");f&2&&(c+="w");f&1&&(c+="x");d=c&&Rb(g,c)?-J.R:0}return d}catch(k){return"undefined"!==
typeof T&&k instanceof K||y(k),-k.A}},_sqrtf:ib,___unlock:function(){},___syscall140:function(a,b){U=b;try{var c=mc(),d=X(),f=X(),g=X(),k=X();assert(0===d);ec(c,f,k);C[g>>2]=c.position;c.ra&&0===f&&0===k&&(c.ra=null);return 0}catch(h){return"undefined"!==typeof T&&h instanceof K||y(h),-h.A}},_emscripten_set_main_loop:Mc,___syscall10:function(a,b){U=b;try{var c=A(X()),d=R(c,{parent:!0}).g,f=tb(c),g=Gb(d,f),k;a:{var h;try{h=Gb(d,f)}catch(v){k=v.A;break a}var q=Rb(d,"wx");k=q?q:M(h.mode)?J.M:0}if(k)throw k===
J.M&&(k=J.J),new K(k);if(!d.k.unlink)throw new K(J.J);if(g.V)throw new K(J.ka);try{Q.willDeletePath&&Q.willDeletePath(c)}catch(r){console.log("FS.trackingDelegate['willDeletePath']('"+c+"') threw an exception: "+r.message)}d.k.unlink(d,f);var t=Pb(g.parent.id,g.name);if(P[t]===g)P[t]=g.O;else for(var B=P[t];B;){if(B.O===g){B.O=g.O;break}B=B.O}try{if(Q.onDeletePath)Q.onDeletePath(c)}catch(H){console.log("FS.trackingDelegate['onDeletePath']('"+c+"') threw an exception: "+H.message)}return 0}catch(V){return"undefined"!==
typeof T&&V instanceof K||y(V),-V.A}},___syscall5:function(a,b){U=b;try{var c=A(X()),d=X(),f=X();return bc(c,d,f).fd}catch(g){return"undefined"!==typeof T&&g instanceof K||y(g),-g.A}},_tan:cb,__exit:pc,___lock:function(){},___syscall6:function(a,b){U=b;try{var c=mc();dc(c);return 0}catch(d){return"undefined"!==typeof T&&d instanceof K||y(d),-d.A}},_pthread_cleanup_push:rc,___syscall145:function(a,b){U=b;try{var c=mc(),d=X(),f;a:{for(var g=X(),k=0,h=0;h<g;h++){var v=C[d+(8*h+4)>>2],q,r=c,t=C[d+8*h>>
2],B=v,H=void 0,V=z;if(0>B||0>H)throw new K(J.p);if(1===(r.flags&2097155))throw new K(J.S);if(M(r.g.mode))throw new K(J.M);if(!r.n.read)throw new K(J.p);var sa=!0;if("undefined"===typeof H)H=r.position,sa=!1;else if(!r.seekable)throw new K(J.$);var Oa=r.n.read(r,V,t,B,H);sa||(r.position+=Oa);q=Oa;if(0>q){f=-1;break a}k+=q;if(q<v)break}f=k}return f}catch(ea){return"undefined"!==typeof T&&ea instanceof K||y(ea),-ea.A}},_time:function(a){var b=Date.now()/1E3|0;a&&(C[a>>2]=b);return b},_emscripten_longjmp:function(a,
b){tc(a,b)},_ceil:uc,_sqrt:ib,_llvm_trap:function(){y("trap!")},_exit:function(a){pc(a)},_floor:Bc,___syscall146:function(a,b){U=b;try{var c=mc(),d=X(),f;a:{for(var g=X(),k=0,h=0;h<g;h++){var v,q=c,r=C[d+8*h>>2],t=C[d+(8*h+4)>>2],B=z,H=void 0;if(0>t||0>H)throw new K(J.p);if(0===(q.flags&2097155))throw new K(J.S);if(M(q.g.mode))throw new K(J.M);if(!q.n.write)throw new K(J.p);q.flags&1024&&ec(q,0,2);var V=!0;if("undefined"===typeof H)H=q.position,V=!1;else if(!q.seekable)throw new K(J.$);var sa=q.n.write(q,
B,r,t,H,void 0);V||(q.position+=sa);try{if(q.path&&Q.onWriteToFile)Q.onWriteToFile(q.path)}catch(Oa){console.log("FS.trackingDelegate['onWriteToFile']('"+path+"') threw an exception: "+Oa.message)}v=sa;if(0>v){f=-1;break a}k+=v}f=k}return f}catch(ea){return"undefined"!==typeof T&&ea instanceof K||y(ea),-ea.A}},STACKTOP:m,STACK_MAX:Ma,tempDoublePtr:kb,ABORT:x,cttz_i8:sd};// EMSCRIPTEN_START_ASM
var Y=(function(global,env,buffer) {
"use asm";var a=global.Int8Array;var b=global.Int16Array;var c=global.Int32Array;var d=global.Uint8Array;var e=global.Uint16Array;var f=global.Uint32Array;var g=global.Float32Array;var h=global.Float64Array;var i=new a(buffer);var j=new b(buffer);var k=new c(buffer);var l=new d(buffer);var m=new e(buffer);var n=new f(buffer);var o=new g(buffer);var p=new h(buffer);var q=global.byteLength;var r=env.STACKTOP|0;var s=env.STACK_MAX|0;var t=env.tempDoublePtr|0;var u=env.ABORT|0;var v=env.cttz_i8|0;var w=0;var x=0;var y=0;var z=0;var A=global.NaN,B=global.Infinity;var C=0,D=0,E=0,F=0,G=0.0,H=0,I=0,J=0,K=0.0;var L=0;var M=0;var N=0;var O=0;var P=0;var Q=0;var R=0;var S=0;var T=0;var U=0;var V=global.Math.floor;var W=global.Math.abs;var X=global.Math.sqrt;var Y=global.Math.pow;var Z=global.Math.cos;var _=global.Math.sin;var $=global.Math.tan;var aa=global.Math.acos;var ba=global.Math.asin;var ca=global.Math.atan;var da=global.Math.atan2;var ea=global.Math.exp;var fa=global.Math.log;var ga=global.Math.ceil;var ha=global.Math.imul;var ia=global.Math.min;var ja=global.Math.clz32;var ka=env.abort;var la=env.assert;var ma=env.invoke_viiiii;var na=env.invoke_vi;var oa=env.invoke_iiidd;var pa=env.invoke_vii;var qa=env.invoke_iiiiiiiiiii;var ra=env.invoke_ii;var sa=env.invoke_iiiiii;var ta=env.invoke_iiii;var ua=env.invoke_viiiiii;var va=env.invoke_di;var wa=env.invoke_iiiiiii;var xa=env.invoke_dd;var ya=env.invoke_dddd;var za=env.invoke_viiiiiiiii;var Aa=env.invoke_iii;var Ba=env.invoke_d;var Ca=env.invoke_i;var Da=env.invoke_viiiddi;var Ea=env.invoke_iiiii;var Fa=env.invoke_viii;var Ga=env.invoke_v;var Ha=env.invoke_viid;var Ia=env.invoke_iiiid;var Ja=env.invoke_viiii;var Ka=env._pthread_cleanup_pop;var La=env._fabs;var Ma=env._sin;var Na=env._exp;var Oa=env._llvm_pow_f64;var Pa=env.___syscall265;var Qa=env.___syscall54;var Ra=env._abort;var Sa=env._atan2;var Ta=env._emscripten_set_main_loop_timing;var Ua=env.___syscall20;var Va=env._setenv;var Wa=env.___assert_fail;var Xa=env._asin;var Ya=env.___buildEnvironment;var Za=env._longjmp;var _a=env._cos;var $a=env._times;var ab=env.___setErrNo;var bb=env._fabsf;var cb=env._sbrk;var db=env.___syscall192;var eb=env.___syscall197;var fb=env.___syscall195;var gb=env._sysconf;var hb=env.___syscall221;var ib=env._emscripten_memcpy_big;var jb=env.___syscall91;var kb=env._atanf;var lb=env._atan;var mb=env._pthread_self;var nb=env._acos;var ob=env._getenv;var pb=env.___syscall33;var qb=env._sqrtf;var rb=env.___unlock;var sb=env.___syscall140;var tb=env._emscripten_set_main_loop;var ub=env.___syscall10;var vb=env.___syscall5;var wb=env._tan;var xb=env.__exit;var yb=env.___lock;var zb=env.___syscall6;var Ab=env._pthread_cleanup_push;var Bb=env.___syscall145;var Cb=env._time;var Db=env._emscripten_longjmp;var Eb=env._ceil;var Fb=env._sqrt;var Gb=env._llvm_trap;var Hb=env._exit;var Ib=env._floor;var Jb=env.___syscall146;var Kb=0.0;function Lb(newBuffer){if(q(newBuffer)&16777215||q(newBuffer)<=16777215||q(newBuffer)>2147483648)return false;i=new a(newBuffer);j=new b(newBuffer);k=new c(newBuffer);l=new d(newBuffer);m=new e(newBuffer);n=new f(newBuffer);o=new g(newBuffer);p=new h(newBuffer);buffer=newBuffer;return true}
// EMSCRIPTEN_START_FUNCS
function UF(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var l=0,m=0.0,n=0.0,o=0,q=0.0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0.0,D=0,E=0,F=0.0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0;a:do if((g|0)>=1){B=(i|0)==0;z=h;A=g;while(1){w=e+(A*72|0)|0;h=a+(A<<2)|0;if(k[h>>2]|0)break a;k[h>>2]=1;u=e+(A*72|0)+8|0;s=e+(A*72|0)+16|0;n=+p[s>>3];v=e+(A*72|0)+24|0;l=e+(A*72|0)+32|0;m=+p[l>>3];if((n>m?(y=k[w>>2]|0,C=+p[d+(y*56|0)>>3],C==+p[d+(y*56|0)+16>>3]):0)?(y=k[e+(A*72|0)+4>>2]|0,F=+p[d+(y*56|0)>>3],F==+p[d+(y*56|0)+16>>3]):0){h=b+(c<<5)|0;if(B){p[h>>3]=C;q=n;n=F}else{p[h>>3]=m;q=-C;m=-F}p[b+(c<<5)+8>>3]=m;p[b+(c<<5)+16>>3]=n;p[b+(c<<5)+24>>3]=q;c=c+1|0}h=e+(A*72|0)+40|0;x=k[h>>2]|0;do if((x|0)<1?(H=e+(A*72|0)+44|0,(k[H>>2]|0)<1):0){h=e+(A*72|0)+48|0;l=e+(A*72|0)+52|0;if((k[h>>2]|0)>0?(I=k[l>>2]|0,(I|0)>0):0){g=k[e+(I*72|0)>>2]|0;j=k[w>>2]|0;if((I|0)==(z|0)){g=VF(f,j,g)|0;j=1;c=UF(a,b,c,d,e,f,k[l>>2]|0,A,i,1)|0;break}else{g=VF(f,g,j)|0;j=1;c=UF(a,b,c,d,e,f,k[h>>2]|0,A,i,1)|0;h=l;break}}c=UF(a,b,c,d,e,f,x,A,i,2)|0;c=UF(a,b,c,d,e,f,k[H>>2]|0,A,i,2)|0;j=1;g=f;c=UF(a,b,c,d,e,f,k[h>>2]|0,A,i,1)|0;h=l}else N=19;while(0);do if((N|0)==19){N=0;y=e+(A*72|0)+48|0;o=k[y>>2]|0;if((o|0)<1?(J=e+(A*72|0)+52|0,(k[J>>2]|0)<1):0){l=e+(A*72|0)+44|0;if((x|0)>0?(K=k[l>>2]|0,(K|0)>0):0){g=k[e+(A*72|0)+4>>2]|0;j=k[e+(x*72|0)+4>>2]|0;if((K|0)==(z|0)){g=VF(f,j,g)|0;j=2;c=UF(a,b,c,d,e,f,k[l>>2]|0,A,i,2)|0;break}else{g=VF(f,g,j)|0;j=2;c=UF(a,b,c,d,e,f,k[h>>2]|0,A,i,2)|0;h=l;break}}c=UF(a,b,c,d,e,f,x,A,i,2)|0;c=UF(a,b,c,d,e,f,k[l>>2]|0,A,i,2)|0;j=1;g=f;c=UF(a,b,c,d,e,f,k[y>>2]|0,A,i,1)|0;h=J;break}t=e+(A*72|0)+44|0;r=k[t>>2]|0;g=(r|0)>0;if((x|0)>0){if(g){if((o|0)>0?(L=e+(A*72|0)+52|0,M=k[L>>2]|0,(M|0)>0):0){l=k[e+(M*72|0)>>2]|0;g=k[e+(x*72|0)+4>>2]|0;if(!((j|0)==2&(M|0)==(z|0))?!((j|0)==1&(r|0)==(z|0)):0){z=VF(f,l,g)|0;c=UF(a,b,c,d,e,f,k[h>>2]|0,A,i,2)|0;c=UF(a,b,c,d,e,f,k[y>>2]|0,A,i,1)|0;j=1;g=z;c=UF(a,b,c,d,e,z,k[t>>2]|0,A,i,2)|0;h=L;break}z=VF(f,g,l)|0;c=UF(a,b,c,d,e,f,k[t>>2]|0,A,i,2)|0;c=UF(a,b,c,d,e,f,k[L>>2]|0,A,i,1)|0;j=1;g=z;c=UF(a,b,c,d,e,z,k[h>>2]|0,A,i,2)|0;h=y;break}g=k[w>>2]|0;if(+W(+(+p[l>>3]-+p[d+(g*56|0)+24>>3]))<=1.0e-07?+W(+(+p[v>>3]-+p[d+(g*56|0)+16>>3]))<=1.0e-07:0){l=k[e+(x*72|0)+4>>2]|0;g=k[d+(g*56|0)+44>>2]|0;if((j|0)==1&(x|0)==(z|0)){z=VF(f,g,l)|0;c=UF(a,b,c,d,e,f,k[h>>2]|0,A,i,2)|0;c=UF(a,b,c,d,e,z,k[y>>2]|0,A,i,1)|0;j=1;g=z;c=UF(a,b,c,d,e,z,k[t>>2]|0,A,i,2)|0;h=e+(A*72|0)+52|0;break}else{g=VF(f,l,g)|0;c=UF(a,b,c,d,e,f,k[t>>2]|0,A,i,2)|0;c=UF(a,b,c,d,e,f,k[y>>2]|0,A,i,1)|0;j=2;c=UF(a,b,c,d,e,f,k[e+(A*72|0)+52>>2]|0,A,i,1)|0;break}}l=k[e+(A*72|0)+4>>2]|0;g=k[e+(x*72|0)+4>>2]|0;if((j|0)==1&(r|0)==(z|0)){z=VF(f,g,l)|0;c=UF(a,b,c,d,e,f,k[t>>2]|0,A,i,2)|0;c=UF(a,b,c,d,e,z,k[e+(A*72|0)+52>>2]|0,A,i,1)|0;j=2;g=z;c=UF(a,b,c,d,e,z,k[y>>2]|0,A,i,1)|0;break}else{g=VF(f,l,g)|0;c=UF(a,b,c,d,e,f,k[h>>2]|0,A,i,2)|0;c=UF(a,b,c,d,e,f,k[y>>2]|0,A,i,1)|0;j=2;c=UF(a,b,c,d,e,f,k[e+(A*72|0)+52>>2]|0,A,i,1)|0;h=t;break}}}else if(!g)break a;if((o|0)>0?(D=e+(A*72|0)+52|0,E=k[D>>2]|0,(E|0)>0):0){l=k[w>>2]|0;if(+W(+(+p[s>>3]-+p[d+(l*56|0)+8>>3]))<=1.0e-07?+W(+(+p[u>>3]-+p[d+(l*56|0)>>3]))<=1.0e-07:0){g=k[e+(E*72|0)>>2]|0;if((j|0)==2&(o|0)==(z|0)){z=VF(f,g,l)|0;c=UF(a,b,c,d,e,f,k[y>>2]|0,A,i,1)|0;c=UF(a,b,c,d,e,z,k[h>>2]|0,A,i,2)|0;j=1;g=z;c=UF(a,b,c,d,e,z,k[e+(A*72|0)+44>>2]|0,A,i,2)|0;h=D;break}else{g=VF(f,l,g)|0;c=UF(a,b,c,d,e,f,k[e+(A*72|0)+44>>2]|0,A,i,2)|0;c=UF(a,b,c,d,e,f,k[D>>2]|0,A,i,1)|0;j=1;c=UF(a,b,c,d,e,f,k[h>>2]|0,A,i,2)|0;h=y;break}}g=k[e+(E*72|0)>>2]|0;l=k[d+((k[e+(A*72|0)+4>>2]|0)*56|0)+44>>2]|0;if((j|0)==2&(E|0)==(z|0)){z=VF(f,l,g)|0;c=UF(a,b,c,d,e,f,k[D>>2]|0,A,i,1)|0;c=UF(a,b,c,d,e,z,k[e+(A*72|0)+44>>2]|0,A,i,2)|0;j=1;g=z;c=UF(a,b,c,d,e,z,k[h>>2]|0,A,i,2)|0;h=y;break}else{g=VF(f,g,l)|0;c=UF(a,b,c,d,e,f,k[h>>2]|0,A,i,2)|0;c=UF(a,b,c,d,e,f,k[y>>2]|0,A,i,1)|0;j=1;c=UF(a,b,c,d,e,f,k[e+(A*72|0)+44>>2]|0,A,i,2)|0;h=D;break}}m=+p[s>>3];o=k[w>>2]|0;if(((+W(+(m-+p[d+(o*56|0)+8>>3]))<=1.0e-07?+W(+(+p[u>>3]-+p[d+(o*56|0)>>3]))<=1.0e-07:0)?(G=k[e+(A*72|0)+4>>2]|0,+W(+(+p[l>>3]-+p[d+(G*56|0)+8>>3]))<=1.0e-07):0)?+W(+(+p[v>>3]-+p[d+(G*56|0)>>3]))<=1.0e-07:0)if((j|0)==1){z=VF(f,o,G)|0;c=UF(a,b,c,d,e,f,k[h>>2]|0,A,i,2)|0;c=UF(a,b,c,d,e,f,k[e+(A*72|0)+44>>2]|0,A,i,2)|0;j=1;g=z;c=UF(a,b,c,d,e,z,k[e+(A*72|0)+52>>2]|0,A,i,1)|0;h=y;break}else{z=VF(f,G,o)|0;c=UF(a,b,c,d,e,f,k[e+(A*72|0)+52>>2]|0,A,i,1)|0;c=UF(a,b,c,d,e,f,k[y>>2]|0,A,i,1)|0;j=2;g=z;c=UF(a,b,c,d,e,z,k[h>>2]|0,A,i,2)|0;h=e+(A*72|0)+44|0;break}g=k[e+(A*72|0)+4>>2]|0;if(((+W(+(m-+p[d+(g*56|0)+24>>3]))<=1.0e-07?+W(+(+p[u>>3]-+p[d+(g*56|0)+16>>3]))<=1.0e-07:0)?+W(+(+p[l>>3]-+p[d+(o*56|0)+24>>3]))<=1.0e-07:0)?+W(+(+p[v>>3]-+p[d+(o*56|0)+16>>3]))<=1.0e-07:0){l=k[d+(g*56|0)+44>>2]|0;g=k[d+(o*56|0)+44>>2]|0;if((j|0)==1){z=VF(f,g,l)|0;c=UF(a,b,c,d,e,f,k[h>>2]|0,A,i,2)|0;c=UF(a,b,c,d,e,f,k[e+(A*72|0)+44>>2]|0,A,i,2)|0;j=1;g=z;c=UF(a,b,c,d,e,z,k[e+(A*72|0)+52>>2]|0,A,i,1)|0;h=y;break}else{z=VF(f,l,g)|0;c=UF(a,b,c,d,e,f,k[e+(A*72|0)+52>>2]|0,A,i,1)|0;c=UF(a,b,c,d,e,f,k[y>>2]|0,A,i,1)|0;j=2;g=z;c=UF(a,b,c,d,e,z,k[h>>2]|0,A,i,2)|0;h=e+(A*72|0)+44|0;break}}c=UF(a,b,c,d,e,f,x,A,i,2)|0;c=UF(a,b,c,d,e,f,k[y>>2]|0,A,i,1)|0;j=1;g=f;c=UF(a,b,c,d,e,f,k[e+(A*72|0)+44>>2]|0,A,i,2)|0;h=e+(A*72|0)+52|0}while(0);h=k[h>>2]|0;if((h|0)<1)break;else{z=A;f=g;A=h}}}while(0);return c|0}function VF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0.0,g=0.0,h=0,i=0,j=0.0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0;n=(k[22716]|0)+1|0;k[22716]=n;o=k[22713]|0;l=o+(b*56|0)|0;m=o+(c*56|0)|0;f=-4.0;h=0;e=0;while(1){d=k[o+(b*56|0)+16+(h<<2)>>2]|0;if((d|0)>=1?(g=+WF(l,o+(d*56|0)|0,m),g>f):0){f=g;d=h}else d=e;h=h+1|0;if((h|0)==4){i=d;break}else e=d}f=-4.0;h=0;d=0;do{e=k[o+(c*56|0)+16+(h<<2)>>2]|0;if((e|0)>=1?(j=+WF(m,o+(e*56|0)|0,l),j>f):0){f=j;d=h}h=h+1|0}while((h|0)!=4);l=k[o+(b*56|0)+32+(i<<2)>>2]|0;h=k[o+(c*56|0)+32+(d<<2)>>2]|0;p=k[22715]|0;m=p+1|0;p=p+2|0;k[22715]=p;s=k[22712]|0;k[s+(m<<4)>>2]=b;k[s+(p<<4)>>2]=c;q=s+(l<<4)+4|0;r=s+(m<<4)+4|0;k[r>>2]=k[q>>2];k[s+(k[q>>2]<<4)+8>>2]=m;k[s+(m<<4)+8>>2]=p;k[s+(p<<4)+4>>2]=m;e=s+(h<<4)+8|0;k[s+(p<<4)+8>>2]=k[e>>2];k[s+(k[e>>2]<<4)+4>>2]=p;k[q>>2]=h;k[e>>2]=l;e=o+(b*56|0)+48|0;q=k[e>>2]|0;h=o+(c*56|0)+48|0;d=k[h>>2]|0;k[o+(b*56|0)+16+(i<<2)>>2]=c;k[o+(b*56|0)+32+(q<<2)>>2]=m;k[o+(b*56|0)+16+(q<<2)>>2]=k[s+(k[r>>2]<<4)>>2];k[o+(c*56|0)+32+(d<<2)>>2]=p;k[o+(c*56|0)+16+(d<<2)>>2]=b;k[e>>2]=(k[e>>2]|0)+1;k[h>>2]=(k[h>>2]|0)+1;c=k[22714]|0;k[c+(a<<2)>>2]=l;k[c+(n<<2)>>2]=m;return n|0}function WF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,g=0.0,h=0.0;g=+p[a>>3];h=+p[b>>3]-g;d=+p[a+8>>3];f=+p[b+8>>3]-d;g=+p[c>>3]-g;d=+p[c+8>>3]-d;e=h*g+f*d;if(!(h*d-f*g>=0.0))d=-e/+X(+(h*h+f*f))/+X(+(g*g+d*d))+-2.0;else d=e/+X(+(h*h+f*f))/+X(+(g*g+d*d));return +d}function XF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0;d=b+3|0;e=b+1|0;f=b+2|0;g=a+(b*56|0)+44|0;h=a+(b*56|0)+48|0;i=a+(d*56|0)+44|0;j=a+(d*56|0)+48|0;l=b;m=0;while(1){do if((l|0)!=(b|0))if((l|0)==(d|0)){k[i>>2]=b;k[j>>2]=f;break}else{k[a+(l*56|0)+44>>2]=l+1;k[a+(l*56|0)+48>>2]=l+-1;break}else{k[g>>2]=e;k[h>>2]=d}while(0);k[a+(l*56|0)+32>>2]=0;o=a+((k[a+(l*56|0)+48>>2]|0)*56|0)+16|0;p=a+(l*56|0)|0;n=c+(m<<4)|0;k[p>>2]=k[n>>2];k[p+4>>2]=k[n+4>>2];k[p+8>>2]=k[n+8>>2];k[p+12>>2]=k[n+12>>2];HP(o|0,n|0,16)|0;m=m+1|0;if((m|0)==4)break;else l=l+1|0}return b+4|0}function YF(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0.0,h=0,i=0.0,j=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;k[22717]=d<<1;k[22718]=d;s=By(d*80|0)|0;k[22719]=1;k[22720]=1;IP(e|0,0,d*72|0)|0;o=k[c+4>>2]|0;r=ZF()|0;k[s+(r*40|0)>>2]=2;q=s+(r*40|0)+8|0;n=b+(o*56|0)|0;m=b+(o*56|0)+16|0;f=b+(o*56|0)+8|0;g=+p[f>>3];h=b+(o*56|0)+24|0;i=+p[h>>3];do if(!(g>i+1.0e-07)){if(!(+W(+(g-i))<=1.0e-07)){k[q>>2]=k[m>>2];k[q+4>>2]=k[m+4>>2];k[q+8>>2]=k[m+8>>2];k[q+12>>2]=k[m+12>>2];break}if(+p[n>>3]>+p[m>>3]+1.0e-07){k[q>>2]=k[n>>2];k[q+4>>2]=k[n+4>>2];k[q+8>>2]=k[n+8>>2];k[q+12>>2]=k[n+12>>2];break}else{k[q>>2]=k[m>>2];k[q+4>>2]=k[m+4>>2];k[q+8>>2]=k[m+8>>2];k[q+12>>2]=k[m+12>>2];break}}else{k[q>>2]=k[n>>2];k[q+4>>2]=k[n+4>>2];k[q+8>>2]=k[n+8>>2];k[q+12>>2]=k[n+12>>2]}while(0);j=ZF()|0;k[s+(r*40|0)+36>>2]=j;k[s+(j*40|0)>>2]=3;k[s+(j*40|0)+28>>2]=r;l=ZF()|0;k[s+(r*40|0)+32>>2]=l;k[s+(l*40|0)>>2]=2;d=s+(l*40|0)+8|0;i=+p[f>>3];g=+p[h>>3];do if(!(i<g+-1.0e-07)){if(!(+W(+(i-g))<=1.0e-07)){k[d>>2]=k[m>>2];k[d+4>>2]=k[m+4>>2];k[d+8>>2]=k[m+8>>2];k[d+12>>2]=k[m+12>>2];break}if(+p[n>>3]<+p[m>>3]){k[d>>2]=k[n>>2];k[d+4>>2]=k[n+4>>2];k[d+8>>2]=k[n+8>>2];k[d+12>>2]=k[n+12>>2];break}else{k[d>>2]=k[m>>2];k[d+4>>2]=k[m+4>>2];k[d+8>>2]=k[m+8>>2];k[d+12>>2]=k[m+12>>2];break}}else{k[d>>2]=k[n>>2];k[d+4>>2]=k[n+4>>2];k[d+8>>2]=k[n+8>>2];k[d+12>>2]=k[n+12>>2]}while(0);k[s+(l*40|0)+28>>2]=r;f=ZF()|0;k[s+(l*40|0)+32>>2]=f;k[s+(f*40|0)>>2]=3;k[s+(f*40|0)+28>>2]=l;h=ZF()|0;k[s+(l*40|0)+36>>2]=h;k[s+(h*40|0)>>2]=1;k[s+(h*40|0)+4>>2]=o;k[s+(h*40|0)+28>>2]=l;n=ZF()|0;k[s+(h*40|0)+32>>2]=n;k[s+(n*40|0)>>2]=3;k[s+(n*40|0)+28>>2]=h;m=ZF()|0;k[s+(h*40|0)+36>>2]=m;k[s+(m*40|0)>>2]=3;k[s+(m*40|0)+28>>2]=h;h=_F(e)|0;l=_F(e)|0;t=_F(e)|0;u=_F(e)|0;v=e+(h*72|0)+8|0;w=e+(l*72|0)+8|0;x=e+(u*72|0)+24|0;k[x>>2]=k[q>>2];k[x+4>>2]=k[q+4>>2];k[x+8>>2]=k[q+8>>2];k[x+12>>2]=k[q+12>>2];HP(w|0,q|0,16)|0;k[v>>2]=k[w>>2];k[v+4>>2]=k[w+4>>2];k[v+8>>2]=k[w+8>>2];k[v+12>>2]=k[w+12>>2];q=e+(h*72|0)+24|0;v=e+(l*72|0)+24|0;w=e+(t*72|0)+8|0;k[w>>2]=k[d>>2];k[w+4>>2]=k[d+4>>2];k[w+8>>2]=k[d+8>>2];k[w+12>>2]=k[d+12>>2];HP(v|0,d|0,16)|0;k[q>>2]=k[v>>2];k[q+4>>2]=k[v+4>>2];k[q+8>>2]=k[v+8>>2];k[q+12>>2]=k[v+12>>2];p[e+(u*72|0)+16>>3]=1073741824.0;p[e+(u*72|0)+8>>3]=1073741824.0;p[e+(t*72|0)+32>>3]=-1073741824.0;p[e+(t*72|0)+24>>3]=-1073741824.0;k[e+(l*72|0)>>2]=o;k[e+(h*72|0)+4>>2]=o;k[e+(l*72|0)+40>>2]=u;k[e+(h*72|0)+40>>2]=u;k[e+(l*72|0)+48>>2]=t;k[e+(h*72|0)+48>>2]=t;k[e+(t*72|0)+40>>2]=h;k[e+(u*72|0)+48>>2]=h;k[e+(t*72|0)+44>>2]=l;k[e+(u*72|0)+52>>2]=l;k[e+(h*72|0)+56>>2]=n;k[e+(l*72|0)+56>>2]=m;k[e+(t*72|0)+56>>2]=f;k[e+(u*72|0)+56>>2]=j;k[e+(l*72|0)+68>>2]=1;k[e+(h*72|0)+68>>2]=1;k[e+(u*72|0)+68>>2]=1;k[e+(t*72|0)+68>>2]=1;k[s+(j*40|0)+24>>2]=u;k[s+(f*40|0)+24>>2]=t;k[s+(n*40|0)+24>>2]=h;k[s+(m*40|0)+24>>2]=l;k[b+(o*56|0)+32>>2]=1;m=(a|0)<1;l=a+1|0;if(!m){d=1;do{k[b+(d*56|0)+40>>2]=r;k[b+(d*56|0)+36>>2]=r;d=d+1|0}while((d|0)!=(l|0))}i=+(a|0);j=1;d=2;while(1){if(m)f=-1;else{f=0;g=i;while(1){g=+OM(g);if(!(g>=1.0))break;else f=f+1|0}}if((j|0)>(f|0))break;f=j+-1|0;if((j|0)>1){h=0;g=i;do{g=+OM(g);h=h+1|0}while((h|0)!=(f|0))}else g=i;h=~~+ga(+(i/g));while(1){f=0;g=i;do{g=+OM(g);f=f+1|0}while((f|0)!=(j|0));if((h|0)>=(~~+ga(+(i/g))|0))break;$F(k[c+(d<<2)>>2]|0,b,e,s);h=h+1|0;d=d+1|0}if(!m){f=1;do{if(!(k[b+(f*56|0)+32>>2]|0)){w=b+(f*56|0)|0;v=b+(f*56|0)+16|0;x=b+(f*56|0)+36|0;u=e+((aG(w,v,k[x>>2]|0,b,s)|0)*72|0)+56|0;k[x>>2]=k[u>>2];x=b+(f*56|0)+40|0;w=e+((aG(v,w,k[x>>2]|0,b,s)|0)*72|0)+56|0;k[x>>2]=k[w>>2]}f=f+1|0}while((f|0)!=(l|0))}j=j+1|0}if(!m){f=0;g=i;while(1){g=+OM(g);if(!(g>=1.0))break;else f=f+1|0}if((f|0)>0){h=0;g=i;do{g=+OM(g);h=h+1|0}while((h|0)!=(f|0))}else g=i}else g=i;f=~~+ga(+(i/g));if((f|0)<(a|0)){f=d+a-f|0;do{$F(k[c+(d<<2)>>2]|0,b,e,s);d=d+1|0}while((d|0)!=(f|0))}vP(s);return k[22719]|0}function ZF(){var a=0;a=k[22720]|0;if((a|0)<(k[22717]|0)){k[22720]=a+1;return a|0}else{QN(174593,30,1,k[24528]|0)|0;Wa(174497,174499,72,174624)}return 0}function _F(a){a=a|0;var b=0,c=0,d=0;d=r;r=r+16|0;c=d;b=k[22719]|0;if((b|0)<(k[22718]|0)){k[a+(b*72|0)>>2]=-1;k[a+((k[22719]|0)*72|0)+4>>2]=-1;k[a+((k[22719]|0)*72|0)+68>>2]=1;c=k[22719]|0;k[22719]=c+1;r=d;return c|0}else{d=k[24528]|0;k[c>>2]=b;FN(d,174547,c)|0;Wa(174497,174499,88,174585)}return 0}function $F(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0.0,m=0.0,n=0,o=0,q=0,s=0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0.0;R=r;r=r+80|0;O=R+16|0;e=R;v=O;s=b+(a*56|0)|0;u=v+56|0;do{k[v>>2]=k[s>>2];v=v+4|0;s=s+4|0}while((v|0)<(u|0));D=O+16|0;G=O+24|0;l=+p[G>>3];N=O+8|0;m=+p[N>>3];do if(!(l>m+1.0e-07)){if(!(l<m+-1.0e-07)?+p[D>>3]>+p[O>>3]:0){Q=4;break}e=k[O+36>>2]|0;if(!(k[b+((k[b+(a*56|0)+48>>2]|0)*56|0)+32>>2]|0)){i=0;Q=7}else{e=aG(O,D,e,b,d)|0;Q=20}}else Q=4;while(0);if((Q|0)==4){k[e>>2]=k[O>>2];k[e+4>>2]=k[O+4>>2];k[e+8>>2]=k[O+8>>2];k[e+12>>2]=k[O+12>>2];k[O>>2]=k[D>>2];k[O+4>>2]=k[D+4>>2];k[O+8>>2]=k[D+8>>2];k[O+12>>2]=k[D+12>>2];k[D>>2]=k[e>>2];k[D+4>>2]=k[e+4>>2];k[D+8>>2]=k[e+8>>2];k[D+12>>2]=k[e+12>>2];C=O+36|0;P=k[C>>2]|0;Q=O+40|0;e=k[Q>>2]|0;k[C>>2]=e;k[Q>>2]=P;if(!(k[b+((k[b+(a*56|0)+44>>2]|0)*56|0)+32>>2]|0)){i=1;Q=7}else{e=aG(O,D,e,b,d)|0;Q=19}}if((Q|0)==7){g=aG(O,D,e,b,d)|0;h=_F(c)|0;k[c+(h*72|0)+68>>2]=1;v=c+(h*72|0)|0;s=c+(g*72|0)|0;u=v+72|0;do{k[v>>2]=k[s>>2];v=v+4|0;s=s+4|0}while((v|0)<(u|0));t=+p[N>>3];p[c+(h*72|0)+16>>3]=t;p[c+(g*72|0)+32>>3]=t;t=+p[O>>3];p[c+(h*72|0)+8>>3]=t;p[c+(g*72|0)+24>>3]=t;k[c+(g*72|0)+48>>2]=h;k[c+(g*72|0)+52>>2]=0;k[c+(h*72|0)+40>>2]=g;k[c+(h*72|0)+44>>2]=0;e=k[c+(h*72|0)+48>>2]|0;if((e|0)>0){f=c+(e*72|0)+40|0;if((k[f>>2]|0)==(g|0))k[f>>2]=h;e=c+(e*72|0)+44|0;if((k[e>>2]|0)==(g|0))k[e>>2]=h}e=k[c+(h*72|0)+52>>2]|0;if((e|0)>0){f=c+(e*72|0)+40|0;if((k[f>>2]|0)==(g|0))k[f>>2]=h;e=c+(e*72|0)+44|0;if((k[e>>2]|0)==(g|0))k[e>>2]=h}C=ZF()|0;Q=ZF()|0;P=c+(g*72|0)+56|0;B=k[P>>2]|0;k[d+(B*40|0)>>2]=2;A=d+(B*40|0)+8|0;k[A>>2]=k[O>>2];k[A+4>>2]=k[O+4>>2];k[A+8>>2]=k[O+8>>2];k[A+12>>2]=k[O+12>>2];k[d+(B*40|0)+4>>2]=a;k[d+(B*40|0)+32>>2]=Q;k[d+(B*40|0)+36>>2]=C;k[d+(C*40|0)>>2]=3;k[d+(C*40|0)+24>>2]=g;k[d+(C*40|0)+28>>2]=B;k[d+(Q*40|0)>>2]=3;k[d+(Q*40|0)+24>>2]=h;k[d+(Q*40|0)+28>>2]=B;k[P>>2]=C;k[c+(h*72|0)+56>>2]=Q;if(i){e=h;Q=19}else{e=h;Q=20}}if((Q|0)==19)if(!(k[b+((k[b+(a*56|0)+48>>2]|0)*56|0)+32>>2]|0)){f=1;Q=21}else{f=1;Q=32}else if((Q|0)==20)if(!(k[b+((k[b+(a*56|0)+44>>2]|0)*56|0)+32>>2]|0)){f=0;Q=21}else{f=0;Q=32}if((Q|0)==21){j=aG(D,O,k[O+40>>2]|0,b,d)|0;i=_F(c)|0;k[c+(i*72|0)+68>>2]=1;v=c+(i*72|0)|0;s=c+(j*72|0)|0;u=v+72|0;do{k[v>>2]=k[s>>2];v=v+4|0;s=s+4|0}while((v|0)<(u|0));t=+p[G>>3];p[c+(i*72|0)+16>>3]=t;p[c+(j*72|0)+32>>3]=t;t=+p[D>>3];p[c+(i*72|0)+8>>3]=t;p[c+(j*72|0)+24>>3]=t;k[c+(j*72|0)+48>>2]=i;k[c+(j*72|0)+52>>2]=0;k[c+(i*72|0)+40>>2]=j;k[c+(i*72|0)+44>>2]=0;g=k[c+(i*72|0)+48>>2]|0;if((g|0)>0){h=c+(g*72|0)+40|0;if((k[h>>2]|0)==(j|0))k[h>>2]=i;g=c+(g*72|0)+44|0;if((k[g>>2]|0)==(j|0))k[g>>2]=i}g=k[c+(i*72|0)+52>>2]|0;if((g|0)>0){h=c+(g*72|0)+40|0;if((k[h>>2]|0)==(j|0))k[h>>2]=i;g=c+(g*72|0)+44|0;if((k[g>>2]|0)==(j|0))k[g>>2]=i}B=ZF()|0;P=ZF()|0;C=c+(j*72|0)+56|0;A=k[C>>2]|0;k[d+(A*40|0)>>2]=2;z=d+(A*40|0)+8|0;k[z>>2]=k[D>>2];k[z+4>>2]=k[D+4>>2];k[z+8>>2]=k[D+8>>2];k[z+12>>2]=k[D+12>>2];k[d+(A*40|0)+4>>2]=a;k[d+(A*40|0)+32>>2]=P;k[d+(A*40|0)+36>>2]=B;k[d+(B*40|0)>>2]=3;k[d+(B*40|0)+24>>2]=j;k[d+(B*40|0)+28>>2]=A;k[d+(P*40|0)>>2]=3;k[d+(P*40|0)+24>>2]=i;k[d+(P*40|0)+28>>2]=A;k[C>>2]=B;k[c+(i*72|0)+56>>2]=P;P=e;C=j;e=0}else if((Q|0)==32){P=e;C=aG(D,O,k[O+40>>2]|0,b,d)|0;e=1}a:do if((P|0)>0){A=c+(C*72|0)+32|0;B=c+(C*72|0)+24|0;z=(e|0)!=0;y=f?b+(a*56|0)+48|0:b+(a*56|0)+44|0;g=P;f=0;e=0;b:while(1){h=c+(g*72|0)|0;w=c+(g*72|0)+24|0;x=c+(g*72|0)+32|0;l=+p[x>>3];m=+p[A>>3];if(!(l>m+1.0e-07)){if(l<m+-1.0e-07)break a;if(!(+p[w>>3]>=+p[B>>3]))break a}i=c+(g*72|0)+56|0;v=k[i>>2]|0;o=ZF()|0;q=ZF()|0;k[d+(v*40|0)>>2]=1;k[d+(v*40|0)+4>>2]=a;k[d+(v*40|0)+32>>2]=o;k[d+(v*40|0)+36>>2]=q;k[d+(o*40|0)>>2]=3;k[d+(o*40|0)+24>>2]=g;k[d+(o*40|0)+28>>2]=v;k[d+(q*40|0)>>2]=3;n=_F(c)|0;k[d+(q*40|0)+24>>2]=n;j=c+(n*72|0)|0;k[c+(n*72|0)+68>>2]=1;k[d+(q*40|0)+28>>2]=v;f=(g|0)==(P|0)?n:f;if(+W(+(+p[x>>3]-+p[A>>3]))<=1.0e-07?+W(+(+p[w>>3]-+p[B>>3]))<=1.0e-07:0)e=n;v=j;s=h;u=v+72|0;do{k[v>>2]=k[s>>2];v=v+4|0;s=s+4|0}while((v|0)<(u|0));k[i>>2]=o;k[c+(n*72|0)+56>>2]=q;h=c+(g*72|0)+48|0;i=c+(g*72|0)+52|0;o=(k[i>>2]|0)<1;do if((k[h>>2]|0)<1){if(o){Q=43;break b}u=c+(g*72|0)+40|0;o=k[u>>2]|0;do if((o|0)>0?(I=c+(g*72|0)+44|0,J=k[I>>2]|0,(J|0)>0):0){o=c+(g*72|0)+60|0;q=k[o>>2]|0;if((q|0)<=0){k[c+(n*72|0)+40>>2]=J;k[c+(n*72|0)+44>>2]=-1;k[I>>2]=-1;k[c+(J*72|0)+48>>2]=n;break}if((k[c+(g*72|0)+64>>2]|0)==1){k[c+(n*72|0)+40>>2]=J;k[I>>2]=-1;k[c+(n*72|0)+44>>2]=q;k[c+((k[u>>2]|0)*72|0)+48>>2]=g;k[c+(J*72|0)+48>>2]=n;k[c+(q*72|0)+48>>2]=n}else{k[c+(n*72|0)+44>>2]=-1;v=c+(n*72|0)+40|0;k[v>>2]=k[I>>2];s=k[u>>2]|0;k[I>>2]=s;k[u>>2]=q;k[c+(q*72|0)+48>>2]=g;k[c+(s*72|0)+48>>2]=g;k[c+((k[v>>2]|0)*72|0)+48>>2]=n}k[c+(n*72|0)+60>>2]=0;k[o>>2]=0}else Q=80;while(0);do if((Q|0)==80){Q=0;q=c+(o*72|0)+48|0;s=k[q>>2]|0;o=c+(o*72|0)+52|0;if((s|0)>0?(k[o>>2]|0)>0:0){o=k[c+(s*72|0)+4>>2]|0;if((o|0)>0?(bG(o,b,D)|0)==0:0){k[c+(n*72|0)+44>>2]=-1;k[c+(g*72|0)+44>>2]=-1;k[u>>2]=-1;k[c+((k[c+(n*72|0)+40>>2]|0)*72|0)+52>>2]=n;break}k[c+(g*72|0)+44>>2]=-1;k[c+(n*72|0)+44>>2]=-1;k[c+(n*72|0)+40>>2]=-1;k[c+((k[u>>2]|0)*72|0)+48>>2]=g;break}k[q>>2]=g;k[o>>2]=n}while(0);if(+W(+(+p[x>>3]-+p[A>>3]))<=1.0e-07?z&+W(+(+p[w>>3]-+p[B>>3]))<=1.0e-07:0){o=k[y>>2]|0;if((o|0)<=0){Q=92;break b}if(!(bG(o,b,O)|0)){Q=92;break b}k[c+((k[i>>2]|0)*72|0)+40>>2]=g;k[c+(n*72|0)+52>>2]=-1;k[c+(n*72|0)+48>>2]=-1;h=k[i>>2]|0;break}h=k[i>>2]|0;i=c+(h*72|0)+40|0;o=k[i>>2]|0;q=c+(h*72|0)+44|0;do if((o|0)>0?(K=k[q>>2]|0,(K|0)>0):0){s=c+(h*72|0)+60|0;if((o|0)==(g|0)){k[s>>2]=K;k[c+(h*72|0)+64>>2]=1;break}else{k[s>>2]=o;k[c+(h*72|0)+64>>2]=2;break}}while(0);k[i>>2]=g;k[q>>2]=n}else{if(!o){t=+p[x>>3];l=+p[N>>3];m=t-l;if(!(+W(+m)<=1.0e-07)){S=+p[O>>3];l=S+m/(+p[G>>3]-l)*(+p[D>>3]-S);if(!(t<t+-1.0e-07))if(t>t+1.0e-07)u=0;else u=l<+p[w>>3]&1;else u=1}else u=+p[w>>3]>+p[O>>3]&1;s=c+(g*72|0)+40|0;i=k[s>>2]|0;do if((i|0)>0?(L=c+(g*72|0)+44|0,M=k[L>>2]|0,(M|0)>0):0){i=c+(g*72|0)+60|0;o=k[i>>2]|0;if((o|0)<=0){k[c+(n*72|0)+40>>2]=M;k[c+(n*72|0)+44>>2]=-1;k[L>>2]=-1;k[c+(M*72|0)+48>>2]=n;break}if((k[c+(g*72|0)+64>>2]|0)==1){k[c+(n*72|0)+40>>2]=M;k[L>>2]=-1;k[c+(n*72|0)+44>>2]=o;k[c+((k[s>>2]|0)*72|0)+48>>2]=g;k[c+(M*72|0)+48>>2]=n;k[c+(o*72|0)+48>>2]=n}else{k[c+(n*72|0)+44>>2]=-1;v=c+(n*72|0)+40|0;k[v>>2]=k[L>>2];q=k[s>>2]|0;k[L>>2]=q;k[s>>2]=o;k[c+(o*72|0)+48>>2]=g;k[c+(q*72|0)+48>>2]=g;k[c+((k[v>>2]|0)*72|0)+48>>2]=n}k[c+(n*72|0)+60>>2]=0;k[i>>2]=0}else Q=112;while(0);do if((Q|0)==112){Q=0;o=c+(i*72|0)+48|0;q=k[o>>2]|0;i=c+(i*72|0)+52|0;if((q|0)>0?(k[i>>2]|0)>0:0){i=k[c+(q*72|0)+4>>2]|0;if((i|0)>0?(bG(i,b,D)|0)==0:0){k[c+(n*72|0)+44>>2]=-1;k[c+(g*72|0)+44>>2]=-1;k[s>>2]=-1;k[c+((k[c+(n*72|0)+40>>2]|0)*72|0)+52>>2]=n;break}k[c+(g*72|0)+44>>2]=-1;k[c+(n*72|0)+44>>2]=-1;k[c+(n*72|0)+40>>2]=-1;k[c+((k[s>>2]|0)*72|0)+48>>2]=g;break}k[o>>2]=g;k[i>>2]=n}while(0);if(+W(+(+p[x>>3]-+p[A>>3]))<=1.0e-07?z&+W(+(+p[w>>3]-+p[B>>3]))<=1.0e-07:0){i=n;Q=121;break b}h=k[h>>2]|0;k[c+(h*72|0)+40>>2]=g;i=c+(h*72|0)+44|0;if(!u){k[i>>2]=-1;h=c+(g*72|0)+52|0;x=k[h>>2]|0;k[c+(x*72|0)+40>>2]=g;k[c+(x*72|0)+44>>2]=n;k[c+(n*72|0)+48>>2]=x;k[c+(n*72|0)+52>>2]=-1;h=k[h>>2]|0;break}else{k[i>>2]=n;x=c+(g*72|0)+52|0;w=k[x>>2]|0;k[c+(w*72|0)+40>>2]=n;k[c+(w*72|0)+44>>2]=-1;k[x>>2]=-1;break}}u=c+(g*72|0)+40|0;o=k[u>>2]|0;do if((o|0)>0?(E=c+(g*72|0)+44|0,F=k[E>>2]|0,(F|0)>0):0){o=c+(g*72|0)+60|0;q=k[o>>2]|0;if((q|0)<=0){k[c+(n*72|0)+40>>2]=F;k[c+(n*72|0)+44>>2]=-1;k[E>>2]=-1;k[c+(F*72|0)+48>>2]=n;break}if((k[c+(g*72|0)+64>>2]|0)==1){k[c+(n*72|0)+40>>2]=F;k[E>>2]=-1;k[c+(n*72|0)+44>>2]=q;k[c+((k[u>>2]|0)*72|0)+48>>2]=g;k[c+(F*72|0)+48>>2]=n;k[c+(q*72|0)+48>>2]=n}else{k[c+(n*72|0)+44>>2]=-1;v=c+(n*72|0)+40|0;k[v>>2]=k[E>>2];s=k[u>>2]|0;k[E>>2]=s;k[u>>2]=q;k[c+(q*72|0)+48>>2]=g;k[c+(s*72|0)+48>>2]=g;k[c+((k[v>>2]|0)*72|0)+48>>2]=n}k[c+(n*72|0)+60>>2]=0;k[o>>2]=0}else Q=53;while(0);do if((Q|0)==53){Q=0;q=c+(o*72|0)+48|0;s=k[q>>2]|0;o=c+(o*72|0)+52|0;if((s|0)>0?(k[o>>2]|0)>0:0){o=k[c+(s*72|0)+4>>2]|0;if((o|0)>0?(bG(o,b,D)|0)==0:0){k[c+(n*72|0)+44>>2]=-1;k[c+(g*72|0)+44>>2]=-1;k[u>>2]=-1;k[c+((k[c+(n*72|0)+40>>2]|0)*72|0)+52>>2]=n;break}k[c+(g*72|0)+44>>2]=-1;k[c+(n*72|0)+44>>2]=-1;k[c+(n*72|0)+40>>2]=-1;k[c+((k[u>>2]|0)*72|0)+48>>2]=g;break}k[q>>2]=g;k[o>>2]=n}while(0);if(+W(+(+p[x>>3]-+p[A>>3]))<=1.0e-07?z&+W(+(+p[w>>3]-+p[B>>3]))<=1.0e-07:0){o=k[y>>2]|0;if((o|0)<=0){Q=65;break b}if(!(bG(o,b,O)|0)){Q=65;break b}k[c+((k[h>>2]|0)*72|0)+40>>2]=g;k[c+(n*72|0)+52>>2]=-1;k[c+(n*72|0)+48>>2]=-1;h=k[h>>2]|0;break}h=k[h>>2]|0;i=c+(h*72|0)+40|0;o=k[i>>2]|0;q=c+(h*72|0)+44|0;do if((o|0)>0?(H=k[q>>2]|0,(H|0)>0):0){s=c+(h*72|0)+60|0;if((o|0)==(g|0)){k[s>>2]=H;k[c+(h*72|0)+64>>2]=1;break}else{k[s>>2]=o;k[c+(h*72|0)+64>>2]=2;break}}while(0);k[i>>2]=g;k[q>>2]=n}while(0);k[j>>2]=a;k[c+(g*72|0)+4>>2]=a;if((h|0)>0)g=h;else break a}if((Q|0)==43){QN(174527,19,1,k[24528]|0)|0;break}else if((Q|0)==65){k[c+((k[c+(n*72|0)+48>>2]|0)*72|0)+44>>2]=n;k[i>>2]=-1;k[h>>2]=-1;h=j}else if((Q|0)==92){k[c+((k[c+(n*72|0)+52>>2]|0)*72|0)+44>>2]=n;k[i>>2]=-1;k[h>>2]=-1;h=j}else if((Q|0)==121){h=k[h>>2]|0;k[c+(h*72|0)+40>>2]=g;k[c+(h*72|0)+44>>2]=-1;h=c+(g*72|0)+52|0;Q=k[h>>2]|0;k[c+(Q*72|0)+40>>2]=i;k[c+(Q*72|0)+44>>2]=-1;k[c+(i*72|0)+48>>2]=Q;k[c+(i*72|0)+52>>2]=-1;k[h>>2]=-1;h=j}k[h>>2]=a;k[c+(g*72|0)+4>>2]=a}else{f=0;e=0}while(0);cG(a,P,C,1,c,d);cG(a,f,e,2,c,d);k[b+(a*56|0)+32>>2]=1;r=R;return}function aG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0.0,g=0,h=0.0,i=0.0,j=0.0,l=0,m=0,n=0.0,o=0.0,q=0.0,r=0;l=a+8|0;m=b+8|0;a:while(1){b:do switch(k[e+(c*40|0)>>2]|0){case 3:{r=3;break a}case 2:{f=+p[l>>3];g=e+(c*40|0)+8|0;h=+p[e+(c*40|0)+16>>3];i=h+1.0e-07;do if(!(f>i)){j=h+-1.0e-07;if(!(f<j)?+p[a>>3]>+p[g>>3]:0)break;if(+W(+(f-h))<=1.0e-07?(n=+p[g>>3],+W(+(+p[a>>3]-n))<=1.0e-07):0){f=+p[m>>3];do if(!(f>i)){if(!(f<j)?+p[b>>3]>n:0)break;c=e+(c*40|0)+32|0;break b}while(0);c=e+(c*40|0)+36|0;break b}c=e+(c*40|0)+32|0;break b}while(0);c=e+(c*40|0)+36|0;break}case 1:{f=+p[l>>3];g=k[e+(c*40|0)+4>>2]|0;if(+W(+(f-+p[d+(g*56|0)+8>>3]))<=1.0e-07?(o=+p[a>>3],+W(+(o-+p[d+(g*56|0)>>3]))<=1.0e-07):0)h=o;else r=19;do if((r|0)==19){r=0;if(+W(+(f-+p[d+(g*56|0)+24>>3]))<=1.0e-07?(q=+p[a>>3],+W(+(q-+p[d+(g*56|0)+16>>3]))<=1.0e-07):0){h=q;break}if(!(bG(g,d,a)|0)){c=e+(c*40|0)+36|0;break b}else{c=e+(c*40|0)+32|0;break b}}while(0);if(!(+W(+(f-+p[m>>3]))<=1.0e-07))if(!(bG(g,d,b)|0)){c=e+(c*40|0)+36|0;break b}else{c=e+(c*40|0)+32|0;break b}else if(+p[b>>3]<h){c=e+(c*40|0)+32|0;break b}else{c=e+(c*40|0)+36|0;break b}}default:{r=31;break a}}while(0);c=k[c>>2]|0}if((r|0)==3)return k[e+(c*40|0)+24>>2]|0;else if((r|0)==31){QN(174461,35,1,k[24528]|0)|0;Wa(174497,174499,349,174511)}return 0}function bG(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,g=0,h=0.0,i=0,j=0,k=0.0,l=0.0;j=b+(a*56|0)+16|0;k=+p[b+(a*56|0)+24>>3];g=b+(a*56|0)|0;h=+p[b+(a*56|0)+8>>3];do if(!(k>h+1.0e-07)){if(!(k<h+-1.0e-07)?+p[j>>3]>+p[g>>3]:0){i=4;break}f=+p[c+8>>3];if(+W(+(k-f))<=1.0e-07){d=+p[c>>3]<+p[j>>3]?1.0:-1.0;break}a=!(+W(+(h-f))<=1.0e-07);e=+p[g>>3];d=+p[c>>3];if(a){l=+p[j>>3];d=(f-k)*(e-l)-(h-k)*(d-l);break}else{d=d<e?1.0:-1.0;break}}else i=4;while(0);do if((i|0)==4){f=+p[c+8>>3];if(+W(+(k-f))<=1.0e-07){d=+p[c>>3]<+p[j>>3]?1.0:-1.0;break}i=!(+W(+(h-f))<=1.0e-07);e=+p[g>>3];d=+p[c>>3];if(i){d=(f-h)*(+p[j>>3]-e)-(k-h)*(d-e);break}else{d=d<e?1.0:-1.0;break}}while(0);return d>0.0|0}function cG(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0.0,h=0.0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0;a:do if((b|0)>0){v=e+(c*72|0)+32|0;u=(d|0)==1;t=e+(c*72|0)+24|0;b:while(1){m=e+(b*72|0)+24|0;n=e+(b*72|0)+32|0;o=e+(b*72|0)+48|0;q=e+(b*72|0)+52|0;r=e+(b*72|0)|0;s=e+(b*72|0)+4|0;l=e+(b*72|0)+56|0;while(1){g=+p[n>>3];h=+p[v>>3];if(!(g>h+1.0e-07)){if(g<h+-1.0e-07)break a;if(!(+p[m>>3]>=+p[t>>3]))break a}d=k[o>>2]|0;c=(d|0)>0;do if(u){if(c?(k[e+(d*72|0)+4>>2]|0)==(a|0):0)break;d=k[q>>2]|0;if((d|0)<=0)break a;if((k[e+(d*72|0)+4>>2]|0)!=(a|0)){b=d;continue b}}else{if(c?(k[e+(d*72|0)>>2]|0)==(a|0):0)break;d=k[q>>2]|0;if((d|0)<=0)break a;if((k[e+(d*72|0)>>2]|0)!=(a|0)){b=d;continue b}}while(0);if((k[r>>2]|0)!=(k[e+(d*72|0)>>2]|0)){b=d;continue b}if((k[s>>2]|0)!=(k[e+(d*72|0)+4>>2]|0)){b=d;continue b}w=k[e+(d*72|0)+56>>2]|0;c=k[f+(w*40|0)+28>>2]|0;i=f+(c*40|0)+32|0;j=k[l>>2]|0;if((k[i>>2]|0)==(w|0))k[i>>2]=j;else k[f+(c*40|0)+36>>2]=j;c=k[e+(d*72|0)+48>>2]|0;k[o>>2]=c;do if((c|0)>0){i=e+(c*72|0)+40|0;if((k[i>>2]|0)==(d|0)){k[i>>2]=b;break}c=e+(c*72|0)+44|0;if((k[c>>2]|0)==(d|0))k[c>>2]=b}while(0);c=k[e+(d*72|0)+52>>2]|0;k[q>>2]=c;do if((c|0)>0){i=e+(c*72|0)+40|0;if((k[i>>2]|0)==(d|0)){k[i>>2]=b;break}c=e+(c*72|0)+44|0;if((k[c>>2]|0)==(d|0))k[c>>2]=b}while(0);w=e+(d*72|0)+24|0;k[m>>2]=k[w>>2];k[m+4>>2]=k[w+4>>2];k[m+8>>2]=k[w+8>>2];k[m+12>>2]=k[w+12>>2];k[e+(d*72|0)+68>>2]=2}}}while(0);return}function dG(a){a=a|0;var b=0;do{b=a;a=k[a>>2]|0;vP(b)}while((a|0)!=0);return}function eG(){var a=0,b=0,c=0;a=By(1992)|0;if(a){b=kG(a)|0;k[b+4>>2]=0;c=a+1972|0;k[c>>2]=(k[c>>2]|0)+1;k[a>>2]=b}return a|0}function fG(a){a=a|0;iG(a,k[a>>2]|0);vP(k[a>>2]|0);vP(a);return 0}function gG(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;if(!b)Wa(174982,174632,194,174640);d=k[b+4>>2]|0;if((d|0)<=-1)Wa(174652,174632,195,174640);if(!c)Wa(174924,174632,196,174640);h=a+1952|0;k[h>>2]=(k[h>>2]|0)+1;if((d|0)>0){h=0;g=0;while(1){d=b+8+(h*20|0)+16|0;if((k[d>>2]|0)!=0?(uG(c,b+8+(h*20|0)|0)|0)!=0:0){d=gG(a,k[d>>2]|0,c)|0;if(g){e=g;while(1){f=k[e>>2]|0;if(!f)break;else e=f}k[e>>2]=d;d=g}}else d=g;h=h+1|0;if((h|0)==64)break;else g=d}}else{f=0;d=0;do{e=b+8+(f*20|0)|0;if((k[b+8+(f*20|0)+16>>2]|0)!=0?(uG(c,e)|0)!=0:0){a=By(8)|0;k[a+4>>2]=e;k[a>>2]=d;d=a}f=f+1|0}while((f|0)!=64)}return d|0}function hG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0;p=r;r=r+64|0;n=p+52|0;m=p+32|0;g=p+16|0;h=p;k[n>>2]=0;if(!((b|0)!=0&(d|0)!=0))Wa(174838,174632,247,174666);if((e|0)>-1?(j=k[d>>2]|0,(k[j+4>>2]|0)>=(e|0)):0){if((k[b>>2]|0)<=(k[b+8>>2]|0)?(k[b+4>>2]|0)<=(k[b+12>>2]|0):0){i=a+1912|0;f=a+1908|0;l=(k[f>>2]|0)==0;do if(!(k[i>>2]|0)){if(l)o=13}else if(l){o=a+1916|0;k[o>>2]=(k[o>>2]|0)+1;o=13;break}else{l=a+1924|0;k[l>>2]=(k[l>>2]|0)+1;break}while(0);if((o|0)==13){o=a+1964|0;k[o>>2]=(k[o>>2]|0)+1}if(!(jG(a,b,c,j,n,e)|0))f=0;else{do if(k[i>>2]|0)if(!(k[f>>2]|0)){o=a+1944|0;k[o>>2]=(k[o>>2]|0)+1;break}else{o=a+1948|0;k[o>>2]=(k[o>>2]|0)+1;break}while(0);f=kG(a)|0;o=a+1976|0;k[o>>2]=(k[o>>2]|0)+1;o=k[d>>2]|0;k[f+4>>2]=(k[o+4>>2]|0)+1;mG(g,o);k[m>>2]=k[g>>2];k[m+4>>2]=k[g+4>>2];k[m+8>>2]=k[g+8>>2];k[m+12>>2]=k[g+12>>2];o=m+16|0;k[o>>2]=k[d>>2];oG(a,m,f,0)|0;mG(h,k[n>>2]|0);k[m>>2]=k[h>>2];k[m+4>>2]=k[h+4>>2];k[m+8>>2]=k[h+8>>2];k[m+12>>2]=k[h+12>>2];k[o>>2]=k[n>>2];oG(a,m,f,0)|0;k[d>>2]=f;f=a+1980|0;k[f>>2]=(k[f>>2]|0)+2;f=1}r=p;return f|0}Wa(174713,174632,250,174666)}Wa(174678,174632,248,174666);return 0}function iG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;f=a+1980|0;g=a+1912|0;h=a+1936|0;if((k[b+4>>2]|0)>0){e=0;do{c=b+8+(e*20|0)+16|0;d=k[c>>2]|0;if((d|0)!=0?(iG(a,d),vP(k[c>>2]|0),pG(b,e),k[f>>2]=(k[f>>2]|0)+-1,(k[g>>2]|0)!=0):0)k[h>>2]=(k[h>>2]|0)+1;e=e+1|0}while((e|0)!=64)}else{c=0;do{if((k[b+8+(c*20|0)+16>>2]|0)!=0?(pG(b,c),k[f>>2]=(k[f>>2]|0)+-1,(k[g>>2]|0)!=0):0)k[h>>2]=(k[h>>2]|0)+1;c=c+1|0}while((c|0)!=64)}return}function jG(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0;o=r;r=r+80|0;m=o+52|0;n=o+48|0;i=o+32|0;j=o+16|0;l=o;k[n>>2]=0;if(!((b|0)!=0&(d|0)!=0&(e|0)!=0))Wa(174756,174632,311,174770);if((f|0)>-1?(h=k[d+4>>2]|0,(h|0)>=(f|0)):0){do if(k[a+1912>>2]|0)if(!(k[a+1908>>2]|0)){p=a+1944|0;k[p>>2]=(k[p>>2]|0)+1;break}else{p=a+1948|0;k[p>>2]=(k[p>>2]|0)+1;break}while(0);do if((h|0)>(f|0)){h=nG(b,d)|0;g=d+8+(h*20|0)+16|0;h=d+8+(h*20|0)|0;if(!(jG(a,b,c,k[g>>2]|0,n,f)|0)){tG(i,b,h);k[h>>2]=k[i>>2];k[h+4>>2]=k[i+4>>2];k[h+8>>2]=k[i+8>>2];k[h+12>>2]=k[i+12>>2];g=0;break}else{mG(j,k[g>>2]|0);k[h>>2]=k[j>>2];k[h+4>>2]=k[j+4>>2];k[h+8>>2]=k[j+8>>2];k[h+12>>2]=k[j+12>>2];g=k[n>>2]|0;k[m+16>>2]=g;mG(l,g);k[m>>2]=k[l>>2];k[m+4>>2]=k[l+4>>2];k[m+8>>2]=k[l+8>>2];k[m+12>>2]=k[l+12>>2];g=a+1980|0;k[g>>2]=(k[g>>2]|0)+1;g=oG(a,m,d,e)|0;break}}else if((h|0)==(f|0)){k[m>>2]=k[b>>2];k[m+4>>2]=k[b+4>>2];k[m+8>>2]=k[b+8>>2];k[m+12>>2]=k[b+12>>2];k[m+16>>2]=c;g=a+1980|0;k[g>>2]=(k[g>>2]|0)+1;g=oG(a,m,d,e)|0;break}else Wa(174815,174632,341,174770);while(0);r=o;return g|0}Wa(174783,174632,312,174770);return 0}function kG(a){a=a|0;var b=0;a=a+1968|0;k[a>>2]=(k[a>>2]|0)+1;a=uP(1288)|0;k[a>>2]=0;k[a+4>>2]=-1;b=0;do{qG(a+8+(b*20|0)|0);k[a+8+(b*20|0)+16>>2]=0;b=b+1|0}while((b|0)!=64);return a|0}function lG(a){a=a|0;var b=0;k[a>>2]=0;k[a+4>>2]=-1;b=0;do{qG(a+8+(b*20|0)|0);k[a+8+(b*20|0)+16>>2]=0;b=b+1|0}while((b|0)!=64);return}function mG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;h=r;r=r+32|0;g=h+16|0;e=h;if(!b)Wa(174982,174821,99,174828);qG(g);c=1;f=0;do{do if(k[b+8+(f*20|0)+16>>2]|0){d=b+8+(f*20|0)|0;if(!c){tG(e,g,d);k[g>>2]=k[e>>2];k[g+4>>2]=k[e+4>>2];k[g+8>>2]=k[e+8>>2];k[g+12>>2]=k[e+12>>2];c=0;break}else{k[g>>2]=k[d>>2];k[g+4>>2]=k[d+4>>2];k[g+8>>2]=k[d+8>>2];k[g+12>>2]=k[d+12>>2];c=0;break}}while(0);f=f+1|0}while((f|0)!=64);k[a>>2]=k[g>>2];k[a+4>>2]=k[g+4>>2];k[a+8>>2]=k[g+8>>2];k[a+12>>2]=k[g+12>>2];r=h;return}function nG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0;m=r;r=r+32|0;l=m+16|0;i=m;if(!((a|0)!=0&(b|0)!=0))Wa(174838,174821,125,174845);c=0;g=0;h=0;f=1;j=0;while(1){if(k[b+8+(j*20|0)+16>>2]|0){e=b+8+(j*20|0)|0;d=sG(e)|0;tG(i,a,e);k[l>>2]=k[i>>2];k[l+4>>2]=k[i+4>>2];k[l+8>>2]=k[i+8>>2];k[l+12>>2]=k[i+12>>2];e=(sG(l)|0)-d|0;if((f|0)!=0|(e|0)<(h|0)){c=j;f=0}else{f=(d|0)<(g|0)&(e|0)==(h|0);c=f?j:c;d=f?d:g;e=f?e:h;f=0}}else{d=g;e=h}j=j+1|0;if((j|0)==64)break;else{g=d;h=e}}r=m;return c|0}function oG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;if(!b)Wa(175004,174821,167,174856);if(!c)Wa(174982,174821,168,174856);do if((k[c>>2]|0)<64){d=0;while(1){if(!(k[c+8+(d*20|0)+16>>2]|0)){a=7;break}d=d+1|0;if((d|0)>=64){a=9;break}}if((a|0)==7){e=c+8+(d*20|0)|0;k[e>>2]=k[b>>2];k[e+4>>2]=k[b+4>>2];k[e+8>>2]=k[b+8>>2];k[e+12>>2]=k[b+12>>2];k[e+16>>2]=k[b+16>>2];k[c>>2]=(k[c>>2]|0)+1;e=0;break}else if((a|0)==9)Wa(174866,174821,178,174856)}else{do if(k[a+1912>>2]|0)if(!(k[a+1908>>2]|0)){e=a+1944|0;k[e>>2]=(k[e>>2]|0)+1;break}else{e=a+1948|0;k[e>>2]=(k[e>>2]|0)+1;break}while(0);if(!d)Wa(174879,174821,187,174856);vG(a,c,b,d);if(!(k[c+4>>2]|0)){e=a+1972|0;k[e>>2]=(k[e>>2]|0)+1;e=1;break}else{e=a+1976|0;k[e>>2]=(k[e>>2]|0)+1;e=1;break}}while(0);return e|0}function pG(a,b){a=a|0;b=b|0;var c=0;if(!((a|0)!=0&b>>>0<64))Wa(174883,174821,201,174911);c=a+8+(b*20|0)+16|0;if(!(k[c>>2]|0))Wa(175006,174821,202,174911);else{qG(a+8+(b*20|0)|0);k[c>>2]=0;k[a>>2]=(k[a>>2]|0)+-1;return}}function qG(a){a=a|0;k[a>>2]=0;k[a+4>>2]=0;k[a+8>>2]=0;k[a+12>>2]=0;return}function rG(a){a=a|0;var b=0,c=0;b=r;r=r+16|0;c=b;k[c>>2]=1;k[c+8>>2]=-1;k[c+12>>2]=0;k[c+4>>2]=0;k[a>>2]=k[c>>2];k[a+4>>2]=k[c+4>>2];k[a+8>>2]=k[c+8>>2];k[a+12>>2]=k[c+12>>2];r=b;return}function sG(a){a=a|0;var b=0,c=0;if(!a)Wa(174924,174926,130,174938);b=k[a>>2]|0;c=k[a+8>>2]|0;if((c|0)<(b|0))b=0;else{b=ha(k[a+12>>2]|0,c-b|0)|0;b=b-(k[a+4>>2]|0)|0}return b|0}function tG(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;i=r;r=r+16|0;h=i;if(!((b|0)!=0&(c|0)!=0))Wa(174947,174926,197,174955);d=k[b>>2]|0;e=k[b+8>>2]|0;do if((d|0)<=(e|0)){f=k[c>>2]|0;g=k[c+8>>2]|0;if((f|0)>(g|0)){k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];break}else{k[h>>2]=(d|0)<(f|0)?d:f;k[h+8>>2]=(e|0)>(g|0)?e:g;f=k[b+4>>2]|0;g=k[c+4>>2]|0;k[h+4>>2]=(f|0)<(g|0)?f:g;b=k[b+12>>2]|0;c=k[c+12>>2]|0;k[h+12>>2]=(b|0)>(c|0)?b:c;k[a>>2]=k[h>>2];k[a+4>>2]=k[h+4>>2];k[a+8>>2]=k[h+8>>2];k[a+12>>2]=k[h+12>>2];break}}else{k[a>>2]=k[c>>2];k[a+4>>2]=k[c+4>>2];k[a+8>>2]=k[c+8>>2];k[a+12>>2]=k[c+12>>2]}while(0);r=i;return}function uG(a,b){a=a|0;b=b|0;if(!((a|0)!=0&(b|0)!=0))Wa(174967,174926,218,174974);if(((k[a>>2]|0)<=(k[b+8>>2]|0)?(k[b>>2]|0)<=(k[a+8>>2]|0):0)?(k[a+4>>2]|0)<=(k[b+12>>2]|0):0)return (k[b+4>>2]|0)<=(k[a+12>>2]|0)|0;return 0}function vG(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;F=r;r=r+352|0;n=F+80|0;p=F+64|0;m=F+48|0;w=F+32|0;t=F+16|0;u=F;if(!b)Wa(174982,174984,40,174994);if(!c)Wa(175004,174984,41,174994);A=a+1912|0;do if(k[A>>2]|0)if(!(k[a+1908>>2]|0)){C=a+1928|0;k[C>>2]=(k[C>>2]|0)+1;break}else{C=a+1932|0;k[C>>2]=(k[C>>2]|0)+1;break}while(0);B=b+4|0;C=k[B>>2]|0;e=0;do{if(!(k[b+8+(e*20|0)+16>>2]|0)){E=11;break}y=b+8+(e*20|0)|0;z=a+4+(e*20|0)|0;k[z>>2]=k[y>>2];k[z+4>>2]=k[y+4>>2];k[z+8>>2]=k[y+8>>2];k[z+12>>2]=k[y+12>>2];k[z+16>>2]=k[y+16>>2];e=e+1|0}while((e|0)<64);if((E|0)==11)Wa(175006,174984,111,175025);e=a+4|0;z=a+1284|0;k[z>>2]=k[c>>2];k[z+4>>2]=k[c+4>>2];k[z+8>>2]=k[c+8>>2];k[z+12>>2]=k[c+12>>2];k[z+16>>2]=k[c+16>>2];c=a+1304|0;k[c>>2]=k[e>>2];k[c+4>>2]=k[e+4>>2];k[c+8>>2]=k[e+8>>2];k[c+12>>2]=k[e+12>>2];e=1;do{tG(n,c,a+4+(e*20|0)|0);k[c>>2]=k[n>>2];k[c+4>>2]=k[n+4>>2];k[c+8>>2]=k[n+8>>2];k[c+12>>2]=k[n+12>>2];e=e+1|0}while((e|0)!=65);x=sG(c)|0;z=a+1320|0;k[z>>2]=x;lG(b);x=a+1848|0;k[x>>2]=0;v=a+1844|0;k[v>>2]=0;q=a+1852|0;y=a+1868|0;rG(n);k[y>>2]=k[n>>2];k[y+4>>2]=k[n+4>>2];k[y+8>>2]=k[n+8>>2];k[y+12>>2]=k[n+12>>2];k[q>>2]=k[n>>2];k[q+4>>2]=k[n+4>>2];k[q+8>>2]=k[n+8>>2];k[q+12>>2]=k[n+12>>2];q=a+1888|0;k[q>>2]=0;s=a+1884|0;k[s>>2]=0;c=0;do{k[a+1584+(c<<2)>>2]=0;k[a+1324+(c<<2)>>2]=-1;c=c+1|0}while((c|0)!=65);c=0;do{l=sG(a+4+(c*20|0)|0)|0;k[n+(c<<2)>>2]=l;c=c+1|0}while((c|0)!=65);f=0;e=0;c=0;g=0;do{l=f;f=f+1|0;h=a+4+(l*20|0)|0;i=k[n+(l<<2)>>2]|0;j=f;do{tG(m,h,a+4+(j*20|0)|0);k[p>>2]=k[m>>2];k[p+4>>2]=k[m+4>>2];k[p+8>>2]=k[m+8>>2];k[p+12>>2]=k[m+12>>2];H=(sG(p)|0)-i|0;H=H-(k[n+(j<<2)>>2]|0)|0;G=H>>>0>g>>>0;g=G?H:g;e=G?l:e;c=G?j:c;j=j+1|0}while((j|0)!=65)}while((f|0)!=64);wG(a,e,0);wG(a,c,1);e=k[v>>2]|0;c=k[x>>2]|0;a:do if((c+e|0)<65){j=a+1892|0;l=a+1852|0;f=0;g=0;do{H=65-(k[j>>2]|0)|0;if((e|0)<(H|0)&(c|0)<(H|0)){h=-1;i=0}else break a;while(1){if(!(k[a+1584+(i<<2)>>2]|0)){H=a+4+(i*20|0)|0;tG(t,H,l);k[w>>2]=k[t>>2];k[w+4>>2]=k[t+4>>2];k[w+8>>2]=k[t+8>>2];k[w+12>>2]=k[t+12>>2];c=sG(w)|0;e=k[s>>2]|0;tG(u,H,y);k[w>>2]=k[u>>2];k[w+4>>2]=k[u+4>>2];k[w+8>>2]=k[u+8>>2];k[w+12>>2]=k[u+12>>2];H=sG(w)|0;c=H-(k[q>>2]|0)+(e-c)|0;e=(c|0)>-1?c:0-c|0;c=c>>>31;if((e|0)<=(h|0))if((e|0)==(h|0)){H=(k[a+1844+(c<<2)>>2]|0)<(k[a+1844+(f<<2)>>2]|0);f=H?c:f;c=h;g=H?i:g}else c=h;else{f=c;c=e;g=i}}else c=h;i=i+1|0;if((i|0)==65)break;else h=c}wG(a,g,f);e=k[v>>2]|0;c=k[x>>2]|0}while((c+e|0)<65)}while(0);if((e+c|0)<65){c=(e|0)>=(65-(k[a+1892>>2]|0)|0)&1;e=0;do{if(!(k[a+1584+(e<<2)>>2]|0))wG(a,e,c);e=e+1|0}while((e|0)!=65);e=k[v>>2]|0;c=k[x>>2]|0}if((e+c|0)!=65)Wa(175037,174984,210,175123);H=k[a+1892>>2]|0;if((e|0)<(H|0)|(c|0)<(H|0))Wa(175134,174984,212,175123);c=sG(a+1852|0)|0;c=(sG(y)|0)+c|0;if((k[A>>2]|0)!=0?(c|0)!=0&(k[a+1908>>2]|0)==0:0){H=a+1960|0;o[H>>2]=+((k[z>>2]|0)>>>0)/+(c|0)+ +o[H>>2]}e=kG(a)|0;k[d>>2]=e;k[B>>2]=C;k[e+4>>2]=C;if(!e)Wa(175237,174984,298,175239);else D=0;do{c=k[a+1324+(D<<2)>>2]|0;if(c>>>0>=2){E=47;break}switch(c|0){case 0:{oG(a,a+4+(D*20|0)|0,b,0)|0;break}case 1:{oG(a,a+4+(D*20|0)|0,e,0)|0;break}default:{}}D=D+1|0}while((D|0)<65);if((E|0)==47)Wa(175249,174984,303,175239);if(((k[k[d>>2]>>2]|0)+(k[b>>2]|0)|0)==65){r=F;return}else Wa(175338,174984,86,174994)}function wG(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;h=r;r=r+16|0;g=h;d=a+1584+(b<<2)|0;if(k[d>>2]|0)Wa(175378,174984,257,175413);k[a+1324+(b<<2)>>2]=c;k[d>>2]=1;e=a+1844+(c<<2)|0;f=a+1852+(c<<4)|0;d=a+4+(b*20|0)|0;if(!(k[e>>2]|0)){k[f>>2]=k[d>>2];k[f+4>>2]=k[d+4>>2];k[f+8>>2]=k[d+8>>2];k[f+12>>2]=k[d+12>>2]}else{tG(g,d,f);k[f>>2]=k[g>>2];k[f+4>>2]=k[g+4>>2];k[f+8>>2]=k[g+8>>2];k[f+12>>2]=k[g+12>>2]}g=sG(f)|0;k[a+1884+(c<<2)>>2]=g;k[e>>2]=(k[e>>2]|0)+1;r=h;return}function xG(){var a=0,b=0,c=0,d=0,e=0,f=0,g=0,h=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0;w=r;r=r+1200|0;u=w+800|0;b=w;k[22721]=0;k[22722]=-2;p=0;g=u;a=u;d=200;h=0;f=b;a:while(1){j[a>>1]=h;if((g+(d+-1<<1)|0)>>>0<=a>>>0){e=a-g>>1;a=e+1|0;if(d>>>0>9999){b=g;v=103;break}c=d<<1;c=c>>>0>1e4?1e4:c;b=uP(c*6|3)|0;if(!b){b=g;v=103;break}GP(b|0,g|0,a<<1|0)|0;d=b+((c>>>1&1073741823)<<2)|0;GP(d|0,f|0,a<<2|0)|0;if((g|0)!=(u|0))vP(g);if((c+-1|0)>(e|0)){t=b;a=b+(e<<1)|0;q=c;s=d;b=d+(e<<2)|0}else{a=1;v=105;break}}else{t=g;q=d;s=f}if((h|0)==31){a=0;b=t;v=104;break}o=j[102850+(h<<1)>>1]|0;e=o<<16>>16;do if(o<<16>>16!=-82){c=k[22722]|0;if((c|0)==-2){c=MG()|0;k[22722]=c}if((c|0)>=1)if(c>>>0<296)d=l[175422+c>>0]|0;else d=2;else{k[22722]=0;d=0}c=d+e|0;if(c>>>0<=271?(i[175718+c>>0]|0)==(d|0):0){o=i[175990+c>>0]|0;c=o<<24>>24;if(o<<24>>24<1){c=0-c|0;v=23;break}else{k[22722]=-2;b=b+4|0;k[b>>2]=k[22723];e=(p|0)==0?0:p+-1|0;break}}else v=22}else v=22;while(0);if((v|0)==22){v=0;o=i[176262+h>>0]|0;c=o&255;if(!(o<<24>>24)){c=k[22722]|0;b:do switch(p|0){case 0:{k[22721]=(k[22721]|0)+1;JG(178304);break}case 3:if((c|0)<1)if(!c){a=1;b=t;v=104;break a}else break b;else{k[22722]=-2;break b}default:{}}while(0);if(h)do{if((a|0)==(t|0)){a=1;b=t;v=104;break a}b=b+-4|0;a=a+-2|0}while((j[a>>1]|0)!=0);b=b+4|0;k[b>>2]=k[22723];e=3;c=1}else v=23}do if((v|0)==23){v=0;m=l[176378+c>>0]|0;n=1-m|0;o=b+(n<<2)|0;h=k[o>>2]|0;do switch(c|0){case 4:{b=t;v=26;break a}case 2:{g=k[b+-4>>2]|0;d=By(8)|0;i[d+4>>0]=2;k[d>>2]=g;k[22724]=d;d=h;break}case 3:{g=k[b+-4>>2]|0;d=By(8)|0;i[d+4>>0]=1;k[d>>2]=g;k[22724]=d;d=h;break}case 5:{d=AG()|0;break}case 8:{e=k[22725]|0;f=By(64)|0;g=e+4|0;d=k[g>>2]|0;if(d>>>0>=(k[e+8>>2]|0)>>>0){as(e,1)|0;d=k[g>>2]|0}i[d>>0]=0;d=k[e>>2]|0;k[g>>2]=d;d=tO(d)|0;k[f+8>>2]=d;k[f+12>>2]=k[k[22726]>>2];d=k[22727]|0;Tb[k[d>>2]&63](d,f,1)|0;d=h;break}case 9:{BG(k[b>>2]|0);d=h;break}case 18:{CG(k[b>>2]|0);d=h;break}case 19:{g=k[22726]|0;d=k[g+4>>2]|0;vP(g);k[22726]=d;d=h;break}case 20:{CG(k[b>>2]|0);d=h;break}case 21:{g=k[22726]|0;d=k[g+4>>2]|0;vP(g);k[22726]=d;d=h;break}case 22:{CG(k[b>>2]|0);d=h;break}case 23:{g=k[22726]|0;d=k[g+4>>2]|0;vP(g);k[22726]=d;d=h;break}case 24:{CG(k[b>>2]|0);d=h;break}case 25:{g=k[22726]|0;d=k[g+4>>2]|0;vP(g);k[22726]=d;d=h;break}case 26:{CG(k[b>>2]|0);d=h;break}case 27:{g=k[22726]|0;d=k[g+4>>2]|0;vP(g);k[22726]=d;d=h;break}case 28:{CG(k[b>>2]|0);d=h;break}case 29:{g=k[22726]|0;d=k[g+4>>2]|0;vP(g);k[22726]=d;d=h;break}case 30:{CG(k[b>>2]|0);d=h;break}case 31:{g=k[22726]|0;d=k[g+4>>2]|0;vP(g);k[22726]=d;d=h;break}case 32:{CG(k[b>>2]|0);d=h;break}case 33:{g=k[22726]|0;d=k[g+4>>2]|0;vP(g);k[22726]=d;d=h;break}case 34:{d=k[b+-4>>2]|0;break}case 35:{d=k[b>>2]|0;break}case 38:{d=k[22725]|0;e=k[d+4>>2]|0;if(e>>>0>=(k[d+8>>2]|0)>>>0){as(d,1)|0;e=k[22725]|0;d=e;e=k[e+4>>2]|0}k[d+4>>2]=e+1;i[e>>0]=0;h=k[22725]|0;d=k[h>>2]|0;k[h+4>>2]=d;while(1){e=i[d>>0]|0;if(!(e<<24>>24))break;if(e<<24>>24==32)d=d+1|0;else{b=t;v=55;break a}}k[(k[b>>2]|0)+80>>2]=k[22728];d=Lr(90916,k[12814]|0)|0;k[(k[b>>2]|0)+84>>2]=d;k[22728]=k[b>>2];k[(k[b>>2]|0)+108>>2]=k[k[22726]>>2];d=k[b>>2]|0;break}case 39:{d=k[22725]|0;e=k[d+4>>2]|0;if(e>>>0>=(k[d+8>>2]|0)>>>0){as(d,1)|0;e=k[22725]|0;d=e;e=k[e+4>>2]|0}k[d+4>>2]=e+1;i[e>>0]=0;h=k[22725]|0;d=k[h>>2]|0;k[h+4>>2]=d;while(1){e=i[d>>0]|0;if(!(e<<24>>24))break;if(e<<24>>24==32)d=d+1|0;else{b=t;v=62;break a}}d=k[22728]|0;k[22728]=k[d+80>>2];break}case 40:{d=k[b>>2]|0;break}case 41:{d=k[b+-4>>2]|0;break}case 42:{d=k[b+-4>>2]|0;break}case 43:{d=k[b+-4>>2]|0;break}case 44:{d=k[b+-4>>2]|0;break}case 45:{d=k[b+-4>>2]|0;break}case 48:{d=k[b>>2]|0;break}case 49:{d=k[b>>2]|0;break}case 50:{i[(k[b+-8>>2]|0)+12>>0]=1;d=k[b>>2]|0;break}case 51:{g=Lr(90952,k[12814]|0)|0;d=k[22728]|0;e=By(16)|0;k[e+8>>2]=g;if(i[d+112>>0]&2)i[e+12>>0]=1;d=k[d+84>>2]|0;Tb[k[d>>2]&63](d,e,1)|0;d=h;break}case 52:{d=k[(k[22728]|0)+84>>2]|0;d=Tb[k[d>>2]&63](d,0,256)|0;break}case 53:{d=k[b>>2]|0;break}case 54:{d=k[b>>2]|0;break}case 55:{d=(k[b+-8>>2]|0)+100|0;i[d>>0]=l[d>>0]|1;d=k[b>>2]|0;break}case 56:{DG(k[b+-4>>2]|0,k[b>>2]|0,1);d=h;break}case 57:{d=k[b+-12>>2]|0;break}case 58:{DG(k[b+-4>>2]|0,k[b>>2]|0,2);d=h;break}case 59:{d=k[b+-12>>2]|0;break}case 60:{DG(k[b+-4>>2]|0,k[b>>2]|0,3);d=h;break}case 61:{d=k[b+-12>>2]|0;break}case 62:{d=k[b>>2]|0;DG(d,AG()|0,2);d=h;break}case 63:{d=k[b+-8>>2]|0;break}case 64:{d=k[b+-4>>2]|0;break}case 65:{d=k[b>>2]|0;break}default:d=h}while(0);a=a+(0-m<<1)|0;b=b+(n<<2)|0;k[o>>2]=d;c=(l[176550+c>>0]|0)+-41|0;o=j[a>>1]|0;d=o+(j[103082+(c<<1)>>1]|0)|0;if(d>>>0<272?(i[175718+d>>0]|0)==(o|0):0){e=p;c=i[175990+d>>0]|0;break}e=p;c=i[176620+c>>0]|0}while(0);p=e;g=t;a=a+2|0;d=q;h=c;f=s}if((v|0)==26){zG();a=1;v=104}else if((v|0)==55){JG(176448);zG();a=1;v=104}else if((v|0)==62){JG(176499);zG();a=1;v=104}else if((v|0)==103){JG(176659);a=2;v=104}if((v|0)==104)if((b|0)!=(u|0))v=105;if((v|0)==105)vP(b);r=w;return a|0}function yG(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;e=r;r=r+160|0;d=e+8|0;f=e;k[f>>2]=0;k[f+4>>2]=0;k[22726]=f;k[22728]=0;k[22724]=0;k[22747]=k[(k[(k[c+52>>2]|0)+8>>2]|0)+144>>2];f=Lr(90992,k[12814]|0)|0;k[22727]=f;f=Lr(91028,k[12814]|0)|0;k[22766]=f;$r(d,128,e+24|0);k[22725]=d;if(!(KG(a,d,c)|0)){xG()|0;c=LG()|0;k[b>>2]=c;c=k[22724]|0}else{k[b>>2]=2;c=0}Hr(k[22727]|0)|0;Hr(k[22766]|0)|0;k[22727]=0;k[22766]=0;k[22726]=0;ds(d);r=e;return c|0}function zG(){var a=0,b=0,c=0;a=k[22728]|0;b=k[22724]|0;if(b){ZE(b,1);k[22724]=0}k[22742]=65;if(a)do{b=a;a=k[a+80>>2]|0;Hr(k[b+84>>2]|0)|0;XE(b);vP(b)}while((a|0)!=0);k[22742]=53;k[22752]=66;b=k[22727]|0;Tb[k[b>>2]&63](b,0,64)|0;k[22752]=53;k[22761]=67;b=k[22766]|0;Tb[k[b>>2]&63](b,0,64)|0;k[22761]=53;b=k[22726]|0;a=k[b+4>>2]|0;if(a)while(1){vP(b);b=k[a+4>>2]|0;if(!b)break;else{c=a;a=b;b=c}}return}function AG(){var a=0,b=0,c=0,d=0,e=0,f=0;c=k[22766]|0;d=By(40)|0;if(Nr(k[22727]|0)|0)BG(0);b=Nr(c)|0;j[d+4>>1]=b;if((b|0)!=0?(a=By(b*24|0)|0,k[d>>2]=a,a=Tb[k[c>>2]&63](c,0,128)|0,(a|0)!=0):0){b=0;while(1){e=(k[d>>2]|0)+(b*24|0)|0;f=a+8|0;k[e>>2]=k[f>>2];k[e+4>>2]=k[f+4>>2];k[e+8>>2]=k[f+8>>2];k[e+12>>2]=k[f+12>>2];k[e+16>>2]=k[f+16>>2];k[e+20>>2]=k[f+20>>2];a=Tb[k[c>>2]&63](c,a,8)|0;if(!a){a=c;break}else b=b+1|0}}else a=c;Tb[k[a>>2]&63](c,0,64)|0;return d|0}function BG(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0;f=By(32)|0;g=k[22727]|0;b=Nr(g)|0;h=f+8|0;i[f+14>>0]=a;if(b){j[f+12>>1]=b;b=By(b*56|0)|0;k[h>>2]=b;b=Jr(g)|0;if(b){a=0;while(1){c=(k[h>>2]|0)+(a*56|0)|0;d=b+8|0;e=c+56|0;do{k[c>>2]=k[d>>2];c=c+4|0;d=d+4|0}while((c|0)<(e|0));b=k[b>>2]|0;if(!b)break;else a=a+1|0}}}else{e=By(56)|0;k[h>>2]=e;j[f+12>>1]=1;e=tO(176676)|0;h=k[h>>2]|0;k[h>>2]=e;k[h+4>>2]=k[k[22726]>>2]}Tb[k[g>>2]&63](g,0,64)|0;h=k[22766]|0;Tb[k[h>>2]&63](h,f,1)|0;return}function CG(a){a=a|0;var b=0,c=0.0,d=0,e=0,f=0,g=0,h=0;h=r;r=r+32|0;g=h;f=By(8)|0;e=k[k[22726]>>2]|0;k[g>>2]=k[a>>2];k[g+4>>2]=k[a+4>>2];k[g+8>>2]=k[a+8>>2];k[g+12>>2]=k[a+12>>2];k[g+16>>2]=k[a+16>>2];k[g+20>>2]=k[a+20>>2];k[g+24>>2]=k[a+24>>2];k[g+28>>2]=k[a+28>>2];if(e){a=g+4|0;if((k[a>>2]|0)==0?(b=k[e+4>>2]|0,(b|0)!=0):0)k[a>>2]=b;a=g+16|0;if(+p[a>>3]<0.0?(c=+p[e+16>>3],c>=0.0):0)p[a>>3]=c;if((k[g>>2]|0)==0?(d=k[e>>2]|0,(d|0)!=0):0)k[g>>2]=d;a=k[e+24>>2]&127;if(a){e=g+24|0;d=k[e>>2]|0;k[e>>2]=d&127|a|d&-128}}e=k[(k[22747]|0)+144>>2]|0;g=Tb[k[e>>2]&63](e,g,1)|0;k[f>>2]=g;k[f+4>>2]=k[22726];k[22726]=f;r=h;return}function DG(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;d=By(16)|0;e=k[22728]|0;f=k[e+84>>2]|0;f=(Tb[k[f>>2]&63](f,0,256)|0)+8|0;f=k[f>>2]|0;k[d+8>>2]=a;Tb[k[f>>2]&63](f,d,1)|0;d=a+88|0;i[a+92>>0]=c;if(i[e+112>>0]&1)i[a+100>>0]=1;switch(c|0){case 2:{k[d>>2]=b;break}case 3:{k[d>>2]=b;break}default:k[d>>2]=b}return}function EG(a,b,c){a=a|0;b=b|0;c=c|0;vP(b);return}function FG(a,b,c){a=a|0;b=b|0;c=c|0;Hr(k[b+8>>2]|0)|0;vP(b);return}function GG(a,b,c){a=a|0;b=b|0;c=c|0;a=k[b+8>>2]|0;c=a+88|0;switch(i[a+92>>0]|0){case 1:{c=k[c>>2]|0;Hr(k[c+84>>2]|0)|0;XE(c);vP(c);break}case 2:{YE(k[c>>2]|0);break}default:{}}XE(a);vP(a);vP(b);return}function HG(a,b,c){a=a|0;b=b|0;c=c|0;a=k[b+8>>2]|0;if(a)vP(a);vP(b);return}function IG(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;f=b+12|0;a=j[f>>1]|0;if(a<<16>>16){g=b+8|0;if(a<<16>>16>0){d=0;e=k[g>>2]|0;while(1){c=k[e>>2]|0;if(c){vP(c);a=j[f>>1]|0}d=d+1|0;if((d|0)>=(a<<16>>16|0))break;else e=e+56|0}}vP(k[g>>2]|0)}vP(b);return}function JG(a){a=a|0;var b=0,c=0,d=0;c=r;r=r+16|0;b=c;if(!(i[91101]|0)){i[91101]=1;d=fI(k[22767]|0)|0;k[b>>2]=a;k[b+4>>2]=d;Yr(1,176677,b)|0;NG()}r=c;return}function KG(a,b,c){a=a|0;b=b|0;c=c|0;k[22770]=b;$r(91084,128,0);k[22768]=a;i[91103]=0;i[91100]=0;i[91101]=0;k[22778]=0;k[22779]=0;i[91102]=1;b=c+52|0;a=YH(ny(l[(k[(k[b>>2]|0)+8>>2]|0)+115>>0]|0)|0)|0;k[22767]=a;_H(a,k[(k[(k[b>>2]|0)+8>>2]|0)+144>>2]|0);$H(k[22767]|0,68,28);aI(k[22767]|0,69);return 0}function LG(){var a=0;a=j[45550]|0;ZH(k[22767]|0);ds(91084);return (((a&65535)>>>8|a)&65535)<<24>>24|0}function MG(){var a=0,b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0;n=r;r=r+32|0;m=n+16|0;l=n+8|0;j=n;k[22769]=0;a=0;a:while(1){b:do switch(i[91103]|0){case 2:{a=-1;break a}case 0:{i[91103]=1;f=0;e=6;b=176755;break}default:{g=k[22768]|0;b=i[g>>0]|0;if(!(b<<24>>24)){i[91103]=2;f=a;e=7;b=176762;break b}a=g+1|0;c:do if(b<<24>>24==60){b=i[a>>0]|0;do if(b<<24>>24==33)if(!(wO(g+2|0,176693,2)|0)){e=g+4|0;d=1;a=e;d:while(1){b=(d|0)==0;c=a;e:while(1){if(b)break d;a=c+1|0;switch(i[c>>0]|0){case 0:{c=a;break d}case 60:{h=13;break e}case 62:{h=14;break e}default:c=a}}if((h|0)==13){h=0;d=d+1|0;continue}else if((h|0)==14){h=0;d=d+-1|0;continue}}a=c+-1|0;b=i[a>>0]|0;if(b<<24>>24){c=c+-3|0;if(c>>>0>=e>>>0?(wO(c,176693,2)|0)==0:0){h=21;break}Yr(0,176696,j)|0;i[91100]=1;b=i[a>>0]|0;h=21}}else{b=33;h=19}else h=19;while(0);f:do if((h|0)==19)while(1){switch(b<<24>>24){case 62:case 0:{h=21;break f}default:{}}h=a+1|0;b=i[h>>0]|0;a=h;h=19}while(0);if((h|0)==21){h=0;if(b<<24>>24==62){a=a+1|0;break}}Yr(0,176714,l)|0;i[91100]=1}else{a=g;while(1){switch(b<<24>>24){case 60:case 0:break c;case 38:{c=a+1|0;if((i[c>>0]|0)==35)h=27;else a=MB(c,91084)|0;break}default:h=27}if((h|0)==27){h=0;c=k[22772]|0;if(c>>>0>=(k[22773]|0)>>>0){as(91084,1)|0;c=k[22772]|0}k[22772]=c+1;i[c>>0]=b;a=a+1|0}b=i[a>>0]|0}}while(0);f=a;e=a-g|0;b=g}}while(0);k[22777]=k[22776];k[22779]=k[22778];k[22776]=b;k[22778]=e;a=k[22772]|0;g=k[22771]|0;c=a-g|0;d=k[22767]|0;if((a|0)==(g|0))a=bI(d,b,e,(e|0)==0&1)|0;else{if(a>>>0>=(k[22773]|0)>>>0){as(91084,1)|0;a=k[22772]|0}i[a>>0]=0;a=k[22771]|0;k[22772]=a;a=bI(d,a,c,0)|0}if(!((a|0)!=0|(i[91101]|0)!=0)){e=gI(eI(k[22767]|0)|0)|0;g=fI(k[22767]|0)|0;k[m>>2]=e;k[m+4>>2]=g;Yr(1,176677,m)|0;NG();i[91101]=1;k[22769]=268}if(f)k[22768]=f;a=k[22769]|0;if(!a)a=f;else break}r=n;return a|0}function NG(){var a=0,b=0,c=0,d=0;d=r;r=r+16|0;c=d;a=k[22770]|0;k[a+4>>2]=k[a>>2];b=k[22779]|0;if((b|0)>0){bs(a,k[22777]|0,b)|0;a=k[22770]|0}bs(a,k[22776]|0,k[22778]|0)|0;b=k[22770]|0;a=k[b+4>>2]|0;if(a>>>0>=(k[b+8>>2]|0)>>>0){as(b,1)|0;a=k[22770]|0;b=a;a=k[a+4>>2]|0}k[b+4>>2]=a+1;i[a>>0]=0;a=k[22770]|0;b=k[a>>2]|0;k[a+4>>2]=b;k[c>>2]=b;Yr(3,177899,c)|0;r=d;return}function OG(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;f=r;r=r+48|0;e=f+32|0;d=f;do if(!(mO(b,176770)|0)){e=By(120)|0;k[e+100>>2]=-1;i[e+88>>0]=-1;RG(e,91120,22,c,176865);k[22723]=e;i[91102]=0;k[22769]=286}else{if((mO(b,176776)|0)!=0?(mO(b,176779)|0)!=0:0){if(!(mO(b,176782)|0)){i[91102]=1;e=By(104)|0;j[e+80>>1]=1;j[e+82>>1]=1;RG(e,91296,22,c,176873);k[22723]=e;k[22769]=287;break}if(!(mO(b,176790)|0)){k[d>>2]=0;k[d+4>>2]=0;k[d+8>>2]=0;k[d+12>>2]=0;k[d+16>>2]=0;k[d+20>>2]=0;k[d+24>>2]=0;k[d+28>>2]=0;p[d+16>>3]=-1.0;k[d+24>>2]=0;if(c)RG(d,91472,3,c,176878);e=k[a+144>>2]|0;e=Tb[k[e>>2]&63](e,d,1)|0;k[22723]=e;k[22769]=288;break}if(!(mO(b,176795)|0)){k[d>>2]=0;k[d+4>>2]=0;k[d+8>>2]=0;k[d+12>>2]=0;k[d+16>>2]=0;k[d+20>>2]=0;k[d+24>>2]=0;k[d+28>>2]=0;p[d+16>>3]=-1.0;k[d+24>>2]=1;e=k[a+144>>2]|0;e=Tb[k[e>>2]&63](e,d,1)|0;k[22723]=e;k[22769]=290;break}if(!(mO(b,176811)|0)){k[d>>2]=0;k[d+4>>2]=0;k[d+8>>2]=0;k[d+12>>2]=0;k[d+16>>2]=0;k[d+20>>2]=0;k[d+24>>2]=0;k[d+28>>2]=0;p[d+16>>3]=-1.0;k[d+24>>2]=32;e=k[a+144>>2]|0;e=Tb[k[e>>2]&63](e,d,1)|0;k[22723]=e;k[22769]=295;break}if(!(mO(b,176797)|0)){k[d>>2]=0;k[d+4>>2]=0;k[d+8>>2]=0;k[d+12>>2]=0;k[d+16>>2]=0;k[d+20>>2]=0;k[d+24>>2]=0;k[d+28>>2]=0;p[d+16>>3]=-1.0;k[d+24>>2]=4;e=k[a+144>>2]|0;e=Tb[k[e>>2]&63](e,d,1)|0;k[22723]=e;k[22769]=291;break}if(!(mO(b,176799)|0)){k[d>>2]=0;k[d+4>>2]=0;k[d+8>>2]=0;k[d+12>>2]=0;k[d+16>>2]=0;k[d+20>>2]=0;k[d+24>>2]=0;k[d+28>>2]=0;p[d+16>>3]=-1.0;k[d+24>>2]=64;e=k[a+144>>2]|0;e=Tb[k[e>>2]&63](e,d,1)|0;k[22723]=e;k[22769]=292;break}if(!(mO(b,176801)|0)){k[d>>2]=0;k[d+4>>2]=0;k[d+8>>2]=0;k[d+12>>2]=0;k[d+16>>2]=0;k[d+20>>2]=0;k[d+24>>2]=0;k[d+28>>2]=0;p[d+16>>3]=-1.0;k[d+24>>2]=2;e=k[a+144>>2]|0;e=Tb[k[e>>2]&63](e,d,1)|0;k[22723]=e;k[22769]=289;break}if(!(mO(b,176803)|0)){k[d>>2]=0;k[d+4>>2]=0;k[d+8>>2]=0;k[d+12>>2]=0;k[d+16>>2]=0;k[d+20>>2]=0;k[d+24>>2]=0;k[d+28>>2]=0;p[d+16>>3]=-1.0;k[d+24>>2]=8;e=k[a+144>>2]|0;e=Tb[k[e>>2]&63](e,d,1)|0;k[22723]=e;k[22769]=293;break}if(!(mO(b,176807)|0)){k[d>>2]=0;k[d+4>>2]=0;k[d+8>>2]=0;k[d+12>>2]=0;k[d+16>>2]=0;k[d+20>>2]=0;k[d+24>>2]=0;k[d+28>>2]=0;p[d+16>>3]=-1.0;k[d+24>>2]=16;e=k[a+144>>2]|0;e=Tb[k[e>>2]&63](e,d,1)|0;k[22723]=e;k[22769]=294;break}if(!(mO(b,176813)|0)){k[22723]=0;RG(90892,91496,1,c,176885);k[22769]=283;break}if(!(mO(b,176816)|0)){k[22769]=277;break}if(!(mO(b,176819)|0)){k[22769]=280;break}if(!(mO(b,176822)|0)){e=By(40)|0;RG(e,91504,2,c,176890);k[22723]=e;k[22769]=285;break}if(!(mO(b,176785)|0)){k[22769]=262;break}else{k[22769]=268;i[91101]=1;a=fI(k[22767]|0)|0;k[e>>2]=b;k[e+4>>2]=a;Yr(1,176826,e)|0;break}}i[91102]=0;k[22769]=260}while(0);r=f;return}function PG(a,b){a=a|0;b=b|0;var c=0,d=0;c=r;r=r+16|0;a=c;do if(!(mO(b,176770)|0)){k[22769]=264;i[91102]=1}else{if((mO(b,176776)|0)!=0?(mO(b,176779)|0)!=0:0){if(!(mO(b,176782)|0)){k[22769]=265;i[91102]=0;break}if(!(mO(b,176785)|0)){k[22769]=263;break}if(!(mO(b,176790)|0)){k[22769]=266;break}if(!(mO(b,176795)|0)){k[22769]=270;break}if(!(mO(b,176797)|0)){k[22769]=271;break}if(!(mO(b,176799)|0)){k[22769]=272;break}if(!(mO(b,176801)|0)){k[22769]=269;break}if(!(mO(b,176803)|0)){k[22769]=273;break}if(!(mO(b,176807)|0)){k[22769]=274;break}if(!(mO(b,176811)|0)){k[22769]=275;break}if(!(mO(b,176813)|0))if((k[22769]|0)==283){k[22769]=282;break}else{k[22769]=258;break}if(!(mO(b,176816)|0))if((k[22769]|0)==277){k[22769]=276;break}else{k[22769]=278;break}if(!(mO(b,176819)|0))if((k[22769]|0)==280){k[22769]=279;break}else{k[22769]=281;break}if(mO(b,176822)|0){k[22769]=268;i[91101]=1;d=fI(k[22767]|0)|0;k[a>>2]=b;k[a+4>>2]=d;Yr(1,176826,a)|0;break}if((k[22769]|0)==285){k[22769]=284;break}else{k[22769]=259;break}}k[22769]=261}while(0);r=c;return}function QG(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;if(!((i[91102]|0)==0|(c|0)==0)){f=b;b=0;do{e=i[f>>0]|0;f=f+1|0;if((e&255)>31){d=k[22770]|0;a=k[d+4>>2]|0;if(a>>>0>=(k[d+8>>2]|0)>>>0){as(d,1)|0;a=k[22770]|0;d=a;a=k[a+4>>2]|0}k[d+4>>2]=a+1;i[a>>0]=e;b=b+1|0}c=c+-1|0}while((c|0)!=0);if(b)k[22769]=267}return}function RG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,m=0,n=0;n=r;r=r+16|0;m=n;j=n+8|0;f=k[d>>2]|0;if(f)do{g=k[d+4>>2]|0;d=d+8|0;k[j>>2]=f;h=cO(j,b,c,8,107)|0;if(!h){k[m>>2]=f;k[m+4>>2]=e;Yr(0,177748,m)|0;f=1}else{f=_b[k[h+4>>2]&127](a,g)|0;f=(l[91100]|0|f)&255}i[91100]=f;f=k[d>>2]|0}while((f|0)!=0);r=n;return}function SG(a,b){a=a|0;b=b|0;b=tO(b)|0;k[a+36>>2]=b;return 0}function TG(a,b){a=a|0;b=b|0;b=tO(b)|0;k[a+32>>2]=b;return 0}function UG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;g=r;r=r+16|0;e=g;d=(pM(i[b>>0]|0)|0)<<24>>24;switch(d|0){case 82:{c=b+1|0;if(!(mO(c,176912)|0)){k[a>>2]=114;c=0}else f=5;break}case 76:{f=6;break}default:{c=b+1|0;f=5}}do if((f|0)==5)if(!(mO(c,176917)|0))f=6;else{if((d|0)!=67?(mO(c,176921)|0)==0:0){k[e>>2]=b;Yr(0,176927,e)|0;c=1;break}k[a>>2]=110;c=0}while(0);if((f|0)==6){k[a>>2]=108;c=0}r=g;return c|0}function VG(a,b){a=a|0;b=b|0;k[a+4>>2]=b;return 0}function WG(a,b){a=a|0;b=b|0;k[a>>2]=b;return 0}function XG(a,b){a=a|0;b=b|0;var c=0,d=0;d=r;r=r+16|0;c=d;if(!(YG(b,176987,0,255,c)|0)){p[a+16>>3]=+(k[c>>2]|0);a=0}else a=1;r=d;return a|0}function YG(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0;j=r;r=r+48|0;i=j+24|0;h=j+8|0;g=j;l=j+36|0;f=gO(a,l,10)|0;do if((k[l>>2]|0)!=(a|0)){if((f|0)>(d|0)){k[h>>2]=b;k[h+4>>2]=a;k[h+8>>2]=d;Yr(0,177029,h)|0;f=1;break}if((f|0)<(c|0)){k[i>>2]=b;k[i+4>>2]=a;k[i+8>>2]=c;Yr(0,177068,i)|0;f=1;break}else{k[e>>2]=f;f=0;break}}else{k[g>>2]=b;k[g+4>>2]=a;Yr(0,176998,g)|0;f=1}while(0);r=j;return f|0}function ZG(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=r;r=r+16|0;c=e;switch((pM(i[b>>0]|0)|0)<<24>>24|0){case 76:{if(!(mO(b+1|0,176917)|0)){a=a+36|0;j[a>>1]=m[a>>1]|4;a=0}else d=9;break}case 82:{if(!(mO(b+1|0,176912)|0)){a=a+36|0;j[a>>1]=m[a>>1]|2;a=0}else d=9;break}case 84:{if(!(mO(b+1|0,177700)|0)){a=a+36|0;j[a>>1]=m[a>>1]|6;a=0}else d=9;break}case 67:{if(!(mO(b+1|0,176921)|0))a=0;else d=9;break}default:d=9}if((d|0)==9){k[c>>2]=b;Yr(0,177704,c)|0;a=1}r=e;return a|0}function _G(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=r;r=r+16|0;c=e;switch((pM(i[b>>0]|0)|0)<<24>>24|0){case 76:{if(!(mO(b+1|0,176917)|0)){a=a+36|0;j[a>>1]=m[a>>1]|512;a=0}else d=7;break}case 82:{if(!(mO(b+1|0,176912)|0)){a=a+36|0;j[a>>1]=m[a>>1]|256;a=0}else d=7;break}case 67:{if(!(mO(b+1|0,176921)|0))a=0;else d=7;break}default:d=7}if((d|0)==7){k[c>>2]=b;Yr(0,177655,c)|0;a=1}r=e;return a|0}function $G(a,b){a=a|0;b=b|0;b=tO(b)|0;k[a+20>>2]=b;return 0}function aH(a,b){a=a|0;b=b|0;var c=0,d=0;d=r;r=r+16|0;c=d;if(!(YG(b,177648,0,255,c)|0)){i[a+33>>0]=k[c>>2];a=a+36|0;j[a>>1]=m[a>>1]|0|32;a=0}else a=1;r=d;return a|0}function bH(a,b){a=a|0;b=b|0;var c=0,d=0;d=r;r=r+16|0;c=d;if(!(YG(b,177636,0,255,c)|0)){i[a+34>>0]=k[c>>2];a=a+36|0;j[a>>1]=m[a>>1]|0|64;a=0}else a=1;r=d;return a|0}function cH(a,b){a=a|0;b=b|0;var c=0,d=0;d=r;r=r+16|0;c=d;if(!(YG(b,177624,-128,127,c)|0)){i[a+32>>0]=k[c>>2];a=a+36|0;j[a>>1]=m[a>>1]|0|128;a=0}else a=1;r=d;return a|0}function dH(a,b){a=a|0;b=b|0;b=tO(b)|0;k[a+24>>2]=b;return 0}function eH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=r;r=r+16|0;d=e;c=e+4|0;do if(!(YG(b,177579,0,65535,c)|0)){c=k[c>>2]|0;if(!c){Yr(0,177587,d)|0;c=1;break}else{j[a+80>>1]=c;c=0;break}}else c=1;while(0);r=e;return c|0}function fH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=r;r=r+16|0;c=e;switch((pM(l[b>>0]|0)|0)<<24>>24|0){case 84:{if(!(mO(b+1|0,177528)|0)){a=a+36|0;j[a>>1]=m[a>>1]|0|1;a=0}else d=5;break}case 70:{if(!(mO(b+1|0,177532)|0))a=0;else d=5;break}default:d=5}if((d|0)==5){k[c>>2]=b;Yr(0,177537,c)|0;a=1}r=e;return a|0}function gH(a,b){a=a|0;b=b|0;var c=0,d=0;d=r;r=r+16|0;c=d;if(!(YG(b,177514,0,360,c)|0)){k[a+28>>2]=k[c>>2]&65535;a=0}else a=1;r=d;return a|0}function hH(a,b){a=a|0;b=b|0;var c=0,d=0;d=r;r=r+16|0;c=d;if(!(YG(b,177507,0,65535,c)|0)){j[a+40>>1]=k[c>>2];a=0}else a=1;r=d;return a|0}function iH(a,b){a=a|0;b=b|0;b=tO(b)|0;k[a>>2]=b;return 0}function jH(a,b){a=a|0;b=b|0;b=tO(b)|0;k[a+16>>2]=b;return 0}function kH(a,b){a=a|0;b=b|0;b=tO(b)|0;k[a+4>>2]=b;return 0}function lH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=r;r=r+16|0;d=e;c=e+4|0;do if(!(YG(b,177462,0,65535,c)|0)){c=k[c>>2]|0;if(!c){Yr(0,177470,d)|0;c=1;break}else{j[a+82>>1]=c;c=0;break}}else c=1;while(0);r=e;return c|0}function mH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;g=r;r=r+16|0;e=g;c=i[b>>0]|0;if(c<<24>>24){d=c;c=0;a:do{b:while(1){b=b+1|0;d=d<<24>>24;switch(oM(d)|0){case 108:{f=4;break b}case 116:{f=5;break b}case 114:{f=6;break b}case 98:{f=7;break b}default:{}}k[e>>2]=d;k[e+4>>2]=d;Yr(0,177409,e)|0;d=i[b>>0]|0;if(!(d<<24>>24))break a}if((f|0)==4){f=0;c=c&65535|1024}else if((f|0)==5){f=0;c=c&65535|2048}else if((f|0)==6){f=0;c=c&65535|4096}else if((f|0)==7){f=0;c=c&65535|8192}c=c&65535;d=i[b>>0]|0}while(d<<24>>24!=0);if(c<<16>>16!=15360)f=11}else{c=0;f=11}if((f|0)==11){f=a+36|0;j[f>>1]=j[f>>1]|c}r=g;return 0}function nH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;h=r;r=r+16|0;g=h+8|0;f=h;e=tO(b)|0;c=CO(e,177319)|0;if(!c)b=0;else{d=a+42|0;b=0;do{do if(((pM(i[c>>0]|0)|0)&255|0)==82){a=c+1|0;if(!(mO(a,177322)|0)){j[d>>1]=m[d>>1]|4;break}if(!(mO(a,177329)|0)){j[d>>1]=m[d>>1]|2;break}else{k[f>>2]=c;Yr(0,177335,f)|0;b=1;break}}else{if(!(mO(c,177373)|0)){j[d>>1]=m[d>>1]&65151;break}if((mO(c,177379)|0)!=0?(mO(c,177389)|0)!=0:0){if(!(mO(c,177395)|0)){j[d>>1]=m[d>>1]|128;break}if(!(mO(c,177402)|0)){j[d>>1]=m[d>>1]|256;break}else{k[g>>2]=c;Yr(0,177335,g)|0;b=1;break}}j[d>>1]=m[d>>1]|32}while(0);c=CO(0,177319)|0}while((c|0)!=0)}vP(e);r=h;return b|0}function oH(a,b){a=a|0;b=b|0;b=tO(b)|0;k[a+8>>2]=b;return 0}function pH(a,b){a=a|0;b=b|0;b=tO(b)|0;k[a+12>>2]=b;return 0}function qH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=r;r=r+16|0;c=e;switch((pM(i[b>>0]|0)|0)<<24>>24|0){case 66:{if(!(mO(b+1|0,177265)|0)){a=a+36|0;j[a>>1]=m[a>>1]|16;a=0}else d=7;break}case 84:{if(!(mO(b+1|0,177271)|0)){a=a+36|0;j[a>>1]=m[a>>1]|8;a=0}else d=7;break}case 77:{if(!(mO(b+1|0,177274)|0))a=0;else d=7;break}default:d=7}if((d|0)==7){k[c>>2]=b;Yr(0,177280,c)|0;a=1}r=e;return a|0}function rH(a,b){a=a|0;b=b|0;var c=0,d=0;d=r;r=r+16|0;c=d;if(!(YG(b,177259,0,65535,c)|0)){j[a+38>>1]=k[c>>2];a=0}else a=1;r=d;return a|0}function sH(a,b){a=a|0;b=b|0;return mO(k[a>>2]|0,k[b>>2]|0)|0}function tH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=r;r=r+16|0;c=e;switch((pM(i[b>>0]|0)|0)<<24>>24|0){case 76:{if(!(mO(b+1|0,176917)|0)){a=a+36|0;j[a>>1]=m[a>>1]|4;a=0}else d=7;break}case 82:{if(!(mO(b+1|0,176912)|0)){a=a+36|0;j[a>>1]=m[a>>1]|2;a=0}else d=7;break}case 67:{if(!(mO(b+1|0,176921)|0))a=0;else d=7;break}default:d=7}if((d|0)==7){k[c>>2]=b;Yr(0,176927,c)|0;a=1}r=e;return a|0}function uH(a,b){a=a|0;b=b|0;var c=0,d=0;d=r;r=r+16|0;c=d;if(!(YG(b,177887,0,127,c)|0)){i[a+88>>0]=k[c>>2];a=0}else a=1;r=d;return a|0}function vH(a,b){a=a|0;b=b|0;var c=0,d=0;d=r;r=r+16|0;c=d;if((i[b>>0]|0)==42){a=a+112|0;i[a>>0]=l[a>>0]|1;a=0}else{k[c>>2]=b;Yr(0,177847,c)|0;a=1}r=d;return a|0}function wH(a,b){a=a|0;b=b|0;var c=0,d=0;d=r;r=r+16|0;c=d;if((i[b>>0]|0)==42){a=a+112|0;i[a>>0]=l[a>>0]|2;a=0}else{k[c>>2]=b;Yr(0,177810,c)|0;a=1}r=d;return a|0}function xH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;c=uP(28)|0;if(!c)c=0;else{g=(b|0)>0;if(g){d=0;e=0;do{d=(k[(k[a+(e<<2)>>2]|0)+4>>2]|0)+d|0;e=e+1|0}while((e|0)!=(b|0));e=d<<4;if(!e)e=0;else e=uP(e)|0}else{d=0;e=0}r=c+8|0;k[r>>2]=e;e=(b<<2)+4|0;if(!e)f=0;else f=uP(e)|0;q=c+12|0;k[q>>2]=f;e=d<<2;if(!e){p=c+16|0;k[p>>2]=0;e=0}else{o=uP(e)|0;p=c+16|0;k[p>>2]=o;e=uP(e)|0}o=c+20|0;k[o>>2]=e;k[c+4>>2]=d;k[c>>2]=b;k[f>>2]=0;if(g){m=0;n=0;while(1){j=a+(n<<2)|0;d=k[j>>2]|0;i=k[d+4>>2]|0;l=m+-1+i|0;if((i|0)>0){f=d;h=m;i=0;while(1){g=(k[r>>2]|0)+(h<<4)|0;d=(k[f>>2]|0)+(i<<4)|0;k[g>>2]=k[d>>2];k[g+4>>2]=k[d+4>>2];k[g+8>>2]=k[d+8>>2];k[g+12>>2]=k[d+12>>2];g=h+1|0;d=k[p>>2]|0;k[d+(h<<2)>>2]=g;e=k[o>>2]|0;k[e+(h<<2)>>2]=h+-1;i=i+1|0;f=k[j>>2]|0;if((i|0)>=(k[f+4>>2]|0))break;else h=g}f=k[q>>2]|0}else{d=k[p>>2]|0;g=m}k[d+(l<<2)>>2]=m;k[e+(m<<2)>>2]=l;n=n+1|0;k[f+(n<<2)>>2]=g;if((n|0)==(b|0))break;else m=g}}TH(c)}return c|0}function yH(a){a=a|0;var b=0,c=0;vP(k[a+8>>2]|0);vP(k[a+12>>2]|0);vP(k[a+16>>2]|0);vP(k[a+20>>2]|0);b=a+24|0;c=k[b>>2]|0;if(c){vP(k[c>>2]|0);vP(k[b>>2]|0)}vP(a);return}function zH(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0;p=r;r=r+32|0;m=p+16|0;h=p;k[m>>2]=k[b>>2];k[m+4>>2]=k[b+4>>2];k[m+8>>2]=k[b+8>>2];k[m+12>>2]=k[b+12>>2];n=UH(a,c,m)|0;k[m>>2]=k[d>>2];k[m+4>>2]=k[d+4>>2];k[m+8>>2]=k[d+8>>2];k[m+12>>2]=k[d+12>>2];o=UH(a,e,m)|0;k[h>>2]=k[b>>2];k[h+4>>2]=k[b+4>>2];k[h+8>>2]=k[b+8>>2];k[h+12>>2]=k[b+12>>2];k[m>>2]=k[d>>2];k[m+4>>2]=k[d+4>>2];k[m+8>>2]=k[d+8>>2];k[m+12>>2]=k[d+12>>2];m=MH(h,c,n,m,e,o,a)|0;h=k[a+4>>2]|0;l=h+1|0;c=h;g=1;while(1){c=k[m+(c<<2)>>2]|0;e=g+1|0;if((c|0)==(l|0)){j=e;break}else g=e}i=uP(j<<4)|0;c=i+(g<<4)|0;k[c>>2]=k[d>>2];k[c+4>>2]=k[d+4>>2];k[c+8>>2]=k[d+8>>2];k[c+12>>2]=k[d+12>>2];h=k[m+(h<<2)>>2]|0;c=g+-1|0;e=i+(c<<4)|0;if((h|0)!=(l|0)){g=a+8|0;do{a=(k[g>>2]|0)+(h<<4)|0;k[e>>2]=k[a>>2];k[e+4>>2]=k[a+4>>2];k[e+8>>2]=k[a+8>>2];k[e+12>>2]=k[a+12>>2];h=k[m+(h<<2)>>2]|0;c=c+-1|0;e=i+(c<<4)|0}while((h|0)!=(l|0))};k[e>>2]=k[b>>2];k[e+4>>2]=k[b+4>>2];k[e+8>>2]=k[b+8>>2];k[e+12>>2]=k[b+12>>2];if(c)Wa(177911,177918,148,177924);if(n)vP(n);if(o)vP(o);k[f+4>>2]=j;k[f>>2]=i;vP(m);r=p;return 1}function AH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0;i=r;r=r+48|0;h=i+32|0;f=i+16|0;e=i;g=k[a>>2]|0;a=k[a+4>>2]|0;c=a+-1|0;a:do if((a|0)>0){d=0;while(1){l=g+(((c+d|0)%(a|0)|0)<<4)|0;j=g+(d<<4)|0;k[e>>2]=k[l>>2];k[e+4>>2]=k[l+4>>2];k[e+8>>2]=k[l+8>>2];k[e+12>>2]=k[l+12>>2];k[f>>2]=k[j>>2];k[f+4>>2]=k[j+4>>2];k[f+8>>2]=k[j+8>>2];k[f+12>>2]=k[j+12>>2];k[h>>2]=k[b>>2];k[h+4>>2]=k[b+4>>2];k[h+8>>2]=k[b+8>>2];k[h+12>>2]=k[b+12>>2];d=d+1|0;if((RH(e,f,h)|0)==1){a=0;break a}if((d|0)>=(a|0)){a=1;break}}}else a=1;while(0);r=i;return a|0}function BH(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0.0,h=0,j=0.0,l=0.0,m=0.0,n=0,o=0,q=0,s=0,u=0,v=0,y=0,z=0,A=0,B=0;B=r;r=r+32|0;u=B+16|0;y=B;z=4;s=uP(40)|0;k[s>>2]=0;v=k[c>>2]|0;q=k[c+4>>2]|0;z=DP(91520,1,s|0,z|0)|0;s=L;w=0;c=w;w=0;if((c|0)!=0&(x|0)!=0){f=FP(k[c>>2]|0,z|0,s|0)|0;if(!f)Za(c|0,x|0);L=x}else f=-1;if((f|0)==1)c=L;else c=0;while(1){if(c){c=-1;break}i[t>>0]=i[d>>0];i[t+1>>0]=i[d+1>>0];i[t+2>>0]=i[d+2>>0];i[t+3>>0]=i[d+3>>0];i[t+4>>0]=i[d+4>>0];i[t+5>>0]=i[d+5>>0];i[t+6>>0]=i[d+6>>0];i[t+7>>0]=i[d+7>>0];m=+p[t>>3];h=d+8|0;i[t>>0]=i[h>>0];i[t+1>>0]=i[h+1>>0];i[t+2>>0]=i[h+2>>0];i[t+3>>0]=i[h+3>>0];i[t+4>>0]=i[h+4>>0];i[t+5>>0]=i[h+5>>0];i[t+6>>0]=i[h+6>>0];i[t+7>>0]=i[h+7>>0];g=+p[t>>3];j=m*m+g*g;if(j>1.0e-06){w=0;l=+xa(1,+j);c=w;w=0;if((c|0)!=0&(x|0)!=0){f=FP(k[c>>2]|0,z|0,s|0)|0;if(!f)Za(c|0,x|0);L=x}else f=-1;if((f|0)==1){c=L;continue}j=m/l;g=g/l}else j=m;p[d>>3]=j;p[h>>3]=g;o=d+16|0;h=d+16|0;i[t>>0]=i[h>>0];i[t+1>>0]=i[h+1>>0];i[t+2>>0]=i[h+2>>0];i[t+3>>0]=i[h+3>>0];i[t+4>>0]=i[h+4>>0];i[t+5>>0]=i[h+5>>0];i[t+6>>0]=i[h+6>>0];i[t+7>>0]=i[h+7>>0];l=+p[t>>3];n=d+24|0;i[t>>0]=i[n>>0];i[t+1>>0]=i[n+1>>0];i[t+2>>0]=i[n+2>>0];i[t+3>>0]=i[n+3>>0];i[t+4>>0]=i[n+4>>0];i[t+5>>0]=i[n+5>>0];i[t+6>>0]=i[n+6>>0];i[t+7>>0]=i[n+7>>0];g=+p[t>>3];j=l*l+g*g;if(j>1.0e-06){w=0;m=+xa(1,+j);c=w;w=0;if((c|0)!=0&(x|0)!=0){f=FP(k[c>>2]|0,z|0,s|0)|0;if(!f)Za(c|0,x|0);L=x}else f=-1;if((f|0)==1){c=L;continue}j=l/m;g=g/m}else j=l;p[h>>3]=j;p[n>>3]=g;k[22919]=0;w=0;na(108,4);c=w;w=0;if((c|0)!=0&(x|0)!=0){f=FP(k[c>>2]|0,z|0,s|0)|0;if(!f)Za(c|0,x|0);L=x}else f=-1;if((f|0)==1){c=L;continue}c=k[22919]|0;k[22919]=c+1;c=(k[22920]|0)+(c<<4)|0;k[c>>2]=k[v>>2];k[c+4>>2]=k[v+4>>2];k[c+8>>2]=k[v+8>>2];k[c+12>>2]=k[v+12>>2];w=0;k[y>>2]=k[d>>2];k[y+4>>2]=k[d+4>>2];k[y+8>>2]=k[d+8>>2];k[y+12>>2]=k[d+12>>2];k[u>>2]=k[o>>2];k[u+4>>2]=k[o+4>>2];k[u+8>>2]=k[o+8>>2];k[u+12>>2]=k[o+12>>2];c=wa(1,a|0,b|0,v|0,q|0,y|0,u|0)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){h=FP(k[f>>2]|0,z|0,s|0)|0;if(!h)Za(f|0,x|0);L=x}else h=-1;if((h|0)==1)c=L;else{A=12;break}}if((A|0)==12)if((c|0)==-1)c=-1;else{k[e+4>>2]=k[22919];k[e>>2]=k[22920];c=0}vP(z|0);r=B;return c|0}function CH(a){a=a|0;var b=0,c=0,d=0,e=0;e=r;r=r+32|0;d=e+16|0;c=e;if((k[22923]|0)<(a|0)){b=k[22920]|0;if(!b){d=uP(a<<4)|0;k[22920]=d;if(!d){d=k[24528]|0;k[c>>2]=177933;k[c+4>>2]=531;k[c+8>>2]=178214;FN(d,177941,c)|0;Za(91520,1)}}else{c=xP(b,a<<4)|0;k[22920]=c;if(!c){c=k[24528]|0;k[d>>2]=177933;k[d+4>>2]=537;k[d+8>>2]=178232;FN(c,177941,d)|0;Za(91520,1)}}k[22923]=a}r=e;return}function DH(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0.0,j=0.0,l=0.0,m=0.0,n=0.0,o=0,q=0,s=0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,G=0,H=0.0,I=0.0,J=0,K=0,L=0,M=0,N=0,O=0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0.0,U=0.0,V=0.0,W=0.0,Y=0,Z=0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0,da=0.0,ea=0.0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0.0,ra=0.0;pa=r;r=r+128|0;ma=pa+96|0;oa=pa+72|0;ka=pa+32|0;ja=pa;na=pa+56|0;g=k[22922]|0;do if((k[22921]|0)<(d|0)){if(!g){g=uP(d*40|0)|0;k[22922]=g;if(!g){g=-1;break}}else{g=xP(g,d*40|0)|0;k[22922]=g;if(!g){g=-1;break}}k[22921]=d;la=6}else la=6;while(0);do if((la|0)==6){p[g>>3]=0.0;ca=(d|0)>1;if(ca){h=+p[g>>3];o=1;do{Z=o+-1|0;Y=c+(Z<<4)|0;i[t>>0]=i[Y>>0];i[t+1>>0]=i[Y+1>>0];i[t+2>>0]=i[Y+2>>0];i[t+3>>0]=i[Y+3>>0];i[t+4>>0]=i[Y+4>>0];i[t+5>>0]=i[Y+5>>0];i[t+6>>0]=i[Y+6>>0];i[t+7>>0]=i[Y+7>>0];$=+p[t>>3];Z=c+(Z<<4)+8|0;i[t>>0]=i[Z>>0];i[t+1>>0]=i[Z+1>>0];i[t+2>>0]=i[Z+2>>0];i[t+3>>0]=i[Z+3>>0];i[t+4>>0]=i[Z+4>>0];i[t+5>>0]=i[Z+5>>0];i[t+6>>0]=i[Z+6>>0];i[t+7>>0]=i[Z+7>>0];ba=+p[t>>3];Z=c+(o<<4)|0;i[t>>0]=i[Z>>0];i[t+1>>0]=i[Z+1>>0];i[t+2>>0]=i[Z+2>>0];i[t+3>>0]=i[Z+3>>0];i[t+4>>0]=i[Z+4>>0];i[t+5>>0]=i[Z+5>>0];i[t+6>>0]=i[Z+6>>0];i[t+7>>0]=i[Z+7>>0];aa=+p[t>>3];Z=c+(o<<4)+8|0;i[t>>0]=i[Z>>0];i[t+1>>0]=i[Z+1>>0];i[t+2>>0]=i[Z+2>>0];i[t+3>>0]=i[Z+3>>0];i[t+4>>0]=i[Z+4>>0];i[t+5>>0]=i[Z+5>>0];i[t+6>>0]=i[Z+6>>0];i[t+7>>0]=i[Z+7>>0];aa=$-aa;ba=ba-+p[t>>3];h=h+ +X(+(aa*aa+ba*ba));p[g+(o*40|0)>>3]=h;o=o+1|0}while((o|0)!=(d|0));if(ca){o=g+((d+-1|0)*40|0)|0;q=1;do{Z=g+(q*40|0)|0;p[Z>>3]=+p[Z>>3]/+p[o>>3];q=q+1|0}while((q|0)!=(d|0))}}u=(d|0)>0;a:do if(u){h=+p[e>>3];s=e+8|0;j=+p[s>>3];l=+p[f>>3];q=f+8|0;m=+p[q>>3];o=0;do{aa=+p[g+(o*40|0)>>3];ba=1.0-aa;ba=ba*(aa*3.0*ba);p[g+(o*40|0)+8>>3]=h*ba;p[g+(o*40|0)+16>>3]=j*ba;ba=+p[g+(o*40|0)>>3];ba=(1.0-ba)*(ba*(ba*3.0));p[g+(o*40|0)+24>>3]=l*ba;p[g+(o*40|0)+32>>3]=m*ba;o=o+1|0}while((o|0)!=(d|0));D=+p[f>>3];E=+p[q>>3];B=+p[e>>3];C=+p[s>>3];if(u){i[t>>0]=i[c>>0];i[t+1>>0]=i[c+1>>0];i[t+2>>0]=i[c+2>>0];i[t+3>>0]=i[c+3>>0];i[t+4>>0]=i[c+4>>0];i[t+5>>0]=i[c+5>>0];i[t+6>>0]=i[c+6>>0];i[t+7>>0]=i[c+7>>0];x=+p[t>>3];o=c+8|0;i[t>>0]=i[o>>0];i[t+1>>0]=i[o+1>>0];i[t+2>>0]=i[o+2>>0];i[t+3>>0]=i[o+3>>0];i[t+4>>0]=i[o+4>>0];i[t+5>>0]=i[o+5>>0];i[t+6>>0]=i[o+6>>0];i[t+7>>0]=i[o+7>>0];y=+p[t>>3];o=d+-1|0;Z=c+(o<<4)|0;i[t>>0]=i[Z>>0];i[t+1>>0]=i[Z+1>>0];i[t+2>>0]=i[Z+2>>0];i[t+3>>0]=i[Z+3>>0];i[t+4>>0]=i[Z+4>>0];i[t+5>>0]=i[Z+5>>0];i[t+6>>0]=i[Z+6>>0];i[t+7>>0]=i[Z+7>>0];z=+p[t>>3];o=c+(o<<4)+8|0;i[t>>0]=i[o>>0];i[t+1>>0]=i[o+1>>0];i[t+2>>0]=i[o+2>>0];i[t+3>>0]=i[o+3>>0];i[t+4>>0]=i[o+4>>0];i[t+5>>0]=i[o+5>>0];i[t+6>>0]=i[o+6>>0];i[t+7>>0]=i[o+7>>0];A=+p[t>>3];h=x;j=y;w=0.0;v=0.0;n=0.0;o=0;m=0.0;l=0.0;while(1){Z=g+(o*40|0)+8|0;i[t>>0]=i[Z>>0];i[t+1>>0]=i[Z+1>>0];i[t+2>>0]=i[Z+2>>0];i[t+3>>0]=i[Z+3>>0];i[t+4>>0]=i[Z+4>>0];i[t+5>>0]=i[Z+5>>0];i[t+6>>0]=i[Z+6>>0];i[t+7>>0]=i[Z+7>>0];V=+p[t>>3];Z=g+(o*40|0)+16|0;i[t>>0]=i[Z>>0];i[t+1>>0]=i[Z+1>>0];i[t+2>>0]=i[Z+2>>0];i[t+3>>0]=i[Z+3>>0];i[t+4>>0]=i[Z+4>>0];i[t+5>>0]=i[Z+5>>0];i[t+6>>0]=i[Z+6>>0];i[t+7>>0]=i[Z+7>>0];W=+p[t>>3];w=w+(V*V+W*W);Z=g+(o*40|0)+24|0;i[t>>0]=i[Z>>0];i[t+1>>0]=i[Z+1>>0];i[t+2>>0]=i[Z+2>>0];i[t+3>>0]=i[Z+3>>0];i[t+4>>0]=i[Z+4>>0];i[t+5>>0]=i[Z+5>>0];i[t+6>>0]=i[Z+6>>0];i[t+7>>0]=i[Z+7>>0];_=+p[t>>3];Z=g+(o*40|0)+32|0;i[t>>0]=i[Z>>0];i[t+1>>0]=i[Z+1>>0];i[t+2>>0]=i[Z+2>>0];i[t+3>>0]=i[Z+3>>0];i[t+4>>0]=i[Z+4>>0];i[t+5>>0]=i[Z+5>>0];i[t+6>>0]=i[Z+6>>0];i[t+7>>0]=i[Z+7>>0];aa=+p[t>>3];n=n+(V*_+W*aa);v=v+(_*_+aa*aa);$=+p[g+(o*40|0)>>3];ba=1.0-$;U=ba*ba*(ba+$*3.0);ba=$*$*($+ba*3.0);$=h-(x*U+z*ba);ba=j-(y*U+A*ba);m=m+(V*$+W*ba);l=l+(_*$+aa*ba);o=o+1|0;if((o|0)==(d|0)){x=D;y=E;break a}Z=c+(o<<4)|0;i[t>>0]=i[Z>>0];i[t+1>>0]=i[Z+1>>0];i[t+2>>0]=i[Z+2>>0];i[t+3>>0]=i[Z+3>>0];i[t+4>>0]=i[Z+4>>0];i[t+5>>0]=i[Z+5>>0];i[t+6>>0]=i[Z+6>>0];i[t+7>>0]=i[Z+7>>0];h=+p[t>>3];Z=c+(o<<4)+8|0;i[t>>0]=i[Z>>0];i[t+1>>0]=i[Z+1>>0];i[t+2>>0]=i[Z+2>>0];i[t+3>>0]=i[Z+3>>0];i[t+4>>0]=i[Z+4>>0];i[t+5>>0]=i[Z+5>>0];i[t+6>>0]=i[Z+6>>0];i[t+7>>0]=i[Z+7>>0];j=+p[t>>3]}}else{x=D;y=E;w=0.0;v=0.0;n=0.0;m=0.0;l=0.0}}else{B=+p[e>>3];C=+p[e+8>>3];x=+p[f>>3];y=+p[f+8>>3];w=0.0;v=0.0;n=0.0;m=0.0;l=0.0}while(0);h=v*w-n*n;j=h>=0.0?h:-h;if(j>=1.0e-06?(H=(v*m-n*l)/h,I=(w*l-n*m)/h,!(j<1.0e-06|H<=0.0|I<=0.0)):0){O=d+-1|0;N=c+8|0;Y=N;Z=c;_=+p[c>>3];$=+p[N>>3];aa=+p[c+(O<<4)>>3];ba=+p[c+(O<<4)+8>>3];h=H;j=I}else{Y=d+-1|0;Z=c+(Y<<4)|0;i[t>>0]=i[Z>>0];i[t+1>>0]=i[Z+1>>0];i[t+2>>0]=i[Z+2>>0];i[t+3>>0]=i[Z+3>>0];i[t+4>>0]=i[Z+4>>0];i[t+5>>0]=i[Z+5>>0];i[t+6>>0]=i[Z+6>>0];i[t+7>>0]=i[Z+7>>0];aa=+p[t>>3];Y=c+(Y<<4)+8|0;i[t>>0]=i[Y>>0];i[t+1>>0]=i[Y+1>>0];i[t+2>>0]=i[Y+2>>0];i[t+3>>0]=i[Y+3>>0];i[t+4>>0]=i[Y+4>>0];i[t+5>>0]=i[Y+5>>0];i[t+6>>0]=i[Y+6>>0];i[t+7>>0]=i[Y+7>>0];ba=+p[t>>3];i[t>>0]=i[c>>0];i[t+1>>0]=i[c+1>>0];i[t+2>>0]=i[c+2>>0];i[t+3>>0]=i[c+3>>0];i[t+4>>0]=i[c+4>>0];i[t+5>>0]=i[c+5>>0];i[t+6>>0]=i[c+6>>0];i[t+7>>0]=i[c+7>>0];_=+p[t>>3];Y=c+8|0;i[t>>0]=i[Y>>0];i[t+1>>0]=i[Y+1>>0];i[t+2>>0]=i[Y+2>>0];i[t+3>>0]=i[Y+3>>0];i[t+4>>0]=i[Y+4>>0];i[t+5>>0]=i[Y+5>>0];i[t+6>>0]=i[Y+6>>0];i[t+7>>0]=i[Y+7>>0];$=+p[t>>3];h=aa-_;j=ba-$;j=+X(+(h*h+j*j))/3.0;Z=c;h=j}W=B*h;U=C*h;V=x*j;T=y*j;K=(d|0)==2;L=(b|0)>0;M=ma+24|0;N=ma+16|0;O=ma+8|0;P=_*3.0;Q=$*3.0;R=4.0;S=4.0;g=1;b:while(1){m=_+W*R/3.0;l=$+U*R/3.0;j=aa-V*S/3.0;h=ba-T*S/3.0;if(g){C=m-_;D=l-$;E=j-m;H=h-l;I=aa-j;x=ba-h;x=+X(+(C*C+D*D))+0.0+ +X(+(E*E+H*H))+ +X(+(I*I+x*x));if(ca){v=+p[Z>>3];w=+p[Y>>3];g=1;n=0.0;do{H=v;v=+p[c+(g<<4)>>3];H=v-H;I=w;w=+p[c+(g<<4)+8>>3];I=w-I;n=n+ +X(+(H*H+I*I));g=g+1|0}while((g|0)!=(d|0))}else n=0.0;if(x<n+-.001)break}if(!L){la=71;break}y=j*3.0;x=aa+m*3.0-(_+y);y=P+y-m*6.0;z=(m-_)*3.0;B=h*3.0;A=ba+l*3.0-($+B);B=Q+B-l*6.0;C=(l-$)*3.0;J=0;c:while(1){D=+p[a+(J<<5)>>3];E=+p[a+(J<<5)+8>>3];H=+p[a+(J<<5)+16>>3];I=+p[a+(J<<5)+24>>3];v=H-D;w=I-E;d:do if(v==0.0){p[M>>3]=x;p[N>>3]=y;p[O>>3]=z;p[ma>>3]=_-D;G=NH(ma,oa)|0;if(!(w==0.0)){if((G|0)==4){g=4;break}if((G|0)>0){g=0;o=0}else{g=0;break}while(1){n=+p[oa+(o<<3)>>3];if(n>=0.0&n<=1.0?(p[M>>3]=A,p[N>>3]=B,p[O>>3]=C,p[ma>>3]=$,v=($+n*(C+n*(B+A*n))-E)/w,v>=0.0&v<=1.0):0){p[ja+(g<<3)>>3]=n;g=g+1|0}o=o+1|0;if((o|0)==(G|0))break d}}p[M>>3]=A;p[N>>3]=B;p[O>>3]=C;p[ma>>3]=$-E;F=NH(ma,ka)|0;g=(F|0)==4;if((G|0)==4){if(g){g=4;break}if((F|0)>0){g=0;o=0}else{g=0;break}while(1){n=+p[ka+(o<<3)>>3];if(n>=0.0&n<=1.0){p[ja+(g<<3)>>3]=n;g=g+1|0}o=o+1|0;if((o|0)==(F|0))break d}}o=(G|0)>0;if(g){if(o){g=0;o=0}else{g=0;break}while(1){n=+p[oa+(o<<3)>>3];if(n>=0.0&n<=1.0){p[ja+(g<<3)>>3]=n;g=g+1|0}o=o+1|0;if((o|0)==(G|0))break d}}if(o){s=(F|0)>0;g=0;u=0;do{if(s){n=+p[oa+(u<<3)>>3];q=!(n<=1.0)|!(n>=0.0);o=0;do{if(!(q|n!=+p[ka+(o<<3)>>3])){p[ja+(g<<3)>>3]=n;g=g+1|0}o=o+1|0}while((o|0)!=(F|0))}u=u+1|0}while((u|0)!=(G|0))}else g=0}else{n=w/v;w=$-_*n;qa=l-m*n;ra=(h-j*n)*3.0;p[M>>3]=ba-aa*n+qa*3.0-(w+ra);p[N>>3]=w*3.0+ra-qa*6.0;p[O>>3]=(qa-w)*3.0;p[ma>>3]=D*n-E+w;o=NH(ma,oa)|0;if((o|0)!=4)if((o|0)>0){g=0;q=0;do{n=+p[oa+(q<<3)>>3];if(n>=0.0&n<=1.0?(p[M>>3]=x,p[N>>3]=y,p[O>>3]=z,p[ma>>3]=_,ra=(_+n*(z+n*(y+x*n))-D)/v,ra>=0.0&ra<=1.0):0){p[ja+(g<<3)>>3]=n;g=g+1|0}q=q+1|0}while((q|0)!=(o|0))}else g=0;else g=4}while(0);if((g|0)!=4&(g|0)>0){o=0;do{n=+p[ja+(o<<3)>>3];if((!(n<1.0e-06|n>.999999)?(w=n*(n*n),ia=n*3.0,qa=1.0-n,ra=qa*(n*ia),ia=qa*(ia*qa),qa=qa*(qa*qa),ha=aa*w+(j*ra+(_*qa+m*ia)),ia=ba*w+(h*ra+($*qa+l*ia)),qa=ha-D,ra=ia-E,!(qa*qa+ra*ra<.001)):0)?(qa=ha-H,ra=ia-I,!(qa*qa+ra*ra<.001)):0)break c;o=o+1|0}while((o|0)<(g|0))}J=J+1|0;if((J|0)>=(b|0)){la=71;break b}}if(R==0.0&S==0.0){da=m;ea=l;fa=j;ga=h;la=73;break}g=R>.01;R=g?R*.5:0.0;S=g?S*.5:0.0;g=0}if((la|0)==71){CH((k[22919]|0)+4|0);na=k[22920]|0;g=k[22919]|0;p[na+(g<<4)>>3]=m;c=g+1|0;p[na+(g<<4)+8>>3]=l;p[na+(c<<4)>>3]=j;oa=g+2|0;p[na+(c<<4)+8>>3]=h;p[na+(oa<<4)>>3]=aa;p[na+(oa<<4)+8>>3]=ba;k[22919]=g+3;g=0;break}if((la|0)==73?K:0){CH((k[22919]|0)+4|0);na=k[22920]|0;g=k[22919]|0;p[na+(g<<4)>>3]=da;c=g+1|0;p[na+(g<<4)+8>>3]=ea;p[na+(c<<4)>>3]=fa;oa=g+2|0;p[na+(c<<4)+8>>3]=ga;p[na+(oa<<4)>>3]=aa;p[na+(oa<<4)+8>>3]=ba;k[22919]=g+3;g=0;break}v=W*.3333333333333333+_;n=U*.3333333333333333+$;m=aa-V*.3333333333333333;h=ba-T*.3333333333333333;o=d+-1|0;if((o|0)>1){q=k[22922]|0;u=1;l=-1.0;g=-1;while(1){ha=+p[q+(u*40|0)>>3];ra=1.0-ha;qa=ra*(ra*ra);ia=ha*3.0;j=ra*(ia*ra);ia=ra*(ha*ia);ha=ha*(ha*ha);s=c+(u<<4)|0;i[t>>0]=i[s>>0];i[t+1>>0]=i[s+1>>0];i[t+2>>0]=i[s+2>>0];i[t+3>>0]=i[s+3>>0];i[t+4>>0]=i[s+4>>0];i[t+5>>0]=i[s+5>>0];i[t+6>>0]=i[s+6>>0];i[t+7>>0]=i[s+7>>0];ra=+p[t>>3];s=c+(u<<4)+8|0;i[t>>0]=i[s>>0];i[t+1>>0]=i[s+1>>0];i[t+2>>0]=i[s+2>>0];i[t+3>>0]=i[s+3>>0];i[t+4>>0]=i[s+4>>0];i[t+5>>0]=i[s+5>>0];i[t+6>>0]=i[s+6>>0];i[t+7>>0]=i[s+7>>0];ra=ra-(aa*ha+(m*ia+(_*qa+v*j)));j=+p[t>>3]-(ba*ha+(h*ia+($*qa+n*j)));j=+X(+(ra*ra+j*j));s=j>l;g=s?u:g;u=u+1|0;if((u|0)==(o|0))break;else l=s?j:l}}else g=-1;q=c+(g<<4)|0;la=g+-1|0;ka=c+(la<<4)|0;i[t>>0]=i[ka>>0];i[t+1>>0]=i[ka+1>>0];i[t+2>>0]=i[ka+2>>0];i[t+3>>0]=i[ka+3>>0];i[t+4>>0]=i[ka+4>>0];i[t+5>>0]=i[ka+5>>0];i[t+6>>0]=i[ka+6>>0];i[t+7>>0]=i[ka+7>>0];h=+p[t>>3];la=c+(la<<4)+8|0;i[t>>0]=i[la>>0];i[t+1>>0]=i[la+1>>0];i[t+2>>0]=i[la+2>>0];i[t+3>>0]=i[la+3>>0];i[t+4>>0]=i[la+4>>0];i[t+5>>0]=i[la+5>>0];i[t+6>>0]=i[la+6>>0];i[t+7>>0]=i[la+7>>0];l=+p[t>>3];i[t>>0]=i[q>>0];i[t+1>>0]=i[q+1>>0];i[t+2>>0]=i[q+2>>0];i[t+3>>0]=i[q+3>>0];i[t+4>>0]=i[q+4>>0];i[t+5>>0]=i[q+5>>0];i[t+6>>0]=i[q+6>>0];i[t+7>>0]=i[q+7>>0];m=+p[t>>3];la=c+(g<<4)+8|0;i[t>>0]=i[la>>0];i[t+1>>0]=i[la+1>>0];i[t+2>>0]=i[la+2>>0];i[t+3>>0]=i[la+3>>0];i[t+4>>0]=i[la+4>>0];i[t+5>>0]=i[la+5>>0];i[t+6>>0]=i[la+6>>0];i[t+7>>0]=i[la+7>>0];n=+p[t>>3];h=m-h;l=n-l;j=h*h+l*l;if(j>1.0e-06){ra=+X(+j);h=h/ra;l=l/ra}o=g+1|0;la=c+(o<<4)|0;i[t>>0]=i[la>>0];i[t+1>>0]=i[la+1>>0];i[t+2>>0]=i[la+2>>0];i[t+3>>0]=i[la+3>>0];i[t+4>>0]=i[la+4>>0];i[t+5>>0]=i[la+5>>0];i[t+6>>0]=i[la+6>>0];i[t+7>>0]=i[la+7>>0];j=+p[t>>3];la=c+(o<<4)+8|0;i[t>>0]=i[la>>0];i[t+1>>0]=i[la+1>>0];i[t+2>>0]=i[la+2>>0];i[t+3>>0]=i[la+3>>0];i[t+4>>0]=i[la+4>>0];i[t+5>>0]=i[la+5>>0];i[t+6>>0]=i[la+6>>0];i[t+7>>0]=i[la+7>>0];m=j-m;n=+p[t>>3]-n;j=m*m+n*n;if(j>1.0e-06){ra=+X(+j);j=m/ra;n=n/ra}else j=m;m=h+j;h=l+n;j=h*h+m*m;if(j>1.0e-06){ra=+X(+j);j=m/ra;h=h/ra}else j=m;p[na>>3]=j;p[na+8>>3]=h;k[oa>>2]=k[e>>2];k[oa+4>>2]=k[e+4>>2];k[oa+8>>2]=k[e+8>>2];k[oa+12>>2]=k[e+12>>2];k[ma>>2]=k[na>>2];k[ma+4>>2]=k[na+4>>2];k[ma+8>>2]=k[na+8>>2];k[ma+12>>2]=k[na+12>>2];DH(a,b,c,o,oa,ma)|0;k[oa>>2]=k[na>>2];k[oa+4>>2]=k[na+4>>2];k[oa+8>>2]=k[na+8>>2];k[oa+12>>2]=k[na+12>>2];k[ma>>2]=k[f>>2];k[ma+4>>2]=k[f+4>>2];k[ma+8>>2]=k[f+8>>2];k[ma+12>>2]=k[f+12>>2];DH(a,b,q,d-g|0,oa,ma)|0;g=0}while(0);r=pa;return g|0}function EH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0.0,j=0.0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0.0,y=0.0,z=0.0,A=0.0,C=0.0,D=0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0,K=0,M=0,N=0,O=0,P=0.0,Q=0.0,R=0,S=0.0,T=0.0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0;ha=r;r=r+176|0;da=ha+144|0;ca=ha+128|0;ba=ha+112|0;aa=ha+96|0;$=ha+80|0;_=ha+64|0;Z=ha+48|0;Y=ha+32|0;X=ha+16|0;W=ha;ga=4;ea=uP(40)|0;k[ea>>2]=0;V=ha+160|0;ga=DP(91696,1,ea|0,ga|0)|0;ea=L;w=0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ga|0,ea|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1)d=L;else d=0;a:while(1){if(d){d=-2;break}m=a+4|0;g=k[m>>2]|0;if((k[22963]|0)<(g|0)){d=k[22964]|0;if(!d){w=0;d=ra(33,g<<3|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,ga|0,ea|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){d=L;continue}k[22964]=d;if(!d){d=k[24528]|0;w=0;k[W>>2]=177960;k[W+4>>2]=523;k[W+8>>2]=177971;ta(31,d|0,177941,W|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ga|0,ea|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){d=L;continue}w=0;pa(20,91696,1);d=w;w=0;if((d|0)!=0&(x|0)!=0){N=FP(k[d>>2]|0,ga|0,ea|0)|0;if(!N)Za(d|0,x|0);L=x};d=L;continue}w=0;d=ra(33,g<<2|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,ga|0,ea|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){d=L;continue}k[22965]=d;if(!d){d=k[24528]|0;w=0;k[X>>2]=177960;k[X+4>>2]=527;k[X+8>>2]=177990;ta(31,d|0,177941,X|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ga|0,ea|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){d=L;continue}w=0;pa(20,91696,1);d=w;w=0;if((d|0)!=0&(x|0)!=0){N=FP(k[d>>2]|0,ga|0,ea|0)|0;if(!N)Za(d|0,x|0);L=x};d=L;continue}}else{w=0;d=Aa(102,d|0,g<<3|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,ga|0,ea|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){d=L;continue}k[22964]=d;if(!d){d=k[24528]|0;w=0;k[Y>>2]=177960;k[Y+4>>2]=533;k[Y+8>>2]=178010;ta(31,d|0,177941,Y|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ga|0,ea|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){d=L;continue}w=0;pa(20,91696,1);d=w;w=0;if((d|0)!=0&(x|0)!=0){N=FP(k[d>>2]|0,ga|0,ea|0)|0;if(!N)Za(d|0,x|0);L=x};d=L;continue}w=0;d=Aa(102,k[22965]|0,g<<2|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,ga|0,ea|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){d=L;continue}k[22965]=d;if(!d){d=k[24528]|0;w=0;k[Z>>2]=177960;k[Z+4>>2]=539;k[Z+8>>2]=178030;ta(31,d|0,177941,Z|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ga|0,ea|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){d=L;continue}w=0;pa(20,91696,1);d=w;w=0;if((d|0)!=0&(x|0)!=0){N=FP(k[d>>2]|0,ga|0,ea|0)|0;if(!N)Za(d|0,x|0);L=x};d=L;continue}}k[22963]=g}k[22966]=0;k[22967]=0;d=k[m>>2]|0;h=d<<1;e=k[22968]|0;if((e|0)<(h|0)){e=k[22969]|0;do if(!e){w=0;e=ra(33,d<<3|0)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,ga|0,ea|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;if((g|0)==1){d=L;continue a}k[22969]=e;if(!e){d=k[24528]|0;w=0;k[_>>2]=177960;k[_+4>>2]=573;k[_+8>>2]=178051;ta(31,d|0,177941,_|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ga|0,ea|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){d=L;continue a}w=0;pa(20,91696,1);d=w;w=0;if((d|0)!=0&(x|0)!=0){N=FP(k[d>>2]|0,ga|0,ea|0)|0;if(!N)Za(d|0,x|0);L=x};d=L;continue a}}else{w=0;d=Aa(102,e|0,d<<3|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,ga|0,ea|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){d=L;continue a}k[22969]=d;if(d){d=k[m>>2]|0;break}d=k[24528]|0;w=0;k[$>>2]=177960;k[$+4>>2]=580;k[$+8>>2]=178073;ta(31,d|0,177941,$|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ga|0,ea|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){d=L;continue a}w=0;pa(20,91696,1);d=w;w=0;if((d|0)!=0&(x|0)!=0){N=FP(k[d>>2]|0,ga|0,ea|0)|0;if(!N)Za(d|0,x|0);L=x};d=L;continue a}while(0);k[22968]=h;e=h}l=(e|0)/2|0;k[22970]=l;k[22971]=l+-1;l=(d|0)>0;h=k[a>>2]|0;if(l){e=-1;j=B;g=0;while(1){i=+p[h+(g<<4)>>3];f=j>i;e=f?g:e;g=g+1|0;if((g|0)>=(d|0))break;else j=f?i:j}}else e=-1;G=+p[h+(e<<4)>>3];I=+p[h+(e<<4)+8>>3];N=((e|0)==0?d:e)+-1|0;F=+p[h+(N<<4)>>3];M=(e|0)==(d+-1|0)?0:e+1|0;E=+p[h+(M<<4)>>3];H=+p[h+(M<<4)+8>>3];if(!(F==G&G==E&H>I)?(E-G)*(+p[h+(N<<4)+8>>3]-I)-(F-G)*(H-I)>0.0:0){if(l){e=d;g=0;do{f=k[a>>2]|0;if(!(((g|0)>0?(O=g+-1|0,+p[f+(g<<4)>>3]==+p[f+(O<<4)>>3]):0)?+p[f+(g<<4)+8>>3]==+p[f+(O<<4)+8>>3]:0)){N=k[22966]|0;k[(k[22964]|0)+(N<<3)>>2]=f+(g<<4);M=k[22964]|0;k[M+(N<<3)+4>>2]=M+(((N|0)%(e|0)|0)<<3);k[(k[22965]|0)+(N<<2)>>2]=(k[22964]|0)+(N<<3);k[22966]=N+1;e=k[m>>2]|0}g=g+1|0}while((g|0)<(e|0))}}else fa=40;b:do if((fa|0)==40?(fa=0,l):0){g=d;f=d;while(1){e=f+-1|0;d=k[a>>2]|0;if(!(((f|0)<=(g+-1|0)?+p[d+(e<<4)>>3]==+p[d+(f<<4)>>3]:0)?+p[d+(e<<4)+8>>3]==+p[d+(f<<4)+8>>3]:0)){N=k[22966]|0;k[(k[22964]|0)+(N<<3)>>2]=d+(e<<4);M=k[22964]|0;k[M+(N<<3)+4>>2]=M+(((N|0)%(g|0)|0)<<3);k[(k[22965]|0)+(N<<2)>>2]=(k[22964]|0)+(N<<3);k[22966]=N+1}if((f|0)<=1)break b;g=k[m>>2]|0;f=e}}while(0);N=k[22965]|0;d=k[22966]|0;c:do if((d|0)>3){d:while(1){J=d;d=d+-1|0;K=0;e:while(1){M=K;K=K+1|0;e=(K|0)%(J|0)|0;o=(M+2|0)%(J|0)|0;u=k[k[N+(((M+d|0)%(J|0)|0)<<2)>>2]>>2]|0;q=k[N+(M<<2)>>2]|0;s=k[q>>2]|0;t=k[N+(e<<2)>>2]|0;D=k[t>>2]|0;j=+p[u+8>>3];E=+p[s+8>>3];v=+p[D>>3];F=+p[s>>3];y=v-F;z=+p[D+8>>3];A=z-E;C=+p[u>>3];u=k[N+(o<<2)>>2]|0;D=k[u>>2]|0;G=+p[D+8>>3];H=E-G;I=+p[D>>3];if((j-E)*y-A*(C-F)>0.0){i=F-I;if(H*(C-I)-(j-G)*i>0.0?y*(G-E)-A*(I-F)>0.0:0)fa=60}else{i=F-I;C=H*(v-I)-(z-G)*i;if(C<0.0&!(C>0.0))fa=60}f:do if((fa|0)==60){fa=0;n=0;while(1){f=n;n=n+1|0;g=(n|0)==(J|0)?0:n;g:do if(!((g|0)==(o|0)|((f|0)==(o|0)|((f|0)==(M|0)|(g|0)==(M|0))))){m=k[k[N+(f<<2)>>2]>>2]|0;l=k[k[N+(g<<2)>>2]>>2]|0;j=+p[m>>3];v=+p[m+8>>3];C=H*(j-I)-i*(v-G);g=C>0.0;do if((!(!(C<0.0)&(g^1))?(P=+p[l>>3],Q=+p[l+8>>3],C=H*(P-I)-i*(Q-G),R=C>0.0,!(!(C<0.0)&(R^1))):0)?(S=v-Q,T=j-P,C=(F-P)*S-T*(E-Q),U=C>0.0,!(!(C<0.0)&(U^1))):0){C=(I-P)*S-T*(G-Q);f=C>0.0;if(!(C<0.0)&(f^1))break;if((g^R)&(U^f))break f;else break g}while(0);w=0;f=ta(43,s|0,D|0,m|0)|0;g=w;w=0;if((g|0)!=0&(x|0)!=0){h=FP(k[g>>2]|0,ga|0,ea|0)|0;if(!h)Za(g|0,x|0);L=x}else h=-1;if((h|0)==1){d=L;continue a}if(f)break f;w=0;f=ta(43,s|0,D|0,l|0)|0;g=w;w=0;if((g|0)!=0&(x|0)!=0){h=FP(k[g>>2]|0,ga|0,ea|0)|0;if(!h)Za(g|0,x|0);L=x}else h=-1;if((h|0)==1){d=L;continue a}if(f)break f;w=0;f=ta(43,m|0,l|0,s|0)|0;g=w;w=0;if((g|0)!=0&(x|0)!=0){h=FP(k[g>>2]|0,ga|0,ea|0)|0;if(!h)Za(g|0,x|0);L=x}else h=-1;if((h|0)==1){d=L;continue a}if(f)break f;w=0;f=ta(43,m|0,l|0,D|0)|0;g=w;w=0;if((g|0)!=0&(x|0)!=0){h=FP(k[g>>2]|0,ga|0,ea|0)|0;if(!h)Za(g|0,x|0);L=x}else h=-1;if((h|0)==1){d=L;continue a}if(f)break f}while(0);if((n|0)>=(J|0))break e}}while(0);if((K|0)>=(J|0))break d}w=0;Fa(70,q|0,t|0,u|0);f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,ga|0,ea|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;if((g|0)==1){d=L;continue a}if((e|0)<(d|0))do{M=e;e=e+1|0;k[N+(M<<2)>>2]=k[N+(e<<2)>>2]}while((e|0)!=(d|0));if((d|0)<=3){fa=81;break c}}d=k[24528]|0;w=0;k[aa>>2]=177960;k[aa+4>>2]=324;k[aa+8>>2]=178096;ta(31,d|0,177941,aa|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ga|0,ea|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){d=L;continue a}}else fa=81;while(0);if((fa|0)==81){fa=0;w=0;Fa(70,k[N>>2]|0,k[N+4>>2]|0,k[N+8>>2]|0);d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ga|0,ea|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){d=L;continue}}D=k[22967]|0;u=(D|0)>0;h:do if(u){q=0;do{s=q;q=q+1|0;e=(q|0)<(D|0);if(e)t=q;else break;do{n=0;do{o=0;do{f=k[22972]|0;g=f+(s*52|0)|0;h=f+(t*52|0)|0;l=k[k[f+(s*52|0)+4+(n<<4)>>2]>>2]|0;m=k[k[f+(t*52|0)+4+(o<<4)>>2]>>2]|0;if((l|0)==(m|0)){d=k[k[f+(t*52|0)+4+(o<<4)+4>>2]>>2]|0;if((k[k[f+(s*52|0)+4+(n<<4)+4>>2]>>2]|0)==(d|0))fa=94;else fa=92}else{d=k[k[f+(t*52|0)+4+(o<<4)+4>>2]>>2]|0;fa=92}if(((fa|0)==92?(fa=0,(l|0)==(d|0)):0)?(k[k[f+(s*52|0)+4+(n<<4)+4>>2]>>2]|0)==(m|0):0)fa=94;if((fa|0)==94){fa=0;k[f+(s*52|0)+4+(n<<4)+12>>2]=h;k[f+(t*52|0)+4+(o<<4)+12>>2]=g}o=o+1|0}while((o|0)!=3);n=n+1|0}while((n|0)!=3);t=t+1|0}while((t|0)!=(D|0))}while(e);if(u){d=0;while(1){w=0;e=Aa(108,d|0,b|0)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,ga|0,ea|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;if((g|0)==1){d=L;continue a}if(e){J=d;break h}d=d+1|0;if((d|0)>=(D|0)){J=d;break}}}else J=0}else J=0;while(0);if((J|0)==(D|0)){d=k[24528]|0;w=0;k[ba>>2]=177960;k[ba+4>>2]=192;k[ba+8>>2]=178117;ta(31,d|0,177941,ba|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ga|0,ea|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){d=L;continue}else{fa=104;break}}K=b+16|0;i:do if(u){d=0;while(1){w=0;e=Aa(108,d|0,K|0)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,ga|0,ea|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;if((g|0)==1){d=L;continue a}if(e)break i;d=d+1|0;if((d|0)>=(D|0))break}}else d=0;while(0);if((d|0)==(D|0)){d=k[24528]|0;w=0;k[ca>>2]=177960;k[ca+4>>2]=200;k[ca+8>>2]=178150;ta(31,d|0,177941,ca|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ga|0,ea|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){d=L;continue}else{fa=110;break}}w=0;e=Aa(109,J|0,d|0)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,ga|0,ea|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;if((g|0)==1){d=L;continue}if(!e){d=k[24528]|0;w=0;k[da>>2]=177960;k[da+4>>2]=207;k[da+8>>2]=178188;ta(31,d|0,177941,da|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ga|0,ea|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){d=L;continue}w=0;na(109,2);d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ga|0,ea|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){d=L;continue}else{fa=115;break}}if((J|0)==(d|0)){w=0;na(109,2);d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ga|0,ea|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){d=L;continue}else{fa=118;break}}k[V>>2]=b;e=V+4|0;k[e>>2]=0;d=V+8|0;k[d>>2]=K;k[V+12>>2]=0;h=k[22971]|0;f=k[22970]|0;g=k[22969]|0;if((h|0)>=(f|0))k[e>>2]=k[g+(f<<2)>>2];e=f+-1|0;k[22970]=e;k[g+(e<<2)>>2]=V;k[22974]=e;j:do if((J|0)==-1){e=0;f=d}else{u=b+24|0;m=e;o=e;t=J;while(1){s=k[22972]|0;k[s+(t*52|0)>>2]=2;q=s+(t*52|0)+16|0;fa=k[q>>2]|0;if((fa|0)!=0?(k[fa>>2]|0)==1:0){e=0;fa=127}else fa=125;do if((fa|0)==125){fa=0;N=k[s+(t*52|0)+32>>2]|0;if((N|0)!=0?(k[N>>2]|0)==1:0){e=1;fa=127;break}N=k[s+(t*52|0)+48>>2]|0;if((N|0)!=0?(k[N>>2]|0)==1:0){e=2;fa=127;break}f=k[22969]|0;l=k[k[f+(m<<2)>>2]>>2]|0;f=k[f+(h<<2)>>2]|0;N=k[f>>2]|0;H=+p[l+8>>3];I=+p[l>>3];N=(+p[u>>3]-H)*(+p[N>>3]-I)-(+p[N+8>>3]-H)*(+p[K>>3]-I)>0.0;l=N?f:d;f=N?d:f}while(0);do if((fa|0)==127){fa=0;f=k[s+(t*52|0)+4+(e<<4)>>2]|0;g=k[s+(t*52|0)+4+(e<<4)+4>>2]|0;N=k[f>>2]|0;D=k[k[s+(t*52|0)+4+((((e+1|0)>>>0)%3|0)<<4)+4>>2]>>2]|0;M=k[g>>2]|0;H=+p[D+8>>3];I=+p[D>>3];if((+p[N+8>>3]-H)*(+p[M>>3]-I)-(+p[M+8>>3]-H)*(+p[N>>3]-I)>0.0){l=g;break}l=f;f=g}while(0);k:do if((t|0)==(J|0)){e=k[22969]|0;if((h|0)>=(m|0))k[l+4>>2]=k[e+(h<<2)>>2];h=h+1|0;k[22971]=h;k[e+(h<<2)>>2]=l;e=k[22969]|0;if((h|0)>=(m|0))k[f+4>>2]=k[e+(m<<2)>>2];m=m+-1|0;k[22970]=m;k[e+(m<<2)>>2]=f;f=o}else{n=k[22969]|0;do if((k[n+(m<<2)>>2]|0)!=(f|0)){if((k[n+(h<<2)>>2]|0)==(f|0))break;w=0;l=ra(34,f|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){g=FP(k[e>>2]|0,ga|0,ea|0)|0;if(!g)Za(e|0,x|0);L=x}else g=-1;if((g|0)==1){d=L;continue a}k[22970]=l;if((h|0)>=(l|0))k[f+4>>2]=k[n+(l<<2)>>2];e=l+-1|0;k[22970]=e;k[n+(e<<2)>>2]=f;if((l|0)<=(o|0)){m=e;f=o;break k}k[22974]=l;m=e;f=l;break k}while(0);w=0;g=ra(34,l|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,ga|0,ea|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){d=L;continue a}k[22971]=g;if((g|0)>=(m|0))k[l+4>>2]=k[n+(g<<2)>>2];h=g+1|0;k[22971]=h;k[n+(h<<2)>>2]=l;if((g|0)>=(o|0)){f=o;break}k[22974]=g;f=g}while(0);e=k[q>>2]|0;if(!((e|0)!=0?(k[e>>2]|0)==1:0))fa=150;do if((fa|0)==150){fa=0;e=k[s+(t*52|0)+32>>2]|0;if((e|0)!=0?(k[e>>2]|0)==1:0)break;e=k[s+(t*52|0)+48>>2]|0;if(!e){e=0;f=d;break j}if((k[e>>2]|0)!=1){e=0;f=d;break j}}while(0);e=e-(k[22972]|0)|0;if((e|0)==-52){e=0;f=d;break}else{o=f;t=(e|0)/52|0}}}while(0);while(1){h=e+1|0;f=k[f+4>>2]|0;if(!f)break;else e=h}w=0;na(109,h|0);f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,ga|0,ea|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;if((g|0)==1)d=L;else{fa=153;break}}if((fa|0)==104)d=-1;else if((fa|0)==110)d=-1;else if((fa|0)==115){k[c+4>>2]=2;d=k[22973]|0;k[d>>2]=k[b>>2];k[d+4>>2]=k[b+4>>2];k[d+8>>2]=k[b+8>>2];k[d+12>>2]=k[b+12>>2];fa=d+16|0;k[fa>>2]=k[K>>2];k[fa+4>>2]=k[K+4>>2];k[fa+8>>2]=k[K+8>>2];k[fa+12>>2]=k[K+12>>2];k[c>>2]=d;d=0}else if((fa|0)==118){k[c+4>>2]=2;d=k[22973]|0;k[d>>2]=k[b>>2];k[d+4>>2]=k[b+4>>2];k[d+8>>2]=k[b+8>>2];k[d+12>>2]=k[b+12>>2];fa=d+16|0;k[fa>>2]=k[K>>2];k[fa+4>>2]=k[K+4>>2];k[fa+8>>2]=k[K+8>>2];k[fa+12>>2]=k[K+12>>2];k[c>>2]=d;d=0}else if((fa|0)==153){k[c+4>>2]=h;f=k[22973]|0;g=f;while(1){fa=f+(e<<4)|0;ea=k[d>>2]|0;k[fa>>2]=k[ea>>2];k[fa+4>>2]=k[ea+4>>2];k[fa+8>>2]=k[ea+8>>2];k[fa+12>>2]=k[ea+12>>2];d=k[d+4>>2]|0;if(!d)break;else e=e+-1|0}k[c>>2]=g;d=0}vP(ga|0);r=ha;return d|0}function FH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,g=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0;j=+p[b>>3];k=+p[a>>3];g=j-k;h=+p[b+8>>3];m=+p[a+8>>3];e=h-m;l=+p[c>>3];f=l-k;i=+p[c+8>>3];d=i-m;h=(m-h)*(l-j)-(k-j)*(i-h);if(!(h>0.0)&!(h<0.0)){if(!(g*f+e*d>=0.0))a=0;else a=f*f+d*d<=g*g+e*e;a=a&1}else a=0;return a|0}function GH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0;l=r;r=r+32|0;j=l+16|0;i=l;g=k[22967]|0;f=k[22976]|0;if((g|0)<(f|0)){e=g;d=k[22972]|0}else{h=f+20|0;f=k[22972]|0;do if(!f){f=uP(h*52|0)|0;k[22972]=f;if(!f){j=k[24528]|0;k[i>>2]=177960;k[i+4>>2]=552;k[i+8>>2]=178251;FN(j,177941,i)|0;Za(91696,1)}else{d=f;e=g}}else{f=xP(f,h*52|0)|0;k[22972]=f;if(!f){i=k[24528]|0;k[j>>2]=177960;k[j+4>>2]=558;k[j+8>>2]=178270;FN(i,177941,j)|0;Za(91696,1)}else{d=f;e=k[22967]|0;break}}while(0);k[22976]=h}k[22967]=e+1;j=d+(e*52|0)|0;k[j>>2]=0;k[d+(e*52|0)+4>>2]=a;k[d+(e*52|0)+8>>2]=b;k[d+(e*52|0)+16>>2]=0;k[d+(e*52|0)+20>>2]=b;k[d+(e*52|0)+24>>2]=c;k[d+(e*52|0)+32>>2]=0;k[d+(e*52|0)+36>>2]=c;k[d+(e*52|0)+40>>2]=a;k[d+(e*52|0)+48>>2]=0;k[d+(e*52|0)+12>>2]=j;k[d+(e*52|0)+28>>2]=j;k[d+(e*52|0)+44>>2]=j;r=l;return}function HH(a,b){a=a|0;b=b|0;var c=0.0,d=0,e=0,f=0.0,g=0.0,h=0,i=0.0,j=0;e=k[22972]|0;f=+p[b>>3];c=+p[b+8>>3];d=0;b=0;do{h=k[k[e+(a*52|0)+4+(d<<4)>>2]>>2]|0;j=k[k[e+(a*52|0)+4+(d<<4)+4>>2]>>2]|0;i=+p[j+8>>3];g=+p[j>>3];g=(+p[h+8>>3]-i)*(f-g)-(c-i)*(+p[h>>3]-g);b=(g<0.0&!(g>0.0)&1^1)+b|0;d=d+1|0}while((d|0)!=3);return ((b|0)==3|(b|0)==0)&1|0}function IH(a,b){a=a|0;b=b|0;var c=0,d=0;c=k[22972]|0;d=c+(a*52|0)|0;do if(!(k[d>>2]|0)){k[d>>2]=1;if((a|0)==(b|0))c=1;else{d=k[c+(a*52|0)+16>>2]|0;if(d){if(IH((d-c|0)/52|0,b)|0){c=1;break}c=k[22972]|0}d=k[c+(a*52|0)+32>>2]|0;if(d){if(IH((d-c|0)/52|0,b)|0){c=1;break}c=k[22972]|0}d=k[c+(a*52|0)+48>>2]|0;if(d){if(IH((d-c|0)/52|0,b)|0){c=1;break}c=k[22972]|0}k[c+(a*52|0)>>2]=0;c=0}}else c=0;while(0);return c|0}function JH(a){a=a|0;var b=0,c=0,d=0,e=0;e=r;r=r+32|0;d=e+16|0;c=e;if((k[22975]|0)<(a|0)){b=k[22973]|0;if(!b){d=uP(a<<4)|0;k[22973]=d;if(!d){d=k[24528]|0;k[c>>2]=177960;k[c+4>>2]=593;k[c+8>>2]=178214;FN(d,177941,c)|0;Za(91696,1)}}else{c=xP(b,a<<4)|0;k[22973]=c;if(!c){c=k[24528]|0;k[d>>2]=177960;k[d+4>>2]=599;k[d+8>>2]=178232;FN(c,177941,d)|0;Za(91696,1)}}k[22975]=a}r=e;return}function KH(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0.0,h=0,i=0.0,j=0,l=0;b=k[22974]|0;f=k[22969]|0;d=k[22970]|0;while(1){if((d|0)>=(b|0)){e=4;break}c=d+1|0;h=k[k[f+(c<<2)>>2]>>2]|0;l=k[k[f+(d<<2)>>2]>>2]|0;j=k[a>>2]|0;i=+p[l+8>>3];g=+p[l>>3];if((+p[h+8>>3]-i)*(+p[j>>3]-g)-(+p[j+8>>3]-i)*(+p[h>>3]-g)>0.0){b=d;break}else d=c}a:do if((e|0)==4){d=k[22971]|0;while(1){if((d|0)<=(b|0))break a;c=d+-1|0;l=k[k[f+(c<<2)>>2]>>2]|0;h=k[k[f+(d<<2)>>2]>>2]|0;j=k[a>>2]|0;g=+p[h+8>>3];i=+p[h>>3];i=(+p[l+8>>3]-g)*(+p[j>>3]-i)-(+p[j+8>>3]-g)*(+p[l>>3]-i);if(i<0.0&!(i>0.0)){b=d;break}else d=c}}while(0);return b|0}function LH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0.0,g=0.0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0.0;n=uP(c<<2)|0;o=uP((c<<3)+8|0)|0;q=o+8|0;r=(c|0)>0;if(r){IP(n|0,-1,c<<2|0)|0;e=0;do{p[q+(e<<3)>>3]=-2147483647.0;e=e+1|0}while((e|0)!=(c|0))}p[o>>3]=-2147483648.0;if((a|0)!=(b|0))do{j=q+(a<<3)|0;g=+p[j>>3];p[j>>3]=g==-2147483647.0?0.0:-g;if(r){l=d+(a<<2)|0;e=-1;m=0;do{i=q+(m<<3)|0;f=+p[i>>3];if(f<0.0){if((a|0)<(m|0))h=(k[d+(m<<2)>>2]|0)+(a<<3)|0;else h=(k[l>>2]|0)+(m<<3)|0;s=+p[h>>3];g=-(s+ +p[j>>3]);if(s!=0.0&f<g){p[i>>3]=g;k[n+(m<<2)>>2]=a;f=g}if(f>+p[q+(e<<3)>>3])e=m}m=m+1|0}while((m|0)!=(c|0));a=e}else a=-1}while((a|0)!=(b|0));vP(o);return n|0}function MH(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,l=0;i=r;r=r+32|0;j=i+16|0;l=i;h=k[g+4>>2]|0;k[l>>2]=k[a>>2];k[l+4>>2]=k[a+4>>2];k[l+8>>2]=k[a+8>>2];k[l+12>>2]=k[a+12>>2];k[j>>2]=k[d>>2];k[j+4>>2]=k[d+4>>2];k[j+8>>2]=k[d+8>>2];k[j+12>>2]=k[d+12>>2];if(!(VH(l,b,j,e,g)|0)){l=k[g+24>>2]|0;k[l+(h<<2)>>2]=f;j=h+1|0;k[l+(j<<2)>>2]=c;h=LH(j,h,h+2|0,l)|0}else{l=uP((h<<2)+8|0)|0;j=h+1|0;k[l+(h<<2)>>2]=j;k[l+(j<<2)>>2]=-1;h=l}r=i;return h|0}function NH(a,b){a=a|0;b=b|0;var c=0.0,d=0,e=0.0,f=0.0,g=0.0,h=0.0;c=+p[a+24>>3];if(!(c<1.0e-07&c>-1.0e-07)){g=+p[a+16>>3]/(c*3.0);e=+p[a+8>>3]/c;f=g*g;c=+p[a>>3]/c+(g*2.0*f-g*e);f=e/3.0-f;e=c*c;f=e+f*(f*(f*4.0));if(!(f<0.0)){e=(+X(+f)-c)*.5;h=+FM(e);c=h+ +FM(-c-e);p[b>>3]=c;if(f>0.0)a=1;else{h=c*-.5;p[b+16>>3]=h;p[b+8>>3]=h;a=3}}else{h=+da(+(+X(+-f)),+-c);f=+FM(+X(+(e-f))*.5)*2.0;c=f*+Z(+(h/3.0));p[b>>3]=c;e=f*+Z(+((h+3.141592653589793+3.141592653589793)/3.0));p[b+8>>3]=e;h=f*+Z(+((h+-3.141592653589793+-3.141592653589793)/3.0));p[b+16>>3]=h;a=3}p[b>>3]=c-g;if((a|0)!=1){d=1;do{p[b+(d<<3)>>3]=+p[b+(d<<3)>>3]-g;d=d+1|0}while((d|0)<(a|0))}}else a=OH(a,b)|0;return a|0}function OH(a,b){a=a|0;b=b|0;var c=0.0,d=0.0;c=+p[a+16>>3];do if(c<1.0e-07&c>-1.0e-07){d=+p[a+8>>3];c=+p[a>>3];if(d<1.0e-07&d>-1.0e-07){a=c<1.0e-07&c>-1.0e-07?4:0;break}else{p[b>>3]=-c/d;a=1;break}}else{d=+p[a+8>>3]/(c*2.0);c=d*d-+p[a>>3]/c;if(!(c<0.0))if(c==0.0){p[b>>3]=-d;a=1;break}else{c=+X(+c)-d;p[b>>3]=c;p[b+8>>3]=d*-2.0-c;a=2;break}else a=0}while(0);return a|0}function PH(a){a=a|0;vP(k[a>>2]|0);vP(a);return}function QH(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0;d=k[a+4>>2]|0;j=(d*3|0)+-2|0;c=k[22978]|0;if((j|0)>(k[22977]|0)){if(!c)c=uP(j<<4)|0;else c=xP(c,j<<4)|0;k[22978]=c;k[22977]=j;i=c;h=c}else{i=c;h=c}g=k[a>>2]|0;k[i>>2]=k[g>>2];k[i+4>>2]=k[g+4>>2];k[i+8>>2]=k[g+8>>2];k[i+12>>2]=k[g+12>>2];HP(i+16|0,g|0,16)|0;c=d+-1|0;if((c|0)>1){a=(c|0)>2?c:2;f=a*3|0;d=1;e=2;while(1){l=i+(e+2<<4)|0;m=i+(e+1<<4)|0;o=i+(e<<4)|0;n=g+(d<<4)|0;k[o>>2]=k[n>>2];k[o+4>>2]=k[n+4>>2];k[o+8>>2]=k[n+8>>2];k[o+12>>2]=k[n+12>>2];HP(m|0,n|0,16)|0;k[l>>2]=k[m>>2];k[l+4>>2]=k[m+4>>2];k[l+8>>2]=k[m+8>>2];k[l+12>>2]=k[m+12>>2];d=d+1|0;if((d|0)>=(c|0))break;else e=e+3|0}c=f+-1|0}else{a=1;c=2}n=i+(c<<4)|0;o=g+(a<<4)|0;k[n>>2]=k[o>>2];k[n+4>>2]=k[o+4>>2];k[n+8>>2]=k[o+8>>2];k[n+12>>2]=k[o+12>>2];HP(i+(c+1<<4)|0,o|0,16)|0;k[b+4>>2]=j;k[b>>2]=h;return}function RH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0;e=+p[b+8>>3];d=+p[b>>3];d=(+p[a+8>>3]-e)*(+p[c>>3]-d)-(+p[c+8>>3]-e)*(+p[a>>3]-d);return (d>.0001?1:(d<-.0001)<<31>>31)|0}function SH(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,g=0.0,h=0.0,i=0.0,j=0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0;m=+p[a+8>>3];n=+p[b+8>>3];k=m-n;o=+p[c>>3];l=+p[b>>3];i=+p[c+8>>3];h=+p[a>>3];f=h-l;g=k*(o-l)-(i-n)*f;c=g>.0001?1:(g<-.0001)<<31>>31;do if(!c)if(h!=l){if(o<l&h<o){b=1;break}if(l<o&o<h){b=1;break}else{j=7;break}}else{if(m<i&i<n){b=1;break}if(n<i&i<m){b=1;break}else{j=7;break}}else j=7;while(0);a:do if((j|0)==7){g=+p[d>>3];e=+p[d+8>>3];k=k*(g-l)-(e-n)*f;b=k>.0001?1:(k<-.0001)<<31>>31;do if(!b)if(h!=l){if(g<l&h<g){b=1;break a}if(l<g&g<h){b=1;break a}else break}else{if(m<e&e<n){b=1;break a}if(n<e&e<m){b=1;break a}else break}while(0);i=i-e;k=o-g;o=i*(h-g)-(m-e)*k;n=i*(l-g)-k*(n-e);b=((ha(n>.0001?1:(n<-.0001)<<31>>31,o>.0001?1:(o<-.0001)<<31>>31)|0)&(ha(b,c)|0))>>>31}while(0);return b|0}function TH(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,u=0.0,v=0.0,w=0.0;q=r;r=r+32|0;l=q+16|0;j=q;m=k[a+4>>2]|0;c=m<<2;n=uP(c+8|0)|0;b=wP(ha(m,m)|0,8)|0;e=(m|0)>0;if(e){d=0;while(1){k[n+(d<<2)>>2]=b;d=d+1|0;if((d|0)==(m|0))break;else b=b+(m<<3)|0}}g=n+c|0;k[g>>2]=0;k[g+4>>2]=0;k[a+24>>2]=n;g=k[a+8>>2]|0;h=k[a+16>>2]|0;f=k[a+20>>2]|0;if(e){e=0;do{s=k[f+(e<<2)>>2]|0;c=g+(e<<4)|0;d=g+(s<<4)|0;i[t>>0]=i[d>>0];i[t+1>>0]=i[d+1>>0];i[t+2>>0]=i[d+2>>0];i[t+3>>0]=i[d+3>>0];i[t+4>>0]=i[d+4>>0];i[t+5>>0]=i[d+5>>0];i[t+6>>0]=i[d+6>>0];i[t+7>>0]=i[d+7>>0];v=+p[t>>3];d=g+(s<<4)+8|0;i[t>>0]=i[d>>0];i[t+1>>0]=i[d+1>>0];i[t+2>>0]=i[d+2>>0];i[t+3>>0]=i[d+3>>0];i[t+4>>0]=i[d+4>>0];i[t+5>>0]=i[d+5>>0];i[t+6>>0]=i[d+6>>0];i[t+7>>0]=i[d+7>>0];u=+p[t>>3];i[t>>0]=i[c>>0];i[t+1>>0]=i[c+1>>0];i[t+2>>0]=i[c+2>>0];i[t+3>>0]=i[c+3>>0];i[t+4>>0]=i[c+4>>0];i[t+5>>0]=i[c+5>>0];i[t+6>>0]=i[c+6>>0];i[t+7>>0]=i[c+7>>0];w=+p[t>>3];d=g+(e<<4)+8|0;i[t>>0]=i[d>>0];i[t+1>>0]=i[d+1>>0];i[t+2>>0]=i[d+2>>0];i[t+3>>0]=i[d+3>>0];i[t+4>>0]=i[d+4>>0];i[t+5>>0]=i[d+5>>0];i[t+6>>0]=i[d+6>>0];i[t+7>>0]=i[d+7>>0];v=w-v;u=+p[t>>3]-u;u=+X(+(v*v+u*u));a=n+(e<<2)|0;p[(k[a>>2]|0)+(s<<3)>>3]=u;p[(k[n+(s<<2)>>2]|0)+(e<<3)>>3]=u;b=e+-1|0;b=(s|0)==(b|0)?e+-2|0:b;if((b|0)>-1)while(1){if(((WH(e,b,g,h,f)|0)!=0?(WH(b,e,g,h,f)|0)!=0:0)?(o=g+(b<<4)|0,k[j>>2]=k[c>>2],k[j+4>>2]=k[c+4>>2],k[j+8>>2]=k[c+8>>2],k[j+12>>2]=k[c+12>>2],k[l>>2]=k[o>>2],k[l+4>>2]=k[o+4>>2],k[l+8>>2]=k[o+8>>2],k[l+12>>2]=k[o+12>>2],(XH(j,l,m,m,m,g,h)|0)!=0):0){i[t>>0]=i[o>>0];i[t+1>>0]=i[o+1>>0];i[t+2>>0]=i[o+2>>0];i[t+3>>0]=i[o+3>>0];i[t+4>>0]=i[o+4>>0];i[t+5>>0]=i[o+5>>0];i[t+6>>0]=i[o+6>>0];i[t+7>>0]=i[o+7>>0];v=+p[t>>3];s=g+(b<<4)+8|0;i[t>>0]=i[s>>0];i[t+1>>0]=i[s+1>>0];i[t+2>>0]=i[s+2>>0];i[t+3>>0]=i[s+3>>0];i[t+4>>0]=i[s+4>>0];i[t+5>>0]=i[s+5>>0];i[t+6>>0]=i[s+6>>0];i[t+7>>0]=i[s+7>>0];w=+p[t>>3];i[t>>0]=i[c>>0];i[t+1>>0]=i[c+1>>0];i[t+2>>0]=i[c+2>>0];i[t+3>>0]=i[c+3>>0];i[t+4>>0]=i[c+4>>0];i[t+5>>0]=i[c+5>>0];i[t+6>>0]=i[c+6>>0];i[t+7>>0]=i[c+7>>0];u=+p[t>>3];i[t>>0]=i[d>>0];i[t+1>>0]=i[d+1>>0];i[t+2>>0]=i[d+2>>0];i[t+3>>0]=i[d+3>>0];i[t+4>>0]=i[d+4>>0];i[t+5>>0]=i[d+5>>0];i[t+6>>0]=i[d+6>>0];i[t+7>>0]=i[d+7>>0];v=u-v;w=+p[t>>3]-w;w=+X(+(v*v+w*w));p[(k[a>>2]|0)+(b<<3)>>3]=w;p[(k[n+(b<<2)>>2]|0)+(e<<3)>>3]=w}if((b|0)>0)b=b+-1|0;else break}e=e+1|0}while((e|0)!=(m|0))}r=q;return}function UH(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0;y=r;r=r+80|0;x=y+48|0;v=y+32|0;m=y+64|0;l=y;w=y+16|0;n=k[a+4>>2]|0;j=a+8|0;q=k[j>>2]|0;s=k[a+16>>2]|0;u=k[a+20>>2]|0;o=uP((n<<3)+16|0)|0;if((b|0)==-2222){k[l>>2]=k[c>>2];k[l+4>>2]=k[c+4>>2];k[l+8>>2]=k[c+8>>2];k[l+12>>2]=k[c+12>>2];d=a+12|0;g=m+4|0;b=0;while(1){if((b|0)>=(k[a>>2]|0)){b=-1111;break}A=k[d>>2]|0;z=k[A+(b<<2)>>2]|0;k[m>>2]=(k[j>>2]|0)+(z<<4);h=b+1|0;k[g>>2]=(k[A+(h<<2)>>2]|0)-z;k[v>>2]=k[m>>2];k[v+4>>2]=k[m+4>>2];k[x>>2]=k[l>>2];k[x+4>>2]=k[l+4>>2];k[x+8>>2]=k[l+8>>2];k[x+12>>2]=k[l+12>>2];if(!(AH(v,x)|0))b=h;else break}}if((b|0)>-1){h=k[a+12>>2]|0;j=k[h+(b+1<<2)>>2]|0;h=k[h+(b<<2)>>2]|0}else{j=n;h=n}if((h|0)>0){b=c+8|0;d=w+8|0;g=0;do{A=q+(g<<4)|0;k[w>>2]=k[A>>2];k[w+4>>2]=k[A+4>>2];k[w+8>>2]=k[A+8>>2];k[w+12>>2]=k[A+12>>2];A=k[u+(g<<2)>>2]|0;z=k[s+(g<<2)>>2]|0;a=q+(z<<4)|0;i[t>>0]=i[a>>0];i[t+1>>0]=i[a+1>>0];i[t+2>>0]=i[a+2>>0];i[t+3>>0]=i[a+3>>0];i[t+4>>0]=i[a+4>>0];i[t+5>>0]=i[a+5>>0];i[t+6>>0]=i[a+6>>0];i[t+7>>0]=i[a+7>>0];G=+p[t>>3];z=q+(z<<4)+8|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];B=+p[t>>3];z=q+(A<<4)|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];D=+p[t>>3];A=q+(A<<4)+8|0;i[t>>0]=i[A>>0];i[t+1>>0]=i[A+1>>0];i[t+2>>0]=i[A+2>>0];i[t+3>>0]=i[A+3>>0];i[t+4>>0]=i[A+4>>0];i[t+5>>0]=i[A+5>>0];i[t+6>>0]=i[A+6>>0];i[t+7>>0]=i[A+7>>0];F=+p[t>>3];e=+p[b>>3];C=+p[w>>3];E=+p[d>>3];f=+p[c>>3];H=(e-F)*(C-D)-(E-F)*(f-D);A=H>.0001?1:(H<-.0001)<<31>>31;e=e-E;G=G-C;B=B-E;f=f-C;H=G*e-B*f;z=H>.0001?1:(H<-.0001)<<31>>31;if(((G*(F-E)-(D-C)*B>.0001?z|A:z&A)|0)>=0?(k[v>>2]=k[c>>2],k[v+4>>2]=k[c+4>>2],k[v+8>>2]=k[c+8>>2],k[v+12>>2]=k[c+12>>2],k[x>>2]=k[w>>2],k[x+4>>2]=k[w+4>>2],k[x+8>>2]=k[w+8>>2],k[x+12>>2]=k[w+12>>2],(XH(v,x,h,j,n,q,s)|0)!=0):0){H=+X(+(e*e+f*f));p[o+(g<<3)>>3]=H}else p[o+(g<<3)>>3]=0.0;g=g+1|0}while((g|0)!=(h|0))}if((h|0)<(j|0)){A=h<<3;IP(o+A|0,0,(j<<3)-A|0)|0}if((j|0)<(n|0)){b=c+8|0;d=w+8|0;g=j;do{A=q+(g<<4)|0;k[w>>2]=k[A>>2];k[w+4>>2]=k[A+4>>2];k[w+8>>2]=k[A+8>>2];k[w+12>>2]=k[A+12>>2];A=k[u+(g<<2)>>2]|0;z=k[s+(g<<2)>>2]|0;a=q+(z<<4)|0;i[t>>0]=i[a>>0];i[t+1>>0]=i[a+1>>0];i[t+2>>0]=i[a+2>>0];i[t+3>>0]=i[a+3>>0];i[t+4>>0]=i[a+4>>0];i[t+5>>0]=i[a+5>>0];i[t+6>>0]=i[a+6>>0];i[t+7>>0]=i[a+7>>0];C=+p[t>>3];z=q+(z<<4)+8|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];H=+p[t>>3];z=q+(A<<4)|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];F=+p[t>>3];A=q+(A<<4)+8|0;i[t>>0]=i[A>>0];i[t+1>>0]=i[A+1>>0];i[t+2>>0]=i[A+2>>0];i[t+3>>0]=i[A+3>>0];i[t+4>>0]=i[A+4>>0];i[t+5>>0]=i[A+5>>0];i[t+6>>0]=i[A+6>>0];i[t+7>>0]=i[A+7>>0];D=+p[t>>3];e=+p[b>>3];G=+p[w>>3];E=+p[d>>3];f=+p[c>>3];B=(e-D)*(G-F)-(E-D)*(f-F);A=B>.0001?1:(B<-.0001)<<31>>31;e=e-E;C=C-G;H=H-E;f=f-G;B=C*e-H*f;z=B>.0001?1:(B<-.0001)<<31>>31;if(((C*(D-E)-(F-G)*H>.0001?z|A:z&A)|0)>=0?(k[v>>2]=k[c>>2],k[v+4>>2]=k[c+4>>2],k[v+8>>2]=k[c+8>>2],k[v+12>>2]=k[c+12>>2],k[x>>2]=k[w>>2],k[x+4>>2]=k[w+4>>2],k[x+8>>2]=k[w+8>>2],k[x+12>>2]=k[w+12>>2],(XH(v,x,h,j,n,q,s)|0)!=0):0){H=+X(+(e*e+f*f));p[o+(g<<3)>>3]=H}else p[o+(g<<3)>>3]=0.0;g=g+1|0}while((g|0)!=(n|0))}p[o+(n<<3)>>3]=0.0;p[o+(n+1<<3)>>3]=0.0;r=y;return o|0}function VH(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0;s=r;r=r+64|0;j=s+48|0;i=s+32|0;p=s+16|0;o=s;l=k[e+4>>2]|0;m=k[e+8>>2]|0;n=k[e+16>>2]|0;f=(d|0)<0;a:do if((b|0)<0)if(f){f=0;q=11}else{g=k[e+12>>2]|0;e=0;f=k[g+(d+1<<2)>>2]|0;g=k[g+(d<<2)>>2]|0;q=8}else{if(f){g=k[e+12>>2]|0;e=0;f=k[g+(b+1<<2)>>2]|0;g=k[g+(b<<2)>>2]|0;q=8;break}t=(b|0)>(d|0);e=k[e+12>>2]|0;g=k[e+(d<<2)>>2]|0;f=k[e+(b<<2)>>2]|0;h=t?g:f;g=t?f:g;f=k[e+((t?b:d)+1<<2)>>2]|0;e=k[e+((t?d:b)+1<<2)>>2]|0;if((h|0)>0){b=0;while(1){d=m+(b<<4)|0;t=m+(k[n+(b<<2)>>2]<<4)|0;k[o>>2]=k[a>>2];k[o+4>>2]=k[a+4>>2];k[o+8>>2]=k[a+8>>2];k[o+12>>2]=k[a+12>>2];k[p>>2]=k[c>>2];k[p+4>>2]=k[c+4>>2];k[p+8>>2]=k[c+8>>2];k[p+12>>2]=k[c+12>>2];k[i>>2]=k[d>>2];k[i+4>>2]=k[d+4>>2];k[i+8>>2]=k[d+8>>2];k[i+12>>2]=k[d+12>>2];k[j>>2]=k[t>>2];k[j+4>>2]=k[t+4>>2];k[j+8>>2]=k[t+8>>2];k[j+12>>2]=k[t+12>>2];b=b+1|0;if(SH(o,p,i,j)|0){f=0;break a}if((b|0)>=(h|0)){q=8;break}}}else q=8}while(0);b:do if((q|0)==8)if((e|0)<(g|0))while(1){d=m+(e<<4)|0;t=m+(k[n+(e<<2)>>2]<<4)|0;k[o>>2]=k[a>>2];k[o+4>>2]=k[a+4>>2];k[o+8>>2]=k[a+8>>2];k[o+12>>2]=k[a+12>>2];k[p>>2]=k[c>>2];k[p+4>>2]=k[c+4>>2];k[p+8>>2]=k[c+8>>2];k[p+12>>2]=k[c+12>>2];k[i>>2]=k[d>>2];k[i+4>>2]=k[d+4>>2];k[i+8>>2]=k[d+8>>2];k[i+12>>2]=k[d+12>>2];k[j>>2]=k[t>>2];k[j+4>>2]=k[t+4>>2];k[j+8>>2]=k[t+8>>2];k[j+12>>2]=k[t+12>>2];e=e+1|0;if(SH(o,p,i,j)|0){f=0;break b}if((e|0)>=(g|0)){q=11;break}}else q=11;while(0);c:do if((q|0)==11)if((f|0)<(l|0))while(1){q=m+(f<<4)|0;t=m+(k[n+(f<<2)>>2]<<4)|0;k[o>>2]=k[a>>2];k[o+4>>2]=k[a+4>>2];k[o+8>>2]=k[a+8>>2];k[o+12>>2]=k[a+12>>2];k[p>>2]=k[c>>2];k[p+4>>2]=k[c+4>>2];k[p+8>>2]=k[c+8>>2];k[p+12>>2]=k[c+12>>2];k[i>>2]=k[q>>2];k[i+4>>2]=k[q+4>>2];k[i+8>>2]=k[q+8>>2];k[i+12>>2]=k[q+12>>2];k[j>>2]=k[t>>2];k[j+4>>2]=k[t+4>>2];k[j+8>>2]=k[t+8>>2];k[j+12>>2]=k[t+12>>2];f=f+1|0;if(SH(o,p,i,j)|0){f=0;break c}if((f|0)>=(l|0)){f=1;break}}else f=1;while(0);r=s;return f|0}function WH(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0.0,g=0.0,h=0.0,j=0.0,l=0.0,m=0.0,n=0.0,o=0.0,q=0.0,r=0;e=k[e+(a<<2)>>2]|0;d=k[d+(a<<2)>>2]|0;r=c+(b<<4)|0;i[t>>0]=i[r>>0];i[t+1>>0]=i[r+1>>0];i[t+2>>0]=i[r+2>>0];i[t+3>>0]=i[r+3>>0];i[t+4>>0]=i[r+4>>0];i[t+5>>0]=i[r+5>>0];i[t+6>>0]=i[r+6>>0];i[t+7>>0]=i[r+7>>0];n=+p[t>>3];b=c+(b<<4)+8|0;i[t>>0]=i[b>>0];i[t+1>>0]=i[b+1>>0];i[t+2>>0]=i[b+2>>0];i[t+3>>0]=i[b+3>>0];i[t+4>>0]=i[b+4>>0];i[t+5>>0]=i[b+5>>0];i[t+6>>0]=i[b+6>>0];i[t+7>>0]=i[b+7>>0];o=+p[t>>3];b=c+(d<<4)|0;i[t>>0]=i[b>>0];i[t+1>>0]=i[b+1>>0];i[t+2>>0]=i[b+2>>0];i[t+3>>0]=i[b+3>>0];i[t+4>>0]=i[b+4>>0];i[t+5>>0]=i[b+5>>0];i[t+6>>0]=i[b+6>>0];i[t+7>>0]=i[b+7>>0];m=+p[t>>3];d=c+(d<<4)+8|0;i[t>>0]=i[d>>0];i[t+1>>0]=i[d+1>>0];i[t+2>>0]=i[d+2>>0];i[t+3>>0]=i[d+3>>0];i[t+4>>0]=i[d+4>>0];i[t+5>>0]=i[d+5>>0];i[t+6>>0]=i[d+6>>0];i[t+7>>0]=i[d+7>>0];h=+p[t>>3];d=c+(a<<4)|0;i[t>>0]=i[d>>0];i[t+1>>0]=i[d+1>>0];i[t+2>>0]=i[d+2>>0];i[t+3>>0]=i[d+3>>0];i[t+4>>0]=i[d+4>>0];i[t+5>>0]=i[d+5>>0];i[t+6>>0]=i[d+6>>0];i[t+7>>0]=i[d+7>>0];f=+p[t>>3];d=c+(a<<4)+8|0;i[t>>0]=i[d>>0];i[t+1>>0]=i[d+1>>0];i[t+2>>0]=i[d+2>>0];i[t+3>>0]=i[d+3>>0];i[t+4>>0]=i[d+4>>0];i[t+5>>0]=i[d+5>>0];i[t+6>>0]=i[d+6>>0];i[t+7>>0]=i[d+7>>0];j=+p[t>>3];d=c+(e<<4)|0;i[t>>0]=i[d>>0];i[t+1>>0]=i[d+1>>0];i[t+2>>0]=i[d+2>>0];i[t+3>>0]=i[d+3>>0];i[t+4>>0]=i[d+4>>0];i[t+5>>0]=i[d+5>>0];i[t+6>>0]=i[d+6>>0];i[t+7>>0]=i[d+7>>0];g=+p[t>>3];e=c+(e<<4)+8|0;i[t>>0]=i[e>>0];i[t+1>>0]=i[e+1>>0];i[t+2>>0]=i[e+2>>0];i[t+3>>0]=i[e+3>>0];i[t+4>>0]=i[e+4>>0];i[t+5>>0]=i[e+5>>0];i[t+6>>0]=i[e+6>>0];i[t+7>>0]=i[e+7>>0];l=+p[t>>3];q=(f-g)*(o-l)-(n-g)*(j-l);e=q>.0001?1:(q<-.0001)<<31>>31;m=m-f;h=h-j;n=m*(o-j)-(n-f)*h;c=n>.0001?1:(n<-.0001)<<31>>31;return (m*(l-j)-h*(g-f)>.0001?e|c:e&c)>>>31^1|0}function XH(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0;o=r;r=r+64|0;j=o+48|0;i=o+32|0;m=o+16|0;l=o;a:do if((c|0)>0){h=0;while(1){q=f+(h<<4)|0;p=f+(k[g+(h<<2)>>2]<<4)|0;k[l>>2]=k[a>>2];k[l+4>>2]=k[a+4>>2];k[l+8>>2]=k[a+8>>2];k[l+12>>2]=k[a+12>>2];k[m>>2]=k[b>>2];k[m+4>>2]=k[b+4>>2];k[m+8>>2]=k[b+8>>2];k[m+12>>2]=k[b+12>>2];k[i>>2]=k[q>>2];k[i+4>>2]=k[q+4>>2];k[i+8>>2]=k[q+8>>2];k[i+12>>2]=k[q+12>>2];k[j>>2]=k[p>>2];k[j+4>>2]=k[p+4>>2];k[j+8>>2]=k[p+8>>2];k[j+12>>2]=k[p+12>>2];h=h+1|0;if(SH(l,m,i,j)|0){d=0;break a}if((h|0)>=(c|0)){n=3;break}}}else n=3;while(0);b:do if((n|0)==3)if((d|0)<(e|0))while(1){p=f+(d<<4)|0;q=f+(k[g+(d<<2)>>2]<<4)|0;k[l>>2]=k[a>>2];k[l+4>>2]=k[a+4>>2];k[l+8>>2]=k[a+8>>2];k[l+12>>2]=k[a+12>>2];k[m>>2]=k[b>>2];k[m+4>>2]=k[b+4>>2];k[m+8>>2]=k[b+8>>2];k[m+12>>2]=k[b+12>>2];k[i>>2]=k[p>>2];k[i+4>>2]=k[p+4>>2];k[i+8>>2]=k[p+8>>2];k[i+12>>2]=k[p+12>>2];k[j>>2]=k[q>>2];k[j+4>>2]=k[q+4>>2];k[j+8>>2]=k[q+8>>2];k[j+12>>2]=k[q+12>>2];d=d+1|0;if(SH(l,m,i,j)|0){d=0;break b}if((d|0)>=(e|0)){d=1;break}}else d=1;while(0);r=o;return d|0}function YH(a){a=a|0;return hI(a,0,0,0)|0}function ZH(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0;if(a){e=a+368|0;h=a+20|0;b=k[a+364>>2]|0;while(1){if(!b){b=k[e>>2]|0;if(!b)break;k[e>>2]=0}d=k[b>>2]|0;Nb[k[h>>2]&127](k[b+36>>2]|0);c=k[b+44>>2]|0;if(c)do{f=c;c=k[c+4>>2]|0;Nb[k[h>>2]&127](k[f+16>>2]|0);Nb[k[h>>2]&127](f)}while((c|0)!=0);Nb[k[h>>2]&127](b);b=d}c=a+304|0;b=k[a+300>>2]|0;while(1){if(!b){b=k[c>>2]|0;if(!b)break;k[c>>2]=0}f=k[b+8>>2]|0;Nb[k[h>>2]&127](b);b=f}b=k[a+376>>2]|0;if(b)do{f=b;b=k[b+4>>2]|0;Nb[k[h>>2]&127](k[f+16>>2]|0);Nb[k[h>>2]&127](f)}while((b|0)!=0);b=k[a+372>>2]|0;if(b)do{f=b;b=k[b+4>>2]|0;Nb[k[h>>2]&127](k[f+16>>2]|0);Nb[k[h>>2]&127](f)}while((b|0)!=0);oI(a+416|0);oI(a+440|0);if((i[a+488>>0]|0)==0?(g=k[a+356>>2]|0,(g|0)!=0):0){d=(k[a+476>>2]|0)==0;e=g+20|0;b=k[e>>2]|0;c=k[g+28>>2]|0;f=b+(c<<2)|0;if(c)do{c=k[b>>2]|0;b=b+4|0;if((c|0)!=0?(k[c+16>>2]|0)!=0:0)Nb[k[h>>2]&127](k[c+20>>2]|0)}while((b|0)!=(f|0));pI(g);pI(g+132|0);pI(e);pI(g+40|0);pI(g+60|0);oI(g+80|0);oI(g+104|0);if(d){Nb[k[h>>2]&127](k[g+184>>2]|0);Nb[k[h>>2]&127](k[g+164>>2]|0)}Nb[k[h>>2]&127](g)}Nb[k[h>>2]&127](k[a+392>>2]|0);Nb[k[h>>2]&127](k[a+464>>2]|0);Nb[k[h>>2]&127](k[a+8>>2]|0);Nb[k[h>>2]&127](k[a+44>>2]|0);Nb[k[h>>2]&127](k[a+396>>2]|0);Nb[k[h>>2]&127](k[a+240>>2]|0);b=k[a+252>>2]|0;if(b)Nb[b&127](k[a+244>>2]|0);Nb[k[h>>2]&127](a)}return}function _H(a,b){a=a|0;b=b|0;var c=0,d=0;c=a+4|0;d=(k[c>>2]|0)==(k[a>>2]|0);k[a>>2]=b;if(d)k[c>>2]=b;return}function $H(a,b,c){a=a|0;b=b|0;c=c|0;k[a+52>>2]=b;k[a+56>>2]=c;return}function aI(a,b){a=a|0;b=b|0;k[a+60>>2]=b;return}function bI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;g=a+480|0;switch(k[g>>2]|0){case 3:{k[a+284>>2]=33;e=0;break}case 2:{k[a+284>>2]=36;e=0;break}case 0:{if((k[a+476>>2]|0)==0?(qI(a)|0)<<24>>24==0:0){k[a+284>>2]=1;e=0}else f=7;break}default:f=7}a:do if((f|0)==7){k[g>>2]=1;if(c){e=cI(a,c)|0;if(!e){e=0;break}GP(e|0,b|0,c|0)|0;e=dI(a,c,d)|0;break}i[a+484>>0]=d;if(!d)e=1;else{e=a+24|0;b=k[e>>2]|0;d=a+296|0;k[d>>2]=b;f=k[a+28>>2]|0;k[a+40>>2]=f;c=a+280|0;f=cc[k[c>>2]&127](a,b,f,e)|0;k[a+284>>2]=f;if(f){k[a+292>>2]=k[a+288>>2];k[c>>2]=56;e=0;break}switch(k[g>>2]|0){case 3:{g=k[a+144>>2]|0;hc[k[g+52>>2]&31](g,k[d>>2]|0,k[e>>2]|0,a+408|0);k[d>>2]=k[e>>2];e=2;break a}case 1:case 0:{k[g>>2]=2;e=1;break a}default:{e=1;break a}}}}while(0);return e|0}function cI(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;a:do switch(k[a+480>>2]|0){case 3:{k[a+284>>2]=33;c=0;break}case 2:{k[a+284>>2]=36;c=0;break}default:{o=a+32|0;l=k[o>>2]|0;q=a+28|0;c=k[q>>2]|0;m=l;d=c;if((m-d|0)<(b|0)){p=a+24|0;i=k[p>>2]|0;j=i;e=d-j|0;n=a+8|0;f=k[n>>2]|0;r=f;g=j-r|0;h=(g|0)>1024;d=h?1024:g;b=e+b+d|0;do if((b|0)>(m-r|0)){c=(l|0)==(i|0)?1024:m-j|0;do c=c<<1;while((c|0)<(b|0));d=Rb[k[a+12>>2]&63](c)|0;if(!d){k[a+284>>2]=1;c=0;break a}k[o>>2]=d+c;c=k[p>>2]|0;if(!c){c=d+(k[q>>2]|0)|0;k[q>>2]=c;k[n>>2]=d;k[p>>2]=d;break}else{o=c;r=o-(k[n>>2]|0)|0;r=(r|0)>1024?1024:r;GP(d|0,c+(0-r)|0,(k[q>>2]|0)-o+r|0)|0;Nb[k[a+20>>2]&127](k[n>>2]|0);k[n>>2]=d;c=d+((k[q>>2]|0)+r-(k[p>>2]|0))|0;k[q>>2]=c;k[p>>2]=d+r;break}}else if(h){r=g-d|0;HP(f|0,f+r|0,d+e|0)|0;r=0-r|0;c=(k[q>>2]|0)+r|0;k[q>>2]=c;k[p>>2]=(k[p>>2]|0)+r}while(0);k[a+292>>2]=0;k[a+288>>2]=0;k[a+296>>2]=0}}}while(0);return c|0}function dI(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0;e=a+480|0;switch(k[e>>2]|0){case 3:{k[a+284>>2]=33;b=0;break}case 2:{k[a+284>>2]=36;b=0;break}case 0:{if((k[a+476>>2]|0)==0?(qI(a)|0)<<24>>24==0:0){k[a+284>>2]=1;b=0}else d=7;break}default:d=7}a:do if((d|0)==7){k[e>>2]=1;d=a+24|0;h=k[d>>2]|0;f=a+296|0;k[f>>2]=h;j=a+28|0;g=(k[j>>2]|0)+b|0;k[j>>2]=g;k[a+40>>2]=g;j=a+36|0;k[j>>2]=(k[j>>2]|0)+b;i[a+484>>0]=c;b=a+280|0;g=cc[k[b>>2]&127](a,h,g,d)|0;k[a+284>>2]=g;if(g){k[a+292>>2]=k[a+288>>2];k[b>>2]=56;b=0;break}switch(k[e>>2]|0){case 3:{b=2;break}case 1:case 0:{if(!c)b=1;else{k[e>>2]=2;b=1;break a}break}default:b=1}j=k[a+144>>2]|0;hc[k[j+52>>2]&31](j,k[f>>2]|0,k[d>>2]|0,a+408|0);k[f>>2]=k[d>>2]}while(0);return b|0}function eI(a){a=a|0;return k[a+284>>2]|0}function fI(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;b=a+288|0;c=k[b>>2]|0;if((c|0)!=0?(d=a+296|0,e=k[d>>2]|0,c>>>0>=e>>>0):0){f=k[a+144>>2]|0;hc[k[f+52>>2]&31](f,e,c,a+408|0);k[d>>2]=k[b>>2]}return (k[a+408>>2]|0)+1|0}function gI(a){a=a|0;if((a+-1|0)>>>0<40)a=k[91916+(a<<2)>>2]|0;else a=0;return a|0}function hI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;if(!b){e=uP(500)|0;if(!e)b=6;else{k[e+12>>2]=33;k[e+16>>2]=102;k[e+20>>2]=95;b=7}}else{e=Rb[k[b>>2]&63](500)|0;if(!e)b=6;else{k[e+12>>2]=k[b>>2];k[e+16>>2]=k[b+4>>2];k[e+20>>2]=k[b+8>>2];b=7}}if((b|0)==6)if(!e)e=0;else b=7;a:do if((b|0)==7){k[e+8>>2]=0;k[e+32>>2]=0;k[e+380>>2]=16;h=e+12|0;g=Rb[k[h>>2]&63](256)|0;f=e+392|0;k[f>>2]=g;if(!g){Nb[k[e+20>>2]&127](e);e=0;break}b=Rb[k[h>>2]&63](1024)|0;g=e+44|0;k[g>>2]=b;if(!b){c=e+20|0;Nb[k[c>>2]&127](k[f>>2]|0);Nb[k[c>>2]&127](e);e=0;break}k[e+48>>2]=b+1024;do if(!d){b=Rb[k[h>>2]&63](188)|0;if(!b){k[e+356>>2]=0;c=e+20|0;Nb[k[c>>2]&127](k[g>>2]|0);Nb[k[c>>2]&127](k[f>>2]|0);Nb[k[c>>2]&127](e);e=0;break a}else{d=b+80|0;k[d>>2]=0;k[d+4>>2]=0;k[d+8>>2]=0;k[d+12>>2]=0;k[d+16>>2]=0;k[b+100>>2]=h;d=b+104|0;k[d>>2]=0;k[d+4>>2]=0;k[d+8>>2]=0;k[d+12>>2]=0;k[d+16>>2]=0;k[b+124>>2]=h;i[b+4>>0]=0;k[b+8>>2]=0;k[b+12>>2]=0;k[b>>2]=0;k[b+16>>2]=h;i[b+24>>0]=0;k[b+28>>2]=0;k[b+32>>2]=0;k[b+20>>2]=0;k[b+36>>2]=h;i[b+44>>0]=0;k[b+48>>2]=0;k[b+52>>2]=0;k[b+40>>2]=0;k[b+56>>2]=h;i[b+64>>0]=0;k[b+68>>2]=0;k[b+72>>2]=0;k[b+60>>2]=0;k[b+76>>2]=h;i[b+131>>0]=0;i[b+136>>0]=0;k[b+140>>2]=0;k[b+144>>2]=0;k[b+132>>2]=0;k[b+148>>2]=h;k[b+152>>2]=0;k[b+156>>2]=0;i[b+160>>0]=0;d=b+164|0;k[d>>2]=0;k[d+4>>2]=0;k[d+8>>2]=0;k[d+12>>2]=0;k[d+16>>2]=0;k[d+20>>2]=0;i[b+128>>0]=1;i[b+129>>0]=0;i[b+130>>0]=0;k[e+356>>2]=b;break}}else k[e+356>>2]=d;while(0);k[e+376>>2]=0;k[e+368>>2]=0;k[e+304>>2]=0;k[e+468>>2]=0;k[e+464>>2]=0;k[e+124>>2]=0;k[e+248>>2]=0;b=e+472|0;i[b>>0]=33;f=e+236|0;i[f>>0]=0;i[e+237>>0]=0;k[e+396>>2]=0;k[e+400>>2]=0;i[e+404>>0]=0;d=e+416|0;k[d>>2]=0;k[d+4>>2]=0;k[d+8>>2]=0;k[d+12>>2]=0;k[d+16>>2]=0;k[e+436>>2]=h;d=e+440|0;k[d>>2]=0;k[d+4>>2]=0;k[d+8>>2]=0;k[d+12>>2]=0;k[d+16>>2]=0;k[e+460>>2]=h;jI(e,a);if((a|0)!=0?(k[e+232>>2]|0)==0:0){ZH(e);e=0;break}if(!c){c=bJ()|0;k[e+228>>2]=c;break}else{i[f>>0]=1;a=eJ()|0;k[e+228>>2]=a;i[b>>0]=i[c>>0]|0;break}}while(0);return e|0}function iI(a){a=a|0;var b=0,c=0,d=0,e=0;e=a+4|0;c=k[e>>2]|0;b=k[a>>2]|0;if(c){if(b){while(1){d=k[b>>2]|0;k[b>>2]=c;if(!d)break;else{c=b;b=d}}k[e>>2]=b}}else k[e>>2]=b;k[a>>2]=0;k[a+16>>2]=0;k[a+12>>2]=0;k[a+8>>2]=0;return}function jI(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;k[a+280>>2]=57;ZK(a+256|0);if(!b)b=0;else b=kI(a+416|0,b)|0;k[a+232>>2]=b;k[a+360>>2]=0;cJ(a+148|0,a+144|0,0)|0;k[a>>2]=0;k[a+4>>2]=0;b=a+116|0;d=a+52|0;e=d+64|0;do{k[d>>2]=0;d=d+4|0}while((d|0)<(e|0));k[b>>2]=a;k[a+120>>2]=0;b=a+128|0;k[b>>2]=0;k[b+4>>2]=0;k[b+8>>2]=0;k[b+12>>2]=0;b=k[a+8>>2]|0;k[a+24>>2]=b;k[a+28>>2]=b;k[a+36>>2]=0;k[a+40>>2]=0;b=a+316|0;d=a+408|0;k[d>>2]=0;k[d+4>>2]=0;d=a+284|0;c=a+308|0;k[d>>2]=0;k[d+4>>2]=0;k[d+8>>2]=0;k[d+12>>2]=0;k[d+16>>2]=0;d=b;e=d+36|0;do{k[d>>2]=0;d=d+4|0}while((d|0)<(e|0));j[b+36>>1]=0;i[c>>0]=1;k[a+312>>2]=0;k[a+364>>2]=0;k[a+372>>2]=0;k[a+384>>2]=0;k[a+240>>2]=0;k[a+252>>2]=0;k[a+244>>2]=0;k[a+476>>2]=0;k[a+480>>2]=0;i[a+488>>0]=0;i[a+489>>0]=0;k[a+492>>2]=0;k[a+496>>2]=0;return}function kI(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;d=a+12|0;e=a+8|0;while(1){c=k[d>>2]|0;if((c|0)==(k[e>>2]|0)){if(!((mI(a)|0)<<24>>24)){b=0;break}c=k[d>>2]|0}g=i[b>>0]|0;k[d>>2]=c+1;i[c>>0]=g;if(!(i[b>>0]|0)){f=6;break}else b=b+1|0}if((f|0)==6){g=a+16|0;b=k[g>>2]|0;k[g>>2]=k[d>>2]}return b|0}function lI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;A=b+8|0;r=k[A>>2]|0;a:do if(!r)if(!d)e=0;else{i[b+4>>0]=6;k[A>>2]=64;g=b+16|0;e=Rb[k[k[g>>2]>>2]&63](256)|0;k[b>>2]=e;if(!e){k[A>>2]=0;e=0;break}IP(e|0,0,256)|0;a=k[a+496>>2]|0;e=i[c>>0]|0;if(e<<24>>24){f=c;do{f=f+1|0;a=a*1000003^e&255;e=i[f>>0]|0}while(e<<24>>24!=0)}e=g;f=b;a=(k[A>>2]|0)+-1&a;x=35}else{z=a+496|0;e=k[z>>2]|0;q=i[c>>0]|0;if(!(q<<24>>24))y=e;else{a=c;f=q;do{a=a+1|0;e=e*1000003^f&255;f=i[a>>0]|0}while(f<<24>>24!=0);y=e}f=r+-1|0;a=f&y;n=k[b>>2]|0;e=k[n+(a<<2)>>2]|0;if(e){o=y&0-r;p=b+4|0;m=f>>>2;f=0;do{g=k[e>>2]|0;if(q<<24>>24==(i[g>>0]|0)){j=c;h=q;do{if(!(h<<24>>24))break a;j=j+1|0;g=g+1|0;h=i[j>>0]|0}while(h<<24>>24==(i[g>>0]|0))}if(!(f<<24>>24))f=(o>>>((l[p>>0]|0)+-1|0)&m|1)&255;e=f&255;a=a-e+(a>>>0<e>>>0?r:0)|0;e=k[n+(a<<2)>>2]|0}while((e|0)!=0)}if(d){t=b+4|0;e=l[t>>0]|0;if(!((k[b+12>>2]|0)>>>(e+-1|0))){e=b+16|0;f=b;x=35;break}r=e+1|0;q=r&255;r=r&255;u=1<<r;s=u+-1|0;e=u<<2;v=b+16|0;w=Rb[k[k[v>>2]>>2]&63](e)|0;if(w){IP(w|0,0,e|0)|0;j=k[A>>2]|0;if(j){m=0-u|0;n=r+-1|0;o=s>>>2;p=0;do{e=k[(k[b>>2]|0)+(p<<2)>>2]|0;h=e;if(e){e=k[e>>2]|0;a=k[z>>2]|0;f=i[e>>0]|0;if(f<<24>>24)do{e=e+1|0;a=a*1000003^f&255;f=i[e>>0]|0}while(f<<24>>24!=0);f=a&s;e=w+(f<<2)|0;if(k[e>>2]|0){g=((a&m)>>>n&o|1)&255;a=0;do{a=a<<24>>24==0?g:a;e=a&255;f=f+(f>>>0<e>>>0?u:0)-e|0;e=w+(f<<2)|0}while((k[e>>2]|0)!=0)}k[e>>2]=h}p=p+1|0}while(p>>>0<j>>>0)}Nb[k[(k[v>>2]|0)+8>>2]&127](k[b>>2]|0);k[b>>2]=w;i[t>>0]=q;k[A>>2]=u;a=s&y;if(!(k[w+(a<<2)>>2]|0)){e=v;f=b;x=35}else{f=((y&0-u)>>>(r+-1|0)&s>>>2|1)&255;e=0;do{e=e<<24>>24==0?f:e;A=e&255;a=a+(a>>>0<A>>>0?u:0)-A|0}while((k[w+(a<<2)>>2]|0)!=0);e=v;f=b;x=35}}else e=0}else e=0}while(0);if((x|0)==35){e=Rb[k[k[e>>2]>>2]&63](d)|0;k[(k[f>>2]|0)+(a<<2)>>2]=e;e=k[(k[f>>2]|0)+(a<<2)>>2]|0;if(!e)e=0;else{IP(e|0,0,d|0)|0;e=(k[f>>2]|0)+(a<<2)|0;k[k[e>>2]>>2]=c;b=b+12|0;k[b>>2]=(k[b>>2]|0)+1;e=k[e>>2]|0}}return e|0}function mI(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;b=a+4|0;c=k[b>>2]|0;f=c;do if(c){g=a+16|0;h=k[g>>2]|0;if(!h){k[a>>2]=c;k[b>>2]=k[c>>2];k[c>>2]=0;b=c+8|0;k[g>>2]=b;k[a+8>>2]=(k[c+4>>2]|0)+(c+8);k[a+12>>2]=b;b=1;break}d=a+8|0;e=(k[d>>2]|0)-h|0;if((e|0)<(k[c+4>>2]|0)){j=k[c>>2]|0;k[c>>2]=k[a>>2];k[a>>2]=f;k[b>>2]=j;GP(c+8|0,h|0,e|0)|0;b=k[a>>2]|0;a=a+12|0;k[a>>2]=(k[a>>2]|0)-(k[g>>2]|0)+(b+8);k[g>>2]=b+8;k[d>>2]=(k[b+4>>2]|0)+(b+8);b=1}else i=6}else i=6;while(0);do if((i|0)==6){c=k[a>>2]|0;i=a+16|0;h=k[i>>2]|0;j=a+8|0;b=(k[j>>2]|0)-h|0;if((c|0)!=0&(h|0)==(c+8|0)){d=b<<1;b=_b[k[(k[a+20>>2]|0)+4>>2]&127](c,d+8|0)|0;if(!b){b=0;break}k[a>>2]=b;k[b+4>>2]=d;a=a+12|0;k[a>>2]=(k[a>>2]|0)-(k[i>>2]|0)+(b+8);k[i>>2]=b+8;k[j>>2]=b+8+d;b=1;break}b=(b|0)<1024?1024:b<<1;g=b+8|0;h=Rb[k[k[a+20>>2]>>2]&63](g)|0;if(!h)b=0;else{k[h+4>>2]=b;k[h>>2]=k[a>>2];k[a>>2]=h;f=a+12|0;c=k[f>>2]|0;b=k[i>>2]|0;e=h+8|0;if((c|0)==(b|0)){d=c;b=c}else{GP(e|0,b|0,c-b|0)|0;d=k[f>>2]|0;b=k[i>>2]|0}k[f>>2]=h+(d+8-b);k[i>>2]=e;k[j>>2]=h+g;b=1}}while(0);return b|0}function nI(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;h=k[a+356>>2]|0;a:do if(!(i[b>>0]|0))b=1;else{m=a+416|0;n=a+428|0;o=a+424|0;p=a+432|0;q=h+152|0;r=a+372|0;j=h+60|0;l=h+80|0;while(1){e=b;b:while(1){d=i[e>>0]|0;switch(d<<24>>24){case 0:case 12:{c=e;d=5;break b}default:{}}c=k[n>>2]|0;if(d<<24>>24==61){b=c;d=13;break}if((c|0)==(k[o>>2]|0)){if(!((mI(m)|0)<<24>>24)){b=0;break a}c=k[n>>2]|0;d=i[e>>0]|0}k[n>>2]=c+1;i[c>>0]=d;if(!(i[b>>0]|0)){b=1;break a}else e=e+1|0}if((d|0)==5){b=k[n>>2]|0;if((b|0)==(k[o>>2]|0)){if(!((mI(m)|0)<<24>>24)){b=0;break a}b=k[n>>2]|0}k[n>>2]=b+1;i[b>>0]=0;b=lI(a,h,k[p>>2]|0,0)|0;if(b)i[b+32>>0]=1;b=(i[c>>0]|0)==0?c:c+1|0;k[n>>2]=k[p>>2]}else if((d|0)==13){if((b|0)==(k[p>>2]|0))d=q;else{if((b|0)==(k[o>>2]|0)){if(!((mI(m)|0)<<24>>24)){b=0;break a}b=k[n>>2]|0}k[n>>2]=b+1;i[b>>0]=0;d=lI(a,j,k[p>>2]|0,8)|0;if(!d){b=0;break a}c=k[d>>2]|0;g=k[p>>2]|0;b=g;if((c|0)==(g|0)){g=kI(l,c)|0;k[d>>2]=g;if(!g){b=0;break a}b=k[p>>2]|0}k[n>>2]=b}c:while(1){f=e+1|0;c=i[f>>0]|0;g=(b|0)==(k[o>>2]|0);switch(c<<24>>24){case 0:case 12:{c=g;break c}default:{}}if(g){if(!((mI(m)|0)<<24>>24)){b=0;break a}b=k[n>>2]|0;c=i[f>>0]|0}k[n>>2]=b+1;i[b>>0]=c;b=k[n>>2]|0;e=f}if(c){if(!((mI(m)|0)<<24>>24)){b=0;break a}b=k[n>>2]|0}k[n>>2]=b+1;i[b>>0]=0;if(WI(a,d,0,k[p>>2]|0,r)|0){b=0;break a}k[n>>2]=k[p>>2];b=(i[f>>0]|0)==0?f:e+2|0}if(!(i[b>>0]|0)){b=1;break}}}while(0);return b|0}function oI(a){a=a|0;var b=0,c=0,d=0;b=k[a>>2]|0;if(b){c=a+20|0;do{d=b;b=k[b>>2]|0;Nb[k[(k[c>>2]|0)+8>>2]&127](d)}while((b|0)!=0)}b=k[a+4>>2]|0;if(b){c=a+20|0;do{d=b;b=k[b>>2]|0;Nb[k[(k[c>>2]|0)+8>>2]&127](d)}while((b|0)!=0)}return}function pI(a){a=a|0;var b=0,c=0,d=0,e=0;d=a+8|0;e=a+16|0;b=k[(k[e>>2]|0)+8>>2]|0;if(k[d>>2]|0){c=0;do{Nb[b&127](k[(k[a>>2]|0)+(c<<2)>>2]|0);c=c+1|0;b=k[(k[e>>2]|0)+8>>2]|0}while(c>>>0<(k[d>>2]|0)>>>0)}Nb[b&127](k[a>>2]|0);return}function qI(a){a=a|0;var b=0,c=0;b=a+496|0;if(!(k[b>>2]|0)){$M(((Cb(0)|0)>>>0)%4294967295|0);c=aN()|0;k[b>>2]=c}if(!(i[a+236>>0]|0))b=1;else b=nI(a,179559)|0;return b|0}function rI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return k[a+284>>2]|0}function sI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0;o=r;r=r+16|0;m=o+4|0;n=o;k[m>>2]=c;if(!(i[b+72>>0]|0)){if((k[a+144>>2]|0)==(b|0)){j=a+292|0;l=a+288|0}else{l=k[a+300>>2]|0;j=l+4|0}e=a+44|0;f=b+60|0;g=a+48|0;h=a+80|0;c=a+4|0;do{k[n>>2]=k[e>>2];Mb[k[f>>2]&31](b,m,d,n,k[g>>2]|0);k[j>>2]=k[m>>2];a=k[e>>2]|0;dc[k[h>>2]&127](k[c>>2]|0,a,(k[n>>2]|0)-a|0);k[l>>2]=k[m>>2]}while((k[m>>2]|0)!=(d|0))}else dc[k[a+80>>2]&127](k[a+4>>2]|0,c,d-c|0);r=o;return}function tI(a){a=a|0;var b=0;b=a+232|0;if(!(Tb[(i[a+236>>0]<<24>>24!=0?44:45)&63](a+148|0,a+144|0,k[b>>2]|0)|0))b=YI(a,k[b>>2]|0)|0;else b=0;return b|0}function uI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;e=r;r=r+16|0;f=e;k[f>>2]=b;h=a+144|0;g=k[h>>2]|0;g=cc[k[g>>2]&127](g,b,c,f)|0;b=vI(a,k[h>>2]|0,b,c,g,k[f>>2]|0,d,(i[a+484>>0]|0)==0&1)|0;r=e;return b|0}function vI(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0;Ja=r;r=r+16|0;ua=Ja+8|0;va=Ja+4|0;ka=Ja;k[ka>>2]=f;o=a+356|0;y=k[o>>2]|0;ya=a+144|0;if((k[ya>>2]|0)==(b|0)){Fa=a+300|0;ia=a+292|0;ja=a+288|0}else{Fa=a+300|0;ja=k[Fa>>2]|0;ia=ja+4|0}p=h<<24>>24!=0;Ga=a+256|0;q=a+80|0;s=a+480|0;t=a+84|0;u=a+324|0;v=a+416|0;w=a+320|0;x=a+428|0;z=a+432|0;A=a+328|0;wa=a+4|0;ma=a+489|0;na=y+132|0;B=a+316|0;xa=y+129|0;C=y+128|0;D=y+80|0;E=y+92|0;F=y+96|0;G=a+136|0;H=a+88|0;qa=a+492|0;za=a+112|0;Aa=y+131|0;Ba=a+116|0;Ca=y+130|0;Da=a+108|0;Ea=a+360|0;I=a+344|0;J=a+132|0;K=a+348|0;L=a+352|0;M=a+332|0;N=a+353|0;O=a+424|0;P=y+120|0;Q=y+116|0;R=a+92|0;S=a+476|0;T=a+340|0;U=a+336|0;V=a+96|0;W=a+260|0;X=a+468|0;Y=a+464|0;Z=y+160|0;_=y+180|0;$=y+184|0;aa=y+164|0;ba=a+128|0;ca=a+12|0;da=a+16|0;ea=a+272|0;fa=a+120|0;ga=y+176|0;ha=y+168|0;a:while(1){k[ja>>2]=c;k[ia>>2]=k[ka>>2];b:do if((e|0)<1){if(p&(e|0)!=0){e=c;n=7;break a}switch(e|0){case -1:{e=5;break a}case 0:{n=9;break a}case -2:{n=284;break a}case -4:{n=10;break a}case -15:{e=15;break b}default:{}}k[ka>>2]=d;e=0-e|0}while(0);m=Sb[k[Ga>>2]&63](Ga,e,c,k[ka>>2]|0,b)|0;c:do switch(m|0){case 2:{n=58;break a}case -1:{n=189;break a}case 1:{e=wI(a,0,c,k[ka>>2]|0)|0;if(e)break a;e=k[ya>>2]|0;break}case 4:{if(!(k[t>>2]|0))e=1;else{m=xI(v,b,c,k[ka>>2]|0)|0;k[w>>2]=m;if(!m){e=1;break a}k[z>>2]=k[x>>2];k[A>>2]=0;e=0}k[u>>2]=0;n=278;break}case 7:{e=k[t>>2]|0;if(!e)n=279;else{Mb[e&31](k[wa>>2]|0,k[w>>2]|0,k[u>>2]|0,k[A>>2]|0,1);k[w>>2]=0;iI(v);e=b}break}case 57:{e=wI(a,1,c,k[ka>>2]|0)|0;if(e)break a;e=k[ya>>2]|0;break}case 6:{i[ma>>0]=0;m=lI(a,na,111712,36)|0;k[B>>2]=m;if(!m){e=1;break a}i[xa>>0]=1;if(!(k[t>>2]|0))n=33;else{if(!(cc[k[b+56>>2]&127](b,c,k[ka>>2]|0,ja)|0)){e=32;break a}e=k[b+68>>2]|0;e=xI(v,b,c+e|0,(k[ka>>2]|0)+(0-e)|0)|0;if(!e){e=1;break a}yI(e);k[z>>2]=k[x>>2];k[A>>2]=e;e=0;n=34}break}case 14:{n=33;break}case 8:{e=k[w>>2]|0;if(!e)e=1;else{Mb[k[t>>2]&31](k[wa>>2]|0,e,k[u>>2]|0,k[A>>2]|0,0);iI(v);e=0}if(!((k[u>>2]|0)==0?(i[ma>>0]|0)==0:0)){f=i[xa>>0]|0;i[xa>>0]=1;do if((k[qa>>2]|0)!=0?(k[za>>2]|0)!=0:0){j=lI(a,na,111712,36)|0;if(!j){e=1;break a}if(!(i[ma>>0]|0))m=k[j+20>>2]|0;else{m=k[Ea>>2]|0;k[j+20>>2]=m}i[Aa>>0]=0;if(!(Sb[k[za>>2]&63](k[Ba>>2]|0,0,m,k[j+16>>2]|0,k[j+24>>2]|0)|0)){e=21;break a}if(!(i[Aa>>0]|0)){if(k[u>>2]|0)break;i[xa>>0]=f;break}if(((i[Ca>>0]|0)==0?(la=k[Da>>2]|0,(la|0)!=0):0)?(Rb[la&63](k[wa>>2]|0)|0)==0:0){e=22;break a}}while(0);i[ma>>0]=0}f=k[H>>2]|0;if(!f)n=278;else{Nb[f&127](k[wa>>2]|0);e=b}break}case 34:{m=AI(a,b,c,k[ka>>2]|0)|0;k[I>>2]=m;if(!m){e=1;break a}else n=80;break}case 22:{m=BI(a,b,c,k[ka>>2]|0)|0;k[K>>2]=m;if(!m){e=1;break a}i[L>>0]=0;k[M>>2]=0;i[N>>0]=0;n=80;break}case 23:{i[L>>0]=1;k[M>>2]=179600;n=80;break}case 24:{i[N>>0]=1;k[M>>2]=179606;n=80;break}case 25:{k[M>>2]=179609;n=80;break}case 26:{k[M>>2]=179615;n=80;break}case 27:{k[M>>2]=179622;n=80;break}case 28:{k[M>>2]=179629;n=80;break}case 29:{k[M>>2]=179638;n=80;break}case 30:{k[M>>2]=179646;n=80;break}case 32:case 31:{if((i[C>>0]|0)!=0?(k[J>>2]|0)!=0:0){e=(k[M>>2]|0)==0?((m|0)==32?179655:179665):179667;f=i[e>>0]|0;if(f<<24>>24)do{j=k[x>>2]|0;if((j|0)==(k[O>>2]|0)){if(!((mI(v)|0)<<24>>24)){e=1;break a}j=k[x>>2]|0;f=i[e>>0]|0}k[x>>2]=j+1;i[j>>0]=f;e=e+1|0;f=i[e>>0]|0}while(f<<24>>24!=0);if(!(k[z>>2]|0)){e=1;break a}if(!(CI(v,b,c,k[ka>>2]|0)|0)){e=1;break a}k[M>>2]=k[z>>2];e=b}else n=279;break}case 36:case 35:{if(i[C>>0]|0){if(!(DI(k[I>>2]|0,k[K>>2]|0,i[L>>0]|0,i[N>>0]|0,0,a)|0)){e=1;break a}if((k[J>>2]|0)!=0?(oa=k[M>>2]|0,(oa|0)!=0):0){switch(i[oa>>0]|0){case 40:{n=98;break}case 78:{if((i[oa+1>>0]|0)==79)n=98;break}default:{}}if((n|0)==98){n=0;e=k[x>>2]|0;if((e|0)==(k[O>>2]|0)){if(!((mI(v)|0)<<24>>24)){e=1;break a}e=k[x>>2]|0}k[x>>2]=e+1;i[e>>0]=41;e=k[x>>2]|0;if((e|0)==(k[O>>2]|0)){if(!((mI(v)|0)<<24>>24)){e=1;break a}e=k[x>>2]|0}k[x>>2]=e+1;i[e>>0]=0;k[M>>2]=k[z>>2];k[z>>2]=k[x>>2]}k[ia>>2]=c;Ub[k[J>>2]&15](k[wa>>2]|0,k[k[I>>2]>>2]|0,k[k[K>>2]>>2]|0,k[M>>2]|0,0,(m|0)==36&1);iI(v);e=b}else n=279}else n=279;break}case 38:case 37:{if(i[C>>0]|0){e=k[b+68>>2]|0;e=EI(a,b,i[L>>0]|0,c+e|0,(k[ka>>2]|0)+(0-e)|0,D)|0;if(e)break a;f=k[F>>2]|0;k[F>>2]=k[E>>2];if(!(DI(k[I>>2]|0,k[K>>2]|0,i[L>>0]|0,0,f,a)|0)){e=1;break a}if((k[J>>2]|0)!=0?(pa=k[M>>2]|0,(pa|0)!=0):0){switch(i[pa>>0]|0){case 40:{n=113;break}case 78:{if((i[pa+1>>0]|0)==79)n=113;break}default:{}}if((n|0)==113){n=0;e=k[x>>2]|0;if((e|0)==(k[O>>2]|0)){if(!((mI(v)|0)<<24>>24)){e=1;break a}e=k[x>>2]|0}k[x>>2]=e+1;i[e>>0]=41;e=k[x>>2]|0;if((e|0)==(k[O>>2]|0)){if(!((mI(v)|0)<<24>>24)){e=1;break a}e=k[x>>2]|0}k[x>>2]=e+1;i[e>>0]=0;k[M>>2]=k[z>>2];k[z>>2]=k[x>>2]}k[ia>>2]=c;Ub[k[J>>2]&15](k[wa>>2]|0,k[k[I>>2]>>2]|0,k[k[K>>2]>>2]|0,k[M>>2]|0,f,(m|0)==38&1);iI(v);e=b}else n=279}else n=279;break}case 12:{if(i[C>>0]|0){e=k[b+68>>2]|0;e=FI(a,b,c+e|0,(k[ka>>2]|0)+(0-e)|0)|0;f=k[B>>2]|0;j=k[P>>2]|0;if(f){k[f+4>>2]=j;m=k[Q>>2]|0;k[f+8>>2]=m-j;k[P>>2]=m;if(!(k[G>>2]|0))f=1;else{k[ia>>2]=c;f=k[B>>2]|0;Zb[k[G>>2]&0](k[wa>>2]|0,k[f>>2]|0,l[f+33>>0]|0,k[f+4>>2]|0,k[f+8>>2]|0,k[Ea>>2]|0,0,0,0);f=0}}else{k[Q>>2]=j;f=1}if(!e){e=f;n=278}else break a}else n=279;break}case 5:{i[ma>>0]=0;i[xa>>0]=1;if(!(k[t>>2]|0)){k[u>>2]=111712;e=1}else{m=k[b+68>>2]|0;m=xI(v,b,c+m|0,(k[ka>>2]|0)+(0-m)|0)|0;k[u>>2]=m;if(!m){e=1;break a}k[z>>2]=k[x>>2];e=0}if((((i[Ca>>0]|0)==0?(k[qa>>2]|0)==0:0)?(ra=k[Da>>2]|0,(ra|0)!=0):0)?(Rb[ra&63](k[wa>>2]|0)|0)==0:0){e=22;break a}if(!(k[B>>2]|0)){f=lI(a,na,111712,36)|0;k[B>>2]=f;if(!f){e=1;break a}k[f+24>>2]=0;n=138}else n=138;break}case 13:{e=1;n=138;break}case 15:{if(((i[C>>0]|0)!=0?(k[B>>2]|0)!=0:0)?(k[G>>2]|0)!=0:0){k[ia>>2]=c;e=k[B>>2]|0;Zb[k[G>>2]&0](k[wa>>2]|0,k[e>>2]|0,l[e+33>>0]|0,0,0,k[e+20>>2]|0,k[e+16>>2]|0,k[e+24>>2]|0,0);e=b}else n=279;break}case 16:{if((i[C>>0]|0)!=0?(k[B>>2]|0)!=0:0){m=xI(D,b,c,k[ka>>2]|0)|0;k[(k[B>>2]|0)+28>>2]=m;if(!m){e=1;break a}k[F>>2]=k[E>>2];if(k[R>>2]|0){k[ia>>2]=c;e=k[B>>2]|0;Ub[k[R>>2]&15](k[wa>>2]|0,k[e>>2]|0,k[e+20>>2]|0,k[e+16>>2]|0,k[e+24>>2]|0,k[e+28>>2]|0);e=b;break c}if(k[G>>2]|0){k[ia>>2]=c;e=k[B>>2]|0;Zb[k[G>>2]&0](k[wa>>2]|0,k[e>>2]|0,0,0,0,k[e+20>>2]|0,k[e+16>>2]|0,k[e+24>>2]|0,k[e+28>>2]|0);e=b}else n=279}else n=279;break}case 9:{if(Tb[k[b+48>>2]&63](b,c,k[ka>>2]|0)|0){k[B>>2]=0;n=279;break c}if(!(i[C>>0]|0)){k[E>>2]=k[F>>2];k[B>>2]=0;n=279;break c}e=xI(D,b,c,k[ka>>2]|0)|0;if(!e){e=1;break a}f=lI(a,y,e,36)|0;k[B>>2]=f;if(!f){e=1;break a}if((k[f>>2]|0)!=(e|0)){k[E>>2]=k[F>>2];k[B>>2]=0;n=279;break c}k[F>>2]=k[E>>2];k[f+24>>2]=0;i[f+33>>0]=0;if(!(k[S>>2]|0))e=(k[Fa>>2]|0)!=0;else e=1;i[f+34>>0]=e&1^1;if(!(k[G>>2]|0))n=279;else e=b;break}case 10:{if(!(i[C>>0]|0)){k[E>>2]=k[F>>2];k[B>>2]=0;n=279;break c}e=xI(D,b,c,k[ka>>2]|0)|0;if(!e){e=1;break a}f=lI(a,na,e,36)|0;k[B>>2]=f;if(!f){e=1;break a}if((k[f>>2]|0)!=(e|0)){k[E>>2]=k[F>>2];k[B>>2]=0;n=279;break c}k[F>>2]=k[E>>2];k[f+24>>2]=0;i[f+33>>0]=1;if(!(k[S>>2]|0))e=(k[Fa>>2]|0)!=0;else e=1;i[f+34>>0]=e&1^1;if(!(k[G>>2]|0))n=279;else e=b;break}case 18:{k[T>>2]=0;k[U>>2]=0;if(!(k[V>>2]|0))n=279;else{m=xI(v,b,c,k[ka>>2]|0)|0;k[U>>2]=m;if(!m){e=1;break a}k[z>>2]=k[x>>2];e=b}break}case 21:{if(!(cc[k[b+56>>2]&127](b,c,k[ka>>2]|0,ja)|0)){e=32;break a}if(!(k[U>>2]|0))n=279;else{e=k[b+68>>2]|0;e=xI(v,b,c+e|0,(k[ka>>2]|0)+(0-e)|0)|0;if(!e){e=1;break a}yI(e);k[T>>2]=e;k[z>>2]=k[x>>2];e=b}break}case 19:{if((k[U>>2]|0)!=0?(k[V>>2]|0)!=0:0){e=k[b+68>>2]|0;e=xI(v,b,c+e|0,(k[ka>>2]|0)+(0-e)|0)|0;if(!e){e=1;break a}k[ia>>2]=c;Mb[k[V>>2]&31](k[wa>>2]|0,k[U>>2]|0,k[Ea>>2]|0,e,k[T>>2]|0);e=0}else e=1;iI(v);n=278;break}case 20:{if((k[T>>2]|0)!=0?(k[V>>2]|0)!=0:0){k[ia>>2]=c;Mb[k[V>>2]&31](k[wa>>2]|0,k[U>>2]|0,k[Ea>>2]|0,0,k[T>>2]|0);e=0}else e=1;iI(v);n=278;break}case 58:{if(k[q>>2]|0)sI(a,b,c,k[ka>>2]|0);e=GI(a,b,ka,d,g,h)|0;if(e)break a;if(!(k[ka>>2]|0)){n=194;break a}else e=b;break}case 44:{e=k[X>>2]|0;do if((k[W>>2]|0)>>>0>=e>>>0){if(!e){m=k[ca>>2]|0;k[X>>2]=32;m=Rb[m&63](32)|0;k[Y>>2]=m;if(!m){e=1;break a}else break}j=k[da>>2]|0;m=k[Y>>2]|0;e=e<<1;k[X>>2]=e;e=_b[j&127](m,e)|0;if(!e){e=1;break a}k[Y>>2]=e;e=k[$>>2]|0;if(e){e=_b[k[da>>2]&127](e,k[X>>2]<<2)|0;if(!e){e=1;break a}k[$>>2]=e}}while(0);i[(k[Y>>2]|0)+(k[W>>2]|0)>>0]=0;if(i[Z>>0]|0){e=II(a)|0;if((e|0)<0){e=1;break a}k[(k[$>>2]|0)+(k[_>>2]<<2)>>2]=e;k[_>>2]=(k[_>>2]|0)+1;k[(k[aa>>2]|0)+(e*28|0)>>2]=6;if(k[ba>>2]|0)e=b;else n=279}else n=279;break}case 50:{e=(k[Y>>2]|0)+(k[W>>2]|0)|0;if((i[e>>0]|0)==124){e=2;break a}i[e>>0]=44;if((i[Z>>0]|0)!=0?(k[ba>>2]|0)!=0:0)e=b;else n=279;break}case 49:{f=(k[Y>>2]|0)+(k[W>>2]|0)|0;e=i[f>>0]|0;if(e<<24>>24==44){e=2;break a}if(e<<24>>24==0&(i[Z>>0]|0)!=0?(sa=(k[aa>>2]|0)+((k[(k[$>>2]|0)+((k[_>>2]|0)+-1<<2)>>2]|0)*28|0)|0,(k[sa>>2]|0)!=3):0){k[sa>>2]=5;e=(k[ba>>2]|0)==0&1}else e=1;i[f>>0]=124;n=278;break}case 59:case 60:{i[xa>>0]=1;if(k[qa>>2]|0){f=k[b+68>>2]|0;f=xI(D,b,c+f|0,(k[ka>>2]|0)+(0-f)|0)|0;if(!f){e=1;break a}j=lI(a,na,f,0)|0;k[E>>2]=k[F>>2];do if(k[ea>>2]|0){if(!(i[Ca>>0]|0)){if(i[xa>>0]|0){n=222;break}}else if(k[Fa>>2]|0){n=222;break}if(!j){e=11;break a}if(!(i[j+34>>0]|0)){e=24;break a}}else n=222;while(0);if((n|0)==222?(n=0,(j|0)==0):0){i[C>>0]=i[Ca>>0]|0;if((m|0)!=60){n=279;break c}e=k[fa>>2]|0;if(!e){n=279;break c}dc[e&127](k[wa>>2]|0,f,1);e=b;break c}f=j+32|0;if(i[f>>0]|0){e=12;break a}if(k[j+4>>2]|0){e=JI(a,j,(m|0)==60&1)|0;if(!e){e=b;break c}else break a}e=k[za>>2]|0;if(!e){i[C>>0]=i[Ca>>0]|0;n=279;break c}i[Aa>>0]=0;i[f>>0]=1;m=(Sb[e&63](k[Ba>>2]|0,0,k[j+20>>2]|0,k[j+16>>2]|0,k[j+24>>2]|0)|0)==0;i[f>>0]=0;if(m){e=21;break a}e=i[Ca>>0]|0;if(!(i[Aa>>0]|0)){i[C>>0]=e;e=b;break c}else{f=e;e=0}}else{f=i[Ca>>0]|0;i[C>>0]=f;e=1}if((f<<24>>24==0?(ta=k[Da>>2]|0,(ta|0)!=0):0)?(Rb[ta&63](k[wa>>2]|0)|0)==0:0){e=22;break a}else n=278;break}case 40:{if(!(k[ba>>2]|0))n=279;else{m=AI(a,b,c,k[ka>>2]|0)|0;k[I>>2]=m;if(!m){e=1;break a}k[_>>2]=0;k[ga>>2]=0;i[Z>>0]=1;e=b}break}case 42:case 41:{if(!(i[Z>>0]|0))n=279;else{if(!(k[ba>>2]|0))e=1;else{e=Rb[k[ca>>2]&63](20)|0;if(!e){e=1;break a}n=e+4|0;k[n>>2]=0;k[n+4>>2]=0;k[n+8>>2]=0;k[n+12>>2]=0;k[e>>2]=(m|0)==41?2:1;k[ia>>2]=c;dc[k[ba>>2]&127](k[wa>>2]|0,k[k[I>>2]>>2]|0,e);e=0}i[Z>>0]=0;n=278}break}case 43:{if((i[Z>>0]|0)!=0?(k[(k[aa>>2]|0)+((k[(k[$>>2]|0)+((k[_>>2]|0)+-1<<2)>>2]|0)*28|0)>>2]=3,(k[ba>>2]|0)!=0):0)e=b;else n=279;break}case 51:{f=0;n=250;break}case 53:{f=1;n=250;break}case 52:{f=2;n=250;break}case 54:{f=3;n=250;break}case 45:{j=0;n=261;break}case 47:{j=1;n=261;break}case 46:{j=2;n=261;break}case 48:{j=3;n=261;break}case 55:{if(!(LI(a,b,c,k[ka>>2]|0)|0)){e=1;break a}else e=b;break}case 56:{if(!(MI(a,b,c,k[ka>>2]|0)|0)){e=1;break a}else e=b;break}case 0:{if((e|0)==14)e=b;else n=279;break}case 3:{if(!(k[t>>2]|0))n=279;else e=b;break}case 11:{if((i[C>>0]|0)!=0?(k[G>>2]|0)!=0:0)e=b;else n=279;break}case 17:{if(!(k[V>>2]|0))n=279;else e=b;break}case 33:{if((i[C>>0]|0)!=0?(k[J>>2]|0)!=0:0)e=b;else n=279;break}case 39:{if(!(k[ba>>2]|0))n=279;else e=b;break}default:n=279}while(0);if((n|0)==33){n=0;if(!(cc[k[b+56>>2]&127](b,c,k[ka>>2]|0,ja)|0)){e=32;break}else{e=1;n=34}}else if((n|0)==80){n=0;if((i[C>>0]|0)!=0?(k[J>>2]|0)!=0:0)e=b;else n=279}else if((n|0)==138){n=0;if((i[C>>0]|0)!=0?(k[B>>2]|0)!=0:0){m=k[b+68>>2]|0;m=xI(D,b,c+m|0,(k[ka>>2]|0)+(0-m)|0)|0;f=k[B>>2]|0;k[f+16>>2]=m;if(!m){e=1;break}k[f+20>>2]=k[Ea>>2];k[F>>2]=k[E>>2];if(k[G>>2]|0)e=b;else n=278}else n=278}else if((n|0)==250){n=0;if(i[Z>>0]|0){e=k[ka>>2]|0;if(f)e=e+(0-(k[b+68>>2]|0))|0;m=II(a)|0;if((m|0)<0){e=1;break}j=k[aa>>2]|0;k[j+(m*28|0)>>2]=4;k[j+(m*28|0)+4>>2]=f;e=AI(a,b,c,e)|0;if(!e){e=1;break}j=k[e>>2]|0;k[(k[aa>>2]|0)+(m*28|0)+8>>2]=j;f=0;while(1){e=f+1|0;if(!(i[j+f>>0]|0))break;else f=e}k[ha>>2]=(k[ha>>2]|0)+e;if(k[ba>>2]|0)e=b;else n=279}else n=279}else if((n|0)==261)if(i[Z>>0]|0){f=(k[ba>>2]|0)==0;e=f&1;n=(k[_>>2]|0)+-1|0;k[_>>2]=n;k[(k[aa>>2]|0)+((k[(k[$>>2]|0)+(n<<2)>>2]|0)*28|0)+4>>2]=j;if(!n){if(!f){j=k[o>>2]|0;f=j+176|0;j=Rb[k[ca>>2]&63](((k[f>>2]|0)*20|0)+(k[j+168>>2]|0)|0)|0;if(!j){n=265;break}k[va>>2]=j+((k[f>>2]|0)*20|0);k[ua>>2]=j+20;KI(a,0,j,ua,va);k[ia>>2]=c;dc[k[ba>>2]&127](k[wa>>2]|0,k[k[I>>2]>>2]|0,j)}i[Z>>0]=0;k[ha>>2]=0;n=278}else n=278}else n=279;if((n|0)==34){n=0;if((i[C>>0]|0)!=0?(k[B>>2]|0)!=0:0){f=k[b+68>>2]|0;f=xI(D,b,c+f|0,(k[ka>>2]|0)+(0-f)|0)|0;if(!f){e=1;break}yI(f);k[(k[B>>2]|0)+24>>2]=f;k[F>>2]=k[E>>2];if(k[G>>2]|0)e=b;else n=278}else n=278}if((n|0)==278){n=0;if(!(e<<24>>24))e=b;else n=279}if((n|0)==279){n=0;if(!(k[q>>2]|0))e=b;else{sI(a,b,c,k[ka>>2]|0);e=b}}switch(k[s>>2]|0){case 3:{n=282;break a}case 2:{e=35;break a}default:{}}m=k[ka>>2]|0;b=e;c=m;e=cc[k[e>>2]&127](e,m,d,ka)|0}d:do if((n|0)==7){k[g>>2]=e;e=0}else if((n|0)==9){k[ja>>2]=k[ka>>2];e=4}else if((n|0)==10){e=(b|0)==(k[ya>>2]|0);if(!e?(i[(k[Fa>>2]|0)+20>>0]|0)==0:0){k[g>>2]=c;e=0;break}if((i[a+488>>0]|0)!=0|e^1)if((Sb[k[Ga>>2]&63](Ga,-4,d,d,b)|0)==-1)e=29;else{k[g>>2]=c;e=0}else e=3}else if((n|0)==58){do if(((i[ma>>0]|0)!=0?(Ha=i[xa>>0]|0,i[xa>>0]=1,(k[qa>>2]|0)!=0):0)?(k[za>>2]|0)!=0:0){e=lI(a,na,111712,36)|0;if(!e){e=1;break d}Ga=k[Ea>>2]|0;k[e+20>>2]=Ga;i[Aa>>0]=0;if(!(Sb[k[za>>2]&63](k[Ba>>2]|0,0,Ga,k[e+16>>2]|0,k[e+24>>2]|0)|0)){e=21;break d}if(!(i[Aa>>0]|0)){i[xa>>0]=Ha;break}if(((i[Ca>>0]|0)==0?(Ia=k[Da>>2]|0,(Ia|0)!=0):0)?(Rb[Ia&63](k[wa>>2]|0)|0)==0:0){e=22;break d}}while(0);k[a+280>>2]=58;e=zI(a,c,d,g)|0}else if((n|0)==189)e=(e|0)==28?10:(e|0)==12?17:2;else if((n|0)==194){k[a+280>>2]=59;e=0}else if((n|0)==265)e=1;else if((n|0)==282){k[g>>2]=k[ka>>2];e=0}else if((n|0)==284)e=6;while(0);r=Ja;return e|0}function wI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0;p=r;r=r+32|0;o=p+16|0;l=p+12|0;g=p+8|0;h=p+4|0;j=p;k[o>>2]=0;k[l>>2]=0;k[g>>2]=0;k[j>>2]=-1;m=a+144|0;n=a+288|0;f=(b|0)!=0;a:do if(Qb[(i[a+236>>0]<<24>>24!=0?1:2)&3](b,k[m>>2]|0,c,d,n,g,h,o,l,j)|0){if((k[j>>2]|0)==1&(f^1)?(i[(k[a+356>>2]|0)+130>>0]=1,e=a+492|0,(k[e>>2]|0)==1):0)k[e>>2]=0;b=a+140|0;if(!(k[b>>2]|0))if(!(k[a+80>>2]|0)){e=0;b=0}else{sI(a,k[m>>2]|0,c,d);e=0;b=0}else{e=k[o>>2]|0;if(!e)e=0;else{c=k[m>>2]|0;e=xI(a+440|0,c,e,e+(_b[k[c+32>>2]&127](c,e)|0)|0)|0;if(!e){e=1;break}k[a+456>>2]=k[a+452>>2]}f=k[g>>2]|0;if(f){g=k[m>>2]|0;f=xI(a+440|0,g,f,(k[h>>2]|0)+(0-(k[g+68>>2]|0))|0)|0;if(!f){e=1;break}}else f=0;hc[k[b>>2]&31](k[a+4>>2]|0,f,e,k[j>>2]|0);b=f}do if(!(k[a+232>>2]|0)){f=k[l>>2]|0;if(f)if((k[f+68>>2]|0)==(k[(k[m>>2]|0)+68>>2]|0)){k[m>>2]=f;break}else{k[n>>2]=k[o>>2];e=19;break a}f=k[o>>2]|0;if(f){b=a+440|0;if(!e){e=k[m>>2]|0;e=xI(b,e,f,f+(_b[k[e+32>>2]&127](e,f)|0)|0)|0;if(!e){e=1;break a}}e=YI(a,e)|0;iI(b);if((e|0)!=18)break a;k[n>>2]=k[o>>2];e=18;break a}}while(0);if((e|0)!=0|(b|0)!=0){iI(a+440|0);e=0}else e=0}else e=f?31:30;while(0);r=p;return e|0}function xI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;do if(!(CI(a,b,c,d)|0))b=0;else{d=a+12|0;b=k[d>>2]|0;if((b|0)==(k[a+8>>2]|0)){if(!((mI(a)|0)<<24>>24)){b=0;break}b=k[d>>2]|0}k[d>>2]=b+1;i[b>>0]=0;b=k[a+16>>2]|0}while(0);return b|0}function yI(a){a=a|0;var b=0,c=0,d=0;b=i[a>>0]|0;if(b<<24>>24){c=a;d=a;while(1){switch(b<<24>>24|0){case 10:case 13:case 32:{if((c|0)!=(a|0)){if((i[c+-1>>0]|0)!=32){i[c>>0]=32;c=c+1|0}}else c=a;break}default:{i[c>>0]=b;c=c+1|0}}d=d+1|0;b=i[d>>0]|0;if(!(b<<24>>24)){b=c;break}}if((b|0)!=(a|0)){a=b+-1|0;a=(i[a>>0]|0)==32?a:b}}i[a>>0]=0;return}function zI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=NI(a,0,k[a+144>>2]|0,b,c,d,(i[a+484>>0]|0)==0&1)|0;if((c|0)==0?(UI(a)|0)<<24>>24==0:0)c=1;return c|0}function AI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;f=k[a+356>>2]|0;b=xI(f+80|0,b,c,d)|0;do if((b|0)!=0?(e=lI(a,f+20|0,b,24)|0,(e|0)!=0):0)if((k[e>>2]|0)==(b|0)){k[f+96>>2]=k[f+92>>2];if(!(VI(a,e)|0)){e=0;break}}else k[f+92>>2]=k[f+96>>2];else e=0;while(0);return e|0}function BI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0;n=k[a+356>>2]|0;m=n+80|0;o=n+92|0;f=k[o>>2]|0;l=n+88|0;if((f|0)==(k[l>>2]|0))if(!((mI(m)|0)<<24>>24))e=0;else{f=k[o>>2]|0;g=4}else g=4;a:do if((g|0)==4){k[o>>2]=f+1;i[f>>0]=0;g=xI(m,b,c,d)|0;if((g|0)!=0?(h=g+1|0,e=lI(a,n+40|0,h,12)|0,(e|0)!=0):0){if((k[e>>2]|0)!=(h|0)){k[o>>2]=k[n+96>>2];break}f=k[o>>2]|0;j=n+96|0;k[j>>2]=f;if(i[a+236>>0]|0){b:do if(((((i[h>>0]|0)==120?(i[g+2>>0]|0)==109:0)?(i[g+3>>0]|0)==108:0)?(i[g+4>>0]|0)==110:0)?(i[g+5>>0]|0)==115:0){switch(i[g+6>>0]|0){case 0:{k[e+4>>2]=n+152;break}case 58:{o=lI(a,n+60|0,g+7|0,8)|0;k[e+4>>2]=o;break}default:{d=0;break b}}i[e+9>>0]=1;break a}else d=0;while(0);c:while(1){b=d+1|0;switch(i[g+b>>0]|0){case 0:break a;case 58:break c;default:d=b}}b=(f|0)==(k[l>>2]|0);if((d|0)>0){c=0;do{if(b){if(!((mI(m)|0)<<24>>24)){e=0;break a}f=k[o>>2]|0}c=c+1|0;b=i[g+c>>0]|0;k[o>>2]=f+1;i[f>>0]=b;f=k[o>>2]|0;b=(f|0)==(k[l>>2]|0)}while((c|0)<(d|0))}if(b){if(!((mI(m)|0)<<24>>24)){e=0;break}f=k[o>>2]|0}k[o>>2]=f+1;i[f>>0]=0;a=lI(a,n+60|0,k[j>>2]|0,8)|0;k[e+4>>2]=a;f=k[j>>2]|0;if((k[a>>2]|0)==(f|0)){k[j>>2]=k[o>>2];break}else{k[o>>2]=f;break}}}else e=0}while(0);return e|0}function CI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;h=r;r=r+16|0;g=h;k[g>>2]=c;f=a+12|0;if((k[f>>2]|0)==0?(mI(a)|0)<<24>>24==0:0)c=0;else e=3;a:do if((e|0)==3){c=b+60|0;e=a+8|0;while(1){Mb[k[c>>2]&31](b,g,d,f,k[e>>2]|0);if((k[g>>2]|0)==(d|0))break;if(!((mI(a)|0)<<24>>24)){c=0;break a}}c=k[a+16>>2]|0}while(0);r=h;return c|0}function DI(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,l=0,m=0,n=0;d=d<<24>>24==0;n=a+12|0;m=k[n>>2]|0;a:do if(!(d&(e|0)==0)){if((m|0)>0){g=k[a+20>>2]|0;h=0;do{if((k[g+(h*12|0)>>2]|0)==(b|0)){d=1;break a}h=h+1|0}while((h|0)<(m|0))}if((!d?(j=a+8|0,(k[j>>2]|0)==0):0)?(i[b+9>>0]|0)==0:0){k[j>>2]=b;l=10}else l=10}else l=10;while(0);b:do if((l|0)==10){h=a+16|0;do if((m|0)==(k[h>>2]|0)){if(!m){k[h>>2]=8;d=Rb[k[f+12>>2]&63](96)|0;k[a+20>>2]=d;if(!d){d=0;break b}else break}g=a+20|0;d=_b[k[f+16>>2]&127](k[g>>2]|0,m*24|0)|0;if(!d){d=0;break b}k[h>>2]=m<<1;k[g>>2]=d}else d=k[a+20>>2]|0;while(0);g=k[n>>2]|0;k[d+(g*12|0)>>2]=b;k[d+(g*12|0)+8>>2]=e;i[d+(g*12|0)+4>>0]=c;if(!(c<<24>>24))i[b+8>>0]=1;k[n>>2]=g+1;d=1}while(0);return d|0}function EI(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0;b=XI(a,b,c,d,e,f)|0;do if(!b){e=f+12|0;b=k[e>>2]|0;if((c<<24>>24==0?(b|0)!=(k[f+16>>2]|0):0)?(g=b+-1|0,(i[g>>0]|0)==32):0){k[e>>2]=g;b=g}if((b|0)==(k[f+8>>2]|0)){if(!((mI(f)|0)<<24>>24)){b=1;break}b=k[e>>2]|0}k[e>>2]=b+1;i[b>>0]=0;b=0}while(0);return b|0}function FI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;H=r;r=r+16|0;C=H;B=H+4|0;e=k[a+356>>2]|0;v=e+104|0;E=a+276|0;F=k[E>>2]|0;k[E>>2]=1;if((k[v>>2]|0)==0?(mI(v)|0)<<24>>24==0:0)c=1;else{A=b+20|0;l=a+488|0;D=a+144|0;m=a+416|0;n=b+68|0;o=e+132|0;p=a+432|0;q=a+428|0;s=a+228|0;t=a+112|0;u=e+130|0;w=e+128|0;x=e+131|0;y=a+116|0;z=e+112|0;h=e+116|0;j=b+44|0;a:while(1){b:do switch(cc[k[A>>2]&127](b,c,d,C)|0){case -4:{c=0;break a}case -1:{G=38;break a}case 0:{G=40;break a}case 28:{if((i[l>>0]|0)==0?(k[D>>2]|0)==(b|0):0){G=20;break a}e=k[n>>2]|0;e=xI(m,b,c+e|0,(k[C>>2]|0)+(0-e)|0)|0;if(!e){c=1;break a}f=lI(a,o,e,0)|0;k[q>>2]=k[p>>2];if(!f){G=9;break a}g=f+32|0;if(i[g>>0]|0){G=11;break a}c=k[f+16>>2]|0;if(!c){i[g>>0]=1;c=k[f+4>>2]|0;c=FI(a,k[s>>2]|0,c,c+(k[f+8>>2]|0)|0)|0;i[g>>0]=0;if(!c)break b;else break a}e=k[t>>2]|0;if(!e){i[w>>0]=i[u>>0]|0;break b}i[x>>0]=0;i[g>>0]=1;f=(Sb[e&63](k[y>>2]|0,0,k[f+20>>2]|0,c,k[f+24>>2]|0)|0)==0;i[g>>0]=0;if(f){c=21;break a}if(!(i[x>>0]|0))i[w>>0]=i[u>>0]|0;break}case 6:case 9:{if(!(CI(v,b,c,k[C>>2]|0)|0)){c=1;break a}break}case -3:{k[C>>2]=c+(k[n>>2]|0);G=23;break}case 7:{G=23;break}case 10:{e=_b[k[j>>2]&127](b,c)|0;if((e|0)<0){G=28;break a}f=_I(e,B)|0;if(!f){G=32;break a}if((f|0)>0){e=0;do{c=k[h>>2]|0;if((k[z>>2]|0)==(c|0)){if(!((mI(v)|0)<<24>>24)){c=1;break a}c=k[h>>2]|0}g=i[B+e>>0]|0;k[h>>2]=c+1;i[c>>0]=g;e=e+1|0}while((e|0)<(f|0))}break}default:{G=42;break a}}while(0);if((G|0)==23){G=0;c=k[h>>2]|0;if((k[z>>2]|0)==(c|0)){if(!((mI(v)|0)<<24>>24)){c=1;break}c=k[h>>2]|0}k[h>>2]=c+1;i[c>>0]=10}c=k[C>>2]|0}if((G|0)==9){i[w>>0]=i[u>>0]|0;c=0}else if((G|0)==11)if((k[D>>2]|0)==(b|0)){k[a+288>>2]=c;c=12}else c=12;else if((G|0)==20){k[a+288>>2]=c;c=10}else if((G|0)==28)if((k[D>>2]|0)==(b|0)){k[a+288>>2]=c;c=14}else c=14;else if((G|0)==32)if((k[D>>2]|0)==(b|0)){k[a+288>>2]=c;c=14}else c=14;else if((G|0)==38)if((k[D>>2]|0)==(b|0)){k[a+288>>2]=c;c=4}else c=4;else if((G|0)==40)if((k[D>>2]|0)==(b|0)){k[a+288>>2]=k[C>>2];c=4}else c=4;else if((G|0)==42)if((k[D>>2]|0)==(b|0)){k[a+288>>2]=c;c=23}else c=23;k[E>>2]=F}r=H;return c|0}function GI(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,l=0;l=r;r=r+16|0;j=l;g=k[c>>2]|0;if((k[a+144>>2]|0)==(b|0)){i=a+288|0;k[i>>2]=g;h=a+292|0}else{i=k[a+300>>2]|0;h=i+4|0}k[i>>2]=g;k[c>>2]=0;d=cc[k[b+12>>2]&127](b,g,d,j)|0;k[h>>2]=k[j>>2];switch(d|0){case 42:{if(k[a+80>>2]|0)sI(a,b,g,k[j>>2]|0);g=k[j>>2]|0;k[c>>2]=g;k[e>>2]=g;g=(k[a+480>>2]|0)==2?35:0;break}case 0:{k[i>>2]=k[j>>2];g=4;break}case -2:{if(!(f<<24>>24))g=6;else{k[e>>2]=g;g=0}break}case -4:case -1:{if(!(f<<24>>24))g=2;else{k[e>>2]=g;g=0}break}default:{k[i>>2]=k[j>>2];g=23}}r=l;return g|0}function HI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;f=r;r=r+16|0;e=f;k[e>>2]=b;b=GI(a,k[a+144>>2]|0,e,c,d,(i[a+484>>0]|0)==0&1)|0;e=k[e>>2]|0;if(!((b|0)!=0|(e|0)==0)){k[a+280>>2]=60;b=uI(a,e,c,d)|0}r=f;return b|0}function II(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0;h=k[a+356>>2]|0;i=h+184|0;if(!(k[i>>2]|0)){b=Rb[k[a+12>>2]&63](k[a+468>>2]<<2)|0;k[i>>2]=b;if(!b)b=-1;else{k[b>>2]=0;c=4}}else c=4;do if((c|0)==4){g=h+176|0;b=k[g>>2]|0;f=h+172|0;c=k[f>>2]|0;e=h+164|0;d=k[e>>2]|0;if(b>>>0<c>>>0)f=d;else{if(!d){b=Rb[k[a+12>>2]&63](896)|0;if(!b){b=-1;break}else{d=32;c=b}}else{b=_b[k[a+16>>2]&127](d,c*56|0)|0;if(!b){b=-1;break}d=k[f>>2]<<1;c=b}k[f>>2]=d;k[e>>2]=c;b=k[g>>2]|0;f=c}k[g>>2]=b+1;c=k[h+180>>2]|0;if(c){a=k[(k[i>>2]|0)+(c+-1<<2)>>2]|0;e=f+(a*28|0)+16|0;c=k[e>>2]|0;if(c)k[f+(c*28|0)+24>>2]=b;c=f+(a*28|0)+20|0;d=k[c>>2]|0;if(!d)k[f+(a*28|0)+12>>2]=b;k[e>>2]=b;k[c>>2]=d+1}i=f+(b*28|0)+12|0;k[i>>2]=0;k[i+4>>2]=0;k[i+8>>2]=0;k[i+12>>2]=0}while(0);return b|0}function JI(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0;q=r;r=r+16|0;o=q;p=a+304|0;d=k[p>>2]|0;if(!d){d=Rb[k[a+12>>2]&63](24)|0;if(!d)d=1;else{n=d;e=4}}else{k[p>>2]=k[d+8>>2];n=d;e=4}do if((e|0)==4){m=b+32|0;i[m>>0]=1;h=b+12|0;k[h>>2]=0;j=a+300|0;l=n+8|0;k[l>>2]=k[j>>2];k[j>>2]=n;k[n+12>>2]=b;f=k[a+312>>2]|0;k[n+16>>2]=f;i[n+20>>0]=c;k[n>>2]=0;k[n+4>>2]=0;c=k[b+4>>2]|0;g=c+(k[b+8>>2]|0)|0;d=a+228|0;e=k[d>>2]|0;if(!(i[b+33>>0]|0))d=NI(a,f,e,c,g,o,0)|0;else{b=cc[k[e>>2]&127](e,c,g,o)|0;d=vI(a,k[d>>2]|0,c,g,b,k[o>>2]|0,o,0)|0}if(!d){d=k[o>>2]|0;if((g|0)!=(d|0)?(k[a+480>>2]|0)==3:0){k[h>>2]=d-c;k[a+280>>2]=61;d=0;break}i[m>>0]=0;k[j>>2]=k[l>>2];k[l>>2]=k[p>>2];k[p>>2]=n;d=0}}while(0);r=q;return d|0}function KI(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;j=(k[a+356>>2]|0)+164|0;f=k[j>>2]|0;h=k[f+(b*28|0)>>2]|0;k[c>>2]=h;k[c+4>>2]=k[f+(b*28|0)+4>>2];if((h|0)==4){k[c+8>>2]=k[e>>2];f=k[f+(b*28|0)+8>>2]|0;while(1){d=i[f>>0]|0;a=k[e>>2]|0;k[e>>2]=a+1;i[a>>0]=d;if(!(i[f>>0]|0))break;else f=f+1|0}k[c+12>>2]=0;k[c+16>>2]=0}else{f=k[f+(b*28|0)+20>>2]|0;g=c+12|0;k[g>>2]=f;h=c+16|0;k[h>>2]=k[d>>2];k[d>>2]=(k[d>>2]|0)+(f*20|0);if(f){f=(k[j>>2]|0)+(b*28|0)+12|0;b=0;while(1){f=k[f>>2]|0;KI(a,f,(k[h>>2]|0)+(b*20|0)|0,d,e);b=b+1|0;if(b>>>0>=(k[g>>2]|0)>>>0)break;else f=(k[j>>2]|0)+(f*28|0)+24|0}}k[c+8>>2]=0}return}function LI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,l=0;j=a+64|0;if(!(k[j>>2]|0))if(!(k[a+80>>2]|0))c=1;else{sI(a,b,c,d);c=1}else{e=b+68|0;g=k[e>>2]<<1;h=c+g|0;c=c+((_b[k[b+32>>2]&127](b,h)|0)+g)|0;g=a+416|0;h=xI(g,b,h,c)|0;if((h|0)!=0?(k[a+432>>2]=k[a+428>>2],l=_b[k[b+36>>2]&127](b,c)|0,l=xI(g,b,l,d+(0-(k[e>>2]<<1))|0)|0,(l|0)!=0):0){c=l;a:while(1){switch(i[c>>0]|0){case 0:break a;case 13:{e=c;b=13;f=8;break a}default:{}}c=c+1|0}if((f|0)==8){while(1){if(b<<24>>24==13){i[c>>0]=10;f=e+1|0;e=(i[f>>0]|0)==10?e+2|0:f}else{i[c>>0]=b;e=e+1|0}c=c+1|0;b=i[e>>0]|0;if(!(b<<24>>24))break;else f=8}i[c>>0]=0}dc[k[j>>2]&127](k[a+4>>2]|0,h,l);iI(g);c=1}else c=0}return c|0}function MI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;g=a+68|0;if(!(k[g>>2]|0))if(!(k[a+80>>2]|0))b=1;else{sI(a,b,c,d);b=1}else{h=a+416|0;e=k[b+68>>2]|0;e=xI(h,b,c+(e<<2)|0,d+(ha(e,-3)|0)|0)|0;if(!e)b=0;else{b=e;a:while(1){switch(i[b>>0]|0){case 0:break a;case 13:{d=b;c=13;f=7;break a}default:{}}b=b+1|0}if((f|0)==7){while(1){if(c<<24>>24==13){i[b>>0]=10;f=d+1|0;d=(i[f>>0]|0)==10?d+2|0:f}else{i[b>>0]=c;d=d+1|0}b=b+1|0;c=i[d>>0]|0;if(!(c<<24>>24))break;else f=7}i[b>>0]=0}Pb[k[g>>2]&31](k[a+4>>2]|0,e);iI(h);b=1}}return b|0}function NI(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0;xa=r;r=r+64|0;ua=xa+48|0;na=xa+44|0;sa=xa+61|0;ia=xa+60|0;oa=xa+40|0;la=xa+36|0;fa=xa+32|0;ma=xa+8|0;ga=xa+56|0;ha=xa+52|0;ta=xa+4|0;ja=xa;k[ua>>2]=d;Z=a+356|0;$=k[Z>>2]|0;if((k[a+144>>2]|0)==(c|0)){ka=a+292|0;va=a+288|0}else{va=k[a+300>>2]|0;ka=va+4|0}k[va>>2]=d;x=c+4|0;pa=a+80|0;y=a+480|0;z=c+48|0;A=c+68|0;B=$+80|0;C=$+96|0;D=$+92|0;E=$+129|0;F=a+112|0;t=a+416|0;u=a+428|0;v=a+424|0;w=a+472|0;G=a+432|0;H=a+116|0;I=a+308|0;J=a+120|0;qa=a+4|0;K=$+130|0;aa=a+60|0;L=a+368|0;M=a+12|0;N=a+364|0;O=c+32|0;ra=a+312|0;ba=c+60|0;P=a+52|0;Q=a+392|0;R=a+16|0;S=a+56|0;T=a+104|0;U=a+376|0;V=a+236|0;W=a+237|0;X=c+44|0;Y=a+72|0;ca=c+72|0;da=a+44|0;ea=a+48|0;a:while(1){s=k[ua>>2]|0;k[na>>2]=s;s=cc[k[x>>2]&127](c,s,e,na)|0;k[ka>>2]=k[na>>2];b:do switch(s|0){case -3:{wa=6;break a}case -4:{wa=15;break a}case 0:{wa=20;break a}case -1:{wa=21;break a}case -2:{wa=23;break a}case 12:{d=17;break a}case -5:{wa=180;break a}case 9:{s=k[A>>2]|0;s=(Tb[k[z>>2]&63](c,(k[ua>>2]|0)+s|0,(k[na>>2]|0)+(0-s)|0)|0)&255;i[ia>>0]=s;if(s<<24>>24){d=k[aa>>2]|0;if(d){dc[d&127](k[qa>>2]|0,ia,1);break b}if(!(k[pa>>2]|0))break b;sI(a,c,k[ua>>2]|0,k[na>>2]|0);break b}h=k[A>>2]|0;h=xI(B,c,(k[ua>>2]|0)+h|0,(k[na>>2]|0)+(0-h)|0)|0;if(!h){d=1;break a}s=lI(a,$,h,0)|0;k[D>>2]=k[C>>2];if((i[E>>0]|0)!=0?(i[K>>0]|0)==0:0){if(!s){d=k[J>>2]|0;if(d){dc[d&127](k[qa>>2]|0,h,0);break b}if(!(k[pa>>2]|0))break b;sI(a,c,k[ua>>2]|0,k[na>>2]|0);break b}}else{if(!s){d=11;break a}if(!(i[s+34>>0]|0)){d=24;break a}}d=s+32|0;if(i[d>>0]|0){d=12;break a}if(k[s+28>>2]|0){d=15;break a}if(k[s+4>>2]|0){if(i[I>>0]|0){d=JI(a,s,0)|0;if(!d)break b;else break a}d=k[J>>2]|0;if(d){dc[d&127](k[qa>>2]|0,k[s>>2]|0,0);break b}if(!(k[pa>>2]|0))break b;sI(a,c,k[ua>>2]|0,k[na>>2]|0);break b}if(!(k[F>>2]|0)){if(!(k[pa>>2]|0))break b;sI(a,c,k[ua>>2]|0,k[na>>2]|0);break b}i[d>>0]=1;q=k[Z>>2]|0;m=q+156|0;if(k[m>>2]|0){h=k[u>>2]|0;if((h|0)==(k[v>>2]|0)){if(!((mI(t)|0)<<24>>24)){wa=102;break a}h=k[u>>2]|0}k[u>>2]=h+1;i[h>>0]=61;j=(((i[w>>0]|0)!=0)<<31>>31)+(k[(k[m>>2]|0)+20>>2]|0)|0;if((j|0)>0){l=0;while(1){h=k[u>>2]|0;if((h|0)==(k[v>>2]|0)){if(!((mI(t)|0)<<24>>24)){wa=102;break a}h=k[u>>2]|0}p=i[(k[(k[m>>2]|0)+16>>2]|0)+l>>0]|0;k[u>>2]=h+1;i[h>>0]=p;l=l+1|0;if((l|0)>=(j|0)){j=1;break}}}else j=1}else j=0;h=k[q+60>>2]|0;o=k[q+68>>2]|0;p=h+(o<<2)|0;c:do if(o)while(1){while(1){l=k[h>>2]|0;h=h+4|0;if((l|0)!=0?(_=l+4|0,(k[_>>2]|0)!=0):0){o=_;break}if((h|0)==(p|0))break c}if(j<<24>>24){j=k[u>>2]|0;if((j|0)==(k[v>>2]|0)){if(!((mI(t)|0)<<24>>24)){wa=102;break a}j=k[u>>2]|0}k[u>>2]=j+1;i[j>>0]=12}n=k[l>>2]|0;l=i[n>>0]|0;j=k[u>>2]|0;m=(j|0)==(k[v>>2]|0);if(!(l<<24>>24))l=m;else while(1){if(m){if(!((mI(t)|0)<<24>>24)){wa=102;break a}j=k[u>>2]|0;l=i[n>>0]|0}k[u>>2]=j+1;i[j>>0]=l;n=n+1|0;l=i[n>>0]|0;j=k[u>>2]|0;m=(j|0)==(k[v>>2]|0);if(!(l<<24>>24)){l=m;break}}if(l){if(!((mI(t)|0)<<24>>24)){wa=102;break a}j=k[u>>2]|0}k[u>>2]=j+1;i[j>>0]=61;l=(((i[w>>0]|0)!=0)<<31>>31)+(k[(k[o>>2]|0)+20>>2]|0)|0;if((l|0)>0){m=0;do{j=k[u>>2]|0;if((j|0)==(k[v>>2]|0)){if(!((mI(t)|0)<<24>>24)){wa=102;break a}j=k[u>>2]|0}n=i[(k[(k[o>>2]|0)+16>>2]|0)+m>>0]|0;k[u>>2]=j+1;i[j>>0]=n;m=m+1|0}while((m|0)<(l|0))}if((h|0)==(p|0)){j=1;break}else j=1}while(0);h=k[q>>2]|0;q=k[q+8>>2]|0;n=h+(q<<2)|0;d:do if(q){m=j;while(1){while(1){j=k[h>>2]|0;h=h+4|0;if((j|0)!=0?(i[j+32>>0]|0)!=0:0){l=j;break}if((h|0)==(n|0))break d}if(m<<24>>24){j=k[u>>2]|0;if((j|0)==(k[v>>2]|0)){if(!((mI(t)|0)<<24>>24)){wa=102;break a}j=k[u>>2]|0}k[u>>2]=j+1;i[j>>0]=12}l=k[l>>2]|0;j=i[l>>0]|0;if(j<<24>>24)do{m=k[u>>2]|0;if((m|0)==(k[v>>2]|0)){if(!((mI(t)|0)<<24>>24)){wa=102;break a}m=k[u>>2]|0;j=i[l>>0]|0}k[u>>2]=m+1;i[m>>0]=j;l=l+1|0;j=i[l>>0]|0}while(j<<24>>24!=0);if((h|0)==(n|0))break;else m=1}}while(0);h=k[u>>2]|0;if((h|0)==(k[v>>2]|0)){if(!((mI(t)|0)<<24>>24)){wa=102;break a}h=k[u>>2]|0}k[u>>2]=h+1;i[h>>0]=0;h=k[G>>2]|0;i[d>>0]=0;if(!h){d=1;break a}if(!(Sb[k[F>>2]&63](k[H>>2]|0,h,k[s+20>>2]|0,k[s+16>>2]|0,k[s+24>>2]|0)|0)){d=21;break a}k[u>>2]=k[G>>2];break}case 1:case 2:{d=k[L>>2]|0;if(!d){d=Rb[k[M>>2]&63](48)|0;if(!d){d=1;break a}h=Rb[k[M>>2]&63](32)|0;k[d+36>>2]=h;if(!h){wa=112;break a}k[d+40>>2]=h+32}else k[L>>2]=k[d>>2];q=d+44|0;k[q>>2]=0;k[d>>2]=k[N>>2];k[N>>2]=d;s=d+12|0;k[d+16>>2]=0;k[d+20>>2]=0;n=(k[ua>>2]|0)+(k[A>>2]|0)|0;o=d+4|0;k[o>>2]=n;n=_b[k[O>>2]&127](c,n)|0;k[d+8>>2]=n;k[ra>>2]=(k[ra>>2]|0)+1;o=k[o>>2]|0;n=o+n|0;k[la>>2]=o;o=d+36|0;k[oa>>2]=k[o>>2];p=d+40|0;Mb[k[ba>>2]&31](c,la,n,oa,(k[p>>2]|0)+-1|0);l=k[o>>2]|0;h=l;j=(k[oa>>2]|0)-h|0;if((k[la>>2]|0)!=(n|0))do{m=(k[p>>2]|0)-h<<1;h=_b[k[R>>2]&127](l,m)|0;if(!h){d=1;break a}k[o>>2]=h;k[p>>2]=h+m;k[oa>>2]=h+j;Mb[k[ba>>2]&31](c,la,n,oa,(k[p>>2]|0)+-1|0);l=k[o>>2]|0;h=l;j=(k[oa>>2]|0)-h|0}while((k[la>>2]|0)!=(n|0));k[d+24>>2]=j;k[s>>2]=h;i[k[oa>>2]>>0]=0;d=PI(a,c,k[ua>>2]|0,s,q)|0;if(d)break a;d=k[P>>2]|0;if(!d){if(k[pa>>2]|0)sI(a,c,k[ua>>2]|0,k[na>>2]|0)}else dc[d&127](k[qa>>2]|0,k[s>>2]|0,k[Q>>2]|0);iI(t);break}case 3:case 4:{p=k[ua>>2]|0;s=k[A>>2]|0;q=p+s|0;k[fa>>2]=0;s=xI(t,c,q,p+((_b[k[O>>2]&127](c,q)|0)+s)|0)|0;k[ma>>2]=s;if(!s){d=1;break a}k[G>>2]=k[u>>2];d=PI(a,c,k[ua>>2]|0,ma,fa)|0;if(d)break a;k[G>>2]=k[u>>2];d=k[P>>2]|0;if(!d)h=1;else{dc[d&127](k[qa>>2]|0,k[ma>>2]|0,k[Q>>2]|0);h=0}d=k[S>>2]|0;if(!d){if((h|0)!=0?(k[pa>>2]|0)!=0:0)sI(a,c,k[ua>>2]|0,k[na>>2]|0)}else{if(k[P>>2]|0){k[va>>2]=k[ka>>2];d=k[S>>2]|0}Pb[d&31](k[qa>>2]|0,k[ma>>2]|0)}iI(t);d=k[fa>>2]|0;if(d)do{h=k[T>>2]|0;if(!h)h=d;else{Pb[h&31](k[qa>>2]|0,k[k[d>>2]>>2]|0);h=d}q=d+4|0;s=d;d=k[q>>2]|0;k[fa>>2]=d;k[q>>2]=k[U>>2];k[U>>2]=s;k[(k[h>>2]|0)+4>>2]=k[s+8>>2]}while((d|0)!=0);if(!(k[ra>>2]|0)){wa=140;break a}break}case 5:{if((k[ra>>2]|0)==(b|0)){d=13;break a}n=k[N>>2]|0;k[N>>2]=k[n>>2];k[n>>2]=k[L>>2];k[L>>2]=n;d=(k[ua>>2]|0)+(k[A>>2]<<1)|0;h=_b[k[O>>2]&127](c,d)|0;if((h|0)!=(k[n+8>>2]|0)){wa=144;break a}if(iO(k[n+4>>2]|0,d,h)|0){wa=144;break a}k[ra>>2]=(k[ra>>2]|0)+-1;d=k[S>>2]|0;if(!d){if(k[pa>>2]|0)sI(a,c,k[ua>>2]|0,k[na>>2]|0)}else{j=k[n+16>>2]|0;m=n+12|0;if((j|0)!=0&(i[V>>0]|0)!=0){d=(k[m>>2]|0)+(k[n+28>>2]|0)|0;h=i[j>>0]|0;if(h<<24>>24){l=j;while(1){l=l+1|0;j=d+1|0;i[d>>0]=h;h=i[l>>0]|0;if(!(h<<24>>24)){d=j;break}else d=j}}j=k[n+20>>2]|0;if((j|0)!=0&(i[W>>0]|0)!=0){i[d>>0]=i[w>>0]|0;d=d+1|0;h=i[j>>0]|0;if(h<<24>>24)do{j=j+1|0;i[d>>0]=h;d=d+1|0;h=i[j>>0]|0}while(h<<24>>24!=0)}i[d>>0]=0;d=k[S>>2]|0}Pb[d&31](k[qa>>2]|0,k[m>>2]|0)}l=n+44|0;d=k[l>>2]|0;if(d)do{h=k[T>>2]|0;if(!h){h=d;j=d}else{Pb[h&31](k[qa>>2]|0,k[k[d>>2]>>2]|0);h=d;j=k[l>>2]|0}s=d;d=k[j+4>>2]|0;k[l>>2]=d;k[s+4>>2]=k[U>>2];k[U>>2]=s;k[(k[h>>2]|0)+4>>2]=k[s+8>>2]}while((d|0)!=0);if(!(k[ra>>2]|0)){wa=163;break a}break}case 10:{d=_b[k[X>>2]&127](c,k[ua>>2]|0)|0;if((d|0)<0){d=14;break a}h=k[aa>>2]|0;if(h){q=k[qa>>2]|0;s=_I(d,ga)|0;dc[h&127](q,ga,s);break b}if(k[pa>>2]|0)sI(a,c,k[ua>>2]|0,k[na>>2]|0);break}case 7:{d=k[aa>>2]|0;if(d){i[ha>>0]=10;dc[d&127](k[qa>>2]|0,ha,1);break b}if(k[pa>>2]|0)sI(a,c,k[ua>>2]|0,k[na>>2]|0);break}case 8:{d=k[Y>>2]|0;if(!d){if(k[pa>>2]|0)sI(a,c,k[ua>>2]|0,k[na>>2]|0)}else Nb[d&127](k[qa>>2]|0);d=RI(a,c,na,e,f,g)|0;if(d)break a;if(!(k[na>>2]|0)){wa=179;break a}break}case 6:{d=k[aa>>2]|0;if(!d){if(!(k[pa>>2]|0))break b;sI(a,c,k[ua>>2]|0,k[na>>2]|0);break b}if(i[ca>>0]|0){s=k[ua>>2]|0;dc[d&127](k[qa>>2]|0,s,(k[na>>2]|0)-s|0);break b}while(1){k[ja>>2]=k[da>>2];Mb[k[ba>>2]&31](c,ua,k[na>>2]|0,ja,k[ea>>2]|0);k[ka>>2]=k[ua>>2];h=k[da>>2]|0;dc[d&127](k[qa>>2]|0,h,(k[ja>>2]|0)-h|0);h=k[ua>>2]|0;if((h|0)==(k[na>>2]|0))break b;k[va>>2]=h}}case 11:{if(!(LI(a,c,k[ua>>2]|0,k[na>>2]|0)|0)){d=1;break a}break}case 13:{if(!(MI(a,c,k[ua>>2]|0,k[na>>2]|0)|0)){d=1;break a}break}default:if(k[pa>>2]|0)sI(a,c,k[ua>>2]|0,k[na>>2]|0)}while(0);s=k[na>>2]|0;k[ua>>2]=s;k[va>>2]=s;switch(k[y>>2]|0){case 2:{d=35;break a}case 3:{wa=205;break a}default:{}}}switch(wa|0){case 6:{if(g<<24>>24){k[f>>2]=k[ua>>2];d=0;break}k[ka>>2]=e;d=k[aa>>2]|0;if(!d){if(k[pa>>2]|0)sI(a,c,k[ua>>2]|0,e)}else{i[sa>>0]=10;dc[d&127](k[qa>>2]|0,sa,1)}if(b)if((k[ra>>2]|0)==(b|0)){k[f>>2]=e;d=0}else d=13;else d=3;break}case 15:{if(g<<24>>24){k[f>>2]=k[ua>>2];d=0;break}if((b|0)>0)if((k[ra>>2]|0)==(b|0)){k[f>>2]=k[ua>>2];d=0}else d=13;else d=3;break}case 20:{k[va>>2]=k[na>>2];d=4;break}case 21:{if(!(g<<24>>24))d=5;else{k[f>>2]=k[ua>>2];d=0}break}case 23:{if(!(g<<24>>24))d=6;else{k[f>>2]=k[ua>>2];d=0}break}case 102:{i[d>>0]=0;d=1;break}case 112:{Nb[k[a+20>>2]&127](d);d=1;break}case 140:{d=QI(a,k[na>>2]|0,e,f)|0;break}case 144:{k[va>>2]=d;d=7;break}case 163:{d=QI(a,k[na>>2]|0,e,f)|0;break}case 179:{k[a+280>>2]=62;d=0;break}case 180:{if(g<<24>>24){k[f>>2]=k[ua>>2];d=0;break}d=k[aa>>2]|0;do if(!d){if(k[pa>>2]|0)sI(a,c,k[ua>>2]|0,e)}else if(!(i[ca>>0]|0)){k[ta>>2]=k[da>>2];Mb[k[ba>>2]&31](c,ua,e,ta,k[ea>>2]|0);wa=k[da>>2]|0;dc[k[aa>>2]&127](k[qa>>2]|0,wa,(k[ta>>2]|0)-wa|0);break}else{wa=k[ua>>2]|0;dc[d&127](k[qa>>2]|0,wa,e-wa|0);break}while(0);if(!b){k[va>>2]=e;d=3;break}if((k[ra>>2]|0)==(b|0)){k[f>>2]=e;d=0;break}else{k[va>>2]=e;d=13;break}}case 205:{k[f>>2]=k[na>>2];d=0;break}}r=xa;return d|0}function OI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0;p=r;r=r+16|0;o=p;f=a+300|0;g=k[f>>2]|0;do if(g){j=k[g+12>>2]|0;l=j+4|0;h=k[l>>2]|0;m=j+12|0;e=h+(k[m>>2]|0)|0;h=h+(k[j+8>>2]|0)|0;n=j+33|0;if(!(i[n>>0]|0))e=NI(a,k[g+16>>2]|0,k[a+228>>2]|0,e,h,o,0)|0;else{s=a+228|0;q=k[s>>2]|0;q=cc[k[q>>2]&127](q,e,h,o)|0;e=vI(a,k[s>>2]|0,e,h,q,k[o>>2]|0,o,0)|0}if(!e){e=k[o>>2]|0;if((h|0)!=(e|0)?(k[a+480>>2]|0)==3:0){k[m>>2]=e-(k[l>>2]|0);e=0;break}i[j+32>>0]=0;s=g+8|0;k[f>>2]=k[s>>2];e=a+304|0;k[s>>2]=k[e>>2];k[e>>2]=g;e=a+280|0;if(!(i[n>>0]|0)){k[e>>2]=58;e=NI(a,(k[a+476>>2]|0)!=0&1,k[a+144>>2]|0,b,c,d,(i[a+484>>0]|0)==0&1)|0;break}else{k[e>>2]=60;s=a+144|0;e=k[s>>2]|0;e=cc[k[e>>2]&127](e,b,c,o)|0;e=vI(a,k[s>>2]|0,b,c,e,k[o>>2]|0,d,(i[a+484>>0]|0)==0&1)|0;break}}}else e=23;while(0);r=p;return e|0}function PI(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;K=k[a+356>>2]|0;h=K+20|0;f=lI(a,h,k[d>>2]|0,0)|0;if(!f){f=kI(K+80|0,k[d>>2]|0)|0;if((f|0)!=0?(g=lI(a,h,f,24)|0,(g|0)!=0):0)if((i[a+236>>0]|0)!=0?(VI(a,g)|0)==0:0)f=1;else{J=g;B=6}else f=1}else{J=f;B=6}a:do if((B|0)==6){y=k[J+12>>2]|0;h=b+40|0;f=a+380|0;w=a+392|0;v=cc[k[h>>2]&127](b,c,k[f>>2]|0,k[w>>2]|0)|0;g=v+y|0;j=k[f>>2]|0;if((g|0)>(j|0)){I=g+16|0;k[f>>2]=I;f=_b[k[a+16>>2]&127](k[w>>2]|0,I<<4)|0;if(!f){f=1;break}k[w>>2]=f;if((v|0)>(j|0))cc[k[h>>2]&127](b,c,v,f)|0}I=k[w>>2]|0;b:do if((v|0)>0){q=b+32|0;r=a+416|0;s=a+432|0;t=a+428|0;u=J+20|0;f=k[I>>2]|0;f=BI(a,b,f,f+(_b[k[q>>2]&127](b,f)|0)|0)|0;if(!f){f=1;break a}p=(y|0)<1;n=f;h=0;o=0;g=0;while(1){f=(k[n>>2]|0)+-1|0;if(i[f>>0]|0){f=o;break}i[f>>0]=1;m=h+1|0;k[I+(h<<2)>>2]=k[n>>2];c=k[w>>2]|0;if(i[c+(o<<4)+12>>0]|0){H=xI(r,b,k[c+(o<<4)+4>>2]|0,k[c+(o<<4)+8>>2]|0)|0;k[I+(m<<2)>>2]=H;if(!H){f=1;break a}}else{c:do if((i[n+8>>0]|0)==0|p)f=1;else{j=k[u>>2]|0;f=0;while(1){if((n|0)==(k[j+(f*12|0)>>2]|0))break;f=f+1|0;if((f|0)>=(y|0)){f=1;break c}}f=i[j+(f*12|0)+4>>0]|0}while(0);f=EI(a,b,f,k[c+(o<<4)+4>>2]|0,k[c+(o<<4)+8>>2]|0,r)|0;if(f)break a;k[I+(m<<2)>>2]=k[s>>2]}k[s>>2]=k[t>>2];f=k[n+4>>2]|0;do if(f)if(i[n+9>>0]|0){f=WI(a,f,n,k[I+(m<<2)>>2]|0,e)|0;if(!f)break;else break a}else{i[(k[n>>2]|0)+-1>>0]=2;h=h+2|0;g=g+1|0;break}else h=h+2|0;while(0);o=o+1|0;if((o|0)>=(v|0))break b;n=k[(k[w>>2]|0)+(o<<4)>>2]|0;n=BI(a,b,n,n+(_b[k[q>>2]&127](b,n)|0)|0)|0;if(!n){f=1;break a}}if((k[a+144>>2]|0)!=(b|0)){f=8;break a}k[a+288>>2]=k[(k[w>>2]|0)+(f<<4)>>2];f=8;break a}else{h=0;g=0}while(0);k[a+384>>2]=h;f=k[J+8>>2]|0;d:do if((f|0)!=0?(x=k[f>>2]|0,(i[x+-1>>0]|0)!=0):0){if((h|0)>0){f=0;while(1){if((k[I+(f<<2)>>2]|0)==(x|0))break;f=f+2|0;if((f|0)>=(h|0))break d}k[a+388>>2]=f}}else B=38;while(0);if((B|0)==38)k[a+388>>2]=-1;if((y|0)>0){o=J+20|0;n=0;while(1){f=k[o>>2]|0;j=f+(n*12|0)|0;c=k[j>>2]|0;m=(k[c>>2]|0)+-1|0;do if((i[m>>0]|0)==0?(z=f+(n*12|0)+8|0,A=k[z>>2]|0,(A|0)!=0):0){f=k[c+4>>2]|0;if(!f){i[m>>0]=1;k[I+(h<<2)>>2]=k[k[j>>2]>>2];k[I+(h+1<<2)>>2]=k[z>>2];f=h+2|0;break}if(i[c+9>>0]|0){f=WI(a,f,c,A,e)|0;if(!f){f=h;break}else break a}else{i[m>>0]=2;k[I+(h<<2)>>2]=k[k[j>>2]>>2];k[I+(h+1<<2)>>2]=k[z>>2];f=h+2|0;g=g+1|0;break}}else f=h;while(0);n=n+1|0;if((n|0)>=(y|0)){H=f;c=g;break}else h=f}}else{H=h;c=g}k[I+(H<<2)>>2]=0;e:do if(c){j=a+400|0;f=k[j>>2]|0;G=a+404|0;g=i[G>>0]|0;h=g&255;if(!(c<<1>>h)){h=1<<h;if(!f){g=k[a+396>>2]|0;B=57}}else{while(1){f=g+1<<24>>24;if(!(c>>(g&255)))break;else g=f}h=(f&255)<3?3:f;i[G>>0]=h;h=h&255;f=a+396|0;g=_b[k[a+16>>2]&127](k[f>>2]|0,12<<h)|0;if(!g){f=1;break a}k[f>>2]=g;h=1<<h;B=57}if((B|0)==57){f=h;do{f=f+-1|0;k[g+(f*12|0)>>2]=-1}while((f|0)!=0);f=-1}F=f+-1|0;k[j>>2]=F;if((H|0)>0){u=a+496|0;v=K+40|0;w=a+416|0;b=a+428|0;x=a+424|0;y=h+-1|0;z=a+396|0;A=a+237|0;B=a+432|0;C=a+472|0;D=0-h|0;E=y>>>2;f=0;g=c;while(1){t=I+(f<<2)|0;m=k[t>>2]|0;j=m+-1|0;if((i[j>>0]|0)==2){c=k[u>>2]|0;i[j>>0]=0;s=(lI(a,v,m,0)|0)+4|0;s=k[(k[s>>2]|0)+4>>2]|0;if(!s){f=27;break a}o=s+20|0;if((k[o>>2]|0)>0){p=s+16|0;q=0;j=c;do{n=i[(k[p>>2]|0)+q>>0]|0;c=k[b>>2]|0;if((c|0)==(k[x>>2]|0)){if(!((mI(w)|0)<<24>>24)){f=1;break a}c=k[b>>2]|0}k[b>>2]=c+1;i[c>>0]=n;j=n&255^j*1000003;q=q+1|0}while((q|0)<(k[o>>2]|0))}else j=c;while(1){c=m+1|0;if((i[m>>0]|0)==58)break;else m=c}while(1){o=i[c>>0]|0;m=k[b>>2]|0;if((m|0)==(k[x>>2]|0)){if(!((mI(w)|0)<<24>>24)){f=1;break a}m=k[b>>2]|0;n=i[c>>0]|0}else n=o;k[b>>2]=m+1;i[m>>0]=n;j=o&255^j*1000003;if(!(i[c>>0]|0))break;else c=c+1|0}c=j&y;q=k[z>>2]|0;if((k[q+(c*12|0)>>2]|0)==(F|0)){r=j&D;p=0;while(1){if((j|0)==(k[q+(c*12|0)+4>>2]|0)){n=k[B>>2]|0;o=k[q+(c*12|0)+8>>2]|0;L=i[n>>0]|0;m=L<<24>>24==0;if(!(m|L<<24>>24!=(i[o>>0]|0)))do{n=n+1|0;o=o+1|0;L=i[n>>0]|0;m=L<<24>>24==0}while(!(m|L<<24>>24!=(i[o>>0]|0)));if(m){f=8;break a}}if(!(p<<24>>24))m=(r>>>((l[G>>0]|0)+-1|0)&E|1)&255;else m=p;L=m&255;c=c+((c|0)<(L|0)?h:0)-L|0;if((k[q+(c*12|0)>>2]|0)==(F|0))p=m;else{n=c;break}}}else n=c;if(i[A>>0]|0){i[(k[b>>2]|0)+-1>>0]=i[C>>0]|0;m=k[k[s>>2]>>2]|0;while(1){c=k[b>>2]|0;if((c|0)==(k[x>>2]|0)){if(!((mI(w)|0)<<24>>24)){f=1;break a}c=k[b>>2]|0}L=i[m>>0]|0;k[b>>2]=c+1;i[c>>0]=L;if(!(i[m>>0]|0))break;else m=m+1|0}}s=k[B>>2]|0;k[B>>2]=k[b>>2];k[t>>2]=s;L=k[z>>2]|0;k[L+(n*12|0)>>2]=F;k[L+(n*12|0)+4>>2]=j;k[L+(n*12|0)+8>>2]=s;g=g+-1|0;if(!g)break}else i[j>>0]=0;f=f+2|0;if((f|0)>=(H|0))break e}f=f+2|0}else f=0}else f=0;while(0);if((f|0)<(H|0))do{i[(k[I+(f<<2)>>2]|0)+-1>>0]=0;f=f+2|0}while((f|0)<(H|0));f=k[e>>2]|0;if(f)do{i[(k[k[f+12>>2]>>2]|0)+-1>>0]=0;f=k[f+4>>2]|0}while((f|0)!=0);if(!(i[a+236>>0]|0))f=0;else{f=k[J+4>>2]|0;if(!f){f=k[K+156>>2]|0;if(!f){f=0;break}h=k[d>>2]|0}else{f=k[f+4>>2]|0;if(!f){f=27;break}g=k[d>>2]|0;while(1){h=g+1|0;if((i[g>>0]|0)==58)break;else g=h}}if(i[a+237>>0]|0){g=k[f>>2]|0;j=k[g>>2]|0;if(!j)m=0;else{c=0;while(1){m=c+1|0;if(!(i[j+c>>0]|0))break;else c=m}}}else{g=k[f>>2]|0;m=0}k[d+4>>2]=h;r=f+20|0;j=k[r>>2]|0;k[d+16>>2]=j;k[d+8>>2]=k[g>>2];k[d+20>>2]=m;c=0;while(1){g=c+1|0;if(!(i[h+c>>0]|0))break;else c=g}n=g+m+j|0;o=f+24|0;if((n|0)>(k[o>>2]|0)){j=n+24|0;n=Rb[k[a+12>>2]&63](j)|0;if(!n){f=1;break}k[o>>2]=j;o=f+16|0;GP(n|0,k[o>>2]|0,k[r>>2]|0)|0;j=k[a+364>>2]|0;q=k[o>>2]|0;if(j)do{p=j+12|0;if((k[p>>2]|0)==(q|0))k[p>>2]=n;j=k[j>>2]|0}while((j|0)!=0);Nb[k[a+20>>2]&127](q);k[o>>2]=n;j=k[r>>2]|0}else{n=f+16|0;o=n;n=k[n>>2]|0}GP(n+j|0,h|0,g|0)|0;if(m){L=j+c|0;i[n+L>>0]=i[a+472>>0]|0;GP(n+(L+1)|0,k[k[f>>2]>>2]|0,m|0)|0}k[d>>2]=k[o>>2];f=0}}while(0);return f|0}function QI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0;p=r;r=r+16|0;n=p;k[a+280>>2]=63;h=a+288|0;k[h>>2]=b;j=a+144|0;g=a+292|0;l=a+80|0;m=a+480|0;f=b;a:while(1){k[n>>2]=0;q=k[j>>2]|0;q=cc[k[q>>2]&127](q,f,c,n)|0;b=k[n>>2]|0;k[g>>2]=b;e=b;switch(q|0){case -15:{o=3;break a}case -4:{b=f;o=7;break a}case 0:{o=12;break a}case -1:{b=f;o=13;break a}case -2:{b=f;o=15;break a}case 15:{if(k[l>>2]|0)sI(a,k[j>>2]|0,f,e);break}case 11:{if(!(LI(a,k[j>>2]|0,f,e)|0)){b=1;break a}break}case 13:{if(!(MI(a,k[j>>2]|0,f,e)|0)){b=1;break a}break}default:{b=9;break a}}b=k[n>>2]|0;k[h>>2]=b;switch(k[m>>2]|0){case 2:{b=35;break a}case 3:{o=18;break a}default:f=b}}do if((o|0)==3){if(k[l>>2]|0){sI(a,k[j>>2]|0,f,e);if((k[m>>2]|0)==2){b=35;break}b=k[n>>2]|0}k[d>>2]=b;b=0}else if((o|0)==7){k[d>>2]=b;b=0}else if((o|0)==12){k[h>>2]=b;b=4}else if((o|0)==13)if(!(i[a+484>>0]|0)){k[d>>2]=b;b=0}else b=5;else if((o|0)==15)if(!(i[a+484>>0]|0)){k[d>>2]=b;b=0}else b=6;else if((o|0)==18){k[d>>2]=b;b=0}while(0);r=p;return b|0}function RI(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=r;r=r+16|0;z=B+8|0;y=B+4|0;u=B+12|0;v=B;g=k[c>>2]|0;k[z>>2]=g;if((k[a+144>>2]|0)==(b|0)){x=a+288|0;k[x>>2]=g;w=a+292|0}else{x=k[a+300>>2]|0;w=x+4|0}k[x>>2]=g;k[c>>2]=0;p=b+8|0;j=a+60|0;q=a+80|0;s=a+4|0;t=a+480|0;l=b+72|0;m=a+44|0;n=b+60|0;o=a+48|0;a:while(1){h=cc[k[p>>2]&127](b,k[z>>2]|0,d,y)|0;k[w>>2]=k[y>>2];b:do switch(h|0){case 40:{A=6;break a}case 0:{A=22;break a}case -2:{A=23;break a}case -4:case -1:{A=25;break a}case 7:{g=k[j>>2]|0;if(g){i[u>>0]=10;dc[g&127](k[s>>2]|0,u,1);break b}if(k[q>>2]|0)sI(a,b,k[z>>2]|0,k[y>>2]|0);break}case 6:{g=k[j>>2]|0;if(!g){if(!(k[q>>2]|0))break b;sI(a,b,k[z>>2]|0,k[y>>2]|0);break b}if(i[l>>0]|0){h=k[z>>2]|0;dc[g&127](k[s>>2]|0,h,(k[y>>2]|0)-h|0);break b}while(1){k[v>>2]=k[m>>2];Mb[k[n>>2]&31](b,z,k[y>>2]|0,v,k[o>>2]|0);k[w>>2]=k[y>>2];h=k[m>>2]|0;dc[g&127](k[s>>2]|0,h,(k[v>>2]|0)-h|0);h=k[z>>2]|0;if((h|0)==(k[y>>2]|0))break b;k[x>>2]=h}}default:{A=27;break a}}while(0);h=k[y>>2]|0;k[z>>2]=h;k[x>>2]=h;switch(k[t>>2]|0){case 3:{A=29;break a}case 2:{g=35;break a}default:{}}}if((A|0)==6){g=k[a+76>>2]|0;if(!g){if(k[q>>2]|0)sI(a,b,k[z>>2]|0,k[y>>2]|0)}else Nb[g&127](k[s>>2]|0);g=k[y>>2]|0;k[c>>2]=g;k[e>>2]=g;g=(k[t>>2]|0)==2?35:0}else if((A|0)==22){k[x>>2]=k[y>>2];g=4}else if((A|0)==23)if(!(f<<24>>24))g=6;else{k[e>>2]=k[z>>2];g=0}else if((A|0)==25)if(!(f<<24>>24))g=20;else{k[e>>2]=k[z>>2];g=0}else if((A|0)==27){k[x>>2]=k[y>>2];g=23}else if((A|0)==29){k[e>>2]=k[y>>2];g=0}r=B;return g|0}function SI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;f=r;r=r+16|0;e=f;k[e>>2]=b;b=RI(a,k[a+144>>2]|0,e,c,d,(i[a+484>>0]|0)==0&1)|0;e=k[e>>2]|0;do if(!((b|0)!=0|(e|0)==0)){b=a+280|0;if(!(k[a+476>>2]|0)){k[b>>2]=58;b=zI(a,e,c,d)|0;break}else{k[b>>2]=64;b=TI(a,e,c,d)|0;break}}while(0);r=f;return b|0}function TI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=NI(a,1,k[a+144>>2]|0,b,c,d,(i[a+484>>0]|0)==0&1)|0;if((c|0)==0?(UI(a)|0)<<24>>24==0:0)c=1;return c|0}function UI(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0;m=a+16|0;a=k[a+364>>2]|0;a:do if(!a)a=1;else while(1){j=(k[a+24>>2]|0)+1|0;h=a+36|0;e=k[h>>2]|0;b=e+j|0;l=a+4|0;d=k[l>>2]|0;if((d|0)==(b|0)){a=1;break a}i=a+8|0;c=k[i>>2]|0;f=c+j|0;g=a+40|0;if((f|0)>((k[g>>2]|0)-e|0)){e=_b[k[m>>2]&127](e,f)|0;if(!e){a=0;break a}b=a+12|0;d=k[h>>2]|0;if((k[b>>2]|0)==(d|0))k[b>>2]=e;b=a+16|0;c=k[b>>2]|0;if(c)k[b>>2]=e+(c-d);k[h>>2]=e;k[g>>2]=e+f;d=k[l>>2]|0;c=k[i>>2]|0;b=e+j|0}GP(b|0,d|0,c|0)|0;k[l>>2]=b;a=k[a>>2]|0;if(!a){a=1;break}}while(0);return a|0}function VI(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0;l=k[a+356>>2]|0;f=l+80|0;g=l+92|0;h=l+88|0;j=l+60|0;l=l+96|0;m=b+4|0;n=k[b>>2]|0;a:while(1){switch(i[n>>0]|0){case 0:{c=1;break a}case 58:{e=k[b>>2]|0;c=k[g>>2]|0;d=(c|0)==(k[h>>2]|0);if((e|0)!=(n|0))do{if(d){if(!((mI(f)|0)<<24>>24)){c=0;break a}c=k[g>>2]|0}d=i[e>>0]|0;k[g>>2]=c+1;i[c>>0]=d;e=e+1|0;c=k[g>>2]|0;d=(c|0)==(k[h>>2]|0)}while((e|0)!=(n|0));if(d){if(!((mI(f)|0)<<24>>24)){c=0;break a}c=k[g>>2]|0}k[g>>2]=c+1;i[c>>0]=0;c=lI(a,j,k[l>>2]|0,8)|0;if(!c){c=0;break a}d=k[l>>2]|0;if((k[c>>2]|0)==(d|0))k[l>>2]=k[g>>2];else k[g>>2]=d;k[m>>2]=c;break}default:{}}n=n+1|0}return c|0}function WI(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0;h=i[d>>0]|0;g=k[b>>2]|0;f=(g|0)==0;do if(!(h<<24>>24))if(f){g=1;h=1;j=0;f=0;l=21}else f=28;else{if(((!f?(i[g>>0]|0)==120:0)?(i[g+1>>0]|0)==109:0)?(i[g+2>>0]|0)==108:0){f=i[g+3>>0]|0;if((f<<24>>24==110?(i[g+4>>0]|0)==115:0)?(i[g+5>>0]|0)==0:0){f=39;break}f=f<<24>>24==0&1}else f=0;n=f<<24>>24!=0;g=1;m=h;l=1;h=1;j=0;do{do if(g){if((j|0)<=36?m<<24>>24==(i[179669+j>>0]|0):0)break;l=0}else l=0;while(0);do if(!(n|h<<24>>24==0)){if((j|0)<=29?m<<24>>24==(i[179706+j>>0]|0):0)break;h=0}while(0);j=j+1|0;m=i[d+j>>0]|0;g=l<<24>>24!=0}while(m<<24>>24!=0);l=21}while(0);a:do if((l|0)==21){if((f&255|0)!=(g&(j|0)==36&1|0)){f=f<<24>>24!=0?38:40;break}if(!(h<<24>>24!=0&(j|0)==29)){n=a+472|0;o=((i[n>>0]|0)!=0&1)+j|0;f=a+376|0;h=k[f>>2]|0;do if(!h){f=a+12|0;g=Rb[k[f>>2]&63](28)|0;if(!g){f=1;break a}h=o+24|0;m=Rb[k[f>>2]&63](h)|0;k[g+16>>2]=m;if(!m){Nb[k[a+20>>2]&127](g);f=1;break a}else{k[g+24>>2]=h;h=g;break}}else{g=h+24|0;if((o|0)>(k[g>>2]|0)){j=h+16|0;l=o+24|0;m=_b[k[a+16>>2]&127](k[j>>2]|0,l)|0;if(!m){f=1;break a}k[j>>2]=m;k[g>>2]=l}k[f>>2]=k[h+4>>2]}while(0);k[h+20>>2]=o;g=h+16|0;GP(k[g>>2]|0,d|0,o|0)|0;f=i[n>>0]|0;if(f<<24>>24)i[(k[g>>2]|0)+(o+-1)>>0]=f;k[h>>2]=b;k[h+12>>2]=c;f=b+4|0;k[h+8>>2]=k[f>>2];if((i[d>>0]|0)==0?((k[a+356>>2]|0)+152|0)==(b|0):0)g=0;else g=h;k[f>>2]=g;k[h+4>>2]=k[e>>2];k[e>>2]=h;if((c|0)!=0?(p=k[a+100>>2]|0,(p|0)!=0):0){dc[p&127](k[a+4>>2]|0,k[b>>2]|0,(k[f>>2]|0)!=0?d:0);f=0}else f=0}else f=40}while(0);return f|0}function XI(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;I=r;r=r+16|0;G=I;F=I+4|0;l=k[a+356>>2]|0;x=b+16|0;y=b+44|0;z=c<<24>>24==0;A=f+12|0;B=f+16|0;C=f+8|0;D=b+68|0;E=b+48|0;m=a+440|0;n=a+456|0;o=a+452|0;p=(l+80|0)==(f|0);q=a+272|0;t=l+130|0;u=l+129|0;v=a+300|0;w=a+228|0;a:while(1){b:do switch(cc[k[x>>2]&127](b,d,e,G)|0){case -4:{d=0;break a}case 0:{H=3;break a}case -1:{H=5;break a}case 10:{g=_b[k[y>>2]&127](b,d)|0;if((g|0)<0){H=8;break a}if(z&(g|0)==32){h=k[A>>2]|0;if((h|0)==(k[B>>2]|0))break b;if((i[h+-1>>0]|0)==32)break b}h=_I(g,F)|0;if(!h){H=15;break a}if((h|0)>0){g=0;do{d=k[A>>2]|0;if((d|0)==(k[C>>2]|0)){if(!((mI(f)|0)<<24>>24)){d=1;break a}d=k[A>>2]|0}j=i[F+g>>0]|0;k[A>>2]=d+1;i[d>>0]=j;g=g+1|0}while((g|0)<(h|0))}break}case 6:{if(!(CI(f,b,d,k[G>>2]|0)|0)){d=1;break a}break}case -3:{k[G>>2]=d+(k[D>>2]|0);H=23;break}case 7:case 39:{H=23;break}case 9:{g=k[D>>2]|0;g=(Tb[k[E>>2]&63](b,d+g|0,(k[G>>2]|0)+(0-g)|0)|0)&255;if(g<<24>>24){d=k[A>>2]|0;if((d|0)==(k[C>>2]|0)){if(!((mI(f)|0)<<24>>24)){d=1;break a}d=k[A>>2]|0}k[A>>2]=d+1;i[d>>0]=g;break b}g=k[D>>2]|0;g=xI(m,b,d+g|0,(k[G>>2]|0)+(0-g)|0)|0;if(!g){d=1;break a}j=lI(a,l,g,0)|0;k[o>>2]=k[n>>2];do if(p){if(!(k[q>>2]|0))if(!j)break b;else break;if(!(i[t>>0]|0)){g=(j|0)!=0;if(!(i[u>>0]|0)){H=45;break}else{s=g;H=47;break}}else{g=(j|0)!=0;if(!(k[v>>2]|0)){H=45;break}else{s=g;H=47;break}}}else if(!(i[u>>0]|0))if(!j){d=11;break a}else{H=46;break}else{g=(j|0)!=0;if(!(i[t>>0]|0)){s=g;H=47;break}else{H=45;break}}while(0);if((H|0)==45){H=0;if(g)H=46;else{d=11;break a}}else if((H|0)==47?(H=0,!s):0)break b;if((H|0)==46?(H=0,(i[j+34>>0]|0)==0):0){d=24;break a}h=j+32|0;if(i[h>>0]|0){H=49;break a}if(k[j+28>>2]|0){H=52;break a}g=k[j+4>>2]|0;if(!g){H=55;break a}d=g+(k[j+8>>2]|0)|0;i[h>>0]=1;d=XI(a,k[w>>2]|0,c,g,d,f)|0;i[h>>0]=0;if(d)break a;break}default:{H=58;break a}}while(0);do if((H|0)==23){H=0;d=k[A>>2]|0;if(z){if((d|0)==(k[B>>2]|0))break;if((i[d+-1>>0]|0)==32)break}if((d|0)==(k[C>>2]|0)){if(!((mI(f)|0)<<24>>24)){d=1;break a}d=k[A>>2]|0}k[A>>2]=d+1;i[d>>0]=32}while(0);d=k[G>>2]|0}if((H|0)==3)if((k[a+144>>2]|0)==(b|0)){k[a+288>>2]=k[G>>2];d=4}else d=4;else if((H|0)==5)if((k[a+144>>2]|0)==(b|0)){k[a+288>>2]=d;d=4}else d=4;else if((H|0)==8)if((k[a+144>>2]|0)==(b|0)){k[a+288>>2]=d;d=14}else d=14;else if((H|0)==15)if((k[a+144>>2]|0)==(b|0)){k[a+288>>2]=d;d=14}else d=14;else if((H|0)==49)if((k[a+144>>2]|0)==(b|0)){k[a+288>>2]=d;d=12}else d=12;else if((H|0)==52)if((k[a+144>>2]|0)==(b|0)){k[a+288>>2]=d;d=15}else d=15;else if((H|0)==55)if((k[a+144>>2]|0)==(b|0)){k[a+288>>2]=d;d=16}else d=16;else if((H|0)==58)if((k[a+144>>2]|0)==(b|0)){k[a+288>>2]=d;d=23}else d=23;r=I;return d|0}function YI(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;h=r;r=r+1040|0;e=h;c=k[a+124>>2]|0;a:do if(!c)c=18;else{IP(e|0,-1,1024)|0;d=e+1028|0;k[d>>2]=0;g=e+1024|0;k[g>>2]=0;f=e+1032|0;k[f>>2]=0;do if(Tb[c&63](k[a+248>>2]|0,b,e)|0){b=k[a+12>>2]|0;c=$I()|0;c=Rb[b&63](c)|0;k[a+240>>2]=c;if(!c){c=k[f>>2]|0;if(!c)c=1;else{Nb[c&127](k[g>>2]|0);c=1}}else{c=cc[(i[a+236>>0]<<24>>24!=0?65:66)&127](c,e,k[d>>2]|0,k[g>>2]|0)|0;if(!c)break;k[a+244>>2]=k[g>>2];k[a+252>>2]=k[f>>2];k[a+144>>2]=c;c=0}break a}while(0);c=k[f>>2]|0;if(c)Nb[c&127](k[g>>2]|0);c=18}while(0);r=h;return c|0}function ZI(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=tI(a)|0;if(!e){k[a+280>>2]=60;e=uI(a,b,c,d)|0}return e|0}function _I(a,b){a=a|0;b=b|0;do if((a|0)>=0){if((a|0)<128){i[b>>0]=a;b=1;break}if((a|0)<2048){i[b>>0]=a>>>6|192;i[b+1>>0]=a&63|128;b=2;break}if((a|0)<65536){i[b>>0]=a>>>12|224;i[b+1>>0]=a>>>6&63|128;i[b+2>>0]=a&63|128;b=3;break}if((a|0)<1114112){i[b>>0]=a>>>18|240;i[b+1>>0]=a>>>12&63|128;i[b+2>>0]=a>>>6&63|128;i[b+3>>0]=a&63|128;b=4}else b=0}else b=0;while(0);return b|0}function $I(){return 1912}function aJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,m=0,n=0,o=0,p=0,q=0;e=0;do{i[a+e>>0]=i[92080+e>>0]|0;e=e+1|0}while((e|0)!=368);e=0;a:while(1){switch(i[92156+e>>0]|0){case 0:case 28:break;default:if((k[b+(e<<2)>>2]|0)!=(e|0)){a=0;break a}}e=e+1|0;if((e|0)>=128){q=3;break}}b:do if((q|0)==3){n=a+376|0;o=a+888|0;p=0;do{m=k[b+(p<<2)>>2]|0;do if((m|0)==-1){i[a+(p+76)>>0]=1;j[n+(p<<1)>>1]=-1;i[o+(p<<2)>>0]=1;i[o+(p<<2)+1>>0]=0}else{if((m|0)<0){if((m|0)<-4){a=0;break b}i[a+(p+76)>>0]=3-m;i[o+(p<<2)>>0]=0;j[n+(p<<1)>>1]=0;break}if((m|0)<128){e=i[92156+m>>0]|0;switch(e<<24>>24){case 0:case 28:break;default:if((m|0)!=(p|0)){a=0;break b}}i[a+(p+76)>>0]=e;i[o+(p<<2)>>0]=1;i[o+(p<<2)+1>>0]=m;j[n+(p<<1)>>1]=(m|0)==0?-1:m&65535;break}e=m>>8;switch(e|0){case 223:case 222:case 221:case 220:case 219:case 218:case 217:case 216:{q=19;break}case 0:{if(!(i[92156+m>>0]|0))q=19;break}case 255:{if((m&-2|0)==65534)q=19;break}default:{}}if((q|0)==19){q=0;i[a+(p+76)>>0]=0;j[n+(p<<1)>>1]=-1;i[o+(p<<2)>>0]=1;i[o+(p<<2)+1>>0]=0;break}if((m|0)>65535){a=0;break b}f=m>>>5&7;g=1<<(m&31);do if(!(k[92448+((l[179736+e>>0]<<3|f)<<2)>>2]&g)){h=a+(p+76)|0;if(!(k[92448+((l[179992+e>>0]<<3|f)<<2)>>2]&g)){i[h>>0]=28;break}else{i[h>>0]=26;break}}else i[a+(p+76)>>0]=22;while(0);h=(_I(m,o+(p<<2)+1|0)|0)&255;i[o+(p<<2)>>0]=h;j[n+(p<<1)>>1]=m}while(0);p=p+1|0}while((p|0)<256);k[a+372>>2]=d;k[a+368>>2]=c;if(c){k[a+332>>2]=110;k[a+336>>2]=110;k[a+340>>2]=110;k[a+344>>2]=111;k[a+348>>2]=111;k[a+352>>2]=111;k[a+356>>2]=112;k[a+360>>2]=112;k[a+364>>2]=112}k[a+60>>2]=17;k[a+64>>2]=18}while(0);return a|0}function bJ(){return 93728}function cJ(a,b,c){a=a|0;b=b|0;c=c|0;c=nJ(c)|0;if((c|0)==-1)c=0;else{i[a+73>>0]=c;k[a>>2]=67;k[a+4>>2]=68;k[a+52>>2]=27;k[a+76>>2]=b;k[b>>2]=a;c=1}return c|0}function dJ(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;return sJ(46,a,b,c,d,e,f,g,h,i,j)|0}function eJ(){return 94096}function fJ(a,b,c){a=a|0;b=b|0;c=c|0;c=nJ(c)|0;if((c|0)==-1)c=0;else{i[a+73>>0]=c;k[a>>2]=69;k[a+4>>2]=70;k[a+52>>2]=27;k[a+76>>2]=b;k[b>>2]=a;c=1}return c|0}function gJ(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;return sJ(47,a,b,c,d,e,f,g,h,i,j)|0}function hJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=aJ(a,b,c,d)|0;if(c)i[c+76+58>>0]=23;return c|0}
function ic(a){a=a|0;var b=0;b=r;r=r+a|0;r=r+15&-16;return b|0}function jc(){return r|0}function kc(a){a=a|0;r=a}function lc(a,b){a=a|0;b=b|0;r=a;s=b}function mc(a,b){a=a|0;b=b|0;if(!w){w=a;x=b}}function nc(a){a=a|0;i[t>>0]=i[a>>0];i[t+1>>0]=i[a+1>>0];i[t+2>>0]=i[a+2>>0];i[t+3>>0]=i[a+3>>0]}function oc(a){a=a|0;i[t>>0]=i[a>>0];i[t+1>>0]=i[a+1>>0];i[t+2>>0]=i[a+2>>0];i[t+3>>0]=i[a+3>>0];i[t+4>>0]=i[a+4>>0];i[t+5>>0]=i[a+5>>0];i[t+6>>0]=i[a+6>>0];i[t+7>>0]=i[a+7>>0]}function pc(a){a=a|0;L=a}function qc(){return L|0}function rc(a){a=a|0;k[10873]=a;return 0}function sc(){return k[10873]|0}function tc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;g=r;r=r+16|0;f=g+4|0;e=g;k[f>>2]=0;if(!(k[10872]|0)){d=lw()|0;k[10872]=d;pw(d,43496);pw(k[10872]|0,49428);pw(k[10872]|0,49888)}Xr(1)|0;Wr(18)|0;a=zt(a)|0;if(!a)a=0;else{d=a;a=0;do{if(!a){mw(k[10872]|0,d,c)|0;ow(k[10872]|0,d,b,f,e)|0}d=zt(176676)|0;a=k[f>>2]|0}while((d|0)!=0)}r=g;return a|0}function uc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;d=r;r=r+1056|0;i=d+16|0;g=d+8|0;h=d;e=d+32|0;a=a+16|0;f=k[44144+(k[(k[a>>2]|0)+12>>2]<<2)>>2]|0;cs(f,103925)|0;k[i>>2]=k[c>>2];k[i+4>>2]=k[c+4>>2];k[i+8>>2]=k[c+8>>2];k[i+12>>2]=k[c+12>>2];vc(f,i);p[h>>3]=+p[c+16>>3]-+p[c>>3];TN(e,103928,h)|0;wc(e,1);cs(f,e)|0;p[g>>3]=+p[c+24>>3]-+p[c+8>>3];TN(e,103928,g)|0;wc(e,1);cs(f,e)|0;xc(k[44144+(k[(k[a>>2]|0)+12>>2]<<2)>>2]|0,176676,k[b+8>>2]|0);r=d;return}function vc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0.0,g=0;c=r;r=r+1040|0;e=c+8|0;g=c;d=c+16|0;p[g>>3]=+p[b>>3];TN(d,103928,g)|0;wc(d,1);cs(a,d)|0;f=+Uy(+p[b+8>>3]);p[e>>3]=f;TN(d,103928,e)|0;wc(d,1);cs(a,d)|0;r=c;return}function wc(a,b){a=a|0;b=b|0;var c=0,d=0;c=oO(a,46)|0;if(!c){if(b){c=a+(uO(a)|0)|0;d=10}}else{while(1){a=c+1|0;if(!(i[a>>0]|0))break;else c=a}a:while(1){switch(i[c>>0]|0){case 46:{d=5;break a}case 48:break;default:{d=6;break a}}i[c>>0]=0;c=c+-1|0}if((d|0)==5)i[c>>0]=0;else if((d|0)==6)c=c+1|0;if(b)d=10}if((d|0)==10){i[c>>0]=32;i[c+1>>0]=0}return}function xc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;d=r;r=r+1040|0;f=d;e=d+8|0;g=uO(c)|0;k[f>>2]=b;k[f+4>>2]=g;TN(e,104196,f)|0;cs(a,e)|0;cs(a,c)|0;c=a+4|0;b=k[c>>2]|0;if(b>>>0>=(k[a+8>>2]|0)>>>0){as(a,1)|0;b=k[c>>2]|0}k[c>>2]=b+1;i[b>>0]=32;r=d;return}function yc(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;g=r;r=r+16|0;c=g+4|0;b=g;f=k[(k[a+16>>2]|0)+8>>2]|0;a=a+64|0;switch(k[a>>2]|0){case 0:{Xy(f);break}case 1:{if(j[(k[f+8>>2]|0)+136>>1]&1)KB(f);break}case 4:case 5:case 6:{Wy(f,b,c);e=k[b>>2]|0;c=k[c>>2]|0;b=k[a>>2]|0;a=uP(8240)|0;k[11048]=a;a:do switch(b|0){case 6:{j[a+8232>>1]=14;k[a+8236>>2]=104115;break}case 5:{j[a+8232>>1]=12;k[a+8236>>2]=104119;break}default:{a=ss(f,104103)|0;if(((a|0)!=0?(i[a>>0]|0)!=0:0)?(d=Nc(a)|0,(d&65535)>10):0){b=k[11048]|0;j[b+8232>>1]=d;k[b+8236>>2]=a;break a}b=Nc(104123)|0;d=k[11048]|0;j[d+8232>>1]=b;k[d+8236>>2]=104123}}while(0);b=f+8|0;a=k[b>>2]|0;if(!(k[a+180>>2]|0))k[k[11048]>>2]=0;else{a=LB(f,0,135762,176676)|0;k[k[11048]>>2]=a;a=k[b>>2]|0}if(!(i[a+113>>0]&8))k[(k[11048]|0)+4>>2]=0;else{d=LB(f,0,104127,176676)|0;k[(k[11048]|0)+4>>2]=d}d=LB(f,1,135762,176676)|0;k[(k[11048]|0)+8>>2]=d;d=LB(f,1,104127,176676)|0;k[(k[11048]|0)+12>>2]=d;d=LB(f,2,135762,176676)|0;k[(k[11048]|0)+16>>2]=d;if(!c)k[(k[11048]|0)+20>>2]=0;else{d=LB(f,2,104135,176676)|0;k[(k[11048]|0)+20>>2]=d}if(!e)k[(k[11048]|0)+24>>2]=0;else{e=LB(f,2,104143,176676)|0;k[(k[11048]|0)+24>>2]=e}a=i[(k[b>>2]|0)+113>>0]|0;if(!(a&33))k[(k[11048]|0)+28>>2]=0;else{a=LB(f,2,104127,176676)|0;k[(k[11048]|0)+28>>2]=a;a=i[(k[b>>2]|0)+113>>0]|0}if(!(a&2))k[(k[11048]|0)+32>>2]=0;else{a=LB(f,2,104151,176676)|0;k[(k[11048]|0)+32>>2]=a;a=i[(k[b>>2]|0)+113>>0]|0}if(!(a&4)){k[(k[11048]|0)+36>>2]=0;a=0}else{a=LB(f,2,104160,176676)|0;k[(k[11048]|0)+36>>2]=a;a=0}do{$r(44256+(a<<4)|0,1024,(k[11048]|0)+40+(a<<10)|0);a=a+1|0}while((a|0)!=8);break}default:{}}r=g;return}function zc(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;f=k[(k[a+16>>2]|0)+8>>2]|0;if(!(k[11096]|0)){k[11096]=k[12923];k[11097]=57;k[11098]=19}g=f+52|0;d=(k[g>>2]|0)+8|0;e=k[d>>2]|0;k[d>>2]=44384;switch(k[a+64>>2]|0){case 2:{Vy(a,f,a,0);break}case 3:{Vy(a,f,a,1);break}case 1:case 0:{if(!(k[a+152>>2]&134217728))Wu(f,a)|0;break}case 6:case 5:case 4:{b=k[11065]|0;if((b|0)==(k[11064]|0))c=f;else{c=k[k[11048]>>2]|0;if(!c){b=LB(f,0,135762,176676)|0;k[k[11048]>>2]=b;b=k[11065]|0;c=k[k[11048]>>2]|0}if(b>>>0>=(k[11066]|0)>>>0){as(44256,1)|0;b=k[11065]|0}i[b>>0]=0;d=k[11064]|0;k[11065]=d;vs(f,c,d)|0;c=f}if(k[(k[f+8>>2]|0)+12>>2]|0){d=k[(k[11048]|0)+4>>2]|0;b=k[11081]|0;if(b>>>0>=(k[11082]|0)>>>0){as(44320,1)|0;b=k[11081]|0}i[b>>0]=0;b=k[11080]|0;k[11081]=b;vs(c,d,b)|0}ws(c,104103,k[(k[11048]|0)+8236>>2]|0,176676)|0;ds(44256);ds(44272);ds(44288);ds(44304);ds(44320);ds(44336);ds(44352);ds(44368);vP(k[11048]|0);p[23]=1.0;p[27]=1.0;k[11052]=0;k[11056]=0;if(!(k[a+152>>2]&134217728))Wu(f,a)|0;break}default:{}}k[(k[g>>2]|0)+8>>2]=e;return}function Ac(a){a=a|0;var b=0,c=0;c=k[(k[a+16>>2]|0)+8>>2]|0;b=k[k[11048]>>2]|0;a=k[11069]|0;if(a>>>0>=(k[11070]|0)>>>0){as(44272,1)|0;a=k[11069]|0}i[a>>0]=0;a=k[11068]|0;k[11069]=a;vs(c,b,a)|0;if(k[(k[c+8>>2]|0)+12>>2]|0){b=k[(k[11048]|0)+4>>2]|0;a=k[11085]|0;if(a>>>0>=(k[11086]|0)>>>0){as(44336,1)|0;a=k[11085]|0}i[a>>0]=0;a=k[11084]|0;k[11085]=a;vs(c,b,a)|0}p[24]=1.0;p[28]=1.0;k[11053]=0;k[11057]=0;return}function Bc(a){a=a|0;var b=0,c=0;c=k[(k[a+16>>2]|0)+8>>2]|0;a=k[11069]|0;if((a|0)!=(k[11068]|0)){b=k[(k[11048]|0)+8>>2]|0;if(a>>>0>=(k[11070]|0)>>>0){as(44272,1)|0;a=k[11069]|0}i[a>>0]=0;a=k[11068]|0;k[11069]=a;vs(c,b,a)|0}a=k[11085]|0;if((a|0)!=(k[11084]|0)){b=k[(k[11048]|0)+12>>2]|0;if(a>>>0>=(k[11086]|0)>>>0){as(44336,1)|0;a=k[11085]|0}i[a>>0]=0;a=k[11084]|0;k[11085]=a;vs(c,b,a)|0}p[31]=1.0;p[33]=1.0;k[11060]=0;k[11062]=0;return}function Cc(a){a=a|0;var b=0,c=0;c=k[(k[a+16>>2]|0)+8>>2]|0;a=k[11069]|0;if((a|0)!=(k[11068]|0)){b=k[(k[11048]|0)+16>>2]|0;if(a>>>0>=(k[11070]|0)>>>0){as(44272,1)|0;a=k[11069]|0}i[a>>0]=0;a=k[11068]|0;k[11069]=a;vs(c,b,a)|0}a=k[11073]|0;if((a|0)!=(k[11072]|0)){b=k[(k[11048]|0)+24>>2]|0;if(a>>>0>=(k[11074]|0)>>>0){as(44288,1)|0;a=k[11073]|0}i[a>>0]=0;a=k[11072]|0;k[11073]=a;vs(c,b,a)|0}a=k[11077]|0;if((a|0)!=(k[11076]|0)){b=k[(k[11048]|0)+20>>2]|0;if(a>>>0>=(k[11078]|0)>>>0){as(44304,1)|0;a=k[11077]|0}i[a>>0]=0;a=k[11076]|0;k[11077]=a;vs(c,b,a)|0}a=k[11085]|0;if((a|0)!=(k[11084]|0)){b=k[(k[11048]|0)+28>>2]|0;if(a>>>0>=(k[11086]|0)>>>0){as(44336,1)|0;a=k[11085]|0}i[a>>0]=0;a=k[11084]|0;k[11085]=a;vs(c,b,a)|0}a=k[11089]|0;if((a|0)!=(k[11088]|0)){b=k[(k[11048]|0)+36>>2]|0;if(a>>>0>=(k[11090]|0)>>>0){as(44352,1)|0;a=k[11089]|0}i[a>>0]=0;a=k[11088]|0;k[11089]=a;vs(c,b,a)|0}a=k[11093]|0;if((a|0)!=(k[11092]|0)){b=k[(k[11048]|0)+32>>2]|0;if(a>>>0>=(k[11094]|0)>>>0){as(44368,1)|0;a=k[11093]|0}i[a>>0]=0;a=k[11092]|0;k[11093]=a;vs(c,b,a)|0}p[32]=1.0;p[34]=1.0;p[25]=1.0;p[26]=1.0;p[29]=1.0;p[30]=1.0;k[11061]=0;k[11063]=0;k[11054]=0;k[11055]=0;k[11058]=0;k[11059]=0;return}function Dc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0;u=r;r=r+1072|0;o=u+24|0;t=u+16|0;s=u+8|0;q=u;n=u+40|0;e=a+16|0;f=k[(k[e>>2]|0)+12>>2]|0;g=k[44144+(f<<2)>>2]|0;cs(g,104091)|0;a=c+4|0;p[o>>3]=+p[(k[a>>2]|0)+16>>3];TN(n,103928,o)|0;wc(n,1);cs(g,n)|0;xc(k[44144+(k[(k[e>>2]|0)+12>>2]<<2)>>2]|0,176676,k[k[a>>2]>>2]|0);Jc((k[e>>2]|0)+16|0);xc(k[44144+(k[(k[e>>2]|0)+12>>2]<<2)>>2]|0,112169,104024);h=i[c+48>>0]|0;h=h<<24>>24==108?-1:h<<24>>24==114&1;a=k[a>>2]|0;if(!a)d=0;else d=k[a+24>>2]&127;a=j[(k[11048]|0)+8232>>1]|0;if((a&65535)>14?(l=k[44196+((a&65535)+-15<<2)>>2]&d,m=44208+(f<<2)|0,(k[m>>2]|0)!=(l|0)):0){k[q>>2]=l;TN(n,104094,q)|0;cs(g,n)|0;k[m>>2]=l}q=b+8|0;p[q>>3]=+p[c+24>>3]+ +p[q>>3];cs(g,104100)|0;k[o>>2]=k[b>>2];k[o+4>>2]=k[b+4>>2];k[o+8>>2]=k[b+8>>2];k[o+12>>2]=k[b+12>>2];vc(g,o);k[s>>2]=h;TN(n,138351,s)|0;cs(g,n)|0;p[t>>3]=+p[c+32>>3];TN(n,103928,t)|0;wc(n,1);cs(g,n)|0;xc(k[44144+(k[(k[e>>2]|0)+12>>2]<<2)>>2]|0,176676,k[c>>2]|0);r=u;return}function Ec(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;j=r;r=r+1056|0;f=j+16|0;i=j+8|0;h=j;g=j+32|0;d=a+16|0;e=k[(k[d>>2]|0)+12>>2]|0;Ic(a);Jc((k[d>>2]|0)+16|0);xc(k[44144+(k[(k[d>>2]|0)+12>>2]<<2)>>2]|0,112169,104024);if(!c){d=k[44144+(e<<2)>>2]|0;cs(d,104088)|0}else{if((c&-2|0)==2)Lc(a,c,b,2);else{Jc((k[d>>2]|0)+56|0);xc(k[44144+(k[(k[d>>2]|0)+12>>2]<<2)>>2]|0,104079,104024)}d=k[44144+(e<<2)>>2]|0;cs(d,104085)|0};k[f>>2]=k[b>>2];k[f+4>>2]=k[b+4>>2];k[f+8>>2]=k[b+8>>2];k[f+12>>2]=k[b+12>>2];vc(d,f);p[h>>3]=+p[b+16>>3]-+p[b>>3];TN(g,103928,h)|0;wc(g,1);cs(d,g)|0;p[i>>3]=+p[b+24>>3]-+p[b+8>>3];TN(g,103928,i)|0;wc(g,1);cs(d,g)|0;r=j;return}function Fc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;Ic(a);e=a+16|0;Jc((k[e>>2]|0)+16|0);xc(k[44144+(k[(k[e>>2]|0)+12>>2]<<2)>>2]|0,112169,104024);if(!d)Kc(a,112,b,c);else{if((d&-2|0)==2)Lc(a,d,b,c);else{Jc((k[e>>2]|0)+56|0);xc(k[44144+(k[(k[e>>2]|0)+12>>2]<<2)>>2]|0,104079,104024)}Kc(a,80,b,c)}return}function Gc(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;Ic(a);e=a+16|0;Jc((k[e>>2]|0)+16|0);xc(k[44144+(k[(k[e>>2]|0)+12>>2]<<2)>>2]|0,112169,104024);if(!f)Kc(a,66,b,c);else{if((f&-2|0)==2)Lc(a,f,b,c);else{Jc((k[e>>2]|0)+56|0);xc(k[44144+(k[(k[e>>2]|0)+12>>2]<<2)>>2]|0,104079,104024)}Kc(a,98,b,c)}return}function Hc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;Ic(a);d=a+16|0;Jc((k[d>>2]|0)+16|0);xc(k[44144+(k[(k[d>>2]|0)+12>>2]<<2)>>2]|0,112169,104024);Kc(a,76,b,c);return}function Ic(a){a=a|0;var b=0,c=0.0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0;m=r;r=r+1184|0;e=m;d=m+24|0;j=m+8|0;$r(j,1024,m+152|0);h=a+16|0;a=k[h>>2]|0;c=+p[a+152>>3];b=184+(k[a+12>>2]<<3)|0;if(c!=+p[b>>3]){p[b>>3]=c;cs(j,104057)|0;p[e>>3]=+p[(k[h>>2]|0)+152>>3];TN(d,104071,e)|0;wc(d,0);cs(j,d)|0;d=j+4|0;a=k[d>>2]|0;b=j+8|0;if(a>>>0>=(k[b>>2]|0)>>>0){as(j,1)|0;a=k[d>>2]|0}k[d>>2]=a+1;i[a>>0]=41;a=k[d>>2]|0;if(a>>>0>=(k[b>>2]|0)>>>0){as(j,1)|0;a=k[d>>2]|0}i[a>>0]=0;a=k[j>>2]|0;k[d>>2]=a;xc(k[44144+(k[(k[h>>2]|0)+12>>2]<<2)>>2]|0,104076,a);a=k[h>>2]|0}a=k[a+160>>2]|0;if(a){b=k[a>>2]|0;a:do if(b){f=j+4|0;g=j+8|0;while(1){a=a+4|0;switch(i[b>>0]|0){case 102:{if(qO(b,146944)|0)l=14;break}case 98:{if(qO(b,146926)|0)l=14;break}case 115:{if(qO(b,146931)|0)l=14;break}default:l=14}if((l|0)==14){l=0;cs(j,b)|0;while(1){d=b+1|0;if(!(i[b>>0]|0)){b=d;break}else b=d}if(i[b>>0]|0){d=k[f>>2]|0;if(d>>>0>=(k[g>>2]|0)>>>0){as(j,1)|0;d=k[f>>2]|0}k[f>>2]=d+1;i[d>>0]=40;if(i[b>>0]|0){e=0;while(1){if(e){d=k[f>>2]|0;if(d>>>0>=(k[g>>2]|0)>>>0){as(j,1)|0;d=k[f>>2]|0}k[f>>2]=d+1;i[d>>0]=44}cs(j,b)|0;d=b;while(1){b=d+1|0;if(!(i[d>>0]|0))break;else d=b}if(!(i[b>>0]|0))break;else e=e+1|0}}b=k[f>>2]|0;if(b>>>0>=(k[g>>2]|0)>>>0){as(j,1)|0;b=k[f>>2]|0}k[f>>2]=b+1;i[b>>0]=41}b=k[f>>2]|0;if(b>>>0>=(k[g>>2]|0)>>>0){as(j,1)|0;b=k[f>>2]|0}i[b>>0]=0;e=k[j>>2]|0;k[f>>2]=e;xc(k[44144+(k[(k[h>>2]|0)+12>>2]<<2)>>2]|0,104076,e)}b=k[a>>2]|0;if(!b)break a}}while(0);ds(j)}r=m;return}function Jc(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;g=r;r=r+32|0;f=g+16|0;e=g;b=i[a+3>>0]|0;c=l[a>>0]|0;d=l[a+1>>0]|0;a=l[a+2>>0]|0;if(b<<24>>24==-1){k[e>>2]=c;k[e+4>>2]=d;k[e+8>>2]=a;TN(104024,112063,e)|0}else{k[f>>2]=c;k[f+4>>2]=d;k[f+8>>2]=a;k[f+12>>2]=b&255;TN(104024,104039,f)|0}r=g;return}function Kc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;j=r;r=r+1040|0;h=j;g=j+16|0;f=k[44144+(k[(k[a+16>>2]|0)+12>>2]<<2)>>2]|0;e=f+4|0;a=k[e>>2]|0;if(a>>>0>=(k[f+8>>2]|0)>>>0){as(f,1)|0;a=k[e>>2]|0}k[e>>2]=a+1;i[a>>0]=b;k[h>>2]=d;TN(g,104034,h)|0;cs(f,g)|0;if((d|0)>0){a=0;do{b=c+(a<<4)|0;k[h>>2]=k[b>>2];k[h+4>>2]=k[b+4>>2];k[h+8>>2]=k[b+8>>2];k[h+12>>2]=k[b+12>>2];vc(f,h);a=a+1|0}while((a|0)!=(d|0))}r=j;return}function Lc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,g=0.0,h=0.0,j=0.0,l=0.0,n=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0.0;A=r;r=r+2144|0;v=A+80|0;u=A+72|0;t=A+64|0;z=A+1104|0;n=A+32|0;q=A+16|0;s=A;y=a+16|0;w=k[y>>2]|0;e=+(k[w+136>>2]|0)*3.141592653589793/180.0;if((m[(k[11048]|0)+8232>>1]|0)<14){Jc(w+56|0);xc(k[44144+(k[(k[y>>2]|0)+12>>2]<<2)>>2]|0,104079,104024)}else{$r(z,1024,A+1120|0);x=(b|0)==2;if(x){VB(c,n,d,e,2);b=z+4|0;a=k[b>>2]|0;if(a>>>0>=(k[z+8>>2]|0)>>>0){as(z,1)|0;a=k[b>>2]|0}k[b>>2]=a+1;i[a>>0]=91;k[v>>2]=k[n>>2];k[v+4>>2]=k[n+4>>2];k[v+8>>2]=k[n+8>>2];k[v+12>>2]=k[n+12>>2];vc(z,v);u=n+16|0;k[v>>2]=k[u>>2];k[v+4>>2]=k[u+4>>2];k[v+8>>2]=k[u+8>>2];k[v+12>>2]=k[u+12>>2];vc(z,v)}else{VB(c,n,d,0.0,3);l=+p[n+24>>3];h=+p[n>>3];g=+p[n+8>>3];j=l*.25;if(e==0.0){e=g;f=h}else{B=j;f=e;e=g+B*+_(+f);f=h+B*+Z(+f)}p[q>>3]=f;p[q+8>>3]=e;p[s>>3]=h;p[s+8>>3]=g;b=z+4|0;a=k[b>>2]|0;if(a>>>0>=(k[z+8>>2]|0)>>>0){as(z,1)|0;a=k[b>>2]|0}k[b>>2]=a+1;i[a>>0]=40;k[v>>2]=k[q>>2];k[v+4>>2]=k[q+4>>2];k[v+8>>2]=k[q+8>>2];k[v+12>>2]=k[q+12>>2];vc(z,v);p[t>>3]=j;TN(v,103928,t)|0;wc(v,1);cs(z,v)|0;k[v>>2]=k[s>>2];k[v+4>>2]=k[s+4>>2];k[v+8>>2]=k[s+8>>2];k[v+12>>2]=k[s+12>>2];vc(z,v);p[u>>3]=l;TN(v,103928,u)|0;wc(v,1);cs(z,v)|0}cs(z,104082)|0;a=w+140|0;e=+o[a>>2];b=w+56|0;if(e>0.0){Mc(z,e,b);Mc(z,+o[a>>2],w+96|0)}else{Mc(z,0.0,b);Mc(z,1.0,w+96|0)}es(z)|0;d=z+4|0;a=k[d>>2]|0;c=z+8|0;b=a>>>0>=(k[c>>2]|0)>>>0;if(x){if(b){as(z,1)|0;a=k[d>>2]|0}k[d>>2]=a+1;i[a>>0]=93}else{if(b){as(z,1)|0;a=k[d>>2]|0}k[d>>2]=a+1;i[a>>0]=41}a=k[d>>2]|0;if(a>>>0>=(k[c>>2]|0)>>>0){as(z,1)|0;a=k[d>>2]|0}i[a>>0]=0;x=k[z>>2]|0;k[d>>2]=x;xc(k[44144+(k[(k[y>>2]|0)+12>>2]<<2)>>2]|0,104079,x);ds(z)}r=A;return}function Mc(a,b,c){a=a|0;b=+b;c=c|0;var d=0,e=0,f=0;d=r;r=r+1040|0;f=d;e=d+8|0;p[f>>3]=b;TN(e,130435,f)|0;wc(e,1);Jc(c);xc(a,e,104024);r=d;return}function Nc(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0;h=r;r=r+1040|0;e=h;f=h+8|0;b=0;c=a;a:while(1){d=c;while(1){c=d+1|0;d=i[d>>0]|0;if(!(d<<24>>24))break a;if(((d<<24>>24)+-48|0)>>>0<10)break;else d=c}if((b|0)>=1023){g=7;break}i[f+b>>0]=d;b=b+1|0}if((g|0)==7){k[e>>2]=a;Yr(0,104169,e)|0}i[f+b>>0]=0;g=(bO(f)|0)&65535;r=h;return g|0}function Oc(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0;b=r;r=r+32|0;c=b+24|0;d=b+16|0;f=b;e=k[a+16>>2]|0;Rv(a,104533)|0;i=k[k[a+12>>2]>>2]|0;h=k[i+4>>2]|0;g=k[i+8>>2]|0;k[f>>2]=k[i>>2];k[f+4>>2]=h;k[f+8>>2]=g;Wv(a,104543,f);e=ht(k[e+8>>2]|0)|0;k[d>>2]=e;Wv(a,104578,d);d=ha(k[a+168>>2]|0,k[a+164>>2]|0)|0;k[c>>2]=d;Wv(a,104591,c);Rv(a,104604)|0;Rv(a,104614)|0;Rv(a,104622)|0;Rv(a,104630)|0;Rv(a,104638)|0;Rv(a,104646)|0;Rv(a,104654)|0;Rv(a,104658)|0;Rv(a,104663)|0;r=b;return}function Pc(a){a=a|0;Rv(a,104514)|0;return}function Qc(a){a=a|0;k[11157]=2;return}function Rc(a){a=a|0;k[11157]=1;return}function Sc(a){a=a|0;k[11157]=2;return}function Tc(a){a=a|0;k[11157]=0;return}function Uc(a){a=a|0;k[11157]=2;return}function Vc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0.0,o=0.0,q=0,s=0,t=0,u=0,v=0.0;u=r;r=r+96|0;t=u+8|0;m=u;q=k[(k[a+16>>2]|0)+16>>2]|0;s=k[11157]|0;d=k[c+4>>2]|0;n=+p[d+16>>3]*+p[a+352>>3];o=(k[a+360>>2]|0)!=0?1.5707963267948966:0.0;d=k[d+8>>2]|0;if(!d)j=-1;else j=k[d+20>>2]|0;l=i[c+48>>0]|0;l=l<<24>>24==108?0:l<<24>>24==114?2:1;v=+p[b>>3];h=~~(v+(v>=0.0?.5:-.5));v=+p[b+8>>3];g=~~(v+(v>=0.0?.5:-.5));c=k[c>>2]|0;d=k[11168]|0;if(!d){k[11169]=64;d=uP(64)|0;k[11168]=d}b=i[c>>0]|0;if(b<<24>>24){e=0;f=c;while(1){f=f+1|0;c=k[11169]|0;if((e|0)>(c+-8|0)){d=c<<1;k[11169]=d;d=xP(k[11168]|0,d)|0;k[11168]=d;d=d+e|0}if(b<<24>>24>-1){if(b<<24>>24==92){i[d>>0]=92;d=d+1|0;c=e+1|0}else c=e;i[d>>0]=b;d=d+1|0;c=c+1|0}else{i[d>>0]=92;k[m>>2]=b&255;TN(d+1|0,117545,m)|0;d=d+4|0;c=e+4|0}b=i[f>>0]|0;if(!(b<<24>>24))break;else e=c}}i[d>>0]=0;m=k[11168]|0;k[t>>2]=4;k[t+4>>2]=l;k[t+8>>2]=q;k[t+12>>2]=s;k[t+16>>2]=0;k[t+20>>2]=j;p[t+24>>3]=n;p[t+32>>3]=o;k[t+40>>2]=6;p[t+48>>3]=0.0;p[t+56>>3]=0.0;k[t+64>>2]=h;k[t+68>>2]=g;k[t+72>>2]=m;Wv(a,104459,t);r=u;return}function Wc(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;x=r;r=r+32|0;u=x;w=b+32|0;a:do switch(k[w>>2]|0){case 5:{d=k[b>>2]|0;e=i[d>>0]|0;f=173315;c=0;while(1){if((i[f>>0]|0)==e<<24>>24?(qO(f,d)|0)==0:0)break;c=c+1|0;if((c|0)==8)break a;else f=k[44632+(c<<2)>>2]|0}k[b>>2]=c;break}case 1:{o=i[b>>0]|0;g=o&255;p=b+1|0;q=i[p>>0]|0;h=q&255;s=b+2|0;t=i[s>>0]|0;m=t&255;n=k[11167]|0;do if((n|0)>0){c=0;d=-1;f=195075;while(1){y=(j[99592+(c<<1)>>1]|0)-g|0;z=(j[100104+(c<<1)>>1]|0)-h|0;e=(j[100616+(c<<1)>>1]|0)-m|0;e=(ha(z,z)|0)+(ha(y,y)|0)+(ha(e,e)|0)|0;if((e|0)<(f|0))if(!e)break;else d=c;else e=f;c=c+1|0;if((c|0)<(n|0))f=e;else{v=12;break}}if((v|0)==12){k[11167]=n+1;if((n|0)==256)c=d;else{v=14;break}}c=c+32|0}else{k[11167]=n+1;c=0;v=14}while(0);if((v|0)==14){j[99592+(c<<1)>>1]=o&255;j[100104+(c<<1)>>1]=q&255;j[100616+(c<<1)>>1]=t&255;c=c+32|0;v=l[b>>0]|0;y=l[p>>0]|0;z=l[s>>0]|0;k[u>>2]=0;k[u+4>>2]=c;k[u+8>>2]=v;k[u+12>>2]=y;k[u+16>>2]=z;Wv(a,104420,u)}k[b>>2]=c;break}default:Wa(174497,104279,165,104441)}while(0);k[w>>2]=6;r=x;return}function Xc(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0,g=0,h=0,i=0,j=0,l=0,m=0.0,n=0.0,o=0,q=0,s=0.0,t=0.0;l=r;r=r+96|0;j=l;d=k[a+16>>2]|0;f=~~+p[d+152>>3];g=k[d+16>>2]|0;h=k[d+56>>2]|0;i=k[11157]|0;c=(c|0)!=0?20:-1;switch(k[d+144>>2]|0){case 1:{d=1;e=10.0;break}case 2:{d=2;e=10.0;break}default:{d=0;e=0.0}}t=+p[b>>3];q=~~(t+(t>=0.0?.5:-.5));s=+p[b+8>>3];o=~~(s+(s>=0.0?.5:-.5));n=+p[b+16>>3];t=n-t;m=+p[b+24>>3];s=m-s;k[j>>2]=1;k[j+4>>2]=1;k[j+8>>2]=d;k[j+12>>2]=f;k[j+16>>2]=g;k[j+20>>2]=h;k[j+24>>2]=i;k[j+28>>2]=0;k[j+32>>2]=c;p[j+40>>3]=e;k[j+48>>2]=0;p[j+56>>3]=0.0;k[j+64>>2]=q;k[j+68>>2]=o;k[j+72>>2]=~~(t+(t>=0.0?.5:-.5));k[j+76>>2]=~~(s+(s>=0.0?.5:-.5));k[j+80>>2]=q;k[j+84>>2]=o;k[j+88>>2]=~~(n+(n>=0.0?.5:-.5));k[j+92>>2]=~~(m+(m>=0.0?.5:-.5));Wv(a,104355,j);r=l;return}function Yc(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0.0,h=0,i=0,j=0,l=0,m=0,n=0;n=r;r=r+80|0;m=n;f=k[a+16>>2]|0;h=~~+p[f+152>>3];i=k[f+16>>2]|0;j=k[f+56>>2]|0;l=k[11157]|0;d=(d|0)!=0?20:-1;e=c+1|0;switch(k[f+144>>2]|0){case 1:{f=1;g=10.0;break}case 2:{f=2;g=10.0;break}default:{f=0;g=0.0}}k[m>>2]=2;k[m+4>>2]=3;k[m+8>>2]=f;k[m+12>>2]=h;k[m+16>>2]=i;k[m+20>>2]=j;k[m+24>>2]=l;k[m+28>>2]=0;k[m+32>>2]=d;p[m+40>>3]=g;k[m+48>>2]=0;k[m+52>>2]=0;k[m+56>>2]=0;k[m+60>>2]=0;k[m+64>>2]=0;k[m+68>>2]=e;Wv(a,104221,m);ad(a,b,c,1);r=n;return}function Zc(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0.0,C=0,D=0,E=0,F=0,G=0,H=0,I=0.0,J=0.0,K=0;H=r;r=r+176|0;G=H+168|0;E=H+160|0;F=H+96|0;x=H+88|0;d=H+80|0;v=H+16|0;u=H;e=k[a+16>>2]|0;z=~~+p[e+152>>3];C=k[e+16>>2]|0;D=k[11157]|0;if((c|0)<=3)Wa(104272,104279,356,104299);y=uP((c*140|0)+140|0)|0;switch(k[e+144>>2]|0){case 1:{A=1;B=10.0;break}case 2:{A=2;B=10.0;break}default:{A=0;B=0.0}}if(!f){w=-1;s=0;t=4}else{w=20;s=k[e+56>>2]|0;t=5}J=+p[b>>3];f=v+48|0;p[f>>3]=J;I=+p[b+8>>3];g=v+56|0;p[g>>3]=I;k[d>>2]=~~(J+(J>=0.0?.5:-.5));k[d+4>>2]=~~(I+(I>=0.0?.5:-.5));h=u+8|0;q=(((c+-4|0)>>>0)/3|0)*6|0;i=v+16|0;j=v+24|0;l=v+32|0;m=v+40|0;n=v+48|0;o=3;e=y+(TN(y,117397,d)|0)|0;d=0;while(1){k[v>>2]=k[f>>2];k[v+4>>2]=k[f+4>>2];k[v+8>>2]=k[f+8>>2];k[v+12>>2]=k[f+12>>2];K=d+1|0;p[i>>3]=+p[b+(K<<4)>>3];p[j>>3]=+p[b+(K<<4)+8>>3];K=d+2|0;p[l>>3]=+p[b+(K<<4)>>3];p[m>>3]=+p[b+(K<<4)+8>>3];d=d+3|0;p[n>>3]=+p[b+(d<<4)>>3];p[g>>3]=+p[b+(d<<4)+8>>3];d=1;do{uB(u,v,3,+(d|0)/6.0,0,0);I=+p[u>>3];J=+p[h>>3];k[x>>2]=~~(I+(I>=0.0?.5:-.5));k[x+4>>2]=~~(J+(J>=0.0?.5:-.5));e=e+(TN(e,117397,x)|0)|0;d=d+1|0}while((d|0)!=7);d=o+3|0;if((d|0)<(c|0)){K=o;o=d;d=K}else break}f=q+7|0;k[F>>2]=3;k[F+4>>2]=t;k[F+8>>2]=A;k[F+12>>2]=z;k[F+16>>2]=C;k[F+20>>2]=s;k[F+24>>2]=D;k[F+28>>2]=0;k[F+32>>2]=w;p[F+40>>3]=B;k[F+48>>2]=0;k[F+52>>2]=0;k[F+56>>2]=0;k[F+60>>2]=f;Wv(a,104310,F);k[E>>2]=y;Wv(a,117404,E);vP(y);if((f|0)>0){e=q+6|0;d=0;do{k[G>>2]=((d|0)%(e|0)|0|0)!=0&1;Wv(a,117409,G);d=d+1|0}while((d|0)!=(f|0))}Rv(a,191538)|0;r=H;return}function _c(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0,g=0,h=0,i=0,j=0;j=r;r=r+80|0;i=j;d=k[a+16>>2]|0;f=~~+p[d+152>>3];g=k[d+16>>2]|0;h=k[11157]|0;switch(k[d+144>>2]|0){case 1:{d=1;e=10.0;break}case 2:{d=2;e=10.0;break}default:{d=0;e=0.0}}k[i>>2]=2;k[i+4>>2]=1;k[i+8>>2]=d;k[i+12>>2]=f;k[i+16>>2]=g;k[i+20>>2]=0;k[i+24>>2]=h;k[i+28>>2]=0;k[i+32>>2]=0;p[i+40>>3]=e;k[i+48>>2]=0;k[i+52>>2]=0;k[i+56>>2]=0;k[i+60>>2]=0;k[i+64>>2]=0;k[i+68>>2]=c;Wv(a,104221,i);ad(a,b,c,0);r=j;return}function $c(a,b){a=a|0;b=b|0;var c=0,d=0;c=r;r=r+16|0;d=c;k[d>>2]=b;Wv(a,104215,d);r=c;return}function ad(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0.0,j=0.0;h=r;r=r+16|0;g=h+8|0;f=h;if((c|0)>0){e=0;do{j=+p[b+(e<<4)>>3];i=+p[b+(e<<4)+8>>3];k[f>>2]=~~(j+(j>=0.0?.5:-.5));k[f+4>>2]=~~(i+(i>=0.0?.5:-.5));Wv(a,117397,f);e=e+1|0}while((e|0)!=(c|0))}if(d){i=+p[b>>3];j=+p[b+8>>3];k[g>>2]=~~(i+(i>=0.0?.5:-.5));k[g+4>>2]=~~(j+(j>=0.0?.5:-.5));Wv(a,117397,g)}Rv(a,191538)|0;r=h;return}function bd(a){a=a|0;var b=0,c=0,d=0;b=k[a+16>>2]|0;switch(k[a+64>>2]|0){case 0:{Rv(a,105006)|0;b=b+208|0;c=k[b>>2]|0;if((c|0)!=0?(i[c>>0]|0)!=0:0){Rv(a,105020)|0;Rv(a,vy(k[b>>2]|0)|0)|0;Rv(a,191538)|0}break}case 1:{c=b+208|0;d=k[c>>2]|0;if((d|0)!=0?(i[d>>0]|0)!=0:0){Rv(a,105020)|0;Rv(a,vy(k[c>>2]|0)|0)|0;Rv(a,138519)|0;Rv(a,vy(ht(k[b+8>>2]|0)|0)|0)|0;Rv(a,191538)|0}break}case 3:{d=vy(ht(k[b+8>>2]|0)|0)|0;Rv(a,105029)|0;Rv(a,d)|0;Rv(a,105039)|0;Rv(a,d)|0;Rv(a,104994)|0;break}default:{}}return}function cd(a){a=a|0;var b=0;b=k[a+16>>2]|0;switch(k[a+64>>2]|0){case 2:{ed(a,k[b+264>>2]|0,k[b+272>>2]|0,k[b+268>>2]|0,k[b+208>>2]|0,k[b+228>>2]|0,k[b+244>>2]|0,k[b+212>>2]|0);break}case 3:{ed(a,k[b+264>>2]|0,k[b+272>>2]|0,k[b+268>>2]|0,k[b+208>>2]|0,k[b+228>>2]|0,k[b+244>>2]|0,k[b+212>>2]|0);Rv(a,104998)|0;break}default:{}}return}function dd(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=k[a+16>>2]|0;ed(a,k[f+264>>2]|0,k[f+272>>2]|0,k[f+268>>2]|0,b,c,d,e);return}function ed(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0.0;y=r;r=r+128|0;x=y+120|0;u=y+112|0;t=y+96|0;s=y+80|0;q=y+56|0;w=y+48|0;o=y+40|0;v=y+24|0;n=y;a:do if((c|0)!=0&(d|0)!=0){if((k[11245]|0)<(d|0)){m=d+10|0;k[11245]=m;m=xP(k[11246]|0,m<<3)|0;k[11246]=m}m=(d|0)>0;if(m){j=k[11246]|0;l=0;do{z=+p[c+(l<<4)>>3];k[j+(l<<3)>>2]=~~(z+(z>=0.0?.5:-.5));z=+p[c+(l<<4)+8>>3];k[j+(l<<3)+4>>2]=~~(z+(z>=0.0?.5:-.5));l=l+1|0}while((l|0)!=(d|0))}l=a+64|0;j=k[l>>2]|0;c=(e|0)!=0;if(c&(j|0)==0?(i[e>>0]|0)!=0:0)switch(b|0){case 0:{d=k[11246]|0;v=k[d>>2]|0;w=k[d+12>>2]|0;x=k[d+8>>2]|0;d=k[d+4>>2]|0;k[n>>2]=e;k[n+4>>2]=v;k[n+8>>2]=w;k[n+12>>2]=x;k[n+16>>2]=d;Wv(a,104734,n);break a}case 1:{d=k[11246]|0;w=k[d>>2]|0;x=k[d+4>>2]|0;d=(k[d+8>>2]|0)-w|0;k[v>>2]=e;k[v+4>>2]=w;k[v+8>>2]=x;k[v+12>>2]=d;Wv(a,104755,v);break a}case 2:{k[o>>2]=e;Wv(a,104775,o);if(m){j=0;do{v=k[11246]|0;x=k[v+(j<<3)+4>>2]|0;k[w>>2]=k[v+(j<<3)>>2];k[w+4>>2]=x;Wv(a,104783,w);j=j+1|0}while((j|0)!=(d|0))}Rv(a,191538)|0;break a}default:Wa(174497,104790,65,104810)}if(c&(j|0)==1?(i[e>>0]|0)!=0:0)if(!b){v=k[11246]|0;w=k[v+12>>2]|0;x=k[v+8>>2]|0;d=k[v+4>>2]|0;k[q>>2]=k[v>>2];k[q+4>>2]=w;k[q+8>>2]=x;k[q+12>>2]=d;k[q+16>>2]=e;k[q+20>>2]=f;Wv(a,104827,q);break}else Wa(174497,104790,77,104810);if((j&-2|0)==2){switch(b|0){case 1:{Rv(a,104860)|0;break}case 0:{Rv(a,104881)|0;break}case 2:{Rv(a,104900)|0;break}default:Wa(174497,104790,93,104810)}if((h|0)!=0?(i[h>>0]|0)!=0:0){Rv(a,104919)|0;Rv(a,xy(h)|0)|0;Rv(a,134779)|0}if(c?(i[e>>0]|0)!=0:0){Rv(a,104925)|0;Rv(a,xy(e)|0)|0;Rv(a,134779)|0}if((g|0)!=0?(i[g>>0]|0)!=0:0){Rv(a,110859)|0;Rv(a,vy(g)|0)|0;Rv(a,134779)|0}if((f|0)!=0?(i[f>>0]|0)!=0:0){Rv(a,104933)|0;Rv(a,vy(f)|0)|0;Rv(a,134779)|0}Rv(a,104942)|0;Rv(a,104950)|0;switch(b|0){case 1:{d=k[11246]|0;w=k[d>>2]|0;x=k[d+4>>2]|0;d=(k[d+8>>2]|0)-w|0;k[s>>2]=w;k[s+4>>2]=x;k[s+8>>2]=d;Wv(a,104960,s);break}case 0:{v=k[11246]|0;w=k[v+12>>2]|0;x=k[v+8>>2]|0;d=k[v+4>>2]|0;k[t>>2]=k[v>>2];k[t+4>>2]=w;k[t+8>>2]=x;k[t+12>>2]=d;Wv(a,104969,t);break}case 2:{v=k[11246]|0;w=k[v+4>>2]|0;k[u>>2]=k[v>>2];k[u+4>>2]=w;Wv(a,104981,u);if((d|0)>1){j=1;do{v=k[11246]|0;w=k[v+(j<<3)+4>>2]|0;k[x>>2]=k[v+(j<<3)>>2];k[x+4>>2]=w;Wv(a,104987,x);j=j+1|0}while((j|0)!=(d|0))}break}default:{}}if((k[l>>2]|0)==3){Rv(a,109797)|0;break}else{Rv(a,104994)|0;break}}}while(0);r=y;return}function fd(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;c=r;r=r+16|0;b=c;Rv(a,109638)|0;if((k[a+64>>2]|0)==2)Rv(a,109653)|0;else Rv(a,191538)|0;f=k[k[a+12>>2]>>2]|0;e=k[f+4>>2]|0;d=k[f+8>>2]|0;k[b>>2]=k[f>>2];k[b+4>>2]=e;k[b+8>>2]=d;Wv(a,109664,b);r=c;return}function gd(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;f=r;r=r+32|0;e=f+8|0;d=f;Rv(a,109592)|0;c=a+64|0;b=a+12|0;if((k[c>>2]|0)!=2){k[d>>2]=k[(k[b>>2]|0)+28>>2];Wv(a,109603,d)}if((k[(k[b>>2]|0)+20>>2]|0)==0?(k[c>>2]|0)!=2:0){b=k[a+476>>2]|0;c=k[a+480>>2]|0;d=k[a+484>>2]|0;k[e>>2]=k[a+472>>2];k[e+4>>2]=b;k[e+8>>2]=c;k[e+12>>2]=d;Wv(a,105956,e)}Rv(a,109618)|0;Rv(a,109631)|0;r=f;return}function hd(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0;j=r;r=r+48|0;h=j+24|0;d=j+8|0;b=j;g=j+32|0;e=k[a+16>>2]|0;i[105886]=0;c=a+12|0;f=e+8|0;if(!(k[(k[c>>2]|0)+28>>2]|0)){l=ht(k[f>>2]|0)|0;k[b>>2]=l;Wv(a,105887,b);b=a+64|0;if((k[b>>2]|0)==2)Rv(a,105920)|0;else Rv(a,105902)|0;do if(!(k[(k[c>>2]|0)+20>>2]|0))if((k[b>>2]|0)==2){m=k[a+460>>2]|0;b=k[a+464>>2]|0;l=k[a+468>>2]|0;k[d>>2]=k[a+456>>2];k[d+4>>2]=m;k[d+8>>2]=b;k[d+12>>2]=l;Wv(a,105956,d);break}else{Rv(a,105932)|0;break}while(0);Rv(a,105986)|0;zz(a,k[(k[c>>2]|0)+24>>2]|0,45232);Bz(a);b=k[(k[c>>2]|0)+20>>2]|0;if(b){k[g>>2]=k[b>>2];k[g+4>>2]=0;zz(a,0,g)}}k[11307]=(i[(k[(k[f>>2]|0)+8>>2]|0)+115>>0]|0)==1?1:-1;if(!(i[105886]|0)){Rv(a,106006)|0;i[105886]=1}b=k[e+208>>2]|0;if(b){m=Cz(b,k[11307]|0)|0;k[h>>2]=m;Wv(a,106019,h)}r=j;return}function id(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;b=r;r=r+16|0;e=b;k[e>>2]=c;k[e+4>>2]=d;Wv(a,105870,e);r=b;return}function jd(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0.0,v=0.0,w=0.0;s=r;r=r+144|0;q=s+128|0;o=s+112|0;n=s+72|0;m=s+56|0;l=s+40|0;j=s+32|0;d=s+24|0;b=s+8|0;c=s;e=k[a+456>>2]|0;f=k[a+460>>2]|0;g=k[a+464>>2]|0;h=k[a+468>>2]|0;i=a+12|0;t=(k[(k[i>>2]|0)+28>>2]|0)+1|0;k[c>>2]=t;k[c+4>>2]=t;Wv(a,105497,c);if(!(k[(k[i>>2]|0)+20>>2]|0)){k[b>>2]=e;k[b+4>>2]=f;k[b+8>>2]=g;k[b+12>>2]=h;Wv(a,105514,b)}c=a+360|0;k[d>>2]=(k[c>>2]|0)!=0?105548:105558;Wv(a,105567,d);b=a+64|0;if((k[b>>2]|0)==1){k[j>>2]=g;k[j+4>>2]=h;Wv(a,105592,j)}j=k[a+200>>2]|0;t=k[a+204>>2]|0;k[l>>2]=k[a+196>>2];k[l+4>>2]=j;k[l+8>>2]=t;Wv(a,105631,l);if(!(k[(k[i>>2]|0)+20>>2]|0)){k[m>>2]=e;k[m+4>>2]=f;k[m+8>>2]=g-e;k[m+12>>2]=h-f;Wv(a,105651,m)}w=+p[a+496>>3];t=k[c>>2]|0;v=+p[a+504>>3];u=+p[a+512>>3];p[n>>3]=+p[a+488>>3];p[n+8>>3]=w;k[n+16>>2]=t;p[n+24>>3]=v;p[n+32>>3]=u;Wv(a,105691,n);if((k[b>>2]|0)==1){if((g|0)>14399|(h|0)>14399){t=k[(k[i>>2]|0)+16>>2]|0;k[o>>2]=g;k[o+4>>2]=h;k[o+8>>2]=14400;Pb[t&31](105734,o)}k[q>>2]=e;k[q+4>>2]=f;k[q+8>>2]=g;k[q+12>>2]=h;Wv(a,105829,q)}r=s;return}function kd(a){a=a|0;var b=0,c=0,d=0;d=r;r=r+16|0;c=d;b=a+12|0;if(k[(k[b>>2]|0)+20>>2]|0){Rv(a,105421)|0;zz(a,0,(k[(k[b>>2]|0)+20>>2]|0)+4|0)}Rv(a,105438)|0;Rv(a,105465)|0;k[c>>2]=k[(k[b>>2]|0)+28>>2];Wv(a,105480,c);r=d;return}function ld(a){a=a|0;var b=0,c=0,d=0;b=r;r=r+16|0;c=b;d=ht(k[(k[a+16>>2]|0)+8>>2]|0)|0;k[c>>2]=d;Wv(a,105414,c);Rv(a,105407)|0;r=b;return}function md(a){a=a|0;Rv(a,120838)|0;return}function nd(a){a=a|0;Rv(a,105407)|0;return}function od(a){a=a|0;Rv(a,120838)|0;return}function pd(a){a=a|0;Rv(a,105407)|0;return}function qd(a){a=a|0;Rv(a,120838)|0;return}function rd(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;d=r;r=r+16|0;e=d;if((b|0)!=0?(f=(k[a+16>>2]|0)+272|0,(k[f>>2]|0)!=0):0){Rv(a,105303)|0;Zv(a,k[f>>2]|0,2);Rv(a,105314)|0;b=Cz(b,k[11307]|0)|0;k[e>>2]=b;Wv(a,105318,e)}r=d;return}function sd(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0;h=r;r=r+32|0;f=h+8|0;g=h;d=k[a+16>>2]|0;if(!(+p[d+40>>3]<.5)){zd(a,d+16|0);e=c+4|0;Xv(a,+p[(k[e>>2]|0)+16>>3]);k[f>>2]=k[k[e>>2]>>2];Wv(a,105262,f);e=Cz(k[c>>2]|0,k[11307]|0)|0;switch(i[c+48>>0]|0){case 114:{d=c+32|0;p[b>>3]=+p[b>>3]-+p[d>>3];break}case 108:{d=c+32|0;break}default:{d=c+32|0;p[b>>3]=+p[b>>3]-+p[d>>3]*.5}}j=b+8|0;p[j>>3]=+p[c+24>>3]+ +p[j>>3];k[f>>2]=k[b>>2];k[f+4>>2]=k[b+4>>2];k[f+8>>2]=k[b+8>>2];k[f+12>>2]=k[b+12>>2];Yv(a,f);Rv(a,105277)|0;Xv(a,+p[d>>3]);k[g>>2]=e;Wv(a,105286,g)}r=h;return}function td(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;f=r;r=r+32|0;e=f;k[e>>2]=k[b>>2];k[e+4>>2]=k[b+4>>2];k[e+8>>2]=k[b+8>>2];k[e+12>>2]=k[b+12>>2];p[e+16>>3]=+p[b+16>>3]-+p[b>>3];p[e+24>>3]=+p[b+24>>3]-+p[b+8>>3];b=a+16|0;if((c|0)!=0?(d=k[b>>2]|0,+p[d+80>>3]>.5):0){zd(a,d+56|0);Zv(a,e,2);Rv(a,105220)|0}if(+p[(k[b>>2]|0)+40>>3]>.5){Ad(a);zd(a,(k[b>>2]|0)+16|0);Zv(a,e,2);Rv(a,105240)|0}r=f;return}function ud(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;h=r;r=r+16|0;g=h;f=a+16|0;if((d|0)!=0?(e=k[f>>2]|0,+p[e+80>>3]>.5):0){zd(a,e+56|0);Rv(a,105141)|0;k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];Yv(a,g);Rv(a,105150)|0;if((c|0)>1){e=1;do{d=b+(e<<4)|0;k[g>>2]=k[d>>2];k[g+4>>2]=k[d+4>>2];k[g+8>>2]=k[d+8>>2];k[g+12>>2]=k[d+12>>2];Yv(a,g);Rv(a,105159)|0;e=e+1|0}while((e|0)!=(c|0))}Rv(a,105186)|0}if(+p[(k[f>>2]|0)+40>>3]>.5){Ad(a);zd(a,(k[f>>2]|0)+16|0);Rv(a,105141)|0;k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];Yv(a,g);Rv(a,105150)|0;if((c|0)>1){e=1;do{f=b+(e<<4)|0;k[g>>2]=k[f>>2];k[g+4>>2]=k[f+4>>2];k[g+8>>2]=k[f+8>>2];k[g+12>>2]=k[f+12>>2];Yv(a,g);Rv(a,105159)|0;e=e+1|0}while((e|0)!=(c|0))}Rv(a,105202)|0}r=h;return}function vd(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;i=r;r=r+16|0;g=i;d=a+16|0;if((f|0)!=0?(h=k[d>>2]|0,+p[h+80>>3]>.5):0){zd(a,h+56|0);Rv(a,105141)|0;k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];Yv(a,g);Rv(a,105150)|0;if((c|0)>1){e=1;do{Zv(a,b+(e<<4)|0,3);Rv(a,105176)|0;e=e+3|0}while((e|0)<(c|0))}Rv(a,105186)|0}if(+p[(k[d>>2]|0)+40>>3]>.5){Ad(a);zd(a,(k[d>>2]|0)+16|0);Rv(a,105141)|0;k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];Yv(a,g);Rv(a,105150)|0;if((c|0)>1){e=1;do{Zv(a,b+(e<<4)|0,3);Rv(a,105176)|0;e=e+3|0}while((e|0)<(c|0))}Rv(a,105168)|0}r=i;return}function wd(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;f=r;r=r+16|0;e=f;d=a+16|0;if(+p[(k[d>>2]|0)+40>>3]>.5){Ad(a);zd(a,(k[d>>2]|0)+16|0);Rv(a,105141)|0;k[e>>2]=k[b>>2];k[e+4>>2]=k[b+4>>2];k[e+8>>2]=k[b+8>>2];k[e+12>>2]=k[b+12>>2];Yv(a,e);Rv(a,105150)|0;if((c|0)>1){d=1;do{g=b+(d<<4)|0;k[e>>2]=k[g>>2];k[e+4>>2]=k[g+4>>2];k[e+8>>2]=k[g+8>>2];k[e+12>>2]=k[g+12>>2];Yv(a,e);Rv(a,105159)|0;d=d+1|0}while((d|0)!=(c|0))}Rv(a,105168)|0}r=f;return}function xd(a,b){a=a|0;b=b|0;Rv(a,105138)|0;Rv(a,b)|0;Rv(a,191538)|0;return}function yd(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0;l=r;r=r+32|0;h=l+16|0;j=l+8|0;i=l;f=a+16|0;if((e|0)!=0?(g=k[f>>2]|0,+p[g+80>>3]>.5):0){zd(a,g+56|0);Rv(a,120733)|0;Zv(a,c,d);Rv(a,138519)|0;k[h>>2]=k[c>>2];k[h+4>>2]=k[c+4>>2];k[h+8>>2]=k[c+8>>2];k[h+12>>2]=k[c+12>>2];Yv(a,h);k[i>>2]=d;k[i+4>>2]=b;Wv(a,105055,i)}if(+p[(k[f>>2]|0)+40>>3]>.5){Ad(a);zd(a,(k[f>>2]|0)+16|0);Rv(a,120733)|0;Zv(a,c,d);Rv(a,138519)|0;k[h>>2]=k[c>>2];k[h+4>>2]=k[c+4>>2];k[h+8>>2]=k[c+8>>2];k[h+12>>2]=k[c+12>>2];Yv(a,h);k[j>>2]=d;k[j+4>>2]=b;Wv(a,105071,j)}r=l;return}function zd(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0.0,g=0.0;e=r;r=r+32|0;d=e;if(b){switch(k[(k[a+16>>2]|0)+4>>2]|0){case 1:case 0:{c=147425;break}case 2:{c=147381;break}case 3:{c=147390;break}default:c=105107}g=+p[b+8>>3];f=+p[b+16>>3];p[d>>3]=+p[b>>3];p[d+8>>3]=g;p[d+16>>3]=f;k[d+24>>2]=c;Wv(a,105114,d)}r=e;return}function Ad(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0;j=r;r=r+16|0;h=j+8|0;g=j;f=a+16|0;e=k[f>>2]|0;b=k[e+160>>2]|0;Xv(a,+p[e+152>>3]);Rv(a,105088)|0;if((b|0)!=0?(c=k[b>>2]|0,(c|0)!=0):0){e=c;do{b=b+4|0;if(qO(e,146931)|0){d=e;while(1){c=d+1|0;if(!(i[d>>0]|0))break;else d=c}if(i[c>>0]|0)do{k[g>>2]=c;Wv(a,105103,g);d=c;while(1){c=d+1|0;if(!(i[d>>0]|0))break;else d=c}}while((i[c>>0]|0)!=0);if(!(qO(e,170360)|0))p[(k[f>>2]|0)+152>>3]=0.0;k[h>>2]=e;Wv(a,134198,h)}e=k[b>>2]|0}while((e|0)!=0)}r=j;return}function Bd(a){a=a|0;var b=0;Rv(a,111213)|0;b=ss(k[(k[a>>2]|0)+168>>2]|0,111269)|0;if((b|0)!=0?(i[b>>0]|0)!=0:0){Rv(a,111280)|0;Rv(a,b)|0;Rv(a,111304)|0}Rv(a,111325)|0;Rv(a,111373)|0;Rv(a,111427)|0;b=a+12|0;Rv(a,vy(k[k[k[b>>2]>>2]>>2]|0)|0)|0;Rv(a,114530)|0;Rv(a,vy(k[(k[k[b>>2]>>2]|0)+4>>2]|0)|0)|0;Rv(a,114540)|0;Rv(a,vy(k[(k[k[b>>2]>>2]|0)+8>>2]|0)|0)|0;Rv(a,111751)|0;Rv(a,111854)|0;return}function Cd(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0.0,j=0.0,l=0.0;f=r;r=r+48|0;e=f+16|0;d=f+8|0;c=f;b=k[a+16>>2]|0;Rv(a,111048)|0;b=b+8|0;g=ht(k[b>>2]|0)|0;if(i[g>>0]|0){Rv(a,111714)|0;Rv(a,vy(ht(k[b>>2]|0)|0)|0)|0}g=ha(k[a+168>>2]|0,k[a+164>>2]|0)|0;k[c>>2]=g;Wv(a,111053,c);g=k[a+452>>2]|0;k[d>>2]=k[a+448>>2];k[d+4>>2]=g;Wv(a,111069,d);l=+p[a+392>>3];j=+p[a+400>>3];h=+p[a+408>>3];p[e>>3]=+p[a+384>>3];p[e+8>>3]=l;p[e+16>>3]=j;p[e+24>>3]=h;Wv(a,111102,e);Rv(a,111133)|0;Rv(a,111169)|0;Rv(a,112737)|0;r=f;return}function Dd(a){a=a|0;Rv(a,111040)|0;return}function Ed(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;Rv(a,110869)|0;Rv(a,vy(b)|0)|0;Rv(a,111022)|0;return}function Fd(a){a=a|0;Rv(a,110813)|0;return}function Gd(a){a=a|0;var b=0,c=0,d=0,e=0.0,f=0.0,g=0,h=0.0;c=r;r=r+48|0;d=c;b=k[a+16>>2]|0;Rv(a,110869)|0;Rv(a,vy(k[b+212>>2]|0)|0)|0;Rv(a,110950)|0;h=+p[a+496>>3];g=0-(k[a+360>>2]|0)|0;f=+p[a+504>>3];e=-+p[a+512>>3];p[d>>3]=+p[a+488>>3];p[d+8>>3]=h;k[d+16>>2]=g;p[d+24>>3]=f;p[d+32>>3]=e;Wv(a,110966,d);b=b+8|0;d=ht(k[b>>2]|0)|0;if(i[d>>0]|0){Rv(a,110893)|0;Rv(a,vy(ht(k[b>>2]|0)|0)|0)|0;Rv(a,110901)|0}r=c;return}function Hd(a){a=a|0;Rv(a,110813)|0;return}function Id(a){a=a|0;var b=0;b=k[a+16>>2]|0;Rv(a,110869)|0;Rv(a,vy(k[b+212>>2]|0)|0)|0;Rv(a,110931)|0;Rv(a,110893)|0;Rv(a,vy(ht(k[b+8>>2]|0)|0)|0)|0;Rv(a,110901)|0;return}function Jd(a){a=a|0;Rv(a,110813)|0;return}function Kd(a){a=a|0;var b=0,c=0,d=0,e=0;e=r;r=r+16|0;d=e;b=k[a+16>>2]|0;Rv(a,110869)|0;Rv(a,vy(k[b+212>>2]|0)|0)|0;c=k[a+160>>2]|0;if((c|0)>1){c=vy(k[(k[(k[a>>2]|0)+308>>2]|0)+(c<<2)>>2]|0)|0;k[d>>2]=c;Wv(a,110911,d)}Rv(a,110915)|0;Rv(a,110893)|0;Rv(a,vy(ht(k[b+8>>2]|0)|0)|0)|0;Rv(a,110901)|0;r=e;return}function Ld(a){a=a|0;Rv(a,110813)|0;return}function Md(a){a=a|0;var b=0;b=k[a+16>>2]|0;Rv(a,110869)|0;Rv(a,vy(k[b+212>>2]|0)|0)|0;Rv(a,110877)|0;Rv(a,110893)|0;b=uy(138211,k[b+8>>2]|0)|0;Rv(a,vy(b)|0)|0;vP(b);Rv(a,110901)|0;return}function Nd(a){a=a|0;Rv(a,110813)|0;return}function Od(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;Rv(a,110819)|0;if(e){Rv(a,110822)|0;Rv(a,vy(e)|0)|0;Rv(a,134779)|0}Rv(a,110802)|0;Rv(a,112698)|0;if((b|0)!=0?(i[b>>0]|0)!=0:0){Rv(a,110830)|0;Rv(a,b)|0;Rv(a,134779)|0}if((c|0)!=0?(i[c>>0]|0)!=0:0){Rv(a,110844)|0;Rv(a,vy(c)|0)|0;Rv(a,134779)|0}if((d|0)!=0?(i[d>>0]|0)!=0:0){Rv(a,110859)|0;Rv(a,vy(d)|0)|0;Rv(a,134779)|0}Rv(a,112737)|0;return}function Pd(a){a=a|0;Rv(a,112692)|0;Rv(a,110813)|0;return}function Qd(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0.0;H=r;r=r+176|0;F=H+152|0;G=H+144|0;D=H+136|0;C=H+128|0;B=H+120|0;A=H+112|0;z=H+104|0;x=H+96|0;w=H+88|0;v=H+80|0;u=H+72|0;t=H+64|0;e=H+56|0;n=H+48|0;m=H+40|0;q=H+32|0;o=H+24|0;j=H+16|0;d=H;E=k[a+16>>2]|0;Rv(a,110430)|0;switch(i[c+48>>0]|0){case 108:{Rv(a,110436)|0;break}case 114:{Rv(a,110457)|0;break}default:Rv(a,110476)|0}s=b+8|0;I=+p[c+24>>3]+ +p[s>>3];p[s>>3]=I;p[d>>3]=+p[b>>3];p[d+8>>3]=-I;Wv(a,110498,d);s=c+4|0;b=k[s>>2]|0;h=k[b+8>>2]|0;if(h){switch(k[(k[(k[(k[a>>2]|0)+168>>2]|0)+8>>2]|0)+244>>2]|0){case 1:{g=h;b=h+16|0;d=h+8|0;break}case 2:{g=h+24|0;b=h+32|0;d=h+28|0;break}default:{g=h+4|0;b=h+16|0;d=h+8|0}}e=k[b>>2]|0;d=k[d>>2]|0;f=k[h+12>>2]|0;k[j>>2]=k[g>>2];Wv(a,110513,j);b=k[h+24>>2]|0;if(b){k[o>>2]=b;Wv(a,110530,o)}Rv(a,134779)|0;if(d){k[q>>2]=d;Wv(a,110534,q)}if(f){k[m>>2]=f;Wv(a,110552,m)}if(!e)e=0;else{k[n>>2]=e;Wv(a,110571,n)}}else{k[e>>2]=k[b>>2];Wv(a,110588,e);e=0;d=0}b=k[s>>2]|0;if((b|0)!=0?(y=k[b+24>>2]|0,(y&127|0)!=0):0){if(!((d|0)!=0|(y&1|0)==0))Wv(a,110606,t);if(!((e|0)!=0|(y&2|0)==0))Wv(a,110626,u);if(y&100){Wv(a,110647,v);if(!(y&4))b=0;else{Wv(a,141694,w);b=1}if(y&64){k[x>>2]=(b|0)!=0?136507:176676;Wv(a,110666,x);b=1}if(y&32){k[z>>2]=(b|0)!=0?136507:176676;Wv(a,110677,z)}Wv(a,134779,A)}if(y&8)Wv(a,110692,B);if(y&16)Wv(a,110716,C)}p[D>>3]=+p[(k[s>>2]|0)+16>>3];Wv(a,110738,D);b=E+16|0;switch(k[E+48>>2]|0){case 5:{b=k[b>>2]|0;if(mO(b,173315)|0){k[G>>2]=b;Wv(a,110756,G)}break}case 1:{E=l[b+1>>0]|0;G=l[b+2>>0]|0;k[F>>2]=l[b>>0];k[F+4>>2]=E;k[F+8>>2]=G;Wv(a,110767,F);break}default:Wa(174497,109933,440,110789)}Rv(a,110802)|0;Rv(a,wy(k[c>>2]|0,1)|0)|0;Rv(a,110804)|0;r=H;return}function Rd(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0.0;g=r;r=r+32|0;f=g+16|0;e=g;switch(c|0){case 2:{d=Yd(a,b,2)|0;break}case 3:{d=Zd(a)|0;break}default:d=0}Rv(a,110387)|0;Wd(a,c,d);d=b+8|0;h=-+p[d>>3];p[e>>3]=+p[b>>3];p[e+8>>3]=h;Wv(a,110396,e);h=+p[b+24>>3]-+p[d>>3];p[f>>3]=+p[b+16>>3]-+p[b>>3];p[f+8>>3]=h;Wv(a,110413,f);Rv(a,121373)|0;r=g;return}function Sd(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0.0;h=r;r=r+32|0;g=h+16|0;f=h;switch(d|0){case 2:{e=Yd(a,b,c)|0;break}case 3:{e=Zd(a)|0;break}default:e=0}Rv(a,110372)|0;Wd(a,d,e);Rv(a,109780)|0;if((c|0)>0){d=0;do{i=-+p[b+(d<<4)+8>>3];p[f>>3]=+p[b+(d<<4)>>3];p[f+8>>3]=i;Wv(a,109790,f);d=d+1|0}while((d|0)!=(c|0))}i=-+p[b+8>>3];p[g>>3]=+p[b>>3];p[g+8>>3]=i;Wv(a,110381,g);Rv(a,109797)|0;r=h;return}function Td(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0.0,j=0.0;h=r;r=r+32|0;g=h;switch(f|0){case 2:{e=Yd(a,b,c)|0;break}case 3:{e=Zd(a)|0;break}default:e=0}Rv(a,109969)|0;Wd(a,f,e);Rv(a,109975)|0;if((c|0)>0){d=77;f=0;while(1){j=+p[b+(f<<4)>>3];i=-+p[b+(f<<4)+8>>3];k[g>>2]=d;p[g+8>>3]=j;p[g+16>>3]=i;Wv(a,109980,g);e=f+1|0;if((e|0)==(c|0))break;else{d=(f|0)==0?67:32;f=e}}}Rv(a,109797)|0;r=h;return}function Ud(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0.0;f=r;r=r+16|0;e=f;Rv(a,109770)|0;Wd(a,0,0);Rv(a,109780)|0;if((c|0)>0){d=0;do{g=-+p[b+(d<<4)+8>>3];p[e>>3]=+p[b+(d<<4)>>3];p[e+8>>3]=g;Wv(a,109790,e);d=d+1|0}while((d|0)!=(c|0))}Rv(a,109797)|0;r=f;return}function Vd(a,b){a=a|0;b=b|0;Rv(a,109764)|0;Rv(a,vy(b)|0)|0;Rv(a,111854)|0;return}function Wd(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0;q=r;r=r+96|0;h=q+56|0;o=q+48|0;m=q+40|0;l=q+32|0;n=q+24|0;g=q+16|0;f=q+8|0;e=q;j=k[a+16>>2]|0;Rv(a,109802)|0;a:do switch(b|0){case 2:{k[e>>2]=c;Wv(a,109810,e);break}case 3:{k[f>>2]=c;Wv(a,109821,f);break}case 0:{Rv(a,171734)|0;break}default:{b=j+56|0;c=h;e=b;f=c+40|0;do{k[c>>2]=k[e>>2];c=c+4|0;e=e+4|0}while((c|0)<(f|0));Xd(a,h);if((k[j+88>>2]|0)==1){b=i[b+3>>0]|0;switch(b<<24>>24){case -1:case 0:break a;default:{}}p[g>>3]=+(b&255)/255.0;Wv(a,109832,g)}}}while(0);Rv(a,109851)|0;b=j+16|0;c=h;e=b;f=c+40|0;do{k[c>>2]=k[e>>2];c=c+4|0;e=e+4|0}while((c|0)<(f|0));Xd(a,h);d=+p[j+152>>3];if(d!=1.0){p[n>>3]=d;Wv(a,109862,n)}switch(k[j+144>>2]|0){case 1:{k[l>>2]=109904;Wv(a,109881,l);break}case 2:{k[m>>2]=109908;Wv(a,109881,m);break}default:{}}b:do if((k[j+48>>2]|0)==1){b=i[b+3>>0]|0;switch(b<<24>>24){case -1:case 0:break b;default:{}}p[o>>3]=+(b&255)/255.0;Wv(a,109912,o)}while(0);Rv(a,134779)|0;r=q;return}function Xd(a,b){a=a|0;b=b|0;var c=0,d=0;d=r;r=r+16|0;c=d;a:do switch(k[b+32>>2]|0){case 5:{Rv(a,k[b>>2]|0)|0;break}case 1:if(!(i[b+3>>0]|0)){Rv(a,171734)|0;break a}else{b=k[b>>2]|0;k[c>>2]=b&255;k[c+4>>2]=b>>>8&255;k[c+8>>2]=b>>>16&255;Wv(a,112063,c);break a}default:Wa(174497,109933,83,109953)}while(0);r=d;return}function Yd(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,q=0,s=0,t=0,u=0.0,v=0.0;t=r;r=r+112|0;l=t+72|0;q=t+64|0;j=t+56|0;h=t+48|0;e=t+40|0;f=t;g=t+8|0;n=k[11679]|0;k[11679]=n+1;m=k[a+16>>2]|0;v=+(k[m+136>>2]|0)*3.141592653589793/180.0;k[g>>2]=0;k[g+4>>2]=0;k[g+8>>2]=0;k[g+12>>2]=0;k[g+16>>2]=0;k[g+20>>2]=0;k[g+24>>2]=0;k[g+28>>2]=0;VB(b,g,c,v,0);k[f>>2]=n;Wv(a,110200,f);v=+p[g+8>>3];u=+p[g+16>>3];d=+p[g+24>>3];p[l>>3]=+p[g>>3];p[l+8>>3]=v;p[l+16>>3]=u;p[l+24>>3]=d;Wv(a,110265,l);g=m+140|0;d=+o[g>>2];if(d>0.0){p[e>>3]=d+-.001;Wv(a,110300,e)}else Rv(a,110072)|0;b=m+56|0;c=l;e=b;f=c+40|0;do{k[c>>2]=k[e>>2];c=c+4|0;e=e+4|0}while((c|0)<(f|0));Xd(a,l);Rv(a,110108)|0;a:do if((k[m+88>>2]|0)==1){b=i[b+3>>0]|0;switch(b<<24>>24){case -1:case 0:{s=7;break a}default:{}}p[h>>3]=+(b&255)/255.0;Wv(a,135361,h)}else s=7;while(0);if((s|0)==7)Rv(a,110123)|0;Rv(a,110126)|0;d=+o[g>>2];if(d>0.0){p[j>>3]=d;Wv(a,110300,j)}else Rv(a,110132)|0;b=m+96|0;c=l;e=b;f=c+40|0;do{k[c>>2]=k[e>>2];c=c+4|0;e=e+4|0}while((c|0)<(f|0));Xd(a,l);Rv(a,110108)|0;b:do if((k[m+128>>2]|0)==1){b=i[b+3>>0]|0;switch(b<<24>>24){case -1:case 0:{s=14;break b}default:{}}p[q>>3]=+(b&255)/255.0;Wv(a,135361,q)}else s=14;while(0);if((s|0)==14)Rv(a,110123)|0;Rv(a,110340)|0;r=t;return n|0}function Zd(a){a=a|0;var b=0,c=0.0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0.0;o=r;r=r+64|0;h=o+16|0;m=o+8|0;g=o;l=k[11678]|0;k[11678]=l+1;j=k[a+16>>2]|0;q=+(k[j+136>>2]|0)*3.141592653589793/180.0;c=q;if(q==0.0){d=50;b=50}else{d=~~((+Z(+c)+1.0)*50.0);b=~~((1.0-+_(+c))*50.0)}k[h>>2]=l;k[h+4>>2]=d;k[h+8>>2]=b;Wv(a,109988,h);Rv(a,110072)|0;b=j+56|0;d=h;e=b;f=d+40|0;do{k[d>>2]=k[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));Xd(a,h);Rv(a,110108)|0;a:do if((k[j+88>>2]|0)==1){b=i[b+3>>0]|0;switch(b<<24>>24){case -1:case 0:{n=6;break a}default:{}}p[g>>3]=+(b&255)/255.0;Wv(a,135361,g)}else n=6;while(0);if((n|0)==6)Rv(a,110123)|0;Rv(a,110126)|0;Rv(a,110132)|0;b=j+96|0;d=h;e=b;f=d+40|0;do{k[d>>2]=k[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));Xd(a,h);Rv(a,110108)|0;b:do if((k[j+128>>2]|0)==1){b=i[b+3>>0]|0;switch(b<<24>>24){case -1:case 0:{n=10;break b}default:{}}p[m>>3]=+(b&255)/255.0;Wv(a,135361,m)}else n=10;while(0);if((n|0)==10)Rv(a,110123)|0;Rv(a,110168)|0;r=o;return l|0}function _d(a){a=a|0;var b=0;Rv(a,111735)|0;b=a+12|0;Rv(a,k[k[k[b>>2]>>2]>>2]|0)|0;Rv(a,114530)|0;Rv(a,k[(k[k[b>>2]>>2]|0)+4>>2]|0)|0;Rv(a,114540)|0;Rv(a,k[(k[k[b>>2]>>2]|0)+8>>2]|0)|0;Rv(a,111751)|0;return}function $d(a){a=a|0;var b=0,c=0,d=0,e=0;d=r;r=r+16|0;c=d;b=k[a+16>>2]|0;Rv(a,111712)|0;b=b+8|0;e=ht(k[b>>2]|0)|0;if(i[e>>0]|0){Rv(a,111714)|0;Rv(a,ht(k[b>>2]|0)|0)|0}e=ha(k[a+168>>2]|0,k[a+164>>2]|0)|0;k[c>>2]=e;Wv(a,111723,c);r=d;return}function ae(a){a=a|0;k[11730]=1;return}function be(a){a=a|0;k[11730]=-1;return}function ce(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0;l=r;r=r+48|0;f=l+8|0;j=l;d=k[a+16>>2]|0;if((k[d+144>>2]|0)!=0?(h=c+4|0,g=~~(+p[(k[h>>2]|0)+16>>3]*+p[a+352>>3]),(g|0)!=0):0){ie(a);Rv(a,111651)|0;e=b+8|0;p[e>>3]=+p[e>>3]-+(g|0)*.55;k[f>>2]=k[b>>2];k[f+4>>2]=k[b+4>>2];k[f+8>>2]=k[b+8>>2];k[f+12>>2]=k[b+12>>2];Yv(a,f);Rv(a,111665)|0;Rv(a,k[c>>2]|0)|0;Rv(a,111674)|0;Rv(a,111472)|0;e=f;b=d+16|0;d=e+40|0;do{k[e>>2]=k[b>>2];e=e+4|0;b=b+4|0}while((e|0)<(d|0));je(a,f);Rv(a,111676)|0;f=k[h>>2]|0;h=k[f+8>>2]|0;h=k[((h|0)==0?f:h+4|0)>>2]|0;Rv(a,134779)|0;Rv(a,h)|0;Rv(a,134779)|0;k[j>>2]=g;Wv(a,111685,j);switch(i[c+48>>0]|0){case 108:{Rv(a,111690)|0;break}case 114:{Rv(a,111701)|0;break}default:{}}ke(a);Rv(a,191538)|0}r=l;return}function de(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0.0,j=0.0,l=0.0;h=r;r=r+48|0;e=h;f=k[a+16>>2]|0;g=f+144|0;if(k[g>>2]|0){l=+p[b>>3];d=b+8|0;j=+p[d>>3];i=+p[b+24>>3]-j;p[b>>3]=l-(+p[b+16>>3]-l);p[d>>3]=j-i;ie(a);Rv(a,111637)|0;Zv(a,b,2);Rv(a,111472)|0;do if(!c)if(!(k[11730]|0)){Rv(a,132955)|0;break}else{Rv(a,173223)|0;break}else{b=e;c=f+56|0;d=b+40|0;do{k[b>>2]=k[c>>2];b=b+4|0;c=c+4|0}while((b|0)<(d|0));je(a,e)}while(0);if((k[11730]|0)==1)k[11730]=0;Rv(a,111583)|0;Xv(a,+p[f+152>>3]);Rv(a,111626)|0;b=e;c=f+16|0;d=b+40|0;do{k[b>>2]=k[c>>2];b=b+4|0;c=c+4|0}while((b|0)<(d|0));je(a,e);b=k[g>>2]|0;if((b|0)==1){Rv(a,111480)|0;b=k[g>>2]|0}if((b|0)==2)Rv(a,111489)|0;ke(a);Rv(a,191538)|0}r=h;return}function ee(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;h=r;r=r+48|0;e=h;f=k[a+16>>2]|0;g=f+144|0;if(k[g>>2]|0){ie(a);Rv(a,111609)|0;Zv(a,b,c);Rv(a,111472)|0;do if(!d)if(!(k[11730]|0)){Rv(a,132955)|0;break}else{Rv(a,173223)|0;break}else{b=e;d=f+56|0;c=b+40|0;do{k[b>>2]=k[d>>2];b=b+4|0;d=d+4|0}while((b|0)<(c|0));je(a,e)}while(0);if((k[11730]|0)==1)k[11730]=0;Rv(a,111583)|0;Xv(a,+p[f+152>>3]);Rv(a,111626)|0;b=e;d=f+16|0;c=b+40|0;do{k[b>>2]=k[d>>2];b=b+4|0;d=d+4|0}while((b|0)<(c|0));je(a,e);b=k[g>>2]|0;if((b|0)==1){Rv(a,111480)|0;b=k[g>>2]|0}if((b|0)==2)Rv(a,111489)|0;ke(a);Rv(a,191538)|0}r=h;return}function fe(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;j=r;r=r+48|0;g=j;h=k[a+16>>2]|0;i=h+144|0;if(k[i>>2]|0){ie(a);Rv(a,111458)|0;Zv(a,b,c);Rv(a,111472)|0;e=g;d=h+16|0;f=e+40|0;do{k[e>>2]=k[d>>2];e=e+4|0;d=d+4|0}while((e|0)<(f|0));je(a,g);Rv(a,111583)|0;Xv(a,+p[h+152>>3]);e=k[i>>2]|0;if((e|0)==1){Rv(a,111480)|0;e=k[i>>2]|0}if((e|0)==2)Rv(a,111489)|0;Rv(a,111592)|0;ke(a);Rv(a,191538)|0}r=j;return}function ge(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;h=r;r=r+48|0;f=h;d=k[a+16>>2]|0;g=d+144|0;if(k[g>>2]|0){ie(a);Rv(a,111458)|0;Zv(a,b,c);Rv(a,111472)|0;e=f;b=d+16|0;c=e+40|0;do{k[e>>2]=k[b>>2];e=e+4|0;b=b+4|0}while((e|0)<(c|0));je(a,f);b=k[g>>2]|0;if((b|0)==1){Rv(a,111480)|0;b=k[g>>2]|0}if((b|0)==2)Rv(a,111489)|0;ke(a);Rv(a,191538)|0}r=h;return}function he(a,b){a=a|0;b=b|0;Rv(a,111455)|0;Rv(a,b)|0;Rv(a,191538)|0;return}function ie(a){a=a|0;if(!(i[a+144>>0]|0))Rv(a,111580)|0;else Rv(a,k[a+148>>2]|0)|0;return}function je(a,b){a=a|0;b=b|0;var c=0,d=0;d=r;r=r+16|0;c=d;a:do switch(k[b+32>>2]|0){case 5:{Rv(a,k[b>>2]|0)|0;break}case 1:if(!(i[b+3>>0]|0)){Rv(a,132955)|0;break a}else{b=k[b>>2]|0;k[c>>2]=b&255;k[c+4>>2]=b>>>8&255;k[c+8>>2]=b>>>16&255;Wv(a,112063,c);break a}default:Wa(174497,111498,51,111562)}while(0);r=d;return}function ke(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;g=r;r=r+16|0;f=g;b=k[a+16>>2]|0;switch(k[b+12>>2]|0){case 8:{c=1;d=(k[k[b+8>>2]>>2]|0)>>>4;e=147381;break}case 10:{c=0;d=(k[k[b+8>>2]>>2]|0)>>>4;e=147381;break}case 3:case 2:case 9:{c=1;d=(k[k[b+8>>2]>>2]|0)>>>4;e=147390;break}case 7:case 6:case 11:{c=0;d=(k[k[b+8>>2]>>2]|0)>>>4;e=147390;break}case 0:{c=1;d=-1;e=147425;break}case 4:{c=0;d=-1;e=111534;break}case 1:{c=1;d=(k[k[b+8>>2]>>2]|0)>>>4;e=147425;break}case 5:{c=0;d=(k[k[b+8>>2]>>2]|0)>>>4;e=147425;break}default:Wa(174497,111498,108,111517)}k[f>>2]=c;k[f+4>>2]=e;k[f+8>>2]=d;Wv(a,111546,f);r=g;return}function le(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0;s=r;r=r+16|0;c=s;b=k[11783]|0;if(!b){k[11784]=64;b=Cy(64)|0;k[11783]=b}a:do if((a|0)!=0?(o=c+15|0,p=c+14|0,d=i[a>>0]|0,d<<24>>24!=0):0){l=0;c=0;n=0;j=0;e=0;b:while(1){h=e;c:while(1){e=k[11784]|0;if((n|0)>(e+-8|0)){b=e<<1;k[11784]=b;b=Ey(k[11783]|0,b)|0;k[11783]=b;d=i[a>>0]|0;b=b+n|0}switch(d<<24>>24){case 60:{e=a;f=4;g=h;d=138200;m=37;break c}case 62:{j=4;d=138195;m=38;break c}case 45:{d=h;m=36;break c}case 38:{e=i[a+1>>0]|0;d:do if(e<<24>>24!=35){if(((e&-33)+-65&255)<26){f=a+2|0;while(1){e=i[f>>0]|0;if(((e&-33)+-65&255)<26)f=f+1|0;else break}}}else{e=i[a+2>>0]|0;switch(e<<24>>24){case 88:case 120:break;default:{if((e+-48&255)>=10)break d;f=a+3|0;while(1){e=i[f>>0]|0;if((e+-48&255)<10)f=f+1|0;else break d}}}f=a+3|0;while(1){e=i[f>>0]|0;if((e+-48&255)>=10)switch(e<<24>>24){case 65:case 66:case 67:case 68:case 69:case 70:case 97:case 98:case 99:case 100:case 101:case 102:break;default:break d}f=f+1|0}}while(0);if(e<<24>>24!=59){e=a;f=5;g=h;d=138177;m=37;break c}switch(d<<24>>24){case 60:{e=a;f=4;g=h;d=138200;m=37;break c}case 62:{j=4;d=138195;m=38;break c}case 45:{d=h;m=36;break c}default:{}}break}default:{}}if(l&d<<24>>24==32?(i[j>>0]|0)==32:0){e=a;f=6;g=h;d=138170;m=37;break}switch(d<<24>>24){case 34:{e=a;f=6;g=h;d=138163;m=37;break c}case 39:{j=5;d=138183;m=38;break c}default:{}}if(d<<24>>24>=0){e=a;f=1;g=h;d=a;m=37;break}e=d&255;g=127;d=0;while(1){f=d+1|0;e=e&g;g=g>>>1;if(g>>>0>=e>>>0)break;else d=f}g=(d|0)>0;m=g?f:h;c=e+(g?0:c<<6)|0;h=m+-1|0;if((m|0)<=1){l=h;m=31;break}a=a+1|0;d=i[a>>0]|0;if(!(d<<24>>24)){q=b;break a}}if((m|0)==31){m=0;i[o>>0]=59;f=c;g=3;d=p;while(1){e=d+-1|0;i[d>>0]=(f>>>0)%10|0|48;c=(f>>>0)/10|0;h=g+1|0;if((g|0)>11)break b;if(f>>>0>9){f=c;g=h;d=e}else{f=h;break}}d=d+-2|0;i[e>>0]=35;i[d>>0]=38;if(!f){f=a;g=n;e=l}else{j=f;h=l;m=38}}else if((m|0)==36){j=5;h=d;d=138189;m=38}else if((m|0)==37){a=e;j=f;h=g;m=38}if((m|0)==38){g=j+n|0;e=j;f=b;while(1){e=e+-1|0;i[f>>0]=i[d>>0]|0;if(!e)break;else{f=f+1|0;d=d+1|0}}f=a;b=b+j|0;e=h}a=f+1|0;d=i[a>>0]|0;if(!(d<<24>>24)){q=b;break a}else{l=(f|0)!=0;n=g;j=f}}QN(111754,46,1,k[24528]|0)|0;Hb(1)}else q=b;while(0);i[q>>0]=0;r=s;return k[11783]|0}function me(a){a=a|0;var b=0;Rv(a,114502)|0;Rv(a,114510)|0;b=a+12|0;Rv(a,le(k[k[k[b>>2]>>2]>>2]|0)|0)|0;Rv(a,114530)|0;Rv(a,le(k[(k[k[b>>2]>>2]|0)+4>>2]|0)|0)|0;Rv(a,114540)|0;Rv(a,le(k[(k[k[b>>2]>>2]|0)+8>>2]|0)|0)|0;Rv(a,114543)|0;return}function ne(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;g=r;r=r+32|0;f=g+24|0;e=g+16|0;d=g+8|0;c=g;b=k[a+16>>2]|0;k[11781]=~~(+p[a+232>>3]-+p[a+216>>3]);k[11782]=~~(+p[a+224>>3]-+p[a+208>>3]);Rv(a,113189)|0;Rv(a,113196)|0;b=ht(k[b+8>>2]|0)|0;if(i[b>>0]|0){Rv(a,113265)|0;Rv(a,le(b)|0)|0;Rv(a,113273)|0}b=ha(k[a+168>>2]|0,k[a+164>>2]|0)|0;k[c>>2]=b;Wv(a,113282,c);Rv(a,113302)|0;Rv(a,113337)|0;Rv(a,113365)|0;Rv(a,113371)|0;Rv(a,113414)|0;Rv(a,113455)|0;Rv(a,113474)|0;Rv(a,113491)|0;Rv(a,113539)|0;Rv(a,113592)|0;Rv(a,113668)|0;Rv(a,113744)|0;Rv(a,113753)|0;Rv(a,113776)|0;Rv(a,113803)|0;Rv(a,113856)|0;Rv(a,113878)|0;Rv(a,113923)|0;Rv(a,113935)|0;Rv(a,113945)|0;Rv(a,113971)|0;Rv(a,113856)|0;Rv(a,114023)|0;Rv(a,113923)|0;Rv(a,113935)|0;Rv(a,114067)|0;Rv(a,113776)|0;Rv(a,113803)|0;Rv(a,113856)|0;Rv(a,114023)|0;Rv(a,113923)|0;Rv(a,113935)|0;Rv(a,113945)|0;Rv(a,113971)|0;Rv(a,113856)|0;Rv(a,113878)|0;Rv(a,113923)|0;Rv(a,113935)|0;Rv(a,114080)|0;Rv(a,114088)|0;Rv(a,114094)|0;Rv(a,114108)|0;Rv(a,114116)|0;Rv(a,114149)|0;c=(k[11781]|0)+10|0;k[d>>2]=k[11782];k[d+4>>2]=c;Wv(a,114226,d);Rv(a,114256)|0;Rv(a,114265)|0;Rv(a,114323)|0;Rv(a,114333)|0;Rv(a,114398)|0;d=k[11781]|0;k[e>>2]=k[11782];k[e+4>>2]=d;Wv(a,114435,e);e=k[11781]|0;k[f>>2]=k[11782];k[f+4>>2]=e;Wv(a,114463,f);r=g;return}function oe(a){a=a|0;Rv(a,112740)|0;Rv(a,112752)|0;Rv(a,112760)|0;Rv(a,112823)|0;Rv(a,112752)|0;Rv(a,112868)|0;Rv(a,112917)|0;Rv(a,112971)|0;Rv(a,112752)|0;Rv(a,113071)|0;Rv(a,113120)|0;Rv(a,112752)|0;Rv(a,113172)|0;return}function pe(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;h=r;r=r+32|0;g=h+16|0;f=h+8|0;e=h;Rv(a,112698)|0;if((b|0)!=0?(i[b>>0]|0)!=0:0){b=le(b)|0;k[e>>2]=b;Wv(a,112701,e)}if((c|0)!=0?(i[c>>0]|0)!=0:0){c=le(c)|0;k[f>>2]=c;Wv(a,112712,f)}if((d|0)!=0?(i[d>>0]|0)!=0:0){c=le(d)|0;k[g>>2]=c;Wv(a,112724,g)}Rv(a,112737)|0;r=h;return}function qe(a){a=a|0;Rv(a,112692)|0;return}function re(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,g=0.0,h=0.0,j=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0.0,C=0.0,D=0.0;A=r;r=r+112|0;y=A+96|0;z=A+88|0;w=A+80|0;o=A+72|0;v=A+64|0;t=A+56|0;s=A+48|0;q=A+40|0;n=A+24|0;m=A+8|0;j=A;x=k[a+16>>2]|0;switch(i[c+48>>0]|0){case 108:{f=+p[c+32>>3];h=+p[b>>3];break}case 114:{h=+p[c+32>>3];f=h;h=+p[b>>3]-h;break}default:{h=+p[c+32>>3];f=h;h=+p[b>>3]-h*.5}}d=c+40|0;e=+p[d>>3];u=c+4|0;g=+p[(k[u>>2]|0)+16>>3];if(e<g){e=g*1.1+1.0;p[d>>3]=e}D=h+-8.0;C=+((k[11781]|0)>>>0)-+p[b+8>>3];B=g/5.0+(g<12.0?1.4:2.0);g=C-e+B;Wv(a,112354,j);p[m>>3]=D;p[m+8>>3]=g;Wv(a,112291,m);p[n>>3]=h+f+8.0-D;p[n+8>>3]=C+B-g;Wv(a,112315,n);Rv(a,112389)|0;Rv(a,112423)|0;d=k[u>>2]|0;b=k[d+8>>2]|0;if(b){k[q>>2]=k[b+4>>2];Wv(a,112513,q);d=k[b+8>>2]|0;if(d){k[s>>2]=d;Wv(a,112532,s)}d=k[b+12>>2]|0;if(d){k[t>>2]=d;Wv(a,112549,t)}d=k[b+16>>2]|0;if(d){k[v>>2]=d;Wv(a,112567,v)}}else{k[o>>2]=k[d>>2];Wv(a,112513,o)}p[w>>3]=+p[(k[u>>2]|0)+16>>3];Wv(a,112583,w);d=x+16|0;switch(k[x+48>>2]|0){case 5:{d=k[d>>2]|0;if(mO(d,173315)|0){k[z>>2]=d;Wv(a,112603,z)}break}case 1:{x=l[d+1>>0]|0;z=l[d+2>>0]|0;k[y>>2]=l[d>>0];k[y+4>>2]=x;k[y+8>>2]=z;Wv(a,112613,y);break}default:Wa(174497,112077,439,112634)}Rv(a,112647)|0;Rv(a,le(k[c>>2]|0)|0)|0;Rv(a,112658)|0;Rv(a,112681)|0;r=A;return}function se(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0.0,g=0.0,h=0,i=0.0,j=0.0;d=r;r=r+32|0;e=d+16|0;h=d;Rv(a,112255)|0;j=+p[b>>3];g=+p[b+16>>3]-j;i=+p[b+8>>3];f=+p[b+24>>3]-i;i=+((k[11781]|0)>>>0)-(i+f);p[h>>3]=j-g;p[h+8>>3]=i;Wv(a,112291,h);p[e>>3]=g*2.0;p[e+8>>3]=f*2.0;Wv(a,112315,e);ze(a,c);Rv(a,112137)|0;xe(a);Rv(a,112343)|0;r=d;return}function te(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,g=0,h=0,i=0,j=0,l=0;j=r;r=r+48|0;i=j+24|0;h=j+8|0;g=j;Rv(a,111860)|0;l=k[11781]|0;k[g>>2]=k[11782];k[g+4>>2]=l;Wv(a,112113,g);ze(a,d);Rv(a,112137)|0;xe(a);Rv(a,112140)|0;if((c|0)>0){d=c+-1|0;g=0;do{f=+p[b+(g<<4)>>3];e=+((k[11781]|0)>>>0)-+p[b+(g<<4)+8>>3];if(!g){Rv(a,112153)|0;p[h>>3]=f;p[h+8>>3]=e;Wv(a,112233,h);Rv(a,112244)|0}else{p[i>>3]=f;p[i+8>>3]=e;Wv(a,112233,i)}if((g|0)==(d|0))Rv(a,112247)|0;g=g+1|0}while((g|0)!=(c|0))}Rv(a,111976)|0;r=j;return}function ue(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0.0,j=0.0;h=r;r=r+32|0;g=h+8|0;d=h;Rv(a,111860)|0;e=k[11781]|0;k[d>>2]=k[11782];k[d+4>>2]=e;Wv(a,112113,d);ze(a,f);Rv(a,112137)|0;xe(a);Rv(a,112140)|0;if((c|0)>0){d=112153;f=0;while(1){j=+p[b+(f<<4)>>3];i=+((k[11781]|0)>>>0)-+p[b+(f<<4)+8>>3];k[g>>2]=d;p[g+8>>3]=j;p[g+16>>3]=i;Wv(a,112156,g);e=f+1|0;if((e|0)==(c|0))break;else{d=(f|0)==0?112169:176676;f=e}}}Rv(a,134779)|0;Rv(a,112172)|0;r=h;return}function ve(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0.0;i=r;r=r+48|0;h=i+24|0;g=i+8|0;f=i;Rv(a,111860)|0;e=k[11781]|0;k[f>>2]=k[11782];k[f+4>>2]=e;Wv(a,111897,f);Rv(a,111937)|0;if((c|0)>0){d=c+-1|0;e=b+8|0;f=0;do{if(!f){Rv(a,111949)|0;j=+((k[11781]|0)>>>0)-+p[e>>3];p[g>>3]=+p[b>>3];p[g+8>>3]=j;Wv(a,111953,g);Rv(a,111964)|0}else{j=+((k[11781]|0)>>>0)-+p[b+(f<<4)+8>>3];p[h>>3]=+p[b+(f<<4)>>3];p[h+8>>3]=j;Wv(a,111953,h)}if((f|0)==(d|0))Rv(a,111968)|0;f=f+1|0}while((f|0)!=(c|0))}Rv(a,111972)|0;xe(a);Rv(a,111976)|0;r=i;return}function we(a,b){a=a|0;b=b|0;Rv(a,111842)|0;Rv(a,le(b)|0)|0;Rv(a,111854)|0;return}function xe(a){a=a|0;var b=0.0,c=0,d=0,e=0,f=0,g=0,h=0,i=0;i=r;r=r+48|0;c=i+8|0;h=i;g=k[a+16>>2]|0;Rv(a,111988)|0;d=c;e=g+16|0;f=d+40|0;do{k[d>>2]=k[e>>2];d=d+4|0;e=e+4|0}while((d|0)<(f|0));ye(a,c);b=+p[g+152>>3];if(b!=1.0){p[h>>3]=b;Wv(a,112006,h)}switch(k[g+144>>2]|0){case 1:{Rv(a,112023)|0;break}case 2:{Rv(a,112041)|0;break}default:{}}Rv(a,112058)|0;r=i;return}function ye(a,b){a=a|0;b=b|0;var c=0,d=0;d=r;r=r+16|0;c=d;a:do switch(k[b+32>>2]|0){case 5:{Rv(a,k[b>>2]|0)|0;break}case 1:if(!(i[b+3>>0]|0)){Rv(a,171734)|0;break a}else{b=k[b>>2]|0;k[c>>2]=b&255;k[c+4>>2]=b>>>8&255;k[c+8>>2]=b>>>16&255;Wv(a,112063,c);break a}default:Wa(174497,112077,95,112097)}while(0);r=d;return}function ze(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=r;r=r+48|0;e=f;if(!b)Rv(a,112216)|0;else{c=k[a+16>>2]|0;Rv(a,112186)|0;b=e;c=c+56|0;d=b+40|0;do{k[b>>2]=k[c>>2];b=b+4|0;c=c+4|0}while((b|0)<(d|0));ye(a,e);Rv(a,112213)|0}r=f;return}function Ae(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;f=r;r=r+1040|0;e=f+16|0;d=f;k[d>>2]=c;a=ZN(e,1024,b,d)|0;if(a>>>0>1023){a=uP(a+1|0)|0;k[d>>2]=c;_N(a,b,d)|0}else a=tO(e)|0;r=f;return a|0}function Be(a){a=a|0;var b=0,c=0,d=0;b=r;r=r+16|0;c=b+8|0;d=b;Rv(a,117170)|0;Rv(a,117185)|0;Rv(a,117224)|0;Rv(a,117273)|0;k[d>>2]=173315;k[d+4>>2]=117361;Wv(a,117342,d);k[c>>2]=173223;k[c+4>>2]=117367;Wv(a,117342,c);r=b;return}function Ce(a){a=a|0;var b=0,c=0,d=0.0,e=0.0,f=0.0,g=0.0,h=0,i=0;b=r;r=r+64|0;c=b+8|0;h=b;i=ht(k[(k[a+16>>2]|0)+8>>2]|0)|0;k[h>>2]=i;Wv(a,116123,h);g=+p[a+368>>3]*.5*+p[a+488>>3];f=+p[a+376>>3]*.5*+p[a+496>>3];e=+ca(+(g/500.0))*180.0/3.141592653589793*2.0;d=+ca(+(f/500.0))*180.0/3.141592653589793*2.0;p[c>>3]=g;p[c+8>>3]=f;p[c+16>>3]=-500.0;p[c+24>>3]=g;p[c+32>>3]=f;p[c+40>>3]=0.0;p[c+48>>3]=(e>d?e:d)*1.2;Wv(a,116145,c);Rv(a,116292)|0;Rv(a,117122)|0;r=b;return}function De(a){a=a|0;Rv(a,116106)|0;return}function Ee(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0.0,g=0;e=r;r=r+16|0;g=e;k[g>>2]=b;k[g+4>>2]=c;k[g+8>>2]=d;Wv(a,116076,g);f=+(ha(c,-10)|0);o[11973]=f;r=e;return}function Fe(a){a=a|0;Rv(a,116059)|0;return}function Ge(a){a=a|0;Rv(a,116041)|0;return}function He(a){a=a|0;Rv(a,116025)|0;return}function Ie(a){a=a|0;Rv(a,116004)|0;o[11973]=+o[11973]+-2.0;return}function Je(a){a=a|0;Rv(a,115985)|0;return}function Ke(a){a=a|0;var b=0,c=0,d=0;b=r;r=r+16|0;c=b;d=ht(k[(k[a+16>>2]|0)+8>>2]|0)|0;k[c>>2]=d;Wv(a,115963,c);r=b;return}function Le(a){a=a|0;Rv(a,115947)|0;return}function Me(a){a=a|0;Rv(a,115929)|0;o[11973]=+o[11973]+-5.0;return}function Ne(a){a=a|0;Rv(a,115913)|0;o[11973]=+o[11973]+5.0;return}function Oe(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,q=0,s=0.0,t=0.0,u=0.0;q=r;r=r+144|0;l=q+104|0;n=q+56|0;f=q+32|0;e=q+24|0;j=q;m=c+4|0;h=k[m>>2]|0;d=+p[h+16>>3];h=k[h>>2]|0;k[j>>2]=k[c>>2];p[j+8>>3]=d;k[j+16>>2]=h;Wv(a,115759,j);o[11974]=+o[11973]+-9.0;switch(i[c+48>>0]|0){case 108:{d=+p[b>>3];break}case 114:{d=+p[b>>3]-+p[c+32>>3];p[b>>3]=d;break}default:{d=+p[b>>3]-+p[c+32>>3]*.5;p[b>>3]=d}}u=+p[a+488>>3];t=(d+ +p[a+504>>3])*u;s=(+p[b+8>>3]+ +p[a+512>>3])*+p[a+496>>3];p[e>>3]=u*+p[(k[m>>2]|0)+16>>3];j=Ae(0,115811,e)|0;d=+(k[a+360>>2]|0);p[f>>3]=0.0;p[f+8>>3]=0.0;p[f+16>>3]=d;b=Ae(0,115050,f)|0;d=+o[11974];p[l>>3]=t;p[l+8>>3]=s;p[l+16>>3]=d;e=Ae(0,115082,l)|0;f=l;g=(k[a+16>>2]|0)+16|0;h=f+40|0;do{k[f>>2]=k[g>>2];f=f+4|0;g=g+4|0}while((f|0)<(h|0));l=Ue(a,l,0.0)|0;c=k[c>>2]|0;k[n>>2]=k[k[m>>2]>>2];p[n+8>>3]=.25;p[n+16>>3]=0.0;k[n+24>>2]=c;k[n+28>>2]=115898;k[n+32>>2]=j;k[n+36>>2]=b;k[n+40>>2]=e;k[n+44>>2]=l;n=Ae(0,115823,n)|0;Rv(a,n)|0;vP(n);vP(b);vP(l);vP(e);vP(j);r=q;return}function Pe(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0.0,g=0.0,h=0.0,i=0,j=0,l=0,m=0.0,n=0.0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0;z=r;r=r+240|0;x=z+192|0;y=z+152|0;t=z+128|0;q=z+104|0;l=z+80|0;j=z+48|0;d=z+24|0;i=z;Rv(a,115636)|0;o[11974]=+o[11973]+-6.0;g=+p[b>>3];f=+p[a+488>>3];m=(g+ +p[a+504>>3])*f;h=+p[b+8>>3];A=+p[a+496>>3];n=(h+ +p[a+512>>3])*A;g=f*(+p[b+16>>3]-g);h=A*(+p[b+24>>3]-h);s=a+16|0;A=g+h;f=+p[(k[s>>2]|0)+152>>3]/A*.5*5.0;p[i>>3]=g;p[i+8>>3]=A*.25;p[i+16>>3]=h;b=Ae(0,115018,i)|0;i=a+360|0;A=+(k[i>>2]|0);p[d>>3]=90.0;p[d+8>>3]=0.0;p[d+16>>3]=A;d=Ae(0,115050,d)|0;A=+o[11974];p[x>>3]=m;p[x+8>>3]=n;p[x+16>>3]=A;e=Ae(0,115082,x)|0;u=x;v=(k[s>>2]|0)+16|0;w=u+40|0;do{k[u>>2]=k[v>>2];u=u+4|0;v=v+4|0}while((u|0)<(w|0));v=Ue(a,x,0.0)|0;p[j>>3]=1.0;p[j+8>>3]=f;k[j+16>>2]=b;k[j+20>>2]=d;k[j+24>>2]=e;k[j+28>>2]=v;w=Ae(0,115651,j)|0;Rv(a,w)|0;vP(b);vP(d);vP(e);vP(v);vP(w);if(c){p[l>>3]=g;p[l+8>>3]=h;p[l+16>>3]=1.0;e=Ae(0,115018,l)|0;A=+(k[i>>2]|0);p[q>>3]=0.0;p[q+8>>3]=0.0;p[q+16>>3]=A;d=Ae(0,115050,q)|0;A=+o[11974];p[t>>3]=m;p[t+8>>3]=n;p[t+16>>3]=A;b=Ae(0,115082,t)|0;u=x;v=(k[s>>2]|0)+56|0;w=u+40|0;do{k[u>>2]=k[v>>2];u=u+4|0;v=v+4|0}while((u|0)<(w|0));x=Ue(a,x,0.0)|0;p[y>>3]=0.0;p[y+8>>3]=0.0;p[y+16>>3]=0.0;k[y+24>>2]=e;k[y+28>>2]=d;k[y+32>>2]=b;k[y+36>>2]=x;y=Ae(0,115697,y)|0;Rv(a,y)|0;vP(e);vP(d);vP(b);vP(x);vP(y)}r=z;return}function Qe(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0,O=0.0;L=r;r=r+336|0;B=L+296|0;K=L+288|0;J=L+272|0;I=L+264|0;H=L+240|0;E=L+232|0;A=L+208|0;z=L+184|0;x=L+160|0;w=L+152|0;v=L+136|0;u=L+128|0;t=L+96|0;j=L+88|0;i=L+56|0;e=L+48|0;l=L+24|0;s=L;Rv(a,115501)|0;o[11974]=+o[11973]+-2.0;n=a+488|0;q=a+496|0;M=+p[q>>3];p[s>>3]=+p[n>>3];p[s+8>>3]=M;p[s+16>>3]=1.0;s=Ae(0,115018,s)|0;y=a+360|0;M=+(k[y>>2]|0);p[l>>3]=0.0;p[l+8>>3]=0.0;p[l+16>>3]=M;l=Ae(0,115050,l)|0;M=+o[11974]+-2.0;p[B>>3]=0.0;p[B+8>>3]=0.0;p[B+16>>3]=M;m=Ae(0,115082,B)|0;C=a+16|0;f=B;g=(k[C>>2]|0)+16|0;h=f+40|0;do{k[f>>2]=k[g>>2];f=f+4|0;g=g+4|0}while((f|0)<(h|0));h=Ue(a,B,0.0)|0;k[e>>2]=115145;k[e+4>>2]=c+1;e=Ae(0,115114,e)|0;D=(c|0)>0;F=a+504|0;G=a+512|0;if(D){g=0;while(1){O=+p[b+(g<<4)+8>>3]+ +p[G>>3];M=+p[(k[C>>2]|0)+152>>3];p[i>>3]=+p[b+(g<<4)>>3]+ +p[F>>3];p[i+8>>3]=O;p[i+16>>3]=0.0;p[i+24>>3]=M;N=Ae(0,115159,i)|0;k[j>>2]=e;k[j+4>>2]=N;f=Ae(0,115188,j)|0;vP(N);vP(e);g=g+1|0;if((g|0)==(c|0)){e=f;break}else e=f}}M=+p[b+8>>3]+ +p[G>>3];O=+p[(k[C>>2]|0)+152>>3];p[t>>3]=+p[b>>3]+ +p[F>>3];p[t+8>>3]=M;p[t+16>>3]=0.0;p[t+24>>3]=O;t=Ae(0,115159,t)|0;k[u>>2]=e;k[u+4>>2]=t;N=Ae(0,115188,u)|0;vP(t);vP(e);k[v>>2]=s;k[v+4>>2]=l;k[v+8>>2]=m;k[v+12>>2]=h;v=Ae(0,115516,v)|0;k[w>>2]=N;k[w+4>>2]=v;N=Ae(0,115243,w)|0;vP(v);Rv(a,N)|0;vP(s);vP(l);vP(m);vP(h);vP(N);if(d){O=+p[q>>3];p[x>>3]=+p[n>>3];p[x+8>>3]=O;p[x+16>>3]=1.0;l=Ae(0,115018,x)|0;O=+(k[y>>2]|0);p[z>>3]=0.0;p[z+8>>3]=0.0;p[z+16>>3]=O;j=Ae(0,115050,z)|0;O=+o[11974]+-2.0;p[A>>3]=0.0;p[A+8>>3]=0.0;p[A+16>>3]=O;i=Ae(0,115082,A)|0;f=B;g=(k[C>>2]|0)+56|0;h=f+40|0;do{k[f>>2]=k[g>>2];f=f+4|0;g=g+4|0}while((f|0)<(h|0));h=Ue(a,B,.25)|0;k[E>>2]=c;e=Ae(0,115561,E)|0;if(D){g=0;while(1){O=+p[b+(g<<4)+8>>3]+ +p[G>>3];p[H>>3]=+p[b+(g<<4)>>3]+ +p[F>>3];p[H+8>>3]=O;p[H+16>>3]=0.0;N=Ae(0,115576,H)|0;k[I>>2]=e;k[I+4>>2]=N;f=Ae(0,115598,I)|0;vP(N);vP(e);g=g+1|0;if((g|0)==(c|0)){e=f;break}else e=f}}k[J>>2]=l;k[J+4>>2]=j;k[J+8>>2]=i;k[J+12>>2]=h;J=Ae(0,115608,J)|0;k[K>>2]=e;k[K+4>>2]=J;N=Ae(0,115243,K)|0;vP(J);Rv(a,N)|0;vP(l);vP(j);vP(i);vP(h);vP(N)}r=L;return}function Re(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,l=0,m=0,n=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0.0,C=0,D=0.0;A=r;r=r+208|0;e=A+160|0;z=A+152|0;y=A+136|0;u=A+128|0;t=A+96|0;s=A+88|0;q=A+56|0;h=A+48|0;v=A+24|0;x=A;Rv(a,115428)|0;o[11974]=+o[11973]+-4.0;B=+p[a+496>>3];p[x>>3]=+p[a+488>>3];p[x+8>>3]=B;p[x+16>>3]=1.0;x=Ae(0,115018,x)|0;B=+(k[a+360>>2]|0);p[v>>3]=0.0;p[v+8>>3]=0.0;p[v+16>>3]=B;v=Ae(0,115050,v)|0;B=+o[11974]+-2.0;p[e>>3]=0.0;p[e+8>>3]=0.0;p[e+16>>3]=B;w=Ae(0,115082,e)|0;n=a+16|0;d=e;f=(k[n>>2]|0)+56|0;g=d+40|0;do{k[d>>2]=k[f>>2];d=d+4|0;f=f+4|0}while((d|0)<(g|0));m=Ue(a,e,0.0)|0;k[h>>2]=115442;k[h+4>>2]=c+2;e=Ae(0,115114,h)|0;if((c|0)>0){h=a+504|0;i=a+512|0;j=c+-1|0;l=0;do{d=b+(l<<4)|0;f=b+(l<<4)+8|0;D=+p[f>>3]+ +p[i>>3];B=+p[(k[n>>2]|0)+152>>3];p[q>>3]=+p[d>>3]+ +p[h>>3];p[q+8>>3]=D;p[q+16>>3]=0.0;p[q+24>>3]=B;C=Ae(0,115159,q)|0;k[s>>2]=e;k[s+4>>2]=C;g=Ae(0,115188,s)|0;vP(C);vP(e);if((l|0)==0|(l|0)==(j|0)){B=+p[f>>3]+ +p[i>>3];D=+p[(k[n>>2]|0)+152>>3];p[t>>3]=+p[d>>3]+ +p[h>>3];p[t+8>>3]=B;p[t+16>>3]=0.0;p[t+24>>3]=D;C=Ae(0,115159,t)|0;k[u>>2]=g;k[u+4>>2]=C;e=Ae(0,115188,u)|0;vP(C);vP(g)}else e=g;l=l+1|0}while((l|0)!=(c|0))}k[y>>2]=x;k[y+4>>2]=v;k[y+8>>2]=w;k[y+12>>2]=m;c=Ae(0,115451,y)|0;k[z>>2]=e;k[z+4>>2]=c;C=Ae(0,115243,z)|0;vP(c);Rv(a,C)|0;vP(x);vP(v);vP(w);vP(m);vP(C);r=A;return}function Se(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,q=0,s=0,t=0,u=0,v=0,w=0.0,x=0,y=0.0;v=r;r=r+160|0;d=v+120|0;u=v+112|0;t=v+96|0;m=v+88|0;l=v+56|0;h=v+48|0;n=v+24|0;s=v;Rv(a,115002)|0;o[11974]=+o[11973]+-6.0;w=+p[a+496>>3];p[s>>3]=+p[a+488>>3];p[s+8>>3]=w;p[s+16>>3]=1.0;s=Ae(0,115018,s)|0;w=+(k[a+360>>2]|0);p[n>>3]=0.0;p[n+8>>3]=0.0;p[n+16>>3]=w;n=Ae(0,115050,n)|0;w=+o[11974];p[d>>3]=0.0;p[d+8>>3]=0.0;p[d+16>>3]=w;q=Ae(0,115082,d)|0;j=a+16|0;e=d;f=(k[j>>2]|0)+16|0;g=e+40|0;do{k[e>>2]=k[f>>2];e=e+4|0;f=f+4|0}while((e|0)<(g|0));i=Ue(a,d,0.0)|0;k[h>>2]=115145;k[h+4>>2]=c;d=Ae(0,115114,h)|0;if((c|0)>0){f=a+504|0;g=a+512|0;h=0;while(1){y=+p[b+(h<<4)+8>>3]+ +p[g>>3];w=+p[(k[j>>2]|0)+152>>3];p[l>>3]=+p[b+(h<<4)>>3]+ +p[f>>3];p[l+8>>3]=y;p[l+16>>3]=0.0;p[l+24>>3]=w;x=Ae(0,115159,l)|0;k[m>>2]=d;k[m+4>>2]=x;e=Ae(0,115188,m)|0;vP(x);vP(d);h=h+1|0;if((h|0)==(c|0)){d=e;break}else d=e}}k[t>>2]=s;k[t+4>>2]=n;k[t+8>>2]=q;k[t+12>>2]=i;t=Ae(0,115197,t)|0;k[u>>2]=d;k[u+4>>2]=t;x=Ae(0,115243,u)|0;vP(t);Rv(a,x)|0;vP(s);vP(n);vP(q);vP(i);vP(x);r=v;return}function Te(a,b){a=a|0;b=b|0;var c=0,d=0;c=r;r=r+16|0;d=c;k[d>>2]=b;Wv(a,114983,d);r=c;return}function Ue(a,b,c){a=a|0;b=b|0;c=+c;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0;m=r;r=r+112|0;j=m+104|0;e=m+96|0;d=m+64|0;i=m+48|0;l=m+32|0;h=m+16|0;g=m;a=k[b+32>>2]|0;a:do switch(a|0){case 5:{a=k[b>>2]|0;if(!(qO(a,172327)|0)){k[g>>2]=115265;p[g+8>>3]=c;f=Ae(0,115248,g)|0;break a}if(!(qO(a,169457)|0)){k[h>>2]=115269;p[h+8>>3]=c;f=Ae(0,115248,h)|0;break a}if(!(qO(a,167456)|0)){k[l>>2]=115275;p[l+8>>3]=c;f=Ae(0,115248,l)|0;break a}else{k[i>>2]=a;p[i+8>>3]=c;f=Ae(0,115248,i)|0;break a}}case 1:{f=k[b>>2]|0;p[d>>3]=+(f&255|0)*.00390625;p[d+8>>3]=+(f>>>8&255|0)*.00390625;p[d+16>>3]=+(f>>>16&255|0)*.00390625;p[d+24>>3]=c;f=Ae(0,115280,d)|0;break}default:{l=k[24528]|0;i=k[b>>2]|0;k[e>>2]=a;k[e+4>>2]=i;FN(l,115319,e)|0;Wa(174497,115369,438,115389)}}while(0);k[j>>2]=f;l=Ae(0,115406,j)|0;vP(f);r=m;return l|0}function Ve(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0;b=r;r=r+32|0;c=b+24|0;d=b+16|0;f=b;e=k[a+16>>2]|0;g=k[k[a+12>>2]>>2]|0;i=k[g>>2]|0;h=k[g+4>>2]|0;g=k[g+8>>2]|0;k[f>>2]=117392;k[f+4>>2]=i;k[f+8>>2]=h;k[f+12>>2]=g;Wv(a,120002,f);e=ht(k[e+8>>2]|0)|0;k[d>>2]=117392;k[d+4>>2]=e;Wv(a,120034,d);k[c>>2]=117392;Wv(a,120048,c);r=b;return}function We(a){a=a|0;var b=0,c=0;b=r;r=r+16|0;c=b;k[c>>2]=117392;Wv(a,119950,c);r=b;return}function Xe(a){a=a|0;var b=0.0,c=0.0,d=0.0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;W=r;r=r+320|0;o=W+304|0;n=W+296|0;V=W+280|0;U=W+272|0;T=W+264|0;R=W+256|0;Q=W+248|0;P=W+240|0;O=W+232|0;N=W+224|0;M=W+216|0;L=W+208|0;K=W+200|0;J=W+192|0;I=W+184|0;H=W+176|0;G=W+168|0;F=W+160|0;E=W+152|0;D=W+144|0;C=W+136|0;B=W+128|0;A=W+120|0;z=W+112|0;y=W+104|0;x=W+96|0;w=W+88|0;v=W+80|0;u=W+72|0;t=W+64|0;s=W+56|0;q=W+48|0;S=W+32|0;m=W+24|0;l=W+8|0;j=W;f=k[a+456>>2]|0;g=k[a+460>>2]|0;h=k[a+464>>2]|0;i=k[a+468>>2]|0;e=a+360|0;a:do if(k[12097]|0){switch(k[e>>2]|0){case 90:case 0:break a;default:{}}k[j>>2]=117497;k[j+4>>2]=128404;Yr(0,117579,j)|0;k[12097]=0}while(0);d=(+(i|0)-+(g|0))/72.0;b=(+(h|0)-+(f|0))/72.0;j=(k[e>>2]|0)==90;c=j?d:b;d=j?b:d;p[l>>3]=c;p[l+8>>3]=d;Wv(a,117597,l);k[m>>2]=117392;Wv(a,117612,m);if(c>0.0){b=+NM(c);b=b+(3.0-+(~~b|0))}else b=3.0;b=+Y(10.0,+b);p[137]=b;p[S>>3]=b;p[S+8>>3]=b;Wv(a,117781,S);k[q>>2]=117392;Wv(a,117816,q);k[s>>2]=117392;Wv(a,117874,s);k[t>>2]=117392;Wv(a,117934,t);k[u>>2]=117392;Wv(a,117983,u);k[v>>2]=117392;Wv(a,118022,v);k[w>>2]=117392;Wv(a,118073,w);k[x>>2]=117392;Wv(a,118135,x);k[y>>2]=117392;Wv(a,118245,y);k[z>>2]=117392;Wv(a,118336,z);k[A>>2]=117392;Wv(a,118390,A);k[B>>2]=117392;Wv(a,118459,B);Wv(a,118495,C);k[D>>2]=117392;Wv(a,118620,D);k[E>>2]=117392;Wv(a,118649,E);Wv(a,118689,F);k[G>>2]=117392;Wv(a,118782,G);k[H>>2]=117392;Wv(a,118841,H);k[I>>2]=117392;Wv(a,118922,I);Wv(a,118992,J);k[K>>2]=117392;Wv(a,119081,K);k[L>>2]=117392;Wv(a,119186,L);k[M>>2]=117392;Wv(a,119262,M);k[N>>2]=117392;Wv(a,119301,N);k[O>>2]=117392;Wv(a,119400,O);k[P>>2]=117392;Wv(a,119446,P);Wv(a,119535,Q);k[R>>2]=117392;Wv(a,119576,R);k[T>>2]=117392;Wv(a,119659,T);k[U>>2]=117392;Wv(a,119760,U);p[V>>3]=d;p[V+8>>3]=c;Wv(a,119824,V);Wv(a,119852,n);Wv(a,119860,o);r=W;return}function Ye(a){a=a|0;var b=0;b=r;r=r+16|0;Wv(a,117572,b);r=b;return}function Ze(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0.0,g=0.0,h=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0;u=r;r=r+64|0;t=u+40|0;q=u+32|0;m=u+16|0;l=u+8|0;h=u;switch(i[c+48>>0]|0){case 108:{s=b;f=+p[c+32>>3];g=+p[b>>3];break}case 114:{f=+p[c+32>>3];g=+p[b>>3]-f;p[b>>3]=g;s=b;break}default:{f=+p[c+32>>3];g=+p[b>>3]-f*.5;p[b>>3]=g;s=b}}j=c+4|0;e=k[j>>2]|0;o=b+8|0;p[o>>3]=+p[e+16>>3]/216.0+ +p[o>>3];p[s>>3]=f/144.0+g;e=k[e>>2]|0;do if(e){b=k[12025]|0;if((b|0)!=0?(qO(b,e)|0)==0:0)break;else b=48104;while(1){d=k[b+4>>2]|0;if(!d){k[h>>2]=117497;k[h+4>>2]=e;Yr(1,117471,h)|0;b=zO(e,45)|0;if(!b){b=117514;break}i[b>>0]=0;b=48104;continue}else{if(!(qO(d,e)|0)){n=11;break}b=b+8|0;continue}}k[l>>2]=b;Wv(a,117516,l);k[12025]=k[k[j>>2]>>2]}while(0);if((k[12094]|0)!=1){g=+p[137];k[m>>2]=1;p[m+8>>3]=g;Wv(a,117524,m);k[12094]=1}e=k[c>>2]|0;b=k[12095]|0;if(!b){k[12096]=64;b=uP(64)|0;k[12095]=b}d=i[e>>0]|0;if(d<<24>>24){h=0;j=e;while(1){j=j+1|0;e=k[12096]|0;if((h|0)>(e+-8|0)){b=e<<1;k[12096]=b;b=xP(k[12095]|0,b)|0;k[12095]=b;b=b+h|0}if(d<<24>>24>-1){if(d<<24>>24==92){i[b>>0]=92;b=b+1|0;e=h+1|0}else e=h;i[b>>0]=d;b=b+1|0;e=e+1|0}else{i[b>>0]=92;k[q>>2]=d&255;TN(b+1|0,117545,q)|0;b=b+4|0;e=h+4|0}d=i[j>>0]|0;if(!(d<<24>>24))break;else h=e}}i[b>>0]=0;f=+p[s>>3];g=+p[o>>3];k[t>>2]=k[12095];p[t+8>>3]=f;p[t+16>>3]=g;Wv(a,117550,t);r=u;return}function _e(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0.0,g=0.0,h=0.0,i=0.0;d=r;r=r+48|0;e=d;g=+p[b>>3];i=(+p[b+16>>3]-g)*2.0/72.0;f=+p[b+8>>3];h=(+p[b+24>>3]-f)*2.0/72.0;k[e>>2]=1;k[e+4>>2]=(c|0)!=0?117413:176676;p[e+8>>3]=i;p[e+16>>3]=h;p[e+24>>3]=g/72.0;p[e+32>>3]=f/72.0;Wv(a,117419,e);r=d;return}function $e(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;df(a,b,c,1);return}function af(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0.0,A=0.0,B=0;y=r;r=r+112|0;x=y+104|0;w=y+96|0;u=y+88|0;e=y+80|0;t=y+16|0;f=y;v=uP((c*140|0)+140|0)|0;A=+p[b>>3];q=t+48|0;p[q>>3]=A;z=+p[b+8>>3];s=t+56|0;p[s>>3]=z;k[e>>2]=~~(A+(A>=0.0?.5:-.5));k[e+4>>2]=~~(z+(z>=0.0?.5:-.5));e=TN(v,117397,e)|0;if((c|0)>3){g=f+8|0;h=(((c+-4|0)>>>0)/3|0)*6|0;i=t+16|0;j=t+24|0;l=t+32|0;m=t+40|0;n=t+48|0;o=3;e=v+e|0;d=0;while(1){k[t>>2]=k[q>>2];k[t+4>>2]=k[q+4>>2];k[t+8>>2]=k[q+8>>2];k[t+12>>2]=k[q+12>>2];B=d+1|0;p[i>>3]=+p[b+(B<<4)>>3];p[j>>3]=+p[b+(B<<4)+8>>3];B=d+2|0;p[l>>3]=+p[b+(B<<4)>>3];p[m>>3]=+p[b+(B<<4)+8>>3];d=d+3|0;p[n>>3]=+p[b+(d<<4)>>3];p[s>>3]=+p[b+(d<<4)+8>>3];d=1;do{uB(f,t,3,+(d|0)/6.0,0,0);z=+p[f>>3];A=+p[g>>3];k[u>>2]=~~(z+(z>=0.0?.5:-.5));k[u+4>>2]=~~(A+(A>=0.0?.5:-.5));e=e+(TN(e,117397,u)|0)|0;d=d+1|0}while((d|0)!=7);d=o+3|0;if((d|0)<(c|0)){B=o;o=d;d=B}else break}f=h+7|0}else f=1;k[w>>2]=v;Wv(a,117404,w);vP(v);if((f|0)>0){e=f+-1|0;d=0;do{k[x>>2]=((d|0)%(e|0)|0|0)!=0&1;Wv(a,117409,x);d=d+1|0}while((d|0)!=(f|0))}Rv(a,191538)|0;r=y;return}function bf(a,b,c){a=a|0;b=b|0;c=c|0;df(a,b,c,0);return}function cf(a,b){a=a|0;b=b|0;var c=0,d=0;c=r;r=r+16|0;d=c;k[d>>2]=117392;k[d+4>>2]=b;Wv(a,117385,d);r=c;return}function df(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0.0,j=0.0;h=r;r=r+16|0;g=h+8|0;f=h;if((c|0)>0){e=0;do{j=+p[b+(e<<4)>>3];i=+p[b+(e<<4)+8>>3];k[f>>2]=~~(j+(j>=0.0?.5:-.5));k[f+4>>2]=~~(i+(i>=0.0?.5:-.5));Wv(a,117397,f);e=e+1|0}while((e|0)!=(c|0))}if(d){i=+p[b>>3];j=+p[b+8>>3];k[g>>2]=~~(i+(i>=0.0?.5:-.5));k[g+4>>2]=~~(j+(j>=0.0?.5:-.5));Wv(a,117397,g)}Rv(a,191538)|0;r=h;return}function ef(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return}function ff(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0.0,g=0.0,h=0,i=0;d=r;r=r+32|0;e=d+8|0;h=d;b=b+8|0;i=k[b>>2]|0;k[h>>2]=i;k[h+4>>2]=i;Wv(a,120509,h);g=(+p[c+16>>3]+ +p[c>>3])*.5;f=(+p[c+24>>3]+ +p[c+8>>3])*.5;k[e>>2]=k[b>>2];p[e+8>>3]=g;p[e+16>>3]=f;Wv(a,120551,e);r=d;return}function gf(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0.0,g=0.0,h=0.0,i=0.0;d=r;r=r+48|0;e=d;g=+p[c>>3];i=+p[c+16>>3]-g;f=+p[c+24>>3];h=f-+p[c+8>>3];f=+(~~(+p[a+232>>3]-+p[a+216>>3])>>>0)-f;k[e>>2]=k[b+8>>2];p[e+8>>3]=i;p[e+16>>3]=h;p[e+24>>3]=g;p[e+32>>3]=f;Wv(a,120596,e);Rv(a,120688)|0;r=d;return}function hf(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,g=0.0,h=0.0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=r;r=r+256|0;z=B+248|0;y=B+232|0;w=B+216|0;v=B+200|0;u=B+184|0;t=B+168|0;s=B+160|0;q=B+152|0;o=B+136|0;n=B+120|0;A=B+104|0;x=B+88|0;m=B+72|0;l=B+64|0;j=B;if(!a)Wa(147174,120693,214,120712);if(!b)Wa(147204,120693,215,120712);i=b+8|0;if(!(k[i>>2]|0))Wa(147207,120693,216,120712);if(k[b+52>>2]|0){k[j>>2]=k[c>>2];k[j+4>>2]=k[c+4>>2];k[j+8>>2]=k[c+8>>2];k[j+12>>2]=k[c+12>>2];b=j+32|0;c=c+16|0;k[b>>2]=k[c>>2];k[b+4>>2]=k[c+4>>2];k[b+8>>2]=k[c+8>>2];k[b+12>>2]=k[c+12>>2];e=+p[j>>3];p[j+16>>3]=e;f=+p[j+40>>3];p[j+24>>3]=f;g=+p[b>>3];p[j+48>>3]=g;h=+p[j+8>>3];p[j+56>>3]=h;if(d<<24>>24){Wv(a,120733,l);p[m>>3]=e;p[m+8>>3]=h;Wv(a,120736,m);p[x>>3]=e;p[x+8>>3]=f;Wv(a,120736,x);p[A>>3]=g;p[A+8>>3]=f;Wv(a,120736,A);p[n>>3]=g;p[n+8>>3]=h;Wv(a,120736,n);p[o>>3]=e;p[o+8>>3]=h;Wv(a,120736,o);A=k[i>>2]|0;k[q>>2]=4;k[q+4>>2]=A;Wv(a,120743,q)}Wv(a,120733,s);p[t>>3]=e;p[t+8>>3]=h;Wv(a,120736,t);p[u>>3]=e;p[u+8>>3]=f;Wv(a,120736,u);p[v>>3]=g;p[v+8>>3]=f;Wv(a,120736,v);p[w>>3]=g;p[w+8>>3]=h;Wv(a,120736,w);p[y>>3]=e;p[y+8>>3]=h;Wv(a,120736,y);A=k[i>>2]|0;k[z>>2]=4;k[z+4>>2]=A;Wv(a,120758,z)}r=B;return}function jf(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0.0;m=r;r=r+112|0;l=m+24|0;j=m+16|0;h=m;f=m+28|0;if(!a)Wa(147174,120693,155,120774);if(!b)Wa(147204,120693,156,120774);if(!(k[b+8>>2]|0))Wa(147207,120693,157,120774);g=b+52|0;if(k[g>>2]|0){d=b+60|0;e=k[d>>2]|0;if((e|0)==91)e=18;else{Nb[e&127](b);k[g>>2]=0;k[d>>2]=0;k[b+56>>2]=0;e=10}}else e=10;do if((e|0)==10){if(!((aw(b)|0)<<24>>24))break;d=DN(k[b+20>>2]|0)|0;if((k[b+24>>2]&-2|0)==6){jN(d,f)|0;f=k[f+36>>2]|0;k[b+56>>2]=f;d=SM(0,f,1,1,d,0)|0;k[g>>2]=d;i[b+16>>0]=1}else d=k[g>>2]|0;if(d)k[b+60>>2]=91;bw(b);if(k[g>>2]|0)e=18}while(0);if((e|0)==18){n=+p[c+8>>3]-+(k[b+36>>2]|0);p[h>>3]=+p[c>>3]-+(k[b+32>>2]|0);p[h+8>>3]=n;Wv(a,120792,h);if(!(i[b+16>>0]|0)){k[j>>2]=k[b+12>>2];Wv(a,120823,j)}else Az(a,b);Wv(a,120838,l)}r=m;return}function kf(a){a=a|0;TM(k[a+52>>2]|0,k[a+56>>2]|0)|0;return}function lf(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;f=r;r=r+80|0;e=f+48|0;if(!a)Wa(147174,120693,123,120848);d=k[a+16>>2]|0;if(!d)Wa(135856,120693,125,120848);if(!b)Wa(147204,120693,126,120848);c=b+8|0;if(!(k[c>>2]|0))Wa(147207,120693,127,120848);if(!(k[d+8>>2]|0))Wa(174982,120693,130,120848);else{Wv(a,120868,f);Wv(a,120877,f+8|0);Wv(a,120904,f+16|0);Wv(a,120929,f+24|0);Wv(a,120958,f+32|0);Wv(a,120986,f+40|0);k[e>>2]=k[c>>2];Wv(a,120993,e);Wv(a,121032,f+56|0);Wv(a,146907,f+64|0);r=f;return}}function mf(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0.0;g=r;r=r+128|0;f=g+80|0;e=g;if(!a)Wa(147174,120693,99,121037);if(!b)Wa(147204,120693,100,121037);d=k[b+8>>2]|0;if(!d)Wa(147207,120693,101,121037);else{j=+p[c>>3];h=~~(j+(j>=0.0?.5:-.5));j=+p[c+8>>3];b=~~(j+(j>=0.0?.5:-.5));j=+p[c+16>>3];i=~~(j+(j>=0.0?.5:-.5));j=+p[c+24>>3];c=~~(j+(j>=0.0?.5:-.5));k[e>>2]=2;k[e+4>>2]=5;k[e+8>>2]=0;k[e+12>>2]=0;k[e+16>>2]=0;k[e+20>>2]=-1;k[e+24>>2]=1;k[e+28>>2]=-1;k[e+32>>2]=0;p[e+40>>3]=0.0;k[e+48>>2]=0;k[e+52>>2]=0;k[e+56>>2]=0;k[e+60>>2]=0;k[e+64>>2]=0;k[e+68>>2]=5;k[e+72>>2]=0;k[e+76>>2]=d;Wv(a,121056,e);k[f>>2]=h;k[f+4>>2]=b;k[f+8>>2]=h;k[f+12>>2]=c;k[f+16>>2]=i;k[f+20>>2]=c;k[f+24>>2]=i;k[f+28>>2]=b;k[f+32>>2]=h;k[f+36>>2]=b;Wv(a,121114,f);r=g;return}}function nf(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,g=0.0,h=0.0,i=0.0,j=0,l=0,m=0,n=0,o=0.0;n=r;r=r+96|0;m=n+56|0;l=n+32|0;j=n;o=+p[c+16>>3];f=+p[c>>3];i=o-f;g=+p[c+24>>3];e=+p[c+8>>3];h=g-e;f=(o+f-i)*.5;if(!a)Wa(147174,120693,55,121146);if(!b)Wa(147204,120693,56,121146);d=b+8|0;if(!(k[d>>2]|0))Wa(147207,120693,57,121146);Rv(a,121165)|0;Rv(a,k[d>>2]|0)|0;d=a+360|0;e=-((g+e+h)*.5);if(!(k[d>>2]|0)){p[m>>3]=i;p[m+8>>3]=h;p[m+16>>3]=f;p[m+24>>3]=e;Wv(a,121294,m)}else{p[j>>3]=h;p[j+8>>3]=i;p[j+16>>3]=f;p[j+24>>3]=e;Wv(a,121185,j);k[l>>2]=k[d>>2];p[l+8>>3]=f;p[l+16>>3]=e;Wv(a,121264,l)}Rv(a,121373)|0;r=n;return}function of(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0;b=Kt(a)|0;if(b)do{qu(b,173424,304,1)|0;BB(b);f=($t(b)|0)+8|0;ZB(b,k[(k[f>>2]|0)+116>>2]&1);f=b+8|0;k[(k[f>>2]|0)+176>>2]=0;e=By(20)|0;d=k[f>>2]|0;k[d+172>>2]=e;k[d+184>>2]=0;d=By(20)|0;e=k[f>>2]|0;k[e+180>>2]=d;k[e+200>>2]=0;e=By(12)|0;d=k[f>>2]|0;k[d+196>>2]=e;k[d+192>>2]=0;d=By(12)|0;e=k[f>>2]|0;k[e+188>>2]=d;k[e+208>>2]=0;e=By(12)|0;f=k[f>>2]|0;k[f+204>>2]=e;k[f+216>>2]=1;b=Lt(a,b)|0}while((b|0)!=0);b=Kt(a)|0;if(b)do{c=Es(a,b)|0;if(c)do{qu(c,173717,176,1)|0;CB(c)|0;g=iB(c,k[13656]|0,1,0)|0;d=c+8|0;k[(k[d>>2]|0)+156>>2]=g;g=lB(k[((k[c>>2]&3|0)==3?c:c+32|0)+28>>2]|0,k[13650]|0,176676)|0;h=lB(k[((k[c>>2]&3|0)==2?c:c+-32|0)+28>>2]|0,k[13650]|0,176676)|0;e=k[d>>2]|0;f=e+154|0;j[f>>1]=1;j[e+168>>1]=1;if((g|0)==(h|0)&(i[g>>0]|0)!=0){j[f>>1]=1e3;h=e+156|0;k[h>>2]=(k[h>>2]|0)*100}if(ai(c)|0){h=k[d>>2]|0;j[h+154>>1]=0;k[h+156>>2]=0}h=(iB(c,k[13676]|0,0,0)|0)&255;i[(k[d>>2]|0)+152>>0]=h;h=(iB(c,k[13657]|0,1,0)|0)&65535;j[(k[d>>2]|0)+170>>1]=h;c=Gs(a,c)|0}while((c|0)!=0);b=Lt(a,b)|0}while((b|0)!=0);return}function pf(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;b=k[(k[a+8>>2]|0)+192>>2]|0;if(b)do{f=b+8|0;c=k[f>>2]|0;g=b;b=k[c+164>>2]|0;d=k[c+176>>2]|0;if((d|0)>0)do{e=d;d=d+-1|0;c=k[(k[c+172>>2]|0)+(d<<2)>>2]|0;Zf(c);vP(k[c+8>>2]|0);vP(c);c=k[f>>2]|0}while((e|0)>1);d=k[c+184>>2]|0;if((d|0)>0){e=d+-1|0;c=k[(k[c+180>>2]|0)+(e<<2)>>2]|0;Zf(c);vP(k[c+8>>2]|0);vP(c);if((d|0)>1){c=e;do{e=c;c=c+-1|0;d=k[(k[(k[f>>2]|0)+180>>2]|0)+(c<<2)>>2]|0;Zf(d);vP(k[d+8>>2]|0);vP(d)}while((e|0)>1)}c=k[f>>2]|0}if((i[c+156>>0]|0)==1){d=k[c+180>>2]|0;if(d){vP(d);c=k[f>>2]|0}d=k[c+172>>2]|0;if(d){vP(d);c=k[f>>2]|0}vP(c);vP(g)}}while((b|0)!=0);b=Kt(a)|0;if(b)do{c=Es(a,b)|0;if(c)do{XB(c);c=Gs(a,c)|0}while((c|0)!=0);sf(b);b=Lt(a,b)|0}while((b|0)!=0);tf(a);return}function qf(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0;h=r;r=r+48|0;g=h+32|0;e=h;if(Zs(a)|0){b=Nw(a,-1,8)|0;c=Mw(a,0,e)|0;Kw(a,2,8,e)|0;c=(c|0)==0;d=(b|0)<0;if(d&c)uf(a);else{if(c)k[e+16>>2]=2;else b=d?8:b;k[e+8>>2]=b;k[e+20>>2]=0;f=tw(a,g,0)|0;b=k[g>>2]|0;do if((b|0)==1)uf(a);else{c=a+8|0;if(k[(k[(k[c>>2]|0)+8>>2]|0)+84>>2]|0){uf(a);break}k[e+12>>2]=1;if((b|0)>0){b=0;do{d=k[f+(b<<2)>>2]|0;qu(d,173447,280,1)|0;m=By(96)|0;j=k[d+8>>2]|0;k[j+8>>2]=m;l=k[c>>2]|0;n=k[l+8>>2]|0;p[m>>3]=+p[n>>3];p[m+24>>3]=+p[n+24>>3];k[j+144>>2]=k[l+144>>2];i[j+115>>0]=i[l+115>>0]|0;k[j+116>>2]=k[l+116>>2];k[j+248>>2]=k[l+248>>2];k[j+252>>2]=k[l+252>>2];k[j+244>>2]=k[l+244>>2];uf(d);b=b+1|0}while((b|0)<(k[g>>2]|0))}c=By((Zs(a)|0)<<4)|0;b=Kt(a)|0;if(b)while(1){n=k[b+8>>2]|0;k[n+132>>2]=c;p[c>>3]=+p[n+16>>3]/72.0;p[c+8>>3]=+p[n+24>>3]/72.0;b=Lt(a,b)|0;if(!b)break;else c=c+16|0}Jw(k[g>>2]|0,f,a,e)|0;d=(Kt(a)|0)+8|0;d=k[(k[d>>2]|0)+132>>2]|0;b=Kt(a)|0;if(b){c=d;while(1){n=k[b+8>>2]|0;k[n+132>>2]=0;p[n+16>>3]=+p[c>>3]*72.0;p[n+24>>3]=+p[c+8>>3]*72.0;b=Lt(a,b)|0;if(!b)break;else c=c+16|0}}vP(d)}while(0);if((k[g>>2]|0)>0){b=0;do{n=f+(b<<2)|0;vP(k[(k[(k[n>>2]|0)+8>>2]|0)+8>>2]|0);_t(a,k[n>>2]|0)|0;b=b+1|0}while((b|0)<(k[g>>2]|0))}vP(f)}}tz(a);r=h;return}function rf(a){a=a|0;a=(au(a)|0)+8|0;return k[(k[a>>2]|0)+188>>2]|0}function sf(a){a=a|0;var b=0,c=0,d=0;d=a+8|0;b=k[d>>2]|0;c=k[b+172>>2]|0;if(c){vP(c);b=k[d>>2]|0}c=k[b+180>>2]|0;if(c){vP(c);b=k[d>>2]|0}c=k[b+188>>2]|0;if(c){vP(c);b=k[d>>2]|0}c=k[b+196>>2]|0;if(c){vP(c);b=k[d>>2]|0}c=k[b+204>>2]|0;if(c){vP(c);b=k[d>>2]|0}sy(k[b+104>>2]|0);sy(k[(k[d>>2]|0)+108>>2]|0);b=k[(k[d>>2]|0)+8>>2]|0;if(b)Nb[k[(k[b+4>>2]|0)+4>>2]&127](a);ru(a,173424)|0;return}function tf(a){a=a|0;var b=0,c=0,d=0,e=0;b=Iu(a)|0;if(b)do{tf(b);b=Ju(b)|0}while((b|0)!=0);e=a+8|0;b=k[e>>2]|0;c=k[b+184>>2]|0;if(c){vP(c);b=k[e>>2]|0}c=k[b+268>>2]|0;if(c){vP(c);b=k[e>>2]|0}c=k[b+216>>2]|0;if(!c)c=b;else{vP(c);c=k[e>>2]|0}b=k[c+196>>2]|0;do if(b){d=j[c+236>>1]|0;if(d<<16>>16>(j[c+238>>1]|0))c=d;else{c=d<<16>>16;vP(k[b+(c<<6)+12>>2]|0);b=k[e>>2]|0;if(d<<16>>16<(j[b+238>>1]|0))do{c=c+1|0;vP(k[(k[b+196>>2]|0)+(c<<6)+12>>2]|0);b=k[e>>2]|0}while((c|0)<(j[b+238>>1]|0));c=j[b+236>>1]|0;b=k[b+196>>2]|0}if(c<<16>>16==-1){vP(b+-64|0);break}else{vP(b);break}}while(0);if((au(a)|0)!=(a|0))ru(a,173447)|0;return}function uf(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,l=0,m=0,n=0,o=0,p=0,q=0;q=r;r=r+48|0;i=q+40|0;h=q;f=iB(a,ks(a,0,121388,0)|0,-1,1)|0;UB(a,10);b=Wh(a,h)|0;vf(a,a);of(a);c=(f|0)==1;d=h+32|0;e=(f|0)==2;f=(f|0)==3;g=h+28|0;h=h+24|0;while(1){oh(a,b);if(c){g=3;break}if(k[d>>2]|0){Yr(0,121394,i)|0;k[h>>2]=0;b=0}lg(a,(b|0)!=0&1);if(e){g=7;break}Ug(a,b);if(f){g=9;break}o=(k[g>>2]|0)+-1|0;k[g>>2]=o;if(!((k[h>>2]|0)!=0&(o|0)!=0)){g=11;break}}if((g|0)==3)wf(a,1);else if((g|0)==7)wf(a,2);else if((g|0)==9)wf(a,2);else if((g|0)==11){o=a+8|0;if((j[(k[o>>2]|0)+136>>1]&16)!=0?(p=Hu(a,122793,0)|0,(p|0)!=0):0){b=Kt(p)|0;a:do if(b){while(1){n=b;b=Lt(p,b)|0;eg(a,n);m=k[(k[n+8>>2]|0)+232>>2]|0;g=k[(k[o>>2]|0)+196>>2]|0;d=g+(m<<6)|0;c=k[d>>2]|0;g=g+(m<<6)+4|0;e=0;i=0;while(1){if((e|0)>=(c|0)){c=i;g=21;break}h=k[g>>2]|0;l=h+(e<<2)|0;i=k[l>>2]|0;f=e+1|0;if((i|0)==(n|0)){i=l;g=17;break}else e=f}if((g|0)==17){if((f|0)<(c|0)){k[i>>2]=k[h+(f<<2)>>2];f=e+2|0;e=k[(k[o>>2]|0)+196>>2]|0;d=e+(m<<6)|0;c=k[d>>2]|0;if((f|0)<(c|0))do{d=k[e+(m<<6)+4>>2]|0;k[d+(f+-1<<2)>>2]=k[d+(f<<2)>>2];f=f+1|0;e=k[(k[o>>2]|0)+196>>2]|0;d=e+(m<<6)|0;c=k[d>>2]|0}while((f|0)<(c|0))}k[d>>2]=c+-1}else if((g|0)==21?(0,(c|0)!=(n|0)):0)break;sf(n);St(a,n)|0;if(!b)break a}Wa(121485,121492,243,121502)}while(0);Lu(a,p)|0}Mh(a);yf(a);if((oB(ss(a,121519)|0)|0)<<24>>24)qi(a)}r=q;return}function vf(a,b){a=a|0;b=b|0;var c=0;if((au(a)|0)!=(a|0))qu(a,173447,280,1)|0;if((a|0)==(b|0)){c=(au(a)|0)+8|0;k[(k[c>>2]|0)+188>>2]=a}a=Iu(a)|0;if(a)do{vf(a,b);a=Ju(a)|0}while((a|0)!=0);return}function wf(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0;m=r;r=r+1040|0;l=m+8|0;j=m;i=m+16|0;e=ks(a,1,123349,176676)|0;f=ks(a,1,121528,176676)|0;c=Kt(a)|0;if(c){g=(b|0)>0;d=(b|0)>1;b=c;do{if(g?(h=b+8|0,k[j>>2]=k[(k[h>>2]|0)+232>>2],TN(i,173421,j)|0,vs(b,e,i)|0,d):0){k[l>>2]=k[(k[h>>2]|0)+236>>2];TN(i,173421,l)|0;vs(b,f,i)|0}b=Lt(a,b)|0}while((b|0)!=0)}r=m;return}function xf(a,b){a=a|0;b=b|0;var c=0;c=i[a+28>>0]|0;if(i[b+28>>0]|0)if(c<<24>>24){c=~~(+p[a>>3]-+p[b>>3]);if(!c)c=~~(+p[a+8>>3]-+p[b+8>>3])}else c=-1;else c=c<<24>>24!=0&1;return c|0}function yf(a){a=a|0;zf(a,1);return}function zf(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,n=0,o=0,q=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0.0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0.0,J=0,K=0.0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Xa=0,Ya=0,Za=0,_a=0,$a=0,ab=0,bb=0,cb=0,db=0,eb=0,fb=0,gb=0,hb=0,ib=0,jb=0,kb=0,lb=0,mb=0,nb=0,ob=0,pb=0,qb=0;qb=r;r=r+6048|0;Pa=qb+5712|0;gb=qb+5008|0;jb=qb+4312|0;eb=qb+3616|0;hb=qb+3504|0;cb=qb+3328|0;$a=qb+2632|0;fb=qb+1936|0;ib=qb+1240|0;db=qb+544|0;Qa=qb+512|0;Ra=qb+480|0;Ua=qb+448|0;Va=qb+416|0;Xa=qb+384|0;Ya=qb+352|0;ab=qb+5952|0;bb=qb+5888|0;pb=qb+6016|0;Za=a+8|0;mb=m[(k[Za>>2]|0)+136>>1]&14;Sa=ab+8|0;k[Sa>>2]=qb+176;Ta=bb+8|0;k[Ta>>2]=qb;a:do switch(mb|0){case 0:break;case 4:{Af(a);if(i[(k[Za>>2]|0)+113>>0]&1)Yr(0,121534,qb+5704|0)|0;c=Kt(a)|0;if(!c){h=0;g=0;P=307}else{do{d=Es(a,c)|0;if(d)do{Jz(a,d,4,49504);d=Gs(a,d)|0}while((d|0)!=0);c=Lt(a,c)|0}while((c|0)!=0);h=0;g=0;P=307}break}case 8:{Af(a);c=k[Za>>2]|0;if(!(i[c+113>>0]&1)){sC(a,0);h=0;g=0;P=307;break a}c=k[c+192>>2]|0;b:do if(c){e=c;c:while(1){f=e+8|0;c=k[f>>2]|0;do if((i[c+156>>0]|0)==1){d=k[c+112>>2]|0;if(!d){d=k[c+104>>2]|0;if(!d)break;Bf(e);c=d}else{d=k[(k[d+8>>2]|0)+96>>2]|0;if(!d)break c;kb=d+56|0;c=c+16|0;k[kb>>2]=k[c>>2];k[kb+4>>2]=k[c+4>>2];k[kb+8>>2]=k[c+8>>2];k[kb+12>>2]=k[c+12>>2];i[d+81>>0]=1;c=d}EB(a,c);c=k[f>>2]|0}while(0);e=k[c+164>>2]|0;if(!e)break b}Wa(121602,121621,234,121634)}while(0);sC(a,1);h=0;g=0;P=307;break}default:{mi(a);if(!(Fz()|0)){h=By(96)|0;f=k[(k[Za>>2]|0)+248>>2]|0;k[pb+8>>2]=(f|0)/4|0;_a=pb+12|0;k[_a>>2]=f;f=By(512)|0;O=pb+4|0;k[O>>2]=0;k[pb>>2]=0;c=k[Za>>2]|0;Na=j[c+236>>1]|0;o=Na<<16>>16;do if(Na<<16>>16<=(j[c+238>>1]|0)){d=0;n=0;v=f;s=0;f=0;d:while(1){q=k[c+196>>2]|0;u=k[q+(o<<6)>>2]|0;J=u+f|0;f=k[q+(o<<6)+4>>2]|0;q=k[f>>2]|0;if(q){I=+(d|0);d=k[q+8>>2]|0;K=+p[d+16>>3]-+p[d+88>>3];d=~~(I<K?I:K)}e:do if(u){f=k[f+(u+-1<<2)>>2]|0;if(f){I=+(n|0);n=k[f+8>>2]|0;K=+p[n+16>>3]+ +p[n+96>>3];n=~~(I>K?I:K)}d=d+-16|0;n=n+16|0;if((u|0)>0){w=q;q=0;while(1){x=w+8|0;c=k[x>>2]|0;f=k[c+112>>2]|0;if(f){f=f+8|0;u=k[(k[f>>2]|0)+96>>2]|0;if(!u){P=32;break d}Na=u+56|0;c=c+16|0;k[Na>>2]=k[c>>2];k[Na+4>>2]=k[c+4>>2];k[Na+8>>2]=k[c+8>>2];k[Na+12>>2]=k[c+12>>2];i[(k[(k[f>>2]|0)+96>>2]|0)+81>>0]=1;c=k[x>>2]|0}if(i[c+156>>0]|0){if((Rb[k[49508>>2]&63](w)|0)<<24>>24){c=k[x>>2]|0;P=37}}else P=37;if((P|0)==37){P=0;f=k[k[c+180>>2]>>2]|0;f:do if(!f)u=v;else{u=v;v=0;while(1){c=k[f+8>>2]|0;switch(i[c+112>>0]|0){case 6:case 4:break;default:{k[c+164>>2]=81;c=s+1|0;k[u+(s<<2)>>2]=f;if(!(c&127)){u=Ey(u,(s<<2)+516|0)|0;s=c}else s=c}}v=v+1|0;c=k[x>>2]|0;f=k[(k[c+180>>2]|0)+(v<<2)>>2]|0;if(!f)break f}}while(0);f=k[c+188>>2]|0;if((f|0)!=0?(L=k[f>>2]|0,(L|0)!=0):0){v=L;f=u;u=0;c=s;while(1){Cf(v,2,0,128);s=c+1|0;k[f+(c<<2)>>2]=v;if(!(s&127))f=Ey(f,(c<<2)+516|0)|0;u=u+1|0;c=k[x>>2]|0;v=k[(k[c+188>>2]|0)+(u<<2)>>2]|0;if(!v){u=f;break}else c=s}}f=k[c+204>>2]|0;if(f){if(!(i[c+156>>0]|0)){Ma=c+96|0;K=+p[Ma>>3];Na=c+240|0;p[Ma>>3]=+p[Na>>3];p[Na>>3]=K}c=k[f>>2]|0;if(c){f=u;v=0;while(1){Cf(c,0,0,128);u=s+1|0;k[f+(s<<2)>>2]=c;if(!(u&127))f=Ey(f,(s<<2)+516|0)|0;v=v+1|0;c=k[(k[(k[x>>2]|0)+204>>2]|0)+(v<<2)>>2]|0;if(!c){v=f;s=u;break}else s=u}}else v=u}else v=u}q=q+1|0;c=k[Za>>2]|0;f=k[c+196>>2]|0;if((q|0)>=(k[f+(o<<6)>>2]|0)){q=v;break e}w=k[(k[f+(o<<6)+4>>2]|0)+(q<<2)>>2]|0}}else q=v}else{n=n+16|0;d=d+-16|0;q=v}while(0);f=o+1|0;if((o|0)<(j[c+238>>1]|0)){v=q;o=f;f=J}else{o=J;g=q;c=s;P=57;break}}if((P|0)==32)Wa(121650,121621,319,121663);else if((P|0)==57){k[pb>>2]=d;k[O>>2]=n;N=f;Oa=c;M=(o<<5)+11520|0;break}}else{g=f;N=o;Oa=0;M=11520}while(0);dO(g,Oa,4,58);Na=By(M)|0;k[h+84>>2]=Na;Na=By(N<<5)|0;k[pb+16>>2]=Na;Na=(mb|0)==2;if(Na?(e=k[(k[Za>>2]|0)+192>>2]|0,(e|0)!=0):0)do{d=e+8|0;c=k[d>>2]|0;if((i[c+156>>0]|0)==1?(k[c+104>>2]|0)!=0:0){Bf(e);c=k[d>>2]|0}e=k[c+164>>2]|0}while((e|0)!=0);if((Oa|0)>0){T=$a+8|0;U=(mb|0)==10;V=jb+52|0;W=eb+52|0;X=h+80|0;Y=ib+52|0;Z=db+52|0;_=hb+16|0;$=hb+8|0;aa=hb+32|0;ba=hb+48|0;ca=hb+64|0;da=hb+64|0;ea=hb+72|0;fa=hb+80|0;ga=hb+96|0;ia=hb+96|0;ja=hb+104|0;ka=gb+52|0;la=jb+52|0;ma=$a+32|0;na=$a+-32|0;oa=eb+8|0;pa=hb+8|0;qa=cb+8|0;ra=eb+32|0;sa=hb+32|0;ta=hb+-32|0;ua=eb+-32|0;va=cb+32|0;wa=cb+-32|0;xa=$a+16|0;ya=$a+52|0;za=fb+52|0;Aa=h+56|0;Ba=h+69|0;Ca=h+16|0;Da=h+29|0;Ea=fb+16|0;Fa=bb+32|0;Ga=bb+-32|0;Ha=ab+32|0;Ia=ab+-32|0;Ja=cb+16|0;Ka=cb+56|0;La=cb+112|0;Ma=cb+116|0;S=0;while(1){P=g+(S<<2)|0;O=k[P>>2]|0;e=O;while(1){c=k[e+8>>2]|0;d=k[c+172>>2]|0;if(!d){d=e;break}else e=d}c=k[c+116>>2]|0;if(!c)c=d;else while(1){d=k[(k[c+8>>2]|0)+116>>2]|0;if(!d)break;else c=d}N=O+8|0;d=k[N>>2]|0;if(!(i[d+44>>0]|0)){n=(i[d+84>>0]|0)==0;f=n?c:O;d=k[f+8>>2]|0;n=n&1^1}else{f=O;n=1}e=f+8|0;if(!(k[d+164>>2]&32))d=f;else{d=k[Sa>>2]|0;GP(d|0,k[e>>2]|0,176)|0;k[ab>>2]=k[f>>2];k[ab+4>>2]=k[f+4>>2];k[ab+8>>2]=k[f+8>>2];k[ab+12>>2]=k[f+12>>2];k[ab+16>>2]=k[f+16>>2];k[ab+20>>2]=k[f+20>>2];k[ab+24>>2]=k[f+24>>2];k[ab+28>>2]=k[f+28>>2];k[Sa>>2]=d;k[((k[ab>>2]&3|0)==3?ab:Ha)+28>>2]=k[((k[f>>2]&3|0)==2?f:f+-32|0)+28>>2];k[((k[ab>>2]&3|0)==2?ab:Ia)+28>>2]=k[((k[f>>2]&3|0)==3?f:f+32|0)+28>>2];v=d+16|0;w=(k[e>>2]|0)+56|0;x=v+40|0;do{k[v>>2]=k[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));v=d+56|0;w=(k[e>>2]|0)+16|0;x=v+40|0;do{k[v>>2]=k[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));i[d+112>>0]=1;k[d+116>>2]=f;d=ab}e=S+1|0;g:do if((e|0)<(Oa|0)){M=n<<24>>24==0;L=d+8|0;J=c+8|0;d=1;while(1){u=g+(e<<2)|0;q=k[u>>2]|0;o=q;while(1){f=k[o+8>>2]|0;n=k[f+172>>2]|0;if(!n){n=o;break}else o=n}f=k[f+116>>2]|0;if(!f)f=n;else while(1){n=k[(k[f+8>>2]|0)+116>>2]|0;if(!n)break;else f=n}if((c|0)!=(f|0)){Q=d;R=e;break g}if(!(i[(k[N>>2]|0)+113>>0]|0)){s=q+8|0;f=k[s>>2]|0;if((i[f+44>>0]|0)==0?(i[f+84>>0]|0)==0:0){if(!M){Q=d;R=e;break g}f=k[J>>2]|0;o=c}else if(M){Q=d;R=e;break g}else o=q;n=o+8|0;if(k[f+164>>2]&32){f=k[Ta>>2]|0;GP(f|0,k[n>>2]|0,176)|0;k[bb>>2]=k[o>>2];k[bb+4>>2]=k[o+4>>2];k[bb+8>>2]=k[o+8>>2];k[bb+12>>2]=k[o+12>>2];k[bb+16>>2]=k[o+16>>2];k[bb+20>>2]=k[o+20>>2];k[bb+24>>2]=k[o+24>>2];k[bb+28>>2]=k[o+28>>2];k[Ta>>2]=f;k[((k[bb>>2]&3|0)==3?bb:Fa)+28>>2]=k[((k[o>>2]&3|0)==2?o:o+-32|0)+28>>2];k[((k[bb>>2]&3|0)==2?bb:Ga)+28>>2]=k[((k[o>>2]&3|0)==3?o:o+32|0)+28>>2];v=f+16|0;w=(k[n>>2]|0)+56|0;x=v+40|0;do{k[v>>2]=k[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));v=f+56|0;w=(k[n>>2]|0)+16|0;x=v+40|0;do{k[v>>2]=k[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));i[f+112>>0]=1;k[f+116>>2]=o}o=k[L>>2]|0;R=f+16|0;i[t>>0]=i[R>>0];i[t+1>>0]=i[R+1>>0];i[t+2>>0]=i[R+2>>0];i[t+3>>0]=i[R+3>>0];i[t+4>>0]=i[R+4>>0];i[t+5>>0]=i[R+5>>0];i[t+6>>0]=i[R+6>>0];i[t+7>>0]=i[R+7>>0];z=+p[t>>3];R=f+24|0;i[t>>0]=i[R>>0];i[t+1>>0]=i[R+1>>0];i[t+2>>0]=i[R+2>>0];i[t+3>>0]=i[R+3>>0];i[t+4>>0]=i[R+4>>0];i[t+5>>0]=i[R+5>>0];i[t+6>>0]=i[R+6>>0];i[t+7>>0]=i[R+7>>0];A=+p[t>>3];R=i[f+44>>0]|0;n=o+16|0;i[t>>0]=i[n>>0];i[t+1>>0]=i[n+1>>0];i[t+2>>0]=i[n+2>>0];i[t+3>>0]=i[n+3>>0];i[t+4>>0]=i[n+4>>0];i[t+5>>0]=i[n+5>>0];i[t+6>>0]=i[n+6>>0];i[t+7>>0]=i[n+7>>0];B=+p[t>>3];n=o+24|0;i[t>>0]=i[n>>0];i[t+1>>0]=i[n+1>>0];i[t+2>>0]=i[n+2>>0];i[t+3>>0]=i[n+3>>0];i[t+4>>0]=i[n+4>>0];i[t+5>>0]=i[n+5>>0];i[t+6>>0]=i[n+6>>0];i[t+7>>0]=i[n+7>>0];C=+p[t>>3];n=i[o+44>>0]|0;if(!(R<<24>>24))n=n<<24>>24!=0&1;else{if(!(n<<24>>24)){Q=d;R=e;break g}if(~~(B-z)){Q=d;R=e;break g}n=~~(C-A)}if(n){Q=d;R=e;break g}R=f+56|0;i[t>>0]=i[R>>0];i[t+1>>0]=i[R+1>>0];i[t+2>>0]=i[R+2>>0];i[t+3>>0]=i[R+3>>0];i[t+4>>0]=i[R+4>>0];i[t+5>>0]=i[R+5>>0];i[t+6>>0]=i[R+6>>0];i[t+7>>0]=i[R+7>>0];B=+p[t>>3];R=f+64|0;i[t>>0]=i[R>>0];i[t+1>>0]=i[R+1>>0];i[t+2>>0]=i[R+2>>0];i[t+3>>0]=i[R+3>>0];i[t+4>>0]=i[R+4>>0];i[t+5>>0]=i[R+5>>0];i[t+6>>0]=i[R+6>>0];i[t+7>>0]=i[R+7>>0];C=+p[t>>3];R=i[f+84>>0]|0;f=o+56|0;i[t>>0]=i[f>>0];i[t+1>>0]=i[f+1>>0];i[t+2>>0]=i[f+2>>0];i[t+3>>0]=i[f+3>>0];i[t+4>>0]=i[f+4>>0];i[t+5>>0]=i[f+5>>0];i[t+6>>0]=i[f+6>>0];i[t+7>>0]=i[f+7>>0];z=+p[t>>3];f=o+64|0;i[t>>0]=i[f>>0];i[t+1>>0]=i[f+1>>0];i[t+2>>0]=i[f+2>>0];i[t+3>>0]=i[f+3>>0];i[t+4>>0]=i[f+4>>0];i[t+5>>0]=i[f+5>>0];i[t+6>>0]=i[f+6>>0];i[t+7>>0]=i[f+7>>0];A=+p[t>>3];f=i[o+84>>0]|0;if(!(R<<24>>24))f=f<<24>>24!=0&1;else{if(!(f<<24>>24)){Q=d;R=e;break g}if(~~(z-B)){Q=d;R=e;break g}f=~~(A-C)}if(f){Q=d;R=e;break g}R=k[N>>2]|0;if((k[R+164>>2]&15|0)==2?(k[R+96>>2]|0)!=(k[(k[s>>2]|0)+96>>2]|0):0){Q=d;R=e;break g}if(k[(k[(k[u>>2]|0)+8>>2]|0)+164>>2]&64){Q=d;R=e;break g}}d=d+1|0;e=e+1|0;if((e|0)>=(Oa|0)){Q=d;R=e;break}}}else{Q=1;R=e}while(0);c=k[O>>2]&3;N=k[((c|0)==3?O:O+32|0)+28>>2]|0;c=k[((c|0)==2?O:O+-32|0)+28>>2]|0;d=k[N+8>>2]|0;f=k[d+232>>2]|0;do if((N|0)==(c|0)){e=k[Za>>2]|0;do if((f|0)==(j[e+238>>1]|0))if((f|0)>0){c=~~(+p[(k[(k[k[(k[e+196>>2]|0)+(f+-1<<6)+4>>2]>>2]|0)+8>>2]|0)+24>>3]-+p[d+24>>3]);break}else{c=~~+p[d+80>>3];break}else{z=+p[d+24>>3];c=k[e+196>>2]|0;if((f|0)==(j[e+236>>1]|0)){c=~~(z-+p[(k[(k[k[c+(f+1<<6)+4>>2]>>2]|0)+8>>2]|0)+24>>3]);break}else{P=~~(+p[(k[(k[k[c+(f+-1<<6)+4>>2]>>2]|0)+8>>2]|0)+24>>3]-z);c=~~(z-+p[(k[(k[k[c+(f+1<<6)+4>>2]>>2]|0)+8>>2]|0)+24>>3]);c=(P|0)<(c|0)?P:c;break}}while(0);JA(h,g,S,Q,+(k[_a>>2]|0),+((c|0)/2|0|0),49504);if((Q|0)>0){d=0;do{c=k[(k[(k[g+(d+S<<2)>>2]|0)+8>>2]|0)+96>>2]|0;if(c)EB(a,c);d=d+1|0}while((d|0)!=(Q|0))}}else{if((f|0)==(k[(k[c+8>>2]|0)+232>>2]|0)){k[T>>2]=cb;d=k[P>>2]|0;e=d+8|0;c=k[e>>2]|0;f=i[c+113>>0]|0;if(!(k[c+164>>2]&32))s=d;else{GP(cb|0,c|0,176)|0;k[$a>>2]=k[d>>2];k[$a+4>>2]=k[d+4>>2];k[$a+8>>2]=k[d+8>>2];k[$a+12>>2]=k[d+12>>2];k[$a+16>>2]=k[d+16>>2];k[$a+20>>2]=k[d+20>>2];k[$a+24>>2]=k[d+24>>2];k[$a+28>>2]=k[d+28>>2];k[T>>2]=cb;k[((k[$a>>2]&3|0)==3?$a:ma)+28>>2]=k[((k[d>>2]&3|0)==2?d:d+-32|0)+28>>2];k[((k[$a>>2]&3|0)==2?$a:na)+28>>2]=k[((k[d>>2]&3|0)==3?d:d+32|0)+28>>2];v=Ja;w=(k[e>>2]|0)+56|0;x=v+40|0;do{k[v>>2]=k[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));v=Ka;w=(k[e>>2]|0)+16|0;x=v+40|0;do{k[v>>2]=k[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));i[La>>0]=1;k[Ma>>2]=d;s=$a}h:do if((Q|0)>1){c=1;while(1){if(i[(k[(k[g+(c+S<<2)>>2]|0)+8>>2]|0)+113>>0]|0){P=124;break h}c=c+1|0;if((c|0)>=(Q|0)){P=123;break}}}else P=123;while(0);i:do if((P|0)==123){P=0;if(!(f<<24>>24)){f=s+8|0;c=k[f>>2]|0;e=k[c+96>>2]|0;if(e){o=k[s>>2]&3;n=k[((o|0)==3?s:s+32|0)+28>>2]|0;q=s+-32|0;o=k[((o|0)==2?s:q)+28>>2]|0;c=k[c+172>>2]|0;while(1){d=k[(k[c+8>>2]|0)+172>>2]|0;if(!d)break;else c=d}d=e+56|0;e=(k[((k[c>>2]&3|0)==3?c:c+32|0)+28>>2]|0)+8|0;c=(k[e>>2]|0)+16|0;k[d>>2]=k[c>>2];k[d+4>>2]=k[c+4>>2];k[d+8>>2]=k[c+8>>2];k[d+12>>2]=k[c+12>>2];c=k[f>>2]|0;d=k[c+96>>2]|0;i[d+81>>0]=1;if(!Na){O=k[e>>2]|0;H=+p[O+16>>3];F=H-+p[O+88>>3];H=H+ +p[O+96>>3];I=+p[O+24>>3];G=I+ +p[O+80>>3]*.5;O=k[n+8>>2]|0;S=k[O+232>>2]|0;Q=k[(k[Za>>2]|0)+196>>2]|0;S=~~(+(~~(I-+p[Q+(S<<6)+16>>3]-+p[O+24>>3]+ +p[Q+(S<<6)+24>>3])|0)/6.0);I=G-((S|0)<5?5.0:+(S|0));Ff(a,pb,h,n,s,gb,1);Ff(a,pb,h,o,s,jb,0);S=k[ka>>2]|0;Q=S+-1|0;K=+p[gb+56+(Q<<5)>>3];p[138]=K;p[139]=+p[gb+56+(Q<<5)+24>>3];p[140]=F;p[141]=I;p[142]=K;p[143]=I;Q=(k[la>>2]|0)+-1|0;K=+p[jb+56+(Q<<5)+16>>3];p[144]=K;p[145]=G;p[146]=H;p[149]=I;p[147]=+p[jb+56+(Q<<5)+24>>3];p[148]=K;if((S|0)>0){c=0;do{S=gb+56+(c<<5)|0;k[Pa>>2]=k[S>>2];k[Pa+4>>2]=k[S+4>>2];k[Pa+8>>2]=k[S+8>>2];k[Pa+12>>2]=k[S+12>>2];k[Pa+16>>2]=k[S+16>>2];k[Pa+20>>2]=k[S+20>>2];k[Pa+24>>2]=k[S+24>>2];k[Pa+28>>2]=k[S+28>>2];FA(h,Pa);c=c+1|0}while((c|0)<(k[ka>>2]|0))};k[Pa>>2]=k[276];k[Pa+4>>2]=k[277];k[Pa+8>>2]=k[278];k[Pa+12>>2]=k[279];k[Pa+16>>2]=k[280];k[Pa+20>>2]=k[281];k[Pa+24>>2]=k[282];k[Pa+28>>2]=k[283];FA(h,Pa);k[Pa>>2]=k[284];k[Pa+4>>2]=k[285];k[Pa+8>>2]=k[286];k[Pa+12>>2]=k[287];k[Pa+16>>2]=k[288];k[Pa+20>>2]=k[289];k[Pa+24>>2]=k[290];k[Pa+28>>2]=k[291];FA(h,Pa);k[Pa>>2]=k[292];k[Pa+4>>2]=k[293];k[Pa+8>>2]=k[294];k[Pa+12>>2]=k[295];k[Pa+16>>2]=k[296];k[Pa+20>>2]=k[297];k[Pa+24>>2]=k[298];k[Pa+28>>2]=k[299];FA(h,Pa);c=k[la>>2]|0;if((c|0)>0)do{S=c;c=c+-1|0;Q=jb+56+(c<<5)|0;k[Pa>>2]=k[Q>>2];k[Pa+4>>2]=k[Q+4>>2];k[Pa+8>>2]=k[Q+8>>2];k[Pa+12>>2]=k[Q+12>>2];k[Pa+16>>2]=k[Q+16>>2];k[Pa+20>>2]=k[Q+20>>2];k[Pa+24>>2]=k[Q+24>>2];k[Pa+28>>2]=k[Q+28>>2];FA(h,Pa)}while((S|0)>1);if(U)d=Hz(h,eb)|0;else d=Iz(h,eb)|0;c=k[eb>>2]|0;if(c)P=138}else{P=k[n+8>>2]|0;S=c+16|0;i[t>>0]=i[S>>0];i[t+1>>0]=i[S+1>>0];i[t+2>>0]=i[S+2>>0];i[t+3>>0]=i[S+3>>0];i[t+4>>0]=i[S+4>>0];i[t+5>>0]=i[S+5>>0];i[t+6>>0]=i[S+6>>0];i[t+7>>0]=i[S+7>>0];C=+p[t>>3];S=c+24|0;i[t>>0]=i[S>>0];i[t+1>>0]=i[S+1>>0];i[t+2>>0]=i[S+2>>0];i[t+3>>0]=i[S+3>>0];i[t+4>>0]=i[S+4>>0];i[t+5>>0]=i[S+5>>0];i[t+6>>0]=i[S+6>>0];i[t+7>>0]=i[S+7>>0];E=+p[t>>3];S=P+16|0;i[t>>0]=i[S>>0];i[t+1>>0]=i[S+1>>0];i[t+2>>0]=i[S+2>>0];i[t+3>>0]=i[S+3>>0];i[t+4>>0]=i[S+4>>0];i[t+5>>0]=i[S+5>>0];i[t+6>>0]=i[S+6>>0];i[t+7>>0]=i[S+7>>0];D=+p[t>>3];P=P+24|0;i[t>>0]=i[P>>0];i[t+1>>0]=i[P+1>>0];i[t+2>>0]=i[P+2>>0];i[t+3>>0]=i[P+3>>0];i[t+4>>0]=i[P+4>>0];i[t+5>>0]=i[P+5>>0];i[t+6>>0]=i[P+6>>0];i[t+7>>0]=i[P+7>>0];E=E+ +p[t>>3];P=k[o+8>>2]|0;S=c+56|0;i[t>>0]=i[S>>0];i[t+1>>0]=i[S+1>>0];i[t+2>>0]=i[S+2>>0];i[t+3>>0]=i[S+3>>0];i[t+4>>0]=i[S+4>>0];i[t+5>>0]=i[S+5>>0];i[t+6>>0]=i[S+6>>0];i[t+7>>0]=i[S+7>>0];H=+p[t>>3];c=c+64|0;i[t>>0]=i[c>>0];i[t+1>>0]=i[c+1>>0];i[t+2>>0]=i[c+2>>0];i[t+3>>0]=i[c+3>>0];i[t+4>>0]=i[c+4>>0];i[t+5>>0]=i[c+5>>0];i[t+6>>0]=i[c+6>>0];i[t+7>>0]=i[c+7>>0];K=+p[t>>3];c=P+16|0;i[t>>0]=i[c>>0];i[t+1>>0]=i[c+1>>0];i[t+2>>0]=i[c+2>>0];i[t+3>>0]=i[c+3>>0];i[t+4>>0]=i[c+4>>0];i[t+5>>0]=i[c+5>>0];i[t+6>>0]=i[c+6>>0];i[t+7>>0]=i[c+7>>0];I=+p[t>>3];c=P+24|0;i[t>>0]=i[c>>0];i[t+1>>0]=i[c+1>>0];i[t+2>>0]=i[c+2>>0];i[t+3>>0]=i[c+3>>0];i[t+4>>0]=i[c+4>>0];i[t+5>>0]=i[c+5>>0];i[t+6>>0]=i[c+6>>0];i[t+7>>0]=i[c+7>>0];K=K+ +p[t>>3];F=+p[d+56>>3];G=+p[d+64>>3]-+p[d+32>>3]*.5;p[hb>>3]=C+D;p[$>>3]=E;k[_>>2]=k[hb>>2];k[_+4>>2]=k[hb+4>>2];k[_+8>>2]=k[hb+8>>2];k[_+12>>2]=k[hb+12>>2];p[da>>3]=F;p[ea>>3]=G;k[ba>>2]=k[ca>>2];k[ba+4>>2]=k[ca+4>>2];k[ba+8>>2]=k[ca+8>>2];k[ba+12>>2]=k[ca+12>>2];k[aa>>2]=k[ca>>2];k[aa+4>>2]=k[ca+4>>2];k[aa+8>>2]=k[ca+8>>2];k[aa+12>>2]=k[ca+12>>2];p[ia>>3]=H+I;p[ja>>3]=K;k[fa>>2]=k[ga>>2];k[fa+4>>2]=k[ga+4>>2];k[fa+8>>2]=k[ga+8>>2];k[fa+12>>2]=k[ga+12>>2];k[eb>>2]=7;c=7;d=hb;P=138}if((P|0)==138){P=0;EA(s,k[((k[s>>2]&3|0)==2?s:q)+28>>2]|0,d,c,49504)}break}if(Na){O=k[s>>2]&3;Gf(k[((O|0)==3?s:s+32|0)+28>>2]|0,k[((O|0)==2?s:s+-32|0)+28>>2]|0,g,S,Q,2);break}d=i[c+49>>0]|0;c=i[c+89>>0]|0;do if(!(d<<24>>24==1&c<<24>>24!=4)){if(d<<24>>24!=4&c<<24>>24==1)break;n=k[s>>2]&3;f=k[((n|0)==3?s:s+32|0)+28>>2]|0;n=k[((n|0)==2?s:s+-32|0)+28>>2]|0;c=k[f+8>>2]|0;d=k[c+232>>2]|0;e=k[Za>>2]|0;if((d|0)>0){O=k[e+196>>2]|0;N=((l[e+113>>0]|-2)^1)+d|0;z=+p[(k[(k[k[O+(N<<6)+4>>2]>>2]|0)+8>>2]|0)+24>>3]-+p[O+(N<<6)+16>>3]-+p[c+24>>3]-+p[O+(d<<6)+24>>3]}else z=+(k[e+252>>2]|0);K=+(Q+1|0);A=+(k[_a>>2]|0)/K;z=z/K;Ff(a,pb,h,f,s,ib,1);Ff(a,pb,h,n,s,db,0);if((Q|0)>0)f=0;else break i;while(1){e=k[g+(f+S<<2)>>2]|0;O=k[Y>>2]|0;N=O+-1|0;F=+p[ib+56+(N<<5)>>3];G=+p[ib+56+(N<<5)+16>>3];K=+p[ib+56+(N<<5)+24>>3];p[138]=F;p[139]=K;f=f+1|0;H=+(f|0);I=A*H;p[140]=I+G;K=z*H+K;p[141]=K;p[142]=F;p[143]=K;N=(k[Z>>2]|0)+-1|0;F=+p[db+56+(N<<5)+16>>3];p[144]=F;p[145]=z+K;H=+p[db+56+(N<<5)>>3];G=+p[db+56+(N<<5)+24>>3];p[148]=F;p[147]=G;p[146]=H-I;p[149]=K;if((O|0)>0){c=0;do{O=ib+56+(c<<5)|0;k[Pa>>2]=k[O>>2];k[Pa+4>>2]=k[O+4>>2];k[Pa+8>>2]=k[O+8>>2];k[Pa+12>>2]=k[O+12>>2];k[Pa+16>>2]=k[O+16>>2];k[Pa+20>>2]=k[O+20>>2];k[Pa+24>>2]=k[O+24>>2];k[Pa+28>>2]=k[O+28>>2];FA(h,Pa);c=c+1|0}while((c|0)<(k[Y>>2]|0))};k[Pa>>2]=k[276];k[Pa+4>>2]=k[277];k[Pa+8>>2]=k[278];k[Pa+12>>2]=k[279];k[Pa+16>>2]=k[280];k[Pa+20>>2]=k[281];k[Pa+24>>2]=k[282];k[Pa+28>>2]=k[283];FA(h,Pa);k[Pa>>2]=k[284];k[Pa+4>>2]=k[285];k[Pa+8>>2]=k[286];k[Pa+12>>2]=k[287];k[Pa+16>>2]=k[288];k[Pa+20>>2]=k[289];k[Pa+24>>2]=k[290];k[Pa+28>>2]=k[291];FA(h,Pa);k[Pa>>2]=k[292];k[Pa+4>>2]=k[293];k[Pa+8>>2]=k[294];k[Pa+12>>2]=k[295];k[Pa+16>>2]=k[296];k[Pa+20>>2]=k[297];k[Pa+24>>2]=k[298];k[Pa+28>>2]=k[299];FA(h,Pa);c=k[Z>>2]|0;if((c|0)>0)do{O=c;c=c+-1|0;N=db+56+(c<<5)|0;k[Pa>>2]=k[N>>2];k[Pa+4>>2]=k[N+4>>2];k[Pa+8>>2]=k[N+8>>2];k[Pa+12>>2]=k[N+12>>2];k[Pa+16>>2]=k[N+16>>2];k[Pa+20>>2]=k[N+20>>2];k[Pa+24>>2]=k[N+24>>2];k[Pa+28>>2]=k[N+28>>2];FA(h,Pa)}while((O|0)>1);if(U)d=Hz(h,fb)|0;else d=Iz(h,fb)|0;c=k[fb>>2]|0;if(!c)break i;EA(e,k[((k[e>>2]&3|0)==2?e:e+-32|0)+28>>2]|0,d,c,49504);k[X>>2]=0;if((f|0)>=(Q|0))break i}}while(0);n=k[s>>2]&3;f=k[((n|0)==3?s:s+32|0)+28>>2]|0;n=k[((n|0)==2?s:s+-32|0)+28>>2]|0;c=k[f+8>>2]|0;d=k[c+232>>2]|0;e=k[Za>>2]|0;if((d|0)<(j[e+238>>1]|0)){N=k[e+196>>2]|0;O=d+1|0;z=+p[c+24>>3]-+p[N+(d<<6)+32>>3]-(+p[(k[(k[k[N+(O<<6)+4>>2]>>2]|0)+8>>2]|0)+24>>3]+ +p[N+(O<<6)+40>>3])}else z=+(k[e+252>>2]|0);K=+(Q+1|0);A=+(k[_a>>2]|0)/K;z=z/K;Hf(a,pb,h,f,s,jb,1);Hf(a,pb,h,n,s,eb,0);j:do if((Q|0)>0){f=0;do{e=k[g+(f+S<<2)>>2]|0;O=k[V>>2]|0;N=O+-1|0;F=+p[jb+56+(N<<5)>>3];H=+p[jb+56+(N<<5)+8>>3];G=+p[jb+56+(N<<5)+16>>3];p[138]=F;p[141]=H;f=f+1|0;K=+(f|0);I=A*K;p[140]=I+G;K=H-z*K;p[139]=K;p[142]=F;p[145]=K;N=(k[W>>2]|0)+-1|0;F=+p[eb+56+(N<<5)+16>>3];p[144]=F;p[143]=K-z;H=+p[eb+56+(N<<5)>>3];G=+p[eb+56+(N<<5)+8>>3];p[148]=F;p[149]=G;p[146]=H-I;p[147]=K;if((O|0)>0){c=0;do{O=jb+56+(c<<5)|0;k[Pa>>2]=k[O>>2];k[Pa+4>>2]=k[O+4>>2];k[Pa+8>>2]=k[O+8>>2];k[Pa+12>>2]=k[O+12>>2];k[Pa+16>>2]=k[O+16>>2];k[Pa+20>>2]=k[O+20>>2];k[Pa+24>>2]=k[O+24>>2];k[Pa+28>>2]=k[O+28>>2];FA(h,Pa);c=c+1|0}while((c|0)<(k[V>>2]|0))};k[Pa>>2]=k[276];k[Pa+4>>2]=k[277];k[Pa+8>>2]=k[278];k[Pa+12>>2]=k[279];k[Pa+16>>2]=k[280];k[Pa+20>>2]=k[281];k[Pa+24>>2]=k[282];k[Pa+28>>2]=k[283];FA(h,Pa);k[Pa>>2]=k[284];k[Pa+4>>2]=k[285];k[Pa+8>>2]=k[286];k[Pa+12>>2]=k[287];k[Pa+16>>2]=k[288];k[Pa+20>>2]=k[289];k[Pa+24>>2]=k[290];k[Pa+28>>2]=k[291];FA(h,Pa);k[Pa>>2]=k[292];k[Pa+4>>2]=k[293];k[Pa+8>>2]=k[294];k[Pa+12>>2]=k[295];k[Pa+16>>2]=k[296];k[Pa+20>>2]=k[297];k[Pa+24>>2]=k[298];k[Pa+28>>2]=k[299];FA(h,Pa);c=k[W>>2]|0;if((c|0)>0)do{O=c;c=c+-1|0;N=eb+56+(c<<5)|0;k[Pa>>2]=k[N>>2];k[Pa+4>>2]=k[N+4>>2];k[Pa+8>>2]=k[N+8>>2];k[Pa+12>>2]=k[N+12>>2];k[Pa+16>>2]=k[N+16>>2];k[Pa+20>>2]=k[N+20>>2];k[Pa+24>>2]=k[N+24>>2];k[Pa+28>>2]=k[N+28>>2];FA(h,Pa)}while((O|0)>1);if(U)d=Hz(h,gb)|0;else d=Iz(h,gb)|0;c=k[gb>>2]|0;if(!c)break j;EA(e,k[((k[e>>2]&3|0)==2?e:e+-32|0)+28>>2]|0,d,c,49504);k[X>>2]=0}while((f|0)<(Q|0))}while(0)}else P=124}while(0);if((P|0)==124)Ef(a,g,S,Q,s,mb);break}k[oa>>2]=Pa;k[pa>>2]=gb;k[qa>>2]=jb;if(!(k[12379]|0)){O=Cy(32e3)|0;k[12379]=O;O=Cy(32e3)|0;k[12380]=O;k[12381]=2e3;k[12382]=2e3}n=k[P>>2]|0;P=k[n>>2]&3;d=n+32|0;e=n+-32|0;P=(k[(k[(k[((P|0)==3?n:d)+28>>2]|0)+8>>2]|0)+232>>2]|0)-(k[(k[(k[((P|0)==2?n:e)+28>>2]|0)+8>>2]|0)+232>>2]|0)|0;f=n+8|0;if((((P|0)>-1?P:0-P|0)|0)<=1){c=k[f>>2]|0;if(!(k[c+164>>2]&32)){N=n;M=0}else{v=k[oa>>2]|0;GP(v|0,c|0,176)|0;k[eb>>2]=k[n>>2];k[eb+4>>2]=k[n+4>>2];k[eb+8>>2]=k[n+8>>2];k[eb+12>>2]=k[n+12>>2];k[eb+16>>2]=k[n+16>>2];k[eb+20>>2]=k[n+20>>2];k[eb+24>>2]=k[n+24>>2];k[eb+28>>2]=k[n+28>>2];k[oa>>2]=v;k[((k[eb>>2]&3|0)==3?eb:ra)+28>>2]=k[((k[n>>2]&3|0)==2?n:e)+28>>2];k[((k[eb>>2]&3|0)==2?eb:ua)+28>>2]=k[((k[n>>2]&3|0)==3?n:d)+28>>2];v=v+16|0;w=(k[f>>2]|0)+56|0;x=v+40|0;do{k[v>>2]=k[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));v=(k[oa>>2]|0)+56|0;w=(k[f>>2]|0)+16|0;x=v+40|0;do{k[v>>2]=k[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));N=k[oa>>2]|0;i[N+112>>0]=1;k[N+116>>2]=n;N=eb;M=0}}else{GP(Pa|0,k[f>>2]|0,176)|0;k[eb>>2]=k[n>>2];k[eb+4>>2]=k[n+4>>2];k[eb+8>>2]=k[n+8>>2];k[eb+12>>2]=k[n+12>>2];k[eb+16>>2]=k[n+16>>2];k[eb+20>>2]=k[n+20>>2];k[eb+24>>2]=k[n+24>>2];k[eb+28>>2]=k[n+28>>2];k[oa>>2]=Pa;c=k[f>>2]|0;if(!(k[c+164>>2]&32)){GP(gb|0,c|0,176)|0;k[hb>>2]=k[n>>2];k[hb+4>>2]=k[n+4>>2];k[hb+8>>2]=k[n+8>>2];k[hb+12>>2]=k[n+12>>2];k[hb+16>>2]=k[n+16>>2];k[hb+20>>2]=k[n+20>>2];k[hb+24>>2]=k[n+24>>2];k[hb+28>>2]=k[n+28>>2];k[pa>>2]=gb;k[((k[eb>>2]&3|0)==3?eb:ra)+28>>2]=k[((k[n>>2]&3|0)==3?n:d)+28>>2];e=n}else{v=k[pa>>2]|0;GP(v|0,c|0,176)|0;k[hb>>2]=k[n>>2];k[hb+4>>2]=k[n+4>>2];k[hb+8>>2]=k[n+8>>2];k[hb+12>>2]=k[n+12>>2];k[hb+16>>2]=k[n+16>>2];k[hb+20>>2]=k[n+20>>2];k[hb+24>>2]=k[n+24>>2];k[hb+28>>2]=k[n+28>>2];k[pa>>2]=v;k[((k[hb>>2]&3|0)==3?hb:sa)+28>>2]=k[((k[n>>2]&3|0)==2?n:e)+28>>2];k[((k[hb>>2]&3|0)==2?hb:ta)+28>>2]=k[((k[n>>2]&3|0)==3?n:d)+28>>2];v=v+16|0;w=(k[f>>2]|0)+56|0;x=v+40|0;do{k[v>>2]=k[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));v=(k[pa>>2]|0)+56|0;w=(k[f>>2]|0)+16|0;x=v+40|0;do{k[v>>2]=k[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));v=k[pa>>2]|0;i[v+112>>0]=1;k[v+116>>2]=n;k[((k[eb>>2]&3|0)==3?eb:ra)+28>>2]=k[((k[n>>2]&3|0)==2?n:e)+28>>2];v=(k[oa>>2]|0)+16|0;w=(k[f>>2]|0)+56|0;x=v+40|0;do{k[v>>2]=k[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));e=n}while(1){c=k[e+8>>2]|0;d=k[c+172>>2]|0;if(!d){d=e;break}else e=d}c=k[c+116>>2]|0;if(!c)c=d;else while(1){d=k[(k[c+8>>2]|0)+116>>2]|0;if(!d)break;else c=d}while(1){d=k[(k[c+8>>2]|0)+172>>2]|0;if(!d)break;else c=d}k[((k[eb>>2]&3|0)==2?eb:ua)+28>>2]=k[((k[c>>2]&3|0)==2?c:c+-32|0)+28>>2];N=k[oa>>2]|0;i[N+84>>0]=0;i[N+112>>0]=1;M=N+56|0;k[M>>2]=0;k[M+4>>2]=0;k[M+8>>2]=0;k[M+12>>2]=0;k[N+116>>2]=n;N=eb;M=1}k:do if(Na){q=k[12379]|0;d=N+8|0;c=k[d>>2]|0;if(!(i[c+112>>0]|0))e=N;else do{e=k[c+116>>2]|0;d=e+8|0;c=k[d>>2]|0}while((i[c+112>>0]|0)!=0);n=k[e>>2]&3;o=k[((n|0)==2?e:e+-32|0)+28>>2]|0;n=k[((n|0)==3?e:e+32|0)+28>>2]|0;f=k[o+8>>2]|0;e=k[n+8>>2]|0;P=(k[f+232>>2]|0)-(k[e+232>>2]|0)|0;switch(((P|0)>-1?P:0-P|0)|0){case 1:{P=200;break k}case 2:{if(i[(k[Za>>2]|0)+113>>0]&1){P=200;break k}break}default:{}}P=(k[((k[N>>2]&3|0)==3?N:N+32|0)+28>>2]|0)==(n|0);O=c+16|0;i[t>>0]=i[O>>0];i[t+1>>0]=i[O+1>>0];i[t+2>>0]=i[O+2>>0];i[t+3>>0]=i[O+3>>0];i[t+4>>0]=i[O+4>>0];i[t+5>>0]=i[O+5>>0];i[t+6>>0]=i[O+6>>0];i[t+7>>0]=i[O+7>>0];F=+p[t>>3];O=c+24|0;i[t>>0]=i[O>>0];i[t+1>>0]=i[O+1>>0];i[t+2>>0]=i[O+2>>0];i[t+3>>0]=i[O+3>>0];i[t+4>>0]=i[O+4>>0];i[t+5>>0]=i[O+5>>0];i[t+6>>0]=i[O+6>>0];i[t+7>>0]=i[O+7>>0];C=+p[t>>3];O=e+16|0;i[t>>0]=i[O>>0];i[t+1>>0]=i[O+1>>0];i[t+2>>0]=i[O+2>>0];i[t+3>>0]=i[O+3>>0];i[t+4>>0]=i[O+4>>0];i[t+5>>0]=i[O+5>>0];i[t+6>>0]=i[O+6>>0];i[t+7>>0]=i[O+7>>0];G=+p[t>>3];O=e+24|0;i[t>>0]=i[O>>0];i[t+1>>0]=i[O+1>>0];i[t+2>>0]=i[O+2>>0];i[t+3>>0]=i[O+3>>0];i[t+4>>0]=i[O+4>>0];i[t+5>>0]=i[O+5>>0];i[t+6>>0]=i[O+6>>0];i[t+7>>0]=i[O+7>>0];A=+p[t>>3];O=c+56|0;i[t>>0]=i[O>>0];i[t+1>>0]=i[O+1>>0];i[t+2>>0]=i[O+2>>0];i[t+3>>0]=i[O+3>>0];i[t+4>>0]=i[O+4>>0];i[t+5>>0]=i[O+5>>0];i[t+6>>0]=i[O+6>>0];i[t+7>>0]=i[O+7>>0];D=+p[t>>3];O=c+64|0;i[t>>0]=i[O>>0];i[t+1>>0]=i[O+1>>0];i[t+2>>0]=i[O+2>>0];i[t+3>>0]=i[O+3>>0];i[t+4>>0]=i[O+4>>0];i[t+5>>0]=i[O+5>>0];i[t+6>>0]=i[O+6>>0];i[t+7>>0]=i[O+7>>0];B=+p[t>>3];O=f+16|0;i[t>>0]=i[O>>0];i[t+1>>0]=i[O+1>>0];i[t+2>>0]=i[O+2>>0];i[t+3>>0]=i[O+3>>0];i[t+4>>0]=i[O+4>>0];i[t+5>>0]=i[O+5>>0];i[t+6>>0]=i[O+6>>0];i[t+7>>0]=i[O+7>>0];E=+p[t>>3];O=f+24|0;i[t>>0]=i[O>>0];i[t+1>>0]=i[O+1>>0];i[t+2>>0]=i[O+2>>0];i[t+3>>0]=i[O+3>>0];i[t+4>>0]=i[O+4>>0];i[t+5>>0]=i[O+5>>0];i[t+6>>0]=i[O+6>>0];i[t+7>>0]=i[O+7>>0];z=+p[t>>3];if(P){n=o;K=B+z;H=C+A;I=F+G;D=D+E}else{K=C+A;H=B+z;I=D+E;D=F+G}c=k[c+96>>2]|0;if(!c){d=q+16|0;p[q>>3]=I;p[q+8>>3]=H;k[d>>2]=k[q>>2];k[d+4>>2]=k[q+4>>2];k[d+8>>2]=k[q+8>>2];k[d+12>>2]=k[q+12>>2];d=q+48|0;P=q+32|0;p[q+32>>3]=D;p[q+40>>3]=K;k[d>>2]=k[P>>2];k[d+4>>2]=k[P+4>>2];k[d+8>>2]=k[P+8>>2];k[d+12>>2]=k[P+12>>2];d=4;P=264;break}G=+p[c+24>>3];A=+p[c+32>>3];P=($t(o)|0)+8|0;P=(k[(k[P>>2]|0)+116>>2]&1|0)==0;C=P?A:G;O=k[(k[d>>2]|0)+96>>2]|0;z=+p[O+56>>3];B=+p[O+64>>3];A=(P?G:A)*.5;if((~~((K-H)*(z-I)-(D-I)*(B-H))|0)>0){A=z+A;z=B-C*.5}else{A=z-A;z=B+C*.5}d=q+16|0;p[q>>3]=I;p[q+8>>3]=H;k[d>>2]=k[q>>2];k[d+4>>2]=k[q+4>>2];k[d+8>>2]=k[q+8>>2];k[d+12>>2]=k[q+12>>2];d=q+32|0;O=q+48|0;P=q+64|0;p[q+64>>3]=A;p[q+72>>3]=z;k[O>>2]=k[P>>2];k[O+4>>2]=k[P+4>>2];k[O+8>>2]=k[P+8>>2];k[O+12>>2]=k[P+12>>2];k[d>>2]=k[P>>2];k[d+4>>2]=k[P+4>>2];k[d+8>>2]=k[P+8>>2];k[d+12>>2]=k[P+12>>2];d=q+80|0;P=q+96|0;p[q+96>>3]=D;p[q+104>>3]=K;k[d>>2]=k[P>>2];k[d+4>>2]=k[P+4>>2];k[d+8>>2]=k[P+8>>2];k[d+12>>2]=k[P+12>>2];d=7;P=264}else P=200;while(0);l:do if((P|0)==200){P=0;f=k[N>>2]&3;q=k[((f|0)==3?N:N+32|0)+28>>2]|0;f=k[((f|0)==2?N:N+-32|0)+28>>2]|0;If(db,a,pb,q,0,N);k[$a>>2]=k[db>>2];k[$a+4>>2]=k[db+4>>2];k[$a+8>>2]=k[db+8>>2];k[$a+12>>2]=k[db+12>>2];k[$a+16>>2]=k[db+16>>2];k[$a+20>>2]=k[db+20>>2];k[$a+24>>2]=k[db+24>>2];k[$a+28>>2]=k[db+28>>2];B=+p[$a>>3];C=+p[xa>>3];d=q+8|0;c=k[d>>2]|0;do if((i[c+156>>0]|0)==1){if((k[c+176>>2]|0)>1){c=1;break}c=(k[c+184>>2]|0)>1&1}else c=0;while(0);GA(h,N,1,$a,c);c=k[ya>>2]|0;A=+p[$a+56+(c+-1<<5)+8>>3];O=k[d>>2]|0;z=+p[O+24>>3]-+p[(k[(k[Za>>2]|0)+196>>2]|0)+(k[O+232>>2]<<6)+16>>3];if(B<C&z<A){k[ya>>2]=c+1;p[$a+56+(c<<5)>>3]=B;p[$a+56+(c<<5)+8>>3]=z;p[$a+56+(c<<5)+16>>3]=C;p[$a+56+(c<<5)+24>>3]=A}e=f;c=e+8|0;m:do if((i[(k[c>>2]|0)+156>>0]|0)==1){d=0;L=N;n=-1;o=0;while(1){J=f;x=0;s=L;v=n;f=0;while(1){if((Rb[k[49508>>2]&63](e)|0)<<24>>24){f=J;n=x;w=L;c=q;break m}w=x|1;O=1104+(x<<5)|0;Jf(Qa,pb,a,k[(k[q+8>>2]|0)+232>>2]|0);k[O>>2]=k[Qa>>2];k[O+4>>2]=k[Qa+4>>2];k[O+8>>2]=k[Qa+8>>2];k[O+12>>2]=k[Qa+12>>2];k[O+16>>2]=k[Qa+16>>2];k[O+20>>2]=k[Qa+20>>2];k[O+24>>2]=k[Qa+24>>2];k[O+28>>2]=k[Qa+28>>2];if(!f){f=k[c>>2]|0;n=k[k[f+180>>2]>>2]|0;n=k[(k[((k[n>>2]&3|0)==2?n:n+-32|0)+28>>2]|0)+8>>2]|0;n:do if((i[n+156>>0]|0)==1){o=f+16|0;f=0;do{if((k[n+184>>2]|0)!=1)break n;if((k[n+176>>2]|0)!=1)break n;if(+p[n+16>>3]!=+p[o>>3])break n;f=f+1|0;O=k[k[n+180>>2]>>2]|0;n=k[(k[((k[O>>2]&3|0)==2?O:O+-32|0)+28>>2]|0)+8>>2]|0}while((i[n+156>>0]|0)==1)}else f=0;while(0);u=(f|0)<(((i[(k[Za>>2]|0)+113>>0]&1)<<1)+3|0);v=u?v:1;o=u?f:f+-2|0;u=u&1^1}else u=f;if(!((u|0)==0|(v|0)>0)){f=J;n=w;w=o;break}n=x+2|0;f=1104+(w<<5)|0;If(Ra,a,pb,e,s,k[k[(k[c>>2]|0)+180>>2]>>2]|0);k[f>>2]=k[Ra>>2];k[f+4>>2]=k[Ra+4>>2];k[f+8>>2]=k[Ra+8>>2];k[f+12>>2]=k[Ra+12>>2];k[f+16>>2]=k[Ra+16>>2];k[f+20>>2]=k[Ra+20>>2];k[f+24>>2]=k[Ra+24>>2];k[f+28>>2]=k[Ra+28>>2];s=k[k[(k[J+8>>2]|0)+180>>2]>>2]|0;f=k[s>>2]&3;q=k[((f|0)==3?s:s+32|0)+28>>2]|0;f=k[((f|0)==2?s:s+-32|0)+28>>2]|0;e=f;c=e+8|0;if((i[(k[c>>2]|0)+156>>0]|0)!=1){w=L;c=q;break m}else{J=f;x=n;v=v+-1|0;f=u}}If(Ua,a,pb,e,s,k[k[(k[c>>2]|0)+180>>2]>>2]|0);k[fb>>2]=k[Ua>>2];k[fb+4>>2]=k[Ua+4>>2];k[fb+8>>2]=k[Ua+8>>2];k[fb+12>>2]=k[Ua+12>>2];k[fb+16>>2]=k[Ua+16>>2];k[fb+20>>2]=k[Ua+20>>2];k[fb+24>>2]=k[Ua+24>>2];k[fb+28>>2]=k[Ua+28>>2];c=k[(k[((k[s>>2]&3|0)==2?s:s+-32|0)+28>>2]|0)+8>>2]|0;do if((i[c+156>>0]|0)==1){if((k[c+176>>2]|0)>1){c=1;break}c=(k[c+184>>2]|0)>1&1}else c=0;while(0);HA(h,s,1,fb,c);c=k[za>>2]|0;O=c+-1|0;u=f+8|0;J=k[u>>2]|0;z=+p[J+24>>3]+ +p[(k[(k[Za>>2]|0)+196>>2]|0)+(k[J+232>>2]<<6)+24>>3];A=+p[fb+56+(O<<5)>>3];B=+p[fb+56+(O<<5)+16>>3];C=+p[fb+56+(O<<5)+24>>3];if(A<B&C<z){k[za>>2]=c+1;p[fb+56+(c<<5)>>3]=A;p[fb+56+(c<<5)+8>>3]=C;p[fb+56+(c<<5)+16>>3]=B;p[fb+56+(c<<5)+24>>3]=z}p[Aa>>3]=1.5707963267948966;i[Ba>>0]=1;Kf(h,L,s,$a,fb,n);do if(U){e=Hz(h,ib)|0;c=k[ib>>2]|0;P=227}else{e=Iz(h,ib)|0;c=k[ib>>2]|0;if(!(Na&(c|0)>4)){P=227;break}o=e+16|0;k[o>>2]=k[e>>2];k[o+4>>2]=k[e+4>>2];k[o+8>>2]=k[e+8>>2];k[o+12>>2]=k[e+12>>2];o=e+32|0;c=e+(c+-1<<4)|0;k[o>>2]=k[c>>2];k[o+4>>2]=k[c+4>>2];k[o+8>>2]=k[c+8>>2];k[o+12>>2]=k[c+12>>2];HP(e+48|0,c|0,16)|0;k[ib>>2]=4;c=4;o=e}while(0);if((P|0)==227){P=0;if(!c)break l;else o=e}e=c+d|0;if((e|0)>(k[12381]|0)){k[12381]=e<<1;q=Ey(k[12379]|0,e<<5)|0;k[12379]=q;c=k[ib>>2]|0}else q=k[12379]|0;if((c|0)>0){f=(c|0)>1;e=d;n=0;while(1){O=q+(e<<4)|0;J=o+(n<<4)|0;k[O>>2]=k[J>>2];k[O+4>>2]=k[J+4>>2];k[O+8>>2]=k[J+8>>2];k[O+12>>2]=k[J+12>>2];n=n+1|0;if((n|0)==(c|0))break;else e=e+1|0}d=(f?c:1)+d|0}c=k[k[(k[u>>2]|0)+180>>2]>>2]|0;if(!w)o=c;else{e=w;do{e=e+-1|0;c=k[k[(k[(k[((k[c>>2]&3|0)==2?c:c+-32|0)+28>>2]|0)+8>>2]|0)+180>>2]>>2]|0}while((e|0)!=0);o=c}n=q+(d<<4)|0;c=q+(d+-1<<4)|0;k[n>>2]=k[c>>2];k[n+4>>2]=k[c+4>>2];k[n+8>>2]=k[c+8>>2];k[n+12>>2]=k[c+12>>2];n=d+2|0;f=q+(d+1<<4)|0;k[f>>2]=k[c>>2];k[f+4>>2]=k[c+4>>2];k[f+8>>2]=k[c+8>>2];k[f+12>>2]=k[c+12>>2];f=q+(n<<4)|0;q=o+32|0;d=(k[(k[((k[o>>2]&3|0)==3?o:q)+28>>2]|0)+8>>2]|0)+16|0;k[f>>2]=k[d>>2];k[f+4>>2]=k[d+4>>2];k[f+8>>2]=k[d+8>>2];k[f+12>>2]=k[d+12>>2];Lf(L,h);f=k[o>>2]&3;q=k[((f|0)==3?o:q)+28>>2]|0;f=k[((f|0)==2?o:o+-32|0)+28>>2]|0;d=q+8|0;If(Va,a,pb,q,k[k[(k[d>>2]|0)+172>>2]>>2]|0,o);k[$a>>2]=k[Va>>2];k[$a+4>>2]=k[Va+4>>2];k[$a+8>>2]=k[Va+8>>2];k[$a+12>>2]=k[Va+12>>2];k[$a+16>>2]=k[Va+16>>2];k[$a+20>>2]=k[Va+20>>2];k[$a+24>>2]=k[Va+24>>2];k[$a+28>>2]=k[Va+28>>2];c=k[d>>2]|0;do if((i[c+156>>0]|0)==1){if((k[c+176>>2]|0)>1){c=1;break}c=(k[c+184>>2]|0)>1&1}else c=0;while(0);GA(h,o,1,$a,c);c=k[ya>>2]|0;O=c+-1|0;L=k[d>>2]|0;z=+p[L+24>>3]-+p[(k[(k[Za>>2]|0)+196>>2]|0)+(k[L+232>>2]<<6)+16>>3];A=+p[$a+56+(O<<5)>>3];B=+p[$a+56+(O<<5)+8>>3];C=+p[$a+56+(O<<5)+16>>3];if(z<B&A<C){k[ya>>2]=c+1;p[$a+56+(c<<5)>>3]=A;p[$a+56+(c<<5)+8>>3]=z;p[$a+56+(c<<5)+16>>3]=C;p[$a+56+(c<<5)+24>>3]=B}p[Ca>>3]=-1.5707963267948966;i[Da>>0]=1;e=f;c=e+8|0;if((i[(k[c>>2]|0)+156>>0]|0)==1){d=n;L=o;n=v;o=w}else{d=n;n=0;s=o;w=o;c=q;break}}}else{d=0;n=0;s=N;w=N;c=q}while(0);o=n+1|0;u=1104+(n<<5)|0;Jf(Xa,pb,a,k[(k[c+8>>2]|0)+232>>2]|0);k[u>>2]=k[Xa>>2];k[u+4>>2]=k[Xa+4>>2];k[u+8>>2]=k[Xa+8>>2];k[u+12>>2]=k[Xa+12>>2];k[u+16>>2]=k[Xa+16>>2];k[u+20>>2]=k[Xa+20>>2];k[u+24>>2]=k[Xa+24>>2];k[u+28>>2]=k[Xa+28>>2];If(Ya,a,pb,e,s,0);k[fb>>2]=k[Ya>>2];k[fb+4>>2]=k[Ya+4>>2];k[fb+8>>2]=k[Ya+8>>2];k[fb+12>>2]=k[Ya+12>>2];k[fb+16>>2]=k[Ya+16>>2];k[fb+20>>2]=k[Ya+20>>2];k[fb+24>>2]=k[Ya+24>>2];k[fb+28>>2]=k[Ya+28>>2];B=+p[fb>>3];C=+p[Ea>>3];u=(M|0)!=0;e=u?hb:s;v=s+-32|0;c=k[(k[((k[s>>2]&3|0)==2?s:v)+28>>2]|0)+8>>2]|0;do if((i[c+156>>0]|0)==1){if((k[c+176>>2]|0)>1){c=1;break}c=(k[c+184>>2]|0)>1&1}else c=0;while(0);HA(h,e,1,fb,c);c=k[za>>2]|0;A=+p[fb+56+(c+-1<<5)+24>>3];O=k[f+8>>2]|0;z=+p[O+24>>3]+ +p[(k[(k[Za>>2]|0)+196>>2]|0)+(k[O+232>>2]<<6)+24>>3];if(B<C&A<z){k[za>>2]=c+1;p[fb+56+(c<<5)>>3]=B;p[fb+56+(c<<5)+8>>3]=A;p[fb+56+(c<<5)+16>>3]=C;p[fb+56+(c<<5)+24>>3]=z}Kf(h,w,s,$a,fb,o);if(U)q=Hz(h,ib)|0;else q=Iz(h,ib)|0;c=k[ib>>2]|0;if(!(Na&(c|0)>4)){if(!c)break}else{P=q+16|0;k[P>>2]=k[q>>2];k[P+4>>2]=k[q+4>>2];k[P+8>>2]=k[q+8>>2];k[P+12>>2]=k[q+12>>2];P=q+32|0;c=q+(c+-1<<4)|0;k[P>>2]=k[c>>2];k[P+4>>2]=k[c+4>>2];k[P+8>>2]=k[c+8>>2];k[P+12>>2]=k[c+12>>2];HP(q+48|0,c|0,16)|0;k[ib>>2]=4;c=4}e=c+d|0;if((e|0)>(k[12381]|0)){k[12381]=e<<1;c=Ey(k[12379]|0,e<<5)|0;k[12379]=c;c=k[ib>>2]|0}if((c|0)>0){f=k[12379]|0;n=(c|0)>1;e=d;o=0;while(1){P=f+(e<<4)|0;O=q+(o<<4)|0;k[P>>2]=k[O>>2];k[P+4>>2]=k[O+4>>2];k[P+8>>2]=k[O+8>>2];k[P+12>>2]=k[O+12>>2];o=o+1|0;if((o|0)==(c|0))break;else e=e+1|0}d=(n?c:1)+d|0}Lf(w,h);if(u)c=(k[hb>>2]&3|0)==2?hb:ta;else c=(k[s>>2]&3|0)==2?s:v;n=k[c+28>>2]|0;P=264}while(0);do if((P|0)==264){if((Q|0)==1){EA(N,n,k[12379]|0,d,49504);break}s=d+-1|0;u=(s|0)>1;if(u){z=+((ha(k[_a>>2]|0,Q+-1|0)|0)/2|0|0);c=k[12379]|0;e=1;do{P=c+(e<<4)|0;p[P>>3]=+p[P>>3]-z;e=e+1|0}while((e|0)!=(s|0))}c=k[12381]|0;if((c|0)>(k[12382]|0)){k[12382]=c;e=Ey(k[12380]|0,c<<4)|0;k[12380]=e}else e=k[12380]|0;q=(d|0)>0;if(q){c=k[12379]|0;f=0;do{P=e+(f<<4)|0;O=c+(f<<4)|0;k[P>>2]=k[O>>2];k[P+4>>2]=k[O+4>>2];k[P+8>>2]=k[O+8>>2];k[P+12>>2]=k[O+12>>2];f=f+1|0}while((f|0)!=(d|0))}EA(N,n,e,d,49504);if((Q|0)<=1)break;z=+(k[_a>>2]|0);o=1;do{e=k[g+(o+S<<2)>>2]|0;f=e+8|0;c=k[f>>2]|0;if(!(k[c+164>>2]&32))n=e;else{v=k[qa>>2]|0;GP(v|0,c|0,176)|0;k[cb>>2]=k[e>>2];k[cb+4>>2]=k[e+4>>2];k[cb+8>>2]=k[e+8>>2];k[cb+12>>2]=k[e+12>>2];k[cb+16>>2]=k[e+16>>2];k[cb+20>>2]=k[e+20>>2];k[cb+24>>2]=k[e+24>>2];k[cb+28>>2]=k[e+28>>2];k[qa>>2]=v;k[((k[cb>>2]&3|0)==3?cb:va)+28>>2]=k[((k[e>>2]&3|0)==2?e:e+-32|0)+28>>2];k[((k[cb>>2]&3|0)==2?cb:wa)+28>>2]=k[((k[e>>2]&3|0)==3?e:e+32|0)+28>>2];v=v+16|0;w=(k[f>>2]|0)+56|0;x=v+40|0;do{k[v>>2]=k[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));v=(k[qa>>2]|0)+56|0;w=(k[f>>2]|0)+16|0;x=v+40|0;do{k[v>>2]=k[w>>2];v=v+4|0;w=w+4|0}while((v|0)<(x|0));n=k[qa>>2]|0;i[n+112>>0]=1;k[n+116>>2]=e;n=cb}if(u){c=k[12379]|0;e=1;do{P=c+(e<<4)|0;p[P>>3]=z+ +p[P>>3];e=e+1|0}while((e|0)!=(s|0))}c=k[12380]|0;if(q){e=k[12379]|0;f=0;do{P=c+(f<<4)|0;O=e+(f<<4)|0;k[P>>2]=k[O>>2];k[P+4>>2]=k[O+4>>2];k[P+8>>2]=k[O+8>>2];k[P+12>>2]=k[O+12>>2];f=f+1|0}while((f|0)!=(d|0))}EA(n,k[((k[n>>2]&3|0)==2?n:n+-32|0)+28>>2]|0,c,d,49504);o=o+1|0}while((o|0)!=(Q|0))}while(0)}while(0);if((R|0)<(Oa|0))S=R;else break}}c=k[(k[Za>>2]|0)+192>>2]|0;if(c){e=c;do{d=e+8|0;c=k[d>>2]|0;if((i[c+156>>0]|0)==1?(k[c+104>>2]|0)!=0:0){Bf(e);EB(a,k[(k[d>>2]|0)+104>>2]|0);c=k[d>>2]|0}e=k[c+164>>2]|0}while((e|0)!=0)}if((b|0)!=0?(y=Kt(a)|0,(y|0)!=0):0){do{c=Es(a,y)|0;if(c)do{if((Rb[k[49504>>2]&63](c)|0)<<24>>24!=0?(kb=k[(k[c+8>>2]|0)+8>>2]|0,(kb|0)!=0):0){w=k[kb+4>>2]|0;x=Cy(w*48|0)|0;if((w|0)>0){n=0;q=x;u=(k[kb>>2]|0)+((w+-1|0)*48|0)|0;do{v=u;u=u+-48|0;d=k[v+4>>2]|0;e=Cy(d<<4)|0;if((d|0)>0){f=0;o=e;s=(k[v>>2]|0)+(d+-1<<4)|0;while(1){k[o>>2]=k[s>>2];k[o+4>>2]=k[s+4>>2];k[o+8>>2]=k[s+8>>2];k[o+12>>2]=k[s+12>>2];f=f+1|0;if((f|0)==(d|0))break;else{o=o+16|0;s=s+-16|0}}}k[q>>2]=e;k[q+4>>2]=d;k[q+8>>2]=k[v+12>>2];k[q+12>>2]=k[v+8>>2];b=q+16|0;jb=v+32|0;k[b>>2]=k[jb>>2];k[b+4>>2]=k[jb+4>>2];k[b+8>>2]=k[jb+8>>2];k[b+12>>2]=k[jb+12>>2];b=q+32|0;q=q+48|0;jb=v+16|0;k[b>>2]=k[jb>>2];k[b+4>>2]=k[jb+4>>2];k[b+8>>2]=k[jb+8>>2];k[b+12>>2]=k[jb+12>>2];n=n+1|0}while((n|0)!=(w|0));d=0;do{vP(k[(k[kb>>2]|0)+(d*48|0)>>2]|0);d=d+1|0}while((d|0)!=(w|0))}vP(k[kb>>2]|0);k[kb>>2]=x}c=Gs(a,c)|0}while((c|0)!=0);y=Lt(a,y)|0}while((y|0)!=0);P=307}else P=307}}}while(0);if((P|0)==307){if(((k[13686]|0)!=0|(k[13687]|0)!=0?(k[13692]|0)!=0|(k[13691]|0)!=0:0)?(lb=Kt(a)|0,(lb|0)!=0):0){f=lb;do{if((k[13686]|0)!=0?(nb=Hs(a,f)|0,(nb|0)!=0):0){e=nb;do{c=e+-32|0;d=(k[e>>2]&3|0)==2?e:c;if(k[(k[d+8>>2]|0)+100>>2]|0){LA(d,1)|0;EB(a,k[(k[((k[e>>2]&3|0)==2?e:c)+8>>2]|0)+100>>2]|0)}e=Is(a,e)|0}while((e|0)!=0)}if((k[13687]|0)!=0?(ob=Es(a,f)|0,(ob|0)!=0):0){d=ob;do{c=d+8|0;if((k[(k[c>>2]|0)+104>>2]|0)!=0?(LA(d,0)|0)!=0:0)EB(a,k[(k[c>>2]|0)+104>>2]|0);d=Gs(a,d)|0}while((d|0)!=0)}f=Lt(a,f)|0}while((f|0)!=0)}switch(mb|0){case 4:case 8:break;default:{vP(g);vP(k[h+84>>2]|0);vP(h);vP(k[pb+16>>2]|0);Gz()}}k[13605]=1;k[13606]=1}r=qb;return}function Af(a){a=a|0;var b=0,c=0,d=0.0,e=0;b=Kt(a)|0;if(b)do{c=k[b+8>>2]|0;if(k[c+204>>2]|0){e=c+96|0;d=+p[e>>3];c=c+240|0;p[e>>3]=+p[c>>3];p[c>>3]=d}b=Lt(a,b)|0}while((b|0)!=0);return}function Bf(a){a=a|0;var b=0,c=0,d=0,e=0.0,f=0.0;d=a+8|0;b=k[d>>2]|0;if(k[b+176>>2]|0){b=k[b+180>>2]|0;while(1){c=(k[b>>2]|0)+8|0;b=k[c>>2]|0;if(!(i[b+112>>0]|0))break;else b=b+116|0}b=k[b+96>>2]|0;e=+p[b+24>>3];f=+p[b+32>>3];b=($t(a)|0)+8|0;d=k[d>>2]|0;a=k[(k[c>>2]|0)+96>>2]|0;p[a+56>>3]=+p[d+16>>3]+((k[(k[b>>2]|0)+116>>2]&1|0)!=0?f:e)*.5;p[a+64>>3]=+p[d+24>>3];i[a+81>>0]=1}return}function Cf(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;do if(!b){b=k[a>>2]&3;e=k[((b|0)==3?a:a+32|0)+28>>2]|0;b=k[((b|0)==2?a:a+-32|0)+28>>2]|0;if((e|0)!=(b|0)){e=(k[(k[e+8>>2]|0)+232>>2]|0)==(k[(k[b+8>>2]|0)+232>>2]|0)?2:1;break}b=k[a+8>>2]|0;if(!(i[b+44>>0]|0))e=(i[b+84>>0]|0)==0?8:4;else e=4}else e=b;while(0);a:do if(!c)switch(e|0){case 1:{b=k[a>>2]&3;b=(k[(k[(k[((b|0)==3?a:a+32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)<(k[(k[(k[((b|0)==2?a:a+-32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)?16:32;break a}case 2:{b=k[a>>2]&3;b=(k[(k[(k[((b|0)==3?a:a+32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0)<(k[(k[(k[((b|0)==2?a:a+-32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0)?16:32;break a}default:{b=16;break a}}else b=c;while(0);k[(k[a+8>>2]|0)+164>>2]=e|d|b;return}function Df(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;F=r;r=r+480|0;w=F+176|0;y=F+416|0;A=F+352|0;x=y+8|0;k[x>>2]=w;z=A+8|0;k[z>>2]=F;E=k[a>>2]|0;D=k[b>>2]|0;B=E+8|0;u=k[B>>2]|0;v=k[u+164>>2]|0;g=v&15;C=D+8|0;a=k[C>>2]|0;b=k[a+164>>2]&15;do if((b|0)==(g|0)){b=k[u+172>>2]|0;if(!b){g=u;b=E}else while(1){g=k[b+8>>2]|0;h=k[g+172>>2]|0;if(!h)break;else b=h}g=k[g+116>>2]|0;if(g){b=g;while(1){g=k[(k[b+8>>2]|0)+116>>2]|0;if(!g)break;else b=g}}g=k[a+172>>2]|0;if(!g){h=a;g=D}else while(1){h=k[g+8>>2]|0;j=k[h+172>>2]|0;if(!j)break;else g=j}h=k[h+116>>2]|0;if(h){g=h;while(1){h=k[(k[g+8>>2]|0)+116>>2]|0;if(!h)break;else g=h}}q=k[b>>2]|0;j=q&3;h=k[(k[((j|0)==3?b:b+32|0)+28>>2]|0)+8>>2]|0;j=k[(k[((j|0)==2?b:b+-32|0)+28>>2]|0)+8>>2]|0;l=(k[h+232>>2]|0)-(k[j+232>>2]|0)|0;s=k[g>>2]|0;o=s&3;n=k[(k[((o|0)==3?g:g+32|0)+28>>2]|0)+8>>2]|0;o=k[(k[((o|0)==2?g:g+-32|0)+28>>2]|0)+8>>2]|0;m=(k[n+232>>2]|0)-(k[o+232>>2]|0)|0;l=(l|0)>-1?l:0-l|0;m=(m|0)>-1?m:0-m|0;if((l|0)!=(m|0)){a=l-m|0;break}j=~~(+p[h+16>>3]-+p[j+16>>3]);j=(j|0)>-1?j:0-j|0;h=~~(+p[n+16>>3]-+p[o+16>>3]);h=(h|0)>-1?h:0-h|0;if((j|0)!=(h|0)){a=j-h|0;break}j=q>>>4;h=s>>>4;if((j|0)!=(h|0)){a=j-h|0;break}if(!(i[u+44>>0]|0)){b=(i[u+84>>0]|0)==0?b:E;h=b;b=k[(k[b+8>>2]|0)+164>>2]|0}else{h=E;b=v}j=h+8|0;if(b&32){GP(w|0,k[j>>2]|0,176)|0;k[y>>2]=k[h>>2];k[y+4>>2]=k[h+4>>2];k[y+8>>2]=k[h+8>>2];k[y+12>>2]=k[h+12>>2];k[y+16>>2]=k[h+16>>2];k[y+20>>2]=k[h+20>>2];k[y+24>>2]=k[h+24>>2];k[y+28>>2]=k[h+28>>2];k[x>>2]=w;k[((k[y>>2]&3|0)==3?y:y+32|0)+28>>2]=k[((k[h>>2]&3|0)==2?h:h+-32|0)+28>>2];k[((k[y>>2]&3|0)==2?y:y+-32|0)+28>>2]=k[((k[h>>2]&3|0)==3?h:h+32|0)+28>>2];l=w+16|0;m=(k[j>>2]|0)+56|0;n=l+40|0;do{k[l>>2]=k[m>>2];l=l+4|0;m=m+4|0}while((l|0)<(n|0));a=k[x>>2]|0;l=a+56|0;m=(k[j>>2]|0)+16|0;n=l+40|0;do{k[l>>2]=k[m>>2];l=l+4|0;m=m+4|0}while((l|0)<(n|0));i[a+112>>0]=1;k[a+116>>2]=h;a=k[C>>2]|0;h=y}if(!(i[a+44>>0]|0)){a=(i[a+84>>0]|0)==0?g:D;g=a;a=k[a+8>>2]|0}else g=D;b=g+8|0;if(!(k[a+164>>2]&32))b=a;else{a=k[z>>2]|0;GP(a|0,k[b>>2]|0,176)|0;k[A>>2]=k[g>>2];k[A+4>>2]=k[g+4>>2];k[A+8>>2]=k[g+8>>2];k[A+12>>2]=k[g+12>>2];k[A+16>>2]=k[g+16>>2];k[A+20>>2]=k[g+20>>2];k[A+24>>2]=k[g+24>>2];k[A+28>>2]=k[g+28>>2];k[z>>2]=a;k[((k[A>>2]&3|0)==3?A:A+32|0)+28>>2]=k[((k[g>>2]&3|0)==2?g:g+-32|0)+28>>2];k[((k[A>>2]&3|0)==2?A:A+-32|0)+28>>2]=k[((k[g>>2]&3|0)==3?g:g+32|0)+28>>2];l=a+16|0;m=(k[b>>2]|0)+56|0;n=l+40|0;do{k[l>>2]=k[m>>2];l=l+4|0;m=m+4|0}while((l|0)<(n|0));l=a+56|0;m=(k[b>>2]|0)+16|0;n=l+40|0;do{k[l>>2]=k[m>>2];l=l+4|0;m=m+4|0}while((l|0)<(n|0));i[a+112>>0]=1;k[a+116>>2]=g;b=a}g=k[h+8>>2]|0;A=b+16|0;i[t>>0]=i[A>>0];i[t+1>>0]=i[A+1>>0];i[t+2>>0]=i[A+2>>0];i[t+3>>0]=i[A+3>>0];i[t+4>>0]=i[A+4>>0];i[t+5>>0]=i[A+5>>0];i[t+6>>0]=i[A+6>>0];i[t+7>>0]=i[A+7>>0];c=+p[t>>3];A=b+24|0;i[t>>0]=i[A>>0];i[t+1>>0]=i[A+1>>0];i[t+2>>0]=i[A+2>>0];i[t+3>>0]=i[A+3>>0];i[t+4>>0]=i[A+4>>0];i[t+5>>0]=i[A+5>>0];i[t+6>>0]=i[A+6>>0];i[t+7>>0]=i[A+7>>0];e=+p[t>>3];A=i[b+44>>0]|0;a=g+16|0;i[t>>0]=i[a>>0];i[t+1>>0]=i[a+1>>0];i[t+2>>0]=i[a+2>>0];i[t+3>>0]=i[a+3>>0];i[t+4>>0]=i[a+4>>0];i[t+5>>0]=i[a+5>>0];i[t+6>>0]=i[a+6>>0];i[t+7>>0]=i[a+7>>0];d=+p[t>>3];a=g+24|0;i[t>>0]=i[a>>0];i[t+1>>0]=i[a+1>>0];i[t+2>>0]=i[a+2>>0];i[t+3>>0]=i[a+3>>0];i[t+4>>0]=i[a+4>>0];i[t+5>>0]=i[a+5>>0];i[t+6>>0]=i[a+6>>0];i[t+7>>0]=i[a+7>>0];f=+p[t>>3];a=i[g+44>>0]|0;if(!(A<<24>>24))a=a<<24>>24!=0&1;else{if(!(a<<24>>24)){a=-1;break}a=~~(d-c);if(a)break;a=~~(f-e)}if(!a){A=b+56|0;i[t>>0]=i[A>>0];i[t+1>>0]=i[A+1>>0];i[t+2>>0]=i[A+2>>0];i[t+3>>0]=i[A+3>>0];i[t+4>>0]=i[A+4>>0];i[t+5>>0]=i[A+5>>0];i[t+6>>0]=i[A+6>>0];i[t+7>>0]=i[A+7>>0];d=+p[t>>3];A=b+64|0;i[t>>0]=i[A>>0];i[t+1>>0]=i[A+1>>0];i[t+2>>0]=i[A+2>>0];i[t+3>>0]=i[A+3>>0];i[t+4>>0]=i[A+4>>0];i[t+5>>0]=i[A+5>>0];i[t+6>>0]=i[A+6>>0];i[t+7>>0]=i[A+7>>0];f=+p[t>>3];A=i[b+84>>0]|0;a=g+56|0;i[t>>0]=i[a>>0];i[t+1>>0]=i[a+1>>0];i[t+2>>0]=i[a+2>>0];i[t+3>>0]=i[a+3>>0];i[t+4>>0]=i[a+4>>0];i[t+5>>0]=i[a+5>>0];i[t+6>>0]=i[a+6>>0];i[t+7>>0]=i[a+7>>0];c=+p[t>>3];a=g+64|0;i[t>>0]=i[a>>0];i[t+1>>0]=i[a+1>>0];i[t+2>>0]=i[a+2>>0];i[t+3>>0]=i[a+3>>0];i[t+4>>0]=i[a+4>>0];i[t+5>>0]=i[a+5>>0];i[t+6>>0]=i[a+6>>0];i[t+7>>0]=i[a+7>>0];e=+p[t>>3];a=i[g+84>>0]|0;if(!(A<<24>>24))a=a<<24>>24!=0&1;else{if(!(a<<24>>24)){a=-1;break}a=~~(c-d);if(a)break;a=~~(e-f)}if(!a){b=k[(k[B>>2]|0)+164>>2]&192;a=k[(k[C>>2]|0)+164>>2]&192;if((b|0)==(a|0)){a=((k[E>>2]|0)>>>4)-((k[D>>2]|0)>>>4)|0;break}else{a=b-a|0;break}}}}else a=b-g|0;while(0);r=F;return a|0}function Ef(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0.0,l=0.0,m=0.0,n=0.0,o=0.0,q=0,s=0.0,u=0,v=0.0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0.0,K=0.0,L=0.0,M=0.0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0;Aa=r;r=r+304|0;ya=Aa+224|0;U=Aa+208|0;Z=Aa+192|0;X=Aa+296|0;V=Aa+288|0;W=Aa+32|0;Y=Aa+16|0;T=Aa;q=k[e>>2]&3;u=k[((q|0)==3?e:e+32|0)+28>>2]|0;q=k[((q|0)==2?e:e+-32|0)+28>>2]|0;G=(d|0)>0;do if(G){h=0;g=0;e=0;do{xa=k[(k[b+(h+c<<2)>>2]|0)+8>>2]|0;g=((k[xa+96>>2]|0)!=0&1)+g|0;if(!((i[xa+44>>0]|0)==0?(i[xa+84>>0]|0)==0:0))e=1;h=h+1|0}while((h|0)!=(d|0));I=g;if(!e){if(!I){za=8;break}g=k[b+(c<<2)>>2]|0;S=By(d<<2)|0;if(G){e=0;do{k[S+(e<<2)>>2]=k[b+(e+c<<2)>>2];e=e+1|0}while((e|0)!=(d|0))}dO(S,d,4,59);O=k[u+8>>2]|0;N=g+8|0;R=k[N>>2]|0;c=R+16|0;i[t>>0]=i[c>>0];i[t+1>>0]=i[c+1>>0];i[t+2>>0]=i[c+2>>0];i[t+3>>0]=i[c+3>>0];i[t+4>>0]=i[c+4>>0];i[t+5>>0]=i[c+5>>0];i[t+6>>0]=i[c+6>>0];i[t+7>>0]=i[c+7>>0];l=+p[t>>3];R=R+24|0;i[t>>0]=i[R>>0];i[t+1>>0]=i[R+1>>0];i[t+2>>0]=i[R+2>>0];i[t+3>>0]=i[R+3>>0];i[t+4>>0]=i[R+4>>0];i[t+5>>0]=i[R+5>>0];i[t+6>>0]=i[R+6>>0];i[t+7>>0]=i[R+7>>0];j=+p[t>>3];R=O+16|0;i[t>>0]=i[R>>0];i[t+1>>0]=i[R+1>>0];i[t+2>>0]=i[R+2>>0];i[t+3>>0]=i[R+3>>0];i[t+4>>0]=i[R+4>>0];i[t+5>>0]=i[R+5>>0];i[t+6>>0]=i[R+6>>0];i[t+7>>0]=i[R+7>>0];J=+p[t>>3];R=O+24|0;i[t>>0]=i[R>>0];i[t+1>>0]=i[R+1>>0];i[t+2>>0]=i[R+2>>0];i[t+3>>0]=i[R+3>>0];i[t+4>>0]=i[R+4>>0];i[t+5>>0]=i[R+5>>0];i[t+6>>0]=i[R+6>>0];i[t+7>>0]=i[R+7>>0];J=l+J;j=j+ +p[t>>3];p[Y>>3]=J;R=Y+8|0;p[R>>3]=j;c=k[q+8>>2]|0;N=k[N>>2]|0;P=N+56|0;i[t>>0]=i[P>>0];i[t+1>>0]=i[P+1>>0];i[t+2>>0]=i[P+2>>0];i[t+3>>0]=i[P+3>>0];i[t+4>>0]=i[P+4>>0];i[t+5>>0]=i[P+5>>0];i[t+6>>0]=i[P+6>>0];i[t+7>>0]=i[P+7>>0];l=+p[t>>3];N=N+64|0;i[t>>0]=i[N>>0];i[t+1>>0]=i[N+1>>0];i[t+2>>0]=i[N+2>>0];i[t+3>>0]=i[N+3>>0];i[t+4>>0]=i[N+4>>0];i[t+5>>0]=i[N+5>>0];i[t+6>>0]=i[N+6>>0];i[t+7>>0]=i[N+7>>0];s=+p[t>>3];N=c+16|0;i[t>>0]=i[N>>0];i[t+1>>0]=i[N+1>>0];i[t+2>>0]=i[N+2>>0];i[t+3>>0]=i[N+3>>0];i[t+4>>0]=i[N+4>>0];i[t+5>>0]=i[N+5>>0];i[t+6>>0]=i[N+6>>0];i[t+7>>0]=i[N+7>>0];K=+p[t>>3];N=c+24|0;i[t>>0]=i[N>>0];i[t+1>>0]=i[N+1>>0];i[t+2>>0]=i[N+2>>0];i[t+3>>0]=i[N+3>>0];i[t+4>>0]=i[N+4>>0];i[t+5>>0]=i[N+5>>0];i[t+6>>0]=i[N+6>>0];i[t+7>>0]=i[N+7>>0];K=l+K;s=s+ +p[t>>3];p[T>>3]=K;N=T+8|0;p[N>>3]=s;J=J+ +p[O+96>>3];K=K-+p[c+88>>3];s=(J+K)*.5;c=k[S>>2]|0;k[W>>2]=k[Y>>2];k[W+4>>2]=k[Y+4>>2];k[W+8>>2]=k[Y+8>>2];k[W+12>>2]=k[Y+12>>2];O=W+16|0;k[O>>2]=k[Y>>2];k[O+4>>2]=k[Y+4>>2];k[O+8>>2]=k[Y+8>>2];k[O+12>>2]=k[Y+12>>2];P=W+32|0;k[P>>2]=k[T>>2];k[P+4>>2]=k[T+4>>2];k[P+8>>2]=k[T+8>>2];k[P+12>>2]=k[T+12>>2];Q=W+48|0;k[Q>>2]=k[T>>2];k[Q+4>>2]=k[T+4>>2];k[Q+8>>2]=k[T+8>>2];k[Q+12>>2]=k[T+12>>2];EA(c,k[((k[c>>2]&3|0)==2?c:c+-32|0)+28>>2]|0,W,4,49504);c=k[(k[c+8>>2]|0)+96>>2]|0;p[c+56>>3]=s;l=+p[c+32>>3];p[c+64>>3]=j+(l+6.0)*.5;i[c+81>>0]=1;j=+p[R>>3]+3.0;l=l+j;M=+p[c+24>>3]*.5;L=s-M;M=s+M;a:do if((I|0)>1){u=W+24|0;w=W+40|0;x=W+56|0;y=W+64|0;z=W+72|0;A=W+80|0;B=W+88|0;C=W+96|0;D=W+104|0;E=W+112|0;F=W+120|0;G=X+4|0;H=(f|0)==6&1;e=1;n=0.0;m=0.0;while(1){q=k[S+(e<<2)>>2]|0;if(!(e&1)){k[W>>2]=k[Y>>2];k[W+4>>2]=k[Y+4>>2];k[W+8>>2]=k[Y+8>>2];k[W+12>>2]=k[Y+12>>2];p[O>>3]=L;p[u>>3]=+p[R>>3];p[P>>3]=L;p[w>>3]=l;p[Q>>3]=M;p[x>>3]=l;p[y>>3]=M;o=+p[N>>3];p[z>>3]=o;v=+p[T>>3];p[A>>3]=v;p[B>>3]=o;p[C>>3]=v;v=l+6.0;p[D>>3]=v;p[E>>3]=+p[Y>>3];p[F>>3]=v;v=+p[(k[(k[q+8>>2]|0)+96>>2]|0)+32>>3];o=l+v*.5+6.0;l=l+(v+6.0)}else{g=q+8|0;h=k[(k[g>>2]|0)+96>>2]|0;if((e|0)==1){m=+p[h+24>>3]*.5;n=s+m;m=s-m}j=j-(+p[h+32>>3]+6.0);k[W>>2]=k[Y>>2];k[W+4>>2]=k[Y+4>>2];k[W+8>>2]=k[Y+8>>2];k[W+12>>2]=k[Y+12>>2];p[O>>3]=+p[Y>>3];o=j+-6.0;p[u>>3]=o;p[P>>3]=+p[T>>3];p[w>>3]=o;k[Q>>2]=k[T>>2];k[Q+4>>2]=k[T+4>>2];k[Q+8>>2]=k[T+8>>2];k[Q+12>>2]=k[T+12>>2];p[y>>3]=n;p[z>>3]=+p[N>>3];p[A>>3]=n;p[B>>3]=j;p[C>>3]=m;p[D>>3]=j;p[E>>3]=m;p[F>>3]=+p[R>>3];o=j+ +p[(k[(k[g>>2]|0)+96>>2]|0)+32>>3]*.5}k[G>>2]=8;k[X>>2]=W;k[Z>>2]=k[Y>>2];k[Z+4>>2]=k[Y+4>>2];k[Z+8>>2]=k[Y+8>>2];k[Z+12>>2]=k[Y+12>>2];k[U>>2]=k[T>>2];k[U+4>>2]=k[T+4>>2];k[U+8>>2]=k[T+8>>2];k[U+12>>2]=k[T+12>>2];k[ya>>2]=k[X>>2];k[ya+4>>2]=k[X+4>>2];g=Ez(Z,U,ya,V,H)|0;h=k[V>>2]|0;if(!h)break a;c=k[(k[q+8>>2]|0)+96>>2]|0;p[c+56>>3]=s;p[c+64>>3]=o;i[c+81>>0]=1;EA(q,k[((k[q>>2]&3|0)==2?q:q+-32|0)+28>>2]|0,g,h,49504);e=e+1|0;if((e|0)>=(I|0)){za=13;break}}}else{e=1;n=0.0;m=0.0;za=13}while(0);b:do if((za|0)==13){if((e|0)<(d|0)){w=W+24|0;x=W+40|0;y=W+56|0;z=W+64|0;A=W+72|0;B=W+80|0;C=W+88|0;D=W+96|0;E=W+104|0;F=W+112|0;G=W+120|0;H=X+4|0;u=(f|0)==6&1;v=(J*2.0+K)/3.0;s=(J+K*2.0)/3.0;while(1){q=k[S+(e<<2)>>2]|0;if(!(e&1)){k[W>>2]=k[Y>>2];k[W+4>>2]=k[Y+4>>2];k[W+8>>2]=k[Y+8>>2];k[W+12>>2]=k[Y+12>>2];p[O>>3]=L;p[w>>3]=+p[R>>3];p[P>>3]=L;p[x>>3]=l;p[Q>>3]=M;p[y>>3]=l;p[z>>3]=M;o=+p[N>>3];p[A>>3]=o;K=+p[T>>3];p[B>>3]=K;p[C>>3]=o;p[D>>3]=K;K=l+6.0;p[E>>3]=K;p[F>>3]=+p[Y>>3];l=K;o=j;j=K}else{f=(e|0)==1;m=f?v:m;n=f?s:n;o=j+-6.0;k[W>>2]=k[Y>>2];k[W+4>>2]=k[Y+4>>2];k[W+8>>2]=k[Y+8>>2];k[W+12>>2]=k[Y+12>>2];p[O>>3]=+p[Y>>3];j=o+-6.0;p[w>>3]=j;p[P>>3]=+p[T>>3];p[x>>3]=j;k[Q>>2]=k[T>>2];k[Q+4>>2]=k[T+4>>2];k[Q+8>>2]=k[T+8>>2];k[Q+12>>2]=k[T+12>>2];p[z>>3]=n;p[A>>3]=+p[N>>3];p[B>>3]=n;p[C>>3]=o;p[D>>3]=m;p[E>>3]=o;p[F>>3]=m;j=+p[R>>3]}p[G>>3]=j;k[H>>2]=8;k[X>>2]=W;k[Z>>2]=k[Y>>2];k[Z+4>>2]=k[Y+4>>2];k[Z+8>>2]=k[Y+8>>2];k[Z+12>>2]=k[Y+12>>2];k[U>>2]=k[T>>2];k[U+4>>2]=k[T+4>>2];k[U+8>>2]=k[T+8>>2];k[U+12>>2]=k[T+12>>2];k[ya>>2]=k[X>>2];k[ya+4>>2]=k[X+4>>2];g=Ez(Z,U,ya,V,u)|0;h=k[V>>2]|0;if(!h)break b;EA(q,k[((k[q>>2]&3|0)==2?q:q+-32|0)+28>>2]|0,g,h,49504);e=e+1|0;if((e|0)>=(d|0))break;else j=o}}vP(S)}while(0);break}va=By(156)|0;if(!(at(a)|0)){k[ya>>2]=k[12891];xa=Vs(121676,ya,0)|0}else{k[ya>>2]=k[12889];xa=Vs(121676,ya,0)|0}qu(xa,173447,280,1)|0;ks(xa,0,123349,176676)|0;ta=By(96)|0;C=xa+8|0;e=k[C>>2]|0;k[e+8>>2]=ta;wa=a+8|0;ua=k[wa>>2]|0;sa=k[ua+8>>2]|0;p[ta>>3]=+p[sa>>3];p[ta+24>>3]=+p[sa+24>>3];i[e+115>>0]=i[ua+115>>0]|0;k[e+116>>2]=k[ua+116>>2]&1^1;k[e+248>>2]=k[ua+248>>2];k[e+252>>2]=k[ua+252>>2];e=ls(au(a)|0,1,0)|0;if(e)do{ks(xa,1,k[e+8>>2]|0,k[e+12>>2]|0)|0;e=ls(au(a)|0,1,e)|0}while((e|0)!=0);e=ls(au(a)|0,2,0)|0;if(e)do{ks(xa,2,k[e+8>>2]|0,k[e+12>>2]|0)|0;e=ls(au(a)|0,2,e)|0}while((e|0)!=0);if(!(ks(xa,2,147404,0)|0))ks(xa,2,147404,176676)|0;if(!(ks(xa,2,147395,0)|0))ks(xa,2,147395,176676)|0;k[va>>2]=k[13678];H=va+4|0;k[H>>2]=k[13682];I=va+8|0;k[I>>2]=k[13683];N=va+12|0;k[N>>2]=k[13656];O=va+16|0;k[O>>2]=k[13657];P=va+20|0;k[P>>2]=k[13670];Q=va+24|0;k[Q>>2]=k[13669];R=va+28|0;k[R>>2]=k[13668];S=va+32|0;k[S>>2]=k[13694];T=va+36|0;k[T>>2]=k[13686];U=va+40|0;k[U>>2]=k[13671];V=va+44|0;k[V>>2]=k[13681];W=va+48|0;k[W>>2]=k[13690];X=va+52|0;k[X>>2]=k[13689];Y=va+56|0;k[Y>>2]=k[13688];Z=va+60|0;k[Z>>2]=k[13693];_=va+64|0;k[_>>2]=k[13687];$=va+68|0;k[$>>2]=k[13672];aa=va+72|0;k[aa>>2]=k[13619];ba=va+76|0;k[ba>>2]=k[13620];ca=va+80|0;k[ca>>2]=k[13621];da=va+84|0;k[da>>2]=k[13639];ea=va+88|0;k[ea>>2]=k[13632];fa=va+92|0;k[fa>>2]=k[13633];ga=va+96|0;k[ga>>2]=k[13634];ha=va+100|0;k[ha>>2]=k[13636];ia=va+104|0;k[ia>>2]=k[13637];ja=va+108|0;k[ja>>2]=k[13640];ka=va+112|0;k[ka>>2]=k[13643];la=va+116|0;k[la>>2]=k[13641];ma=va+120|0;k[ma>>2]=k[13642];na=va+124|0;k[na>>2]=k[13645];oa=va+128|0;k[oa>>2]=k[13644];pa=va+132|0;k[pa>>2]=k[13646];qa=va+136|0;k[qa>>2]=k[13647];ra=va+140|0;k[ra>>2]=k[13638];sa=va+144|0;k[sa>>2]=k[13650];ta=va+152|0;k[ta>>2]=k[13605];ua=va+148|0;k[ua>>2]=k[13614];k[13678]=0;F=ks(xa,2,123494,0)|0;k[13682]=F;F=ks(xa,2,123503,0)|0;k[13683]=F;F=ks(xa,2,137781,0)|0;k[13656]=F;if(!F){F=ks(xa,2,137781,176676)|0;k[13656]=F}k[13657]=0;k[13670]=0;D=ks(xa,2,137677,0)|0;k[13669]=D;D=ks(xa,2,137668,0)|0;k[13668]=D;D=ks(xa,2,137957,0)|0;k[13694]=D;k[13686]=0;D=ks(xa,2,145884,0)|0;k[13671]=D;D=ks(xa,2,121681,0)|0;k[13681]=D;k[13690]=0;D=ks(xa,2,137857,0)|0;k[13689]=D;D=ks(xa,2,137843,0)|0;k[13688]=D;D=ks(xa,2,137948,0)|0;k[13693]=D;k[13687]=0;k[13672]=0;D=ks(xa,1,177185,0)|0;k[13619]=D;D=ks(xa,1,177253,0)|0;k[13620]=D;D=ks(xa,1,145890,0)|0;k[13621]=D;k[13639]=0;D=ks(xa,1,137668,0)|0;k[13632]=D;D=ks(xa,1,137677,0)|0;k[13633]=D;k[13634]=0;D=ks(xa,1,145884,0)|0;k[13636]=D;k[13637]=0;k[13640]=0;D=ks(xa,1,137649,0)|0;k[13643]=D;D=ks(xa,1,177213,0)|0;k[13641]=D;D=ks(xa,1,137712,0)|0;k[13642]=D;D=ks(xa,1,137724,0)|0;k[13645]=D;D=ks(xa,1,137588,0)|0;k[13644]=D;D=ks(xa,1,137729,0)|0;k[13646]=D;D=ks(xa,1,121693,0)|0;k[13647]=D;k[13638]=0;k[13650]=0;D=ks(xa,0,137649,0)|0;k[13614]=D;D=Hu(xa,121699,1)|0;qu(D,173447,280,1)|0;us(D,123349,123363)|0;A=~~+p[(k[q+8>>2]|0)+16>>3];B=~~+p[(k[u+8>>2]|0)+16>>3];w=(k[(k[wa>>2]|0)+116>>2]&1|0)==0;x=w?q:u;w=w?u:q;D=Rf(D,w)|0;E=Rf(xa,x)|0;if(G){q=0;u=0;while(1){e=b+(u+c<<2)|0;while(1){h=k[e>>2]|0;e=h+8|0;g=k[e>>2]|0;if(!(i[g+112>>0]|0)){g=e;break}else e=g+116|0}if((k[((k[h>>2]&3|0)==3?h:h+32|0)+28>>2]|0)==(w|0))e=Sf(xa,D,E,h)|0;else e=Sf(xa,E,D,h)|0;g=k[g>>2]|0;k[g+120>>2]=e;if(!q)if((i[g+44>>0]|0)==0?(i[g+84>>0]|0)==0:0)k[(k[e+8>>2]|0)+120>>2]=h;else e=0;else e=q;u=u+1|0;if((u|0)==(d|0))break;else q=e}if(e)F=e;else za=54}else za=54;if((za|0)==54)F=Ls(xa,D,E,0,1)|0;vs(F,k[13656]|0,121703)|0;y=k[C>>2]|0;k[y+144>>2]=k[(k[wa>>2]|0)+144>>2];k[y+188>>2]=xa;UB(xa,f);of(xa);oh(xa,0);lg(xa,0);Ug(xa,0);y=w+8|0;h=k[y>>2]|0;g=k[x+8>>2]|0;z=D+8|0;q=k[z>>2]|0;w=q+16|0;u=k[E+8>>2]|0;x=u+16|0;e=k[(k[C>>2]|0)+192>>2]|0;if(e){m=+(A|0);n=+(~~((+p[w>>3]+ +p[x>>3])*.5)|0);l=+(B|0);j=+(~~((+p[h+16>>3]-+p[h+96>>3]+ +p[g+16>>3]+ +p[g+88>>3])*.5)|0);h=q+24|0;g=u+24|0;do{do if((e|0)!=(D|0))if((e|0)==(E|0)){p[g>>3]=l;p[x>>3]=n;break}else{p[(k[e+8>>2]|0)+24>>3]=j;break}else{p[h>>3]=m;p[w>>3]=n}while(0);e=k[(k[e+8>>2]|0)+164>>2]|0}while((e|0)!=0)}Mh(xa);zf(xa,0);tz(xa);g=k[y>>2]|0;e=k[z>>2]|0;j=+p[g+24>>3];if(!(k[(k[wa>>2]|0)+116>>2]&1)){l=j-+p[e+24>>3];e=e+16|0}else{l=j+ +p[e+16>>3];e=e+24|0}j=+p[g+16>>3]-+p[e>>3];if(G){y=ya+16|0;z=ya+32|0;A=ya+48|0;B=ya+56|0;C=0;do{e=b+(C+c<<2)|0;while(1){h=k[e>>2]|0;e=h+8|0;g=k[e>>2]|0;if(!(i[g+112>>0]|0))break;else e=g+116|0}f=k[g+120>>2]|0;x=f+8|0;g=k[x>>2]|0;if(!((f|0)==(F|0)&(k[g+120>>2]|0)==0)){u=k[k[g+8>>2]>>2]|0;w=u+4|0;g=DA(h,k[w>>2]|0)|0;k[g+8>>2]=k[u+8>>2];f=k[(k[wa>>2]|0)+116>>2]&1;G=u+16|0;i[t>>0]=i[G>>0];i[t+1>>0]=i[G+1>>0];i[t+2>>0]=i[G+2>>0];i[t+3>>0]=i[G+3>>0];i[t+4>>0]=i[G+4>>0];i[t+5>>0]=i[G+5>>0];i[t+6>>0]=i[G+6>>0];i[t+7>>0]=i[G+7>>0];M=+p[t>>3];G=u+24|0;i[t>>0]=i[G>>0];i[t+1>>0]=i[G+1>>0];i[t+2>>0]=i[G+2>>0];i[t+3>>0]=i[G+3>>0];i[t+4>>0]=i[G+4>>0];i[t+5>>0]=i[G+5>>0];i[t+6>>0]=i[G+6>>0];i[t+7>>0]=i[G+7>>0];L=+p[t>>3];f=(f|0)==0;p[g+16>>3]=j+(f?M:L);p[g+24>>3]=l+(f?L:-M);k[g+12>>2]=k[u+12>>2];f=k[(k[wa>>2]|0)+116>>2]&1;G=u+32|0;i[t>>0]=i[G>>0];i[t+1>>0]=i[G+1>>0];i[t+2>>0]=i[G+2>>0];i[t+3>>0]=i[G+3>>0];i[t+4>>0]=i[G+4>>0];i[t+5>>0]=i[G+5>>0];i[t+6>>0]=i[G+6>>0];i[t+7>>0]=i[G+7>>0];M=+p[t>>3];G=u+40|0;i[t>>0]=i[G>>0];i[t+1>>0]=i[G+1>>0];i[t+2>>0]=i[G+2>>0];i[t+3>>0]=i[G+3>>0];i[t+4>>0]=i[G+4>>0];i[t+5>>0]=i[G+5>>0];i[t+6>>0]=i[G+6>>0];i[t+7>>0]=i[G+7>>0];L=+p[t>>3];f=(f|0)==0;p[g+32>>3]=j+(f?M:L);p[g+40>>3]=l+(f?L:-M);c:do if((k[w>>2]|0)>0){q=0;while(1){f=k[g>>2]|0;h=f+(q<<4)|0;E=k[u>>2]|0;G=k[(k[wa>>2]|0)+116>>2]&1;D=E+(q<<4)|0;i[t>>0]=i[D>>0];i[t+1>>0]=i[D+1>>0];i[t+2>>0]=i[D+2>>0];i[t+3>>0]=i[D+3>>0];i[t+4>>0]=i[D+4>>0];i[t+5>>0]=i[D+5>>0];i[t+6>>0]=i[D+6>>0];i[t+7>>0]=i[D+7>>0];M=+p[t>>3];E=E+(q<<4)+8|0;i[t>>0]=i[E>>0];i[t+1>>0]=i[E+1>>0];i[t+2>>0]=i[E+2>>0];i[t+3>>0]=i[E+3>>0];i[t+4>>0]=i[E+4>>0];i[t+5>>0]=i[E+5>>0];i[t+6>>0]=i[E+6>>0];i[t+7>>0]=i[E+7>>0];L=+p[t>>3];G=(G|0)==0;p[h>>3]=j+(G?M:L);p[f+(q<<4)+8>>3]=l+(G?L:-M);k[ya>>2]=k[h>>2];k[ya+4>>2]=k[h+4>>2];k[ya+8>>2]=k[h+8>>2];k[ya+12>>2]=k[h+12>>2];h=q+1|0;if((h|0)>=(k[w>>2]|0))break;G=k[g>>2]|0;f=G+(h<<4)|0;D=k[u>>2]|0;E=k[(k[wa>>2]|0)+116>>2]&1;Ba=D+(h<<4)|0;i[t>>0]=i[Ba>>0];i[t+1>>0]=i[Ba+1>>0];i[t+2>>0]=i[Ba+2>>0];i[t+3>>0]=i[Ba+3>>0];i[t+4>>0]=i[Ba+4>>0];i[t+5>>0]=i[Ba+5>>0];i[t+6>>0]=i[Ba+6>>0];i[t+7>>0]=i[Ba+7>>0];M=+p[t>>3];D=D+(h<<4)+8|0;i[t>>0]=i[D>>0];i[t+1>>0]=i[D+1>>0];i[t+2>>0]=i[D+2>>0];i[t+3>>0]=i[D+3>>0];i[t+4>>0]=i[D+4>>0];i[t+5>>0]=i[D+5>>0];i[t+6>>0]=i[D+6>>0];i[t+7>>0]=i[D+7>>0];L=+p[t>>3];E=(E|0)==0;p[f>>3]=j+(E?M:L);p[G+(h<<4)+8>>3]=l+(E?L:-M);k[y>>2]=k[f>>2];k[y+4>>2]=k[f+4>>2];k[y+8>>2]=k[f+8>>2];k[y+12>>2]=k[f+12>>2];f=q+2|0;G=k[g>>2]|0;E=G+(f<<4)|0;h=k[u>>2]|0;D=k[(k[wa>>2]|0)+116>>2]&1;Ba=h+(f<<4)|0;i[t>>0]=i[Ba>>0];i[t+1>>0]=i[Ba+1>>0];i[t+2>>0]=i[Ba+2>>0];i[t+3>>0]=i[Ba+3>>0];i[t+4>>0]=i[Ba+4>>0];i[t+5>>0]=i[Ba+5>>0];i[t+6>>0]=i[Ba+6>>0];i[t+7>>0]=i[Ba+7>>0];M=+p[t>>3];h=h+(f<<4)+8|0;i[t>>0]=i[h>>0];i[t+1>>0]=i[h+1>>0];i[t+2>>0]=i[h+2>>0];i[t+3>>0]=i[h+3>>0];i[t+4>>0]=i[h+4>>0];i[t+5>>0]=i[h+5>>0];i[t+6>>0]=i[h+6>>0];i[t+7>>0]=i[h+7>>0];L=+p[t>>3];D=(D|0)==0;p[E>>3]=j+(D?M:L);p[G+(f<<4)+8>>3]=l+(D?L:-M);k[z>>2]=k[E>>2];k[z+4>>2]=k[E+4>>2];k[z+8>>2]=k[E+8>>2];k[z+12>>2]=k[E+12>>2];q=q+3|0;E=k[u>>2]|0;f=k[wa>>2]|0;G=k[f+116>>2]&1;D=E+(q<<4)|0;i[t>>0]=i[D>>0];i[t+1>>0]=i[D+1>>0];i[t+2>>0]=i[D+2>>0];i[t+3>>0]=i[D+3>>0];i[t+4>>0]=i[D+4>>0];i[t+5>>0]=i[D+5>>0];i[t+6>>0]=i[D+6>>0];i[t+7>>0]=i[D+7>>0];M=+p[t>>3];E=E+(q<<4)+8|0;i[t>>0]=i[E>>0];i[t+1>>0]=i[E+1>>0];i[t+2>>0]=i[E+2>>0];i[t+3>>0]=i[E+3>>0];i[t+4>>0]=i[E+4>>0];i[t+5>>0]=i[E+5>>0];i[t+6>>0]=i[E+6>>0];i[t+7>>0]=i[E+7>>0];L=+p[t>>3];G=(G|0)==0;p[A>>3]=j+(G?M:L);p[B>>3]=l+(G?L:-M);wx(f+16|0,ya);if((q|0)>=(k[w>>2]|0))break c}}while(0);g=k[(k[e>>2]|0)+96>>2]|0;if(g){f=k[(k[x>>2]|0)+96>>2]|0;Ba=k[(k[wa>>2]|0)+116>>2]&1;G=f+56|0;i[t>>0]=i[G>>0];i[t+1>>0]=i[G+1>>0];i[t+2>>0]=i[G+2>>0];i[t+3>>0]=i[G+3>>0];i[t+4>>0]=i[G+4>>0];i[t+5>>0]=i[G+5>>0];i[t+6>>0]=i[G+6>>0];i[t+7>>0]=i[G+7>>0];M=+p[t>>3];f=f+64|0;i[t>>0]=i[f>>0];i[t+1>>0]=i[f+1>>0];i[t+2>>0]=i[f+2>>0];i[t+3>>0]=i[f+3>>0];i[t+4>>0]=i[f+4>>0];i[t+5>>0]=i[f+5>>0];i[t+6>>0]=i[f+6>>0];i[t+7>>0]=i[f+7>>0];L=+p[t>>3];Ba=(Ba|0)==0;p[g+56>>3]=j+(Ba?M:L);p[g+64>>3]=l+(Ba?L:-M);Ba=k[(k[e>>2]|0)+96>>2]|0;i[Ba+81>>0]=1;EB(a,Ba)}}C=C+1|0}while((C|0)!=(d|0))}k[13678]=k[va>>2];k[13682]=k[H>>2];k[13683]=k[I>>2];k[13656]=k[N>>2];k[13657]=k[O>>2];k[13670]=k[P>>2];k[13669]=k[Q>>2];k[13668]=k[R>>2];k[13694]=k[S>>2];k[13686]=k[T>>2];k[13671]=k[U>>2];k[13681]=k[V>>2];k[13690]=k[W>>2];k[13689]=k[X>>2];k[13688]=k[Y>>2];k[13693]=k[Z>>2];k[13687]=k[_>>2];k[13672]=k[$>>2];k[13619]=k[aa>>2];k[13620]=k[ba>>2];k[13621]=k[ca>>2];k[13639]=k[da>>2];k[13632]=k[ea>>2];k[13633]=k[fa>>2];k[13634]=k[ga>>2];k[13636]=k[ha>>2];k[13637]=k[ia>>2];k[13640]=k[ja>>2];k[13643]=k[ka>>2];k[13641]=k[la>>2];k[13642]=k[ma>>2];k[13645]=k[na>>2];k[13644]=k[oa>>2];k[13646]=k[pa>>2];k[13647]=k[qa>>2];k[13638]=k[ra>>2];k[13650]=k[sa>>2];k[13614]=k[ua>>2];k[13605]=k[ta>>2];vP(va);pf(xa);Ys(xa)|0}else za=8;while(0);if((za|0)==8)Gf(u,q,b,c,d,f);r=Aa;return}function Ff(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0.0,i=0.0,j=0.0,l=0.0,m=0,n=0;m=r;r=r+32|0;n=m;If(n,a,b,d,0,e);k[f>>2]=k[n>>2];k[f+4>>2]=k[n+4>>2];k[f+8>>2]=k[n+8>>2];k[f+12>>2]=k[n+12>>2];k[f+16>>2]=k[n+16>>2];k[f+20>>2]=k[n+20>>2];k[f+24>>2]=k[n+24>>2];k[f+28>>2]=k[n+28>>2];j=+p[f>>3];l=+p[f+16>>3];k[f+48>>2]=4;if(!(g<<24>>24))HA(c,e,2,f,0);else GA(c,e,2,f,0);b=f+52|0;c=k[b>>2]|0;i=+p[f+56+(c+-1<<5)+24>>3];n=k[d+8>>2]|0;h=+p[n+24>>3]+ +p[(k[(k[a+8>>2]|0)+196>>2]|0)+(k[n+232>>2]<<6)+24>>3];if(j<l&i<h){k[b>>2]=c+1;p[f+56+(c<<5)>>3]=j;p[f+56+(c<<5)+8>>3]=i;p[f+56+(c<<5)+16>>3]=l;p[f+56+(c<<5)+24>>3]=h}r=m;return}function Gf(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0.0,j=0,l=0.0,m=0,n=0,o=0.0,q=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0,O=0;O=r;r=r+160|0;N=O;a=k[a+8>>2]|0;G=k[(k[c+(d<<2)>>2]|0)+8>>2]|0;H=G+16|0;i[t>>0]=i[H>>0];i[t+1>>0]=i[H+1>>0];i[t+2>>0]=i[H+2>>0];i[t+3>>0]=i[H+3>>0];i[t+4>>0]=i[H+4>>0];i[t+5>>0]=i[H+5>>0];i[t+6>>0]=i[H+6>>0];i[t+7>>0]=i[H+7>>0];I=+p[t>>3];H=G+24|0;i[t>>0]=i[H>>0];i[t+1>>0]=i[H+1>>0];i[t+2>>0]=i[H+2>>0];i[t+3>>0]=i[H+3>>0];i[t+4>>0]=i[H+4>>0];i[t+5>>0]=i[H+5>>0];i[t+6>>0]=i[H+6>>0];i[t+7>>0]=i[H+7>>0];M=+p[t>>3];H=a+16|0;i[t>>0]=i[H>>0];i[t+1>>0]=i[H+1>>0];i[t+2>>0]=i[H+2>>0];i[t+3>>0]=i[H+3>>0];i[t+4>>0]=i[H+4>>0];i[t+5>>0]=i[H+5>>0];i[t+6>>0]=i[H+6>>0];i[t+7>>0]=i[H+7>>0];L=+p[t>>3];H=a+24|0;i[t>>0]=i[H>>0];i[t+1>>0]=i[H+1>>0];i[t+2>>0]=i[H+2>>0];i[t+3>>0]=i[H+3>>0];i[t+4>>0]=i[H+4>>0];i[t+5>>0]=i[H+5>>0];i[t+6>>0]=i[H+6>>0];i[t+7>>0]=i[H+7>>0];L=I+L;M=M+ +p[t>>3];H=k[b+8>>2]|0;F=G+56|0;i[t>>0]=i[F>>0];i[t+1>>0]=i[F+1>>0];i[t+2>>0]=i[F+2>>0];i[t+3>>0]=i[F+3>>0];i[t+4>>0]=i[F+4>>0];i[t+5>>0]=i[F+5>>0];i[t+6>>0]=i[F+6>>0];i[t+7>>0]=i[F+7>>0];I=+p[t>>3];G=G+64|0;i[t>>0]=i[G>>0];i[t+1>>0]=i[G+1>>0];i[t+2>>0]=i[G+2>>0];i[t+3>>0]=i[G+3>>0];i[t+4>>0]=i[G+4>>0];i[t+5>>0]=i[G+5>>0];i[t+6>>0]=i[G+6>>0];i[t+7>>0]=i[G+7>>0];K=+p[t>>3];G=H+16|0;i[t>>0]=i[G>>0];i[t+1>>0]=i[G+1>>0];i[t+2>>0]=i[G+2>>0];i[t+3>>0]=i[G+3>>0];i[t+4>>0]=i[G+4>>0];i[t+5>>0]=i[G+5>>0];i[t+6>>0]=i[G+6>>0];i[t+7>>0]=i[G+7>>0];J=+p[t>>3];H=H+24|0;i[t>>0]=i[H>>0];i[t+1>>0]=i[H+1>>0];i[t+2>>0]=i[H+2>>0];i[t+3>>0]=i[H+3>>0];i[t+4>>0]=i[H+4>>0];i[t+5>>0]=i[H+5>>0];i[t+6>>0]=i[H+6>>0];i[t+7>>0]=i[H+7>>0];J=I+J;K=K+ +p[t>>3];if((e|0)<=1){if((e|0)>0){h=0.0;I=0.0;g=4}}else{I=+p[a+80>>3];h=I*.5;I=I/+(e+-1|0);g=4}if((g|0)==4){g=(f&-9|0)==2;j=N+8|0;l=(L*2.0+J)/3.0;m=N+16|0;n=N+24|0;o=(L+J*2.0)/3.0;q=N+32|0;s=N+40|0;u=N+48|0;v=N+56|0;w=N+64|0;x=N+72|0;y=N+80|0;z=N+88|0;A=N+96|0;B=N+104|0;C=N+112|0;D=N+120|0;E=N+128|0;F=N+136|0;G=N+144|0;H=N+152|0;h=M-h;b=0;while(1){a=k[c+(b+d<<2)>>2]|0;p[N>>3]=L;p[j>>3]=M;if(g){p[m>>3]=l;p[n>>3]=h;p[q>>3]=o;p[s>>3]=h;p[u>>3]=J;p[v>>3]=K;f=4}else{p[m>>3]=L;p[n>>3]=M;p[q>>3]=l;p[s>>3]=h;p[u>>3]=l;p[v>>3]=h;p[w>>3]=l;p[x>>3]=h;p[y>>3]=o;p[z>>3]=h;p[A>>3]=o;p[B>>3]=h;p[C>>3]=o;p[D>>3]=h;p[E>>3]=J;p[F>>3]=K;p[G>>3]=J;p[H>>3]=K;f=10}EA(a,k[((k[a>>2]&3|0)==2?a:a+-32|0)+28>>2]|0,N,f,49504);b=b+1|0;if((b|0)==(e|0))break;else h=I+h}}r=O;return}function Hf(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0.0,i=0.0,j=0.0,l=0.0,m=0,n=0;m=r;r=r+32|0;n=m;If(n,a,b,d,0,e);k[f>>2]=k[n>>2];k[f+4>>2]=k[n+4>>2];k[f+8>>2]=k[n+8>>2];k[f+12>>2]=k[n+12>>2];k[f+16>>2]=k[n+16>>2];k[f+20>>2]=k[n+20>>2];k[f+24>>2]=k[n+24>>2];k[f+28>>2]=k[n+28>>2];j=+p[f>>3];l=+p[f+16>>3];k[f+48>>2]=1;if(!(g<<24>>24))HA(c,e,2,f,0);else GA(c,e,2,f,0);b=f+52|0;c=k[b>>2]|0;i=+p[f+56+(c+-1<<5)+8>>3];n=k[d+8>>2]|0;h=+p[n+24>>3]-+p[(k[(k[a+8>>2]|0)+196>>2]|0)+(k[n+232>>2]<<6)+24>>3];if(j<l&h<i){k[b>>2]=c+1;p[f+56+(c<<5)>>3]=j;p[f+56+(c<<5)+8>>3]=h;p[f+56+(c<<5)+16>>3]=l;p[f+56+(c<<5)+24>>3]=i}r=m;return}function If(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0.0,h=0,j=0,l=0.0,m=0,n=0.0,o=0.0,q=0;q=k[d+8>>2]|0;o=+p[q+16>>3];l=o-+p[q+88>>3]+-4.0;j=Of(b,d,e,f,-1)|0;if(!j){m=~~(l+(l>=0.0?.5:-.5));h=k[c>>2]|0;h=(m|0)<(h|0)?m:h}else{h=Pf(b,d,j)|0;do if(!h){m=k[j+8>>2]|0;g=+p[m+16>>3]+ +p[m+240>>3];if(!(i[m+156>>0]|0)){g=g+ +(k[(k[b+8>>2]|0)+248>>2]|0)*.5;break}else{g=g+ +(k[c+8>>2]|0);break}}else g=+p[(k[h+8>>2]|0)+32>>3]+ +(k[c+8>>2]|0);while(0);n=g<l?g:l;h=~~(n+(n>=0.0?.5:-.5))}n=+(h|0);m=(i[q+156>>0]|0)==1;if(m?(k[q+104>>2]|0)!=0:0)l=o+10.0;else l=o+ +p[q+96>>3]+4.0;j=Of(b,d,e,f,1)|0;if(!j){d=~~(l+(l>=0.0?.5:-.5));h=k[c+4>>2]|0;h=(d|0)>(h|0)?d:h}else{h=Pf(b,d,j)|0;do if(!h){d=k[j+8>>2]|0;g=+p[d+16>>3]-+p[d+88>>3];if(!(i[d+156>>0]|0)){g=g-+(k[(k[b+8>>2]|0)+248>>2]|0)*.5;break}else{g=g-+(k[c+8>>2]|0);break}}else g=+p[(k[h+8>>2]|0)+16>>3]-+(k[c+8>>2]|0);while(0);l=g>l?g:l;h=~~(l+(l>=0.0?.5:-.5))}g=+(h|0);if(m?(k[q+104>>2]|0)!=0:0){g=g-+p[q+96>>3];if(g<n)g=o}o=+p[q+24>>3];q=k[q+232>>2]|0;b=k[(k[b+8>>2]|0)+196>>2]|0;l=o-+p[b+(q<<6)+16>>3];o=o+ +p[b+(q<<6)+24>>3];p[a>>3]=n;p[a+8>>3]=l;p[a+16>>3]=g;p[a+24>>3]=o;return}function Jf(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,g=0.0,h=0.0,i=0,j=0,l=0,m=0,n=0;m=k[b+16>>2]|0;i=m+(d<<5)|0;h=+p[i>>3];j=m+(d<<5)+8|0;g=+p[j>>3];l=m+(d<<5)+16|0;f=+p[l>>3];m=m+(d<<5)+24|0;e=+p[m>>3];if(h==f){c=k[(k[c+8>>2]|0)+196>>2]|0;n=d+1|0;h=+(k[b>>2]|0);g=+p[(k[(k[k[c+(n<<6)+4>>2]>>2]|0)+8>>2]|0)+24>>3]+ +p[c+(n<<6)+24>>3];f=+(k[b+4>>2]|0);e=+p[(k[(k[k[c+(d<<6)+4>>2]>>2]|0)+8>>2]|0)+24>>3]-+p[c+(d<<6)+16>>3];p[i>>3]=h;p[j>>3]=g;p[l>>3]=f;p[m>>3]=e}p[a>>3]=h;p[a+8>>3]=g;p[a+16>>3]=f;p[a+24>>3]=e;return}function Kf(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0.0,h=0,i=0.0,j=0,l=0,m=0,n=0,o=0,q=0;q=r;r=r+32|0;j=q;h=Mf(b,-1)|0;b=Mf(b,1)|0;if(!((h|0)!=0?(OA(h)|0)==0:0))o=3;do if((o|0)==3){if((b|0)!=0?(OA(b)|0)==0:0)break;h=Nf(c,-1)|0;b=Nf(c,1)|0;if((h|0)!=0?(OA(h)|0)==0:0)break;if((b|0)!=0?(OA(b)|0)==0:0)break;b=d+52|0;if((k[b>>2]|0)>0){h=0;do{n=d+56+(h<<5)|0;k[j>>2]=k[n>>2];k[j+4>>2]=k[n+4>>2];k[j+8>>2]=k[n+8>>2];k[j+12>>2]=k[n+12>>2];k[j+16>>2]=k[n+16>>2];k[j+20>>2]=k[n+20>>2];k[j+24>>2]=k[n+24>>2];k[j+28>>2]=k[n+28>>2];FA(a,j);h=h+1|0}while((h|0)<(k[b>>2]|0))}l=a+80|0;c=k[l>>2]|0;m=c+1|0;h=m+f|0;n=h+-3|0;if((f|0)>0){b=0;do{d=1104+(b<<5)|0;k[j>>2]=k[d>>2];k[j+4>>2]=k[d+4>>2];k[j+8>>2]=k[d+8>>2];k[j+12>>2]=k[d+12>>2];k[j+16>>2]=k[d+16>>2];k[j+20>>2]=k[d+20>>2];k[j+24>>2]=k[d+24>>2];k[j+28>>2]=k[d+28>>2];FA(a,j);b=b+1|0}while((b|0)!=(f|0))}b=k[e+52>>2]|0;if((b|0)>0)do{f=b;b=b+-1|0;d=e+56+(b<<5)|0;k[j>>2]=k[d>>2];k[j+4>>2]=k[d+4>>2];k[j+8>>2]=k[d+8>>2];k[j+12>>2]=k[d+12>>2];k[j+16>>2]=k[d+16>>2];k[j+20>>2]=k[d+20>>2];k[j+24>>2]=k[d+24>>2];k[j+28>>2]=k[d+28>>2];FA(a,j)}while((f|0)>1);d=h+-2|0;if((d|0)>=(m|0)){f=k[a+84>>2]|0;do{h=f+(c<<5)|0;i=+p[h>>3];if(!(c-m&1)){b=f+(c<<5)+16|0;g=+p[b>>3];if(i>=g){e=~~((i+g)*.5);p[h>>3]=+(e+-8|0);p[b>>3]=+(e+8|0)}}else{b=f+(c<<5)+16|0;g=+p[b>>3];if(i+16.0>g){e=~~((i+g)*.5);p[h>>3]=+(e+-8|0);p[b>>3]=+(e+8|0)}}c=c+1|0}while((c|0)<(d|0))}b=k[l>>2]|0;if((b|0)>1){l=k[a+84>>2]|0;f=b+-1|0;j=0;do{h=l+(j<<5)|0;c=j;j=j+1|0;d=l+(j<<5)|0;if(!((c|0)<(m|0)|(c|0)>(n|0))?(c-m&1|0)==0:0){g=+p[h>>3]+16.0;b=l+(j<<5)+16|0;if(g>+p[b>>3])p[b>>3]=g;g=+p[l+(c<<5)+16>>3]+-16.0;if(g<+p[d>>3])p[d>>3]=g}else o=31;if(((o|0)==31?(o=0,(c|0)<(n|0)&(j|0)>=(m|0)):0)?(j-m&1|0)==0:0){g=+p[l+(j<<5)+16>>3];if(+p[h>>3]+16.0>g)p[h>>3]=g+-16.0;b=l+(c<<5)+16|0;g=+p[d>>3];if(+p[b>>3]+-16.0<g)p[b>>3]=g+16.0}}while((j|0)!=(f|0))}}while(0);r=q;return}function Lf(a,b){a=a|0;b=b|0;var c=0.0,d=0,e=0.0,f=0,g=0,h=0,j=0,l=0;d=k[((k[a>>2]&3|0)==2?a:a+-32|0)+28>>2]|0;a=d+8|0;a:do if((i[(k[a>>2]|0)+156>>0]|0)==1){j=b+84|0;h=b+80|0;f=0;b=d;do{if((Rb[k[49508>>2]&63](b)|0)<<24>>24)break a;g=k[h>>2]|0;b:do if((f|0)<(g|0)){d=k[j>>2]|0;c=+p[(k[a>>2]|0)+24>>3];b=f;while(1){if(!(+p[d+(b<<5)+8>>3]>c)){f=b;break b}b=b+1|0;if((b|0)>=(g|0)){f=b;break}}}while(0);if((f|0)>=(g|0))break a;b=k[j>>2]|0;a=k[a>>2]|0;do if(!(+p[b+(f<<5)+24>>3]<+p[a+24>>3])){e=+p[b+(f<<5)>>3];d=~~e;c=+p[b+(f<<5)+16>>3];if(!(k[a+104>>2]|0)){g=~~((e+c)*.5);p[a+16>>3]=+(g|0);p[a+88>>3]=+(g-d|0);p[a+96>>3]=+(~~c-g|0);break}else{b=~~c;g=a+96|0;l=~~(c+ +p[g>>3]);p[a+16>>3]=+(b|0);p[a+88>>3]=+(b-d|0);p[g>>3]=+(l-b|0);break}}while(0);b=k[k[a+180>>2]>>2]|0;b=k[((k[b>>2]&3|0)==2?b:b+-32|0)+28>>2]|0;a=b+8|0}while((i[(k[a>>2]|0)+156>>0]|0)==1)}while(0);return}function Mf(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;c=k[a>>2]&3;h=k[(k[(k[((c|0)==3?a:a+32|0)+28>>2]|0)+8>>2]|0)+180>>2]|0;d=k[h>>2]|0;if(!d)c=0;else{g=k[(k[(k[((c|0)==2?a:a+-32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0;c=0;f=0;do{e=k[(k[(k[((k[d>>2]&3|0)==2?d:d+-32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0;do if((ha(e-g|0,b)|0)>=1){a=k[d+8>>2]|0;if(!(k[a+8>>2]|0)){a=k[a+116>>2]|0;if(!a)break;if(!(k[(k[a+8>>2]|0)+8>>2]|0))break}if((c|0)!=0?(ha((k[(k[(k[((k[c>>2]&3|0)==2?c:c+-32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0)-e|0,b)|0)<=0:0)break;c=d}while(0);f=f+1|0;d=k[h+(f<<2)>>2]|0}while((d|0)!=0)}return c|0}function Nf(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;c=k[a>>2]&3;h=k[(k[(k[((c|0)==2?a:a+-32|0)+28>>2]|0)+8>>2]|0)+172>>2]|0;d=k[h>>2]|0;if(!d)c=0;else{g=k[(k[(k[((c|0)==3?a:a+32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0;c=0;f=0;do{e=k[(k[(k[((k[d>>2]&3|0)==3?d:d+32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0;do if((ha(e-g|0,b)|0)>=1){a=k[d+8>>2]|0;if(!(k[a+8>>2]|0)){a=k[a+116>>2]|0;if(!a)break;if(!(k[(k[a+8>>2]|0)+8>>2]|0))break}if((c|0)!=0?(ha((k[(k[(k[((k[c>>2]&3|0)==3?c:c+32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0)-e|0,b)|0)<=0:0)break;c=d}while(0);f=f+1|0;d=k[h+(f<<2)>>2]|0}while((d|0)!=0)}return c|0}function Of(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;q=k[b+8>>2]|0;f=k[q+232>>2]|0;b=k[(k[a+8>>2]|0)+196>>2]|0;q=k[q+236>>2]|0;a=q+e|0;a:do if((a|0)>-1){p=k[b+(f<<6)>>2]|0;m=b+(f<<6)+4|0;n=(d|0)==0;o=(c|0)!=0;while(1){if((a|0)>=(p|0)){b=0;break a}b=k[(k[m>>2]|0)+(a<<2)>>2]|0;j=k[b+8>>2]|0;switch(i[j+156>>0]|0){case 0:break a;case 1:{if(k[j+104>>2]|0)break a;break}default:{}}l=(k[j+236>>2]|0)>(q|0);if((k[j+184>>2]|0)!=1)break a;b:do if(n)r=17;else{h=0;f=k[k[j+180>>2]>>2]|0;g=d;while(1){f=k[((k[f>>2]&3|0)==2?f:f+-32|0)+28>>2]|0;g=k[((k[g>>2]&3|0)==2?g:g+-32|0)+28>>2]|0;if((f|0)==(g|0)){r=17;break b}f=k[f+8>>2]|0;g=k[g+8>>2]|0;if(l^(k[f+236>>2]|0)>(k[g+236>>2]|0))break b;if((k[f+184>>2]|0)!=1){r=17;break b}if(!(i[f+156>>0]|0)){r=17;break b}if((k[g+184>>2]|0)!=1){r=17;break b}if(!(i[g+156>>0]|0)){r=17;break b}h=h+1|0;if((h|0)>=2){r=17;break}else{f=k[k[f+180>>2]>>2]|0;g=k[k[g+180>>2]>>2]|0}}}while(0);c:do if((r|0)==17){r=0;if(!(o&(k[j+176>>2]|0)==1))break a;h=0;g=k[k[j+172>>2]>>2]|0;f=c;while(1){g=k[((k[g>>2]&3|0)==3?g:g+32|0)+28>>2]|0;f=k[((k[f>>2]&3|0)==3?f:f+32|0)+28>>2]|0;if((g|0)==(f|0))break a;g=k[g+8>>2]|0;f=k[f+8>>2]|0;if(l^(k[g+236>>2]|0)>(k[f+236>>2]|0))break c;if((k[g+176>>2]|0)!=1)break a;if(!(i[g+156>>0]|0))break a;if((k[f+176>>2]|0)!=1)break a;if(!(i[f+156>>0]|0))break a;h=h+1|0;if((h|0)>=2)break a;else{g=k[k[g+172>>2]>>2]|0;f=k[k[f+172>>2]>>2]|0}}}while(0);a=a+e|0;if((a|0)<=-1){b=0;break a}}}else b=0;while(0);return b|0}function Pf(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0.0,l=0.0,m=0.0,n=0.0,o=0;b=k[b+8>>2]|0;if(!(i[b+156>>0]|0)){g=k[b+212>>2]|0;f=g}else{g=k[(k[(k[k[b+180>>2]>>2]|0)+8>>2]|0)+116>>2]|0;e=k[g>>2]&3;f=k[(k[(k[((e|0)==2?g:g+-32|0)+28>>2]|0)+8>>2]|0)+212>>2]|0;g=k[(k[(k[((e|0)==3?g:g+32|0)+28>>2]|0)+8>>2]|0)+212>>2]|0}e=k[c+8>>2]|0;if(!(i[e+156>>0]|0)){o=k[e+212>>2]|0;o=(o|0)==(a|0)?0:o;return ((o|0)==(f|0)|((o|0)==0|(o|0)==(g|0))?0:o)|0}c=k[(k[(k[k[e+180>>2]>>2]|0)+8>>2]|0)+116>>2]|0;d=k[c>>2]&3;b=k[(k[(k[((d|0)==3?c:c+32|0)+28>>2]|0)+8>>2]|0)+212>>2]|0;b=(b|0)==(a|0)?0:b;if(!((((!((b|0)==(f|0)|((b|0)==0|(b|0)==(g|0)))?(h=k[b+8>>2]|0,j=+p[e+16>>3],+p[h+16>>3]<=j):0)?j<=+p[h+32>>3]:0)?(l=+p[e+24>>3],+p[h+24>>3]<=l):0)?l<=+p[h+40>>3]:0)){b=k[(k[(k[((d|0)==2?c:c+-32|0)+28>>2]|0)+8>>2]|0)+212>>2]|0;b=(b|0)==(a|0)?0:b;if(((!((b|0)==(f|0)|((b|0)==0|(b|0)==(g|0)))?(o=k[b+8>>2]|0,m=+p[e+16>>3],+p[o+16>>3]<=m):0)?m<=+p[o+32>>3]:0)?(n=+p[e+24>>3],+p[o+24>>3]<=n):0)b=n<=+p[o+40>>3]?b:0;else b=0}return b|0}function Qf(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0.0,f=0.0,g=0.0;c=k[(k[(k[a>>2]|0)+8>>2]|0)+96>>2]|0;a=k[(k[(k[b>>2]|0)+8>>2]|0)+96>>2]|0;b=(a|0)!=0;if(c)if(b?(d=+p[c+24>>3],e=+p[c+32>>3],f=+p[a+24>>3],g=+p[a+32>>3],!(d>f)):0)if(!(d<f))if(e>g)a=-1;else a=e<g&1;else a=1;else a=-1;else a=b&1;return a|0}function Rf(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=r;r=r+16|0;c=d;a=Qt(a,ht(b)|0,1)|0;qu(a,173424,304,1)|0;xs(b,a)|0;if((Qz(b)|0)==2){e=b+8|0;b=Cy((uO(k[k[(k[e>>2]|0)+104>>2]>>2]|0)|0)+3|0)|0;k[c>>2]=k[k[(k[e>>2]|0)+104>>2]>>2];TN(b,121709,c)|0;us(a,145884,b)|0}r=d;return a|0}function Sf(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;b=Ls(a,b,c,0,1)|0;qu(b,173717,176,1)|0;xs(d,b)|0;return b|0}function Tf(a){a=a|0;var b=0,c=0,d=0;while(1){b=k[(k[a+8>>2]|0)+116>>2]|0;if(!b)break;else a=b}b=k[a>>2]&3;c=k[(k[((b|0)==2?a:a+-32|0)+28>>2]|0)+8>>2]|0;d=k[c+232>>2]|0;a=k[(k[((b|0)==3?a:a+32|0)+28>>2]|0)+8>>2]|0;b=k[a+232>>2]|0;if((d|0)<=(b|0))if((d|0)<(b|0))a=1;else a=(k[c+236>>2]|0)<(k[a+236>>2]|0)&1;else a=0;return a|0}function Uf(a){a=a|0;a=k[a+8>>2]|0;if((i[a+156>>0]|0)==1)if((k[a+176>>2]|0)>1)a=1;else a=(k[a+184>>2]|0)>1&1;else a=0;return a|0}function Vf(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;c=r;r=r+16|0;d=c+8|0;e=c;g=(k[a+8>>2]|0)+180|0;f=(k[b+8>>2]|0)+172|0;k[e>>2]=k[g>>2];k[e+4>>2]=k[g+4>>2];k[d>>2]=k[f>>2];k[d+4>>2]=k[f+4>>2];b=kg(a,e,b,d)|0;r=c;return b|0}function Wf(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;c=r;r=r+16|0;d=c+8|0;e=c;g=(k[a+8>>2]|0)+188|0;f=(k[b+8>>2]|0)+196|0;k[e>>2]=k[g>>2];k[e+4>>2]=k[g+4>>2];k[d>>2]=k[f>>2];k[d+4>>2]=k[f+4>>2];b=kg(a,e,b,d)|0;r=c;return b|0}function Xf(a){a=a|0;var b=0,c=0,d=0;d=a+32|0;c=k[(k[((k[a>>2]&3|0)==3?a:d)+28>>2]|0)+8>>2]|0;b=k[c+180>>2]|0;c=k[c+184>>2]|0;if(!b)b=Cy((c<<2)+8|0)|0;else b=Ey(b,(c<<2)+8|0)|0;k[(k[(k[((k[a>>2]&3|0)==3?a:d)+28>>2]|0)+8>>2]|0)+180>>2]=b;b=(k[(k[((k[a>>2]&3|0)==3?a:d)+28>>2]|0)+8>>2]|0)+184|0;c=k[b>>2]|0;k[b>>2]=c+1;k[(k[(k[(k[((k[a>>2]&3|0)==3?a:d)+28>>2]|0)+8>>2]|0)+180>>2]|0)+(c<<2)>>2]=a;d=k[(k[((k[a>>2]&3|0)==3?a:d)+28>>2]|0)+8>>2]|0;k[(k[d+180>>2]|0)+(k[d+184>>2]<<2)>>2]=0;d=a+-32|0;c=k[(k[((k[a>>2]&3|0)==2?a:d)+28>>2]|0)+8>>2]|0;b=k[c+172>>2]|0;c=k[c+176>>2]|0;if(!b)b=Cy((c<<2)+8|0)|0;else b=Ey(b,(c<<2)+8|0)|0;k[(k[(k[((k[a>>2]&3|0)==2?a:d)+28>>2]|0)+8>>2]|0)+172>>2]=b;b=(k[(k[((k[a>>2]&3|0)==2?a:d)+28>>2]|0)+8>>2]|0)+176|0;c=k[b>>2]|0;k[b>>2]=c+1;k[(k[(k[(k[((k[a>>2]&3|0)==2?a:d)+28>>2]|0)+8>>2]|0)+172>>2]|0)+(c<<2)>>2]=a;d=k[(k[((k[a>>2]&3|0)==2?a:d)+28>>2]|0)+8>>2]|0;k[(k[d+172>>2]|0)+(k[d+176>>2]<<2)>>2]=0;return a|0}function Yf(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;e=a+4|0;f=k[e>>2]|0;a:do if((f|0)>0){g=k[a>>2]|0;d=0;while(1){c=g+(d<<2)|0;if((k[c>>2]|0)==(b|0))break;d=d+1|0;if((d|0)>=(f|0))break a}f=f+-1|0;k[e>>2]=f;k[c>>2]=k[g+(f<<2)>>2];k[(k[a>>2]|0)+(f<<2)>>2]=0}while(0);return}function Zf(a){a=a|0;if(!a)Wa(121714,121724,117,121733);else{Yf((k[(k[((k[a>>2]&3|0)==3?a:a+32|0)+28>>2]|0)+8>>2]|0)+180|0,a);Yf((k[(k[((k[a>>2]&3|0)==2?a:a+-32|0)+28>>2]|0)+8>>2]|0)+172|0,a);return}}function _f(a){a=a|0;var b=0,c=0,d=0;d=a+32|0;c=k[(k[((k[a>>2]&3|0)==3?a:d)+28>>2]|0)+8>>2]|0;b=k[c+204>>2]|0;c=k[c+208>>2]|0;if(!b)b=Cy((c<<2)+8|0)|0;else b=Ey(b,(c<<2)+8|0)|0;k[(k[(k[((k[a>>2]&3|0)==3?a:d)+28>>2]|0)+8>>2]|0)+204>>2]=b;b=(k[(k[((k[a>>2]&3|0)==3?a:d)+28>>2]|0)+8>>2]|0)+208|0;c=k[b>>2]|0;k[b>>2]=c+1;k[(k[(k[(k[((k[a>>2]&3|0)==3?a:d)+28>>2]|0)+8>>2]|0)+204>>2]|0)+(c<<2)>>2]=a;a=k[(k[((k[a>>2]&3|0)==3?a:d)+28>>2]|0)+8>>2]|0;k[(k[a+204>>2]|0)+(k[a+208>>2]<<2)>>2]=0;return}function $f(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;e=k[(k[((k[a>>2]&3|0)==3?a:a+32|0)+28>>2]|0)+8>>2]|0;f=e+204|0;e=e+208|0;b=k[e>>2]|0;c=k[f>>2]|0;a:do if((b|0)<=0)if(!c){b=Cy((b<<2)+8|0)|0;g=7}else g=5;else{d=0;while(1){if((k[c+(d<<2)>>2]|0)==(a|0))break a;d=d+1|0;if((d|0)>=(b|0)){g=5;break}}}while(0);if((g|0)==5){b=Ey(c,(b<<2)+8|0)|0;g=7}if((g|0)==7){k[f>>2]=b;d=k[e>>2]|0;g=d+1|0;k[e>>2]=g;k[b+(d<<2)>>2]=a;k[(k[f>>2]|0)+(g<<2)>>2]=0}return}function ag(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,l=0,m=0,n=0;m=By(64)|0;d=m+32|0;k[d>>2]=k[d>>2]|3;k[m>>2]=k[m>>2]&-4|2;e=By(176)|0;n=m+8|0;k[n>>2]=e;k[((k[m>>2]&3|0)==3?m:d)+28>>2]=a;g=m+-32|0;k[((k[m>>2]&3|0)==2?m:g)+28>>2]=b;i[e+112>>0]=1;if(!c){k[e+156>>2]=1;j[e+154>>1]=1;j[e+168>>1]=1;j[e+170>>1]=1}else{k[m>>2]=k[m>>2]&15|k[c>>2]&-16;k[d>>2]=k[d>>2]&15|k[c>>2]&-16;l=c+8|0;f=k[l>>2]|0;j[e+168>>1]=j[f+168>>1]|0;j[e+154>>1]=j[f+154>>1]|0;k[e+156>>2]=k[f+156>>2];j[e+170>>1]=j[f+170>>1]|0;a=k[((k[m>>2]&3|0)==3?m:d)+28>>2]|0;b=k[c>>2]&3;h=c+32|0;if((a|0)!=(k[((b|0)==3?c:h)+28>>2]|0)){d=c+-32|0;if((a|0)==(k[((b|0)==2?c:d)+28>>2]|0)){e=e+16|0;a=f+56|0;b=e+40|0;do{k[e>>2]=k[a>>2];e=e+4|0;a=a+4|0}while((e|0)<(b|0))}}else{e=e+16|0;a=f+16|0;b=e+40|0;do{k[e>>2]=k[a>>2];e=e+4|0;a=a+4|0}while((e|0)<(b|0));d=c+-32|0}a=k[((k[m>>2]&3|0)==2?m:g)+28>>2]|0;b=k[c>>2]&3;if((a|0)!=(k[((b|0)==2?c:d)+28>>2]|0)){if((a|0)==(k[((b|0)==3?c:h)+28>>2]|0)){e=(k[n>>2]|0)+56|0;a=(k[l>>2]|0)+16|0;b=e+40|0;do{k[e>>2]=k[a>>2];e=e+4|0;a=a+4|0}while((e|0)<(b|0))}}else{e=(k[n>>2]|0)+56|0;a=(k[l>>2]|0)+56|0;b=e+40|0;do{k[e>>2]=k[a>>2];e=e+4|0;a=a+4|0}while((e|0)<(b|0))}a=(k[l>>2]|0)+172|0;if(!(k[a>>2]|0))k[a>>2]=m;k[(k[n>>2]|0)+116>>2]=c}return m|0}function bg(a,b,c){a=a|0;b=b|0;c=c|0;return Xf(ag(a,b,c)|0)|0}function cg(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;a=(k[a+8>>2]|0)+192|0;e=k[a>>2]|0;c=k[b+8>>2]|0;k[c+164>>2]=e;d=e;if(e)k[(k[d+8>>2]|0)+168>>2]=b;k[a>>2]=b;k[c+168>>2]=0;if((d|0)==(b|0))Wa(121750,121724,215,121766);else return}function dg(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;if((a|0)==(b|0))Wa(121776,121724,220,121783);d=k[b+8>>2]|0;c=d+164|0;if(k[c>>2]|0)Wa(121796,121724,221,121783);e=(k[a+8>>2]|0)+164|0;k[c>>2]=k[e>>2];c=k[e>>2]|0;if(c)k[(k[c+8>>2]|0)+168>>2]=b;k[d+168>>2]=a;k[e>>2]=b;return}function eg(a,b){a=a|0;b=b|0;var c=0,d=0;d=(k[a+8>>2]|0)+192|0;a=k[d>>2]|0;if(!((a|0)==0|(a|0)==(b|0)))do a=k[(k[a+8>>2]|0)+164>>2]|0;while(!((a|0)==0|(a|0)==(b|0)));if(!a)Wa(121815,121724,231,121836);a=k[b+8>>2]|0;b=k[a+164>>2]|0;c=b;a=a+168|0;if(b)k[(k[b+8>>2]|0)+168>>2]=k[a>>2];a=k[a>>2]|0;if(!a)k[d>>2]=c;else k[(k[a+8>>2]|0)+164>>2]=c;return}function fg(a){a=a|0;var b=0,c=0,d=0,e=0;b=By(52)|0;k[b>>2]=k[b>>2]&-4|1;e=By(304)|0;c=b+8|0;k[c>>2]=e;e=au(a)|0;k[b+12>>2]=e;e=k[c>>2]|0;i[e+156>>0]=1;p[e+96>>3]=1.0;p[e+88>>3]=1.0;p[e+80>>3]=1.0;k[e+216>>2]=1;k[e+176>>2]=0;e=By(20)|0;d=k[c>>2]|0;k[d+172>>2]=e;k[d+184>>2]=0;d=By(20)|0;k[(k[c>>2]|0)+180>>2]=d;cg(a,b);a=(k[a+8>>2]|0)+232|0;k[a>>2]=(k[a>>2]|0)+1;return b|0}function gg(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=b+32|0;d=k[(k[((k[b>>2]&3|0)==3?b:e)+28>>2]|0)+8>>2]|0;c=k[d+188>>2]|0;d=k[d+192>>2]|0;if(!c)c=Cy((d<<2)+8|0)|0;else c=Ey(c,(d<<2)+8|0)|0;k[(k[(k[((k[b>>2]&3|0)==3?b:e)+28>>2]|0)+8>>2]|0)+188>>2]=c;c=(k[(k[((k[b>>2]&3|0)==3?b:e)+28>>2]|0)+8>>2]|0)+192|0;d=k[c>>2]|0;k[c>>2]=d+1;k[(k[(k[(k[((k[b>>2]&3|0)==3?b:e)+28>>2]|0)+8>>2]|0)+188>>2]|0)+(d<<2)>>2]=b;e=k[(k[((k[b>>2]&3|0)==3?b:e)+28>>2]|0)+8>>2]|0;k[(k[e+188>>2]|0)+(k[e+192>>2]<<2)>>2]=0;e=b+-32|0;d=k[(k[((k[b>>2]&3|0)==2?b:e)+28>>2]|0)+8>>2]|0;c=k[d+196>>2]|0;d=k[d+200>>2]|0;if(!c)c=Cy((d<<2)+8|0)|0;else c=Ey(c,(d<<2)+8|0)|0;k[(k[(k[((k[b>>2]&3|0)==2?b:e)+28>>2]|0)+8>>2]|0)+196>>2]=c;c=(k[(k[((k[b>>2]&3|0)==2?b:e)+28>>2]|0)+8>>2]|0)+200|0;d=k[c>>2]|0;k[c>>2]=d+1;k[(k[(k[(k[((k[b>>2]&3|0)==2?b:e)+28>>2]|0)+8>>2]|0)+196>>2]|0)+(d<<2)>>2]=b;b=k[(k[((k[b>>2]&3|0)==2?b:e)+28>>2]|0)+8>>2]|0;k[(k[b+196>>2]|0)+(k[b+200>>2]<<2)>>2]=0;i[(k[a+8>>2]|0)+240>>0]=1;a=(rf(a)|0)+8|0;i[(k[a>>2]|0)+240>>0]=1;return}function hg(a){a=a|0;var b=0,c=0;if(!a)Wa(121714,121724,269,121853);b=k[(k[a+8>>2]|0)+116>>2]|0;if((b|0)!=0?(c=(k[b+8>>2]|0)+172|0,(k[c>>2]|0)==(a|0)):0)k[c>>2]=0;Yf((k[(k[((k[a>>2]&3|0)==3?a:a+32|0)+28>>2]|0)+8>>2]|0)+188|0,a);Yf((k[(k[((k[a>>2]&3|0)==2?a:a+-32|0)+28>>2]|0)+8>>2]|0)+196|0,a);return}function ig(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;g=r;r=r+16|0;f=k[a+8>>2]|0;a=f+172|0;c=k[a>>2]|0;a:do if((c|0)==(b|0))Yr(0,121870,g)|0;else{if(c)Wa(123675,121724,340,121891);k[a>>2]=b;e=k[b+8>>2]|0;c=e+170|0;a=j[f+170>>1]|0;if((m[c>>1]|0)<(a&65535))j[c>>1]=a;b=f+168|0;d=f+154|0;c=f+156|0;a=e;while(1){f=a+168|0;j[f>>1]=(m[f>>1]|0)+(m[b>>1]|0);f=a+154|0;j[f>>1]=(m[f>>1]|0)+(m[d>>1]|0);f=a+156|0;k[f>>2]=(k[f>>2]|0)+(k[c>>2]|0);a=k[a+172>>2]|0;if(!a)break a;a=k[a+8>>2]|0}}while(0);r=g;return}function jg(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,l=0;l=a+8|0;a=k[l>>2]|0;b=k[a+172>>2]|0;if(b)do{h=b+8|0;f=k[h>>2]|0;e=f+168|0;g=(m[e>>1]|0)-(m[a+168>>1]|0)&65535;j[e>>1]=g;e=f+154|0;j[e>>1]=(m[e>>1]|0)-(m[a+154>>1]|0);e=f+156|0;k[e>>2]=(k[e>>2]|0)-(k[a+156>>2]|0);a=b;b=k[f+172>>2]|0;if(!(g<<16>>16)){c=k[a>>2]|0;g=a+32|0;e=(k[(k[((c&3|0)==3?a:g)+28>>2]|0)+8>>2]|0)+180|0;d=k[k[e>>2]>>2]|0;if(d){f=0;do{if((d|0)==(a|0)){Yf(e,a);c=k[a>>2]|0}f=f+1|0;e=(k[(k[((c&3|0)==3?a:g)+28>>2]|0)+8>>2]|0)+180|0;d=k[(k[e>>2]|0)+(f<<2)>>2]|0}while((d|0)!=0)}g=a+-32|0;e=(k[(k[((c&3|0)==2?a:g)+28>>2]|0)+8>>2]|0)+172|0;d=k[k[e>>2]>>2]|0;if(d){f=0;do{if((d|0)==(a|0)){Yf(e,a);c=k[a>>2]|0}f=f+1|0;e=(k[(k[((c&3|0)==2?a:g)+28>>2]|0)+8>>2]|0)+172|0;d=k[(k[e>>2]|0)+(f<<2)>>2]|0}while((d|0)!=0)}}a:do if((i[(k[h>>2]|0)+112>>0]|0)==1)do{a=k[(k[((k[a>>2]&3|0)==2?a:a+-32|0)+28>>2]|0)+8>>2]|0;if((i[a+156>>0]|0)!=1)break a;if((k[a+184>>2]|0)!=1)break a;a=k[k[a+180>>2]>>2]|0;f=k[l>>2]|0;h=k[a+8>>2]|0;g=h+168|0;j[g>>1]=(m[g>>1]|0)-(m[f+168>>1]|0);g=h+154|0;j[g>>1]=(m[g>>1]|0)-(m[f+154>>1]|0);g=h+156|0;k[g>>2]=(k[g>>2]|0)-(k[f+156>>2]|0)}while((i[h+112>>0]|0)==1);while(0);a=k[l>>2]|0}while((b|0)!=0);k[a+172>>2]=0;return}function kg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=k[b+4>>2]|0;a:do if((e|0)>0?(f=k[d+4>>2]|0,(f|0)>0):0)if((e|0)<(f|0)){b=k[b>>2]|0;e=k[b>>2]|0;if(!e){e=0;break}else f=0;while(1){f=f+1|0;if((k[((k[e>>2]&3|0)==2?e:e+-32|0)+28>>2]|0)==(c|0))break a;e=k[b+(f<<2)>>2]|0;if(!e){e=0;break}}}else{b=k[d>>2]|0;e=k[b>>2]|0;if(!e){e=0;break}else f=0;while(1){f=f+1|0;if((k[((k[e>>2]&3|0)==3?e:e+32|0)+28>>2]|0)==(a|0))break a;e=k[b+(f<<2)>>2]|0;if(!e){e=0;break}}}else e=0;while(0);return e|0}function lg(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,f=0,g=0,h=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0.0;w=r;r=r+32|0;v=w+16|0;s=w;if(i[137280]|0)cB();i[121904]=0;k[12383]=a;c=((_s(rf(a)|0)|0)<<2)+4|0;t=By(c)|0;k[12384]=t;c=By(c)|0;k[12385]=c;k[12386]=8;k[13603]=24;p[4138]=.995;c=ss(a,121905)|0;if((c|0)!=0?(e=+aO(c),e>0.0):0){x=e*+(k[12386]|0);k[12386]=x<1.0?1:~~x;e=e*+(k[13603]|0);k[13603]=e<1.0?1:~~e}t=a+8|0;c=k[t>>2]|0;if(j[c+136>>1]&16){n=(j[c+238>>1]|0)+2|0;o=By(n<<2)|0;wg(a,o,n,0)|0;vP(o)}ei(a);Ai(a,1);qg(a);xg(a);c=k[t>>2]|0;k[12387]=j[c+236>>1];k[12388]=j[c+238>>1];if((k[c+220>>2]|0)>0){h=0;f=0;do{k[c+192>>2]=k[(k[c+216>>2]|0)+(h<<2)>>2];if((h|0)>0?(l=j[c+236>>1]|0,m=j[c+238>>1]|0,l<<16>>16<=m<<16>>16):0){c=k[c+196>>2]|0;d=m<<16>>16;g=l<<16>>16;while(1){n=c+(g<<6)+4|0;o=c+(g<<6)|0;k[n>>2]=(k[n>>2]|0)+(k[o>>2]<<2);k[o>>2]=0;if((g|0)<(d|0))g=g+1|0;else break}}f=(yg(a,0,b)|0)+f|0;h=h+1|0;c=k[t>>2]|0;d=c+220|0;g=k[d>>2]|0}while((h|0)<(g|0));n=d;h=g;if((h|0)<2){d=c;q=15}else{l=k[c+216>>2]|0;m=0;g=0;while(1){d=k[l+(m<<2)>>2]|0;if(g)k[(k[g+8>>2]|0)+164>>2]=d;o=k[d+8>>2]|0;k[o+168>>2]=g;g=k[o+164>>2]|0;if(g){d=g;while(1){g=k[(k[d+8>>2]|0)+164>>2]|0;if(!g)break;else d=g}}m=m+1|0;if((m|0)==(h|0))break;else g=d}k[n>>2]=1;k[c+192>>2]=k[l>>2];g=k[12387]&65535;j[c+236>>1]=g;d=k[12388]&65535;j[c+238>>1]=d;o=f}}else{d=c;f=0;q=15}if((q|0)==15){c=d;g=j[d+236>>1]|0;d=j[d+238>>1]|0;o=f}if(g<<16>>16<=d<<16>>16){n=k[24528]|0;m=g<<16>>16;while(1){d=k[c+196>>2]|0;g=k[d+(m<<6)+8>>2]|0;k[d+(m<<6)>>2]=g;h=k[d+(m<<6)+12>>2]|0;k[d+(m<<6)+4>>2]=h;a:do if((g|0)>0){f=0;while(1){l=k[h+(f<<2)>>2]|0;if(!l)break;k[(k[l+8>>2]|0)+236>>2]=f;f=f+1|0;if((f|0)>=(g|0))break a}if(i[137280]|0){d=ht(a)|0;c=k[(k[(k[t>>2]|0)+196>>2]|0)+(m<<6)>>2]|0;k[s>>2]=d;k[s+4>>2]=m;k[s+8>>2]=f;k[s+12>>2]=c;FN(n,121913,s)|0;c=k[t>>2]|0;d=k[c+196>>2]|0}k[d+(m<<6)>>2]=f}while(0);if((m|0)<(j[c+238>>1]|0))m=m+1|0;else break}}do if((k[c+180>>2]|0)>=1){f=c;g=1;c=o;while(1){d=(zg(k[(k[f+184>>2]|0)+(g<<2)>>2]|0,b)|0)+c|0;f=k[t>>2]|0;c=k[f+180>>2]|0;if((g|0)>=(c|0))break;else{g=g+1|0;c=d}}if((c|0)>0){c=ss(a,121963)|0;if((c|0)!=0?(oB(c)|0)<<24>>24==0:0){o=d;break}mi(a);i[121904]=1;o=yg(a,2,b)|0}else o=d}while(0);c=k[12385]|0;if(c){vP(c);k[12385]=0}c=k[12384]|0;if(c){vP(c);k[12384]=0}c=k[t>>2]|0;if((k[c+180>>2]|0)>=1){d=1;while(1){og(k[(k[c+184>>2]|0)+(d<<2)>>2]|0);c=k[t>>2]|0;if((d|0)<(k[c+180>>2]|0))d=d+1|0;else break}}d=j[c+236>>1]|0;if(d<<16>>16<=(j[c+238>>1]|0)){f=c;g=c;m=d<<16>>16;while(1){c=k[f+196>>2]|0;if((k[c+(m<<6)>>2]|0)>0){f=g;l=0;do{h=(k[(k[c+(m<<6)+4>>2]|0)+(l<<2)>>2]|0)+8|0;d=k[h>>2]|0;k[d+236>>2]=l;c=k[d+188>>2]|0;if((c|0)!=0?(u=k[c>>2]|0,(u|0)!=0):0){g=u;c=0;do{f=g+8|0;if((i[(k[f>>2]|0)+112>>0]|0)==4){hg(g);vP(k[f>>2]|0);vP(g);d=k[h>>2]|0;c=c+-1|0}c=c+1|0;g=k[(k[d+188>>2]|0)+(c<<2)>>2]|0}while((g|0)!=0);f=k[t>>2]|0}l=l+1|0;c=k[f+196>>2]|0}while((l|0)<(k[c+(m<<6)>>2]|0));d=f}else d=g;c=k[c+(m<<6)+56>>2]|0;if(!c)c=f;else{vP(k[c+8>>2]|0);vP(c);d=k[t>>2]|0;c=d}if((m|0)<(j[c+238>>1]|0)){f=c;g=d;m=m+1|0}else break}}if(i[137280]|0){u=k[24528]|0;a=ht(a)|0;x=+dB();k[v>>2]=a;k[v+4>>2]=o;p[v+8>>3]=x;FN(u,121974,v)|0}r=w;return}function mg(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;f=a+8|0;a=k[f>>2]|0;d=k[a+268>>2]|0;if(((d|0)!=0?(e=j[a+236>>1]|0,e<<16>>16<=(j[a+238>>1]|0)):0)?(b=e<<16>>16,k[d+(b<<2)>>2]=k[k[(k[a+196>>2]|0)+(b<<6)+4>>2]>>2],c=k[f>>2]|0,e<<16>>16<(j[c+238>>1]|0)):0)do{b=b+1|0;k[(k[c+268>>2]|0)+(b<<2)>>2]=k[k[(k[c+196>>2]|0)+(b<<6)+4>>2]>>2];c=k[f>>2]|0}while((b|0)<(j[c+238>>1]|0));return}function ng(a){a=a|0;var b=0,c=0;mg(a);c=a+8|0;a=k[c>>2]|0;if((k[a+180>>2]|0)>=1){b=1;while(1){ng(k[(k[a+184>>2]|0)+(b<<2)>>2]|0);a=k[c>>2]|0;if((b|0)>=(k[a+180>>2]|0))break;else b=b+1|0}}return}function og(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0;e=a+8|0;b=k[e>>2]|0;if((k[b+180>>2]|0)>=1){c=1;while(1){og(k[(k[b+184>>2]|0)+(c<<2)>>2]|0);b=k[e>>2]|0;if((c|0)<(k[b+180>>2]|0))c=c+1|0;else break}}c=k[b+268>>2]|0;a:do if((c|0)!=0?(d=j[b+236>>1]|0,d<<16>>16<=(j[b+238>>1]|0)):0){d=d<<16>>16;while(1){g=k[c+(d<<2)>>2]|0;f=Ag(a,g,-1)|0;g=Ag(a,g,1)|0;k[(k[(k[e>>2]|0)+268>>2]|0)+(d<<2)>>2]=f;h=(rf(a)|0)+8|0;f=k[(k[f+8>>2]|0)+236>>2]|0;b=k[e>>2]|0;c=k[b+196>>2]|0;k[c+(d<<6)+4>>2]=(k[(k[(k[h>>2]|0)+196>>2]|0)+(d<<6)+4>>2]|0)+(f<<2);k[c+(d<<6)>>2]=(k[(k[g+8>>2]|0)+236>>2]|0)+1-f;if((d|0)>=(j[b+238>>1]|0))break a;c=k[b+268>>2]|0;d=d+1|0}}while(0);return}function pg(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0;e=k[b>>2]&3;h=k[((e|0)==2?b:b+-32|0)+28>>2]|0;f=k[(k[h+8>>2]|0)+188>>2]|0;a:do if((f|0)!=0?(c=k[f>>2]|0,(c|0)!=0):0){l=b+32|0;g=k[((e|0)==3?b:l)+28>>2]|0;d=0;while(1){d=d+1|0;if((k[((k[c>>2]&3|0)==2?c:c+-32|0)+28>>2]|0)==(g|0))break;c=k[f+(d<<2)>>2]|0;if(!c){m=15;break a}}ig(b,c);d=(k[b+8>>2]|0)+172|0;if(!(k[d>>2]|0))k[d>>2]=c;c=k[c+8>>2]|0;if((i[c+112>>0]|0)==4?(j=c+116|0,(k[j>>2]|0)==0):0)k[j>>2]=b;d=k[(k[((k[b>>2]&3|0)==3?b:l)+28>>2]|0)+8>>2]|0;c=k[d+204>>2]|0;d=k[d+208>>2]|0;if(!c)c=Cy((d<<2)+8|0)|0;else c=Ey(c,(d<<2)+8|0)|0;k[(k[(k[((k[b>>2]&3|0)==3?b:l)+28>>2]|0)+8>>2]|0)+204>>2]=c;a=(k[(k[((k[b>>2]&3|0)==3?b:l)+28>>2]|0)+8>>2]|0)+208|0;j=k[a>>2]|0;k[a>>2]=j+1;k[(k[(k[(k[((k[b>>2]&3|0)==3?b:l)+28>>2]|0)+8>>2]|0)+204>>2]|0)+(j<<2)>>2]=b;b=k[(k[((k[b>>2]&3|0)==3?b:l)+28>>2]|0)+8>>2]|0;k[(k[b+204>>2]|0)+(k[b+208>>2]<<2)>>2]=0}else m=15;while(0);if((m|0)==15){m=ag(h,k[((e|0)==3?b:b+32|0)+28>>2]|0,b)|0;l=k[b+8>>2]|0;b=k[m+8>>2]|0;i[b+112>>0]=(i[l+112>>0]|0)==4?4:3;k[b+96>>2]=k[l+96>>2];gg(a,m)}return}function qg(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0;f=a+8|0;g=By((j[(k[f>>2]|0)+238>>1]<<2)+8|0)|0;b=Kt(a)|0;if(b)do{c=g+(k[(k[b+8>>2]|0)+232>>2]<<2)|0;k[c>>2]=(k[c>>2]|0)+1;c=Es(a,b)|0;if(c)do{h=k[c>>2]&3;d=k[(k[(k[((h|0)==3?c:c+32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0;h=k[(k[(k[((h|0)==2?c:c+-32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0;i=(d|0)>(h|0);e=i?d:h;d=(i?h:d)+1|0;if((d|0)<(e|0))do{i=g+(d<<2)|0;k[i>>2]=(k[i>>2]|0)+1;d=d+1|0}while((d|0)<(e|0));c=Gs(a,c)|0}while((c|0)!=0);b=Lt(a,b)|0}while((b|0)!=0);b=By((j[(k[f>>2]|0)+238>>1]<<6)+128|0)|0;i=k[f>>2]|0;k[i+196>>2]=b;c=j[i+236>>1]|0;if(c<<16>>16<=(j[i+238>>1]|0)){c=c<<16>>16;while(1){h=g+(c<<2)|0;i=k[h>>2]|0;k[b+(c<<6)>>2]=i;k[b+(c<<6)+8>>2]=i;h=By((k[h>>2]<<2)+4|0)|0;i=k[f>>2]|0;b=k[i+196>>2]|0;k[b+(c<<6)+4>>2]=h;k[b+(c<<6)+12>>2]=h;if((c|0)>=(j[i+238>>1]|0))break;else c=c+1|0}}vP(g);return}function rg(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,l=0,m=0,n=0,o=0;o=r;r=r+96|0;n=o+64|0;m=o+48|0;f=o+24|0;d=o;g=b+8|0;h=k[(k[g>>2]|0)+232>>2]|0;i=a+8|0;c=k[(k[i>>2]|0)+196>>2]|0;l=k[c+(h<<6)>>2]|0;do if((k[c+(h<<6)+8>>2]|0)>=1){k[(k[c+(h<<6)+4>>2]|0)+(l<<2)>>2]=b;k[(k[g>>2]|0)+236>>2]=l;c=k[i>>2]|0;d=k[c+196>>2]|0;a=d+(h<<6)|0;e=k[a>>2]|0;k[a>>2]=e+1;if((e|0)>=(k[d+(h<<6)+8>>2]|0))Wa(122068,122104,1077,122115);e=k[(k[(k[(k[12383]|0)+8>>2]|0)+196>>2]|0)+(h<<6)+8>>2]|0;if((l|0)>(e|0)){b=ht(b)|0;m=k[(k[g>>2]|0)+236>>2]|0;n=k[(k[(k[(k[12383]|0)+8>>2]|0)+196>>2]|0)+(h<<6)+8>>2]|0;k[f>>2]=1090;k[f+4>>2]=b;k[f+8>>2]=m;k[f+12>>2]=h;k[f+16>>2]=n;Yr(1,122131,f)|0;break}a=j[c+236>>1]|0;c=j[c+238>>1]|0;if((h|0)<(a|0)|(h|0)>(c<<16>>16|0)){k[m>>2]=1095;k[m+4>>2]=h;k[m+8>>2]=a;k[m+12>>2]=c<<16>>16;Yr(1,122204,m)|0;break}if(((k[d+(h<<6)+4>>2]|0)+(l<<2)|0)>>>0>((k[d+(h<<6)+12>>2]|0)+(e<<2)|0)>>>0){l=ht(b)|0;m=k[(k[i>>2]|0)+196>>2]|0;b=(k[m+(h<<6)+4>>2]|0)+(k[(k[g>>2]|0)+236>>2]<<2)|0;m=(k[m+(h<<6)+12>>2]|0)+(k[(k[(k[(k[12383]|0)+8>>2]|0)+196>>2]|0)+(h<<6)+8>>2]<<2)|0;k[n>>2]=1101;k[n+4>>2]=h;k[n+8>>2]=l;k[n+12>>2]=b;k[n+16>>2]=h;k[n+20>>2]=h;k[n+24>>2]=m;Yr(1,122265,n)|0}}else{m=ht(a)|0;n=ht(b)|0;k[d>>2]=1070;k[d+4>>2]=m;k[d+8>>2]=n;k[d+12>>2]=h;k[d+16>>2]=l;Yr(1,122013,d)|0}while(0);r=o;return}function sg(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0;q=r;r=r+16|0;l=q;m=a+8|0;n=eB(k[(k[m>>2]|0)+232>>2]|0)|0;d=k[m>>2]|0;g=d+192|0;c=k[g>>2]|0;if(c)do{f=k[c+8>>2]|0;i[f+157>>0]=0;c=k[f+164>>2]|0}while((c|0)!=0);e=j[d+236>>1]|0;c=j[d+238>>1]|0;if(e<<16>>16<=c<<16>>16){f=c<<16>>16;d=k[d+196>>2]|0;c=e<<16>>16;while(1){k[d+(c<<6)>>2]=0;if((c|0)<(f|0))c=c+1|0;else break}}c=k[g>>2]|0;if(c){f=(b|0)==0;d=c;do{e=d+8|0;c=k[e>>2]|0;if((k[k[(f?c+172|0:c+180|0)>>2]>>2]|0)==0?(h=c+157|0,(i[h>>0]|0)==0):0){i[h>>0]=1;gB(n,d);c=hB(n)|0;if(c)do{if((i[(k[c+8>>2]|0)+159>>0]|0)==7)li(a,c,b,n);else{rg(a,c);tg(n,c,b)}c=hB(n)|0}while((c|0)!=0);c=k[e>>2]|0}d=k[c+164>>2]|0}while((d|0)!=0)}if(hB(n)|0)Yr(1,122377,l)|0;c=k[m>>2]|0;d=j[c+236>>1]|0;if(d<<16>>16<=(j[c+238>>1]|0)){h=d<<16>>16;while(1){d=k[(k[(k[12383]|0)+8>>2]|0)+196>>2]|0;i[d+(h<<6)+49>>0]=0;if((k[c+116>>2]&1|0)!=0?(o=k[c+196>>2]|0,p=k[o+(h<<6)>>2]|0,(p|0)>0):0){e=k[o+(h<<6)+4>>2]|0;f=p+-1|0;g=(f|0)/2|0;c=0;while(1){v=k[e+(c<<2)>>2]|0;s=k[e+(f-c<<2)>>2]|0;w=k[v+8>>2]|0;b=k[w+232>>2]|0;w=w+236|0;l=k[w>>2]|0;t=s+8|0;u=k[(k[t>>2]|0)+236>>2]|0;k[w>>2]=u;k[(k[d+(b<<6)+4>>2]|0)+(u<<2)>>2]=v;k[(k[t>>2]|0)+236>>2]=l;k[(k[(k[(k[(k[12383]|0)+8>>2]|0)+196>>2]|0)+(b<<6)+4>>2]|0)+(l<<2)>>2]=s;if((c|0)>=(g|0))break;d=k[(k[(k[12383]|0)+8>>2]|0)+196>>2]|0;c=c+1|0}c=k[m>>2]|0}if((h|0)<(j[c+238>>1]|0))h=h+1|0;else break}}if((rf(a)|0)==(a|0)?(ug(0)|0)>0:0)Bg(a,0);fB(n);r=q;return}function tg(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;g=b+8|0;b=k[g>>2]|0;if(!c){if((k[b+184>>2]|0)>0){f=0;do{c=k[(k[b+180>>2]|0)+(f<<2)>>2]|0;d=c+-32|0;e=(k[(k[((k[c>>2]&3|0)==2?c:d)+28>>2]|0)+8>>2]|0)+157|0;if(!(i[e>>0]|0)){i[e>>0]=1;gB(a,k[((k[c>>2]&3|0)==2?c:d)+28>>2]|0);b=k[g>>2]|0}f=f+1|0}while((f|0)<(k[b+184>>2]|0))}}else if((k[b+176>>2]|0)>0){f=0;do{c=k[(k[b+172>>2]|0)+(f<<2)>>2]|0;d=c+32|0;e=(k[(k[((k[c>>2]&3|0)==3?c:d)+28>>2]|0)+8>>2]|0)+157|0;if(!(i[e>>0]|0)){i[e>>0]=1;gB(a,k[((k[c>>2]&3|0)==3?c:d)+28>>2]|0);b=k[g>>2]|0}f=f+1|0}while((f|0)<(k[b+176>>2]|0))}return}
function iJ(a,b){a=a|0;b=b|0;a=_b[k[a+368>>2]&127](k[a+372>>2]|0,b)|0;if(a>>>0>65535)a=0;else a=k[92448+(((l[179992+(a>>8)>>0]|0)<<3|a>>>5&7)<<2)>>2]&1<<(a&31);return a|0}function jJ(a,b){a=a|0;b=b|0;a=_b[k[a+368>>2]&127](k[a+372>>2]|0,b)|0;if(a>>>0>65535)a=0;else a=k[92448+(((l[179736+(a>>8)>>0]|0)<<3|a>>>5&7)<<2)>>2]&1<<(a&31);return a|0}function kJ(a,b){a=a|0;b=b|0;a=_b[k[a+368>>2]&127](k[a+372>>2]|0,b)|0;a:do if(a>>>0>65535)a=1;else{switch(a>>8|0){case 223:case 222:case 221:case 220:case 219:case 218:case 217:case 216:{a=1;break a}case 0:{if(!(i[92156+a>>0]|0)){a=1;break a}break}case 255:{if((a&-2|0)==65534){a=1;break a}break}default:{}}a=0}while(0);return a|0}function lJ(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,m=0,n=0,o=0,p=0,q=0;p=r;r=r+16|0;o=p;j=a+368|0;f=k[b>>2]|0;a:do if((f|0)!=(c|0)){m=a+888|0;n=a+372|0;h=e;g=a+76|0;do{q=l[f>>0]|0;a=m+(q<<2)+1|0;q=i[m+(q<<2)>>0]|0;e=q<<24>>24;if(!(q<<24>>24)){e=_I(_b[k[j>>2]&127](k[n>>2]|0,f)|0,o)|0;if((e|0)>(h-(k[d>>2]|0)|0))break a;f=k[b>>2]|0;f=f+((l[g+(l[f>>0]|0)>>0]|0)+-3)|0;a=o}else{if((e|0)>(h-(k[d>>2]|0)|0))break a;f=f+1|0}k[b>>2]=f;while(1){f=i[a>>0]|0;q=k[d>>2]|0;k[d>>2]=q+1;i[q>>0]=f;e=e+-1|0;if(!e)break;else a=a+1|0}f=k[b>>2]|0}while((f|0)!=(c|0))}while(0);r=p;return}function mJ(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,m=0,n=0;f=k[b>>2]|0;a:do if((f|0)!=(c|0)){i=a+376|0;m=a+368|0;n=a+372|0;h=a+76|0;g=k[d>>2]|0;do{if((g|0)==(e|0))break a;a=j[i+((l[f>>0]|0)<<1)>>1]|0;if(!(a<<16>>16)){a=(_b[k[m>>2]&127](k[n>>2]|0,f)|0)&65535;f=k[b>>2]|0;f=f+((l[h+(l[f>>0]|0)>>0]|0)+-3)|0}else f=f+1|0;k[b>>2]=f;f=k[d>>2]|0;g=f+2|0;k[d>>2]=g;j[f>>1]=a;f=k[b>>2]|0}while((f|0)!=(c|0))}while(0);return}function nJ(a){a=a|0;if(a)if(!(wJ(a,137351)|0))if(!(wJ(a,180289)|0))if(!(wJ(a,138006)|0))if(!(wJ(a,180248)|0))if(!(wJ(a,180298)|0)){a=(wJ(a,180307)|0)==0;return (a?-1:5)|0}else a=4;else a=3;else a=2;else a=1;else a=0;else a=6;return a|0}function oJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return XK(96332,a,0,b,c,d)|0}function pJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return XK(96332,a,1,b,c,d)|0}function qJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;CK(96728,b,c,d);return}function rJ(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;f=r;r=r+144|0;g=f+4|0;d=f+8|0;e=f;k[g>>2]=b;k[e>>2]=d;Mb[k[a+60>>2]&31](a,g,c,e,d+127|0);do if((k[g>>2]|0)==(c|0)){i[k[e>>2]>>0]=0;if((wJ(d,180248)|0)!=0?(k[a+68>>2]|0)==2:0)break;a=nJ(d)|0;if((a|0)!=-1)a=k[96332+(a<<2)>>2]|0;else a=0}else a=0;while(0);r=f;return a|0}function sJ(a,b,c,d,e,f,g,h,j,l,m){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;l=l|0;m=m|0;var n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;z=r;r=r+32|0;u=z+20|0;y=z+16|0;x=z+24|0;v=z+12|0;q=z+8|0;o=z+4|0;p=z;k[q>>2]=0;k[o>>2]=0;k[p>>2]=0;w=c+68|0;t=k[w>>2]|0;s=d+(t*5|0)|0;k[v>>2]=s;t=e+(0-(t<<1))|0;s=(YK(c,s,t,o,p,q,v)|0)!=0;n=k[o>>2]|0;e=n;a:do if(s&(n|0)!=0){s=c+28|0;d=k[p>>2]|0;do if(!(cc[k[s>>2]&127](c,n,d,180261)|0)){if(!b){k[f>>2]=e;e=0;break a}}else{if(g)k[g>>2]=k[q>>2];if(!h)e=k[v>>2]|0;else{e=k[v>>2]|0;k[h>>2]=e}if(!(YK(c,e,t,o,p,q,v)|0)){k[f>>2]=k[v>>2];e=0;break a}e=k[o>>2]|0;if(e){n=e;d=k[p>>2]|0;break}if(!b){e=1;break a}k[f>>2]=k[v>>2];e=0;break a}while(0);if(cc[k[s>>2]&127](c,n,d,180269)|0){d=k[q>>2]|0;k[u>>2]=d;k[y>>2]=x;Mb[k[c+60>>2]&31](c,u,t,y,x+1|0);if(!((k[y>>2]|0)!=(x|0)?((i[x>>0]&-33)+-65|0)>>>0<26:0)){k[f>>2]=d;e=0;break}if(j)k[j>>2]=d;e=k[v>>2]|0;if(l){a=Tb[a&63](c,d,e+(0-(k[w>>2]|0))|0)|0;k[l>>2]=a}if(!(YK(c,e,t,o,p,q,v)|0)){k[f>>2]=k[v>>2];e=0;break}e=k[o>>2]|0;if(!e){e=1;break}n=e;d=k[p>>2]|0}if((b|0)!=0|(cc[k[s>>2]&127](c,n,d,180278)|0)==0){k[f>>2]=e;e=0;break}d=k[q>>2]|0;e=k[v>>2]|0;n=d;if(!(cc[k[s>>2]&127](c,d,e+(0-(k[w>>2]|0))|0,143869)|0)){if(!(cc[k[s>>2]&127](c,d,e+(0-(k[w>>2]|0))|0,143861)|0)){k[f>>2]=n;e=0;break}if(m)k[m>>2]=0}else if(m)k[m>>2]=1;d=c+60|0;n=x+1|0;b:while(1){k[u>>2]=e;k[y>>2]=x;Mb[k[d>>2]&31](c,u,t,y,n);switch(((k[y>>2]|0)==(x|0)?-1:i[x>>0]|0)|0){case 9:case 10:case 13:case 32:break;default:break b}m=e+(k[w>>2]|0)|0;k[v>>2]=m;e=m}if((e|0)==(t|0))e=1;else{k[f>>2]=e;e=0}}else{k[f>>2]=k[v>>2];e=0}while(0);r=z;return e|0}function tJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return XK(94464,a,0,b,c,d)|0}function uJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return XK(94464,a,1,b,c,d)|0}function vJ(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;f=r;r=r+144|0;g=f+4|0;d=f+8|0;e=f;k[g>>2]=b;k[e>>2]=d;Mb[k[a+60>>2]&31](a,g,c,e,d+127|0);do if((k[g>>2]|0)==(c|0)){i[k[e>>2]>>0]=0;if((wJ(d,180248)|0)!=0?(k[a+68>>2]|0)==2:0)break;a=nJ(d)|0;if((a|0)!=-1)a=k[94464+(a<<2)>>2]|0;else a=0}else a=0;while(0);r=f;return a|0}function wJ(a,b){a=a|0;b=b|0;var c=0,d=0;while(1){c=i[a>>0]|0;d=i[b>>0]|0;c=(c+-97&255)<26?(c&255)+224&255:c;if(c<<24>>24!=((d+-97&255)<26?(d&255)+224&255:d)<<24>>24){b=0;break}if(!(c<<24>>24)){b=1;break}else{b=b+1|0;a=a+1|0}}return b|0}function xJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,m=0,n=0;a:do if((b|0)==(c|0))e=-4;else{g=b;e=c-g|0;if(!(e&1))m=c;else{e=e&-2;if(!e){e=-1;break}m=b+e|0}e=i[b+1>>0]|0;c=i[b>>0]|0;b:do if(e<<24>>24){e=e&255;switch(e|0){case 219:case 218:case 217:case 216:{n=100;break b}case 223:case 222:case 221:case 220:{n=107;break b}case 255:break;default:{n=105;break b}}if((c&255)>253)n=107;else{e=255;n=105}}else{j=a+76|0;do switch(l[j+(c&255)>>0]|0){case 7:{n=100;break b}case 24:case 22:{e=18;break b}case 29:{e=0;n=105;break b}case 12:{e=TJ(12,a,b+2|0,m,d)|0;break a}case 13:{e=TJ(13,a,b+2|0,m,d)|0;break a}case 2:{e=b+2|0;if((e|0)==(m|0)){e=-1;break a}f=i[b+3>>0]|0;c=i[e>>0]|0;c:do if(f<<24>>24){switch(f&255|0){case 220:case 221:case 222:case 223:{n=35;break c}case 255:break;default:{n=34;break c}}if((c&255)>253)n=35;else n=34}else{switch(l[j+(c&255)>>0]|0){case 7:case 6:case 5:case 29:case 24:case 22:{n=34;break c}case 16:break;case 15:{e=RJ(a,b+4|0,m,d)|0;break a}default:{n=35;break c}}f=b+4|0;if((f|0)==(m|0)){e=-1;break a}d:do if(!(i[b+5>>0]|0))switch(l[j+(l[f>>0]|0)>>0]|0){case 27:{e=QJ(a,b+6|0,m,d)|0;break a}case 20:{k[d>>2]=b+6;e=33;break a}case 24:case 22:{e=b+6|0;if((e|0)==(m|0)){e=-1;break a}e:while(1){if(i[f+3>>0]|0){n=32;break}switch(l[j+(l[e>>0]|0)>>0]|0){case 30:{c=f;n=27;break e}case 10:case 9:case 21:break e;case 24:case 22:break;default:{n=32;break e}}f=e+2|0;if((f|0)==(m|0)){e=-1;break a}else{h=e;e=f;f=h}}if((n|0)==32){k[d>>2]=e;e=0;break a}f:do if((n|0)==27){f=c+4|0;if((f|0)==(m|0)){e=-1;break a}if(!(i[c+5>>0]|0)){switch(l[j+(l[f>>0]|0)>>0]|0){case 30:case 10:case 9:case 21:break;default:break f}k[d>>2]=e;e=0;break a}}while(0);k[d>>2]=e;e=16;break a}default:break d}while(0);k[d>>2]=f;e=0;break a}while(0);if((n|0)==34){k[d>>2]=b;e=29;break a}else if((n|0)==35){k[d>>2]=e;e=0;break a}break}case 9:{if((b+2|0)==(m|0)){k[d>>2]=m;e=-15;break a}break}case 10:case 21:break;case 30:{e=PJ(a,b+2|0,m,d)|0;break a}case 35:{k[d>>2]=b+2;e=38;break a}case 20:{k[d>>2]=b+2;e=25;break a}case 4:{e=b+2|0;if((e|0)==(m|0)){e=-26;break a}if((i[b+3>>0]|0)==0?(i[e>>0]|0)==93:0){f=b+4|0;if((f|0)==(m|0)){e=-1;break a}if((i[b+5>>0]|0)==0?(i[f>>0]|0)==62:0){k[d>>2]=b+6;e=34;break a}}k[d>>2]=e;e=26;break a}case 31:{k[d>>2]=b+2;e=23;break a}case 32:{e=b+2|0;if((e|0)==(m|0)){e=-24;break a}g:do if(!(i[b+3>>0]|0))switch(l[j+(l[e>>0]|0)>>0]|0){case 33:{k[d>>2]=b+4;e=36;break a}case 15:{k[d>>2]=b+4;e=35;break a}case 34:{k[d>>2]=b+4;e=37;break a}case 32:case 36:case 35:case 11:case 21:case 10:case 9:{k[d>>2]=e;e=24;break a}default:break g}while(0);k[d>>2]=e;e=0;break a}case 36:{k[d>>2]=b+2;e=21;break a}case 11:{k[d>>2]=b+2;e=17;break a}case 19:{c=b+2|0;if((c|0)==(m|0)){e=-1;break a}e=i[b+3>>0]|0;g=i[c>>0]|0;h:do if(e<<24>>24){e=e&255;switch(e|0){case 219:case 218:case 217:case 216:{n=78;break h}case 223:case 222:case 221:case 220:{n=80;break h}case 255:break;default:{n=72;break h}}if((g&255)>253)n=80;else{e=255;n=72}}else switch(l[j+(g&255)>>0]|0){case 29:{e=0;n=72;break h}case 24:case 22:break h;case 7:{n=78;break h}case 5:{if((m-c|0)<2){e=-2;break a}k[d>>2]=c;e=0;break a}case 6:{if((m-c|0)<3){e=-2;break a}k[d>>2]=c;e=0;break a}default:{n=80;break h}}while(0);if((n|0)==72){h=g&255;if(!(k[92448+((l[179736+e>>0]<<3|h>>>5)<<2)>>2]&1<<(h&31))){k[d>>2]=c;e=0;break a}}else if((n|0)==78){if((m-c|0)<4){e=-2;break a}k[d>>2]=c;e=0;break a}else if((n|0)==80){k[d>>2]=c;e=0;break a}e=b+4|0;if((e|0)==(m|0)){e=-20;break a}i:while(1){c=i[c+3>>0]|0;g=i[e>>0]|0;j:do if(c<<24>>24){f=c&255;switch(f|0){case 223:case 222:case 221:case 220:{n=95;break i}case 219:case 218:case 217:case 216:{n=92;break i}case 255:break;default:{n=85;break j}}if((g&255)>253){n=95;break i}else{f=255;n=85}}else switch(l[j+(g&255)>>0]|0){case 5:{n=88;break i}case 6:{n=90;break i}case 7:{n=92;break i}case 36:case 30:case 11:case 32:case 21:case 10:case 9:{n=94;break i}case 29:{f=0;n=85;break}case 27:case 26:case 25:case 24:case 22:break;default:{n=95;break i}}while(0);if((n|0)==85?(n=0,h=g&255,(k[92448+((l[179992+f>>0]<<3|h>>>5)<<2)>>2]&1<<(h&31)|0)==0):0){n=87;break}c=e+2|0;if((c|0)==(m|0)){e=-20;break a}else{h=e;e=c;c=h}}if((n|0)==87){k[d>>2]=e;e=0;break a}else if((n|0)==88){if((m-e|0)<2){e=-2;break a}k[d>>2]=e;e=0;break a}else if((n|0)==90){if((m-e|0)<3){e=-2;break a}k[d>>2]=e;e=0;break a}else if((n|0)==92){if((m-e|0)<4){e=-2;break a}k[d>>2]=e;e=0;break a}else if((n|0)==94){k[d>>2]=e;e=20;break a}else if((n|0)==95){k[d>>2]=e;e=0;break a}break}case 5:{if((m-g|0)<2){e=-2;break a}k[d>>2]=b;e=0;break a}case 6:{if((m-g|0)<3){e=-2;break a}k[d>>2]=b;e=0;break a}case 23:case 27:case 26:case 25:{e=19;break b}default:{n=107;break b}}while(0);e=b+2|0;k:do if((e|0)!=(m|0)){f=b;l:while(1){if(i[f+3>>0]|0)break;switch(l[j+(l[e>>0]|0)>>0]|0){case 10:case 21:break;case 9:{if((f+4|0)==(m|0))break l;break}default:break l}f=e+2|0;if((f|0)==(m|0))break k;else{n=e;e=f;f=n}}k[d>>2]=e;e=15;break a}while(0);k[d>>2]=m;e=15;break a}while(0);if((n|0)==100){if((m-g|0)<4){e=-2;break}k[d>>2]=b;e=0;break}else if((n|0)==105){c=c&255;f=c>>>5;c=1<<(c&31);if(!(c&k[92448+((f|l[179736+e>>0]<<3)<<2)>>2]))if(!(k[92448+((l[179992+e>>0]<<3|f)<<2)>>2]&c))n=107;else e=19;else e=18}if((n|0)==107){k[d>>2]=b;e=0;break}f=b+2|0;m:do if((f|0)!=(m|0)){a=a+76|0;n:while(1){c=i[f+1>>0]|0;g=i[f>>0]|0;o:do if(c<<24>>24){c=c&255;switch(c|0){case 223:case 222:case 221:case 220:{e=f;n=148;break n}case 219:case 218:case 217:case 216:{e=f;n=119;break n}case 255:break;default:{n=112;break o}}if((g&255)>253){e=f;n=148;break n}else{c=255;n=112}}else{switch(l[a+(g&255)>>0]|0){case 5:{e=f;n=115;break n}case 6:{e=f;n=117;break n}case 7:{e=f;n=119;break n}case 10:case 9:case 21:case 30:case 20:case 36:case 35:case 32:case 11:{n=121;break n}case 34:{n=139;break n}case 33:{n=142;break n}case 15:{n=145;break n}case 29:{c=0;n=112;break o}case 27:case 26:case 25:case 24:case 22:{n=114;break o}case 23:break;default:{e=f;n=148;break n}}g=f+2|0;switch(e|0){case 18:break;case 41:{f=g;e=19;break o}default:{f=g;break o}}if((g|0)==(m|0)){e=-1;break a}e=i[f+3>>0]|0;c=i[g>>0]|0;p:do if(e<<24>>24){e=e&255;switch(e|0){case 219:case 218:case 217:case 216:{e=g;n=135;break n}case 223:case 222:case 221:case 220:{f=g;e=19;break o}case 255:break;default:{h=e;n=128;break p}}if((c&255)>253){f=g;e=19;break o}else{h=255;n=128}}else switch(l[a+(c&255)>>0]|0){case 7:{e=g;n=135;break n}case 5:{e=g;n=131;break n}case 6:{e=g;n=133;break n}case 29:{h=0;n=128;break}case 27:case 26:case 25:case 24:case 22:break;default:{f=g;e=19;break o}}while(0);if((n|0)==128?(n=0,j=c&255,(1<<(j&31)&k[92448+((j>>>5|l[179992+h>>0]<<3)<<2)>>2]|0)==0):0){e=g;n=129;break n}f=f+4|0;e=41}while(0);if((n|0)==112){n=g&255;if(!(1<<(n&31)&k[92448+((n>>>5|l[179992+c>>0]<<3)<<2)>>2])){e=f;n=113;break}else n=114}if((n|0)==114){n=0;f=f+2|0}if((f|0)==(m|0))break m}switch(n|0){case 113:{k[d>>2]=e;e=0;break a}case 115:{if((m-e|0)<2){e=-2;break a}k[d>>2]=e;e=0;break a}case 117:{if((m-e|0)<3){e=-2;break a}k[d>>2]=e;e=0;break a}case 119:{if((m-e|0)<4){e=-2;break a}k[d>>2]=e;e=0;break a}case 121:{k[d>>2]=f;break a}case 129:{k[d>>2]=e;e=0;break a}case 131:{if((m-e|0)<2){e=-2;break a}k[d>>2]=e;e=0;break a}case 133:{if((m-e|0)<3){e=-2;break a}k[d>>2]=e;e=0;break a}case 135:{if((m-e|0)<4){e=-2;break a}k[d>>2]=e;e=0;break a}case 139:if((e|0)==19){k[d>>2]=f;e=0;break a}else{k[d>>2]=f+2;e=32;break a}case 142:if((e|0)==19){k[d>>2]=f;e=0;break a}else{k[d>>2]=f+2;e=31;break a}case 145:if((e|0)==19){k[d>>2]=f;e=0;break a}else{k[d>>2]=f+2;e=30;break a}case 148:{k[d>>2]=e;e=0;break a}}}while(0);e=0-e|0}while(0);return e|0}function yJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,m=0,n=0,o=0,p=0,q=0,s=0;s=r;r=r+16|0;n=s;a:do if((b|0)==(c|0))e=-4;else{h=b;e=c-h|0;if(!(e&1))p=c;else{e=e&-2;if(!e){e=-1;break}p=b+e|0}e=i[b+1>>0]|0;c=i[b>>0]|0;b:do if(e<<24>>24){switch(e&255|0){case 219:case 218:case 217:case 216:{q=236;break b}case 223:case 222:case 221:case 220:{q=238;break b}case 255:break;default:{q=239;break b}}if((c&255)>253)q=238;else q=239}else{o=a+76|0;switch(l[o+(c&255)>>0]|0){case 7:{q=236;break b}case 8:case 1:case 0:{q=238;break b}case 2:{c=b+2|0;if((c|0)==(p|0)){e=-1;break a}e=i[b+3>>0]|0;h=i[c>>0]|0;c:do if(e<<24>>24){e=e&255;switch(e|0){case 219:case 218:case 217:case 216:{q=22;break c}case 223:case 222:case 221:case 220:{q=72;break c}case 255:break;default:{q=14;break c}}if((h&255)>253)q=72;else{e=255;q=14}}else switch(l[o+(h&255)>>0]|0){case 29:{e=0;q=14;break c}case 24:case 22:break c;case 7:{q=22;break c}case 5:{if((p-c|0)<2){e=-2;break a}k[d>>2]=c;e=0;break a}case 6:{if((p-c|0)<3){e=-2;break a}k[d>>2]=c;e=0;break a}case 16:{e=b+4|0;if((e|0)==(p|0)){e=-1;break a}d:do if(!(i[b+5>>0]|0)){switch(l[o+(l[e>>0]|0)>>0]|0){case 27:{e=QJ(a,b+6|0,p,d)|0;break a}case 20:break;default:break d}e=b+6|0;if((p-e|0)<12){e=-1;break a}else f=0;while(1){if(i[e+1>>0]|0){q=31;break}if((i[e>>0]|0)!=(i[180255+f>>0]|0)){q=31;break}f=f+1|0;e=e+2|0;if((f|0)>=6){q=33;break}}if((q|0)==31){k[d>>2]=e;e=0;break a}else if((q|0)==33){k[d>>2]=e;e=8;break a}}while(0);k[d>>2]=e;e=0;break a}case 15:{e=RJ(a,b+4|0,p,d)|0;break a}case 17:{f=b+4|0;if((f|0)==(p|0)){e=-1;break a}e=i[b+5>>0]|0;g=i[f>>0]|0;e:do if(e<<24>>24){e=e&255;switch(e|0){case 219:case 218:case 217:case 216:{q=48;break e}case 223:case 222:case 221:case 220:{q=50;break e}case 255:break;default:{q=41;break e}}if((g&255)>253)q=50;else{e=255;q=41}}else switch(l[o+(g&255)>>0]|0){case 29:{e=0;q=41;break e}case 24:case 22:break e;case 7:{q=48;break e}case 5:{if((p-f|0)<2){e=-2;break a}k[d>>2]=f;e=0;break a}case 6:{if((p-f|0)<3){e=-2;break a}k[d>>2]=f;e=0;break a}default:{q=50;break e}}while(0);if((q|0)==41){a=g&255;if(!(k[92448+((l[179736+e>>0]<<3|a>>>5)<<2)>>2]&1<<(a&31))){k[d>>2]=f;e=0;break a}}else if((q|0)==48){if((p-f|0)<4){e=-2;break a}k[d>>2]=f;e=0;break a}else if((q|0)==50){k[d>>2]=f;e=0;break a}e=b+6|0;if((e|0)==(p|0)){e=-1;break a}f:while(1){g=i[f+3>>0]|0;c=i[e>>0]|0;g:do if(g<<24>>24){f=g&255;switch(f|0){case 223:case 222:case 221:case 220:{q=71;break f}case 219:case 218:case 217:case 216:{q=62;break f}case 255:break;default:{j=f;q=56;break g}}if((c&255)>253){q=71;break f}else{j=255;q=56}}else switch(l[o+(c&255)>>0]|0){case 5:{q=58;break f}case 6:{q=60;break f}case 7:{q=62;break f}case 10:case 9:case 21:{q=55;break f}case 11:{e=f;q=70;break f}case 29:{j=0;q=56;break}case 23:case 27:case 26:case 25:case 24:case 22:break;default:{q=71;break f}}while(0);if((q|0)==56?(q=0,a=c&255,(k[92448+((l[179992+j>>0]<<3|a>>>5)<<2)>>2]&1<<(a&31)|0)==0):0){q=57;break}f=e+2|0;if((f|0)==(p|0)){e=-1;break a}else{a=e;e=f;f=a}}if((q|0)==55){f=f+4|0;if((f|0)==(p|0)){e=-1;break a}h:while(1){if(i[e+3>>0]|0){e=f;q=68;break}switch(l[o+(l[f>>0]|0)>>0]|0){case 11:{q=67;break h}case 10:case 9:case 21:break;default:{e=f;q=68;break h}}e=f+2|0;if((e|0)==(p|0)){e=-1;break a}else{q=f;f=e;e=q}}if((q|0)==67){k[d>>2]=e+4;e=5;break a}else if((q|0)==68){k[d>>2]=e;e=0;break a}}else if((q|0)==57){k[d>>2]=e;e=0;break a}else if((q|0)==58){if((p-e|0)<2){e=-2;break a}k[d>>2]=e;e=0;break a}else if((q|0)==60){if((p-e|0)<3){e=-2;break a}k[d>>2]=e;e=0;break a}else if((q|0)==62){if((p-e|0)<4){e=-2;break a}k[d>>2]=e;e=0;break a}else if((q|0)==70){k[d>>2]=e+4;e=5;break a}else if((q|0)==71){k[d>>2]=e;e=0;break a}break}default:{q=72;break c}}while(0);if((q|0)==14){j=h&255;if(!(k[92448+((l[179736+e>>0]<<3|j>>>5)<<2)>>2]&1<<(j&31))){k[d>>2]=c;e=0;break a}}else if((q|0)==22){if((p-c|0)<4){e=-2;break a}k[d>>2]=c;e=0;break a}else if((q|0)==72){k[d>>2]=c;e=0;break a}e=b+4|0;if((e|0)==(p|0)){e=-1;break a}else j=0;i:while(1){j:while(1){c=i[e+1>>0]|0;h=i[e>>0]|0;k:do if(c<<24>>24){f=c&255;switch(f|0){case 223:case 222:case 221:case 220:{q=218;break i}case 219:case 218:case 217:case 216:{q=85;break i}case 255:break;default:{q=78;break k}}if((h&255)>253){q=218;break i}else{f=255;q=78}}else switch(l[o+(h&255)>>0]|0){case 5:{q=81;break i}case 6:{q=83;break i}case 7:{q=85;break i}case 10:case 9:case 21:{q=77;break i}case 11:{q=212;break i}case 17:break i;case 23:break j;case 29:{f=0;q=78;break}case 27:case 26:case 25:case 24:case 22:break;default:{q=218;break i}}while(0);if((q|0)==78?(q=0,b=h&255,(k[92448+((l[179992+f>>0]<<3|b>>>5)<<2)>>2]&1<<(b&31)|0)==0):0){q=79;break i}e=e+2|0;if((e|0)==(p|0)){e=-1;break a}}if(j){q=88;break}h=e+2|0;if((h|0)==(p|0)){e=-1;break a}c=i[e+3>>0]|0;j=i[h>>0]|0;l:do if(c<<24>>24){g=c&255;switch(g|0){case 223:case 222:case 221:case 220:{e=h;q=103;break i}case 219:case 218:case 217:case 216:{e=h;q=101;break i}case 255:break;default:{q=94;break l}}if((j&255)>253){e=h;q=103;break i}else{g=255;q=94}}else switch(l[o+(j&255)>>0]|0){case 5:{e=h;q=97;break i}case 6:{e=h;q=99;break i}case 7:{e=h;q=101;break i}case 29:{g=0;q=94;break}case 24:case 22:break;default:{e=h;q=103;break i}}while(0);if((q|0)==94?(q=0,b=j&255,(k[92448+((l[179736+g>>0]<<3|b>>>5)<<2)>>2]&1<<(b&31)|0)==0):0){e=h;q=95;break}e=e+4|0;if((e|0)==(p|0)){e=-1;break a}else j=1}m:switch(q|0){case 77:{f=e+2|0;if((f|0)==(p|0)){e=-1;break a}n:while(1){c=i[e+3>>0]|0;g=i[f>>0]|0;if(c<<24>>24){q=105;break}switch(l[o+(g&255)>>0]|0){case 11:{e=f;q=212;break m}case 17:{e=f;break m}case 29:{c=0;q=109;break n}case 24:case 22:break n;case 5:{e=f;q=205;break n}case 6:{e=f;q=207;break n}case 7:{e=f;q=209;break n}case 10:case 9:case 21:break;default:{e=f;q=211;break n}}e=f+2|0;if((e|0)==(p|0)){e=-1;break a}else{b=f;f=e;e=b}}o:do if((q|0)==105){c=c&255;switch(c|0){case 219:case 218:case 217:case 216:{e=f;q=209;break o}case 223:case 222:case 221:case 220:{e=f;q=211;break o}case 255:break;default:{q=109;break o}}if((g&255)>253){e=f;q=211}else{c=255;q=109}}else if((q|0)==205){if((p-e|0)<2){e=-2;break a}k[d>>2]=e;e=0;break a}else if((q|0)==207){if((p-e|0)<3){e=-2;break a}k[d>>2]=e;e=0;break a}while(0);if((q|0)==109){b=g&255;if(!(k[92448+((l[179736+c>>0]<<3|b>>>5)<<2)>>2]&1<<(b&31))){k[d>>2]=f;e=0;break a}}else if((q|0)==209){if((p-e|0)<4){e=-2;break a}k[d>>2]=e;e=0;break a}else if((q|0)==211){k[d>>2]=e;e=0;break a}e=e+4|0;k[n>>2]=e;p:do if((e|0)==(p|0))e=-1;else{h=p;c=0;q:while(1){r:while(1){f=i[e+1>>0]|0;g=i[e>>0]|0;s:do if(f<<24>>24){f=f&255;switch(f|0){case 223:case 222:case 221:case 220:{q=203;break q}case 219:case 218:case 217:case 216:{q=127;break q}case 255:break;default:{m=f;q=120;break s}}if((g&255)>253){q=203;break q}else{m=255;q=120}}else switch(l[o+(g&255)>>0]|0){case 5:{q=123;break q}case 6:{q=125;break q}case 7:{q=127;break q}case 23:{f=e;q=129;break r}case 10:case 9:case 21:{f=e;q=118;break r}case 14:{f=e;q=119;break r}case 29:{m=0;q=120;break}case 27:case 26:case 25:case 24:case 22:break;default:{q=203;break q}}while(0);if((q|0)==120?(q=0,b=g&255,(k[92448+((l[179992+m>>0]<<3|b>>>5)<<2)>>2]&1<<(b&31)|0)==0):0){q=121;break q}e=e+2|0;k[n>>2]=e;if((e|0)==(p|0)){e=-1;break p}}t:do if((q|0)==118){e=f+2|0;k[n>>2]=e;if((e|0)==(p|0)){e=-1;break p}while(1){if(i[f+3>>0]|0){q=148;break q}switch(l[o+(l[e>>0]|0)>>0]|0){case 14:{f=e;q=119;break t}case 9:case 10:case 21:break;default:{q=148;break q}}f=e+2|0;k[n>>2]=f;if((f|0)==(p|0)){e=-1;break p}else{q=e;e=f;f=q}}}else if((q|0)==129){q=0;if(c){e=f;q=130;break q}e=f+2|0;k[n>>2]=e;if((e|0)==(p|0)){e=-1;break p}f=i[f+3>>0]|0;g=i[e>>0]|0;u:do if(f<<24>>24){f=f&255;switch(f|0){case 223:case 222:case 221:case 220:{q=144;break q}case 219:case 218:case 217:case 216:{q=142;break q}case 255:break;default:break u}if((g&255)>253){q=144;break q}else f=255}else switch(l[o+(g&255)>>0]|0){case 5:{q=138;break q}case 6:{q=140;break q}case 7:{q=142;break q}case 24:case 22:{f=1;break t}case 29:{f=0;break}default:{q=144;break q}}while(0);b=g&255;if(!(k[92448+((l[179736+f>>0]<<3|b>>>5)<<2)>>2]&1<<(b&31))){q=137;break q}else f=1}while(0);v:do if((q|0)==119){q=0;e=f+2|0;k[n>>2]=e;if((e|0)==(p|0)){e=-1;break p}while(1){if(i[f+3>>0]|0){q=153;break q}g=l[o+(l[e>>0]|0)>>0]|0;if((g&254|0)==12){e=f;break}switch(g|0){case 9:case 10:case 21:break;default:{q=153;break q}}f=e+2|0;k[n>>2]=f;if((f|0)==(p|0)){e=-1;break p}else{b=e;e=f;f=b}}e=e+4|0;k[n>>2]=e;if((e|0)==(p|0)){e=-1;break p}while(1){f=i[e+1>>0]|0;c=i[e>>0]|0;w:do if(!(f<<24>>24))f=l[o+(c&255)>>0]|0;else{switch(f&255|0){case 219:case 218:case 217:case 216:{f=7;break w}case 223:case 222:case 221:case 220:{f=8;break w}case 255:{if((c&255)>253){f=0;break w}break}default:{}}f=29}while(0);if((f|0)==(g|0))break;switch(f|0){case 8:case 1:case 0:{q=169;break q}case 2:{q=175;break q}case 5:{if((h-e|0)<2){e=-2;break p}e=e+2|0;k[n>>2]=e;break}case 6:{if((h-e|0)<3){e=-2;break p}e=e+3|0;k[n>>2]=e;break}case 7:{if((h-e|0)<4){e=-2;break p}e=e+4|0;k[n>>2]=e;break}case 3:{e=OJ(a,e+2|0,p,n)|0;if((e|0)<1){q=173;break q}e=k[n>>2]|0;break}default:{e=e+2|0;k[n>>2]=e}}if((e|0)==(p|0)){e=-1;break p}}f=e+2|0;k[n>>2]=f;if((f|0)==(p|0)){e=-1;break p}if(i[e+3>>0]|0){e=f;q=181;break q}switch(l[o+(l[f>>0]|0)>>0]|0){case 11:{e=f;q=196;break q}case 17:{e=f;q=197;break q}case 10:case 9:case 21:break;default:{e=f;q=181;break q}}e=e+4|0;k[n>>2]=e;if((e|0)==(p|0)){e=-1;break p}x:while(1){g=i[f+3>>0]|0;f=i[e>>0]|0;if(g<<24>>24){q=183;break}switch(l[o+(f&255)>>0]|0){case 5:{q=190;break q}case 6:{q=192;break q}case 7:{q=194;break q}case 11:{q=196;break q}case 17:{q=197;break q}case 24:case 22:{f=0;break v}case 29:break x;case 10:case 9:case 21:break;default:{q=202;break q}}f=e+2|0;k[n>>2]=f;if((f|0)==(p|0)){e=-1;break p}else{b=e;e=f;f=b}}y:do if((q|0)==183){q=0;switch(g&255|0){case 223:case 222:case 221:case 220:{q=202;break q}case 219:case 218:case 217:case 216:{q=194;break q}case 255:break;default:break y}if((f&255)>253){q=202;break q}}while(0);b=f&255;if(!(k[92448+((l[179736+(l[e+1>>0]|0)>>0]<<3|b>>>5)<<2)>>2]&1<<(b&31))){q=188;break q}else f=0}while(0);e=e+2|0;k[n>>2]=e;if((e|0)==(p|0)){e=-1;break p}else c=f}switch(q|0){case 121:{k[d>>2]=e;e=0;break p}case 123:{if((h-e|0)<2){e=-2;break p}k[d>>2]=e;e=0;break p}case 125:{if((h-e|0)<3){e=-2;break p}k[d>>2]=e;e=0;break p}case 127:{if((h-e|0)<4){e=-2;break p}k[d>>2]=e;e=0;break p}case 130:{k[d>>2]=e;e=0;break p}case 137:{k[d>>2]=e;e=0;break p}case 138:{if((h-e|0)<2){e=-2;break p}k[d>>2]=e;e=0;break p}case 140:{if((h-e|0)<3){e=-2;break p}k[d>>2]=e;e=0;break p}case 142:{if((h-e|0)<4){e=-2;break p}k[d>>2]=e;e=0;break p}case 144:{k[d>>2]=e;e=0;break p}case 148:{k[d>>2]=e;e=0;break p}case 153:{k[d>>2]=e;e=0;break p}case 169:{k[d>>2]=e;e=0;break p}case 173:{if(e)break p;k[d>>2]=k[n>>2];e=0;break p}case 175:{k[d>>2]=e;e=0;break p}case 181:{k[d>>2]=e;e=0;break p}case 188:{k[d>>2]=e;e=0;break p}case 190:{if((h-e|0)<2){e=-2;break p}k[d>>2]=e;e=0;break p}case 192:{if((h-e|0)<3){e=-2;break p}k[d>>2]=e;e=0;break p}case 194:{if((h-e|0)<4){e=-2;break p}k[d>>2]=e;e=0;break p}case 196:{k[d>>2]=e+2;e=1;break p}case 197:{g=e+2|0;k[n>>2]=g;f=g;if((g|0)==(p|0)){e=-1;break p}if((i[e+3>>0]|0)==0?(i[g>>0]|0)==62:0){k[d>>2]=e+4;e=3;break p}k[d>>2]=f;e=0;break p}case 202:{k[d>>2]=e;e=0;break p}case 203:{k[d>>2]=e;e=0;break p}}}while(0);break a}case 79:{k[d>>2]=e;e=0;break a}case 81:{if((p-e|0)<2){e=-2;break a}k[d>>2]=e;e=0;break a}case 83:{if((p-e|0)<3){e=-2;break a}k[d>>2]=e;e=0;break a}case 85:{if((p-e|0)<4){e=-2;break a}k[d>>2]=e;e=0;break a}case 88:{k[d>>2]=e;e=0;break a}case 95:{k[d>>2]=e;e=0;break a}case 97:{if((p-e|0)<2){e=-2;break a}k[d>>2]=e;e=0;break a}case 99:{if((p-e|0)<3){e=-2;break a}k[d>>2]=e;e=0;break a}case 101:{if((p-e|0)<4){e=-2;break a}k[d>>2]=e;e=0;break a}case 103:{k[d>>2]=e;e=0;break a}case 218:{k[d>>2]=e;e=0;break a}}if((q|0)==212){k[d>>2]=e+2;e=2;break a}f=e+2|0;if((f|0)==(p|0)){e=-1;break a}if((i[e+3>>0]|0)==0?(i[f>>0]|0)==62:0){k[d>>2]=e+4;e=4;break a}k[d>>2]=f;e=0;break a}case 3:{e=OJ(a,b+2|0,p,d)|0;break a}case 9:{f=b+2|0;if((f|0)==(p|0)){e=-3;break a}if(!(i[b+3>>0]|0))e=(i[o+(l[f>>0]|0)>>0]|0)==10;else e=0;k[d>>2]=e?b+4|0:f;e=7;break a}case 10:{k[d>>2]=b+2;e=7;break a}case 4:{e=b+2|0;if((e|0)==(p|0)){e=-5;break a}if(i[b+3>>0]|0)break b;if((i[e>>0]|0)!=93)break b;f=b+4|0;if((f|0)==(p|0)){e=-5;break a}if(i[b+5>>0]|0)break b;if((i[f>>0]|0)!=62)break b;k[d>>2]=f;e=0;break a}case 5:{if((p-h|0)<2){e=-2;break a}e=b+2|0;break b}case 6:{if((p-h|0)<3){e=-2;break a}e=b+3|0;break b}default:{q=239;break b}}}while(0);if((q|0)==236){if((p-h|0)<4){e=-2;break}e=b+4|0}else if((q|0)==238){k[d>>2]=b;e=0;break}else if((q|0)==239)e=b+2|0;z:do if((e|0)!=(p|0)){c=a+76|0;h=p;A:while(1){f=i[e+1>>0]|0;g=i[e>>0]|0;B:do if(f<<24>>24){switch(f&255|0){case 223:case 222:case 221:case 220:{q=262;break A}case 219:case 218:case 217:case 216:{q=252;break B}case 255:break;default:{q=263;break B}}if((g&255)>253){q=262;break A}else q=263}else switch(l[c+(g&255)>>0]|0){case 10:case 9:case 8:case 1:case 0:case 2:case 3:{q=262;break A}case 7:{q=252;break B}case 5:{if((h-e|0)<2){q=247;break A}e=e+2|0;break B}case 6:{if((h-e|0)<3){q=250;break A}e=e+3|0;break B}case 4:{f=e+2|0;if((f|0)==(p|0)){q=262;break A}if(i[e+3>>0]|0){e=f;break B}if((i[f>>0]|0)!=93){e=f;break B}g=e+4|0;if((g|0)==(p|0)){q=262;break A}if(i[e+5>>0]|0){e=f;break B}if((i[g>>0]|0)==62){e=g;q=261;break A}else{e=f;break B}}default:{q=263;break B}}while(0);if((q|0)==252){q=0;if((h-e|0)<4){q=253;break}e=e+4|0}else if((q|0)==263){q=0;e=e+2|0}if((e|0)==(p|0))break z}if((q|0)==247){k[d>>2]=e;e=6;break a}else if((q|0)==250){k[d>>2]=e;e=6;break a}else if((q|0)==253){k[d>>2]=e;e=6;break a}else if((q|0)==261){k[d>>2]=e;e=0;break a}else if((q|0)==262){k[d>>2]=e;e=6;break a}}while(0);k[d>>2]=p;e=6}while(0);r=s;return e|0}function zJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;a:do if((b|0)==(c|0))e=-4;else{f=b;e=c-f|0;if(!(e&1))g=c;else{e=e&-2;if(!e){e=-1;break}g=b+e|0}e=i[b+1>>0]|0;c=i[b>>0]|0;b:do if(e<<24>>24){switch(e&255|0){case 219:case 218:case 217:case 216:{h=25;break b}case 223:case 222:case 221:case 220:{h=27;break b}case 255:break;default:{h=28;break b}}if((c&255)>253)h=27;else h=28}else{e=a+76|0;switch(l[e+(c&255)>>0]|0){case 7:{h=25;break b}case 8:case 1:case 0:{h=27;break b}case 4:{e=b+2|0;if((e|0)==(g|0)){e=-1;break a}if(i[b+3>>0]|0)break b;if((i[e>>0]|0)!=93)break b;c=b+4|0;if((c|0)==(g|0)){e=-1;break a}if(i[b+5>>0]|0)break b;if((i[c>>0]|0)!=62)break b;k[d>>2]=b+6;e=40;break a}case 9:{c=b+2|0;if((c|0)==(g|0)){e=-1;break a}if(!(i[b+3>>0]|0))e=(i[e+(l[c>>0]|0)>>0]|0)==10;else e=0;k[d>>2]=e?b+4|0:c;e=7;break a}case 10:{k[d>>2]=b+2;e=7;break a}case 5:{if((g-f|0)<2){e=-2;break a}e=b+2|0;break b}case 6:{if((g-f|0)<3){e=-2;break a}e=b+3|0;break b}default:{h=28;break b}}}while(0);if((h|0)==25){if((g-f|0)<4){e=-2;break}e=b+4|0}else if((h|0)==27){k[d>>2]=b;e=0;break}else if((h|0)==28)e=b+2|0;c:do if((e|0)!=(g|0)){a=a+76|0;b=g;d:while(1){c=i[e+1>>0]|0;f=i[e>>0]|0;e:do if(c<<24>>24){switch(c&255|0){case 223:case 222:case 221:case 220:{h=44;break d}case 219:case 218:case 217:case 216:{h=41;break e}case 255:break;default:{h=45;break e}}if((f&255)>253){h=44;break d}else h=45}else switch(l[a+(f&255)>>0]|0){case 4:case 10:case 9:case 8:case 1:case 0:{h=44;break d}case 7:{h=41;break e}case 5:{if((b-e|0)<2){h=36;break d}e=e+2|0;break e}case 6:{if((b-e|0)<3){h=39;break d}e=e+3|0;break e}default:{h=45;break e}}while(0);if((h|0)==41){h=0;if((b-e|0)<4){h=42;break}e=e+4|0}else if((h|0)==45){h=0;e=e+2|0}if((e|0)==(g|0))break c}if((h|0)==36){k[d>>2]=e;e=6;break a}else if((h|0)==39){k[d>>2]=e;e=6;break a}else if((h|0)==42){k[d>>2]=e;e=6;break a}else if((h|0)==44){k[d>>2]=e;e=6;break a}}while(0);k[d>>2]=g;e=6}while(0);return e|0}function AJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;h=c-b|0;h=(h&1|0)==0?c:b+(h&-2)|0;a:do if((h|0)!=(b|0)){f=a+76|0;g=h;e=0;b:while(1){c=i[b+1>>0]|0;a=i[b>>0]|0;c:do if(c<<24>>24){switch(c&255|0){case 223:case 222:case 221:case 220:{j=13;break b}case 219:case 218:case 217:case 216:{j=11;break c}case 255:break;default:{j=31;break c}}if((a&255)>253){j=13;break b}else j=31}else switch(l[f+(a&255)>>0]|0){case 8:case 1:case 0:{j=13;break b}case 7:{j=11;break c}case 5:{if((g-b|0)<2){b=-2;break a}b=b+2|0;c=e;break c}case 6:{if((g-b|0)<3){b=-2;break a}b=b+3|0;c=e;break c}case 2:{c=b+2|0;if((c|0)==(h|0)){b=-1;break a}if(i[b+3>>0]|0){b=c;c=e;break c}if((i[c>>0]|0)!=33){b=c;c=e;break c}c=b+4|0;if((c|0)==(h|0)){b=-1;break a}if(i[b+5>>0]|0){b=c;c=e;break c}if((i[c>>0]|0)!=91){b=c;c=e;break c}b=b+6|0;c=e+1|0;break c}case 4:{c=b+2|0;if((c|0)==(h|0)){b=-1;break a}if(i[b+3>>0]|0){b=c;c=e;break c}if((i[c>>0]|0)!=93){b=c;c=e;break c}c=b+4|0;if((c|0)==(h|0)){b=-1;break a}if(i[b+5>>0]|0){b=c;c=e;break c}if((i[c>>0]|0)!=62){b=c;c=e;break c}b=b+6|0;if(!e){j=29;break b}c=e+-1|0;break c}default:{j=31;break c}}while(0);if((j|0)==11){j=0;if((g-b|0)<4){b=-2;break a}b=b+4|0;c=e}else if((j|0)==31){j=0;b=b+2|0;c=e}if((b|0)==(h|0)){b=-1;break a}else e=c}if((j|0)==13){k[d>>2]=b;b=0;break}else if((j|0)==29){k[d>>2]=b;b=42;break}}else b=-1;while(0);return b|0}function BJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;do if((b|0)!=(c|0)){g=a+76|0;e=b;a:while(1){f=i[e+1>>0]|0;b:do if(f<<24>>24)if((f&-4)<<24>>24==-40)h=8;else h=25;else switch(l[g+(l[e>>0]|0)>>0]|0){case 3:{h=9;break a}case 2:{h=12;break a}case 10:{h=13;break a}case 9:{h=16;break a}case 21:{h=22;break a}case 7:{h=8;break b}case 5:{e=e+2|0;break b}case 6:{e=e+3|0;break b}default:{h=25;break b}}while(0);if((h|0)==8){h=0;e=e+4|0}else if((h|0)==25){h=0;e=e+2|0}if((e|0)==(c|0)){h=27;break}}if((h|0)==9)if((e|0)==(b|0)){e=OJ(a,b+2|0,c,d)|0;break}else{k[d>>2]=e;e=6;break}else if((h|0)==12){k[d>>2]=e;e=0;break}else if((h|0)==13)if((e|0)==(b|0)){k[d>>2]=b+2;e=7;break}else{k[d>>2]=e;e=6;break}else if((h|0)==16){if((e|0)!=(b|0)){k[d>>2]=e;e=6;break}f=b+2|0;if((f|0)==(c|0)){e=-3;break}if(!(i[b+3>>0]|0))e=(i[g+(l[f>>0]|0)>>0]|0)==10;else e=0;k[d>>2]=e?b+4|0:f;e=7;break}else if((h|0)==22)if((e|0)==(b|0)){k[d>>2]=b+2;e=39;break}else{k[d>>2]=e;e=6;break}else if((h|0)==27){k[d>>2]=c;e=6;break}}else e=-4;while(0);return e|0}function CJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;do if((b|0)!=(c|0)){g=a+76|0;e=b;a:while(1){f=i[e+1>>0]|0;b:do if(f<<24>>24)if((f&-4)<<24>>24==-40)h=8;else h=24;else switch(l[g+(l[e>>0]|0)>>0]|0){case 3:{h=9;break a}case 30:{h=12;break a}case 10:{h=15;break a}case 9:{h=18;break a}case 7:{h=8;break b}case 5:{e=e+2|0;break b}case 6:{e=e+3|0;break b}default:{h=24;break b}}while(0);if((h|0)==8){h=0;e=e+4|0}else if((h|0)==24){h=0;e=e+2|0}if((e|0)==(c|0)){h=26;break}}if((h|0)==9)if((e|0)==(b|0)){e=OJ(a,b+2|0,c,d)|0;break}else{k[d>>2]=e;e=6;break}else if((h|0)==12)if((e|0)==(b|0)){e=PJ(a,b+2|0,c,d)|0;e=(e|0)==22?0:e;break}else{k[d>>2]=e;e=6;break}else if((h|0)==15)if((e|0)==(b|0)){k[d>>2]=b+2;e=7;break}else{k[d>>2]=e;e=6;break}else if((h|0)==18){if((e|0)!=(b|0)){k[d>>2]=e;e=6;break}f=b+2|0;if((f|0)==(c|0)){e=-3;break}if(!(i[b+3>>0]|0))e=(i[g+(l[f>>0]|0)>>0]|0)==10;else e=0;k[d>>2]=e?b+4|0:f;e=7;break}else if((h|0)==26){k[d>>2]=c;e=6;break}}else e=-4;while(0);return e|0}function DJ(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;g=a+76|0;a=c;c=b;a:while(1){d=c+1|0;e=i[d>>0]|0;b=i[c>>0]|0;b:do if(e<<24>>24){switch(e&255|0){case 223:case 222:case 221:case 220:{f=15;break a}case 219:case 218:case 217:case 216:{f=6;break b}case 255:break;default:{f=12;break b}}if((b&255)>253){f=15;break a}else f=12}else switch(l[g+(b&255)>>0]|0){case 7:{f=6;break}case 6:{f=8;break}case 5:{f=10;break}case 27:case 26:case 25:case 24:case 23:case 22:case 29:{f=12;break}default:{f=15;break a}}while(0);if((f|0)==6){f=0;if(b<<24>>24!=(i[a>>0]|0)){a=0;break}a=a+1|0;c=d;b=e;f=8}else if((f|0)==12){f=0;if((i[a>>0]|0)!=b<<24>>24){a=0;break}if((i[a+1>>0]|0)!=e<<24>>24){a=0;break}}if((f|0)==8){f=0;d=c+1|0;if(b<<24>>24!=(i[a>>0]|0)){a=0;break}a=a+1|0;c=d;b=i[d>>0]|0;f=10}if((f|0)==10){f=0;if(b<<24>>24!=(i[a>>0]|0)){a=0;break}if((i[c+1>>0]|0)!=(i[a+1>>0]|0)){a=0;break}}a=a+2|0;c=c+2|0}c:do if((f|0)==15){c=i[a+1>>0]|0;a=i[a>>0]|0;d:do if(c<<24>>24){switch(c&255|0){case 220:case 221:case 222:case 223:break d;case 255:break;default:{a=0;break c}}if((a&255)<=253){a=0;break c}}else switch(l[g+(a&255)>>0]|0){case 27:case 26:case 25:case 24:case 23:case 22:case 29:case 7:case 6:case 5:{a=0;break c}default:{}}while(0);a=1}while(0);return a|0}function EJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=i[d>>0]|0;a=(b|0)==(c|0);a:do if(!(e<<24>>24))f=6;else while(1){if(a){a=0;break a}if(i[b+1>>0]|0){a=0;break a}if((i[b>>0]|0)!=e<<24>>24){a=0;break a}b=b+2|0;d=d+1|0;e=i[d>>0]|0;a=(b|0)==(c|0);if(!(e<<24>>24)){f=6;break}}while(0);if((f|0)==6)a=a&1;return a|0}function FJ(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=a+76|0;a=b;a:while(1){c=i[a+1>>0]|0;d=i[a>>0]|0;b:do if(c<<24>>24){switch(c&255|0){case 223:case 222:case 221:case 220:break a;case 219:case 218:case 217:case 216:{c=8;break b}case 255:break;default:{c=9;break b}}if((d&255)>253)break a;else c=9}else switch(l[e+(d&255)>>0]|0|0){case 7:{c=8;break b}case 27:case 26:case 25:case 24:case 23:case 22:case 29:{c=9;break b}case 5:{a=a+2|0;continue a}case 6:{a=a+3|0;continue a}default:break a}while(0);if((c|0)==8){a=a+4|0;continue}else if((c|0)==9){a=a+2|0;continue}}return a-b|0}function GJ(a,b){a=a|0;b=b|0;var c=0;a:do if(!(i[b+1>>0]|0)){c=a+76|0;while(1){switch(l[c+(l[b>>0]|0)>>0]|0){case 21:case 9:case 10:break;default:break a}a=b+2|0;if(!(i[b+3>>0]|0))b=a;else{b=a;break a}}}while(0);return b|0}function HJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,m=0,n=0,o=0,p=0,q=0,r=0;m=a+76|0;a=0;n=0;e=1;a:while(1){j=b+2|0;f=b+3|0;g=i[f>>0]|0;h=i[j>>0]|0;b:do if(g<<24>>24){switch(g&255|0){case 223:case 222:case 221:case 220:{f=e;g=n;h=a;b=j;e=f;n=g;a=h;continue a}case 219:case 218:case 217:case 216:{r=12;break b}case 255:break;default:{r=16;break b}}if(!((e|0)==0&(h&255)<254)){f=e;g=n;h=a;b=j;e=f;n=g;a=h;continue a}}else switch(l[m+(h&255)>>0]|0){case 7:{r=12;break b}case 24:case 22:case 29:{r=16;break b}case 5:{if(e){f=e;g=n;h=a;b=j;e=f;n=g;a=h;continue a}if((a|0)>=(c|0)){g=n;h=a;b=j;e=1;n=g;a=h;continue a}k[d+(a<<4)>>2]=j;i[d+(a<<4)+12>>0]=1;g=n;h=a;b=j;e=1;n=g;a=h;continue a}case 6:{if(e){g=e;h=n;j=a;b=f;e=g;n=h;a=j;continue a}if((a|0)>=(c|0)){h=n;j=a;b=f;e=1;n=h;a=j;continue a}k[d+(a<<4)>>2]=j;i[d+(a<<4)+12>>0]=1;h=n;j=a;b=f;e=1;n=h;a=j;continue a}case 12:{if((e|0)!=2){if((a|0)>=(c|0)){h=a;n=12;b=j;e=2;a=h;continue a}k[d+(a<<4)+4>>2]=b+4;h=a;n=12;b=j;e=2;a=h;continue a}if((n|0)!=12){g=n;h=a;b=j;e=2;n=g;a=h;continue a}if((a|0)<(c|0))k[d+(a<<4)+8>>2]=j;a=a+1|0;n=12;b=j;e=0;continue a}case 13:{if((e|0)!=2){if((a|0)>=(c|0)){h=a;n=13;b=j;e=2;a=h;continue a}k[d+(a<<4)+4>>2]=b+4;h=a;n=13;b=j;e=2;a=h;continue a}if((n|0)!=13){g=n;h=a;b=j;e=2;n=g;a=h;continue a}if((a|0)<(c|0))k[d+(a<<4)+8>>2]=j;a=a+1|0;n=13;b=j;e=0;continue a}case 3:{if((a|0)>=(c|0)){f=e;g=n;h=a;b=j;e=f;n=g;a=h;continue a}i[d+(a<<4)+12>>0]=0;f=e;g=n;h=a;b=j;e=f;n=g;a=h;continue a}case 21:{if((e|0)==1){g=n;h=a;b=j;e=0;n=g;a=h;continue a}if(!((e|0)==2&(a|0)<(c|0))){f=e;g=n;h=a;b=j;e=f;n=g;a=h;continue a}e=d+(a<<4)+12|0;if(!(i[e>>0]|0)){g=n;h=a;b=j;e=2;n=g;a=h;continue a}if((h<<24>>24==32?(j|0)!=(k[d+(a<<4)+4>>2]|0):0)?(o=i[b+5>>0]|0,p=o<<24>>24==0,q=i[b+4>>0]|0,!(p&q<<24>>24==32)):0){if(!p)if((q&255)>253&o<<24>>24==-1)b=0;else{g=n;h=a;b=j;e=2;n=g;a=h;continue a}else b=l[m+(q&255)>>0]|0;if((b|0)!=(n|0)){g=n;h=a;b=j;e=2;n=g;a=h;continue a}}i[e>>0]=0;g=n;h=a;b=j;e=2;n=g;a=h;continue a}case 10:case 9:{if((e|0)==1){g=n;h=a;b=j;e=0;n=g;a=h;continue a}if(!((e|0)==2&(a|0)<(c|0))){f=e;g=n;h=a;b=j;e=f;n=g;a=h;continue a}i[d+(a<<4)+12>>0]=0;g=n;h=a;b=j;e=2;n=g;a=h;continue a}case 17:case 11:if((e|0)==2){g=n;h=a;b=j;e=2;n=g;a=h;continue a}else break a;default:{f=e;g=n;h=a;b=j;e=f;n=g;a=h;continue a}}while(0);if((r|0)==12){r=0;if(!e)if((a|0)<(c|0)){k[d+(a<<4)>>2]=j;i[d+(a<<4)+12>>0]=1;e=1}else e=1;h=n;j=a;b=b+4|0;n=h;a=j;continue}else if((r|0)==16?(r=0,(e|0)!=0):0){f=e;g=n;h=a;b=j;e=f;n=g;a=h;continue}if((a|0)>=(c|0)){g=n;h=a;b=j;e=1;n=g;a=h;continue}k[d+(a<<4)>>2]=j;i[d+(a<<4)+12>>0]=1;g=n;h=a;b=j;e=1;n=g;a=h}return a|0}function IJ(a,b){a=a|0;b=b|0;var c=0,d=0;a=b+4|0;a:do if((i[b+5>>0]|0)==0?(i[a>>0]|0)==120:0){c=b+6|0;a=0;while(1){b:do if(!(i[c+1>>0]|0)){b=i[c>>0]|0;if(b<<24>>24==59){d=16;break a}b=b<<24>>24;switch(b|0){case 57:case 56:case 55:case 54:case 53:case 52:case 51:case 50:case 49:case 48:{a=b+-48|a<<4;break}case 70:case 69:case 68:case 67:case 66:case 65:{a=(a<<4)+-55+b|0;break}case 102:case 101:case 100:case 99:case 98:case 97:{a=(a<<4)+-87+b|0;break}default:break b}if((a|0)>1114111){a=-1;break a}}while(0);c=c+2|0}}else{c=a;a=0;d=12}while(0);c:do if((d|0)==12)while(1){d=0;if(!(i[c+1>>0]|0)){b=i[c>>0]|0;if(b<<24>>24==59){d=16;break c}b=b<<24>>24}else b=-1;a=(a*10|0)+-48+b|0;if((a|0)>1114111){a=-1;break}else{c=c+2|0;d=12}}while(0);d:do if((d|0)==16)switch(a>>8|0){case 223:case 222:case 221:case 220:case 219:case 218:case 217:case 216:{a=-1;break d}case 0:{if(!(i[92156+a>>0]|0)){a=-1;break d}break}case 255:{if((a&-2|0)==65534){a=-1;break d}break}default:{}}while(0);return a|0}function JJ(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;a:do switch((c-b|0)/2|0|0){case 2:{if((i[b+3>>0]|0)==0?(i[b+2>>0]|0)==116:0){if(!(i[b+1>>0]|0))a=i[b>>0]|0;else a=-1;a=(a|0)==108?60:(a|0)==103?62:0}else d=27;break}case 3:{if((((((i[b+1>>0]|0)==0?(i[b>>0]|0)==97:0)?(i[b+3>>0]|0)==0:0)?(i[b+2>>0]|0)==109:0)?(i[b+5>>0]|0)==0:0)?(i[b+4>>0]|0)==112:0)a=38;else d=27;break}case 4:{if(!(i[b+1>>0]|0))switch(i[b>>0]|0){case 113:{if(i[b+3>>0]|0){d=27;break a}if((i[b+2>>0]|0)!=117){d=27;break a}if(i[b+5>>0]|0){d=27;break a}if((i[b+4>>0]|0)!=111){d=27;break a}if(i[b+7>>0]|0){d=27;break a}if((i[b+6>>0]|0)==116){a=34;break a}else{d=27;break a}}case 97:{if(i[b+3>>0]|0){d=27;break a}if((i[b+2>>0]|0)!=112){d=27;break a}if(i[b+5>>0]|0){d=27;break a}if((i[b+4>>0]|0)!=111){d=27;break a}if(i[b+7>>0]|0){d=27;break a}if((i[b+6>>0]|0)==115){a=39;break a}else{d=27;break a}}default:{d=27;break a}}else d=27;break}default:d=27}while(0);if((d|0)==27)a=0;return a|0}function KJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;if(b>>>0<c>>>0){g=a+76|0;h=d+4|0;a=b;do{b=i[a+1>>0]|0;a:do if(b<<24>>24)if((b&-4)<<24>>24==-40)j=8;else j=19;else switch(l[g+(l[a>>0]|0)>>0]|0|0){case 7:{j=8;break a}case 5:{a=a+2|0;break a}case 6:{a=a+3|0;break a}case 10:{k[h>>2]=-1;k[d>>2]=(k[d>>2]|0)+1;a=a+2|0;break a}case 9:{k[d>>2]=(k[d>>2]|0)+1;f=a+2|0;if((f|0)==(c|0))a=c;else{b=i[a+3>>0]|0;e=i[f>>0]|0;b:do if(!(b<<24>>24))b=l[g+(e&255)>>0]|0;else{switch(b&255|0){case 219:case 218:case 217:case 216:{b=7;break b}case 223:case 222:case 221:case 220:{b=8;break b}case 255:{if((e&255)>253){b=0;break b}break}default:{}}b=29}while(0);a=(b|0)==10?a+4|0:f}k[h>>2]=-1;break a}default:{j=19;break a}}while(0);if((j|0)==8){j=0;a=a+4|0}else if((j|0)==19){j=0;a=a+2|0}k[h>>2]=(k[h>>2]|0)+1}while(a>>>0<c>>>0)}return}function LJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;e=c+-2|0;c=b+2|0;a:do if((c|0)!=(e|0)){a=a+76|0;b:while(1){if(i[b+3>>0]|0){f=10;break}b=i[c>>0]|0;switch(l[a+(b&255)>>0]|0){case 23:case 19:case 30:case 33:case 16:case 18:case 10:case 9:case 15:case 14:case 17:case 35:case 34:case 32:case 31:case 13:case 27:case 24:case 25:break;case 21:{if(b<<24>>24==9){f=7;break b}break}case 22:case 26:{if(b<<24>>24<0)f=9;break}default:f=9}if((f|0)==9){f=0;switch(i[c>>0]|0){case 64:case 36:break;default:{f=10;break b}}}b=c+2|0;if((b|0)==(e|0)){c=1;break a}else{g=c;c=b;b=g}}if((f|0)==7){k[d>>2]=c;c=0;break}else if((f|0)==10){k[d>>2]=c;c=0;break}}else c=1;while(0);return c|0}function MJ(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,m=0,n=0;a=k[b>>2]|0;a:do if((a|0)!=(c|0)){j=e;b:while(1){h=i[a>>0]|0;g=l[a+1>>0]|0;switch(g|0){case 0:{if(h<<24>>24>-1){f=k[d>>2]|0;if((f|0)==(e|0)){m=6;break b}k[d>>2]=f+1;i[f>>0]=h}else m=8;break}case 7:case 6:case 5:case 4:case 3:case 2:case 1:{m=8;break}case 219:case 218:case 217:case 216:{f=k[d>>2]|0;if((j-f|0)<4){m=15;break b}n=h&255;g=(g<<2&12|n>>>6)+1|0;k[d>>2]=f+1;i[f>>0]=g>>>2|240;h=k[d>>2]|0;k[d>>2]=h+1;i[h>>0]=n>>>2&15|g<<4&48|128;h=a+2|0;g=l[h>>0]|0;f=(n<<4&48|g>>>6|(l[a+3>>0]|0)<<2&12|128)&255;a=k[d>>2]|0;k[d>>2]=a+1;i[a>>0]=f;a=k[d>>2]|0;k[d>>2]=a+1;i[a>>0]=g&63|128;a=h;break}default:{f=k[d>>2]|0;if((j-f|0)<3){m=12;break b}k[d>>2]=f+1;i[f>>0]=g>>>4|224;h=h&255;n=k[d>>2]|0;k[d>>2]=n+1;i[n>>0]=h>>>6|g<<2&60|128;n=k[d>>2]|0;k[d>>2]=n+1;i[n>>0]=h&63|128}}if((m|0)==8){m=0;f=k[d>>2]|0;if((j-f|0)<2){m=9;break}h=h&255;k[d>>2]=f+1;i[f>>0]=h>>>6|g<<2|192;n=k[d>>2]|0;k[d>>2]=n+1;i[n>>0]=h&63|128}a=a+2|0;if((a|0)==(c|0)){m=18;break a}}if((m|0)==6){k[b>>2]=a;break}else if((m|0)==9){k[b>>2]=a;break}else if((m|0)==12){k[b>>2]=a;break}else if((m|0)==15){k[b>>2]=a;break}}else m=18;while(0);if((m|0)==18)k[b>>2]=c;return}function NJ(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;f=k[b>>2]|0;a=k[d>>2]|0;if((c-f|0)>(e-a|0))c=(i[c+-1>>0]&-8)<<24>>24==-40?c+-2|0:c;a:do if(!((f|0)==(c|0)|(a|0)==(e|0)))do{g=((l[f+1>>0]|0)<<8|(l[f>>0]|0))&65535;k[d>>2]=a+2;j[a>>1]=g;f=(k[b>>2]|0)+2|0;k[b>>2]=f;if((f|0)==(c|0))break a;a=k[d>>2]|0}while((a|0)!=(e|0));while(0);return}function OJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;a:do if((b|0)!=(c|0)){e=i[b+1>>0]|0;g=i[b>>0]|0;b:do if(e<<24>>24){e=e&255;switch(e|0){case 219:case 218:case 217:case 216:{j=14;break b}case 223:case 222:case 221:case 220:{j=36;break b}case 255:break;default:{j=8;break b}}if((g&255)>253)j=36;else{e=255;j=8}}else{h=a+76|0;switch(l[h+(g&255)>>0]|0){case 29:{e=0;j=8;break b}case 24:case 22:break b;case 7:{j=14;break b}case 5:{if((c-b|0)<2){e=-2;break a}k[d>>2]=b;e=0;break a}case 6:{if((c-b|0)<3){e=-2;break a}k[d>>2]=b;e=0;break a}case 19:{f=b+2|0;if((f|0)==(c|0)){e=-1;break a}do if(!(i[b+3>>0]|0)){e=i[f>>0]|0;if(e<<24>>24!=120){if((i[h+(e&255)>>0]|0)!=25)break;c:while(1){e=f+2|0;if((e|0)==(c|0)){e=-1;break a}if(i[b+5>>0]|0){j=35;break}switch(l[h+(l[e>>0]|0)>>0]|0){case 25:{b=f;f=e;break}case 18:{e=b;j=34;break c}default:{j=35;break c}}}if((j|0)==34){k[d>>2]=e+6;e=10;break a}else if((j|0)==35){k[d>>2]=e;e=0;break a}}f=b+4|0;if((f|0)==(c|0)){e=-1;break a}if((i[b+5>>0]|0)==0?(i[h+(l[f>>0]|0)>>0]&-2)<<24>>24==24:0){e=b+6|0;if((e|0)==(c|0)){e=-1;break a}d:while(1){if(i[f+3>>0]|0){j=28;break}switch(l[h+(l[e>>0]|0)>>0]|0){case 18:{e=f;j=27;break d}case 24:case 25:break;default:{j=28;break d}}f=e+2|0;if((f|0)==(c|0)){e=-1;break a}else{j=e;e=f;f=j}}if((j|0)==27){k[d>>2]=e+4;e=10;break a}else if((j|0)==28){k[d>>2]=e;e=0;break a}}k[d>>2]=f;e=0;break a}while(0);k[d>>2]=f;e=0;break a}default:{j=36;break b}}}while(0);if((j|0)==8){h=g&255;if(!(1<<(h&31)&k[92448+((h>>>5|l[179736+e>>0]<<3)<<2)>>2])){k[d>>2]=b;e=0;break}}else if((j|0)==14){if((c-b|0)<4){e=-2;break}k[d>>2]=b;e=0;break}else if((j|0)==36){k[d>>2]=b;e=0;break}e=b+2|0;if((e|0)!=(c|0)){h=a+76|0;e:while(1){g=i[b+3>>0]|0;a=i[e>>0]|0;f:do if(g<<24>>24){f=g&255;switch(f|0){case 223:case 222:case 221:case 220:{j=51;break e}case 219:case 218:case 217:case 216:{j=48;break e}case 255:break;default:{j=41;break f}}if((a&255)>253){j=51;break e}else{f=255;j=41}}else switch(l[h+(a&255)>>0]|0){case 5:{j=44;break e}case 6:{j=46;break e}case 7:{j=48;break e}case 18:{e=b;j=50;break e}case 29:{f=0;j=41;break}case 27:case 26:case 25:case 24:case 22:break;default:{j=51;break e}}while(0);if((j|0)==41?(j=0,a=a&255,(1<<(a&31)&k[92448+((a>>>5|l[179992+f>>0]<<3)<<2)>>2]|0)==0):0){j=43;break}b=e+2|0;if((b|0)==(c|0)){e=-1;break a}else{a=e;e=b;b=a}}if((j|0)==43){k[d>>2]=e;e=0;break}else if((j|0)==44){if((c-e|0)<2){e=-2;break}k[d>>2]=e;e=0;break}else if((j|0)==46){if((c-e|0)<3){e=-2;break}k[d>>2]=e;e=0;break}else if((j|0)==48){if((c-e|0)<4){e=-2;break}k[d>>2]=e;e=0;break}else if((j|0)==50){k[d>>2]=e+4;e=9;break}else if((j|0)==51){k[d>>2]=e;e=0;break}}else e=-1}else e=-1;while(0);return e|0}function PJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;a:do if((b|0)!=(c|0)){e=i[b+1>>0]|0;g=i[b>>0]|0;b:do if(e<<24>>24){e=e&255;switch(e|0){case 219:case 218:case 217:case 216:{j=14;break b}case 223:case 222:case 221:case 220:{j=17;break b}case 255:break;default:{j=8;break b}}if((g&255)>253)j=17;else{e=255;j=8}}else switch(l[a+76+(g&255)>>0]|0|0){case 29:{e=0;j=8;break b}case 24:case 22:break b;case 7:{j=14;break b}case 5:{if((c-b|0)<2){e=-2;break a}k[d>>2]=b;e=0;break a}case 6:{if((c-b|0)<3){e=-2;break a}k[d>>2]=b;e=0;break a}case 30:case 9:case 10:case 21:{k[d>>2]=b;e=22;break a}default:{j=17;break b}}while(0);if((j|0)==8){h=g&255;if(!(1<<(h&31)&k[92448+((h>>>5|(l[179736+e>>0]|0)<<3)<<2)>>2])){k[d>>2]=b;e=0;break}}else if((j|0)==14){if((c-b|0)<4){e=-2;break}k[d>>2]=b;e=0;break}else if((j|0)==17){k[d>>2]=b;e=0;break}e=b+2|0;if((e|0)!=(c|0)){h=a+76|0;c:while(1){g=i[b+3>>0]|0;a=i[e>>0]|0;d:do if(g<<24>>24){f=g&255;switch(f|0){case 223:case 222:case 221:case 220:{j=32;break c}case 219:case 218:case 217:case 216:{j=29;break c}case 255:break;default:{j=22;break d}}if((a&255)>253){j=32;break c}else{f=255;j=22}}else switch(l[h+(a&255)>>0]|0|0){case 5:{j=25;break c}case 6:{j=27;break c}case 7:{j=29;break c}case 18:{e=b;j=31;break c}case 29:{f=0;j=22;break}case 27:case 26:case 25:case 24:case 22:break;default:{j=32;break c}}while(0);if((j|0)==22?(j=0,a=a&255,(1<<(a&31)&k[92448+((a>>>5|(l[179992+f>>0]|0)<<3)<<2)>>2]|0)==0):0){j=24;break}g=e+2|0;if((g|0)==(c|0)){e=-1;break a}else{b=e;e=g}}if((j|0)==24){k[d>>2]=e;e=0;break}else if((j|0)==25){if((c-e|0)<2){e=-2;break}k[d>>2]=e;e=0;break}else if((j|0)==27){if((c-e|0)<3){e=-2;break}k[d>>2]=e;e=0;break}else if((j|0)==29){if((c-e|0)<4){e=-2;break}k[d>>2]=e;e=0;break}else if((j|0)==31){k[d>>2]=e+4;e=28;break}else if((j|0)==32){k[d>>2]=e;e=0;break}}else e=-1}else e=-1;while(0);return e|0}function QJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;a:do if((b|0)==(c|0))b=-1;else{if((i[b+1>>0]|0)==0?(i[b>>0]|0)==45:0){b=b+2|0;if((b|0)==(c|0)){b=-1;break}f=a+76|0;g=c;b:while(1){a=i[b+1>>0]|0;e=i[b>>0]|0;c:do if(a<<24>>24){switch(a&255|0){case 223:case 222:case 221:case 220:{h=17;break b}case 219:case 218:case 217:case 216:{h=15;break c}case 255:break;default:{h=27;break c}}if((e&255)>253){h=17;break b}else h=27}else switch(l[f+(e&255)>>0]|0){case 8:case 1:case 0:{h=17;break b}case 7:{h=15;break c}case 5:{if((g-b|0)<2){b=-2;break a}b=b+2|0;break c}case 6:{if((g-b|0)<3){b=-2;break a}b=b+3|0;break c}case 27:{a=b+2|0;if((a|0)==(c|0)){b=-1;break a}if(i[b+3>>0]|0){b=a;break c}if((i[a>>0]|0)==45)break b;else{b=a;break c}}default:{h=27;break c}}while(0);if((h|0)==15){h=0;if((g-b|0)<4){b=-2;break a}b=b+4|0}else if((h|0)==27){h=0;b=b+2|0}if((b|0)==(c|0)){b=-1;break a}}if((h|0)==17){k[d>>2]=b;b=0;break}a=b+4|0;if((a|0)==(c|0)){b=-1;break}if((i[b+5>>0]|0)==0?(i[a>>0]|0)==62:0){k[d>>2]=b+6;b=13;break}k[d>>2]=a;b=0;break}k[d>>2]=b;b=0}while(0);return b|0}function RJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,m=0,n=0,o=0;o=r;r=r+16|0;m=o;a:do if((b|0)!=(c|0)){e=i[b+1>>0]|0;f=i[b>>0]|0;b:do if(e<<24>>24){e=e&255;switch(e|0){case 219:case 218:case 217:case 216:{n=14;break b}case 223:case 222:case 221:case 220:{n=16;break b}case 255:break;default:{n=8;break b}}if((f&255)>253)n=16;else{e=255;n=8}}else switch(l[a+76+(f&255)>>0]|0){case 29:{e=0;n=8;break b}case 24:case 22:break b;case 7:{n=14;break b}case 5:{if((c-b|0)<2){e=-2;break a}k[d>>2]=b;e=0;break a}case 6:{if((c-b|0)<3){e=-2;break a}k[d>>2]=b;e=0;break a}default:{n=16;break b}}while(0);if((n|0)==8){j=f&255;if(!(1<<(j&31)&k[92448+((j>>>5|l[179736+e>>0]<<3)<<2)>>2])){k[d>>2]=b;e=0;break}}else if((n|0)==14){if((c-b|0)<4){e=-2;break}k[d>>2]=b;e=0;break}else if((n|0)==16){k[d>>2]=b;e=0;break}e=b+2|0;if((e|0)!=(c|0)){j=a+76|0;f=b;c:while(1){a=i[f+3>>0]|0;g=i[e>>0]|0;d:do if(a<<24>>24){f=a&255;switch(f|0){case 223:case 222:case 221:case 220:break c;case 219:case 218:case 217:case 216:{n=28;break c}case 255:break;default:{h=f;n=21;break d}}if((g&255)>253)break c;else{h=255;n=21}}else switch(l[j+(g&255)>>0]|0){case 5:{n=24;break c}case 6:{n=26;break c}case 7:{n=28;break c}case 10:case 9:case 21:{n=30;break c}case 15:{n=51;break c}case 29:{h=0;n=21;break}case 27:case 26:case 25:case 24:case 22:break;default:break c}while(0);if((n|0)==21?(n=0,g=g&255,(1<<(g&31)&k[92448+((g>>>5|l[179992+h>>0]<<3)<<2)>>2]|0)==0):0){n=23;break}f=e+2|0;if((f|0)==(c|0)){e=-1;break a}else{g=e;e=f;f=g}}if((n|0)==23){k[d>>2]=e;e=0;break}else if((n|0)==24){if((c-e|0)<2){e=-2;break}k[d>>2]=e;e=0;break}else if((n|0)==26){if((c-e|0)<3){e=-2;break}k[d>>2]=e;e=0;break}else if((n|0)==28){if((c-e|0)<4){e=-2;break}k[d>>2]=e;e=0;break}else if((n|0)==30){if(!(SJ(b,e,m)|0)){k[d>>2]=e;e=0;break}e=f+4|0;if((e|0)==(c|0)){e=-1;break}g=c;e:while(1){f=i[e+1>>0]|0;a=i[e>>0]|0;f:do if(f<<24>>24){switch(f&255|0){case 223:case 222:case 221:case 220:{n=44;break e}case 219:case 218:case 217:case 216:{n=42;break f}case 255:break;default:{n=50;break f}}if((a&255)>253){n=44;break e}else n=50}else switch(l[j+(a&255)>>0]|0){case 8:case 1:case 0:{n=44;break e}case 7:{n=42;break f}case 5:{if((g-e|0)<2){e=-2;break a}e=e+2|0;break f}case 6:{if((g-e|0)<3){e=-2;break a}e=e+3|0;break f}case 15:{f=e+2|0;if((f|0)==(c|0)){e=-1;break a}if(i[e+3>>0]|0){e=f;break f}if((i[f>>0]|0)==62){n=49;break e}else{e=f;break f}}default:{n=50;break f}}while(0);if((n|0)==42){n=0;if((g-e|0)<4){e=-2;break a}e=e+4|0}else if((n|0)==50){n=0;e=e+2|0}if((e|0)==(c|0)){e=-1;break a}}if((n|0)==44){k[d>>2]=e;e=0;break}else if((n|0)==49){k[d>>2]=e+4;e=k[m>>2]|0;break}}else if((n|0)==51){if(!(SJ(b,e,m)|0)){k[d>>2]=e;e=0;break}e=f+4|0;if((e|0)==(c|0)){e=-1;break}if((i[f+5>>0]|0)==0?(i[e>>0]|0)==62:0){k[d>>2]=f+6;e=k[m>>2]|0;break}}k[d>>2]=e;e=0}else e=-1}else e=-1;while(0);r=o;return e|0}function SJ(a,b,c){a=a|0;b=b|0;c=c|0;k[c>>2]=11;a:do if((b-a|0)==6?(i[a+1>>0]|0)==0:0){switch(i[a>>0]|0){case 120:{b=0;break}case 88:{b=1;break}default:{b=1;break a}}if(!(i[a+3>>0]|0)){switch(i[a+2>>0]|0){case 109:break;case 77:{b=1;break}default:{b=1;break a}}if(!(i[a+5>>0]|0)){switch(i[a+4>>0]|0){case 108:break;case 76:{b=0;break a}default:{b=1;break a}}if(!b){k[c>>2]=12;b=1}else b=0}else b=1}else b=1}else b=1;while(0);return b|0}function TJ(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;a:do if((c|0)!=(d|0)){h=b+76|0;g=d;b:while(1){b=i[c+1>>0]|0;f=i[c>>0]|0;c:do if(b<<24>>24){switch(b&255|0){case 223:case 222:case 221:case 220:{j=13;break b}case 219:case 218:case 217:case 216:{j=11;break c}case 255:break;default:{j=19;break c}}if((f&255)>253){j=13;break b}else j=19}else{f=l[h+(f&255)>>0]|0;switch(f|0){case 8:case 1:case 0:{j=13;break b}case 7:{j=11;break c}case 5:{if((g-c|0)<2){c=-2;break a}c=c+2|0;break c}case 6:{if((g-c|0)<3){c=-2;break a}c=c+3|0;break c}case 13:case 12:{b=c+2|0;if((f|0)==(a|0))break b;else{c=b;break c}}default:{j=19;break c}}}while(0);if((j|0)==11){j=0;if((g-c|0)<4){c=-2;break a}c=c+4|0}else if((j|0)==19){j=0;c=c+2|0}if((c|0)==(d|0)){c=-1;break a}}if((j|0)==13){k[e>>2]=c;c=0;break}if((b|0)==(d|0))c=-27;else{k[e>>2]=b;if(!(i[c+3>>0]|0))switch(l[h+(l[b>>0]|0)>>0]|0){case 20:case 30:case 11:case 10:case 9:case 21:{c=27;break a}default:{}}c=0}}else c=-1;while(0);return c|0}function UJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,m=0,n=0;a:do if((b|0)==(c|0))e=-4;else{g=b;e=c-g|0;if(!(e&1))m=c;else{e=e&-2;if(!e){e=-1;break}m=b+e|0}e=i[b>>0]|0;c=i[b+1>>0]|0;b:do if(e<<24>>24){e=e&255;switch(e|0){case 219:case 218:case 217:case 216:{n=100;break b}case 223:case 222:case 221:case 220:{n=107;break b}case 255:break;default:{n=105;break b}}if((c&255)>253)n=107;else{e=255;n=105}}else{j=a+76|0;do switch(l[j+(c&255)>>0]|0){case 7:{n=100;break b}case 24:case 22:{e=18;break b}case 29:{e=0;n=105;break b}case 12:{e=oK(12,a,b+2|0,m,d)|0;break a}case 13:{e=oK(13,a,b+2|0,m,d)|0;break a}case 2:{e=b+2|0;if((e|0)==(m|0)){e=-1;break a}f=i[e>>0]|0;c=i[b+3>>0]|0;c:do if(f<<24>>24){switch(f&255|0){case 220:case 221:case 222:case 223:{n=35;break c}case 255:break;default:{n=34;break c}}if((c&255)>253)n=35;else n=34}else{switch(l[j+(c&255)>>0]|0){case 7:case 6:case 5:case 29:case 24:case 22:{n=34;break c}case 16:break;case 15:{e=mK(a,b+4|0,m,d)|0;break a}default:{n=35;break c}}f=b+4|0;if((f|0)==(m|0)){e=-1;break a}d:do if(!(i[f>>0]|0))switch(l[j+(l[b+5>>0]|0)>>0]|0){case 27:{e=lK(a,b+6|0,m,d)|0;break a}case 20:{k[d>>2]=b+6;e=33;break a}case 24:case 22:{e=b+6|0;if((e|0)==(m|0)){e=-1;break a}e:while(1){if(i[e>>0]|0){n=32;break}switch(l[j+(l[f+3>>0]|0)>>0]|0){case 30:{c=f;n=27;break e}case 10:case 9:case 21:break e;case 24:case 22:break;default:{n=32;break e}}f=e+2|0;if((f|0)==(m|0)){e=-1;break a}else{h=e;e=f;f=h}}if((n|0)==32){k[d>>2]=e;e=0;break a}f:do if((n|0)==27){f=c+4|0;if((f|0)==(m|0)){e=-1;break a}if(!(i[f>>0]|0)){switch(l[j+(l[c+5>>0]|0)>>0]|0){case 30:case 10:case 9:case 21:break;default:break f}k[d>>2]=e;e=0;break a}}while(0);k[d>>2]=e;e=16;break a}default:break d}while(0);k[d>>2]=f;e=0;break a}while(0);if((n|0)==34){k[d>>2]=b;e=29;break a}else if((n|0)==35){k[d>>2]=e;e=0;break a}break}case 9:{if((b+2|0)==(m|0)){k[d>>2]=m;e=-15;break a}break}case 10:case 21:break;case 30:{e=kK(a,b+2|0,m,d)|0;break a}case 35:{k[d>>2]=b+2;e=38;break a}case 20:{k[d>>2]=b+2;e=25;break a}case 4:{e=b+2|0;if((e|0)==(m|0)){e=-26;break a}if((i[e>>0]|0)==0?(i[b+3>>0]|0)==93:0){f=b+4|0;if((f|0)==(m|0)){e=-1;break a}if((i[f>>0]|0)==0?(i[b+5>>0]|0)==62:0){k[d>>2]=b+6;e=34;break a}}k[d>>2]=e;e=26;break a}case 31:{k[d>>2]=b+2;e=23;break a}case 32:{e=b+2|0;if((e|0)==(m|0)){e=-24;break a}g:do if(!(i[e>>0]|0))switch(l[j+(l[b+3>>0]|0)>>0]|0){case 33:{k[d>>2]=b+4;e=36;break a}case 15:{k[d>>2]=b+4;e=35;break a}case 34:{k[d>>2]=b+4;e=37;break a}case 32:case 36:case 35:case 11:case 21:case 10:case 9:{k[d>>2]=e;e=24;break a}default:break g}while(0);k[d>>2]=e;e=0;break a}case 36:{k[d>>2]=b+2;e=21;break a}case 11:{k[d>>2]=b+2;e=17;break a}case 19:{c=b+2|0;if((c|0)==(m|0)){e=-1;break a}e=i[c>>0]|0;g=i[b+3>>0]|0;h:do if(e<<24>>24){e=e&255;switch(e|0){case 219:case 218:case 217:case 216:{n=78;break h}case 223:case 222:case 221:case 220:{n=80;break h}case 255:break;default:{n=72;break h}}if((g&255)>253)n=80;else{e=255;n=72}}else switch(l[j+(g&255)>>0]|0){case 29:{e=0;n=72;break h}case 24:case 22:break h;case 7:{n=78;break h}case 5:{if((m-c|0)<2){e=-2;break a}k[d>>2]=c;e=0;break a}case 6:{if((m-c|0)<3){e=-2;break a}k[d>>2]=c;e=0;break a}default:{n=80;break h}}while(0);if((n|0)==72){h=g&255;if(!(k[92448+((l[179736+e>>0]<<3|h>>>5)<<2)>>2]&1<<(h&31))){k[d>>2]=c;e=0;break a}}else if((n|0)==78){if((m-c|0)<4){e=-2;break a}k[d>>2]=c;e=0;break a}else if((n|0)==80){k[d>>2]=c;e=0;break a}e=b+4|0;if((e|0)==(m|0)){e=-20;break a}i:while(1){g=i[e>>0]|0;c=i[c+3>>0]|0;j:do if(g<<24>>24){f=g&255;switch(f|0){case 223:case 222:case 221:case 220:{n=95;break i}case 219:case 218:case 217:case 216:{n=92;break i}case 255:break;default:{n=85;break j}}if((c&255)>253){n=95;break i}else{f=255;n=85}}else switch(l[j+(c&255)>>0]|0){case 5:{n=88;break i}case 6:{n=90;break i}case 7:{n=92;break i}case 36:case 30:case 11:case 32:case 21:case 10:case 9:{n=94;break i}case 29:{f=0;n=85;break}case 27:case 26:case 25:case 24:case 22:break;default:{n=95;break i}}while(0);if((n|0)==85?(n=0,h=c&255,(k[92448+((l[179992+f>>0]<<3|h>>>5)<<2)>>2]&1<<(h&31)|0)==0):0){n=87;break}c=e+2|0;if((c|0)==(m|0)){e=-20;break a}else{h=e;e=c;c=h}}if((n|0)==87){k[d>>2]=e;e=0;break a}else if((n|0)==88){if((m-e|0)<2){e=-2;break a}k[d>>2]=e;e=0;break a}else if((n|0)==90){if((m-e|0)<3){e=-2;break a}k[d>>2]=e;e=0;break a}else if((n|0)==92){if((m-e|0)<4){e=-2;break a}k[d>>2]=e;e=0;break a}else if((n|0)==94){k[d>>2]=e;e=20;break a}else if((n|0)==95){k[d>>2]=e;e=0;break a}break}case 5:{if((m-g|0)<2){e=-2;break a}k[d>>2]=b;e=0;break a}case 6:{if((m-g|0)<3){e=-2;break a}k[d>>2]=b;e=0;break a}case 23:case 27:case 26:case 25:{e=19;break b}default:{n=107;break b}}while(0);e=b+2|0;k:do if((e|0)!=(m|0)){f=b;l:while(1){if(i[e>>0]|0)break;switch(l[j+(l[f+3>>0]|0)>>0]|0){case 10:case 21:break;case 9:{if((f+4|0)==(m|0))break l;break}default:break l}f=e+2|0;if((f|0)==(m|0))break k;else{n=e;e=f;f=n}}k[d>>2]=e;e=15;break a}while(0);k[d>>2]=m;e=15;break a}while(0);if((n|0)==100){if((m-g|0)<4){e=-2;break}k[d>>2]=b;e=0;break}else if((n|0)==105){c=c&255;f=c>>>5;c=1<<(c&31);if(!(c&k[92448+((f|l[179736+e>>0]<<3)<<2)>>2]))if(!(k[92448+((l[179992+e>>0]<<3|f)<<2)>>2]&c))n=107;else e=19;else e=18}if((n|0)==107){k[d>>2]=b;e=0;break}f=b+2|0;m:do if((f|0)!=(m|0)){a=a+76|0;n:while(1){c=i[f>>0]|0;g=i[f+1>>0]|0;o:do if(c<<24>>24){c=c&255;switch(c|0){case 223:case 222:case 221:case 220:{e=f;n=148;break n}case 219:case 218:case 217:case 216:{e=f;n=119;break n}case 255:break;default:{n=112;break o}}if((g&255)>253){e=f;n=148;break n}else{c=255;n=112}}else{switch(l[a+(g&255)>>0]|0){case 5:{e=f;n=115;break n}case 6:{e=f;n=117;break n}case 7:{e=f;n=119;break n}case 10:case 9:case 21:case 30:case 20:case 36:case 35:case 32:case 11:{n=121;break n}case 34:{n=139;break n}case 33:{n=142;break n}case 15:{n=145;break n}case 29:{c=0;n=112;break o}case 27:case 26:case 25:case 24:case 22:{n=114;break o}case 23:break;default:{e=f;n=148;break n}}g=f+2|0;switch(e|0){case 18:break;case 41:{f=g;e=19;break o}default:{f=g;break o}}if((g|0)==(m|0)){e=-1;break a}e=i[g>>0]|0;c=i[f+3>>0]|0;p:do if(e<<24>>24){e=e&255;switch(e|0){case 219:case 218:case 217:case 216:{e=g;n=135;break n}case 223:case 222:case 221:case 220:{f=g;e=19;break o}case 255:break;default:{h=e;n=128;break p}}if((c&255)>253){f=g;e=19;break o}else{h=255;n=128}}else switch(l[a+(c&255)>>0]|0){case 7:{e=g;n=135;break n}case 5:{e=g;n=131;break n}case 6:{e=g;n=133;break n}case 29:{h=0;n=128;break}case 27:case 26:case 25:case 24:case 22:break;default:{f=g;e=19;break o}}while(0);if((n|0)==128?(n=0,j=c&255,(1<<(j&31)&k[92448+((j>>>5|l[179992+h>>0]<<3)<<2)>>2]|0)==0):0){e=g;n=129;break n}f=f+4|0;e=41}while(0);if((n|0)==112){n=g&255;if(!(1<<(n&31)&k[92448+((n>>>5|l[179992+c>>0]<<3)<<2)>>2])){e=f;n=113;break}else n=114}if((n|0)==114){n=0;f=f+2|0}if((f|0)==(m|0))break m}switch(n|0){case 113:{k[d>>2]=e;e=0;break a}case 115:{if((m-e|0)<2){e=-2;break a}k[d>>2]=e;e=0;break a}case 117:{if((m-e|0)<3){e=-2;break a}k[d>>2]=e;e=0;break a}case 119:{if((m-e|0)<4){e=-2;break a}k[d>>2]=e;e=0;break a}case 121:{k[d>>2]=f;break a}case 129:{k[d>>2]=e;e=0;break a}case 131:{if((m-e|0)<2){e=-2;break a}k[d>>2]=e;e=0;break a}case 133:{if((m-e|0)<3){e=-2;break a}k[d>>2]=e;e=0;break a}case 135:{if((m-e|0)<4){e=-2;break a}k[d>>2]=e;e=0;break a}case 139:if((e|0)==19){k[d>>2]=f;e=0;break a}else{k[d>>2]=f+2;e=32;break a}case 142:if((e|0)==19){k[d>>2]=f;e=0;break a}else{k[d>>2]=f+2;e=31;break a}case 145:if((e|0)==19){k[d>>2]=f;e=0;break a}else{k[d>>2]=f+2;e=30;break a}case 148:{k[d>>2]=e;e=0;break a}}}while(0);e=0-e|0}while(0);return e|0}function VJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,m=0,n=0,o=0,p=0,q=0,s=0;s=r;r=r+16|0;n=s;a:do if((b|0)==(c|0))e=-4;else{h=b;e=c-h|0;if(!(e&1))p=c;else{e=e&-2;if(!e){e=-1;break}p=b+e|0}e=i[b>>0]|0;c=i[b+1>>0]|0;b:do if(e<<24>>24){switch(e&255|0){case 219:case 218:case 217:case 216:{q=236;break b}case 223:case 222:case 221:case 220:{q=238;break b}case 255:break;default:{q=239;break b}}if((c&255)>253)q=238;else q=239}else{o=a+76|0;switch(l[o+(c&255)>>0]|0){case 7:{q=236;break b}case 8:case 1:case 0:{q=238;break b}case 2:{c=b+2|0;if((c|0)==(p|0)){e=-1;break a}e=i[c>>0]|0;h=i[b+3>>0]|0;c:do if(e<<24>>24){e=e&255;switch(e|0){case 219:case 218:case 217:case 216:{q=22;break c}case 223:case 222:case 221:case 220:{q=72;break c}case 255:break;default:{q=14;break c}}if((h&255)>253)q=72;else{e=255;q=14}}else switch(l[o+(h&255)>>0]|0){case 29:{e=0;q=14;break c}case 24:case 22:break c;case 7:{q=22;break c}case 5:{if((p-c|0)<2){e=-2;break a}k[d>>2]=c;e=0;break a}case 6:{if((p-c|0)<3){e=-2;break a}k[d>>2]=c;e=0;break a}case 16:{e=b+4|0;if((e|0)==(p|0)){e=-1;break a}d:do if(!(i[e>>0]|0)){switch(l[o+(l[b+5>>0]|0)>>0]|0){case 27:{e=lK(a,b+6|0,p,d)|0;break a}case 20:break;default:break d}e=b+6|0;if((p-e|0)<12){e=-1;break a}else f=0;while(1){if(i[e>>0]|0){q=31;break}if((i[e+1>>0]|0)!=(i[180255+f>>0]|0)){q=31;break}f=f+1|0;e=e+2|0;if((f|0)>=6){q=33;break}}if((q|0)==31){k[d>>2]=e;e=0;break a}else if((q|0)==33){k[d>>2]=e;e=8;break a}}while(0);k[d>>2]=e;e=0;break a}case 15:{e=mK(a,b+4|0,p,d)|0;break a}case 17:{f=b+4|0;if((f|0)==(p|0)){e=-1;break a}e=i[f>>0]|0;g=i[b+5>>0]|0;e:do if(e<<24>>24){e=e&255;switch(e|0){case 219:case 218:case 217:case 216:{q=48;break e}case 223:case 222:case 221:case 220:{q=50;break e}case 255:break;default:{q=41;break e}}if((g&255)>253)q=50;else{e=255;q=41}}else switch(l[o+(g&255)>>0]|0){case 29:{e=0;q=41;break e}case 24:case 22:break e;case 7:{q=48;break e}case 5:{if((p-f|0)<2){e=-2;break a}k[d>>2]=f;e=0;break a}case 6:{if((p-f|0)<3){e=-2;break a}k[d>>2]=f;e=0;break a}default:{q=50;break e}}while(0);if((q|0)==41){a=g&255;if(!(k[92448+((l[179736+e>>0]<<3|a>>>5)<<2)>>2]&1<<(a&31))){k[d>>2]=f;e=0;break a}}else if((q|0)==48){if((p-f|0)<4){e=-2;break a}k[d>>2]=f;e=0;break a}else if((q|0)==50){k[d>>2]=f;e=0;break a}e=b+6|0;if((e|0)==(p|0)){e=-1;break a}f:while(1){g=i[e>>0]|0;c=i[f+3>>0]|0;g:do if(g<<24>>24){f=g&255;switch(f|0){case 223:case 222:case 221:case 220:{q=71;break f}case 219:case 218:case 217:case 216:{q=62;break f}case 255:break;default:{j=f;q=56;break g}}if((c&255)>253){q=71;break f}else{j=255;q=56}}else switch(l[o+(c&255)>>0]|0){case 5:{q=58;break f}case 6:{q=60;break f}case 7:{q=62;break f}case 10:case 9:case 21:{q=55;break f}case 11:{e=f;q=70;break f}case 29:{j=0;q=56;break}case 23:case 27:case 26:case 25:case 24:case 22:break;default:{q=71;break f}}while(0);if((q|0)==56?(q=0,a=c&255,(k[92448+((l[179992+j>>0]<<3|a>>>5)<<2)>>2]&1<<(a&31)|0)==0):0){q=57;break}f=e+2|0;if((f|0)==(p|0)){e=-1;break a}else{a=e;e=f;f=a}}if((q|0)==55){f=f+4|0;if((f|0)==(p|0)){e=-1;break a}h:while(1){if(i[f>>0]|0){e=f;q=68;break}switch(l[o+(l[e+3>>0]|0)>>0]|0){case 11:{q=67;break h}case 10:case 9:case 21:break;default:{e=f;q=68;break h}}e=f+2|0;if((e|0)==(p|0)){e=-1;break a}else{q=f;f=e;e=q}}if((q|0)==67){k[d>>2]=e+4;e=5;break a}else if((q|0)==68){k[d>>2]=e;e=0;break a}}else if((q|0)==57){k[d>>2]=e;e=0;break a}else if((q|0)==58){if((p-e|0)<2){e=-2;break a}k[d>>2]=e;e=0;break a}else if((q|0)==60){if((p-e|0)<3){e=-2;break a}k[d>>2]=e;e=0;break a}else if((q|0)==62){if((p-e|0)<4){e=-2;break a}k[d>>2]=e;e=0;break a}else if((q|0)==70){k[d>>2]=e+4;e=5;break a}else if((q|0)==71){k[d>>2]=e;e=0;break a}break}default:{q=72;break c}}while(0);if((q|0)==14){j=h&255;if(!(k[92448+((l[179736+e>>0]<<3|j>>>5)<<2)>>2]&1<<(j&31))){k[d>>2]=c;e=0;break a}}else if((q|0)==22){if((p-c|0)<4){e=-2;break a}k[d>>2]=c;e=0;break a}else if((q|0)==72){k[d>>2]=c;e=0;break a}e=b+4|0;if((e|0)==(p|0)){e=-1;break a}else j=0;i:while(1){j:while(1){c=i[e>>0]|0;h=i[e+1>>0]|0;k:do if(c<<24>>24){f=c&255;switch(f|0){case 223:case 222:case 221:case 220:{q=218;break i}case 219:case 218:case 217:case 216:{q=85;break i}case 255:break;default:{q=78;break k}}if((h&255)>253){q=218;break i}else{f=255;q=78}}else switch(l[o+(h&255)>>0]|0){case 5:{q=81;break i}case 6:{q=83;break i}case 7:{q=85;break i}case 10:case 9:case 21:{q=77;break i}case 11:{q=212;break i}case 17:break i;case 23:break j;case 29:{f=0;q=78;break}case 27:case 26:case 25:case 24:case 22:break;default:{q=218;break i}}while(0);if((q|0)==78?(q=0,b=h&255,(k[92448+((l[179992+f>>0]<<3|b>>>5)<<2)>>2]&1<<(b&31)|0)==0):0){q=79;break i}e=e+2|0;if((e|0)==(p|0)){e=-1;break a}}if(j){q=88;break}h=e+2|0;if((h|0)==(p|0)){e=-1;break a}c=i[h>>0]|0;j=i[e+3>>0]|0;l:do if(c<<24>>24){g=c&255;switch(g|0){case 223:case 222:case 221:case 220:{e=h;q=103;break i}case 219:case 218:case 217:case 216:{e=h;q=101;break i}case 255:break;default:{q=94;break l}}if((j&255)>253){e=h;q=103;break i}else{g=255;q=94}}else switch(l[o+(j&255)>>0]|0){case 5:{e=h;q=97;break i}case 6:{e=h;q=99;break i}case 7:{e=h;q=101;break i}case 29:{g=0;q=94;break}case 24:case 22:break;default:{e=h;q=103;break i}}while(0);if((q|0)==94?(q=0,b=j&255,(k[92448+((l[179736+g>>0]<<3|b>>>5)<<2)>>2]&1<<(b&31)|0)==0):0){e=h;q=95;break}e=e+4|0;if((e|0)==(p|0)){e=-1;break a}else j=1}m:switch(q|0){case 77:{f=e+2|0;if((f|0)==(p|0)){e=-1;break a}n:while(1){c=i[f>>0]|0;g=i[e+3>>0]|0;if(c<<24>>24){q=105;break}switch(l[o+(g&255)>>0]|0){case 11:{e=f;q=212;break m}case 17:{e=f;break m}case 29:{c=0;q=109;break n}case 24:case 22:break n;case 5:{e=f;q=205;break n}case 6:{e=f;q=207;break n}case 7:{e=f;q=209;break n}case 10:case 9:case 21:break;default:{e=f;q=211;break n}}e=f+2|0;if((e|0)==(p|0)){e=-1;break a}else{b=f;f=e;e=b}}o:do if((q|0)==105){c=c&255;switch(c|0){case 219:case 218:case 217:case 216:{e=f;q=209;break o}case 223:case 222:case 221:case 220:{e=f;q=211;break o}case 255:break;default:{q=109;break o}}if((g&255)>253){e=f;q=211}else{c=255;q=109}}else if((q|0)==205){if((p-e|0)<2){e=-2;break a}k[d>>2]=e;e=0;break a}else if((q|0)==207){if((p-e|0)<3){e=-2;break a}k[d>>2]=e;e=0;break a}while(0);if((q|0)==109){b=g&255;if(!(k[92448+((l[179736+c>>0]<<3|b>>>5)<<2)>>2]&1<<(b&31))){k[d>>2]=f;e=0;break a}}else if((q|0)==209){if((p-e|0)<4){e=-2;break a}k[d>>2]=e;e=0;break a}else if((q|0)==211){k[d>>2]=e;e=0;break a}e=e+4|0;k[n>>2]=e;p:do if((e|0)==(p|0))e=-1;else{h=p;c=0;q:while(1){r:while(1){f=i[e>>0]|0;g=i[e+1>>0]|0;s:do if(f<<24>>24){f=f&255;switch(f|0){case 223:case 222:case 221:case 220:{q=203;break q}case 219:case 218:case 217:case 216:{q=127;break q}case 255:break;default:{m=f;q=120;break s}}if((g&255)>253){q=203;break q}else{m=255;q=120}}else switch(l[o+(g&255)>>0]|0){case 5:{q=123;break q}case 6:{q=125;break q}case 7:{q=127;break q}case 23:{f=e;q=129;break r}case 10:case 9:case 21:{f=e;q=118;break r}case 14:{f=e;q=119;break r}case 29:{m=0;q=120;break}case 27:case 26:case 25:case 24:case 22:break;default:{q=203;break q}}while(0);if((q|0)==120?(q=0,b=g&255,(k[92448+((l[179992+m>>0]<<3|b>>>5)<<2)>>2]&1<<(b&31)|0)==0):0){q=121;break q}e=e+2|0;k[n>>2]=e;if((e|0)==(p|0)){e=-1;break p}}t:do if((q|0)==118){e=f+2|0;k[n>>2]=e;if((e|0)==(p|0)){e=-1;break p}while(1){if(i[e>>0]|0){q=148;break q}switch(l[o+(l[f+3>>0]|0)>>0]|0){case 14:{f=e;q=119;break t}case 9:case 10:case 21:break;default:{q=148;break q}}f=e+2|0;k[n>>2]=f;if((f|0)==(p|0)){e=-1;break p}else{q=e;e=f;f=q}}}else if((q|0)==129){q=0;if(c){e=f;q=130;break q}e=f+2|0;k[n>>2]=e;if((e|0)==(p|0)){e=-1;break p}g=i[e>>0]|0;c=i[f+3>>0]|0;u:do if(g<<24>>24){f=g&255;switch(f|0){case 223:case 222:case 221:case 220:{q=144;break q}case 219:case 218:case 217:case 216:{q=142;break q}case 255:break;default:break u}if((c&255)>253){q=144;break q}else f=255}else switch(l[o+(c&255)>>0]|0){case 5:{q=138;break q}case 6:{q=140;break q}case 7:{q=142;break q}case 24:case 22:{f=1;break t}case 29:{f=0;break}default:{q=144;break q}}while(0);b=c&255;if(!(k[92448+((l[179736+f>>0]<<3|b>>>5)<<2)>>2]&1<<(b&31))){q=137;break q}else f=1}while(0);v:do if((q|0)==119){q=0;e=f+2|0;k[n>>2]=e;if((e|0)==(p|0)){e=-1;break p}while(1){if(i[e>>0]|0){q=153;break q}g=l[o+(l[f+3>>0]|0)>>0]|0;if((g&254|0)==12){e=f;break}switch(g|0){case 9:case 10:case 21:break;default:{q=153;break q}}f=e+2|0;k[n>>2]=f;if((f|0)==(p|0)){e=-1;break p}else{b=e;e=f;f=b}}e=e+4|0;k[n>>2]=e;if((e|0)==(p|0)){e=-1;break p}while(1){f=i[e>>0]|0;c=i[e+1>>0]|0;w:do if(!(f<<24>>24))f=l[o+(c&255)>>0]|0;else{switch(f&255|0){case 219:case 218:case 217:case 216:{f=7;break w}case 223:case 222:case 221:case 220:{f=8;break w}case 255:{if((c&255)>253){f=0;break w}break}default:{}}f=29}while(0);if((f|0)==(g|0))break;switch(f|0){case 8:case 1:case 0:{q=169;break q}case 2:{q=175;break q}case 5:{if((h-e|0)<2){e=-2;break p}e=e+2|0;k[n>>2]=e;break}case 6:{if((h-e|0)<3){e=-2;break p}e=e+3|0;k[n>>2]=e;break}case 7:{if((h-e|0)<4){e=-2;break p}e=e+4|0;k[n>>2]=e;break}case 3:{e=jK(a,e+2|0,p,n)|0;if((e|0)<1){q=173;break q}e=k[n>>2]|0;break}default:{e=e+2|0;k[n>>2]=e}}if((e|0)==(p|0)){e=-1;break p}}f=e+2|0;k[n>>2]=f;if((f|0)==(p|0)){e=-1;break p}if(i[f>>0]|0){e=f;q=181;break q}switch(l[o+(l[e+3>>0]|0)>>0]|0){case 11:{e=f;q=196;break q}case 17:{e=f;q=197;break q}case 10:case 9:case 21:break;default:{e=f;q=181;break q}}e=e+4|0;k[n>>2]=e;if((e|0)==(p|0)){e=-1;break p}x:while(1){c=i[e>>0]|0;g=i[f+3>>0]|0;if(c<<24>>24){f=c;q=183;break}switch(l[o+(g&255)>>0]|0){case 5:{q=190;break q}case 6:{q=192;break q}case 7:{q=194;break q}case 11:{q=196;break q}case 17:{q=197;break q}case 24:case 22:{f=0;break v}case 29:{f=0;break x}case 10:case 9:case 21:break;default:{q=202;break q}}f=e+2|0;k[n>>2]=f;if((f|0)==(p|0)){e=-1;break p}else{b=e;e=f;f=b}}y:do if((q|0)==183){q=0;f=f&255;switch(f|0){case 223:case 222:case 221:case 220:{q=202;break q}case 219:case 218:case 217:case 216:{q=194;break q}case 255:break;default:break y}if((g&255)>253){q=202;break q}else f=255}while(0);b=l[e+1>>0]|0;if(!(1<<(b&31)&k[92448+((b>>>5|l[179736+f>>0]<<3)<<2)>>2])){q=188;break q}else f=0}while(0);e=e+2|0;k[n>>2]=e;if((e|0)==(p|0)){e=-1;break p}else c=f}switch(q|0){case 121:{k[d>>2]=e;e=0;break p}case 123:{if((h-e|0)<2){e=-2;break p}k[d>>2]=e;e=0;break p}case 125:{if((h-e|0)<3){e=-2;break p}k[d>>2]=e;e=0;break p}case 127:{if((h-e|0)<4){e=-2;break p}k[d>>2]=e;e=0;break p}case 130:{k[d>>2]=e;e=0;break p}case 137:{k[d>>2]=e;e=0;break p}case 138:{if((h-e|0)<2){e=-2;break p}k[d>>2]=e;e=0;break p}case 140:{if((h-e|0)<3){e=-2;break p}k[d>>2]=e;e=0;break p}case 142:{if((h-e|0)<4){e=-2;break p}k[d>>2]=e;e=0;break p}case 144:{k[d>>2]=e;e=0;break p}case 148:{k[d>>2]=e;e=0;break p}case 153:{k[d>>2]=e;e=0;break p}case 169:{k[d>>2]=e;e=0;break p}case 173:{if(e)break p;k[d>>2]=k[n>>2];e=0;break p}case 175:{k[d>>2]=e;e=0;break p}case 181:{k[d>>2]=e;e=0;break p}case 188:{k[d>>2]=e;e=0;break p}case 190:{if((h-e|0)<2){e=-2;break p}k[d>>2]=e;e=0;break p}case 192:{if((h-e|0)<3){e=-2;break p}k[d>>2]=e;e=0;break p}case 194:{if((h-e|0)<4){e=-2;break p}k[d>>2]=e;e=0;break p}case 196:{k[d>>2]=e+2;e=1;break p}case 197:{g=e+2|0;k[n>>2]=g;f=g;if((g|0)==(p|0)){e=-1;break p}if((i[g>>0]|0)==0?(i[e+3>>0]|0)==62:0){k[d>>2]=e+4;e=3;break p}k[d>>2]=f;e=0;break p}case 202:{k[d>>2]=e;e=0;break p}case 203:{k[d>>2]=e;e=0;break p}}}while(0);break a}case 79:{k[d>>2]=e;e=0;break a}case 81:{if((p-e|0)<2){e=-2;break a}k[d>>2]=e;e=0;break a}case 83:{if((p-e|0)<3){e=-2;break a}k[d>>2]=e;e=0;break a}case 85:{if((p-e|0)<4){e=-2;break a}k[d>>2]=e;e=0;break a}case 88:{k[d>>2]=e;e=0;break a}case 95:{k[d>>2]=e;e=0;break a}case 97:{if((p-e|0)<2){e=-2;break a}k[d>>2]=e;e=0;break a}case 99:{if((p-e|0)<3){e=-2;break a}k[d>>2]=e;e=0;break a}case 101:{if((p-e|0)<4){e=-2;break a}k[d>>2]=e;e=0;break a}case 103:{k[d>>2]=e;e=0;break a}case 218:{k[d>>2]=e;e=0;break a}}if((q|0)==212){k[d>>2]=e+2;e=2;break a}f=e+2|0;if((f|0)==(p|0)){e=-1;break a}if((i[f>>0]|0)==0?(i[e+3>>0]|0)==62:0){k[d>>2]=e+4;e=4;break a}k[d>>2]=f;e=0;break a}case 3:{e=jK(a,b+2|0,p,d)|0;break a}case 9:{f=b+2|0;if((f|0)==(p|0)){e=-3;break a}if(!(i[f>>0]|0))e=(i[o+(l[b+3>>0]|0)>>0]|0)==10;else e=0;k[d>>2]=e?b+4|0:f;e=7;break a}case 10:{k[d>>2]=b+2;e=7;break a}case 4:{e=b+2|0;if((e|0)==(p|0)){e=-5;break a}if(i[e>>0]|0)break b;if((i[b+3>>0]|0)!=93)break b;f=b+4|0;if((f|0)==(p|0)){e=-5;break a}if(i[f>>0]|0)break b;if((i[b+5>>0]|0)!=62)break b;k[d>>2]=f;e=0;break a}case 5:{if((p-h|0)<2){e=-2;break a}e=b+2|0;break b}case 6:{if((p-h|0)<3){e=-2;break a}e=b+3|0;break b}default:{q=239;break b}}}while(0);if((q|0)==236){if((p-h|0)<4){e=-2;break}e=b+4|0}else if((q|0)==238){k[d>>2]=b;e=0;break}else if((q|0)==239)e=b+2|0;z:do if((e|0)!=(p|0)){c=a+76|0;h=p;A:while(1){f=i[e>>0]|0;g=i[e+1>>0]|0;B:do if(f<<24>>24){switch(f&255|0){case 223:case 222:case 221:case 220:{q=262;break A}case 219:case 218:case 217:case 216:{q=252;break B}case 255:break;default:{q=263;break B}}if((g&255)>253){q=262;break A}else q=263}else switch(l[c+(g&255)>>0]|0){case 10:case 9:case 8:case 1:case 0:case 2:case 3:{q=262;break A}case 7:{q=252;break B}case 5:{if((h-e|0)<2){q=247;break A}e=e+2|0;break B}case 6:{if((h-e|0)<3){q=250;break A}e=e+3|0;break B}case 4:{f=e+2|0;if((f|0)==(p|0)){q=262;break A}if(i[f>>0]|0){e=f;break B}if((i[e+3>>0]|0)!=93){e=f;break B}g=e+4|0;if((g|0)==(p|0)){q=262;break A}if(i[g>>0]|0){e=f;break B}if((i[e+5>>0]|0)==62){e=g;q=261;break A}else{e=f;break B}}default:{q=263;break B}}while(0);if((q|0)==252){q=0;if((h-e|0)<4){q=253;break}e=e+4|0}else if((q|0)==263){q=0;e=e+2|0}if((e|0)==(p|0))break z}if((q|0)==247){k[d>>2]=e;e=6;break a}else if((q|0)==250){k[d>>2]=e;e=6;break a}else if((q|0)==253){k[d>>2]=e;e=6;break a}else if((q|0)==261){k[d>>2]=e;e=0;break a}else if((q|0)==262){k[d>>2]=e;e=6;break a}}while(0);k[d>>2]=p;e=6}while(0);r=s;return e|0}function WJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;a:do if((b|0)==(c|0))e=-4;else{f=b;e=c-f|0;if(!(e&1))g=c;else{e=e&-2;if(!e){e=-1;break}g=b+e|0}e=i[b>>0]|0;c=i[b+1>>0]|0;b:do if(e<<24>>24){switch(e&255|0){case 219:case 218:case 217:case 216:{h=25;break b}case 223:case 222:case 221:case 220:{h=27;break b}case 255:break;default:{h=28;break b}}if((c&255)>253)h=27;else h=28}else{e=a+76|0;switch(l[e+(c&255)>>0]|0){case 7:{h=25;break b}case 8:case 1:case 0:{h=27;break b}case 4:{e=b+2|0;if((e|0)==(g|0)){e=-1;break a}if(i[e>>0]|0)break b;if((i[b+3>>0]|0)!=93)break b;c=b+4|0;if((c|0)==(g|0)){e=-1;break a}if(i[c>>0]|0)break b;if((i[b+5>>0]|0)!=62)break b;k[d>>2]=b+6;e=40;break a}case 9:{c=b+2|0;if((c|0)==(g|0)){e=-1;break a}if(!(i[c>>0]|0))e=(i[e+(l[b+3>>0]|0)>>0]|0)==10;else e=0;k[d>>2]=e?b+4|0:c;e=7;break a}case 10:{k[d>>2]=b+2;e=7;break a}case 5:{if((g-f|0)<2){e=-2;break a}e=b+2|0;break b}case 6:{if((g-f|0)<3){e=-2;break a}e=b+3|0;break b}default:{h=28;break b}}}while(0);if((h|0)==25){if((g-f|0)<4){e=-2;break}e=b+4|0}else if((h|0)==27){k[d>>2]=b;e=0;break}else if((h|0)==28)e=b+2|0;c:do if((e|0)!=(g|0)){a=a+76|0;b=g;d:while(1){c=i[e>>0]|0;f=i[e+1>>0]|0;e:do if(c<<24>>24){switch(c&255|0){case 223:case 222:case 221:case 220:{h=44;break d}case 219:case 218:case 217:case 216:{h=41;break e}case 255:break;default:{h=45;break e}}if((f&255)>253){h=44;break d}else h=45}else switch(l[a+(f&255)>>0]|0){case 4:case 10:case 9:case 8:case 1:case 0:{h=44;break d}case 7:{h=41;break e}case 5:{if((b-e|0)<2){h=36;break d}e=e+2|0;break e}case 6:{if((b-e|0)<3){h=39;break d}e=e+3|0;break e}default:{h=45;break e}}while(0);if((h|0)==41){h=0;if((b-e|0)<4){h=42;break}e=e+4|0}else if((h|0)==45){h=0;e=e+2|0}if((e|0)==(g|0))break c}if((h|0)==36){k[d>>2]=e;e=6;break a}else if((h|0)==39){k[d>>2]=e;e=6;break a}else if((h|0)==42){k[d>>2]=e;e=6;break a}else if((h|0)==44){k[d>>2]=e;e=6;break a}}while(0);k[d>>2]=g;e=6}while(0);return e|0}function XJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;h=c-b|0;h=(h&1|0)==0?c:b+(h&-2)|0;a:do if((h|0)!=(b|0)){f=a+76|0;g=h;e=0;b:while(1){c=i[b>>0]|0;a=i[b+1>>0]|0;c:do if(c<<24>>24){switch(c&255|0){case 223:case 222:case 221:case 220:{j=13;break b}case 219:case 218:case 217:case 216:{j=11;break c}case 255:break;default:{j=31;break c}}if((a&255)>253){j=13;break b}else j=31}else switch(l[f+(a&255)>>0]|0){case 8:case 1:case 0:{j=13;break b}case 7:{j=11;break c}case 5:{if((g-b|0)<2){b=-2;break a}b=b+2|0;c=e;break c}case 6:{if((g-b|0)<3){b=-2;break a}b=b+3|0;c=e;break c}case 2:{c=b+2|0;if((c|0)==(h|0)){b=-1;break a}if(i[c>>0]|0){b=c;c=e;break c}if((i[b+3>>0]|0)!=33){b=c;c=e;break c}c=b+4|0;if((c|0)==(h|0)){b=-1;break a}if(i[c>>0]|0){b=c;c=e;break c}if((i[b+5>>0]|0)!=91){b=c;c=e;break c}b=b+6|0;c=e+1|0;break c}case 4:{c=b+2|0;if((c|0)==(h|0)){b=-1;break a}if(i[c>>0]|0){b=c;c=e;break c}if((i[b+3>>0]|0)!=93){b=c;c=e;break c}c=b+4|0;if((c|0)==(h|0)){b=-1;break a}if(i[c>>0]|0){b=c;c=e;break c}if((i[b+5>>0]|0)!=62){b=c;c=e;break c}b=b+6|0;if(!e){j=29;break b}c=e+-1|0;break c}default:{j=31;break c}}while(0);if((j|0)==11){j=0;if((g-b|0)<4){b=-2;break a}b=b+4|0;c=e}else if((j|0)==31){j=0;b=b+2|0;c=e}if((b|0)==(h|0)){b=-1;break a}else e=c}if((j|0)==13){k[d>>2]=b;b=0;break}else if((j|0)==29){k[d>>2]=b;b=42;break}}else b=-1;while(0);return b|0}function YJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;do if((b|0)!=(c|0)){g=a+76|0;e=b;a:while(1){f=i[e>>0]|0;b:do if(f<<24>>24)if((f&-4)<<24>>24==-40)h=8;else h=25;else switch(l[g+(l[e+1>>0]|0)>>0]|0){case 3:{h=9;break a}case 2:{h=12;break a}case 10:{h=13;break a}case 9:{h=16;break a}case 21:{h=22;break a}case 7:{h=8;break b}case 5:{e=e+2|0;break b}case 6:{e=e+3|0;break b}default:{h=25;break b}}while(0);if((h|0)==8){h=0;e=e+4|0}else if((h|0)==25){h=0;e=e+2|0}if((e|0)==(c|0)){h=27;break}}if((h|0)==9)if((e|0)==(b|0)){e=jK(a,b+2|0,c,d)|0;break}else{k[d>>2]=e;e=6;break}else if((h|0)==12){k[d>>2]=e;e=0;break}else if((h|0)==13)if((e|0)==(b|0)){k[d>>2]=b+2;e=7;break}else{k[d>>2]=e;e=6;break}else if((h|0)==16){if((e|0)!=(b|0)){k[d>>2]=e;e=6;break}f=b+2|0;if((f|0)==(c|0)){e=-3;break}if(!(i[f>>0]|0))e=(i[g+(l[b+3>>0]|0)>>0]|0)==10;else e=0;k[d>>2]=e?b+4|0:f;e=7;break}else if((h|0)==22)if((e|0)==(b|0)){k[d>>2]=b+2;e=39;break}else{k[d>>2]=e;e=6;break}else if((h|0)==27){k[d>>2]=c;e=6;break}}else e=-4;while(0);return e|0}function ZJ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;do if((b|0)!=(c|0)){g=a+76|0;e=b;a:while(1){f=i[e>>0]|0;b:do if(f<<24>>24)if((f&-4)<<24>>24==-40)h=8;else h=24;else switch(l[g+(l[e+1>>0]|0)>>0]|0){case 3:{h=9;break a}case 30:{h=12;break a}case 10:{h=15;break a}case 9:{h=18;break a}case 7:{h=8;break b}case 5:{e=e+2|0;break b}case 6:{e=e+3|0;break b}default:{h=24;break b}}while(0);if((h|0)==8){h=0;e=e+4|0}else if((h|0)==24){h=0;e=e+2|0}if((e|0)==(c|0)){h=26;break}}if((h|0)==9)if((e|0)==(b|0)){e=jK(a,b+2|0,c,d)|0;break}else{k[d>>2]=e;e=6;break}else if((h|0)==12)if((e|0)==(b|0)){e=kK(a,b+2|0,c,d)|0;e=(e|0)==22?0:e;break}else{k[d>>2]=e;e=6;break}else if((h|0)==15)if((e|0)==(b|0)){k[d>>2]=b+2;e=7;break}else{k[d>>2]=e;e=6;break}else if((h|0)==18){if((e|0)!=(b|0)){k[d>>2]=e;e=6;break}f=b+2|0;if((f|0)==(c|0)){e=-3;break}if(!(i[f>>0]|0))e=(i[g+(l[b+3>>0]|0)>>0]|0)==10;else e=0;k[d>>2]=e?b+4|0:f;e=7;break}else if((h|0)==26){k[d>>2]=c;e=6;break}}else e=-4;while(0);return e|0}function _J(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;g=a+76|0;a=c;c=b;a:while(1){d=i[c>>0]|0;e=c+1|0;b=i[e>>0]|0;b:do if(d<<24>>24){switch(d&255|0){case 223:case 222:case 221:case 220:{f=15;break a}case 219:case 218:case 217:case 216:{f=6;break b}case 255:break;default:{f=12;break b}}if((b&255)>253){f=15;break a}else f=12}else switch(l[g+(b&255)>>0]|0){case 7:{f=6;break}case 6:{b=0;f=8;break}case 5:{b=0;f=10;break}case 27:case 26:case 25:case 24:case 23:case 22:case 29:{f=12;break}default:{f=15;break a}}while(0);if((f|0)==6){f=0;if(d<<24>>24!=(i[a>>0]|0)){a=0;break}a=a+1|0;c=e;f=8}else if((f|0)==12){f=0;if((i[a>>0]|0)!=d<<24>>24){a=0;break}if((i[a+1>>0]|0)!=b<<24>>24){a=0;break}}if((f|0)==8){f=0;d=c+1|0;if(b<<24>>24!=(i[a>>0]|0)){a=0;break}a=a+1|0;c=d;b=i[d>>0]|0;f=10}if((f|0)==10){f=0;if(b<<24>>24!=(i[a>>0]|0)){a=0;break}if((i[c+1>>0]|0)!=(i[a+1>>0]|0)){a=0;break}}a=a+2|0;c=c+2|0}c:do if((f|0)==15){c=i[a>>0]|0;a=i[a+1>>0]|0;d:do if(c<<24>>24){switch(c&255|0){case 220:case 221:case 222:case 223:break d;case 255:break;default:{a=0;break c}}if((a&255)<=253){a=0;break c}}else switch(l[g+(a&255)>>0]|0){case 27:case 26:case 25:case 24:case 23:case 22:case 29:case 7:case 6:case 5:{a=0;break c}default:{}}while(0);a=1}while(0);return a|0}function $J(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=i[d>>0]|0;a=(b|0)==(c|0);a:do if(!(e<<24>>24))f=6;else while(1){if(a){a=0;break a}if(i[b>>0]|0){a=0;break a}if((i[b+1>>0]|0)!=e<<24>>24){a=0;break a}b=b+2|0;d=d+1|0;e=i[d>>0]|0;a=(b|0)==(c|0);if(!(e<<24>>24)){f=6;break}}while(0);if((f|0)==6)a=a&1;return a|0}function aK(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=a+76|0;a=b;a:while(1){c=i[a>>0]|0;d=i[a+1>>0]|0;b:do if(c<<24>>24){switch(c&255|0){case 223:case 222:case 221:case 220:break a;case 219:case 218:case 217:case 216:{c=8;break b}case 255:break;default:{c=9;break b}}if((d&255)>253)break a;else c=9}else switch(l[e+(d&255)>>0]|0|0){case 7:{c=8;break b}case 27:case 26:case 25:case 24:case 23:case 22:case 29:{c=9;break b}case 5:{a=a+2|0;continue a}case 6:{a=a+3|0;continue a}default:break a}while(0);if((c|0)==8){a=a+4|0;continue}else if((c|0)==9){a=a+2|0;continue}}return a-b|0}function bK(a,b){a=a|0;b=b|0;a:do if(!(i[b>>0]|0)){a=a+76|0;while(1){switch(l[a+(l[b+1>>0]|0)>>0]|0){case 21:case 9:case 10:break;default:break a}b=b+2|0;if(i[b>>0]|0)break a}}while(0);return b|0}function cK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,m=0,n=0,o=0;m=a+76|0;a=0;n=0;e=1;a:while(1){j=b+2|0;f=i[j>>0]|0;g=b+3|0;h=i[g>>0]|0;b:do if(f<<24>>24){switch(f&255|0){case 223:case 222:case 221:case 220:{f=e;g=n;h=a;b=j;e=f;n=g;a=h;continue a}case 219:case 218:case 217:case 216:{o=12;break b}case 255:break;default:{o=16;break b}}if(!((e|0)==0&(h&255)<254)){f=e;g=n;h=a;b=j;e=f;n=g;a=h;continue a}}else switch(l[m+(h&255)>>0]|0){case 7:{o=12;break b}case 24:case 22:case 29:{o=16;break b}case 5:{if(e){f=e;g=n;h=a;b=j;e=f;n=g;a=h;continue a}if((a|0)>=(c|0)){g=n;h=a;b=j;e=1;n=g;a=h;continue a}k[d+(a<<4)>>2]=j;i[d+(a<<4)+12>>0]=1;g=n;h=a;b=j;e=1;n=g;a=h;continue a}case 6:{if(e){f=e;h=n;j=a;b=g;e=f;n=h;a=j;continue a}if((a|0)>=(c|0)){h=n;j=a;b=g;e=1;n=h;a=j;continue a}k[d+(a<<4)>>2]=j;i[d+(a<<4)+12>>0]=1;h=n;j=a;b=g;e=1;n=h;a=j;continue a}case 12:{if((e|0)!=2){if((a|0)>=(c|0)){h=a;n=12;b=j;e=2;a=h;continue a}k[d+(a<<4)+4>>2]=b+4;h=a;n=12;b=j;e=2;a=h;continue a}if((n|0)!=12){g=n;h=a;b=j;e=2;n=g;a=h;continue a}if((a|0)<(c|0))k[d+(a<<4)+8>>2]=j;a=a+1|0;n=12;b=j;e=0;continue a}case 13:{if((e|0)!=2){if((a|0)>=(c|0)){h=a;n=13;b=j;e=2;a=h;continue a}k[d+(a<<4)+4>>2]=b+4;h=a;n=13;b=j;e=2;a=h;continue a}if((n|0)!=13){g=n;h=a;b=j;e=2;n=g;a=h;continue a}if((a|0)<(c|0))k[d+(a<<4)+8>>2]=j;a=a+1|0;n=13;b=j;e=0;continue a}case 3:{if((a|0)>=(c|0)){f=e;g=n;h=a;b=j;e=f;n=g;a=h;continue a}i[d+(a<<4)+12>>0]=0;f=e;g=n;h=a;b=j;e=f;n=g;a=h;continue a}case 21:{if((e|0)==1){g=n;h=a;b=j;e=0;n=g;a=h;continue a}if(!((e|0)==2&(a|0)<(c|0))){f=e;g=n;h=a;b=j;e=f;n=g;a=h;continue a}f=d+(a<<4)+12|0;if(!(i[f>>0]|0)){g=n;h=a;b=j;e=2;n=g;a=h;continue a}do if(h<<24>>24==32?(j|0)!=(k[d+(a<<4)+4>>2]|0):0){e=i[b+4>>0]|0;b=i[b+5>>0]|0;if(e<<24>>24)if((b&255)>253&e<<24>>24==-1)b=0;else{g=n;h=a;b=j;e=2;n=g;a=h;continue a}else{if(b<<24>>24==32)break;b=l[m+(b&255)>>0]|0}if((b|0)!=(n|0)){g=n;h=a;b=j;e=2;n=g;a=h;continue a}}while(0);i[f>>0]=0;g=n;h=a;b=j;e=2;n=g;a=h;continue a}case 10:case 9:{if((e|0)==1){g=n;h=a;b=j;e=0;n=g;a=h;continue a}if(!((e|0)==2&(a|0)<(c|0))){f=e;g=n;h=a;b=j;e=f;n=g;a=h;continue a}i[d+(a<<4)+12>>0]=0;g=n;h=a;b=j;e=2;n=g;a=h;continue a}case 17:case 11:if((e|0)==2){g=n;h=a;b=j;e=2;n=g;a=h;continue a}else break a;default:{f=e;g=n;h=a;b=j;e=f;n=g;a=h;continue a}}while(0);if((o|0)==12){o=0;if(!e)if((a|0)<(c|0)){k[d+(a<<4)>>2]=j;i[d+(a<<4)+12>>0]=1;e=1}else e=1;h=n;j=a;b=b+4|0;n=h;a=j;continue}else if((o|0)==16?(o=0,(e|0)!=0):0){f=e;g=n;h=a;b=j;e=f;n=g;a=h;continue}if((a|0)>=(c|0)){g=n;h=a;b=j;e=1;n=g;a=h;continue}k[d+(a<<4)>>2]=j;i[d+(a<<4)+12>>0]=1;g=n;h=a;b=j;e=1;n=g;a=h}return a|0}function dK(a,b){a=a|0;b=b|0;var c=0,d=0;a=b+4|0;c=i[a>>0]|0;a:do if(!(c<<24>>24))if((i[b+5>>0]|0)==120){b=b+6|0;a=0;while(1){b:do if(!(i[b>>0]|0)){c=i[b+1>>0]|0;if(c<<24>>24==59){d=17;break a}c=c<<24>>24;switch(c|0){case 57:case 56:case 55:case 54:case 53:case 52:case 51:case 50:case 49:case 48:{a=c+-48|a<<4;break}case 70:case 69:case 68:case 67:case 66:case 65:{a=(a<<4)+-55+c|0;break}case 102:case 101:case 100:case 99:case 98:case 97:{a=(a<<4)+-87+c|0;break}default:break b}if((a|0)>1114111){a=-1;break a}}while(0);b=b+2|0}}else{b=a;c=0;a=0;d=12}else{b=a;a=0;d=12}while(0);c:do if((d|0)==12)while(1){d=0;if(!(c<<24>>24)){c=i[b+1>>0]|0;if(c<<24>>24==59){d=17;break c}c=c<<24>>24}else c=-1;a=(a*10|0)+-48+c|0;c=b+2|0;if((a|0)>1114111){a=-1;break c}b=c;c=i[c>>0]|0;d=12}while(0);d:do if((d|0)==17)switch(a>>8|0){case 223:case 222:case 221:case 220:case 219:case 218:case 217:case 216:{a=-1;break d}case 0:{if(!(i[92156+a>>0]|0)){a=-1;break d}break}case 255:{if((a&-2|0)==65534){a=-1;break d}break}default:{}}while(0);return a|0}function eK(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;a:do switch((c-b|0)/2|0|0){case 2:{if((i[b+2>>0]|0)==0?(i[b+3>>0]|0)==116:0){if(!(i[b>>0]|0))a=i[b+1>>0]|0;else a=-1;a=(a|0)==108?60:(a|0)==103?62:0}else d=27;break}case 3:{if((((((i[b>>0]|0)==0?(i[b+1>>0]|0)==97:0)?(i[b+2>>0]|0)==0:0)?(i[b+3>>0]|0)==109:0)?(i[b+4>>0]|0)==0:0)?(i[b+5>>0]|0)==112:0)a=38;else d=27;break}case 4:{if(!(i[b>>0]|0))switch(i[b+1>>0]|0){case 113:{if(i[b+2>>0]|0){d=27;break a}if((i[b+3>>0]|0)!=117){d=27;break a}if(i[b+4>>0]|0){d=27;break a}if((i[b+5>>0]|0)!=111){d=27;break a}if(i[b+6>>0]|0){d=27;break a}if((i[b+7>>0]|0)==116){a=34;break a}else{d=27;break a}}case 97:{if(i[b+2>>0]|0){d=27;break a}if((i[b+3>>0]|0)!=112){d=27;break a}if(i[b+4>>0]|0){d=27;break a}if((i[b+5>>0]|0)!=111){d=27;break a}if(i[b+6>>0]|0){d=27;break a}if((i[b+7>>0]|0)==115){a=39;break a}else{d=27;break a}}default:{d=27;break a}}else d=27;break}default:d=27}while(0);if((d|0)==27)a=0;return a|0}function fK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;if(b>>>0<c>>>0){g=a+76|0;h=d+4|0;a=b;do{b=i[a>>0]|0;a:do if(b<<24>>24)if((b&-4)<<24>>24==-40)j=8;else j=19;else switch(l[g+(l[a+1>>0]|0)>>0]|0|0){case 7:{j=8;break a}case 5:{a=a+2|0;break a}case 6:{a=a+3|0;break a}case 10:{k[h>>2]=-1;k[d>>2]=(k[d>>2]|0)+1;a=a+2|0;break a}case 9:{k[d>>2]=(k[d>>2]|0)+1;f=a+2|0;if((f|0)==(c|0))a=c;else{b=i[f>>0]|0;e=i[a+3>>0]|0;b:do if(!(b<<24>>24))b=l[g+(e&255)>>0]|0;else{switch(b&255|0){case 219:case 218:case 217:case 216:{b=7;break b}case 223:case 222:case 221:case 220:{b=8;break b}case 255:{if((e&255)>253){b=0;break b}break}default:{}}b=29}while(0);a=(b|0)==10?a+4|0:f}k[h>>2]=-1;break a}default:{j=19;break a}}while(0);if((j|0)==8){j=0;a=a+4|0}else if((j|0)==19){j=0;a=a+2|0}k[h>>2]=(k[h>>2]|0)+1}while(a>>>0<c>>>0)}return}function gK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;f=c+-2|0;c=b+2|0;a:do if((c|0)!=(f|0)){e=a+76|0;b:while(1){b=b+3|0;if(i[c>>0]|0){g=10;break}a=i[b>>0]|0;switch(l[e+(a&255)>>0]|0){case 23:case 19:case 30:case 33:case 16:case 18:case 10:case 9:case 15:case 14:case 17:case 35:case 34:case 32:case 31:case 13:case 27:case 24:case 25:break;case 21:{if(a<<24>>24==9){g=7;break b}break}case 22:case 26:{if(a<<24>>24<0)g=9;break}default:g=9}if((g|0)==9){g=0;switch(i[b>>0]|0){case 64:case 36:break;default:{g=10;break b}}}b=c+2|0;if((b|0)==(f|0)){c=1;break a}else{a=c;c=b;b=a}}if((g|0)==7){k[d>>2]=c;c=0;break}else if((g|0)==10){k[d>>2]=c;c=0;break}}else c=1;while(0);return c|0}function hK(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,m=0,n=0;a=k[b>>2]|0;a:do if((a|0)!=(c|0)){j=e;b:while(1){h=i[a+1>>0]|0;g=l[a>>0]|0;switch(g|0){case 0:{if(h<<24>>24>-1){f=k[d>>2]|0;if((f|0)==(e|0)){m=6;break b}k[d>>2]=f+1;i[f>>0]=h}else m=8;break}case 7:case 6:case 5:case 4:case 3:case 2:case 1:{m=8;break}case 219:case 218:case 217:case 216:{f=k[d>>2]|0;if((j-f|0)<4){m=15;break b}n=h&255;g=(g<<2&12|n>>>6)+1|0;k[d>>2]=f+1;i[f>>0]=g>>>2|240;h=k[d>>2]|0;k[d>>2]=h+1;i[h>>0]=n>>>2&15|g<<4&48|128;h=a+2|0;g=l[a+3>>0]|0;f=(n<<4&48|g>>>6|(l[h>>0]|0)<<2&12|128)&255;a=k[d>>2]|0;k[d>>2]=a+1;i[a>>0]=f;a=k[d>>2]|0;k[d>>2]=a+1;i[a>>0]=g&63|128;a=h;break}default:{f=k[d>>2]|0;if((j-f|0)<3){m=12;break b}k[d>>2]=f+1;i[f>>0]=g>>>4|224;h=h&255;n=k[d>>2]|0;k[d>>2]=n+1;i[n>>0]=h>>>6|g<<2&60|128;n=k[d>>2]|0;k[d>>2]=n+1;i[n>>0]=h&63|128}}if((m|0)==8){m=0;f=k[d>>2]|0;if((j-f|0)<2){m=9;break}h=h&255;k[d>>2]=f+1;i[f>>0]=h>>>6|g<<2|192;n=k[d>>2]|0;k[d>>2]=n+1;i[n>>0]=h&63|128}a=a+2|0;if((a|0)==(c|0)){m=18;break a}}if((m|0)==6){k[b>>2]=a;break}else if((m|0)==9){k[b>>2]=a;break}else if((m|0)==12){k[b>>2]=a;break}else if((m|0)==15){k[b>>2]=a;break}}else m=18;while(0);if((m|0)==18)k[b>>2]=c;return}function iK(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;f=k[b>>2]|0;a=k[d>>2]|0;if((c-f|0)>(e-a|0)){g=c+-2|0;c=(i[g>>0]&-8)<<24>>24==-40?g:c}a:do if(!((f|0)==(c|0)|(a|0)==(e|0)))do{g=((l[f>>0]|0)<<8|(l[f+1>>0]|0))&65535;k[d>>2]=a+2;j[a>>1]=g;f=(k[b>>2]|0)+2|0;k[b>>2]=f;if((f|0)==(c|0))break a;a=k[d>>2]|0}while((a|0)!=(e|0));while(0);return}function jK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;a:do if((b|0)!=(c|0)){e=i[b>>0]|0;g=i[b+1>>0]|0;b:do if(e<<24>>24){e=e&255;switch(e|0){case 219:case 218:case 217:case 216:{j=14;break b}case 223:case 222:case 221:case 220:{j=36;break b}case 255:break;default:{j=8;break b}}if((g&255)>253)j=36;else{e=255;j=8}}else{h=a+76|0;switch(l[h+(g&255)>>0]|0){case 29:{e=0;j=8;break b}case 24:case 22:break b;case 7:{j=14;break b}case 5:{if((c-b|0)<2){e=-2;break a}k[d>>2]=b;e=0;break a}case 6:{if((c-b|0)<3){e=-2;break a}k[d>>2]=b;e=0;break a}case 19:{f=b+2|0;if((f|0)==(c|0)){e=-1;break a}do if(!(i[f>>0]|0)){e=i[b+3>>0]|0;if(e<<24>>24!=120){if((i[h+(e&255)>>0]|0)!=25)break;c:while(1){e=f+2|0;if((e|0)==(c|0)){e=-1;break a}if(i[e>>0]|0){j=35;break}switch(l[h+(l[b+5>>0]|0)>>0]|0){case 25:{b=f;f=e;break}case 18:{e=b;j=34;break c}default:{j=35;break c}}}if((j|0)==34){k[d>>2]=e+6;e=10;break a}else if((j|0)==35){k[d>>2]=e;e=0;break a}}f=b+4|0;if((f|0)==(c|0)){e=-1;break a}if((i[f>>0]|0)==0?(i[h+(l[b+5>>0]|0)>>0]&-2)<<24>>24==24:0){e=b+6|0;if((e|0)==(c|0)){e=-1;break a}d:while(1){if(i[e>>0]|0){j=28;break}switch(l[h+(l[f+3>>0]|0)>>0]|0){case 18:{e=f;j=27;break d}case 24:case 25:break;default:{j=28;break d}}f=e+2|0;if((f|0)==(c|0)){e=-1;break a}else{j=e;e=f;f=j}}if((j|0)==27){k[d>>2]=e+4;e=10;break a}else if((j|0)==28){k[d>>2]=e;e=0;break a}}k[d>>2]=f;e=0;break a}while(0);k[d>>2]=f;e=0;break a}default:{j=36;break b}}}while(0);if((j|0)==8){h=g&255;if(!(1<<(h&31)&k[92448+((h>>>5|l[179736+e>>0]<<3)<<2)>>2])){k[d>>2]=b;e=0;break}}else if((j|0)==14){if((c-b|0)<4){e=-2;break}k[d>>2]=b;e=0;break}else if((j|0)==36){k[d>>2]=b;e=0;break}e=b+2|0;if((e|0)!=(c|0)){h=a+76|0;e:while(1){g=i[e>>0]|0;a=i[b+3>>0]|0;f:do if(g<<24>>24){f=g&255;switch(f|0){case 223:case 222:case 221:case 220:{j=51;break e}case 219:case 218:case 217:case 216:{j=48;break e}case 255:break;default:{j=41;break f}}if((a&255)>253){j=51;break e}else{f=255;j=41}}else switch(l[h+(a&255)>>0]|0){case 5:{j=44;break e}case 6:{j=46;break e}case 7:{j=48;break e}case 18:{e=b;j=50;break e}case 29:{f=0;j=41;break}case 27:case 26:case 25:case 24:case 22:break;default:{j=51;break e}}while(0);if((j|0)==41?(j=0,a=a&255,(1<<(a&31)&k[92448+((a>>>5|l[179992+f>>0]<<3)<<2)>>2]|0)==0):0){j=43;break}b=e+2|0;if((b|0)==(c|0)){e=-1;break a}else{a=e;e=b;b=a}}if((j|0)==43){k[d>>2]=e;e=0;break}else if((j|0)==44){if((c-e|0)<2){e=-2;break}k[d>>2]=e;e=0;break}else if((j|0)==46){if((c-e|0)<3){e=-2;break}k[d>>2]=e;e=0;break}else if((j|0)==48){if((c-e|0)<4){e=-2;break}k[d>>2]=e;e=0;break}else if((j|0)==50){k[d>>2]=e+4;e=9;break}else if((j|0)==51){k[d>>2]=e;e=0;break}}else e=-1}else e=-1;while(0);return e|0}function kK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;a:do if((b|0)!=(c|0)){e=i[b>>0]|0;g=i[b+1>>0]|0;b:do if(e<<24>>24){e=e&255;switch(e|0){case 219:case 218:case 217:case 216:{j=14;break b}case 223:case 222:case 221:case 220:{j=17;break b}case 255:break;default:{j=8;break b}}if((g&255)>253)j=17;else{e=255;j=8}}else switch(l[a+76+(g&255)>>0]|0|0){case 29:{e=0;j=8;break b}case 24:case 22:break b;case 7:{j=14;break b}case 5:{if((c-b|0)<2){e=-2;break a}k[d>>2]=b;e=0;break a}case 6:{if((c-b|0)<3){e=-2;break a}k[d>>2]=b;e=0;break a}case 30:case 9:case 10:case 21:{k[d>>2]=b;e=22;break a}default:{j=17;break b}}while(0);if((j|0)==8){h=g&255;if(!(1<<(h&31)&k[92448+((h>>>5|(l[179736+e>>0]|0)<<3)<<2)>>2])){k[d>>2]=b;e=0;break}}else if((j|0)==14){if((c-b|0)<4){e=-2;break}k[d>>2]=b;e=0;break}else if((j|0)==17){k[d>>2]=b;e=0;break}e=b+2|0;if((e|0)!=(c|0)){h=a+76|0;c:while(1){g=i[e>>0]|0;a=i[b+3>>0]|0;d:do if(g<<24>>24){f=g&255;switch(f|0){case 223:case 222:case 221:case 220:{j=32;break c}case 219:case 218:case 217:case 216:{j=29;break c}case 255:break;default:{j=22;break d}}if((a&255)>253){j=32;break c}else{f=255;j=22}}else switch(l[h+(a&255)>>0]|0|0){case 5:{j=25;break c}case 6:{j=27;break c}case 7:{j=29;break c}case 18:{e=b;j=31;break c}case 29:{f=0;j=22;break}case 27:case 26:case 25:case 24:case 22:break;default:{j=32;break c}}while(0);if((j|0)==22?(j=0,a=a&255,(1<<(a&31)&k[92448+((a>>>5|(l[179992+f>>0]|0)<<3)<<2)>>2]|0)==0):0){j=24;break}g=e+2|0;if((g|0)==(c|0)){e=-1;break a}else{b=e;e=g}}if((j|0)==24){k[d>>2]=e;e=0;break}else if((j|0)==25){if((c-e|0)<2){e=-2;break}k[d>>2]=e;e=0;break}else if((j|0)==27){if((c-e|0)<3){e=-2;break}k[d>>2]=e;e=0;break}else if((j|0)==29){if((c-e|0)<4){e=-2;break}k[d>>2]=e;e=0;break}else if((j|0)==31){k[d>>2]=e+4;e=28;break}else if((j|0)==32){k[d>>2]=e;e=0;break}}else e=-1}else e=-1;while(0);return e|0}function lK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;a:do if((b|0)==(c|0))b=-1;else{if((i[b>>0]|0)==0?(i[b+1>>0]|0)==45:0){b=b+2|0;if((b|0)==(c|0)){b=-1;break}f=a+76|0;g=c;b:while(1){a=i[b>>0]|0;e=i[b+1>>0]|0;c:do if(a<<24>>24){switch(a&255|0){case 223:case 222:case 221:case 220:{h=17;break b}case 219:case 218:case 217:case 216:{h=15;break c}case 255:break;default:{h=27;break c}}if((e&255)>253){h=17;break b}else h=27}else switch(l[f+(e&255)>>0]|0){case 8:case 1:case 0:{h=17;break b}case 7:{h=15;break c}case 5:{if((g-b|0)<2){b=-2;break a}b=b+2|0;break c}case 6:{if((g-b|0)<3){b=-2;break a}b=b+3|0;break c}case 27:{a=b+2|0;if((a|0)==(c|0)){b=-1;break a}if(i[a>>0]|0){b=a;break c}if((i[b+3>>0]|0)==45)break b;else{b=a;break c}}default:{h=27;break c}}while(0);if((h|0)==15){h=0;if((g-b|0)<4){b=-2;break a}b=b+4|0}else if((h|0)==27){h=0;b=b+2|0}if((b|0)==(c|0)){b=-1;break a}}if((h|0)==17){k[d>>2]=b;b=0;break}a=b+4|0;if((a|0)==(c|0)){b=-1;break}if((i[a>>0]|0)==0?(i[b+5>>0]|0)==62:0){k[d>>2]=b+6;b=13;break}k[d>>2]=a;b=0;break}k[d>>2]=b;b=0}while(0);return b|0}function mK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,m=0,n=0,o=0;o=r;r=r+16|0;m=o;a:do if((b|0)!=(c|0)){e=i[b>>0]|0;f=i[b+1>>0]|0;b:do if(e<<24>>24){e=e&255;switch(e|0){case 219:case 218:case 217:case 216:{n=14;break b}case 223:case 222:case 221:case 220:{n=16;break b}case 255:break;default:{n=8;break b}}if((f&255)>253)n=16;else{e=255;n=8}}else switch(l[a+76+(f&255)>>0]|0){case 29:{e=0;n=8;break b}case 24:case 22:break b;case 7:{n=14;break b}case 5:{if((c-b|0)<2){e=-2;break a}k[d>>2]=b;e=0;break a}case 6:{if((c-b|0)<3){e=-2;break a}k[d>>2]=b;e=0;break a}default:{n=16;break b}}while(0);if((n|0)==8){j=f&255;if(!(1<<(j&31)&k[92448+((j>>>5|l[179736+e>>0]<<3)<<2)>>2])){k[d>>2]=b;e=0;break}}else if((n|0)==14){if((c-b|0)<4){e=-2;break}k[d>>2]=b;e=0;break}else if((n|0)==16){k[d>>2]=b;e=0;break}e=b+2|0;if((e|0)!=(c|0)){j=a+76|0;f=b;c:while(1){a=i[e>>0]|0;g=i[f+3>>0]|0;d:do if(a<<24>>24){f=a&255;switch(f|0){case 223:case 222:case 221:case 220:break c;case 219:case 218:case 217:case 216:{n=28;break c}case 255:break;default:{h=f;n=21;break d}}if((g&255)>253)break c;else{h=255;n=21}}else switch(l[j+(g&255)>>0]|0){case 5:{n=24;break c}case 6:{n=26;break c}case 7:{n=28;break c}case 10:case 9:case 21:{n=30;break c}case 15:{n=51;break c}case 29:{h=0;n=21;break}case 27:case 26:case 25:case 24:case 22:break;default:break c}while(0);if((n|0)==21?(n=0,g=g&255,(1<<(g&31)&k[92448+((g>>>5|l[179992+h>>0]<<3)<<2)>>2]|0)==0):0){n=23;break}f=e+2|0;if((f|0)==(c|0)){e=-1;break a}else{g=e;e=f;f=g}}if((n|0)==23){k[d>>2]=e;e=0;break}else if((n|0)==24){if((c-e|0)<2){e=-2;break}k[d>>2]=e;e=0;break}else if((n|0)==26){if((c-e|0)<3){e=-2;break}k[d>>2]=e;e=0;break}else if((n|0)==28){if((c-e|0)<4){e=-2;break}k[d>>2]=e;e=0;break}else if((n|0)==30){if(!(nK(b,e,m)|0)){k[d>>2]=e;e=0;break}e=f+4|0;if((e|0)==(c|0)){e=-1;break}g=c;e:while(1){f=i[e>>0]|0;a=i[e+1>>0]|0;f:do if(f<<24>>24){switch(f&255|0){case 223:case 222:case 221:case 220:{n=44;break e}case 219:case 218:case 217:case 216:{n=42;break f}case 255:break;default:{n=50;break f}}if((a&255)>253){n=44;break e}else n=50}else switch(l[j+(a&255)>>0]|0){case 8:case 1:case 0:{n=44;break e}case 7:{n=42;break f}case 5:{if((g-e|0)<2){e=-2;break a}e=e+2|0;break f}case 6:{if((g-e|0)<3){e=-2;break a}e=e+3|0;break f}case 15:{f=e+2|0;if((f|0)==(c|0)){e=-1;break a}if(i[f>>0]|0){e=f;break f}if((i[e+3>>0]|0)==62){n=49;break e}else{e=f;break f}}default:{n=50;break f}}while(0);if((n|0)==42){n=0;if((g-e|0)<4){e=-2;break a}e=e+4|0}else if((n|0)==50){n=0;e=e+2|0}if((e|0)==(c|0)){e=-1;break a}}if((n|0)==44){k[d>>2]=e;e=0;break}else if((n|0)==49){k[d>>2]=e+4;e=k[m>>2]|0;break}}else if((n|0)==51){if(!(nK(b,e,m)|0)){k[d>>2]=e;e=0;break}e=f+4|0;if((e|0)==(c|0)){e=-1;break}if((i[e>>0]|0)==0?(i[f+5>>0]|0)==62:0){k[d>>2]=f+6;e=k[m>>2]|0;break}}k[d>>2]=e;e=0}else e=-1}else e=-1;while(0);r=o;return e|0}function nK(a,b,c){a=a|0;b=b|0;c=c|0;k[c>>2]=11;a:do if((b-a|0)==6?(i[a>>0]|0)==0:0){switch(i[a+1>>0]|0){case 120:{b=0;break}case 88:{b=1;break}default:{b=1;break a}}if(!(i[a+2>>0]|0)){switch(i[a+3>>0]|0){case 109:break;case 77:{b=1;break}default:{b=1;break a}}if(!(i[a+4>>0]|0)){switch(i[a+5>>0]|0){case 108:break;case 76:{b=0;break a}default:{b=1;break a}}if(!b){k[c>>2]=12;b=1}else b=0}else b=1}else b=1}else b=1;while(0);return b|0}function oK(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0;a:do if((c|0)!=(d|0)){h=b+76|0;g=d;b:while(1){b=i[c>>0]|0;f=i[c+1>>0]|0;c:do if(b<<24>>24){switch(b&255|0){case 223:case 222:case 221:case 220:{j=13;break b}case 219:case 218:case 217:case 216:{j=11;break c}case 255:break;default:{j=19;break c}}if((f&255)>253){j=13;break b}else j=19}else{f=l[h+(f&255)>>0]|0;switch(f|0){case 8:case 1:case 0:{j=13;break b}case 7:{j=11;break c}case 5:{if((g-c|0)<2){c=-2;break a}c=c+2|0;break c}case 6:{if((g-c|0)<3){c=-2;break a}c=c+3|0;break c}case 13:case 12:{b=c+2|0;if((f|0)==(a|0))break b;else{c=b;break c}}default:{j=19;break c}}}while(0);if((j|0)==11){j=0;if((g-c|0)<4){c=-2;break a}c=c+4|0}else if((j|0)==19){j=0;c=c+2|0}if((c|0)==(d|0)){c=-1;break a}}if((j|0)==13){k[e>>2]=c;c=0;break}if((b|0)==(d|0))c=-27;else{k[e>>2]=b;if(!(i[b>>0]|0))switch(l[h+(l[c+3>>0]|0)>>0]|0){case 20:case 30:case 11:case 10:case 9:case 21:{c=27;break a}default:{}}c=0}}else c=-1;while(0);return c|0}function pK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,m=0,n=0;a:do if((b|0)==(c|0))e=-4;else{n=a+76|0;b:do switch(l[n+(l[b>>0]|0)>>0]|0){case 12:{e=TK(12,a,b+1|0,c,d)|0;break a}case 13:{e=TK(13,a,b+1|0,c,d)|0;break a}case 2:{e=b+1|0;if((e|0)==(c|0)){e=-1;break a}switch(l[n+(l[e>>0]|0)>>0]|0){case 16:{f=b+2|0;if((f|0)==(c|0)){e=-1;break a}switch(l[n+(l[f>>0]|0)>>0]|0){case 27:{e=QK(a,b+3|0,c,d)|0;break a}case 20:{k[d>>2]=b+3;e=33;break a}case 24:case 22:{e=b+3|0;if((e|0)==(c|0)){e=-1;break a}c:while(1){switch(l[n+(l[e>>0]|0)>>0]|0){case 30:{g=16;break c}case 10:case 9:case 21:break c;case 24:case 22:break;default:{g=20;break c}}f=e+1|0;if((f|0)==(c|0)){e=-1;break a}else{a=e;e=f;f=a}}if((g|0)==20){k[d>>2]=e;e=0;break a}d:do if((g|0)==16){f=f+2|0;if((f|0)==(c|0)){e=-1;break a}switch(l[n+(l[f>>0]|0)>>0]|0){case 30:case 10:case 9:case 21:break;default:break d}k[d>>2]=e;e=0;break a}while(0);k[d>>2]=e;e=16;break a}default:{k[d>>2]=f;e=0;break a}}}case 15:{e=RK(a,b+2|0,c,d)|0;break a}case 7:case 6:case 5:case 29:case 24:case 22:{k[d>>2]=b;e=29;break a}default:{k[d>>2]=e;e=0;break a}}}case 9:{if((b+1|0)==(c|0)){k[d>>2]=c;e=-15;break a}else g=3;break}case 10:case 21:{g=3;break}case 30:{e=PK(a,b+1|0,c,d)|0;break a}case 35:{k[d>>2]=b+1;e=38;break a}case 20:{k[d>>2]=b+1;e=25;break a}case 4:{e=b+1|0;if((e|0)==(c|0)){e=-26;break a}if((i[e>>0]|0)==93){f=b+2|0;if((f|0)==(c|0)){e=-1;break a}if((i[f>>0]|0)==62){k[d>>2]=b+3;e=34;break a}}k[d>>2]=e;e=26;break a}case 31:{k[d>>2]=b+1;e=23;break a}case 32:{e=b+1|0;if((e|0)==(c|0)){e=-24;break a}switch(l[n+(l[e>>0]|0)>>0]|0){case 33:{k[d>>2]=b+2;e=36;break a}case 15:{k[d>>2]=b+2;e=35;break a}case 34:{k[d>>2]=b+2;e=37;break a}case 32:case 36:case 35:case 11:case 21:case 10:case 9:{k[d>>2]=e;e=24;break a}default:{k[d>>2]=e;e=0;break a}}}case 36:{k[d>>2]=b+1;e=21;break a}case 11:{k[d>>2]=b+1;e=17;break a}case 19:{e=b+1|0;if((e|0)==(c|0)){e=-1;break a}e:do switch(l[n+(l[e>>0]|0)>>0]|0){case 29:{k[d>>2]=e;e=0;break a}case 24:case 22:{e=b+2|0;break}case 5:{if((c-e|0)<2){e=-2;break a}if(!(_b[k[a+344>>2]&127](a,e)|0)){k[d>>2]=e;e=0;break a}else{e=b+3|0;break e}}case 6:{if((c-e|0)<3){e=-2;break a}if(!(_b[k[a+348>>2]&127](a,e)|0)){k[d>>2]=e;e=0;break a}else{e=b+4|0;break e}}case 7:{if((c-e|0)<4){e=-2;break a}if(!(_b[k[a+352>>2]&127](a,e)|0)){k[d>>2]=e;e=0;break a}else{e=b+5|0;break e}}default:{k[d>>2]=e;e=0;break a}}while(0);if((e|0)==(c|0)){e=-20;break a}f=c;b=a+332|0;g=a+336|0;h=a+340|0;f:while(1){switch(l[n+(l[e>>0]|0)>>0]|0){case 29:{g=70;break f}case 36:case 30:case 11:case 32:case 21:case 10:case 9:{g=85;break f}case 27:case 26:case 25:case 24:case 22:{e=e+1|0;break}case 5:{if((f-e|0)<2){e=-2;break a}if(!(_b[k[b>>2]&127](a,e)|0)){g=74;break f}e=e+2|0;break}case 6:{if((f-e|0)<3){e=-2;break a}if(!(_b[k[g>>2]&127](a,e)|0)){g=78;break f}e=e+3|0;break}case 7:{if((f-e|0)<4){e=-2;break a}if(!(_b[k[h>>2]&127](a,e)|0)){g=82;break f}e=e+4|0;break}default:{g=86;break f}}if((e|0)==(c|0)){e=-20;break a}}if((g|0)==70){k[d>>2]=e;e=0;break a}else if((g|0)==74){k[d>>2]=e;e=0;break a}else if((g|0)==78){k[d>>2]=e;e=0;break a}else if((g|0)==82){k[d>>2]=e;e=0;break a}else if((g|0)==85){k[d>>2]=e;e=20;break a}else if((g|0)==86){k[d>>2]=e;e=0;break a}break}case 5:{if((c-b|0)<2){e=-2;break a}if(_b[k[a+344>>2]&127](a,b)|0){f=b+2|0;e=18;break b}if(!(_b[k[a+332>>2]&127](a,b)|0)){k[d>>2]=b;e=0;break a}else{f=b+2|0;e=19;break b}}case 6:{if((c-b|0)<3){e=-2;break a}if(_b[k[a+348>>2]&127](a,b)|0){f=b+3|0;e=18;break b}if(!(_b[k[a+336>>2]&127](a,b)|0)){k[d>>2]=b;e=0;break a}else{f=b+3|0;e=19;break b}}case 7:{if((c-b|0)<4){e=-2;break a}if(_b[k[a+352>>2]&127](a,b)|0){f=b+4|0;e=18;break b}if(!(_b[k[a+340>>2]&127](a,b)|0)){k[d>>2]=b;e=0;break a}else{f=b+4|0;e=19;break b}}case 24:case 22:{f=b+1|0;e=18;break}case 23:case 27:case 26:case 25:{f=b+1|0;e=19;break}default:{k[d>>2]=b;e=0;break a}}while(0);if((g|0)==3){e=b+1|0;g:do if((e|0)!=(c|0)){f=b;h:while(1){switch(l[n+(l[e>>0]|0)>>0]|0){case 10:case 21:break;case 9:{if((f+2|0)==(c|0))break h;break}default:break h}f=e+1|0;if((f|0)==(c|0))break g;else{a=e;e=f;f=a}}k[d>>2]=e;e=15;break a}while(0);k[d>>2]=c;e=15;break}i:do if((f|0)!=(c|0)){g=c;h=a+332|0;j=a+336|0;m=a+340|0;j:while(1){k:do switch(l[n+(l[f>>0]|0)>>0]|0){case 29:{e=f;g=111;break j}case 10:case 9:case 21:case 30:case 20:case 36:case 35:case 32:case 11:{g=125;break j}case 34:{g=145;break j}case 33:{g=148;break j}case 15:{g=151;break j}case 27:case 26:case 25:case 24:case 22:{f=f+1|0;break}case 5:{if((g-f|0)<2){e=-2;break a}if(!(_b[k[h>>2]&127](a,f)|0)){e=f;g=115;break j}f=f+2|0;break}case 6:{if((g-f|0)<3){e=-2;break a}if(!(_b[k[j>>2]&127](a,f)|0)){e=f;g=119;break j}f=f+3|0;break}case 7:{if((g-f|0)<4){e=-2;break a}if(!(_b[k[m>>2]&127](a,f)|0)){e=f;g=123;break j}f=f+4|0;break}case 23:{b=f+1|0;switch(e|0){case 18:break;case 41:{f=b;e=19;break k}default:{f=b;break k}}if((b|0)==(c|0)){e=-1;break a}switch(l[n+(l[b>>0]|0)>>0]|0){case 29:{e=b;g=129;break j}case 27:case 26:case 25:case 24:case 22:{f=f+2|0;e=41;break k}case 5:{if((g-b|0)<2){e=-2;break a}if(!(_b[k[h>>2]&127](a,b)|0)){e=b;g=133;break j}f=f+3|0;e=41;break k}case 6:{if((g-b|0)<3){e=-2;break a}if(!(_b[k[j>>2]&127](a,b)|0)){e=b;g=137;break j}f=f+4|0;e=41;break k}case 7:{if((g-b|0)<4){e=-2;break a}if(!(_b[k[m>>2]&127](a,b)|0)){e=b;g=141;break j}f=f+5|0;e=41;break k}default:{f=b;e=19;break k}}}default:{e=f;g=154;break j}}while(0);if((f|0)==(c|0))break i}switch(g|0){case 111:{k[d>>2]=e;e=0;break a}case 115:{k[d>>2]=e;e=0;break a}case 119:{k[d>>2]=e;e=0;break a}case 123:{k[d>>2]=e;e=0;break a}case 125:{k[d>>2]=f;break a}case 129:{k[d>>2]=e;e=0;break a}case 133:{k[d>>2]=e;e=0;break a}case 137:{k[d>>2]=e;e=0;break a}case 141:{k[d>>2]=e;e=0;break a}case 145:if((e|0)==19){k[d>>2]=f;e=0;break a}else{k[d>>2]=f+1;e=32;break a}case 148:if((e|0)==19){k[d>>2]=f;e=0;break a}else{k[d>>2]=f+1;e=31;break a}case 151:if((e|0)==19){k[d>>2]=f;e=0;break a}else{k[d>>2]=f+1;e=30;break a}case 154:{k[d>>2]=e;e=0;break a}}}while(0);e=0-e|0}while(0);return e|0}function qK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0;w=r;r=r+16|0;u=w;a:do if((b|0)==(c|0))e=-4;else{v=a+76|0;b:do switch(l[v+(l[b>>0]|0)>>0]|0){case 2:{e=b+1|0;if((e|0)==(c|0)){e=-1;break a}c:do switch(l[v+(l[e>>0]|0)>>0]|0){case 29:{k[d>>2]=e;e=0;break a}case 24:case 22:{e=b+2|0;break}case 5:{if((c-e|0)<2){e=-2;break a}if(!(_b[k[a+344>>2]&127](a,e)|0)){k[d>>2]=e;e=0;break a}else{e=b+3|0;break c}}case 6:{if((c-e|0)<3){e=-2;break a}if(!(_b[k[a+348>>2]&127](a,e)|0)){k[d>>2]=e;e=0;break a}else{e=b+4|0;break c}}case 7:{if((c-e|0)<4){e=-2;break a}if(!(_b[k[a+352>>2]&127](a,e)|0)){k[d>>2]=e;e=0;break a}else{e=b+5|0;break c}}case 16:{e=b+2|0;if((e|0)==(c|0)){e=-1;break a}switch(l[v+(l[e>>0]|0)>>0]|0){case 27:{e=QK(a,b+3|0,c,d)|0;break a}case 20:{e=b+3|0;if((c-e|0)<6){e=-1;break a}if((i[e>>0]|0)==67){e=b+4|0;if((i[e>>0]|0)==68){e=b+5|0;if((i[e>>0]|0)==65){e=b+6|0;if((i[e>>0]|0)==84){e=b+7|0;if((i[e>>0]|0)==65){e=b+8|0;if((i[e>>0]|0)==91){k[d>>2]=b+9;e=8;break a}}}}}}k[d>>2]=e;e=0;break a}default:{k[d>>2]=e;e=0;break a}}}case 15:{e=RK(a,b+2|0,c,d)|0;break a}case 17:{e=b+2|0;if((e|0)==(c|0)){e=-1;break a}d:do switch(l[v+(l[e>>0]|0)>>0]|0){case 29:{k[d>>2]=e;e=0;break a}case 24:case 22:{e=b+3|0;break}case 5:{if((c-e|0)<2){e=-2;break a}if(!(_b[k[a+344>>2]&127](a,e)|0)){k[d>>2]=e;e=0;break a}else{e=b+4|0;break d}}case 6:{if((c-e|0)<3){e=-2;break a}if(!(_b[k[a+348>>2]&127](a,e)|0)){k[d>>2]=e;e=0;break a}else{e=b+5|0;break d}}case 7:{if((c-e|0)<4){e=-2;break a}if(!(_b[k[a+352>>2]&127](a,e)|0)){k[d>>2]=e;e=0;break a}else{e=b+6|0;break d}}default:{k[d>>2]=e;e=0;break a}}while(0);if((e|0)==(c|0)){e=-1;break a}b=c;f=a+332|0;g=a+336|0;h=a+340|0;e:while(1){switch(l[v+(l[e>>0]|0)>>0]|0){case 29:{f=56;break e}case 10:case 9:case 21:{f=55;break e}case 11:{f=76;break e}case 27:case 26:case 25:case 24:case 22:{e=e+1|0;break}case 5:{if((b-e|0)<2){e=-2;break a}if(!(_b[k[f>>2]&127](a,e)|0)){f=60;break e}e=e+2|0;break}case 6:{if((b-e|0)<3){e=-2;break a}if(!(_b[k[g>>2]&127](a,e)|0)){f=64;break e}e=e+3|0;break}case 7:{if((b-e|0)<4){e=-2;break a}if(!(_b[k[h>>2]&127](a,e)|0)){f=68;break e}e=e+4|0;break}case 23:{e=e+1|0;break}default:{f=77;break e}}if((e|0)==(c|0)){e=-1;break a}}if((f|0)==55){b=e+1|0;if((b|0)==(c|0)){e=-1;break a}f:while(1){switch(l[v+(l[b>>0]|0)>>0]|0){case 11:{f=72;break f}case 10:case 9:case 21:break;default:{e=b;f=73;break f}}e=b+1|0;if((e|0)==(c|0)){e=-1;break a}else{a=b;b=e;e=a}}if((f|0)==72){k[d>>2]=e+2;e=5;break a}else if((f|0)==73){k[d>>2]=e;e=0;break a}}else if((f|0)==56){k[d>>2]=e;e=0;break a}else if((f|0)==60){k[d>>2]=e;e=0;break a}else if((f|0)==64){k[d>>2]=e;e=0;break a}else if((f|0)==68){k[d>>2]=e;e=0;break a}else if((f|0)==76){k[d>>2]=e+1;e=5;break a}else if((f|0)==77){k[d>>2]=e;e=0;break a}break}default:{k[d>>2]=e;e=0;break a}}while(0);if((e|0)==(c|0)){e=-1;break a}m=c;n=a+332|0;o=a+336|0;p=a+340|0;q=a+344|0;s=a+348|0;t=a+352|0;b=0;g:while(1){h:do switch(l[v+(l[e>>0]|0)>>0]|0){case 29:{f=81;break g}case 10:case 9:case 21:{f=80;break g}case 11:{f=230;break g}case 17:break g;case 27:case 26:case 25:case 24:case 22:{e=e+1|0;break}case 5:{if((m-e|0)<2){e=-2;break a}if(!(_b[k[n>>2]&127](a,e)|0)){f=85;break g}e=e+2|0;break}case 6:{if((m-e|0)<3){e=-2;break a}if(!(_b[k[o>>2]&127](a,e)|0)){f=89;break g}e=e+3|0;break}case 7:{if((m-e|0)<4){e=-2;break a}if(!(_b[k[p>>2]&127](a,e)|0)){f=93;break g}e=e+4|0;break}case 23:{if(b){f=96;break g}b=e+1|0;if((b|0)==(c|0)){e=-1;break a}switch(l[v+(l[b>>0]|0)>>0]|0){case 29:{e=b;f=99;break g}case 24:case 22:{e=e+2|0;b=1;break h}case 5:{if((m-b|0)<2){e=-2;break a}if(!(_b[k[q>>2]&127](a,b)|0)){e=b;f=104;break g}e=e+3|0;b=1;break h}case 6:{if((m-b|0)<3){e=-2;break a}if(!(_b[k[s>>2]&127](a,b)|0)){e=b;f=108;break g}e=e+4|0;b=1;break h}case 7:{if((m-b|0)<4){e=-2;break a}if(!(_b[k[t>>2]&127](a,b)|0)){e=b;f=112;break g}e=e+5|0;b=1;break h}default:{e=b;f=114;break g}}}default:{f=235;break g}}while(0);if((e|0)==(c|0)){e=-1;break a}}i:switch(f|0){case 80:{b=e+1|0;if((b|0)==(c|0)){e=-1;break a}j:while(1){switch(l[v+(l[b>>0]|0)>>0]|0){case 11:{e=b;f=230;break i}case 17:{e=b;break i}case 29:{e=b;f=117;break j}case 24:case 22:{f=118;break j}case 5:{f=119;break j}case 6:{f=123;break j}case 7:{f=127;break j}case 10:case 9:case 21:break;default:{e=b;f=131;break j}}e=b+1|0;if((e|0)==(c|0)){e=-1;break a}else{j=b;b=e;e=j}}do if((f|0)==117){k[d>>2]=e;e=0;break a}else if((f|0)==118)e=e+2|0;else if((f|0)==119){if((m-b|0)<2){e=-2;break a}if(!(_b[k[q>>2]&127](a,b)|0)){k[d>>2]=b;e=0;break a}else{e=e+3|0;break}}else if((f|0)==123){if((m-b|0)<3){e=-2;break a}if(!(_b[k[s>>2]&127](a,b)|0)){k[d>>2]=b;e=0;break a}else{e=e+4|0;break}}else if((f|0)==127){if((m-b|0)<4){e=-2;break a}if(!(_b[k[t>>2]&127](a,b)|0)){k[d>>2]=b;e=0;break a}else{e=e+5|0;break}}else if((f|0)==131){k[d>>2]=e;e=0;break a}while(0);k[u>>2]=e;k:do if((e|0)==(c|0))e=-1;else{g=a+356|0;h=a+360|0;j=a+364|0;b=0;l:while(1){m:do switch(l[v+(l[e>>0]|0)>>0]|0){case 29:{f=137;break l}case 27:case 26:case 25:case 24:case 22:{e=e+1|0;k[u>>2]=e;break}case 5:{if((m-e|0)<2){e=-2;break k}if(!(_b[k[n>>2]&127](a,e)|0)){f=141;break l}e=e+2|0;k[u>>2]=e;break}case 6:{if((m-e|0)<3){e=-2;break k}if(!(_b[k[o>>2]&127](a,e)|0)){f=145;break l}e=e+3|0;k[u>>2]=e;break}case 7:{if((m-e|0)<4){e=-2;break k}if(!(_b[k[p>>2]&127](a,e)|0)){f=149;break l}e=e+4|0;k[u>>2]=e;break}case 23:{if(b){f=152;break l}b=e+1|0;k[u>>2]=b;if((b|0)==(c|0)){e=-1;break k}switch(l[v+(l[b>>0]|0)>>0]|0){case 29:{e=b;f=155;break l}case 24:case 22:{e=e+2|0;k[u>>2]=e;b=1;break m}case 5:{if((m-b|0)<2){e=-2;break k}if(!(_b[k[q>>2]&127](a,b)|0)){e=b;f=159;break l}e=e+3|0;k[u>>2]=e;b=1;break m}case 6:{if((m-b|0)<3){e=-2;break k}if(!(_b[k[s>>2]&127](a,b)|0)){e=b;f=163;break l}e=e+4|0;k[u>>2]=e;b=1;break m}case 7:{if((m-b|0)<4){e=-2;break k}if(!(_b[k[t>>2]&127](a,b)|0)){e=b;f=167;break l}e=e+5|0;k[u>>2]=e;b=1;break m}default:{e=b;f=169;break l}}}case 10:case 9:case 21:{e=e+1|0;k[u>>2]=e;if((e|0)==(c|0)){e=-1;break k}while(1){b=i[v+(l[e>>0]|0)>>0]|0;if(b<<24>>24==14){f=136;break m}switch(b&255|0){case 9:case 10:case 21:break;default:{f=173;break l}}e=e+1|0;k[u>>2]=e;if((e|0)==(c|0)){e=-1;break k}}}case 14:{f=136;break}default:{f=228;break l}}while(0);do if((f|0)==136){b=e+1|0;k[u>>2]=b;if((b|0)==(c|0)){e=-1;break k}while(1){f=i[v+(l[b>>0]|0)>>0]|0;if((f&-2)<<24>>24==12)break;switch(f&255|0){case 9:case 10:case 21:break;default:{e=b;f=177;break l}}e=b+1|0;k[u>>2]=e;if((e|0)==(c|0)){e=-1;break k}else{f=b;b=e;e=f}}e=e+2|0;k[u>>2]=e;if((e|0)==(c|0)){e=-1;break k}while(1){b=i[v+(l[e>>0]|0)>>0]|0;if(b<<24>>24==f<<24>>24)break;switch(b&255|0){case 8:case 1:case 0:{f=193;break l}case 2:{f=199;break l}case 5:{if((m-e|0)<2){e=-2;break k}if(_b[k[g>>2]&127](a,e)|0){f=183;break l}e=e+2|0;k[u>>2]=e;break}case 6:{if((m-e|0)<3){e=-2;break k}if(_b[k[h>>2]&127](a,e)|0){f=187;break l}e=e+3|0;k[u>>2]=e;break}case 7:{if((m-e|0)<4){e=-2;break k}if(_b[k[j>>2]&127](a,e)|0){f=191;break l}e=e+4|0;k[u>>2]=e;break}case 3:{e=OK(a,e+1|0,c,u)|0;if((e|0)<1){f=197;break l}e=k[u>>2]|0;break}default:{e=e+1|0;k[u>>2]=e}}if((e|0)==(c|0)){e=-1;break k}}b=e+1|0;k[u>>2]=b;if((b|0)==(c|0)){e=-1;break k}switch(l[v+(l[b>>0]|0)>>0]|0){case 11:{e=b;f=222;break l}case 17:{e=b;f=223;break l}case 10:case 9:case 21:break;default:{e=b;f=204;break l}}e=e+2|0;k[u>>2]=e;if((e|0)==(c|0)){e=-1;break k}n:while(1){switch(l[v+(l[e>>0]|0)>>0]|0){case 29:{f=207;break l}case 11:{f=222;break l}case 17:{f=223;break l}case 24:case 22:{f=208;break n}case 5:{f=209;break n}case 6:{f=213;break n}case 7:{f=217;break n}case 10:case 9:case 21:break;default:{f=227;break l}}e=e+1|0;k[u>>2]=e;if((e|0)==(c|0)){e=-1;break k}}if((f|0)==208){f=0;e=e+1|0;k[u>>2]=e;b=0;break}else if((f|0)==209){f=0;if((m-e|0)<2){e=-2;break k}if(!(_b[k[q>>2]&127](a,e)|0)){f=211;break l}e=e+2|0;k[u>>2]=e;b=0;break}else if((f|0)==213){f=0;if((m-e|0)<3){e=-2;break k}if(!(_b[k[s>>2]&127](a,e)|0)){f=215;break l}e=e+3|0;k[u>>2]=e;b=0;break}else if((f|0)==217){f=0;if((m-e|0)<4){e=-2;break k}if(!(_b[k[t>>2]&127](a,e)|0)){f=219;break l}e=e+4|0;k[u>>2]=e;b=0;break}}while(0);if((e|0)==(c|0)){e=-1;break k}}switch(f|0){case 137:{k[d>>2]=e;e=0;break k}case 141:{k[d>>2]=e;e=0;break k}case 145:{k[d>>2]=e;e=0;break k}case 149:{k[d>>2]=e;e=0;break k}case 152:{k[d>>2]=e;e=0;break k}case 155:{k[d>>2]=e;e=0;break k}case 159:{k[d>>2]=e;e=0;break k}case 163:{k[d>>2]=e;e=0;break k}case 167:{k[d>>2]=e;e=0;break k}case 169:{k[d>>2]=e;e=0;break k}case 173:{k[d>>2]=e;e=0;break k}case 177:{k[d>>2]=e;e=0;break k}case 183:{k[d>>2]=e;e=0;break k}case 187:{k[d>>2]=e;e=0;break k}case 191:{k[d>>2]=e;e=0;break k}case 193:{k[d>>2]=e;e=0;break k}case 197:{if(e)break k;k[d>>2]=k[u>>2];e=0;break k}case 199:{k[d>>2]=e;e=0;break k}case 204:{k[d>>2]=e;e=0;break k}case 207:{k[d>>2]=e;e=0;break k}case 211:{k[d>>2]=e;e=0;break k}case 215:{k[d>>2]=e;e=0;break k}case 219:{k[d>>2]=e;e=0;break k}case 222:{k[d>>2]=e+1;e=1;break k}case 223:{b=e+1|0;k[u>>2]=b;if((b|0)==(c|0)){e=-1;break k}if((i[b>>0]|0)==62){k[d>>2]=e+2;e=3;break k}else{k[d>>2]=b;e=0;break k}}case 227:{k[d>>2]=e;e=0;break k}case 228:{k[d>>2]=e;e=0;break k}}}while(0);break a}case 81:{k[d>>2]=e;e=0;break a}case 85:{k[d>>2]=e;e=0;break a}case 89:{k[d>>2]=e;e=0;break a}case 93:{k[d>>2]=e;e=0;break a}case 96:{k[d>>2]=e;e=0;break a}case 99:{k[d>>2]=e;e=0;break a}case 104:{k[d>>2]=e;e=0;break a}case 108:{k[d>>2]=e;e=0;break a}case 112:{k[d>>2]=e;e=0;break a}case 114:{k[d>>2]=e;e=0;break a}case 235:{k[d>>2]=e;e=0;break a}}if((f|0)==230){k[d>>2]=e+1;e=2;break a}b=e+1|0;if((b|0)==(c|0)){e=-1;break a}if((i[b>>0]|0)==62){k[d>>2]=e+2;e=4;break a}else{k[d>>2]=b;e=0;break a}}case 3:{e=OK(a,b+1|0,c,d)|0;break a}case 9:{e=b+1|0;if((e|0)==(c|0)){e=-3;break a}k[d>>2]=(i[v+(l[e>>0]|0)>>0]|0)==10?b+2|0:e;e=7;break a}case 10:{k[d>>2]=b+1;e=7;break a}case 4:{e=b+1|0;if((e|0)==(c|0)){e=-5;break a}if((i[e>>0]|0)==93){b=b+2|0;if((b|0)==(c|0)){e=-5;break a}if((i[b>>0]|0)==62){k[d>>2]=b;e=0;break a}}break}case 5:{if((c-b|0)<2){e=-2;break a}if(!(_b[k[a+356>>2]&127](a,b)|0)){e=b+2|0;break b}else{k[d>>2]=b;e=0;break a}}case 6:{if((c-b|0)<3){e=-2;break a}if(!(_b[k[a+360>>2]&127](a,b)|0)){e=b+3|0;break b}else{k[d>>2]=b;e=0;break a}}case 7:{if((c-b|0)<4){e=-2;break a}if(!(_b[k[a+364>>2]&127](a,b)|0)){e=b+4|0;break b}else{k[d>>2]=b;e=0;break a}}case 8:case 1:case 0:{k[d>>2]=b;e=0;break a}default:e=b+1|0}while(0);o:do if((e|0)!=(c|0)){g=c;h=a+356|0;j=a+360|0;m=a+364|0;p:while(1){switch(l[v+(l[e>>0]|0)>>0]|0){case 10:case 9:case 8:case 1:case 0:case 2:case 3:{f=279;break p}case 5:{if((g-e|0)<2){f=264;break p}if(_b[k[h>>2]&127](a,e)|0){f=264;break p}e=e+2|0;break}case 6:{if((g-e|0)<3){f=268;break p}if(_b[k[j>>2]&127](a,e)|0){f=268;break p}e=e+3|0;break}case 7:{if((g-e|0)<4){f=272;break p}if(_b[k[m>>2]&127](a,e)|0){f=272;break p}e=e+4|0;break}case 4:{b=e+1|0;if((b|0)==(c|0)){f=279;break p}if((i[b>>0]|0)==93){f=e+2|0;if((f|0)==(c|0)){f=279;break p}if((i[f>>0]|0)==62){e=f;f=278;break p}else e=b}else e=b;break}default:e=e+1|0}if((e|0)==(c|0))break o}if((f|0)==264){k[d>>2]=e;e=6;break a}else if((f|0)==268){k[d>>2]=e;e=6;break a}else if((f|0)==272){k[d>>2]=e;e=6;break a}else if((f|0)==278){k[d>>2]=e;e=0;break a}else if((f|0)==279){k[d>>2]=e;e=6;break a}}while(0);k[d>>2]=c;e=6}while(0);r=w;return e|0}function rK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;a:do if((b|0)==(c|0))e=-4;else{j=a+76|0;b:do switch(l[j+(l[b>>0]|0)>>0]|0){case 4:{e=b+1|0;if((e|0)==(c|0)){e=-1;break a}if((i[e>>0]|0)==93){f=b+2|0;if((f|0)==(c|0)){e=-1;break a}if((i[f>>0]|0)==62){k[d>>2]=b+3;e=40;break a}}break}case 9:{e=b+1|0;if((e|0)==(c|0)){e=-1;break a}k[d>>2]=(i[j+(l[e>>0]|0)>>0]|0)==10?b+2|0:e;e=7;break a}case 10:{k[d>>2]=b+1;e=7;break a}case 5:{if((c-b|0)<2){e=-2;break a}if(!(_b[k[a+356>>2]&127](a,b)|0)){e=b+2|0;break b}else{k[d>>2]=b;e=0;break a}}case 6:{if((c-b|0)<3){e=-2;break a}if(!(_b[k[a+360>>2]&127](a,b)|0)){e=b+3|0;break b}else{k[d>>2]=b;e=0;break a}}case 7:{if((c-b|0)<4){e=-2;break a}if(!(_b[k[a+364>>2]&127](a,b)|0)){e=b+4|0;break b}else{k[d>>2]=b;e=0;break a}}case 8:case 1:case 0:{k[d>>2]=b;e=0;break a}default:e=b+1|0}while(0);c:do if((e|0)!=(c|0)){f=c;b=a+356|0;g=a+360|0;h=a+364|0;d:while(1){switch(l[j+(l[e>>0]|0)>>0]|0){case 4:case 10:case 9:case 8:case 1:case 0:{f=40;break d}case 5:{if((f-e|0)<2){f=30;break d}if(_b[k[b>>2]&127](a,e)|0){f=30;break d}e=e+2|0;break}case 6:{if((f-e|0)<3){f=34;break d}if(_b[k[g>>2]&127](a,e)|0){f=34;break d}e=e+3|0;break}case 7:{if((f-e|0)<4){f=38;break d}if(_b[k[h>>2]&127](a,e)|0){f=38;break d}e=e+4|0;break}default:e=e+1|0}if((e|0)==(c|0))break c}if((f|0)==30){k[d>>2]=e;e=6;break a}else if((f|0)==34){k[d>>2]=e;e=6;break a}else if((f|0)==38){k[d>>2]=e;e=6;break a}else if((f|0)==40){k[d>>2]=e;e=6;break a}}while(0);k[d>>2]=c;e=6}while(0);return e|0}function sK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,m=0,n=0;a:do if((b|0)!=(c|0)){g=a+76|0;h=c;j=a+356|0;m=a+360|0;n=a+364|0;f=0;b:while(1){switch(l[g+(l[b>>0]|0)>>0]|0){case 8:case 1:case 0:{e=16;break b}case 5:{if((h-b|0)<2){b=-2;break a}if(_b[k[j>>2]&127](a,b)|0){e=6;break b}b=b+2|0;e=f;break}case 6:{if((h-b|0)<3){b=-2;break a}if(_b[k[m>>2]&127](a,b)|0){e=10;break b}b=b+3|0;e=f;break}case 7:{if((h-b|0)<4){b=-2;break a}if(_b[k[n>>2]&127](a,b)|0){e=14;break b}b=b+4|0;e=f;break}case 2:{e=b+1|0;if((e|0)==(c|0)){b=-1;break a}if((i[e>>0]|0)==33){e=b+2|0;if((e|0)==(c|0)){b=-1;break a}if((i[e>>0]|0)==91){b=b+3|0;e=f+1|0}else{b=e;e=f}}else{b=e;e=f}break}case 4:{e=b+1|0;if((e|0)==(c|0)){b=-1;break a}if((i[e>>0]|0)==93){e=b+2|0;if((e|0)==(c|0)){b=-1;break a}if((i[e>>0]|0)==62){b=b+3|0;if(!f){e=28;break b}e=f+-1|0}else{b=e;e=f}}else{b=e;e=f}break}default:{b=b+1|0;e=f}}if((b|0)==(c|0)){b=-1;break a}else f=e}if((e|0)==6){k[d>>2]=b;b=0;break}else if((e|0)==10){k[d>>2]=b;b=0;break}else if((e|0)==14){k[d>>2]=b;b=0;break}else if((e|0)==16){k[d>>2]=b;b=0;break}else if((e|0)==28){k[d>>2]=b;b=42;break}}else b=-1;while(0);return b|0}function tK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;do if((b|0)!=(c|0)){f=a+76|0;e=b;a:while(1){switch(l[f+(l[e>>0]|0)>>0]|0){case 3:{g=7;break a}case 2:{g=10;break a}case 10:{g=11;break a}case 9:{g=14;break a}case 21:{g=18;break a}case 5:{e=e+2|0;break}case 6:{e=e+3|0;break}case 7:{e=e+4|0;break}default:e=e+1|0}if((e|0)==(c|0)){g=23;break}}if((g|0)==7)if((e|0)==(b|0)){e=OK(a,b+1|0,c,d)|0;break}else{k[d>>2]=e;e=6;break}else if((g|0)==10){k[d>>2]=e;e=0;break}else if((g|0)==11)if((e|0)==(b|0)){k[d>>2]=b+1;e=7;break}else{k[d>>2]=e;e=6;break}else if((g|0)==14){if((e|0)!=(b|0)){k[d>>2]=e;e=6;break}e=b+1|0;if((e|0)==(c|0)){e=-3;break}k[d>>2]=(i[f+(l[e>>0]|0)>>0]|0)==10?b+2|0:e;e=7;break}else if((g|0)==18)if((e|0)==(b|0)){k[d>>2]=b+1;e=39;break}else{k[d>>2]=e;e=6;break}else if((g|0)==23){k[d>>2]=c;e=6;break}}else e=-4;while(0);return e|0}function uK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;do if((b|0)!=(c|0)){f=a+76|0;e=b;a:while(1){switch(l[f+(l[e>>0]|0)>>0]|0){case 3:{g=7;break a}case 30:{g=10;break a}case 10:{g=13;break a}case 9:{g=16;break a}case 5:{e=e+2|0;break}case 6:{e=e+3|0;break}case 7:{e=e+4|0;break}default:e=e+1|0}if((e|0)==(c|0)){g=22;break}}if((g|0)==7)if((e|0)==(b|0)){e=OK(a,b+1|0,c,d)|0;break}else{k[d>>2]=e;e=6;break}else if((g|0)==10)if((e|0)==(b|0)){e=PK(a,b+1|0,c,d)|0;e=(e|0)==22?0:e;break}else{k[d>>2]=e;e=6;break}else if((g|0)==13)if((e|0)==(b|0)){k[d>>2]=b+1;e=7;break}else{k[d>>2]=e;e=6;break}else if((g|0)==16){if((e|0)!=(b|0)){k[d>>2]=e;e=6;break}e=b+1|0;if((e|0)==(c|0)){e=-3;break}k[d>>2]=(i[f+(l[e>>0]|0)>>0]|0)==10?b+2|0:e;e=7;break}else if((g|0)==22){k[d>>2]=c;e=6;break}}else e=-4;while(0);return e|0}function vK(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;e=a+76|0;a=c;a:while(1){c=i[b>>0]|0;switch(l[e+(c&255)>>0]|0){case 7:{f=3;break}case 6:{f=5;break}case 5:break;case 27:case 26:case 25:case 24:case 23:case 22:case 29:if((i[a>>0]|0)==c<<24>>24){a=a+1|0;b=b+1|0;continue a}else{a=0;break a}default:{f=10;break a}}if((f|0)==3){f=0;d=b+1|0;if(c<<24>>24!=(i[a>>0]|0)){a=0;break}a=a+1|0;b=d;c=i[d>>0]|0;f=5}if((f|0)==5){f=0;d=b+1|0;if(c<<24>>24!=(i[a>>0]|0)){a=0;break}a=a+1|0;b=d;c=i[d>>0]|0}if(c<<24>>24!=(i[a>>0]|0)){a=0;break}if((i[b+1>>0]|0)==(i[a+1>>0]|0)){a=a+2|0;b=b+2|0}else{a=0;break}}b:do if((f|0)==10){a=i[a>>0]|0;if(c<<24>>24==a<<24>>24)a=1;else{switch(l[e+(a&255)>>0]|0){case 27:case 26:case 25:case 24:case 23:case 22:case 29:case 7:case 6:case 5:{a=0;break b}default:{}}a=1}}while(0);return a|0}function wK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=i[d>>0]|0;a=(b|0)==(c|0);a:do if(!(e<<24>>24))f=5;else while(1){if(a){a=0;break a}if((i[b>>0]|0)!=e<<24>>24){a=0;break a}b=b+1|0;d=d+1|0;e=i[d>>0]|0;a=(b|0)==(c|0);if(!(e<<24>>24)){f=5;break}}while(0);if((f|0)==5)a=a&1;return a|0}function xK(a,b){a=a|0;b=b|0;var c=0;c=a+76|0;a=b;a:while(1)switch(l[c+(l[a>>0]|0)>>0]|0|0){case 5:{a=a+2|0;continue a}case 6:{a=a+3|0;continue a}case 7:{a=a+4|0;continue a}case 27:case 26:case 25:case 24:case 23:case 22:case 29:{a=a+1|0;continue a}default:break a}return a-b|0}function yK(a,b){a=a|0;b=b|0;a=a+76|0;a:while(1){switch(l[a+(l[b>>0]|0)>>0]|0|0){case 21:case 9:case 10:break;default:break a}b=b+1|0}return b|0}function zK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,m=0,n=0,o=0;h=a+76|0;a=0;j=0;e=1;a:while(1){f=b+1|0;g=i[f>>0]|0;do switch(l[h+(g&255)>>0]|0){case 5:{if(!e)if((a|0)<(c|0)){k[d+(a<<4)>>2]=f;i[d+(a<<4)+12>>0]=1;e=1}else e=1;f=j;g=a;b=b+2|0;j=f;a=g;continue a}case 6:{if(!e)if((a|0)<(c|0)){k[d+(a<<4)>>2]=f;i[d+(a<<4)+12>>0]=1;e=1}else e=1;f=j;g=a;b=b+3|0;j=f;a=g;continue a}case 7:{if(!e)if((a|0)<(c|0)){k[d+(a<<4)>>2]=f;i[d+(a<<4)+12>>0]=1;e=1}else e=1;f=j;g=a;b=b+4|0;j=f;a=g;continue a}case 24:case 22:case 29:{if(e){o=e;n=j;g=a;b=f;e=o;j=n;a=g;continue a}if((a|0)>=(c|0)){n=j;o=a;b=f;e=1;j=n;a=o;continue a}k[d+(a<<4)>>2]=f;i[d+(a<<4)+12>>0]=1;n=j;o=a;b=f;e=1;j=n;a=o;continue a}case 12:{if((e|0)!=2){if((a|0)>=(c|0)){o=a;j=12;b=f;e=2;a=o;continue a}k[d+(a<<4)+4>>2]=b+2;o=a;j=12;b=f;e=2;a=o;continue a}if((j|0)!=12){n=j;o=a;b=f;e=2;j=n;a=o;continue a}if((a|0)<(c|0))k[d+(a<<4)+8>>2]=f;a=a+1|0;j=12;b=f;e=0;continue a}case 13:{if((e|0)!=2){if((a|0)>=(c|0)){o=a;j=13;b=f;e=2;a=o;continue a}k[d+(a<<4)+4>>2]=b+2;o=a;j=13;b=f;e=2;a=o;continue a}if((j|0)!=13){n=j;o=a;b=f;e=2;j=n;a=o;continue a}if((a|0)<(c|0))k[d+(a<<4)+8>>2]=f;a=a+1|0;j=13;b=f;e=0;continue a}case 3:{if((a|0)>=(c|0)){g=e;n=j;o=a;b=f;e=g;j=n;a=o;continue a}i[d+(a<<4)+12>>0]=0;g=e;n=j;o=a;b=f;e=g;j=n;a=o;continue a}case 21:{if((e|0)==1){n=j;o=a;b=f;e=0;j=n;a=o;continue a}if(!((e|0)==2&(a|0)<(c|0))){g=e;n=j;o=a;b=f;e=g;j=n;a=o;continue a}e=d+(a<<4)+12|0;if(!(i[e>>0]|0)){n=j;o=a;b=f;e=2;j=n;a=o;continue a}if(((g<<24>>24==32?(f|0)!=(k[d+(a<<4)+4>>2]|0):0)?(m=i[b+2>>0]|0,m<<24>>24!=32):0)?(l[h+(m&255)>>0]|0)!=(j|0):0){n=j;o=a;b=f;e=2;j=n;a=o;continue a}i[e>>0]=0;n=j;o=a;b=f;e=2;j=n;a=o;continue a}case 10:case 9:{if((e|0)==1){n=j;o=a;b=f;e=0;j=n;a=o;continue a}if(!((e|0)==2&(a|0)<(c|0))){g=e;n=j;o=a;b=f;e=g;j=n;a=o;continue a}i[d+(a<<4)+12>>0]=0;n=j;o=a;b=f;e=2;j=n;a=o;continue a}case 17:case 11:if((e|0)==2){n=j;o=a;b=f;e=2;j=n;a=o;continue a}else break a;default:{g=e;n=j;o=a;b=f;e=g;j=n;a=o;continue a}}while(0)}return a|0}function AK(a,b){a=a|0;b=b|0;var c=0,d=0;a=b+2|0;c=i[a>>0]|0;a:do switch(c<<24>>24){case 120:{a=b+3|0;c=i[a>>0]|0;if(c<<24>>24==59){a=0;d=13}else{b=a;c=c<<24>>24;a=0;while(1){switch(c|0){case 57:case 56:case 55:case 54:case 53:case 52:case 51:case 50:case 49:case 48:{a=c+-48|a<<4;d=8;break}case 70:case 69:case 68:case 67:case 66:case 65:{a=(a<<4)+-55+c|0;d=8;break}case 102:case 101:case 100:case 99:case 98:case 97:{a=(a<<4)+-87+c|0;d=8;break}default:{}}if((d|0)==8){d=0;if((a|0)>1114111){a=-1;break a}}b=b+1|0;c=i[b>>0]|0;if(c<<24>>24==59){d=12;break a}else c=c<<24>>24}}break}case 59:{a=0;d=13;break}default:{b=a;a=0;while(1){a=(a*10|0)+-48+(c<<24>>24)|0;b=b+1|0;if((a|0)>1114111){a=-1;break a}c=i[b>>0]|0;if(c<<24>>24==59){d=12;break}}}}while(0);b:do if((d|0)==12){switch(a>>8|0){case 223:case 222:case 221:case 220:case 219:case 218:case 217:case 216:{a=-1;break b}case 0:{d=13;break b}case 255:break;default:{d=15;break b}}if((a&-2|0)==65534)a=-1;else d=15}while(0);if((d|0)==13)if(!(i[92156+a>>0]|0))a=-1;else d=15;return a|0}function BK(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;a:do switch(c-b|0){case 2:{if((i[b+1>>0]|0)==116){a=i[b>>0]|0;a=a<<24>>24==108?60:a<<24>>24==103?62:0}else d=14;break}case 3:{if(((i[b>>0]|0)==97?(i[b+1>>0]|0)==109:0)?(i[b+2>>0]|0)==112:0)a=38;else d=14;break}case 4:switch(i[b>>0]|0){case 113:{if((i[b+1>>0]|0)!=117){d=14;break a}if((i[b+2>>0]|0)!=111){d=14;break a}if((i[b+3>>0]|0)==116){a=34;break a}else{d=14;break a}}case 97:{if((i[b+1>>0]|0)!=112){d=14;break a}if((i[b+2>>0]|0)!=111){d=14;break a}if((i[b+3>>0]|0)==115){a=39;break a}else{d=14;break a}}default:{d=14;break a}}default:d=14}while(0);if((d|0)==14)a=0;return a|0}function CK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;a:do if(b>>>0<c>>>0){e=a+76|0;f=d+4|0;a=b;while(1){switch(l[e+(l[a>>0]|0)>>0]|0){case 5:{a=a+2|0;break}case 6:{a=a+3|0;break}case 7:{a=a+4|0;break}case 10:{k[f>>2]=-1;k[d>>2]=(k[d>>2]|0)+1;a=a+1|0;break}case 9:{k[d>>2]=(k[d>>2]|0)+1;b=a+1|0;if((b|0)==(c|0))a=c;else a=(i[e+(l[b>>0]|0)>>0]|0)==10?a+2|0:b;k[f>>2]=-1;break}default:a=a+1|0}k[f>>2]=(k[f>>2]|0)+1;if(a>>>0>=c>>>0)break a}}while(0);return}function DK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=c+-1|0;c=b+1|0;a:do if((c|0)!=(e|0)){a=a+76|0;b:while(1){b=i[c>>0]|0;switch(l[a+(b&255)>>0]|0|0){case 23:case 19:case 30:case 33:case 16:case 18:case 10:case 9:case 15:case 14:case 17:case 35:case 34:case 32:case 31:case 13:case 27:case 24:case 25:break;case 21:{if(b<<24>>24==9){f=6;break b}break}case 22:case 26:{if(b<<24>>24<0)f=8;break}default:f=8}if((f|0)==8){f=0;switch(b<<24>>24|0){case 64:case 36:break;default:{f=9;break b}}}c=c+1|0;if((c|0)==(e|0)){c=1;break a}}if((f|0)==6){k[d>>2]=c;c=0;break}else if((f|0)==9){k[d>>2]=c;c=0;break}}else c=1;while(0);return c|0}function EK(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=k[b>>2]|0;a=k[d>>2]|0;e=e-a|0;a:do if((c-f|0)>(e|0)){c=f+e|0;while(1){if(c>>>0<=f>>>0)break a;e=c+-1|0;if((i[e>>0]&-64)<<24>>24==-128)c=e;else break}}while(0);if((f|0)==(c|0))c=f;else{e=f;do{i[a>>0]=i[e>>0]|0;e=e+1|0;a=a+1|0}while((e|0)!=(c|0))}k[b>>2]=c;k[d>>2]=a;return}function FK(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,m=0;f=k[d>>2]|0;g=k[b>>2]|0;a:do if((g|0)==(c|0)|(f|0)==(e|0))a=g;else{m=a+76|0;a=g;while(1){g=i[a>>0]|0;h=g&255;switch(l[m+h>>0]|0|0){case 5:{j[f>>1]=(l[a+1>>0]|0)&63|h<<6&1984;a=a+2|0;f=f+2|0;break}case 6:{j[f>>1]=(l[a+1>>0]|0)<<6&4032|h<<12|(l[a+2>>0]|0)&63;a=a+3|0;f=f+2|0;break}case 7:{g=f+2|0;if((g|0)==(e|0))break a;h=((l[a+1>>0]|0)<<12&258048|h<<18&1835008|(l[a+2>>0]|0)<<6&4032|(l[a+3>>0]|0)&63)+-65536|0;j[f>>1]=h>>>10|55296;j[g>>1]=h&1023|56320;a=a+4|0;f=f+4|0;break}default:{j[f>>1]=g<<24>>24;a=a+1|0;f=f+2|0}}if((a|0)==(c|0)|(f|0)==(e|0))break a}}while(0);k[b>>2]=a;k[d>>2]=f;return}function GK(a,b){a=a|0;b=b|0;a=l[b>>0]|0;b=l[b+1>>0]|0;return 1<<(b&31)&k[92448+(((l[179992+(a>>>2&7)>>0]|0)<<3|a<<1&6|b>>>5&1)<<2)>>2]|0}function HK(a,b){a=a|0;b=b|0;var c=0;c=l[b+1>>0]|0;a=l[b+2>>0]|0;return 1<<(a&31)&k[92448+(((l[179992+(c>>>2&15|(l[b>>0]|0)<<4&240)>>0]|0)<<3|c<<1&6|a>>>5&1)<<2)>>2]|0}function IK(a,b){a=a|0;b=b|0;return 0}function JK(a,b){a=a|0;b=b|0;a=l[b>>0]|0;b=l[b+1>>0]|0;return 1<<(b&31)&k[92448+(((l[179736+(a>>>2&7)>>0]|0)<<3|a<<1&6|b>>>5&1)<<2)>>2]|0}function KK(a,b){a=a|0;b=b|0;var c=0;c=l[b+1>>0]|0;a=l[b+2>>0]|0;return 1<<(a&31)&k[92448+(((l[179736+(c>>>2&15|(l[b>>0]|0)<<4&240)>>0]|0)<<3|c<<1&6|a>>>5&1)<<2)>>2]|0}function LK(a,b){a=a|0;b=b|0;var c=0;if((l[b>>0]|0)>=194?(c=l[b+1>>0]|0,(c&128|0)!=0):0)c=(c&192|0)==192;else c=1;return c&1|0}function MK(a,b){a=a|0;b=b|0;var c=0,d=0;a=i[b+2>>0]|0;a:do if(a<<24>>24>-1)a=1;else{d=i[b>>0]|0;if(d<<24>>24==-17?(i[b+1>>0]|0)==-65:0)if((a&255)>189){a=1;break}else{a=-65;b=191}else c=5;do if((c|0)==5){if((a&255)>191){a=1;break a}a=i[b+1>>0]|0;b=a&255;if(d<<24>>24!=-32)if(!(b&128)){a=1;break a}else break;if((a&255)<160){a=1;break a}a=(b&192|0)==192;break a}while(0);a=d<<24>>24==-19?(a&255)>159:(b&192|0)==192}while(0);return a&1|0}function NK(a,b){a=a|0;b=b|0;var c=0;c=l[b+3>>0]|0;do if(!((c&128|0)==0|(c&192|0)==192)?(c=l[b+2>>0]|0,!((c&128|0)==0|(c&192|0)==192)):0){c=i[b>>0]|0;a=i[b+1>>0]|0;b=a&255;if(c<<24>>24==-16){if((a&255)<144){a=1;break}a=(b&192|0)==192;break}else{if(!(b&128)){a=1;break}a=c<<24>>24==-12?(a&255)>143:(b&192|0)==192;break}}else a=1;while(0);return a&1|0}function OK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;a:do if((b|0)!=(c|0)){j=a+76|0;b:do switch(l[j+(l[b>>0]|0)>>0]|0){case 29:{k[d>>2]=b;e=0;break a}case 24:case 22:{e=b+1|0;break}case 5:{if((c-b|0)<2){e=-2;break a}if(!(_b[k[a+344>>2]&127](a,b)|0)){k[d>>2]=b;e=0;break a}else{e=b+2|0;break b}}case 6:{if((c-b|0)<3){e=-2;break a}if(!(_b[k[a+348>>2]&127](a,b)|0)){k[d>>2]=b;e=0;break a}else{e=b+3|0;break b}}case 7:{if((c-b|0)<4){e=-2;break a}if(!(_b[k[a+352>>2]&127](a,b)|0)){k[d>>2]=b;e=0;break a}else{e=b+4|0;break b}}case 19:{f=b+1|0;if((f|0)==(c|0)){e=-1;break a}e=i[f>>0]|0;if(e<<24>>24!=120){if((i[j+(e&255)>>0]|0)!=25){k[d>>2]=f;e=0;break a}c:while(1){e=f+1|0;if((e|0)==(c|0)){e=-1;break a}switch(l[j+(l[e>>0]|0)>>0]|0){case 25:{b=f;f=e;break}case 18:{e=b;f=33;break c}default:{f=34;break c}}}if((f|0)==33){k[d>>2]=e+3;e=10;break a}else if((f|0)==34){k[d>>2]=e;e=0;break a}}f=b+2|0;if((f|0)==(c|0)){e=-1;break a}if((i[j+(l[f>>0]|0)>>0]&-2)<<24>>24!=24){k[d>>2]=f;e=0;break a}e=b+3|0;if((e|0)==(c|0)){e=-1;break a}d:while(1){switch(l[j+(l[e>>0]|0)>>0]|0){case 18:{e=f;f=27;break d}case 24:case 25:break;default:{f=28;break d}}f=e+1|0;if((f|0)==(c|0)){e=-1;break a}else{a=e;e=f;f=a}}if((f|0)==27){k[d>>2]=e+2;e=10;break a}else if((f|0)==28){k[d>>2]=e;e=0;break a}break}default:{k[d>>2]=b;e=0;break a}}while(0);if((e|0)!=(c|0)){h=c;f=a+332|0;b=a+336|0;g=a+340|0;e:while(1){switch(l[j+(l[e>>0]|0)>>0]|0){case 29:{f=37;break e}case 18:{f=52;break e}case 27:case 26:case 25:case 24:case 22:{e=e+1|0;break}case 5:{if((h-e|0)<2){e=-2;break a}if(!(_b[k[f>>2]&127](a,e)|0)){f=41;break e}e=e+2|0;break}case 6:{if((h-e|0)<3){e=-2;break a}if(!(_b[k[b>>2]&127](a,e)|0)){f=45;break e}e=e+3|0;break}case 7:{if((h-e|0)<4){e=-2;break a}if(!(_b[k[g>>2]&127](a,e)|0)){f=49;break e}e=e+4|0;break}default:{f=53;break e}}if((e|0)==(c|0)){e=-1;break a}}if((f|0)==37){k[d>>2]=e;e=0;break}else if((f|0)==41){k[d>>2]=e;e=0;break}else if((f|0)==45){k[d>>2]=e;e=0;break}else if((f|0)==49){k[d>>2]=e;e=0;break}else if((f|0)==52){k[d>>2]=e+1;e=9;break}else if((f|0)==53){k[d>>2]=e;e=0;break}}else e=-1}else e=-1;while(0);return e|0}function PK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;a:do if((b|0)!=(c|0)){i=a+76|0;b:do switch(l[i+(l[b>>0]|0)>>0]|0|0){case 29:{k[d>>2]=b;b=0;break a}case 24:case 22:{b=b+1|0;break}case 5:{if((c-b|0)<2){b=-2;break a}if(!(_b[k[a+344>>2]&127](a,b)|0)){k[d>>2]=b;b=0;break a}else{b=b+2|0;break b}}case 6:{if((c-b|0)<3){b=-2;break a}if(!(_b[k[a+348>>2]&127](a,b)|0)){k[d>>2]=b;b=0;break a}else{b=b+3|0;break b}}case 7:{if((c-b|0)<4){b=-2;break a}if(!(_b[k[a+352>>2]&127](a,b)|0)){k[d>>2]=b;b=0;break a}else{b=b+4|0;break b}}case 30:case 9:case 10:case 21:{k[d>>2]=b;b=22;break a}default:{k[d>>2]=b;b=0;break a}}while(0);if((b|0)!=(c|0)){h=c;e=a+332|0;f=a+336|0;g=a+340|0;c:while(1){switch(l[i+(l[b>>0]|0)>>0]|0|0){case 29:{e=22;break c}case 18:{e=37;break c}case 27:case 26:case 25:case 24:case 22:{b=b+1|0;break}case 5:{if((h-b|0)<2){b=-2;break a}if(!(_b[k[e>>2]&127](a,b)|0)){e=26;break c}b=b+2|0;break}case 6:{if((h-b|0)<3){b=-2;break a}if(!(_b[k[f>>2]&127](a,b)|0)){e=30;break c}b=b+3|0;break}case 7:{if((h-b|0)<4){b=-2;break a}if(!(_b[k[g>>2]&127](a,b)|0)){e=34;break c}b=b+4|0;break}default:{e=38;break c}}if((b|0)==(c|0)){b=-1;break a}}if((e|0)==22){k[d>>2]=b;b=0;break}else if((e|0)==26){k[d>>2]=b;b=0;break}else if((e|0)==30){k[d>>2]=b;b=0;break}else if((e|0)==34){k[d>>2]=b;b=0;break}else if((e|0)==37){k[d>>2]=b+1;b=28;break}else if((e|0)==38){k[d>>2]=b;b=0;break}}else b=-1}else b=-1;while(0);return b|0}function QK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,m=0;a:do if((b|0)!=(c|0)){if((i[b>>0]|0)!=45){k[d>>2]=b;b=0;break}b=b+1|0;if((b|0)!=(c|0)){f=a+76|0;g=c;h=a+356|0;j=a+360|0;m=a+364|0;b:while(1){switch(l[f+(l[b>>0]|0)>>0]|0){case 8:case 1:case 0:{e=19;break b}case 5:{if((g-b|0)<2){b=-2;break a}if(_b[k[h>>2]&127](a,b)|0){e=9;break b}b=b+2|0;break}case 6:{if((g-b|0)<3){b=-2;break a}if(_b[k[j>>2]&127](a,b)|0){e=13;break b}b=b+3|0;break}case 7:{if((g-b|0)<4){b=-2;break a}if(_b[k[m>>2]&127](a,b)|0){e=17;break b}b=b+4|0;break}case 27:{e=b+1|0;if((e|0)==(c|0)){b=-1;break a}if((i[e>>0]|0)==45){e=23;break b}else b=e;break}default:b=b+1|0}if((b|0)==(c|0)){b=-1;break a}}if((e|0)==9){k[d>>2]=b;b=0;break}else if((e|0)==13){k[d>>2]=b;b=0;break}else if((e|0)==17){k[d>>2]=b;b=0;break}else if((e|0)==19){k[d>>2]=b;b=0;break}else if((e|0)==23){e=b+2|0;if((e|0)==(c|0)){b=-1;break}if((i[e>>0]|0)==62){k[d>>2]=b+3;b=13;break}else{k[d>>2]=e;b=0;break}}}else b=-1}else b=-1;while(0);return b|0}function RK(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,m=0,n=0,o=0,p=0;p=r;r=r+16|0;n=p;a:do if((b|0)!=(c|0)){j=a+76|0;b:do switch(l[j+(l[b>>0]|0)>>0]|0){case 29:{k[d>>2]=b;e=0;break a}case 24:case 22:{e=b+1|0;break}case 5:{if((c-b|0)<2){e=-2;break a}if(!(_b[k[a+344>>2]&127](a,b)|0)){k[d>>2]=b;e=0;break a}else{e=b+2|0;break b}}case 6:{if((c-b|0)<3){e=-2;break a}if(!(_b[k[a+348>>2]&127](a,b)|0)){k[d>>2]=b;e=0;break a}else{e=b+3|0;break b}}case 7:{if((c-b|0)<4){e=-2;break a}if(!(_b[k[a+352>>2]&127](a,b)|0)){k[d>>2]=b;e=0;break a}else{e=b+4|0;break b}}default:{k[d>>2]=b;e=0;break a}}while(0);if((e|0)!=(c|0)){m=c;f=a+332|0;g=a+336|0;h=a+340|0;c:while(1){switch(l[j+(l[e>>0]|0)>>0]|0){case 29:{o=21;break c}case 10:case 9:case 21:{o=36;break c}case 15:{o=59;break c}case 27:case 26:case 25:case 24:case 22:{e=e+1|0;break}case 5:{if((m-e|0)<2){e=-2;break a}if(!(_b[k[f>>2]&127](a,e)|0)){o=25;break c}e=e+2|0;break}case 6:{if((m-e|0)<3){e=-2;break a}if(!(_b[k[g>>2]&127](a,e)|0)){o=29;break c}e=e+3|0;break}case 7:{if((m-e|0)<4){e=-2;break a}if(!(_b[k[h>>2]&127](a,e)|0)){o=33;break c}e=e+4|0;break}default:break c}if((e|0)==(c|0)){e=-1;break a}}if((o|0)==21){k[d>>2]=e;e=0;break}else if((o|0)==25){k[d>>2]=e;e=0;break}else if((o|0)==29){k[d>>2]=e;e=0;break}else if((o|0)==33){k[d>>2]=e;e=0;break}else if((o|0)==36){if(!(SK(b,e,n)|0)){k[d>>2]=e;e=0;break}e=e+1|0;if((e|0)==(c|0)){e=-1;break}g=a+356|0;h=a+360|0;b=a+364|0;d:while(1){switch(l[j+(l[e>>0]|0)>>0]|0){case 8:case 1:case 0:{o=53;break d}case 5:{if((m-e|0)<2){e=-2;break a}if(_b[k[g>>2]&127](a,e)|0){o=43;break d}e=e+2|0;break}case 6:{if((m-e|0)<3){e=-2;break a}if(_b[k[h>>2]&127](a,e)|0){o=47;break d}e=e+3|0;break}case 7:{if((m-e|0)<4){e=-2;break a}if(_b[k[b>>2]&127](a,e)|0){o=51;break d}e=e+4|0;break}case 15:{f=e+1|0;if((f|0)==(c|0)){e=-1;break a}if((i[f>>0]|0)==62){o=57;break d}else e=f;break}default:e=e+1|0}if((e|0)==(c|0)){e=-1;break a}}if((o|0)==43){k[d>>2]=e;e=0;break}else if((o|0)==47){k[d>>2]=e;e=0;break}else if((o|0)==51){k[d>>2]=e;e=0;break}else if((o|0)==53){k[d>>2]=e;e=0;break}else if((o|0)==57){k[d>>2]=e+2;e=k[n>>2]|0;break}}else if((o|0)==59){if(!(SK(b,e,n)|0)){k[d>>2]=e;e=0;break}f=e+1|0;if((f|0)==(c|0)){e=-1;break}if((i[f>>0]|0)==62){k[d>>2]=e+2;e=k[n>>2]|0;break}else e=f}k[d>>2]=e;e=0}else e=-1}else e=-1;while(0);r=p;return e|0}function SK(a,b,c){a=a|0;b=b|0;c=c|0;k[c>>2]=11;a:do if((b-a|0)==3){switch(i[a>>0]|0){case 120:{b=0;break}case 88:{b=1;break}default:{b=1;break a}}switch(i[a+1>>0]|0){case 109:break;case 77:{b=1;break}default:{b=1;break a}}switch(i[a+2>>0]|0){case 108:break;case 76:{b=0;break a}default:{b=1;break a}}if(!b){k[c>>2]=12;b=1}else b=0}else b=1;while(0);return b|0}function TK(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,m=0;a:do if((c|0)!=(d|0)){m=b+76|0;g=d;h=b+356|0;i=b+360|0;j=b+364|0;b:while(1){f=l[m+(l[c>>0]|0)>>0]|0;switch(f|0){case 8:case 1:case 0:{f=16;break b}case 5:{if((g-c|0)<2){c=-2;break a}if(_b[k[h>>2]&127](b,c)|0){f=6;break b}c=c+2|0;break}case 6:{if((g-c|0)<3){c=-2;break a}if(_b[k[i>>2]&127](b,c)|0){f=10;break b}c=c+3|0;break}case 7:{if((g-c|0)<4){c=-2;break a}if(_b[k[j>>2]&127](b,c)|0){f=14;break b}c=c+4|0;break}case 13:case 12:{c=c+1|0;if((f|0)==(a|0)){f=18;break b}break}default:c=c+1|0}if((c|0)==(d|0)){c=-1;break a}}if((f|0)==6){k[e>>2]=c;c=0;break}else if((f|0)==10){k[e>>2]=c;c=0;break}else if((f|0)==14){k[e>>2]=c;c=0;break}else if((f|0)==16){k[e>>2]=c;c=0;break}else if((f|0)==18){if((c|0)==(d|0)){c=-27;break}k[e>>2]=c;switch(l[m+(l[c>>0]|0)>>0]|0|0){case 20:case 30:case 11:case 10:case 9:case 21:{c=27;break a}default:{}}c=0;break}}else c=-1;while(0);return c|0}function UK(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;a=k[b>>2]|0;a:do if((a|0)!=(c|0))do{if((k[d>>2]|0)==(e|0))break a;k[b>>2]=a+1;g=i[a>>0]|0;f=k[d>>2]|0;k[d>>2]=f+1;i[f>>0]=g;a=k[b>>2]|0}while((a|0)!=(c|0));while(0);return}function VK(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;a=k[b>>2]|0;a:do if((a|0)!=(c|0)){f=k[d>>2]|0;do{if((f|0)==(e|0))break a;k[b>>2]=a+1;h=l[a>>0]|0;g=k[d>>2]|0;f=g+2|0;k[d>>2]=f;j[g>>1]=h;a=k[b>>2]|0}while((a|0)!=(c|0))}while(0);return}function WK(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;h=e;a=k[b>>2]|0;a:do if((a|0)!=(c|0))do{f=l[a>>0]|0;g=k[d>>2]|0;if(!(f&128)){if((g|0)==(e|0))break a;k[b>>2]=a+1;g=i[a>>0]|0;a=k[d>>2]|0;k[d>>2]=a+1;i[a>>0]=g;a=k[b>>2]|0}else{if((h-g|0)<2)break a;k[d>>2]=g+1;i[g>>0]=f>>>6|192;a=k[d>>2]|0;k[d>>2]=a+1;i[a>>0]=f&63|128;a=(k[b>>2]|0)+1|0;k[b>>2]=a}}while((a|0)!=(c|0));while(0);return}function XK(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,m=0;a:do if((d|0)==(e|0))g=-4;else{m=k[b+76>>2]|0;g=d+1|0;b:do if((g|0)==(e|0)){g=i[b+73>>0]|0;if(((g<<24>>24)+-3|0)>>>0<3){g=-1;break a}switch(l[d>>0]|0){case 60:case 0:{g=-1;break a}case 239:case 255:case 254:break;default:break b}if(!((c|0)==1&g<<24>>24==0)){g=-1;break a}}else{j=i[d>>0]|0;g=i[g>>0]|0;h=(j&255)<<8|g&255;c:do if((h|0)<65279){if((h|0)<61371){switch(h|0){case 15360:break;default:break c}g=i[b+73>>0]|0;if(g<<24>>24==4){if((c|0)==1)break b}else if((c|0)==1&g<<24>>24==3)break b;g=k[a+20>>2]|0;k[m>>2]=g;g=cc[k[g+(c<<2)>>2]&127](g,d,e,f)|0;break a}switch(h|0){case 61371:break;default:break c}if((c|0)==1)switch(i[b+73>>0]|0){case 0:case 3:case 4:case 5:break b;default:{}}g=d+2|0;if((g|0)==(e|0)){g=-1;break a}if((i[g>>0]|0)!=-65)break b;k[f>>2]=d+3;k[m>>2]=k[a+8>>2];g=14;break a}else switch(h|0){case 65279:{if((c|0)==1&(i[b+73>>0]|0)==0)break b;k[f>>2]=d+2;k[m>>2]=k[a+16>>2];g=14;break a}case 65534:{if((c|0)==1&(i[b+73>>0]|0)==0)break b;k[f>>2]=d+2;k[m>>2]=k[a+20>>2];g=14;break a}default:break c}while(0);if(j<<24>>24){if((c|0)==1|g<<24>>24!=0)break;g=k[a+20>>2]|0;k[m>>2]=g;g=cc[k[g+(c<<2)>>2]&127](g,d,e,f)|0;break a}if((c|0)==1?(i[b+73>>0]|0)==5:0)break;g=k[a+16>>2]|0;k[m>>2]=g;g=cc[k[g+(c<<2)>>2]&127](g,d,e,f)|0;break a}while(0);g=k[a+(i[b+73>>0]<<2)>>2]|0;k[m>>2]=g;g=cc[k[g+(c<<2)>>2]&127](g,d,e,f)|0}while(0);return g|0}function YK(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0;q=r;r=r+16|0;j=q+4|0;o=q;n=q+8|0;a:do if((b|0)==(c|0)){k[d>>2]=0;b=1}else{k[j>>2]=b;k[o>>2]=n;l=a+60|0;m=n+1|0;Mb[k[l>>2]&31](a,j,c,o,m);switch(((k[o>>2]|0)==(n|0)?-1:i[n>>0]|0)|0){case 9:case 10:case 13:case 32:break;default:{k[g>>2]=b;b=0;break a}}p=a+68|0;b:while(1){b=b+(k[p>>2]|0)|0;k[j>>2]=b;k[o>>2]=n;Mb[k[l>>2]&31](a,j,c,o,m);switch(((k[o>>2]|0)==(n|0)?-1:i[n>>0]|0)|0){case 9:case 10:case 13:case 32:break;default:break b}}if((b|0)==(c|0)){k[d>>2]=0;b=1;break}k[d>>2]=b;c:while(1){k[j>>2]=b;k[o>>2]=n;Mb[k[l>>2]&31](a,j,c,o,m);switch(((k[o>>2]|0)==(n|0)?-1:i[n>>0]|0)|0){case -1:{h=11;break c}case 61:{h=12;break c}case 9:case 10:case 13:case 32:{h=13;break c}default:{}}b=b+(k[p>>2]|0)|0}d:do if((h|0)==11){k[g>>2]=b;b=0;break a}else if((h|0)==12)k[e>>2]=b;else if((h|0)==13){k[e>>2]=b;e:while(1){b=b+(k[p>>2]|0)|0;k[j>>2]=b;k[o>>2]=n;Mb[k[l>>2]&31](a,j,c,o,m);switch(((k[o>>2]|0)==(n|0)?-1:i[n>>0]|0)|0){case 61:break d;case 9:case 10:case 13:case 32:break;default:break e}}k[g>>2]=b;b=0;break a}while(0);if((b|0)==(k[d>>2]|0)){k[g>>2]=b;b=0;break}b=b+(k[p>>2]|0)|0;k[j>>2]=b;k[o>>2]=n;Mb[k[l>>2]&31](a,j,c,o,m);e=(k[o>>2]|0)==(n|0)?-1:i[n>>0]|0;f:while(1){switch(e|0){case 34:case 39:{d=e;break f}case 9:case 10:case 13:case 32:break;default:{h=22;break f}}e=b+(k[p>>2]|0)|0;k[j>>2]=e;k[o>>2]=n;Mb[k[l>>2]&31](a,j,c,o,m);b=e;e=(k[o>>2]|0)==(n|0)?-1:i[n>>0]|0}if((h|0)==22){k[g>>2]=b;b=0;break}b=b+(k[p>>2]|0)|0;k[f>>2]=b;k[j>>2]=b;k[o>>2]=n;Mb[k[l>>2]&31](a,j,c,o,m);e=(k[o>>2]|0)==(n|0)?-1:i[n>>0]|0;g:do if((e|0)!=(d|0)){h:while(1){if((e+-48|0)>>>0>9&((e&-33)+-65|0)>>>0>25)switch(e|0){case 45:case 46:case 95:break;default:break h}b=b+(k[p>>2]|0)|0;k[j>>2]=b;k[o>>2]=n;Mb[k[l>>2]&31](a,j,c,o,m);e=(k[o>>2]|0)==(n|0)?-1:i[n>>0]|0;if((e|0)==(d|0))break g}k[g>>2]=b;b=0;break a}while(0);k[g>>2]=b+(k[p>>2]|0);b=1}while(0);r=q;return b|0}function ZK(a){a=a|0;k[a>>2]=5;k[a+16>>2]=1;k[a+12>>2]=0;k[a+20>>2]=0;return}function _K(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;switch(b|0){case 15:{k[a>>2]=6;e=0;break}case 12:{k[a>>2]=6;e=1;break}case 11:{k[a>>2]=6;e=55;break}case 13:{k[a>>2]=6;e=56;break}case 14:{e=0;break}case 16:{if(!(cc[k[e+28>>2]&127](e,c+(k[e+68>>2]<<1)|0,d,180471)|0))f=10;else{k[a>>2]=7;e=3}break}case 29:{k[a>>2]=8;e=2;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else f=10}if((f|0)==10){k[a>>2]=8;e=-1}return e|0}function $K(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;switch(b|0){case 33:{k[a>>2]=9;e=0;break}case 34:{e=a+12|0;d=k[e>>2]|0;if(!d)f=7;else{k[e>>2]=d+-1;e=0}break}case 15:{e=0;break}case 26:{f=7;break}case -4:{if(!(k[a+12>>2]|0))e=0;else f=7;break}default:e=bL(a,b,c,d,e)|0}if((f|0)==7){k[a>>2]=8;e=-1}return e|0}function aL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;a:do switch(b|0){case 15:{b=0;break}case 18:{b=e+28|0;if(cc[k[b>>2]&127](e,c,d,180456)|0){k[a>>2]=10;b=0;break a}if(!(cc[k[b>>2]&127](e,c,d,180464)|0))f=7;else{k[a>>2]=11;b=0}break}default:if((b|0)==28&(k[a+16>>2]|0)==0)b=59;else f=7}while(0);if((f|0)==7){k[a>>2]=8;b=-1}return b|0}function bL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;a:do switch(b|0){case -4:case 15:{b=0;break}case 16:{b=e+28|0;f=e+68|0;if(cc[k[b>>2]&127](e,c+(k[f>>2]<<1)|0,d,180316)|0){k[a>>2]=12;b=11;break a}if(cc[k[b>>2]&127](e,c+(k[f>>2]<<1)|0,d,180323)|0){k[a>>2]=13;b=33;break a}if(cc[k[b>>2]&127](e,c+(k[f>>2]<<1)|0,d,180331)|0){k[a>>2]=14;b=39;break a}if(!(cc[k[b>>2]&127](e,c+(k[f>>2]<<1)|0,d,180339)|0))g=15;else{k[a>>2]=15;b=17}break}case 11:{b=55;break}case 13:{b=56;break}case 28:{b=60;break}case 26:{k[a>>2]=16;b=3;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)b=59;else g=15}while(0);if((g|0)==15){k[a>>2]=8;b=-1}return b|0}function cL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return 0}function dL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=11;break}case 22:{k[a>>2]=17;e=11;break}case 18:{k[a>>2]=18;e=9;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function eL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=33;break}case 41:case 18:{k[a>>2]=19;e=34;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function fL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=39;break}case 41:case 18:{k[a>>2]=20;e=40;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function gL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=17;break}case 18:{k[a>>2]=21;e=18;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function hL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=3;break}case 17:{k[a>>2]=22;e=8;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function iL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=0;break}case 11:{e=55;break}case 13:{e=56;break}case 29:{k[a>>2]=8;e=2;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function jL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;a:do switch(b|0){case 15:{b=17;break}case 18:{b=e+28|0;if(cc[k[b>>2]&127](e,c,d,180348)|0){k[a>>2]=23;b=17;break a}if(!(cc[k[b>>2]&127](e,c,d,180355)|0))f=7;else{k[a>>2]=24;b=17}break}default:if((b|0)==28&(k[a+16>>2]|0)==0)b=59;else f=7}while(0);if((f|0)==7){k[a>>2]=8;b=-1}return b|0}function kL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=17;break}case 27:{k[a>>2]=25;k[a+8>>2]=17;e=19;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function lL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=17;break}case 27:{k[a>>2]=26;e=21;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function mL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=17;break}case 27:{k[a>>2]=25;k[a+8>>2]=17;e=19;break}case 17:{k[a>>2]=(k[a+16>>2]|0)!=0?27:28;e=20;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function nL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=k[a+8>>2]|0;break}case 17:{k[a>>2]=(k[a+16>>2]|0)!=0?27:28;e=k[a+8>>2]|0;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function oL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;a:do switch(b|0){case 15:{b=39;break}case 18:{b=e+28|0;if(cc[k[b>>2]&127](e,c,d,180362)|0){k[a>>2]=25;k[a+8>>2]=39;b=42;break a}if(!(cc[k[b>>2]&127](e,c,d,180368)|0))f=8;else{k[a>>2]=25;k[a+8>>2]=39;b=41}break}case 23:{k[a>>2]=29;k[a+4>>2]=1;b=44;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)b=59;else f=8}while(0);if((f|0)==8){k[a>>2]=8;b=-1}return b|0}function pL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;switch(b|0){case 15:{e=39;break}case 20:{if(!(cc[k[e+28>>2]&127](e,c+(k[e+68>>2]|0)|0,d,180372)|0))f=10;else{k[a>>2]=30;e=43}break}case 23:{k[a+4>>2]=2;k[a>>2]=31;e=44;break}case 41:case 18:{k[a>>2]=32;e=51;break}case 30:{k[a>>2]=32;e=53;break}case 31:{k[a>>2]=32;e=52;break}case 32:{k[a>>2]=32;e=54;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else f=10}if((f|0)==10){k[a>>2]=8;e=-1}return e|0}function qL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=39;break}case 24:{k[a>>2]=25;k[a+8>>2]=39;e=45;break}case 36:{k[a>>2]=25;k[a+8>>2]=39;e=46;break}case 21:{k[a>>2]=33;e=39;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function rL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=39;break}case 23:{e=a+4|0;k[e>>2]=(k[e>>2]|0)+1;e=44;break}case 41:case 18:{k[a>>2]=32;e=51;break}case 30:{k[a>>2]=32;e=53;break}case 31:{k[a>>2]=32;e=52;break}case 32:{k[a>>2]=32;e=54;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function sL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=39;break}case 24:{c=a+4|0;b=(k[c>>2]|0)+-1|0;k[c>>2]=b;if(!b){k[a>>2]=25;k[a+8>>2]=39;e=45}else e=45;break}case 36:{c=a+4|0;b=(k[c>>2]|0)+-1|0;k[c>>2]=b;if(!b){k[a>>2]=25;k[a+8>>2]=39;e=46}else e=46;break}case 35:{c=a+4|0;b=(k[c>>2]|0)+-1|0;k[c>>2]=b;if(!b){k[a>>2]=25;k[a+8>>2]=39;e=47}else e=47;break}case 37:{c=a+4|0;b=(k[c>>2]|0)+-1|0;k[c>>2]=b;if(!b){k[a>>2]=25;k[a+8>>2]=39;e=48}else e=48;break}case 38:{k[a>>2]=31;e=50;break}case 21:{k[a>>2]=31;e=49;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function tL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=39;break}case 41:case 18:{k[a>>2]=34;e=51;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function uL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=39;break}case 36:{k[a>>2]=25;k[a+8>>2]=39;e=46;break}case 21:{k[a>>2]=33;e=39;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function vL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=33;break}case 17:{k[a>>2]=(k[a+16>>2]|0)!=0?27:28;e=33;break}case 41:case 18:{k[a>>2]=35;e=22;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function wL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;a:do switch(b|0){case 15:{f=33;break}case 18:{h=e+28|0;g=k[h>>2]|0;f=0;while(1){if(cc[g&127](e,c,d,k[97832+(f<<2)>>2]|0)|0){i=4;break}f=f+1|0;g=k[h>>2]|0;if((f|0)>=8){f=g;break}}if((i|0)==4){k[a>>2]=36;f=f+23|0;break a}if(!(cc[f&127](e,c,d,180339)|0))i=9;else{k[a>>2]=37;f=33}break}case 23:{k[a>>2]=38;f=33;break}default:i=9}while(0);if((i|0)==9)if((b|0)==28&(k[a+16>>2]|0)==0)f=59;else{k[a>>2]=8;f=-1}return f|0}function xL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;a:do switch(b|0){case 15:{b=33;break}case 20:{b=e+28|0;f=e+68|0;if(cc[k[b>>2]&127](e,c+(k[f>>2]|0)|0,d,180379)|0){k[a>>2]=19;b=35;break a}if(cc[k[b>>2]&127](e,c+(k[f>>2]|0)|0,d,180387)|0){k[a>>2]=19;b=36;break a}if(!(cc[k[b>>2]&127](e,c+(k[f>>2]|0)|0,d,180396)|0))g=10;else{k[a>>2]=39;b=33}break}case 27:{k[a>>2]=19;b=37;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)b=59;else g=10}while(0);if((g|0)==10){k[a>>2]=8;b=-1}return b|0}function yL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=33;break}case 23:{k[a>>2]=40;e=33;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function zL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=33;break}case 41:case 18:case 19:{k[a>>2]=41;e=31;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function AL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=33;break}case 24:{k[a>>2]=36;e=33;break}case 21:{k[a>>2]=38;e=33;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function BL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=33;break}case 18:{k[a>>2]=42;e=32;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function CL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=33;break}case 24:{k[a>>2]=36;e=33;break}case 21:{k[a>>2]=40;e=33;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function DL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=33;break}case 27:{k[a>>2]=19;e=38;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function EL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=11;break}case 18:{k[a>>2]=43;e=10;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function FL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;a:do switch(b|0){case 15:{b=11;break}case 18:{b=e+28|0;if(cc[k[b>>2]&127](e,c,d,180348)|0){k[a>>2]=44;b=11;break a}if(!(cc[k[b>>2]&127](e,c,d,180355)|0))f=8;else{k[a>>2]=45;b=11}break}case 27:{k[a>>2]=25;k[a+8>>2]=11;b=12;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)b=59;else f=8}while(0);if((f|0)==8){k[a>>2]=8;b=-1}return b|0}function GL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=11;break}case 27:{k[a>>2]=46;e=13;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function HL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=11;break}case 27:{k[a>>2]=44;e=14;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function IL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;switch(b|0){case 15:{e=11;break}case 17:{k[a>>2]=(k[a+16>>2]|0)!=0?27:28;e=15;break}case 18:{if(!(cc[k[e+28>>2]&127](e,c,d,180450)|0))f=6;else{k[a>>2]=47;e=11}break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else f=6}if((f|0)==6){k[a>>2]=8;e=-1}return e|0}function JL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=11;break}case 18:{k[a>>2]=25;k[a+8>>2]=11;e=16;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function KL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;a:do switch(b|0){case 15:{b=11;break}case 18:{b=e+28|0;if(cc[k[b>>2]&127](e,c,d,180348)|0){k[a>>2]=48;b=11;break a}if(!(cc[k[b>>2]&127](e,c,d,180355)|0))f=8;else{k[a>>2]=49;b=11}break}case 27:{k[a>>2]=25;k[a+8>>2]=11;b=12;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)b=59;else f=8}while(0);if((f|0)==8){k[a>>2]=8;b=-1}return b|0}function LL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=11;break}case 27:{k[a>>2]=50;e=13;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function ML(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=11;break}case 27:{k[a>>2]=48;e=14;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function NL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=11;break}case 17:{k[a>>2]=(k[a+16>>2]|0)!=0?27:28;e=15;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function OL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=0;break}case 25:{k[a>>2]=28;e=a+12|0;k[e>>2]=(k[e>>2]|0)+1;e=0;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function PL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=0;break}case 25:{k[a>>2]=28;e=58;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function QL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;switch(b|0){case 14:case 15:{e=0;break}case 11:{e=55;break}case 13:{e=56;break}case 16:{if(!(cc[k[e+28>>2]&127](e,c+(k[e+68>>2]<<1)|0,d,180471)|0))f=8;else{k[a>>2]=7;e=3}break}case 29:{k[a>>2]=8;e=2;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else f=8}if((f|0)==8){k[a>>2]=8;e=-1}return e|0}function RL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=3;break}case 41:case 18:{k[a>>2]=51;e=4;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function SL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;a:do switch(b|0){case 15:{b=3;break}case 25:{k[a>>2]=27;b=7;break}case 17:{k[a>>2]=22;b=8;break}case 18:{b=e+28|0;if(cc[k[b>>2]&127](e,c,d,180348)|0){k[a>>2]=52;b=3;break a}if(!(cc[k[b>>2]&127](e,c,d,180355)|0))f=9;else{k[a>>2]=53;b=3}break}default:if((b|0)==28&(k[a+16>>2]|0)==0)b=59;else f=9}while(0);if((f|0)==9){k[a>>2]=8;b=-1}return b|0}function TL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=3;break}case 27:{k[a>>2]=54;e=5;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function UL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=3;break}case 27:{k[a>>2]=52;e=6;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function VL(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;switch(b|0){case 15:{e=3;break}case 25:{k[a>>2]=27;e=7;break}case 17:{k[a>>2]=22;e=8;break}default:if((b|0)==28&(k[a+16>>2]|0)==0)e=59;else{k[a>>2]=8;e=-1}}return e|0}function WL(a){a=a|0;return ((a+-48|0)>>>0<10|(XL(a)|0)!=0)&1|0}function XL(a){a=a|0;return ((a|32)+-97|0)>>>0<26|0}function YL(a){a=a|0;return ((a|0)==32|(a|0)==9)&1|0}function ZL(a){a=a|0;return (a+-97|0)>>>0<26|0}function _L(a){a=a|0;return ((a|0)==32|(a+-9|0)>>>0<5)&1|0}function $L(a){a=a|0;return (a+-65|0)>>>0<26|0}function aM(a){a=a|0;if(!(gM(a)|0))a=(bM(a)|0)!=0;else a=1;return a&1|0}function bM(a){a=a|0;if(a>>>0<131072)a=(l[180479+((l[180479+(a>>>8)>>0]|0)<<5|a>>>3&31)>>0]|0)>>>(a&7)&1;else a=a>>>0<196606&1;return a|0}function cM(a){a=a|0;return YL(a)|0}function dM(a){a=a|0;if((a&-2|0)==8232|(a>>>0<32|(a+-127|0)>>>0<33))a=1;else a=(a+-65529|0)>>>0<3;return a&1|0}function eM(a,b){a=a|0;b=b|0;do switch(b|0){case 1:{b=aM(a)|0;break}case 2:{b=bM(a)|0;break}case 3:{b=cM(a)|0;break}case 4:{b=dM(a)|0;break}case 5:{b=gM(a)|0;break}case 6:{b=hM(a)|0;break}case 7:{b=iM(a)|0;break}case 8:{b=jM(a)|0;break}case 9:{b=kM(a)|0;break}case 10:{b=lM(a)|0;break}case 11:{b=mM(a)|0;break}case 12:{b=nM(a)|0;break}default:b=0}while(0);return b|0}function fM(a){a=a|0;var b=0,c=0,d=0,e=0;c=i[a>>0]|0;d=97;b=1;e=183455;while(1){if(c<<24>>24==d<<24>>24?(qO(a,e)|0)==0:0)break;e=e+6|0;d=i[e>>0]|0;if(!(d<<24>>24)){b=0;break}else b=b+1|0}return b|0}function gM(a){a=a|0;return (a+-48|0)>>>0<10|0}function hM(a){a=a|0;if(!(lM(a)|0))a=(jM(a)|0)!=0;else a=0;return a&1|0}function iM(a){a=a|0;return ((a|0)==223|(qM(a)|0)!=(a|0))&1|0}function jM(a){a=a|0;if(a>>>0>=255)if((a+-57344|0)>>>0<8185|(a>>>0<8232|(a+-8234|0)>>>0<47062))a=1;else return ((a+-65532|0)>>>0>1048579|(a&65534|0)==65534)&1^1|0;else a=(a+1&127)>>>0>32&1;return a|0}function kM(a){a=a|0;if(a>>>0<131072)a=(l[183528+((l[183528+(a>>>8)>>0]|0)<<5|a>>>3&31)>>0]|0)>>>(a&7)&1;else a=0;return a|0}function lM(a){a=a|0;if(!a)a=0;else a=(EO(98128,a)|0)!=0;return a&1|0}function mM(a){a=a|0;return (rM(a)|0)!=(a|0)|0}function nM(a){a=a|0;if((a+-48|0)>>>0<10)a=1;else a=((a|32)+-97|0)>>>0<6;return a&1|0}function oM(a){a=a|0;var b=0;b=($L(a)|0)==0;return (b?a:a|32)|0}function pM(a){a=a|0;var b=0;b=(ZL(a)|0)==0;return (b?a:a&95)|0}function qM(a){a=a|0;return IO(a,0)|0}function rM(a){a=a|0;return IO(a,1)|0}function sM(){var a=0;if(!(k[24466]|0))a=98216;else{a=(mb()|0)+60|0;a=k[a>>2]|0}return a|0}function tM(a){a=a|0;var b=0,c=0;b=0;while(1){if((l[186696+b>>0]|0)==(a|0)){c=2;break}b=b+1|0;if((b|0)==87){b=87;a=186784;c=5;break}}if((c|0)==2)if(!b)a=186784;else{a=186784;c=5}if((c|0)==5)while(1){c=a;while(1){a=c+1|0;if(!(i[c>>0]|0))break;else c=a}b=b+-1|0;if(!b)break;else c=5}return a|0}
function sC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0.0,h=0,m=0.0,n=0.0,o=0.0,q=0,s=0.0,u=0,v=0,y=0.0,z=0.0,A=0.0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0;ka=r;r=r+240|0;ga=ka+216|0;fa=ka+200|0;ea=ka+168|0;da=ka+160|0;ca=ka+152|0;ba=ka+144|0;aa=ka+112|0;$=ka+104|0;h=ka+96|0;ia=4;ha=uP(40)|0;k[ha>>2]=0;V=ka+224|0;R=ka+80|0;S=ka+64|0;T=ka+48|0;U=ka+32|0;Z=ka+16|0;_=ka;w=0;c=ra(32,a|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ha|0,ia|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;a:do if((e|0)!=1){w=0;X=ra(21,c<<3|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)!=1){if(!(i[137282]|0))Y=0;else{w=0;c=Ca(2)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ha|0,ia|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){D=0;E=0;C=0;U=0;u=X;T=X;c=L;v=0;B=0;a=0;f=0;S=0;break}Y=c}w=0;c=Aa(97,a|0,145963)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ha|0,ia|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)!=1){k[15041]=0;b:do if((c|0)!=0?(f=i[c>>0]|0,f<<24>>24!=0):0){e=c;d=f;c=0;while(1){e=e+1|0;switch(d<<24>>24|0){case 99:{c=c|8;k[15041]=c;break}case 105:{c=c|18;k[15041]=c;break}case 109:{c=c|1;k[15041]=c;break}case 114:{c=c|4;k[15041]=c;break}case 115:{c=c|2;k[15041]=c;break}default:{}}d=i[e>>0]|0;if(!(d<<24>>24))break b}}while(0);if(b){w=0;ta(25,0,145967,h|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){D=0;E=0;C=0;U=0;u=X;T=X;c=L;v=0;B=0;a=0;f=0;S=Y;break}}w=0;W=Aa(98,a|0,0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)!=1){Q=k[W+16>>2]|0;if(k[15041]&2){w=0;pa(25,k[24528]|0,Q|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){D=0;E=0;C=0;U=W;u=X;T=X;c=L;v=0;B=0;a=0;f=0;S=Y;break}}w=0;c=ra(23,a|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ha|0,ia|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)!=1){if(!c)f=0;else{f=0;do{w=0;d=Aa(99,a|0,c|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){b=FP(k[e>>2]|0,ha|0,ia|0)|0;if(!b)Za(e|0,x|0);L=x}else b=-1;if((b|0)==1){D=0;E=0;C=0;U=W;u=X;T=X;c=L;v=0;B=0;a=0;f=0;S=Y;break a}if(d){B=d;do{if(!((k[13600]|0)==2?(k[(k[B+8>>2]|0)+8>>2]|0)!=0:0))ja=29;c:do if((ja|0)==29){ja=0;do if(i[137282]|0){v=k[B>>2]&3;e=B+32|0;u=(k[k[((v|0)==3?B:e)+28>>2]>>2]|0)>>>4;d=B+-32|0;v=(k[k[((v|0)==2?B:d)+28>>2]>>2]|0)>>>4;if(u>>>0>v>>>0){w=0;b=ta(41,Y|0,v|0,u|0)|0;h=w;w=0;if((h|0)!=0&(x|0)!=0){q=FP(k[h>>2]|0,ha|0,ia|0)|0;if(!q)Za(h|0,x|0);L=x}else q=-1;if((q|0)==1){D=0;E=0;C=0;U=W;u=X;T=X;c=L;v=0;B=0;a=0;f=0;S=Y;break a}if(b)break c;w=0;Fa(61,Y|0,v|0,u|0);b=w;w=0;if((b|0)!=0&(x|0)!=0){h=FP(k[b>>2]|0,ha|0,ia|0)|0;if(!h)Za(b|0,x|0);L=x}else h=-1;if((h|0)==1){D=0;E=0;C=0;U=W;u=X;T=X;c=L;v=0;B=0;a=0;f=0;S=Y;break a}break}else{w=0;b=ta(41,Y|0,u|0,v|0)|0;h=w;w=0;if((h|0)!=0&(x|0)!=0){q=FP(k[h>>2]|0,ha|0,ia|0)|0;if(!q)Za(h|0,x|0);L=x}else q=-1;if((q|0)==1){D=0;E=0;C=0;U=W;u=X;T=X;c=L;v=0;B=0;a=0;f=0;S=Y;break a}if(b)break c;w=0;Fa(61,Y|0,u|0,v|0);b=w;w=0;if((b|0)!=0&(x|0)!=0){h=FP(k[b>>2]|0,ha|0,ia|0)|0;if(!h)Za(b|0,x|0);L=x}else h=-1;if((h|0)==1){D=0;E=0;C=0;U=W;u=X;T=X;c=L;v=0;B=0;a=0;f=0;S=Y;break a}break}}else{e=B+32|0;d=B+-32|0}while(0);k[X+(f<<3)+4>>2]=B;P=k[B>>2]&3;O=k[(k[((P|0)==3?B:e)+28>>2]|0)+8>>2]|0;P=k[(k[((P|0)==2?B:d)+28>>2]|0)+8>>2]|0;z=+p[O+16>>3]-+p[P+16>>3];A=+p[O+24>>3]-+p[P+24>>3];k[X+(f<<3)>>2]=~~(z*z+A*A);f=f+1|0}while(0);w=0;B=Aa(100,a|0,B|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ha|0,ia|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){D=0;E=0;C=0;U=W;u=X;T=X;c=L;v=0;B=0;a=0;f=0;S=Y;break a}}while((B|0)!=0)}w=0;c=Aa(87,a|0,c|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ha|0,ia|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){D=0;E=0;C=0;U=W;u=X;T=X;c=L;v=0;B=0;a=0;f=0;S=Y;break a}}while((c|0)!=0)}w=0;C=ra(25,f<<3|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)!=1){w=0;Ja(26,X|0,f|0,8,101);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)!=1){e=k[Q>>2]|0;w=0;na(101,e+2|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)!=1){c=k[Q+16>>2]|0;M=c+(e*40|0)|0;N=c+((e+1|0)*40|0)|0;D=(f|0)>0;if(D){O=k[24528]|0;P=(M|0)==0;H=c+(e*40|0)+8|0;I=R+8|0;J=S+8|0;K=0;do{if((K|0)>0?(k[15041]&16|0)!=0:0){w=0;pa(25,O|0,Q|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){E=C;U=W;u=X;T=X;c=L;v=0;B=0;a=0;S=Y;break a}}c=k[X+(K<<3)+4>>2]|0;G=k[c>>2]&3;u=k[(k[(k[((G|0)==3?c:c+32|0)+28>>2]|0)+8>>2]|0)+112>>2]|0;c=k[(k[(k[((G|0)==2?c:c+-32|0)+28>>2]|0)+8>>2]|0)+112>>2]|0;if((u|0)!=(c|0)){w=0;Fa(63,Q|0,c|0,N|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){E=C;U=W;u=X;T=X;c=L;v=0;B=0;a=0;S=Y;break a}w=0;Fa(63,Q|0,u|0,M|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){E=C;U=W;u=X;T=X;c=L;v=0;B=0;a=0;S=Y;break a}}else{b=u+32|0;if((k[b>>2]|0)>0){h=u+36|0;q=0;do{e=k[(k[h>>2]|0)+(q<<2)>>2]|0;do if(!(i[e+36>>0]|0)){c=k[e+20>>2]|0;if((c|0)==(u|0)){w=0;Fa(62,U|0,e|0,k[e+24>>2]|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){E=C;U=W;u=X;T=X;c=L;v=0;B=0;a=0;S=Y;break a}w=0;Ia(1,Q|0,M|0,e|0,0.0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){E=C;U=W;u=X;T=X;c=L;v=0;B=0;a=0;S=Y;break a}break}else{w=0;Fa(62,U|0,e|0,c|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){E=C;U=W;u=X;T=X;c=L;v=0;B=0;a=0;S=Y;break a}w=0;Ia(1,Q|0,N|0,e|0,0.0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){E=C;U=W;u=X;T=X;c=L;v=0;B=0;a=0;S=Y;break a}break}}while(0);q=q+1|0}while((q|0)<(k[b>>2]|0))}k[Q>>2]=(k[Q>>2]|0)+2}w=0;c=ta(42,Q|0,N|0,M|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ha|0,ia|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){E=C;U=W;u=X;T=X;c=L;v=0;B=0;a=0;S=Y;break a}if(c){E=C;q=W;u=X;h=X;v=0;B=0;a=0;b=Y;ja=245;break a}if(P)c=-112;else{c=M;d=0;do{d=d+1|0;c=k[c+8>>2]|0}while((c|0)!=0);c=(d*56|0)+-112|0}w=0;G=ra(25,c|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){E=C;U=W;u=X;T=X;c=L;v=0;B=0;a=0;S=Y;break a}h=k[H>>2]|0;b=k[h+8>>2]|0;c=k[h+20>>2]|0;if(k[c>>2]&1)c=k[h+24>>2]|0;w=0;Fa(62,R|0,h|0,c|0);d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ha|0,ia|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){E=C;U=W;u=X;T=X;c=L;v=0;B=0;a=0;S=Y;break a}d=b+8|0;do if(!(k[d>>2]|0)){w=0;d=Aa(102,G|0,0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){e=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!e)Za(c|0,x|0);L=x}else e=-1;if((e|0)==1){E=C;U=W;u=X;T=X;c=L;v=0;B=0;a=0;S=Y;break a}c=0}else{z=+p[R>>3];A=+p[I>>3];u=c;e=h;g=0.0;m=0.0;q=h;F=0;while(1){c=k[e+20>>2]|0;h=b+20|0;do if((c|0)==(k[h>>2]|0))E=c;else{if((c|0)==(k[b+24>>2]|0)){E=c;break}E=k[e+24>>2]|0}while(0);w=0;Fa(64,Q|0,E|0,k[q+12>>2]|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){e=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!e)Za(c|0,x|0);L=x}else e=-1;if((e|0)==1){E=C;U=W;u=X;T=X;c=L;v=0;B=0;a=0;S=Y;break a}B=q+36|0;c=i[B>>0]|0;a=b+36|0;do if(c<<24>>24==(i[a>>0]|0)){if((k[d>>2]|0)!=(N|0)){o=z;n=A;h=u;c=F;break}w=0;Fa(62,S|0,b|0,E|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){e=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!e)Za(c|0,x|0);L=x}else e=-1;if((e|0)==1){E=C;U=W;u=X;T=X;c=L;v=0;B=0;a=0;S=Y;break a}c=i[B>>0]|0;o=+p[S>>3];n=+p[J>>3];ja=92}else{o=(+p[E+40>>3]+ +p[E+56>>3])*.5;n=(+p[E+48>>3]+ +p[E+64>>3])*.5;ja=92}while(0);do if((ja|0)==92){ja=0;v=c<<24>>24==0;e=(q|0)==(k[H>>2]|0);if(v){if(!(i[a>>0]|0))c=0;else c=(k[h>>2]|0)==(E|0)?4:2;q=u+48|0;h=E+48|0;u=u+40|0;e=e?0:g>z?4:2}else{if(c<<24>>24==(i[a>>0]|0))c=0;else c=(k[h>>2]|0)==(E|0)?1:3;q=u+40|0;h=E+40|0;u=u+48|0;e=e?0:m>A?1:3}m=+p[h>>3];g=+p[q>>3];y=+p[u>>3];if(g<m){q=0;s=g;g=m;h=e;e=c}else{q=1;s=m;h=c}c=F+1|0;u=G+(F*56|0)|0;i[u>>0]=v&1;i[u+1>>0]=q;v=u+2|0;j[v>>1]=j[V>>1]|0;j[v+2>>1]=j[V+2>>1]|0;j[v+4>>1]=j[V+4>>1]|0;p[u+8>>3]=y;p[u+16>>3]=s;p[u+24>>3]=g;k[u+32>>2]=h;k[u+36>>2]=e;k[u+48>>2]=0;k[u+52>>2]=0;if((i[B>>0]|0)==(i[a>>0]|0)){h=E;g=z;m=A;q=b;break}if((k[d>>2]|0)!=(N|0)){h=E;g=z;m=A;q=b;break}w=0;Fa(62,T|0,b|0,E|0);e=w;w=0;if((e|0)!=0&(x|0)!=0){h=FP(k[e>>2]|0,ha|0,ia|0)|0;if(!h)Za(e|0,x|0);L=x}else h=-1;if((h|0)==1){E=C;U=W;u=X;T=X;c=L;v=0;B=0;a=0;S=Y;break a}q=(i[a>>0]|0)==0;h=E+48|0;a=E+40|0;g=+p[(q?h:a)>>3];m=+p[(q?a:h)>>3];h=G+(c*56|0)|0;i[h>>0]=q&1;i[h+1>>0]=1;c=h+2|0;j[c>>1]=j[V>>1]|0;j[c+2>>1]=j[V+2>>1]|0;j[c+4>>1]=j[V+4>>1]|0;p[h+8>>3]=m;p[h+16>>3]=g;p[h+24>>3]=g;k[h+32>>2]=0;k[h+36>>2]=q?(z>o?4:2):A>n?1:3;k[h+48>>2]=0;k[h+52>>2]=0;h=E;g=z;m=A;q=b;c=F+2|0}while(0);e=k[d>>2]|0;d=e+8|0;if(!(k[d>>2]|0))break;else{E=b;z=o;A=n;u=h;b=e;F=c;e=E}}w=0;d=Aa(102,G|0,c*56|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){b=FP(k[e>>2]|0,ha|0,ia|0)|0;if(!b)Za(e|0,x|0);L=x}else b=-1;if((b|0)==1){E=C;U=W;u=X;T=X;c=L;v=0;B=0;a=0;S=Y;break a}if((c|0)<=0)break;e=c+-1|0;b=0;do{if((b|0)>0)k[d+(b*56|0)+48>>2]=d+((b+-1|0)*56|0);h=b;b=b+1|0;if((h|0)<(e|0))k[d+(h*56|0)+52>>2]=d+(b*56|0)}while((b|0)!=(c|0))}while(0);k[C+(K<<3)>>2]=c;k[C+(K<<3)+4>>2]=d;w=0;na(102,Q|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){E=C;U=W;u=X;T=X;c=L;v=0;B=0;a=0;S=Y;break a}K=K+1|0}while((K|0)<(f|0))}w=0;Ga(4);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)!=1){w=0;v=Aa(103,60168,k[12815]|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)!=1){c=k[W>>2]|0;if((c|0)>0){u=W+8|0;q=0;do{d=(k[u>>2]|0)+(q*72|0)|0;if(!(k[d>>2]&4)){while(1){b=d+36|0;c=k[(k[b>>2]|0)+8>>2]|0;if(!c)break;c=k[c+20>>2]|0;if(!c)break;if(!(k[c>>2]&1))d=c;else break}w=0;h=ra(25,40)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){e=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!e)Za(c|0,x|0);L=x}else e=-1;if((e|0)==1){E=C;U=W;u=X;T=X;c=L;v=0;B=0;a=W;S=Y;break a}k[h+36>>2]=d;p[h+8>>3]=+p[d+40>>3];k[d>>2]=k[d>>2]|4;c=k[k[b>>2]>>2]|0;d:do if(!c)c=d;else{b=d;while(1){e=k[c+24>>2]|0;if(!e){c=b;break d}c=k[e>>2]|0;if(c&1){c=b;break d}k[e>>2]=c|4;c=k[k[e+36>>2]>>2]|0;if(!c){c=e;break}else b=e}}while(0);p[h+16>>3]=+p[c+56>>3];w=0;Ha(1,v|0,h|0,+(+p[d+48>>3]));c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){E=C;U=W;u=X;T=X;c=L;v=0;B=0;a=W;S=Y;break a}c=k[W>>2]|0}q=q+1|0}while((q|0)<(c|0))}G=W+20|0;k[G>>2]=v;w=0;v=Aa(103,60168,k[12815]|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){E=C;U=W;u=X;T=X;c=L;v=0;B=G;a=W;S=Y}else{c=k[W>>2]|0;if((c|0)>0){u=W+8|0;q=0;do{d=(k[u>>2]|0)+(q*72|0)|0;if(!(k[d>>2]&2)){while(1){b=d+36|0;c=k[(k[b>>2]|0)+12>>2]|0;if(!c)break;c=k[c+20>>2]|0;if(!c)break;if(!(k[c>>2]&1))d=c;else break}w=0;h=ra(25,40)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){e=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!e)Za(c|0,x|0);L=x}else e=-1;if((e|0)==1){E=C;U=W;u=X;T=X;c=L;v=0;B=G;a=W;S=Y;break a}k[h+36>>2]=d;p[h+8>>3]=+p[d+48>>3];k[d>>2]=k[d>>2]|2;c=k[(k[b>>2]|0)+4>>2]|0;e:do if(!c)c=d;else{b=d;while(1){e=k[c+24>>2]|0;if(!e){c=b;break e}c=k[e>>2]|0;if(c&1){c=b;break e}k[e>>2]=c|2;c=k[(k[e+36>>2]|0)+4>>2]|0;if(!c){c=e;break}else b=e}}while(0);p[h+16>>3]=+p[c+64>>3];w=0;Ha(1,v|0,h|0,+(+p[d+40>>3]));c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){E=C;U=W;u=X;T=X;c=L;v=0;B=G;a=W;S=Y;break a}c=k[W>>2]|0}q=q+1|0}while((q|0)<(c|0))}F=W+24|0;k[F>>2]=v;if(D){B=0;do{q=k[C+(B<<3)>>2]|0;u=k[C+(B<<3)+4>>2]|0;if((q|0)>0){a=0;do{v=u+(a*56|0)|0;if(!(i[v>>0]|0)){w=0;c=Aa(104,k[G>>2]|0,v|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ha|0,ia|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){E=C;U=W;u=X;T=X;c=L;v=F;B=G;a=W;S=Y;break a}}else{w=0;c=Aa(104,k[F>>2]|0,v|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ha|0,ia|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){E=C;U=W;u=X;T=X;c=L;v=F;B=G;a=W;S=Y;break a}}h=c+24|0;b=k[h>>2]|0;d=b+1|0;k[h>>2]=d;k[u+(a*56|0)+40>>2]=b;b=c+28|0;c=k[b>>2]|0;if(!c){w=0;c=ra(21,d<<2|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ha|0,ia|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){E=C;U=W;u=X;T=X;c=L;v=F;B=G;a=W;S=Y;break a}}else{w=0;c=Aa(88,c|0,d<<2|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ha|0,ia|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){E=C;U=W;u=X;T=X;c=L;v=F;B=G;a=W;S=Y;break a}}k[b>>2]=c;k[c+((k[h>>2]|0)+-1<<2)>>2]=v;a=a+1|0}while((a|0)!=(q|0))}B=B+1|0}while((B|0)!=(f|0))}ha=DP(60204,1,ha|0,ia|0)|0;ia=L;w=0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){E=C;U=W;u=X;T=X;c=L;v=F;B=G;a=W;S=Y;break}E=C;U=W;u=X;T=X;c=0;v=F;B=G;a=W;S=Y}}else{E=C;U=W;u=X;T=X;c=L;v=0;B=0;a=0;S=Y}}else{E=C;U=W;u=X;T=X;c=L;v=0;B=0;a=0;S=Y}}else{D=0;E=C;U=W;u=X;T=X;c=L;v=0;B=0;a=0;S=Y}}else{D=0;E=C;U=W;u=X;T=X;c=L;v=0;B=0;a=0;S=Y}}else{D=0;E=0;U=W;u=X;T=X;c=L;v=0;B=0;a=0;S=Y}}else{D=0;E=0;C=0;U=W;u=X;T=X;c=L;v=0;B=0;a=0;f=0;S=Y}}else{D=0;E=0;C=0;U=W;u=X;T=X;c=L;v=0;B=0;a=0;f=0;S=Y}}else{D=0;E=0;C=0;U=0;u=X;T=X;c=L;v=0;B=0;a=0;f=0;S=Y}}else{D=0;E=0;C=0;U=0;u=0;T=X;c=L;v=0;B=0;a=0;f=0;S=0}}else{D=0;E=0;C=0;U=0;u=0;T=0;c=L;v=0;B=0;a=0;f=0;S=0}while(0);f:while(1){if((ja|0)==245){ja=0;if(i[137282]|0){w=0;na(106,b|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){U=q;T=h;c=L;S=b;continue}}if(D){e=0;while(1){w=0;na(95,k[E+(e<<3)+4>>2]|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){U=q;T=h;c=L;S=b;continue f}e=e+1|0;if((e|0)==(f|0))break}}w=0;na(95,C|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){U=q;T=h;c=L;S=b;continue}w=0;na(107,q|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){U=q;T=h;c=L;S=b;continue}w=0;na(95,h|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){U=q;T=h;c=L;S=b}else break}if(c){q=U;h=T;b=S;ja=245;continue}w=0;na(103,k[B>>2]|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue}w=0;na(103,k[v>>2]|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue}w=0;na(104,k[B>>2]|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue}w=0;na(104,k[v>>2]|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue}w=0;pa(26,k[B>>2]|0,U|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue}w=0;pa(26,k[v>>2]|0,U|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue}w=0;na(105,k[B>>2]|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue}w=0;na(105,k[v>>2]|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue}if(k[15041]&4){J=k[24528]|0;w=0;Ea(54,146041,405,1,J|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue}w=0;k[$>>2]=10;k[$+4>>2]=10;ta(31,J|0,146447,$|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue}w=0;Ea(54,173938,18,1,J|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue}c=U+4|0;if((k[c>>2]|0)>0){d=U+12|0;h=0;while(1){e=k[d>>2]|0;y=+p[e+(h*72|0)+48>>3];z=+p[e+(h*72|0)+56>>3];A=+p[e+(h*72|0)+64>>3];w=0;p[aa>>3]=+p[e+(h*72|0)+40>>3];p[aa+8>>3]=y;p[aa+16>>3]=z;p[aa+24>>3]=A;ta(31,J|0,173957,aa|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){b=FP(k[e>>2]|0,ha|0,ia|0)|0;if(!b)Za(e|0,x|0);L=x}else b=-1;if((b|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}h=h+1|0;if((h|0)>=(k[c>>2]|0))break}}if(D){n=-1797693134862315708145274.0e284;o=-1797693134862315708145274.0e284;m=1797693134862315708145274.0e284;g=1797693134862315708145274.0e284;I=0;while(1){H=k[u+(I<<3)+4>>2]|0;F=E+(I<<3)|0;F=l[F>>0]|l[F+1>>0]<<8|l[F+2>>0]<<16|l[F+3>>0]<<24;G=E+(I<<3)+4|0;G=l[G>>0]|l[G+1>>0]<<8|l[G+2>>0]<<16|l[G+3>>0]<<24;c=k[(k[(k[((k[H>>2]&3|0)==3?H:H+32|0)+28>>2]|0)+8>>2]|0)+112>>2]|0;if(!(i[G>>0]|0)){y=+p[c+56>>3];s=+p[c+40>>3];w=0;e=Aa(104,k[B>>2]|0,G|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}Y=k[e+36>>2]|0;A=+p[Y+48>>3];y=(y+s)*.5;s=A+(1.0-+(k[G+44>>2]|0)/+((k[e+24>>2]|0)+1|0))*(+p[Y+64>>3]-A)}else{z=+p[c+64>>3];s=+p[c+48>>3];w=0;c=Aa(104,k[v>>2]|0,G|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ha|0,ia|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}Y=k[c+36>>2]|0;y=+p[Y+40>>3];y=y+ +(k[G+44>>2]|0)/+((k[c+24>>2]|0)+1|0)*(+p[Y+56>>3]-y);s=(z+s)*.5}h=~~s;b=~~y;z=+(b|0);g=g<z?g:z;A=+(h|0);m=m<A?m:A;o=o>z?o:z;n=n>A?n:A;w=0;k[ba>>2]=b;k[ba+4>>2]=h;ta(31,J|0,146464,ba|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}if((F|0)>1){q=1;while(1){c=G+(q*56|0)|0;if(!(i[c>>0]|0)){w=0;e=Aa(104,k[B>>2]|0,c|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}Y=k[e+36>>2]|0;A=+p[Y+48>>3];e=~~(A+(1.0-+(k[G+(q*56|0)+44>>2]|0)/+((k[e+24>>2]|0)+1|0))*(+p[Y+64>>3]-A))}else{w=0;c=Aa(104,k[v>>2]|0,c|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ha|0,ia|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}b=k[c+36>>2]|0;A=+p[b+40>>3];b=~~(A+ +(k[G+(q*56|0)+44>>2]|0)/+((k[c+24>>2]|0)+1|0)*(+p[b+56>>3]-A));e=h}z=+(b|0);g=g<z?g:z;A=+(e|0);m=m<A?m:A;o=o>z?o:z;n=n>A?n:A;w=0;k[ca>>2]=b;k[ca+4>>2]=e;ta(31,J|0,146486,ca|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}q=q+1|0;if((q|0)==(F|0))break;else h=e}z=g;y=m;s=n;b=G+(((F|0)>2?F+-1|0:1)*56|0)|0}else{z=g;y=m;s=n;b=G}c=k[(k[(k[((k[H>>2]&3|0)==2?H:H+-32|0)+28>>2]|0)+8>>2]|0)+112>>2]|0;if(!(i[b>>0]|0)){m=+p[c+56>>3];g=+p[c+40>>3];w=0;e=Aa(104,k[B>>2]|0,b|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}Y=k[e+36>>2]|0;A=+p[Y+48>>3];m=(m+g)*.5;g=A+(1.0-+(k[b+44>>2]|0)/+((k[e+24>>2]|0)+1|0))*(+p[Y+64>>3]-A)}else{n=+p[c+64>>3];g=+p[c+48>>3];w=0;c=Aa(104,k[v>>2]|0,b|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ha|0,ia|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}Y=k[c+36>>2]|0;m=+p[Y+40>>3];m=m+ +(k[b+44>>2]|0)/+((k[c+24>>2]|0)+1|0)*(+p[Y+56>>3]-m);g=(n+g)*.5}c=~~g;Y=~~m;A=+(Y|0);g=z<A?z:A;n=+(c|0);m=y<n?y:n;o=o>A?o:A;n=s>n?s:n;w=0;k[da>>2]=Y;k[da+4>>2]=c;ta(31,J|0,146500,da|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}I=I+1|0;if((I|0)==(f|0))break}}else{o=-1797693134862315708145274.0e284;m=1797693134862315708145274.0e284;g=1797693134862315708145274.0e284;n=-1797693134862315708145274.0e284}w=0;Ea(54,146521,24,1,J|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue}if((k[a>>2]|0)>0){b=U+8|0;e=0;while(1){c=k[b>>2]|0;s=+p[c+(e*72|0)+40>>3];y=+p[c+(e*72|0)+48>>3];z=+p[c+(e*72|0)+56>>3];A=+p[c+(e*72|0)+64>>3];w=0;p[ea>>3]=s;p[ea+8>>3]=y;p[ea+16>>3]=z;p[ea+24>>3]=A;ta(31,J|0,173994,ea|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}g=g<s?g:s;m=m<y?m:y;o=o>z?o:z;n=n>A?n:A;e=e+1|0;if((e|0)>=(k[a>>2]|0))break}}w=0;k[fa>>2]=~~(g+10.0);k[fa+4>>2]=~~(m+10.0);k[fa+8>>2]=~~(o+10.0);k[fa+12>>2]=~~(n+10.0);ta(31,J|0,146546,fa|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue}}if(D){O=Z+8|0;P=_+8|0;Q=k[24528]|0;R=0;c=0;d=0;while(1){K=k[u+(R<<3)+4>>2]|0;H=k[K>>2]&3;I=K+32|0;M=k[(k[((H|0)==3?K:I)+28>>2]|0)+8>>2]|0;h=k[K+8>>2]|0;G=h+16|0;i[t>>0]=i[G>>0];i[t+1>>0]=i[G+1>>0];i[t+2>>0]=i[G+2>>0];i[t+3>>0]=i[G+3>>0];i[t+4>>0]=i[G+4>>0];i[t+5>>0]=i[G+5>>0];i[t+6>>0]=i[G+6>>0];i[t+7>>0]=i[G+7>>0];z=+p[t>>3];G=h+24|0;i[t>>0]=i[G>>0];i[t+1>>0]=i[G+1>>0];i[t+2>>0]=i[G+2>>0];i[t+3>>0]=i[G+3>>0];i[t+4>>0]=i[G+4>>0];i[t+5>>0]=i[G+5>>0];i[t+6>>0]=i[G+6>>0];i[t+7>>0]=i[G+7>>0];y=+p[t>>3];G=M+16|0;i[t>>0]=i[G>>0];i[t+1>>0]=i[G+1>>0];i[t+2>>0]=i[G+2>>0];i[t+3>>0]=i[G+3>>0];i[t+4>>0]=i[G+4>>0];i[t+5>>0]=i[G+5>>0];i[t+6>>0]=i[G+6>>0];i[t+7>>0]=i[G+7>>0];A=+p[t>>3];M=M+24|0;i[t>>0]=i[M>>0];i[t+1>>0]=i[M+1>>0];i[t+2>>0]=i[M+2>>0];i[t+3>>0]=i[M+3>>0];i[t+4>>0]=i[M+4>>0];i[t+5>>0]=i[M+5>>0];i[t+6>>0]=i[M+6>>0];i[t+7>>0]=i[M+7>>0];y=y+ +p[t>>3];p[Z>>3]=z+A;p[O>>3]=y;M=K+-32|0;H=k[(k[((H|0)==2?K:M)+28>>2]|0)+8>>2]|0;G=h+56|0;i[t>>0]=i[G>>0];i[t+1>>0]=i[G+1>>0];i[t+2>>0]=i[G+2>>0];i[t+3>>0]=i[G+3>>0];i[t+4>>0]=i[G+4>>0];i[t+5>>0]=i[G+5>>0];i[t+6>>0]=i[G+6>>0];i[t+7>>0]=i[G+7>>0];y=+p[t>>3];h=h+64|0;i[t>>0]=i[h>>0];i[t+1>>0]=i[h+1>>0];i[t+2>>0]=i[h+2>>0];i[t+3>>0]=i[h+3>>0];i[t+4>>0]=i[h+4>>0];i[t+5>>0]=i[h+5>>0];i[t+6>>0]=i[h+6>>0];i[t+7>>0]=i[h+7>>0];A=+p[t>>3];h=H+16|0;i[t>>0]=i[h>>0];i[t+1>>0]=i[h+1>>0];i[t+2>>0]=i[h+2>>0];i[t+3>>0]=i[h+3>>0];i[t+4>>0]=i[h+4>>0];i[t+5>>0]=i[h+5>>0];i[t+6>>0]=i[h+6>>0];i[t+7>>0]=i[h+7>>0];z=+p[t>>3];H=H+24|0;i[t>>0]=i[H>>0];i[t+1>>0]=i[H+1>>0];i[t+2>>0]=i[H+2>>0];i[t+3>>0]=i[H+3>>0];i[t+4>>0]=i[H+4>>0];i[t+5>>0]=i[H+5>>0];i[t+6>>0]=i[H+6>>0];i[t+7>>0]=i[H+7>>0];A=A+ +p[t>>3];p[_>>3]=y+z;p[P>>3]=A;H=k[E+(R<<3)>>2]|0;h=k[E+(R<<3)+4>>2]|0;G=H*3|0;N=G+1|0;if((G|0)<(d|0))J=d;else{if(c){w=0;na(95,c|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}}w=0;c=ra(21,N<<4|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ha|0,ia|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}J=N}if(!(i[h>>0]|0)){w=0;b=Aa(104,k[B>>2]|0,h|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ha|0,ia|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}Y=k[b+36>>2]|0;m=+p[Y+48>>3];g=+p[Z>>3];m=+(~~(m+(1.0-+(k[h+44>>2]|0)/+((k[b+24>>2]|0)+1|0))*(+p[Y+64>>3]-m))|0)}else{w=0;d=Aa(104,k[v>>2]|0,h|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){b=FP(k[e>>2]|0,ha|0,ia|0)|0;if(!b)Za(e|0,x|0);L=x}else b=-1;if((b|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}Y=k[d+36>>2]|0;g=+p[Y+40>>3];g=g+ +(k[h+44>>2]|0)/+((k[d+24>>2]|0)+1|0)*(+p[Y+56>>3]-g);m=+p[O>>3]}Y=c+16|0;p[c+16>>3]=g;p[c+24>>3]=m;k[c>>2]=k[Y>>2];k[c+4>>2]=k[Y+4>>2];k[c+8>>2]=k[Y+8>>2];k[c+12>>2]=k[Y+12>>2];if((H|0)>1){q=1;F=2;while(1){d=h+(q*56|0)|0;if(!(i[d>>0]|0)){w=0;b=Aa(104,k[B>>2]|0,d|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ha|0,ia|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}Y=k[b+36>>2]|0;m=+p[Y+48>>3];m=+(~~(m+(1.0-+(k[h+(q*56|0)+44>>2]|0)/+((k[b+24>>2]|0)+1|0))*(+p[Y+64>>3]-m))|0)}else{w=0;d=Aa(104,k[v>>2]|0,d|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){b=FP(k[e>>2]|0,ha|0,ia|0)|0;if(!b)Za(e|0,x|0);L=x}else b=-1;if((b|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}Y=k[d+36>>2]|0;g=+p[Y+40>>3];g=g+ +(k[h+(q*56|0)+44>>2]|0)/+((k[d+24>>2]|0)+1|0)*(+p[Y+56>>3]-g)}Y=c+(F+2<<4)|0;W=c+(F+1<<4)|0;X=c+(F<<4)|0;p[X>>3]=g;p[c+(F<<4)+8>>3]=m;k[W>>2]=k[X>>2];k[W+4>>2]=k[X+4>>2];k[W+8>>2]=k[X+8>>2];k[W+12>>2]=k[X+12>>2];k[Y>>2]=k[X>>2];k[Y+4>>2]=k[X+4>>2];k[Y+8>>2]=k[X+8>>2];k[Y+12>>2]=k[X+12>>2];q=q+1|0;if((q|0)==(H|0))break;else F=F+3|0}q=G+-1|0;h=h+((H+-1|0)*56|0)|0}else q=2;if(!(i[h>>0]|0)){w=0;b=Aa(104,k[B>>2]|0,h|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ha|0,ia|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}Y=k[b+36>>2]|0;g=+p[Y+48>>3];m=+p[_>>3];g=+(~~(g+(1.0-+(k[h+44>>2]|0)/+((k[b+24>>2]|0)+1|0))*(+p[Y+64>>3]-g))|0)}else{w=0;d=Aa(104,k[v>>2]|0,h|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){b=FP(k[e>>2]|0,ha|0,ia|0)|0;if(!b)Za(e|0,x|0);L=x}else b=-1;if((b|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}Y=k[d+36>>2]|0;m=+p[Y+40>>3];m=m+ +(k[h+44>>2]|0)/+((k[d+24>>2]|0)+1|0)*(+p[Y+56>>3]-m);g=+p[P>>3]}Y=c+(q<<4)|0;W=q+1|0;X=c+(W<<4)|0;p[X>>3]=m;p[c+(W<<4)+8>>3]=g;k[Y>>2]=k[X>>2];k[Y+4>>2]=k[X+4>>2];k[Y+8>>2]=k[X+8>>2];k[Y+12>>2]=k[X+12>>2];if((l[137280]|0)>1){w=0;h=ra(28,k[((k[K>>2]&3|0)==3?K:I)+28>>2]|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ha|0,ia|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}w=0;d=ra(28,k[((k[K>>2]&3|0)==2?K:M)+28>>2]|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){b=FP(k[e>>2]|0,ha|0,ia|0)|0;if(!b)Za(e|0,x|0);L=x}else b=-1;if((b|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}w=0;k[ga>>2]=h;k[ga+4>>2]=d;ta(31,Q|0,146597,ga|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ha|0,ia|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}}w=0;ma(16,K|0,k[((k[K>>2]&3|0)==2?K:M)+28>>2]|0,c|0,N|0,60360);d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,ha|0,ia|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue f}R=R+1|0;if((R|0)==(f|0))break;else d=J}}else c=0;w=0;na(95,c|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ha|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=S;M=f;N=a;O=B;P=v;Q=T;R=u;V=U;W=C;X=E;Y=D;c=L;S=K;f=M;a=N;B=O;v=P;T=Q;u=R;U=V;C=W;E=X;D=Y;continue}q=U;h=T;b=S;ja=245}vP(ha|0);r=ka;return}function tC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0.0;j=r;r=r+32|0;i=j+16|0;h=j;QN(146834,10,1,a)|0;QN(146845,19,1,a)|0;if((k[b>>2]|0)>0){f=b+16|0;g=0;do{c=k[f>>2]|0;e=c+(g*40|0)|0;d=k[c+(g*40|0)+20>>2]|0;c=k[c+(g*40|0)+24>>2]|0;do if((d|0)!=(c|0)){d=(k[d>>2]&1|0)==0?d:c;c=k[d+36>>2]|0;if((k[c+4>>2]|0)==(e|0)){e=~~((+p[d+40>>3]+ +p[d+56>>3])*.5);c=~~+p[d+64>>3];break}if((k[c+12>>2]|0)==(e|0)){e=~~((+p[d+40>>3]+ +p[d+56>>3])*.5);c=~~+p[d+48>>3];break}if((k[c+8>>2]|0)==(e|0)){e=~~+p[d+40>>3];c=~~((+p[d+48>>3]+ +p[d+64>>3])*.5);break}if((k[c>>2]|0)==(e|0)){e=~~+p[d+56>>3];c=~~((+p[d+48>>3]+ +p[d+64>>3])*.5)}else{e=0;c=0}}else{e=~~((+p[d+40>>3]+ +p[d+56>>3])*.5);c=~~((+p[d+48>>3]+ +p[d+64>>3])*.5)}while(0);k[h>>2]=g;k[h+4>>2]=e;k[h+8>>2]=c;FN(a,146865,h)|0;g=g+1|0}while((g|0)<(k[b>>2]|0))}e=b+4|0;if((k[e>>2]|0)>0){c=b+20|0;d=0;do{h=k[c>>2]|0;b=k[h+(d*24|0)+16>>2]|0;l=+p[h+(d*24|0)>>3];k[i>>2]=k[h+(d*24|0)+12>>2];k[i+4>>2]=b;p[i+8>>3]=l;FN(a,146885,i)|0;d=d+1|0}while((d|0)<(k[e>>2]|0))}QN(146907,2,1,a)|0;r=j;return}function uC(a,b){a=a|0;b=b|0;return (k[a>>2]|0)-(k[b>>2]|0)|0}function vC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0,g=0;g=(i[b+36>>0]|0)!=0;f=c+40|0;do if((k[b+24>>2]|0)==(c|0)){e=+p[f>>3];d=+p[c+48>>3];if(g){d=(d+ +p[c+64>>3])*.5;break}else{e=(e+ +p[c+56>>3])*.5;break}}else{e=+p[c+56>>3];d=+p[c+64>>3];if(g){d=(+p[c+48>>3]+d)*.5;break}else{e=(+p[f>>3]+e)*.5;break}}while(0);p[a>>3]=e;p[a+8>>3]=d;return}function wC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;j=r;r=r+16|0;e=j;f=b+32|0;if((k[f>>2]|0)>0){g=b+36|0;i=0;do{h=k[(k[g>>2]|0)+(i<<2)>>2]|0;d=k[h+20>>2]|0;if((d|0)==(b|0))d=k[h+24>>2]|0;vC(e,h,d);bD(a,c,h,0.0)|0;i=i+1|0}while((i|0)<(k[f>>2]|0))}k[a>>2]=(k[a>>2]|0)+1;k[c+24>>2]=b;k[c+20>>2]=b;r=j;return}function xC(a,b,c){a=a|0;b=b|0;c=+c;var d=0,e=0,f=0;f=r;r=r+16|0;e=f;p[e>>3]=c;d=Tb[k[a>>2]&63](a,e,512)|0;if(!d){d=By(24)|0;p[d+8>>3]=+p[e>>3];e=Lr(60372,k[12815]|0)|0;k[d+16>>2]=e;Tb[k[a>>2]&63](a,d,1)|0}a=k[d+16>>2]|0;Tb[k[a>>2]&63](a,b,1)|0;r=f;return}function yC(a,b){a=a|0;b=b|0;a=Tb[k[a>>2]&63](a,b+8|0,512)|0;if(!a)Wa(146814,146703,425,146820);a=k[a+16>>2]|0;a=Tb[k[a>>2]&63](a,b+16|0,512)|0;if(!a)Wa(146831,146703,427,146820);else return a|0;return 0}function zC(a){a=a|0;var b=0,c=0;a=Jr(a)|0;if(a)do{b=Jr(k[a+16>>2]|0)|0;if(b)do{c=RC(k[b+24>>2]|0)|0;k[b+32>>2]=c;b=k[b>>2]|0}while((b|0)!=0);a=k[a>>2]|0}while((a|0)!=0);return}function AC(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0;a=Jr(a)|0;if(a)do{b=Jr(k[a+16>>2]|0)|0;if(b)do{g=k[b+24>>2]|0;if((g|0)!=0?(h=k[b+28>>2]|0,i=k[b+32>>2]|0,(g|0)>1):0){f=1;d=0;while(1){c=h+(d<<2)|0;e=f;do{switch(KC(k[c>>2]|0,k[h+(e<<2)>>2]|0)|0){case 1:{TC(i,d,e);break}case -1:{TC(i,e,d);break}default:{}}e=e+1|0}while((e|0)!=(g|0));c=f+1|0;if((c|0)==(g|0))break;else{d=f;f=c}}}b=k[b>>2]|0}while((b|0)!=0);a=k[a>>2]|0}while((a|0)!=0);return}function BC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;y=r;r=r+16|0;v=y+8|0;w=y;a=Jr(a)|0;if(a){t=v+4|0;u=w+4|0;do{c=Jr(k[a+16>>2]|0)|0;if(c)do{n=k[c+32>>2]|0;o=k[c+28>>2]|0;q=c+24|0;d=k[q>>2]|0;if((d|0)>1){s=1;m=0;while(1){if((s|0)<(d|0)){j=o+(m<<2)|0;l=s;do{a:do if(((VC(n,m,l)|0)==0?(VC(n,l,m)|0)==0:0)?(x=o+(l<<2)|0,(GC(k[j>>2]|0,k[x>>2]|0)|0)!=0):0){g=k[j>>2]|0;d=k[g+48>>2]|0;h=k[x>>2]|0;e=k[h+48>>2]|0;f=(e|0)==0;if(d)if(f)i=1;else i=+p[d+8>>3]!=+p[e+8>>3]&1;else i=f&1^1;HC(v,g,h,0,i);d=k[v>>2]|0;h=k[t>>2]|0;e=i^1;HC(w,k[j>>2]|0,k[x>>2]|0,1,e);f=k[w>>2]|0;g=k[u>>2]|0;switch(h|0){case -1:{IC(k[x>>2]|0,k[j>>2]|0,i,0,d,b);IC(k[x>>2]|0,k[j>>2]|0,e,1,f,b);if((g|0)!=1)break a;JC(k[j>>2]|0,k[x>>2]|0,e,b);break a}case 0:switch(g|0){case -1:{IC(k[x>>2]|0,k[j>>2]|0,i,0,d,b);IC(k[x>>2]|0,k[j>>2]|0,e,1,f,b);break a}case 0:{IC(k[j>>2]|0,k[x>>2]|0,0,i,d,b);IC(k[j>>2]|0,k[x>>2]|0,1,e,f,b);break a}case 1:{IC(k[j>>2]|0,k[x>>2]|0,0,i,d,b);IC(k[j>>2]|0,k[x>>2]|0,1,e,f,b);break a}default:break a}case 1:{IC(k[j>>2]|0,k[x>>2]|0,0,i,d,b);IC(k[j>>2]|0,k[x>>2]|0,1,e,f,b);if((g|0)!=-1)break a;JC(k[j>>2]|0,k[x>>2]|0,e,b);break a}default:break a}}while(0);l=l+1|0;d=k[q>>2]|0}while((l|0)<(d|0))}e=s+1|0;if((e|0)<(d|0)){m=s;s=e}else break}}c=k[c>>2]|0}while((c|0)!=0);a=k[a>>2]|0}while((a|0)!=0)}r=y;return}function CC(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0.0,q=0.0;n=r;r=r+32|0;m=n;a=Jr(a)|0;if(a){j=k[24528]|0;do{b=Jr(k[a+16>>2]|0)|0;if(b){i=a+8|0;do{h=b+24|0;c=k[h>>2]|0;if(c){if(!((k[15041]&8|0)==0|(c|0)<2)?(q=+p[b+8>>3],o=+p[b+16>>3],k[m>>2]=~~+p[i>>3],p[m+8>>3]=q,p[m+16>>3]=o,FN(j,146610,m)|0,(k[h>>2]|0)>0):0){c=b+32|0;d=b+28|0;g=0;do{e=k[(k[(k[c>>2]|0)+4>>2]|0)+(g*12|0)+8>>2]|0;if((Nr(e)|0)!=0?(FC(j,k[(k[d>>2]|0)+(g<<2)>>2]|0),QN(146630,4,1,j)|0,l=Tb[k[e>>2]&63](e,0,128)|0,(l|0)!=0):0){f=l;do{QN(146635,5,1,j)|0;FC(j,k[(k[d>>2]|0)+(k[f>>2]<<2)>>2]|0);GN(10,j)|0;f=Tb[k[e>>2]&63](e,f,8)|0}while((f|0)!=0)}g=g+1|0}while((g|0)<(k[h>>2]|0))}c=b+32|0;WC(k[c>>2]|0);f=k[h>>2]|0;if((f|0)>0){c=k[(k[c>>2]|0)+4>>2]|0;d=k[b+28>>2]|0;e=0;do{k[(k[d+(e<<2)>>2]|0)+44>>2]=(k[c+(e*12|0)+4>>2]|0)+1;e=e+1|0}while((e|0)<(f|0))}}b=k[b>>2]|0}while((b|0)!=0)}a=k[a>>2]|0}while((a|0)!=0)}r=n;return}function DC(a){a=a|0;return 0}function EC(a){a=a|0;return 0}function FC(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0,g=0,h=0,j=0;j=r;r=r+80|0;h=j+40|0;g=j;if(!(i[b>>0]|0)){c=+p[b+16>>3];d=+p[b+8>>3];e=+p[b+24>>3];switch(k[b+32>>2]|0){case 4:{f=146641;break}case 1:{f=146663;break}case 2:{f=146656;break}case 3:{f=146649;break}default:f=146668}switch(k[b+36>>2]|0){case 4:{b=146641;break}case 1:{b=146663;break}case 2:{b=146656;break}case 3:{b=146649;break}default:b=146668}p[h>>3]=c;p[h+8>>3]=d;p[h+16>>3]=e;p[h+24>>3]=d;k[h+32>>2]=f;k[h+36>>2]=b;FN(a,146675,h)|0}else{c=+p[b+8>>3];d=+p[b+16>>3];e=+p[b+24>>3];switch(k[b+32>>2]|0){case 4:{f=146641;break}case 1:{f=146663;break}case 2:{f=146656;break}case 3:{f=146649;break}default:f=146668}switch(k[b+36>>2]|0){case 4:{b=146641;break}case 1:{b=146663;break}case 2:{b=146656;break}case 3:{b=146649;break}default:b=146668}p[g>>3]=c;p[g+8>>3]=d;p[g+16>>3]=c;p[g+24>>3]=e;k[g+32>>2]=f;k[g+36>>2]=b;FN(a,146675,g)|0}r=j;return}function GC(a,b){a=a|0;b=b|0;if(!(+p[a+8>>3]==+p[b+8>>3]))Wa(146771,146703,845,146802);if((+p[a+16>>3]==+p[b+16>>3]?+p[a+24>>3]==+p[b+24>>3]:0)?(k[a+32>>2]|0)==(k[b+32>>2]|0):0)a=(k[a+36>>2]|0)==(k[b+36>>2]|0);else a=0;return a&1|0}function HC(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,l=0,m=0;if(!b)Wa(146699,146703,800,146711);g=(d|0)==0;f=(e|0)==0;e=k[(g?b+48|0:b+52|0)>>2]|0;a:do if(e){b=0;while(1){if(!c){b=5;break}c=k[(f?c+48|0:c+52|0)>>2]|0;if(!c){b=9;break}if(!(GC(e,c)|0)){j=b;b=10;break}b=b+1|0;e=k[(g?e+48|0:e+52|0)>>2]|0;if(!e){l=b;m=0;break a}}if((b|0)==5)Wa(146699,146703,800,146711);else if((b|0)==9)Wa(174497,146703,873,146720);else if((b|0)==10){b=KC(e,c)|0;h=j+1|0;if((j|0)<0){l=j;m=b;break}d=(d|0)==1;g=1;while(1){if(!e)break;f=e;e=k[(d?e+48|0:e+52|0)>>2]|0;c=+p[e+8>>3]==+p[f+16>>3];do if(!(i[f>>0]|0))if(c){b=(k[f+32>>2]|0)==1?0-b|0:b;break}else{b=(k[f+36>>2]|0)==3?0-b|0:b;break}else if(c){b=(k[f+32>>2]|0)==4?0-b|0:b;break}else{b=(k[f+36>>2]|0)==2?0-b|0:b;break}while(0);if((g|0)>=(h|0)){l=j;m=b;break a}else g=g+1|0}Wa(146699,146703,800,146711)}}else{l=0;m=0}while(0);k[a>>2]=l;k[a+4>>2]=m;return}function IC(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0;if(!(i[a>>0]|0))g=yC(k[f+20>>2]|0,a)|0;else g=yC(k[f+24>>2]|0,a)|0;TC(k[g+32>>2]|0,k[a+40>>2]|0,k[b+40>>2]|0);if((e|0)>=1){o=(c|0)==0;m=(d|0)==0;n=f+24|0;l=f+20|0;j=1;while(1){f=a;a=k[(o?a+48|0:a+52|0)>>2]|0;d=b;b=k[(m?b+48|0:b+52|0)>>2]|0;do if(!(i[f>>0]|0)){c=yC(k[n>>2]|0,a)|0;if(+p[a+8>>3]==+p[f+16>>3]){q=(k[f+32>>2]|0)==1;g=(VC(k[g+32>>2]|0,k[f+40>>2]|0,k[d+40>>2]|0)|0)!=0;h=k[c+32>>2]|0;if(q){d=k[b+40>>2]|0;f=k[a+40>>2]|0;if(g){TC(h,d,f);break}else{TC(h,f,d);break}}else{d=k[a+40>>2]|0;f=k[b+40>>2]|0;if(g){TC(h,d,f);break}else{TC(h,f,d);break}}}else{q=(k[f+36>>2]|0)==1;g=(VC(k[g+32>>2]|0,k[f+40>>2]|0,k[d+40>>2]|0)|0)!=0;h=k[c+32>>2]|0;if(q){d=k[a+40>>2]|0;f=k[b+40>>2]|0;if(g){TC(h,d,f);break}else{TC(h,f,d);break}}else{d=k[b+40>>2]|0;f=k[a+40>>2]|0;if(g){TC(h,d,f);break}else{TC(h,f,d);break}}}}else{c=yC(k[l>>2]|0,a)|0;if(+p[a+8>>3]==+p[f+16>>3]){q=(k[f+32>>2]|0)==2;g=(VC(k[g+32>>2]|0,k[f+40>>2]|0,k[d+40>>2]|0)|0)!=0;h=k[c+32>>2]|0;if(q){d=k[a+40>>2]|0;f=k[b+40>>2]|0;if(g){TC(h,d,f);break}else{TC(h,f,d);break}}else{f=k[b+40>>2]|0;d=k[a+40>>2]|0;if(g){TC(h,f,d);break}else{TC(h,d,f);break}}}else{q=(k[f+36>>2]|0)==2;g=(VC(k[g+32>>2]|0,k[f+40>>2]|0,k[d+40>>2]|0)|0)!=0;h=k[c+32>>2]|0;if(q){d=k[b+40>>2]|0;f=k[a+40>>2]|0;if(g){TC(h,d,f);break}else{TC(h,f,d);break}}else{d=k[a+40>>2]|0;f=k[b+40>>2]|0;if(g){TC(h,d,f);break}else{TC(h,f,d);break}}}}while(0);if((j|0)==(e|0))break;else{g=c;j=j+1|0}}}return}function JC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;a:do if(GC(a,b)|0){e=(c|0)==0;c=a;while(1){if(!c){c=4;break}if(!b){c=6;break}c=k[c+52>>2]|0;b=k[(e?b+48|0:b+52|0)>>2]|0;if(!(GC(c,b)|0)){f=c;g=b;break a}}if((c|0)==4)Wa(146699,146703,800,146711);else if((c|0)==6)Wa(146699,146703,800,146711)}else{f=a;g=b}while(0);if(!(i[f>>0]|0))c=yC(k[d+20>>2]|0,f)|0;else c=yC(k[d+24>>2]|0,f)|0;UC(k[c+32>>2]|0,k[f+40>>2]|0,k[g+40>>2]|0);return}function KC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=r;r=r+16|0;d=e;c=i[a>>0]|0;if(c<<24>>24==(i[b>>0]|0)?!(+p[a+8>>3]!=+p[b+8>>3]):0){if(!(c<<24>>24))c=LC(a,b,3,1)|0;else c=LC(a,b,4,2)|0;r=e;return c|0}Yr(1,146733,d)|0;Za(60204,1);return 0}function LC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0.0,h=0.0,i=0,j=0.0,l=0.0,m=0,n=0;g=+p[a+24>>3];h=+p[b+16>>3];do if(!(g<h)?(j=+p[a+16>>3],l=+p[b+24>>3],!(j>l)):0){if(h<g&j<h){e=MC(a,b,c,d)|0;break}if(h<j&j<l){e=0-(MC(b,a,c,d)|0)|0;break}if(!(j==h))if(g==h){e=k[a+36>>2]|0;if((e|0)==(k[b+32>>2]|0)){e=0;break}e=(e|0)==(d|0)?1:-1;break}else{e=k[a+32>>2]|0;if((e|0)==(k[b+36>>2]|0)){e=0;break}e=(e|0)==(d|0)?1:-1;break}if(!(g==l))if(g<l){i=(k[a+36>>2]|0)==(c|0);f=k[b+32>>2]|0;e=k[a+32>>2]|0;if((f|0)==(d|0)){e=(d|0)==0;if(e)e=0;else{e=e&1;m=41}}else m=41;if((m|0)==41)e=((f|0)!=0|(e|0)!=(c|0))<<31>>31;return (i?e:0-e|0)|0}else{i=(k[b+36>>2]|0)==(d|0);f=k[a+32>>2]|0;e=k[b+32>>2]|0;if((f|0)==(d|0)){e=(d|0)==0;if(e)e=0;else{e=e&1;m=45}}else m=45;if((m|0)==45)e=((f|0)!=0|(e|0)!=(c|0))<<31>>31;e=i?e:0-e|0;break}n=k[a+32>>2]|0;m=k[b+32>>2]|0;if((n|0)==(m|0)){e=k[b+36>>2]|0;if((k[a+36>>2]|0)==(e|0)){e=0;break}}else e=k[b+36>>2]|0;b=(m|0)==(c|0);if((m|0)==(e|0)){if(b){e=1;break}if((m|0)==(d|0)){e=-1;break}if((n|0)!=(c|0)?(k[a+36>>2]|0)!=(c|0):0){e=1;break}if((n|0)!=(d|0)?(k[a+36>>2]|0)!=(d|0):0){e=-1;break}e=0;break}f=(e|0)==(d|0);if(b&f){e=(k[a+36>>2]|0)==(d|0);if((n|0)==(c|0)){if(!e){e=-1;break}}else if(e){e=1;break}e=0;break}i=(e|0)==(c|0);if((m|0)==(d|0)&i){e=(n|0)==(d|0);if((k[a+36>>2]|0)==(c|0)){if(!e){e=-1;break}}else if(e){e=1;break}e=0;break}if(!m){if(i){e=(n|0)==(c|0)?((k[a+36>>2]|0)==(c|0))<<31>>31:1;break}if(f){e=(n|0)==(d|0)?(k[a+36>>2]|0)==(d|0)&1:-1;break}}f=k[a+36>>2]|0;if(b&(e|0)==0){e=(f|0)==(c|0)?((n|0)==(c|0))<<31>>31:1;break}else{e=(f|0)==(d|0)?(n|0)==(d|0)&1:-1;break}}else e=0;while(0);return e|0}function MC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0.0,h=0.0,i=0;g=+p[a+24>>3];h=+p[b+24>>3];do if(g<h){e=k[a+36>>2]|0;if((e|0)==(c|0)?(k[b+32>>2]|0)==(d|0):0){e=-1;break}if((e|0)==(d|0)?(k[b+32>>2]|0)==(c|0):0){e=1;break}e=0}else{e=k[b+32>>2]|0;f=(e|0)==(d|0);if(!(g==h)){if(f?(k[b+36>>2]|0)==(d|0):0){e=-1;break}if((e|0)==(c|0)?(k[b+36>>2]|0)==(c|0):0){e=1;break}e=0;break}if(f){f=k[a+36>>2]|0;e=k[b+36>>2]|0;if((f|0)==(d|0)){e=(d|0)==0;if(e){e=0;break}else e=e&1}e=((f|0)!=0|(e|0)!=(c|0))<<31>>31;break}f=k[b+36>>2]|0;e=k[a+36>>2]|0;if((f|0)==(d|0)){e=(d|0)==0;if(e)e=0;else{e=e&1;i=14}}else i=14;if((i|0)==14)e=((f|0)!=0|(e|0)!=(c|0))<<31>>31;e=0-e|0}while(0);return e|0}function NC(a,b,c){a=a|0;b=b|0;c=c|0;SC(k[b+32>>2]|0);vP(k[b+28>>2]|0);vP(b);return}function OC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0;e=+p[b>>3];f=+p[c>>3];if(!(e>f))if(e<f)a=!(+p[b+8>>3]>=+p[c+8>>3])<<31>>31;else a=0;else a=!(+p[b+8>>3]<=+p[c+8>>3])&1;return a|0}function PC(a,b,c){a=a|0;b=b|0;c=c|0;Hr(k[b+16>>2]|0)|0;vP(b);return}function QC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0;f=+p[b>>3];e=+p[c>>3];return (f>e?1:(f<e)<<31>>31)|0}function RC(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;b=By(8)|0;k[b>>2]=a;d=By(a*12|0)|0;c=b+4|0;k[c>>2]=d;if((a|0)>0){d=0;do{f=vF()|0;e=k[c>>2]|0;k[e+(d*12|0)+8>>2]=f;k[e+(d*12|0)>>2]=0;d=d+1|0}while((d|0)!=(a|0))}return b|0}function SC(a){a=a|0;var b=0,c=0;b=a+4|0;if((k[a>>2]|0)>0){c=0;do{Hr(k[(k[b>>2]|0)+(c*12|0)+8>>2]|0)|0;c=c+1|0}while((c|0)<(k[a>>2]|0))}vP(k[b>>2]|0);vP(a);return}function TC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=r;r=r+16|0;e=d;k[e>>2]=c;c=k[(k[a+4>>2]|0)+(b*12|0)+8>>2]|0;Tb[k[c>>2]&63](c,e,1)|0;r=d;return}function UC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;d=r;r=r+16|0;e=d;k[e>>2]=c;a=a+4|0;f=k[(k[a>>2]|0)+(b*12|0)+8>>2]|0;Tb[k[f>>2]&63](f,e,2)|0;k[e>>2]=b;c=k[(k[a>>2]|0)+(c*12|0)+8>>2]|0;Tb[k[c>>2]&63](c,e,2)|0;r=d;return}function VC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=r;r=r+16|0;e=d;k[e>>2]=c;c=k[(k[a+4>>2]|0)+(b*12|0)+8>>2]|0;c=(Tb[k[c>>2]&63](c,e,512)|0)!=0&1;r=d;return c|0}function WC(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0;b=k[a>>2]|0;switch(b|0){case 0:break;case 1:{k[(k[a+4>>2]|0)+4>>2]=0;break}default:{g=By(8)|0;b=By(b<<2)|0;f=g+4|0;k[f>>2]=b;k[g>>2]=-1;b=k[a>>2]|0;a:do if((b|0)>0){e=a+4|0;d=0;c=0;do{if(!(k[(k[e>>2]|0)+(d*12|0)>>2]|0)){c=XC(a,d,c,g)|0;b=k[a>>2]|0}d=d+1|0}while((d|0)<(b|0));c=k[g>>2]|0;if((c|0)!=-1){b=k[f>>2]|0;a=a+4|0;f=0;while(1){e=k[b+(c<<2)>>2]|0;d=c;c=c+-1|0;k[g>>2]=c;if((e|0)<=-1)break a;k[(k[a>>2]|0)+(e*12|0)+4>>2]=f;if(!d)break;else f=f+1|0}}else h=6}else h=6;while(0);if((h|0)==6)b=k[f>>2]|0;vP(b);vP(g)}}return}function XC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;h=a+4|0;e=k[h>>2]|0;i=e+(b*12|0)|0;k[i>>2]=1;e=k[e+(b*12|0)+8>>2]|0;c=c+1|0;f=Jr(e)|0;if(f){g=e+4|0;do{e=k[(k[g>>2]|0)+8>>2]|0;if((e|0)<0)e=k[f+8>>2]|0;else e=f+(0-e)|0;e=k[e>>2]|0;if(!(k[(k[h>>2]|0)+(e*12|0)>>2]|0))c=XC(a,e,c,d)|0;f=k[f>>2]|0}while((f|0)!=0)}k[i>>2]=2;i=(k[d>>2]|0)+1|0;k[d>>2]=i;k[(k[d+4>>2]|0)+(i<<2)>>2]=b;return c+1|0}function YC(a){a=a|0;var b=0,c=0;c=k[a>>2]|0;k[a+8>>2]=c;k[a+12>>2]=k[a+4>>2];if((c|0)>0){a=k[a+16>>2]|0;b=0;do{j[a+(b*40|0)+18>>1]=j[a+(b*40|0)+16>>1]|0;b=b+1|0}while((b|0)<(c|0))}return}function ZC(a){a=a|0;var b=0,c=0,d=0,e=0;e=k[a+8>>2]|0;k[a>>2]=e;k[a+4>>2]=k[a+12>>2];if((e|0)>0){b=k[a+16>>2]|0;c=(e|0)>1;d=0;do{j[b+(d*40|0)+16>>1]=j[b+(d*40|0)+18>>1]|0;d=d+1|0}while((d|0)<(e|0));b=c?e:1}else b=0;if((b|0)<(e+2|0)){d=k[a+16>>2]|0;c=e+1|0;while(1){j[d+(b*40|0)+16>>1]=0;if((b|0)<(c|0))b=b+1|0;else break}}return}function _C(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;d=By(((k[a>>2]|0)*6|0)+(b<<1)<<2)|0;h=By((((k[a>>2]|0)*3|0)+b|0)*24|0)|0;k[a+20>>2]=h;h=k[a>>2]|0;if((h|0)>0){f=k[a+16>>2]|0;c=(h|0)>1?h:1;g=d+(c*24|0)|0;e=0;while(1){k[f+(e*40|0)+28>>2]=d;e=e+1|0;if((e|0)>=(h|0))break;else d=d+24|0}d=g}else c=0;if((c|0)<(h+2|0)){f=k[a+16>>2]|0;e=h+1|0;while(1){k[f+(c*40|0)+28>>2]=d;if((c|0)<(e|0)){d=d+(b<<2)|0;c=c+1|0}else break}}return}function $C(a){a=a|0;var b=0;b=By(24)|0;k[b>>2]=0;a=By(a*40|0)|0;k[b+16>>2]=a;return b|0}function aD(a){a=a|0;var b=0,c=0;c=k[a+16>>2]|0;b=k[a>>2]|0;k[c+(b*40|0)+32>>2]=b;k[a>>2]=b+1;return c+(b*40|0)|0}function bD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;var e=0,f=0,g=0;e=a+4|0;f=k[e>>2]|0;k[e>>2]=f+1;e=k[a+20>>2]|0;a=e+(f*24|0)|0;k[e+(f*24|0)+12>>2]=k[b+32>>2];k[e+(f*24|0)+16>>2]=k[c+32>>2];p[a>>3]=d;k[e+(f*24|0)+8>>2]=0;e=b+16|0;g=j[e>>1]|0;k[(k[b+28>>2]|0)+(g<<16>>16<<2)>>2]=f;j[e>>1]=g+1<<16>>16;b=c+16|0;e=j[b>>1]|0;k[(k[c+28>>2]|0)+(e<<16>>16<<2)>>2]=f;j[b>>1]=e+1<<16>>16;return a|0}function cD(a){a=a|0;var b=0;b=a+16|0;vP(k[(k[b>>2]|0)+28>>2]|0);vP(k[b>>2]|0);vP(k[a+20>>2]|0);vP(a);return}function dD(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,l=0,m=0,n=0,o=0,q=0;d=k[a>>2]|0;if((d|0)>0){e=k[a+16>>2]|0;f=0;do{k[e+(f*40|0)>>2]=-2147483648;f=f+1|0}while((f|0)<(d|0))}DF();a:do if(!(GF(b)|0)){k[b+8>>2]=0;k[b>>2]=0;d=IF()|0;if(!d)d=0;else{q=a+20|0;o=a+16|0;while(1){k[d>>2]=0-(k[d>>2]|0);if((d|0)==(c|0)){d=0;break a}g=d+16|0;if((j[g>>1]|0)>0){h=d+28|0;i=d+32|0;n=0;do{e=k[(k[h>>2]|0)+(n<<2)>>2]|0;b=k[q>>2]|0;l=b+(e*24|0)|0;f=k[b+(e*24|0)+12>>2]|0;m=k[o>>2]|0;if((f|0)==(k[i>>2]|0))f=k[b+(e*24|0)+16>>2]|0;e=m+(f*40|0)|0;b=k[e>>2]|0;do if((b|0)<0){a=~~-(+(k[d>>2]|0)+ +p[l>>3]);if((b|0)==-2147483648){k[e>>2]=a;if(GF(e)|0){d=1;break a}k[m+(f*40|0)+8>>2]=d;k[m+(f*40|0)+12>>2]=l;break}else{if((b|0)>=(a|0))break;JF(e,a);k[m+(f*40|0)+8>>2]=d;k[m+(f*40|0)+12>>2]=l;break}}while(0);n=n+1|0}while((n|0)<(j[g>>1]|0))}d=IF()|0;if(!d){d=0;break}}}}else d=1;while(0);return d|0}function eD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;c=k[a>>2]|0;uE(c,3,b)|0;b=k[c+92>>2]|0;do if(b){f=k[b+16>>2]|0;g=k[f+12>>2]|0;k[a+76>>2]=g;e=k[f+16>>2]|0;k[a+84>>2]=e;f=k[f>>2]|0;k[a+80>>2]=f;k[a+88>>2]=k[b+4>>2];d=a+152|0;e=k[d>>2]|k[e>>2];k[d>>2]=e;b=k[c+80>>2]|0;if(!b){k[a+60>>2]=0;b=999;break}c=k[b+16>>2]|0;k[a+60>>2]=k[c+12>>2];h=k[c+16>>2]|0;k[a+68>>2]=h;k[a+72>>2]=k[b+4>>2];k[d>>2]=e|k[h>>2];if(!g){k[a+64>>2]=f;b=300;break}else{k[a+64>>2]=k[c>>2];b=300;break}}else b=999;while(0);return b|0}function fD(a){a=a|0;var b=0,c=0;b=k[a+60>>2]|0;if(!(Pv(a)|0))if((b|0)!=0?(c=k[b>>2]|0,(c|0)!=0):0){Nb[c&127](a);b=0}else b=0;else b=1;return b|0}function gD(a){a=a|0;var b=0,c=0;b=k[a+60>>2]|0;if((b|0)!=0?(c=k[b+4>>2]|0,(c|0)!=0):0)Nb[c&127](a);k[(k[a>>2]|0)+24>>2]=0;Vv(a);return}function hD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0.0,g=0.0,h=0.0,i=0.0,j=0.0;f=+p[a+504>>3];h=+p[a+512>>3];g=+p[a+352>>3];i=g*+p[a+520>>3];g=g*+p[a+528>>3];e=(d|0)>0;if(!(k[a+360>>2]|0)){if(e){e=0;do{p[c+(e<<4)>>3]=i*(f+ +p[b+(e<<4)>>3]);p[c+(e<<4)+8>>3]=g*(h+ +p[b+(e<<4)+8>>3]);e=e+1|0}while((e|0)!=(d|0))}}else if(e){e=0;do{j=-(i*(h+ +p[b+(e<<4)+8>>3]));p[c+(e<<4)+8>>3]=g*(f+ +p[b+(e<<4)>>3]);p[c+(e<<4)>>3]=j;e=e+1|0}while((e|0)!=(d|0))}return c|0}function iD(a,b){a=a|0;b=b|0;var c=0;b=k[a+60>>2]|0;if((b|0)!=0?(c=k[b+8>>2]|0,(c|0)!=0):0)Nb[c&127](a);return}function jD(a){a=a|0;var b=0,c=0;b=k[a+60>>2]|0;if((b|0)!=0?(c=k[b+12>>2]|0,(c|0)!=0):0)Nb[c&127](a);Uv(a);return}function kD(a){a=a|0;var b=0,c=0;b=k[a+60>>2]|0;if((b|0)!=0?(c=k[b+24>>2]|0,(c|0)!=0):0)Nb[c&127](a);return}function lD(a){a=a|0;var b=0,c=0;b=k[a+60>>2]|0;if((b|0)!=0?(c=k[b+28>>2]|0,(c|0)!=0):0)Nb[c&127](a);return}function mD(a){a=a|0;var b=0,c=0;b=k[a+60>>2]|0;if((b|0)!=0?(c=k[b+16>>2]|0,(c|0)!=0):0){b=k[a+160>>2]|0;hc[c&31](a,k[(k[(k[a>>2]|0)+308>>2]|0)+(b<<2)>>2]|0,b,k[a+156>>2]|0)}return}function nD(a){a=a|0;var b=0,c=0;b=k[a+60>>2]|0;if((b|0)!=0?(c=k[b+20>>2]|0,(c|0)!=0):0)Nb[c&127](a);return}function oD(a,b){a=a|0;b=b|0;var c=0;b=k[a+60>>2]|0;if((b|0)!=0?(c=k[b+32>>2]|0,(c|0)!=0):0)Nb[c&127](a);return}function pD(a,b){a=a|0;b=b|0;var c=0;b=k[a+60>>2]|0;if((b|0)!=0?(c=k[b+36>>2]|0,(c|0)!=0):0)Nb[c&127](a);return}function qD(a){a=a|0;var b=0,c=0;b=k[a+60>>2]|0;if((b|0)!=0?(c=k[b+40>>2]|0,(c|0)!=0):0)Nb[c&127](a);return}function rD(a){a=a|0;var b=0,c=0;b=k[a+60>>2]|0;if((b|0)!=0?(c=k[b+44>>2]|0,(c|0)!=0):0)Nb[c&127](a);return}function sD(a){a=a|0;var b=0,c=0;b=k[a+60>>2]|0;if((b|0)!=0?(c=k[b+48>>2]|0,(c|0)!=0):0)Nb[c&127](a);return}function tD(a){a=a|0;var b=0,c=0;b=k[a+60>>2]|0;if((b|0)!=0?(c=k[b+52>>2]|0,(c|0)!=0):0)Nb[c&127](a);return}function uD(a,b){a=a|0;b=b|0;var c=0;b=k[a+60>>2]|0;if((b|0)!=0?(c=k[b+56>>2]|0,(c|0)!=0):0)Nb[c&127](a);return}function vD(a){a=a|0;var b=0,c=0;b=k[a+60>>2]|0;if((b|0)!=0?(c=k[b+60>>2]|0,(c|0)!=0):0)Nb[c&127](a);return}function wD(a,b){a=a|0;b=b|0;var c=0;b=k[a+60>>2]|0;if((b|0)!=0?(c=k[b+64>>2]|0,(c|0)!=0):0)Nb[c&127](a);return}function xD(a){a=a|0;var b=0,c=0;b=k[a+60>>2]|0;if((b|0)!=0?(c=k[b+68>>2]|0,(c|0)!=0):0)Nb[c&127](a);return}function yD(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;f=k[a+60>>2]|0;if((f|0)!=0?(g=k[f+72>>2]|0,(g|0)!=0):0)Mb[g&31](a,b,c,d,e);return}function zD(a){a=a|0;var b=0,c=0;b=k[a+60>>2]|0;if((b|0)!=0?(c=k[b+76>>2]|0,(c|0)!=0):0)Nb[c&127](a);return}function AD(a,b){a=a|0;b=b|0;var c=0,d=0;c=k[a+60>>2]|0;if((c|0)!=0?(d=k[c+80>>2]|0,(d|0)!=0):0)Pb[d&31](a,b);return}function BD(a){a=a|0;var b=0,c=0;b=k[a+60>>2]|0;if((b|0)!=0?(c=k[b+84>>2]|0,(c|0)!=0):0)Nb[c&127](a);return}function CD(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,g=0.0,h=0.0,j=0.0,l=0,m=0,n=0,o=0,q=0,s=0;q=r;r=r+32|0;o=q+16|0;n=q;l=k[a+60>>2]|0;s=k[c>>2]|0;do if((s|0)!=0?(i[s>>0]|0)!=0:0){s=k[a+16>>2]|0;if((s|0)!=0?(k[s+144>>2]|0)==0:0)break;if(!(k[a+152>>2]&8192)){h=+p[b>>3];d=+p[b+8>>3];e=+p[a+504>>3];f=+p[a+512>>3];j=+p[a+352>>3];if(!(k[a+360>>2]|0)){g=h+e;d=d+f}else{g=-(d+f);d=h+e}h=j*+p[a+528>>3]*d;p[n>>3]=j*+p[a+520>>3]*g;p[n+8>>3]=h}else{k[n>>2]=k[b>>2];k[n+4>>2]=k[b+4>>2];k[n+8>>2]=k[b+8>>2];k[n+12>>2]=k[b+12>>2]}if((l|0)!=0?(m=k[l+88>>2]|0,(m|0)!=0):0){k[o>>2]=k[n>>2];k[o+4>>2]=k[n+4>>2];k[o+8>>2]=k[n+8>>2];k[o+12>>2]=k[n+12>>2];dc[m&127](a,o,c)}}while(0);r=q;return}function DD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;c=k[a+60>>2]|0;e=(k[a+16>>2]|0)+16|0;g=oO(b,58)|0;f=(g|0)!=0;if(f)i[g>>0]=0;if((c|0)!=0?(PD(k[a+68>>2]|0,b,e),d=k[c+92>>2]|0,(d|0)!=0):0)Pb[d&31](a,e);if(f)i[g>>0]=58;return}function ED(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;c=k[a+60>>2]|0;e=(k[a+16>>2]|0)+56|0;g=oO(b,58)|0;f=(g|0)!=0;if(f)i[g>>0]=0;if((c|0)!=0?(PD(k[a+68>>2]|0,b,e),d=k[c+92>>2]|0,(d|0)!=0):0)Pb[d&31](a,e);if(f)i[g>>0]=58;return}function FD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;var e=0,f=0,g=0,h=0;e=k[a+60>>2]|0;f=a+16|0;g=(k[f>>2]|0)+96|0;if((e|0)!=0?(PD(k[a+68>>2]|0,b,g),h=k[e+92>>2]|0,(h|0)!=0):0)Pb[h&31](a,g);b=k[f>>2]|0;k[b+136>>2]=c;o[b+140>>2]=d;return}function GD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0.0;j=r;r=r+16|0;g=j;f=k[a+60>>2]|0;a=k[a+16>>2]|0;k[a+160>>2]=b;a:do if((b|0)!=0&(f|0)!=0?(c=k[b>>2]|0,(c|0)!=0):0){f=a+144|0;e=a+152|0;d=a+148|0;a=c;while(1){b=b+4|0;b:do switch(i[a>>0]|0){case 115:{if(!(qO(a,146910)|0)){k[f>>2]=3;break b}if(!(qO(a,146931)|0)){c=a+1|0;while(1){a=c+1|0;if(!(i[c>>0]|0))break;else c=a}l=+aO(a);p[e>>3]=l}else h=26;break}case 100:{if(!(qO(a,173814)|0)){k[f>>2]=1;break b}if(!(qO(a,173821)|0))k[f>>2]=2;else h=26;break}case 105:{if((qO(a,170360)|0)!=0?(qO(a,146916)|0)!=0:0){h=26;break b}k[f>>2]=0;break}case 98:{if(!(qO(a,146926)|0))p[e>>3]=2.0;else h=26;break}case 102:{if(!(qO(a,146944)|0))k[d>>2]=1;else h=26;break}case 117:{if(!(qO(a,146951)|0))k[d>>2]=0;else h=26;break}case 116:{if(qO(a,146960)|0)h=26;break}default:h=26}while(0);if((h|0)==26){h=0;k[g>>2]=a;Yr(0,146968,g)|0}a=k[b>>2]|0;if(!a)break a}}while(0);r=j;return}function HD(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;f=r;r=r+32|0;e=f;c=k[a+60>>2]|0;if(((c|0)!=0?(g=c+96|0,(k[g>>2]|0)!=0):0)?(k[(k[a+16>>2]|0)+144>>2]|0)!=0:0){c=b+16|0;p[e>>3]=(+p[b>>3]+ +p[c>>3])*.5;p[e+8>>3]=(+p[b+8>>3]+ +p[b+24>>3])*.5;b=e+16|0;k[b>>2]=k[c>>2];k[b+4>>2]=k[c+4>>2];k[b+8>>2]=k[c+8>>2];k[b+12>>2]=k[c+12>>2];if(!(k[a+152>>2]&8192))hD(a,e,e,2)|0;dc[k[g>>2]&127](a,e,d)}r=f;return}function ID(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0;n=r;r=r+48|0;m=n;e=k[a+60>>2]|0;if(((e|0)!=0?(j=e+100|0,(k[j>>2]|0)!=0):0)?(l=a+16|0,i=k[l>>2]|0,(k[i+144>>2]|0)!=0):0){if(!(d&4))f=0;else{d=d&-5;e=i+16|0;f=m;g=e;h=f+40|0;do{k[f>>2]=k[g>>2];f=f+4|0;g=g+4|0}while((f|0)<(h|0));f=e;g=i+56|0;h=f+40|0;do{k[f>>2]=k[g>>2];f=f+4|0;g=g+4|0}while((f|0)<(h|0));f=1}if(!(k[a+152>>2]&8192)){if((k[15102]|0)<(c|0)){e=c+10|0;k[15102]=e;e=Ey(k[15103]|0,e<<4)|0;k[15103]=e}else e=k[15103]|0;hD(a,b,e,c)|0;hc[k[j>>2]&31](a,k[15103]|0,c,d)}else hc[k[j>>2]&31](a,b,c,d);if(f){f=(k[l>>2]|0)+16|0;g=m;h=f+40|0;do{k[f>>2]=k[g>>2];f=f+4|0;g=g+4|0}while((f|0)<(h|0))}}r=n;return}function JD(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;d=r;r=r+64|0;e=d;k[e>>2]=k[b>>2];k[e+4>>2]=k[b+4>>2];k[e+8>>2]=k[b+8>>2];k[e+12>>2]=k[b+12>>2];f=e+32|0;b=b+16|0;k[f>>2]=k[b>>2];k[f+4>>2]=k[b+4>>2];k[f+8>>2]=k[b+8>>2];k[f+12>>2]=k[b+12>>2];p[e+16>>3]=+p[e>>3];p[e+24>>3]=+p[e+40>>3];p[e+48>>3]=+p[f>>3];p[e+56>>3]=+p[e+8>>3];ID(a,e,4,c);r=d;return}function KD(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;g=k[a+60>>2]|0;do if(((g|0)!=0?(i=g+104|0,h=k[i>>2]|0,(h|0)!=0):0)?(k[(k[a+16>>2]|0)+144>>2]|0)!=0:0){if(k[a+152>>2]&8192){Ub[h&15](a,b,c,d,e,f&255);break}if((k[15102]|0)<(c|0)){g=c+10|0;k[15102]=g;g=Ey(k[15103]|0,g<<4)|0;k[15103]=g}else g=k[15103]|0;hD(a,b,g,c)|0;Ub[k[i>>2]&15](a,k[15103]|0,c,d,e,f&255)}while(0);return}function LD(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;d=k[a+60>>2]|0;do if(((d|0)!=0?(f=d+108|0,e=k[f>>2]|0,(e|0)!=0):0)?(k[(k[a+16>>2]|0)+144>>2]|0)!=0:0){if(k[a+152>>2]&8192){dc[e&127](a,b,c);break}if((k[15102]|0)<(c|0)){d=c+10|0;k[15102]=d;d=Ey(k[15103]|0,d<<4)|0;k[15103]=d}else d=k[15103]|0;hD(a,b,d,c)|0;dc[k[f>>2]&127](a,k[15103]|0,c)}while(0);return}function MD(a,b){a=a|0;b=b|0;var c=0,d=0;c=k[a+60>>2]|0;if(((b|0)!=0?(c|0)!=0&(i[b>>0]|0)!=0:0)?(d=k[c+112>>2]|0,(d|0)!=0):0)Pb[d&31](a,b);return}function ND(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0.0,h=0.0,j=0,l=0,m=0.0,n=0.0,o=0.0,q=0.0,s=0.0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;C=r;r=r+80|0;B=C+32|0;A=C;l=C+64|0;y=k[a+60>>2]|0;if(!a)Wa(147174,147021,698,147032);if(!b)Wa(147051,147021,699,147032);if(!(i[b>>0]|0))Wa(147056,147021,700,147032);z=$v(b)|0;if(!z){if((y|0)!=0&(Sz(b)|0)!=0?(j=k[y+116>>2]|0,(j|0)!=0):0)Mb[j&31](a,b,c,d,e&255)}else{w=a+432|0;k[B>>2]=k[w>>2];k[B+4>>2]=k[w+4>>2];k[B+8>>2]=k[w+8>>2];k[B+12>>2]=k[w+12>>2];cw(l,z,B);w=k[l>>2]|0;v=k[l+4>>2]|0;if(!((w|0)<1&(v|0)<1)){u=A+16|0;k[u>>2]=k[c>>2];k[u+4>>2]=k[c+4>>2];k[u+8>>2]=k[c+8>>2];k[u+12>>2]=k[c+12>>2];k[A>>2]=k[c>>2];k[A+4>>2]=k[c+4>>2];k[A+8>>2]=k[c+8>>2];k[A+12>>2]=k[c+12>>2];if((d|0)>1){l=A+8|0;b=A+24|0;n=+p[u>>3];h=+p[A>>3];g=+p[l>>3];m=+p[b>>3];j=1;do{s=+p[c+(j<<4)>>3];h=h<s?h:s;t=+p[c+(j<<4)+8>>3];g=g<t?g:t;n=n>s?n:s;m=m>t?m:t;j=j+1|0}while((j|0)!=(d|0));p[A>>3]=h;p[l>>3]=g;p[u>>3]=n;p[b>>3]=m;d=A;x=b;c=u}else{j=A+24|0;b=A+8|0;d=A;x=j;l=b;c=u;n=+p[u>>3];h=+p[A>>3];m=+p[j>>3];g=+p[b>>3]}q=n-h;o=m-g;h=+(v|0);g=+(w|0);m=q/g;n=o/h;do if(i[f>>0]|0){if(!(mO(f,177253)|0)){g=g*m;break}if(!(mO(f,177185)|0)){h=h*n;break}if(!(mO(f,147064)|0)){h=h*n;g=g*m;break}if((oB(f)|0)<<24>>24)if(m<n){h=h*m;g=g*m;break}else{h=h*n;g=g*n;break}}while(0);if(g<q){t=(q-g)*.5;p[d>>3]=t+ +p[d>>3];p[c>>3]=+p[c>>3]-t}if(h<o){t=(o-h)*.5;p[l>>3]=t+ +p[l>>3];p[x>>3]=+p[x>>3]-t}g=+p[d>>3];if(!(k[a+152>>2]&8192)){h=+p[l>>3];o=+p[a+504>>3];q=+p[a+512>>3];t=+p[a+352>>3];s=t*+p[a+520>>3];t=t*+p[a+528>>3];b=(k[a+360>>2]|0)==0;if(b){m=g+o;h=h+q}else{m=-(h+q);h=g+o}g=s*m;p[d>>3]=g;p[l>>3]=t*h;j=A+16|0;h=+p[j>>3];n=+p[x>>3];if(b){m=h+o;h=n+q}else{m=-(n+q);h=h+o}s=s*m;p[j>>3]=s;p[x>>3]=t*h;h=s}else h=+p[c>>3];if(g>h){p[d>>3]=h;p[c>>3]=g}g=+p[l>>3];h=+p[x>>3];if(g>h){p[l>>3]=h;p[x>>3]=g}if(y){y=k[a+72>>2]|0;k[B>>2]=k[A>>2];k[B+4>>2]=k[A+4>>2];k[B+8>>2]=k[A+8>>2];k[B+12>>2]=k[A+12>>2];k[B+16>>2]=k[A+16>>2];k[B+20>>2]=k[A+20>>2];k[B+24>>2]=k[A+24>>2];k[B+28>>2]=k[A+28>>2];TD(a,z,B,e,y)}}}r=C;return}function OD(a,b){a=a|0;b=+b;if(k[a+60>>2]|0)p[(k[a+16>>2]|0)+152>>3]=b;return}function PD(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;j=r;r=r+32|0;f=j+16|0;i=j+8|0;h=j;e=j+20|0;k[c>>2]=b;k[c+32>>2]=5;d=OE(b)|0;k[e>>2]=d;d=k[a+16>>2]|0;if(!((d|0)!=0?(cO(e,d,k[a+20>>2]|0,4,105)|0)!=0:0))g=3;a:do if((g|0)==3){switch(PE(b,c,k[a+24>>2]|0)|0){case 0:break a;case 1:break;default:{Yr(1,147104,f)|0;break a}}d=Cy((uO(b)|0)+16|0)|0;k[h>>2]=b;TN(d,147069,h)|0;if(zx(d)|0){k[i>>2]=b;Yr(0,147078,i)|0}vP(d)}while(0);r=j;return}function QD(a,b){a=a|0;b=b|0;return qO(k[a>>2]|0,k[b>>2]|0)|0}function RD(a,b){a=a|0;b=b|0;b=uE(a,1,b)|0;if(!b)b=999;else{b=k[b+16>>2]|0;k[a+184>>2]=k[b+4>>2];k[a+172>>2]=k[b+12>>2];k[a+176>>2]=k[b>>2];k[a+180>>2]=k[b+16>>2];b=300}return b|0}function SD(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;h=r;r=r+16|0;e=h;qu(b,173447,280,1)|0;f=b+8|0;k[(k[f>>2]|0)+144>>2]=a;if((au(b)|0)!=(b|0)){d=(au(b)|0)+8|0;k[(k[d>>2]|0)+144>>2]=a}d=ss(b,147447)|0;c=a+172|0;if((d|0)!=0?(k[c>>2]=0,(RD(a,d)|0)==999):0){c=vE(a,1,d)|0;k[e>>2]=d;k[e+4>>2]=c;Yr(1,147125,e)|0;c=-1}else{d=k[c>>2]|0;if(!d)c=-1;else{Dx(1);ky(b,k[k[a+180>>2]>>2]&1);a=k[(k[f>>2]|0)+8>>2]|0;c=(au(b)|0)+8|0;k[(k[c>>2]|0)+8>>2]=a;c=k[d>>2]|0;if((c|0)!=0?(Nb[c&127](b),g=k[d+4>>2]|0,(g|0)!=0):0)k[(k[f>>2]|0)+148>>2]=g;Dx(0);c=0}}r=h;return c|0}function TD(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,l=0,m=0;m=r;r=r+176|0;l=m+8|0;h=m;g=m+40|0;if(!a)Wa(147174,147178,54,147192);if(!b)Wa(147204,147178,55,147192);f=k[b+8>>2]|0;if(!f)Wa(147207,147178,56,147192);if(!(i[f>>0]|0))Wa(147216,147178,57,147192);rO(g,k[b+28>>2]|0)|0;f=g+(uO(g)|0)|0;i[f>>0]=58;i[f+1>>0]=0;nO(g,e)|0;f=uE(k[a>>2]|0,4,g)|0;if(!f){k[h>>2]=g;Yr(0,147228,h)|0;f=k[a+92>>2]|0}else{h=k[f+16>>2]|0;f=k[h+12>>2]|0;k[a+92>>2]=f;k[a+96>>2]=k[h>>2]}if((f|0)!=0?(j=k[f>>2]|0,(j|0)!=0):0){k[l>>2]=k[c>>2];k[l+4>>2]=k[c+4>>2];k[l+8>>2]=k[c+8>>2];k[l+12>>2]=k[c+12>>2];k[l+16>>2]=k[c+16>>2];k[l+20>>2]=k[c+20>>2];k[l+24>>2]=k[c+24>>2];k[l+28>>2]=k[c+28>>2];hc[j&31](a,b,l,d)}r=m;return}function UD(a,b){a=a|0;b=b|0;var c=0;c=By(392)|0;if(c){k[c>>2]=60416;k[c+16>>2]=27;k[c+32>>2]=a;k[c+36>>2]=b}return c|0}function VD(a,b){a=a|0;b=b|0;var c=0,d=0;c=a+160|0;d=k[c>>2]|0;do if(!d){d=By(632)|0;k[c>>2]=d;k[a+164>>2]=d;k[15107]=d;c=d}else{c=k[15107]|0;if(!c){k[15107]=d;c=d;break}if(!(k[c+4>>2]|0)){c=By(632)|0;k[(k[15107]|0)+4>>2]=c;c=k[15107]|0}c=k[c+4>>2]|0;k[15107]=c}while(0);k[c+32>>2]=b;k[k[15107]>>2]=a;return}function WD(a,b){a=a|0;b=b|0;var c=0,d=0;c=a+160|0;d=k[c>>2]|0;do if(!d){d=By(632)|0;k[c>>2]=d;k[a+164>>2]=d;k[15108]=d;c=d}else{c=k[15108]|0;if(!c){k[15108]=d;c=d;break}if(!(k[c+4>>2]|0)){c=By(632)|0;k[(k[15108]|0)+4>>2]=c;c=k[15108]|0}c=k[c+4>>2]|0;k[15108]=c}while(0);k[c+52>>2]=b;k[k[15108]>>2]=a;return (uE(a,3,b)|0)!=0|0}function XD(a){a=a|0;var b=0;b=k[a+160>>2]|0;k[a+164>>2]=b;return b|0}function YD(a){a=a|0;var b=0,c=0,d=0;a=a+164|0;b=k[a>>2]|0;c=k[b+4>>2]|0;if((c|0)!=0?(d=c+52|0,(k[d>>2]|0)==0):0)k[d>>2]=k[b+52>>2];k[a>>2]=c;return c|0}function ZD(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=a+8|0;if((k[d>>2]|0)>(b|0))d=k[a>>2]|0;else{e=b+10|0;k[d>>2]=e;d=Ey(k[a>>2]|0,e<<2)|0;k[a>>2]=d}k[d+(b<<2)>>2]=c;return}function _D(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;f=a+160|0;b=k[f>>2]|0;if(b)do{e=b;b=k[b+4>>2]|0;c=e+604|0;d=k[c>>2]|0;if(d)vP(d);k[c>>2]=0;k[e+612>>2]=0;k[e+608>>2]=0;c=e+592|0;d=k[c>>2]|0;if(d)vP(d);k[c>>2]=0;k[e+600>>2]=0;k[e+596>>2]=0;c=k[e+584>>2]|0;if(c)vP(c);c=k[e+588>>2]|0;if(c)vP(c);vP(e)}while((b|0)!=0);k[15108]=0;k[15107]=0;k[a+192>>2]=0;k[a+164>>2]=0;k[f>>2]=0;k[a+28>>2]=0;return}function $D(a){a=a|0;return 1}function aE(a){a=a|0;var b=0;i[a+536>>0]=0;b=a+336|0;p[b>>3]=10.0/+p[a+352>>3]+ +p[b>>3];i[a+537>>0]=1;return 0}function bE(a){a=a|0;var b=0;i[a+536>>0]=0;b=a+336|0;p[b>>3]=+p[b>>3]-10.0/+p[a+352>>3];i[a+537>>0]=1;return 0}function cE(a){a=a|0;var b=0;i[a+536>>0]=0;b=a+344|0;p[b>>3]=+p[b>>3]-10.0/+p[a+352>>3];i[a+537>>0]=1;return 0}function dE(a){a=a|0;var b=0;i[a+536>>0]=0;b=a+344|0;p[b>>3]=10.0/+p[a+352>>3]+ +p[b>>3];i[a+537>>0]=1;return 0}function eE(a){a=a|0;var b=0;i[a+536>>0]=0;b=a+352|0;p[b>>3]=+p[b>>3]*1.1;i[a+537>>0]=1;return 0}function fE(a){a=a|0;var b=0;i[a+536>>0]=0;b=a+352|0;p[b>>3]=+p[b>>3]/1.1;i[a+537>>0]=1;return 0}function gE(a){a=a|0;var b=0,c=0,d=0.0,e=0.0;c=a+536|0;b=(i[c>>0]|0)==0;i[c>>0]=b&1;if(b){b=k[a+448>>2]|0;c=k[a+452>>2]|0;e=+(b>>>0)/+(b|0);d=+(c>>>0)/+(c|0);p[a+352>>3]=e<d?e:d;c=a+336|0;k[c>>2]=0;k[c+4>>2]=0;k[c+8>>2]=0;k[c+12>>2]=0;i[a+537>>0]=1}return 0}function hE(a){a=a|0;var b=0,c=0;b=k[(k[a>>2]|0)+168>>2]|0;c=a+580|0;if(!(k[c>>2]|0)){k[c>>2]=b;c=(k[b+8>>2]|0)+112|0;i[c>>0]=l[c>>0]|0|2;sE(a,b)}yx(a,b);i[a+540>>0]=1;return}function iE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0.0,g=0.0,h=0,j=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0;v=r;r=r+16|0;e=v;switch(b|0){case 1:{k[e>>2]=k[c>>2];k[e+4>>2]=k[c+4>>2];k[e+8>>2]=k[c+8>>2];k[e+12>>2]=k[c+12>>2];qE(a,e);e=a+580|0;b=k[e>>2]|0;a:do if(b)switch(ku(b)|0){case 0:{u=(k[b+8>>2]|0)+112|0;i[u>>0]=(l[u>>0]|0)&249|4;break a}case 1:{u=(k[b+8>>2]|0)+117|0;i[u>>0]=(l[u>>0]|0)&249|4;break a}case 2:{u=(k[b+8>>2]|0)+115|0;i[u>>0]=(l[u>>0]|0)&249|4;break a}default:break a}while(0);u=a+588|0;b=k[u>>2]|0;if(b){vP(b);k[u>>2]=0}t=k[a+576>>2]|0;k[e>>2]=t;b:do if(t)switch(ku(t)|0){case 0:{u=(k[t+8>>2]|0)+112|0;i[u>>0]=l[u>>0]|0|2;sE(a,t);break b}case 1:{j=(k[t+8>>2]|0)+117|0;i[j>>0]=l[j>>0]|0|2;j=a+592|0;ZD(j,0,147381);ZD(j,1,ht(t)|0);k[a+596>>2]=2;j=a+604|0;m=au($t(t)|0)|0;b=ls(m,1,0)|0;if(!b)b=2;else{e=b;h=2;while(1){ZD(j,h,k[e+8>>2]|0);b=h+2|0;ZD(j,h|1,ts(t,e)|0);e=ls(m,1,e)|0;if(!e)break;else h=b}}k[a+608>>2]=b;b=ks($t(t)|0,1,177192,0)|0;if(!b){b=ks($t(t)|0,1,147386,0)|0;if(!b)break b}t=uy(ts(t,b)|0,t)|0;k[u>>2]=t;break b}case 2:{o=(k[t+8>>2]|0)+115|0;i[o>>0]=l[o>>0]|0|2;o=a+592|0;ZD(o,0,147390);q=t+32|0;ZD(o,1,ht(k[((k[t>>2]&3|0)==3?t:q)+28>>2]|0)|0);q=(at($t(k[((k[t>>2]&3|0)==3?t:q)+28>>2]|0)|0)|0)!=0;ZD(o,3,q?173460:176693);q=t+-32|0;ZD(o,4,ht(k[((k[t>>2]&3|0)==2?t:q)+28>>2]|0)|0);k[a+596>>2]=7;m=a+604|0;n=au($t(k[((k[t>>2]&3|0)==2?t:q)+28>>2]|0)|0)|0;b=ls(n,2,0)|0;c:do if(!b)b=7;else{e=b;j=7;while(1){while(1){b=e+8|0;h=k[b>>2]|0;if(!(qO(h,147395)|0)){s=20;break}if(!(qO(h,147404)|0)){s=22;break}if(qO(h,147413)|0)break;ZD(o,6,ts(t,e)|0);e=ls(n,2,e)|0;if(!e){b=j;break c}}if((s|0)==20){s=0;ZD(o,2,ts(t,e)|0)}else if((s|0)==22){s=0;ZD(o,5,ts(t,e)|0)}ZD(m,j,k[b>>2]|0);b=j+2|0;ZD(m,j+1|0,ts(t,e)|0);e=ls(n,2,e)|0;if(!e)break;else j=b}}while(0);k[a+608>>2]=b;b=ks($t(k[((k[t>>2]&3|0)==2?t:q)+28>>2]|0)|0,2,177192,0)|0;if(!b){b=ks($t(k[((k[t>>2]&3|0)==2?t:q)+28>>2]|0)|0,2,147386,0)|0;if(!b)break b}t=uy(ts(t,b)|0,t)|0;k[u>>2]=t;break b}default:break b}while(0);i[a+538>>0]=1;i[a+541>>0]=1;i[a+537>>0]=1;break}case 2:{i[a+538>>0]=1;i[a+541>>0]=2;i[a+537>>0]=1;break}case 3:{k[e>>2]=k[c>>2];k[e+4>>2]=k[c+4>>2];k[e+8>>2]=k[c+8>>2];k[e+12>>2]=k[c+12>>2];qE(a,e);i[a+538>>0]=1;i[a+541>>0]=3;i[a+537>>0]=1;break}case 4:{i[a+536>>0]=0;d=+p[c>>3];b=k[a+448>>2]|0;if(!(k[a+360>>2]|0)){u=a+352|0;g=+p[u>>3];t=a+336|0;p[t>>3]=(d-+(b>>>0)*.5)*.10000000000000009/(g*+p[a+520>>3])+ +p[t>>3];b=a+344|0;p[b>>3]=(+p[c+8>>3]-+((k[a+452>>2]|0)>>>0)*.5)*.10000000000000009/(g*+p[a+528>>3])+ +p[b>>3];b=u;d=g}else{u=a+352|0;g=+p[u>>3];t=a+336|0;p[t>>3]=+p[t>>3]-(+p[c+8>>3]-+((k[a+452>>2]|0)>>>0)*.5)*.10000000000000009/(g*+p[a+528>>3]);t=a+344|0;p[t>>3]=(d-+(b>>>0)*.5)*.10000000000000009/(g*+p[a+520>>3])+ +p[t>>3];b=u;d=g}p[b>>3]=d*1.1;i[a+537>>0]=1;break}case 5:{i[a+536>>0]=0;b=a+352|0;d=+p[b>>3]/1.1;p[b>>3]=d;f=+p[c>>3];b=k[a+448>>2]|0;g=+p[a+520>>3];if(!(k[a+360>>2]|0)){u=a+336|0;p[u>>3]=+p[u>>3]-(f-+(b>>>0)*.5)*.10000000000000009/(d*g);u=a+344|0;p[u>>3]=+p[u>>3]-(+p[c+8>>3]-+((k[a+452>>2]|0)>>>0)*.5)*.10000000000000009/(d*+p[a+528>>3])}else{u=a+336|0;p[u>>3]=(+p[c+8>>3]-+((k[a+452>>2]|0)>>>0)*.5)*.10000000000000009/(d*+p[a+528>>3])+ +p[u>>3];u=a+344|0;p[u>>3]=+p[u>>3]-(f-+(b>>>0)*.5)*.10000000000000009/(d*g)}i[a+537>>0]=1;break}default:{}}a=a+560|0;k[a>>2]=k[c>>2];k[a+4>>2]=k[c+4>>2];k[a+8>>2]=k[c+8>>2];k[a+12>>2]=k[c+12>>2];r=v;return}function jE(a,b,c){a=a|0;b=b|0;c=c|0;i[a+538>>0]=0;i[a+541>>0]=0;return}function kE(a,b){a=a|0;b=b|0;var c=0.0,d=0,e=0,f=0.0,g=0.0,h=0,j=0;h=r;r=r+16|0;d=h;e=a+560|0;g=(+p[b>>3]-+p[e>>3])/+p[a+520>>3];f=(+p[b+8>>3]-+p[a+568>>3])/+p[a+528>>3];j=~~g;if(!((((j|0)>-1?j:0-j|0)|0)<1?(j=~~f,(((j|0)>-1?j:0-j|0)|0)<1):0)){switch(l[a+541>>0]|0|0){case 0:{k[d>>2]=k[b>>2];k[d+4>>2]=k[b+4>>2];k[d+8>>2]=k[b+8>>2];k[d+12>>2]=k[b+12>>2];qE(a,d);break}case 2:{c=+p[a+352>>3];if(!(k[a+360>>2]|0)){j=a+336|0;p[j>>3]=+p[j>>3]-g/c;j=a+344|0;p[j>>3]=+p[j>>3]-f/c}else{j=a+336|0;p[j>>3]=+p[j>>3]-f/c;j=a+344|0;p[j>>3]=g/c+ +p[j>>3]}i[a+537>>0]=1;break}default:{}}k[e>>2]=k[b>>2];k[e+4>>2]=k[b+4>>2];k[e+8>>2]=k[b+8>>2];k[e+12>>2]=k[b+12>>2]}r=h;return}function lE(a,b,c){a=a|0;b=b|0;c=c|0;return}function mE(a){a=a|0;return}function nE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0;j=r;r=r+16|0;d=j;g=k[a>>2]|0;if(b){d=EN(b,174924)|0;if(d){h=rv(d,0)|0;yN(d)|0;e=5}}else{k[d>>2]=k[12889];h=Vs(147372,d,0)|0;k[a+32>>2]=147374;e=5}if((e|0)==5?(h|0)!=0:0){e=g+168|0;d=k[e>>2]|0;if(d){b=k[g+172>>2]|0;if((b|0)!=0?(f=k[b+4>>2]|0,(f|0)!=0):0){Nb[f&127](d);d=k[e>>2]|0}my(d);Ys(k[e>>2]|0)|0}su(h,0,173447,280,1);su(h,1,173424,304,1);su(h,2,173717,176,1);k[e>>2]=h;k[(k[h+8>>2]|0)+144>>2]=g;if((mw(g,h,c)|0)!=-1){k[a+580>>2]=0;k[a+576>>2]=0;i[a+537>>0]=1}}r=j;return}function oE(a,b){a=a|0;b=b|0;a=k[a>>2]|0;mw(a,k[a+168>>2]|0,b)|0;return}function pE(a,b,c){a=a|0;b=b|0;c=c|0;a=k[a>>2]|0;nw(a,k[a+168>>2]|0,b,c)|0;return}function qE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,f=0,g=0.0,h=0.0,j=0.0,m=0.0,n=0.0,o=0,q=0,s=0;s=r;r=r+64|0;o=s+32|0;f=s;m=+p[b>>3];g=+p[b+8>>3];n=+p[a+352>>3];h=+p[a+520>>3];e=+p[a+528>>3];if(!(k[a+360>>2]|0)){j=g/(n*e);e=m/(n*h)}else{j=-m/(n*h);e=g/(n*e)}h=e-+p[a+504>>3];m=j-+p[a+512>>3];n=1.0/n;b=k[(k[a>>2]|0)+168>>2]|0;p[f>>3]=h-n;p[f+8>>3]=m-n;p[f+16>>3]=h+n;p[f+24>>3]=m+n;c=Kt(b)|0;a:do if(!c)q=10;else b:while(1){d=Es(b,c)|0;if(d)do{k[o>>2]=k[f>>2];k[o+4>>2]=k[f+4>>2];k[o+8>>2]=k[f+8>>2];k[o+12>>2]=k[f+12>>2];k[o+16>>2]=k[f+16>>2];k[o+20>>2]=k[f+20>>2];k[o+24>>2]=k[f+24>>2];k[o+28>>2]=k[f+28>>2];if((SB(d,o)|0)<<24>>24){b=d;break b}d=Gs(b,d)|0}while((d|0)!=0);c=Lt(b,c)|0;if(!c){q=10;break a}}while(0);c:do if((q|0)==10){c=Mt(b)|0;d:do if(c){while(1){k[o>>2]=k[f>>2];k[o+4>>2]=k[f+4>>2];k[o+8>>2]=k[f+8>>2];k[o+12>>2]=k[f+12>>2];k[o+16>>2]=k[f+16>>2];k[o+20>>2]=k[f+20>>2];k[o+24>>2]=k[f+24>>2];k[o+28>>2]=k[f+28>>2];if((QB(c,o)|0)<<24>>24){b=c;break}c=Nt(b,c)|0;if(!c)break d}break c}while(0);k[o>>2]=k[f>>2];k[o+4>>2]=k[f+4>>2];k[o+8>>2]=k[f+8>>2];k[o+12>>2]=k[f+12>>2];k[o+16>>2]=k[f+16>>2];k[o+20>>2]=k[f+20>>2];k[o+24>>2]=k[f+24>>2];k[o+28>>2]=k[f+28>>2];c=rE(b,o)|0;if(!c)break;else{b=c;break}}while(0);d=a+576|0;c=k[d>>2]|0;if((b|0)!=(c|0)){e:do if(c)switch(ku(c)|0){case 0:{q=(k[c+8>>2]|0)+112|0;i[q>>0]=(l[q>>0]|0)&254;break e}case 1:{q=(k[c+8>>2]|0)+117|0;i[q>>0]=(l[q>>0]|0)&254;break e}case 2:{q=(k[c+8>>2]|0)+115|0;i[q>>0]=(l[q>>0]|0)&254;break e}default:break e}while(0);f=a+584|0;k[f>>2]=0;k[d>>2]=b;f:do if(b)switch(ku(b)|0){case 0:{c=(k[b+8>>2]|0)+112|0;i[c>>0]=l[c>>0]|0|1;c=ks(b,0,177238,0)|0;if(!c)break f;q=uy(ts(b,c)|0,b)|0;k[f>>2]=q;break f}case 1:{c=(k[b+8>>2]|0)+117|0;i[c>>0]=l[c>>0]|0|1;c=ks($t(b)|0,1,177238,0)|0;if(!c)break f;q=uy(ts(b,c)|0,b)|0;k[f>>2]=q;break f}case 2:{c=(k[b+8>>2]|0)+115|0;i[c>>0]=l[c>>0]|0|1;c=ks($t(k[((k[b>>2]&3|0)==2?b:b+-32|0)+28>>2]|0)|0,2,177238,0)|0;if(!c)break f;q=uy(ts(b,c)|0,b)|0;k[f>>2]=q;break f}default:break f}while(0);i[a+537>>0]=1}r=s;return}function rE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0.0,m=0.0;j=r;r=r+32|0;g=j;e=k[a+8>>2]|0;f=k[e+180>>2]|0;a:do if((f|0)<1)i=5;else{d=k[e+184>>2]|0;h=1;while(1){c=k[d+(h<<2)>>2]|0;k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];k[g+16>>2]=k[b+16>>2];k[g+20>>2]=k[b+20>>2];k[g+24>>2]=k[b+24>>2];k[g+28>>2]=k[b+28>>2];c=rE(c,g)|0;if(c)break a;if((h|0)<(f|0))h=h+1|0;else{i=5;break}}}while(0);do if((i|0)==5){m=+p[e+24>>3];l=+p[e+40>>3];if(((+p[b+16>>3]>=+p[e+16>>3]?+p[e+32>>3]>=+p[b>>3]:0)?+p[b+24>>3]>=m:0)?l>=+p[b+8>>3]:0){c=a;break}c=0}while(0);r=j;return c|0}function sE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;c=a+592|0;do if((au(b)|0)==(b|0))if(!(at(b)|0)){ZD(c,0,147425);break}else{ZD(c,0,147417);break}else ZD(c,0,147431);while(0);ZD(c,1,ht(b)|0);k[a+596>>2]=2;f=a+604|0;c=ls(b,0,0)|0;if(!c)c=2;else{d=c;e=2;while(1){ZD(f,e,k[d+8>>2]|0);ZD(f,e+1|0,ts(b,d)|0);c=e+3|0;ZD(f,e+2|0,0);d=ls(b,0,d)|0;if(!d)break;else e=c}}k[a+608>>2]=c;c=ks(b,0,177192,0)|0;if(!c){c=ks(b,0,147386,0)|0;if(c)g=10}else g=10;if((g|0)==10){g=uy(ts(b,c)|0,b)|0;k[a+588>>2]=g}return}function tE(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,l=0;l=r;r=r+128|0;h=l+64|0;j=l;xO(h,c,63)|0;g=oO(h,58)|0;if(g)i[g>>0]=0;g=a+60+(b<<2)|0;b=k[g>>2]|0;a:do if(b){a=g;while(1){xO(j,k[b+4>>2]|0,63)|0;g=oO(j,58)|0;if(g)i[g>>0]=0;b=(qO(h,j)|0)<1;g=k[a>>2]|0;if(b){b=a;break}b=k[g>>2]|0;if(!b)break a;else a=g}if(!g)g=b;else{a=b;while(1){xO(j,k[g+4>>2]|0,63)|0;g=oO(j,58)|0;if(g)i[g>>0]=0;if(qO(h,j)|0){g=a;break a}b=k[a>>2]|0;if((k[b+8>>2]|0)<=(d|0)){g=a;break a}g=k[b>>2]|0;if(!g){g=b;break}else a=b}}}while(0);j=Cy(20)|0;k[j>>2]=k[g>>2];k[g>>2]=j;k[j+4>>2]=c;k[j+8>>2]=d;k[j+12>>2]=e;k[j+16>>2]=f;r=l;return 1}function uE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0;s=r;r=r+160|0;q=s+8|0;p=s;n=s+88|0;o=s+24|0;m=(b+-3|0)>>>0<2?0:b;xO(n,c,63)|0;c=oO(n,58)|0;if(c){d=c+1|0;i[c>>0]=0;c=oO(d,58)|0;if(!c)l=0;else{i[c>>0]=0;l=c+1|0}}else{d=0;l=0}c=a+60+(b<<2)|0;e=k[c>>2]|0;a:do if(e){g=(d|0)!=0;h=(l|0)==0;j=(m|0)==(b|0);b:while(1){xO(o,k[e+4>>2]|0,63)|0;e=oO(o,58)|0;if(!e)f=0;else{i[e>>0]=0;f=e+1|0}do if(!(qO(o,n)|0)){e=(f|0)!=0;if(g&e?(qO(f,d)|0)!=0:0)break;if(!h?(qO(l,k[(k[(k[c>>2]|0)+12>>2]|0)+8>>2]|0)|0)!=0:0)break;if(j|e^1)break b;if(uE(a,m,f)|0)break b}while(0);c=k[c>>2]|0;e=k[c>>2]|0;if(!e){c=0;break a}}c=k[c>>2]|0;if(c){d=c+16|0;if((k[d>>2]|0)==0?(Yr(1,147471,p)|0,(k[d>>2]|0)==0):0){c=0;break}if((k[a+8>>2]|0)>0){p=k[24528]|0;n=k[c+4>>2]|0;o=k[(k[c+12>>2]|0)+8>>2]|0;k[q>>2]=k[60588+(b<<2)>>2];k[q+4>>2]=n;k[q+8>>2]=o;FN(p,147502,q)|0}}else c=0}else c=0;while(0);k[a+80+(b<<2)>>2]=c;r=s;return c|0}function vE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;do if(!c)c=0;else{if(k[15152]|0){$r(60612,0,0);k[15152]=0}f=tO(c)|0;c=oO(f,58)|0;do if(c){i[c>>0]=0;a=a+60+(b<<2)|0;c=k[a>>2]|0;if(!c){vP(f);c=1;g=19;break}else{b=c;c=1;e=a}do{d=tO(k[b+4>>2]|0)|0;b=oO(d,58)|0;if(b)i[b>>0]=0;if(!((i[f>>0]|0)!=0?(mO(f,d)|0)!=0:0)){c=k[15154]|0;if(c>>>0>=(k[15155]|0)>>>0){as(60612,1)|0;c=k[15154]|0}k[15154]=c+1;i[c>>0]=32;cs(60612,k[(k[e>>2]|0)+4>>2]|0)|0;c=k[15154]|0;if(c>>>0>=(k[15155]|0)>>>0){as(60612,1)|0;c=k[15154]|0}k[15154]=c+1;i[c>>0]=58;cs(60612,k[(k[(k[e>>2]|0)+12>>2]|0)+8>>2]|0)|0;c=0}vP(d);e=k[e>>2]|0;b=k[e>>2]|0}while((b|0)!=0);vP(f);if(c<<24>>24)g=19}else{vP(f);c=1;a=a+60+(b<<2)|0;g=19}while(0);if((g|0)==19){b=k[a>>2]|0;if(!b){c=176676;break}else e=0;do{d=e;e=tO(k[b+4>>2]|0)|0;b=oO(e,58)|0;if(b)i[b>>0]=0;if(!((d|0)!=0?(mO(d,e)|0)==0:0)){c=k[15154]|0;if(c>>>0>=(k[15155]|0)>>>0){as(60612,1)|0;c=k[15154]|0}k[15154]=c+1;i[c>>0]=32;cs(60612,e)|0;c=0}a=k[a>>2]|0;b=k[a>>2]|0}while((b|0)!=0);if(c<<24>>24){c=176676;break}}c=k[15154]|0;if(c>>>0>=(k[15155]|0)>>>0){as(60612,1)|0;c=k[15154]|0}i[c>>0]=0;c=k[15153]|0;k[15154]=c}while(0);return c|0}function wE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;d=k[c>>2]|0;f=Cy(12)|0;if(!b)b=0;else b=tO(b)|0;k[f+4>>2]=b;d=tO(d)|0;k[f+8>>2]=d;d=a+100|0;k[f>>2]=k[d>>2];k[d>>2]=f;d=k[c+4>>2]|0;b=k[d+4>>2]|0;if(b)while(1){c=k[b+4>>2]|0;if(c){e=0;do{tE(a,k[d>>2]|0,c,k[b+(e*20|0)+8>>2]|0,f,b+(e*20|0)|0)|0;e=e+1|0;c=k[b+(e*20|0)+4>>2]|0}while((c|0)!=0)}b=k[d+12>>2]|0;if(!b)break;else d=d+8|0}return}function xE(a,b){a=a|0;b=b|0;var c=0;b=k[a+32>>2]|0;if((b|0)!=0?(c=k[b>>2]|0,(c|0)!=0):0)do{if((i[c>>0]|0)==103?(BO(c,147519)|0)!=0:0)wE(a,0,k[b+4>>2]|0);b=b+8|0;c=k[b>>2]|0}while((c|0)!=0);i[a+44>>0]=0;yE(a)|0;ZA(a)|0;return}function yE(a){a=a|0;var b=0;b=uE(a,2,147532)|0;if(!b)b=999;else{k[a+148>>2]=k[(k[b+16>>2]|0)+12>>2];b=300}return b|0}function zE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;a=k[a+148>>2]|0;if((a|0)!=0?(d=k[a>>2]|0,(d|0)!=0):0)a=_b[d&127](b,c)|0;else a=0;return a|0}function AE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0.0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;O=r;r=r+160|0;L=O+148|0;K=O+144|0;J=O+80|0;M=O;do if(a){if(!d){d=wP(1,20)|0;k[d+4>>2]=c>>>0>80?c:80}c=k[d>>2]|0;N=k[d+4>>2]|0;if(!c){e=100;c=wP(100,N)|0}else{e=c+100|0;I=xP(k[d+8>>2]|0,ha(e,N)|0)|0;IP(I+(ha(N,c)|0)|0,0,N*100|0)|0;c=I}l=M+8|0;m=(b|0)==0;n=M+72|0;o=b+4|0;q=b+8|0;s=J+8|0;t=M+8|0;u=b+24|0;v=M+8|0;w=b+40|0;x=b+20|0;y=b+12|0;z=M+16|0;A=M+24|0;B=M+32|0;C=M+40|0;D=b+16|0;E=M+16|0;F=b+28|0;G=b+32|0;H=b+36|0;I=b+44|0;g=e;a:while(1){while(1){e=a+1|0;if(!(_L(i[a>>0]|0)|0))break;else a=e}b:do switch(i[a>>0]|0){case 0:{e=11;break a}case 69:{k[M>>2]=0;a=FE(e,l)|0;if(!a){e=84;break a}if(!m)k[n>>2]=k[b>>2];break}case 101:{k[M>>2]=1;a=FE(e,l)|0;if(!a){e=84;break a}if(!m)k[n>>2]=k[b>>2];break}case 80:{k[M>>2]=2;a=GE(e,l)|0;if(!a){e=84;break a}if(!m)k[n>>2]=k[o>>2];break}case 112:{k[M>>2]=3;a=GE(e,l)|0;if(!a){e=84;break a}if(!m)k[n>>2]=k[o>>2];break}case 98:{k[M>>2]=4;a=GE(e,l)|0;if(!a){e=84;break a}if(!m)k[n>>2]=k[q>>2];break}case 66:{k[M>>2]=5;a=GE(e,l)|0;if(!a){e=84;break a}if(!m)k[n>>2]=k[q>>2];break}case 99:{a=HE(e,K)|0;if(!a){e=84;break a}j=DE(k[K>>2]|0,J)|0;k[K>>2]=j;if(!j){e=84;break a}if(!(k[J>>2]|0)){k[M>>2]=9;k[t>>2]=k[s>>2];if(m)break b;k[n>>2]=k[u>>2];break b}else{k[M>>2]=14;e=v;h=J;j=e+64|0;do{k[e>>2]=k[h>>2];e=e+4|0;h=h+4|0}while((e|0)<(j|0));if(m)break b;k[n>>2]=k[w>>2];break b}}case 67:{a=HE(e,K)|0;if(!a){e=84;break a}j=DE(k[K>>2]|0,J)|0;k[K>>2]=j;if(!j){e=84;break a}if(!(k[J>>2]|0)){k[M>>2]=8;k[t>>2]=k[s>>2];if(m)break b;k[n>>2]=k[x>>2];break b}else{k[M>>2]=13;e=v;h=J;j=e+64|0;do{k[e>>2]=k[h>>2];e=e+4|0;h=h+4|0}while((e|0)<(j|0));if(m)break b;k[n>>2]=k[w>>2];break b}}case 76:{k[M>>2]=6;a=GE(e,l)|0;if(!a){e=84;break a}if(!m)k[n>>2]=k[y>>2];break}case 84:{k[M>>2]=7;f=+eO(e,L);a=k[L>>2]|0;if((a|0)==(e|0)){e=48;break a}p[l>>3]=f;if(!a){e=84;break a}f=+eO(a,L);e=k[L>>2]|0;if((e|0)==(a|0)){e=51;break a}p[z>>3]=f;if(!e){e=84;break a}a=gO(e,L,10)|0;j=k[L>>2]|0;e=(j|0)==(e|0)?0:j;do if((a|0)>=0)if((a|0)>0){k[A>>2]=2;break}else{k[A>>2]=1;break}else k[A>>2]=0;while(0);if(!e){e=84;break a}f=+eO(e,L);a=k[L>>2]|0;if((a|0)==(e|0)){e=60;break a}p[B>>3]=f;if(!a){e=84;break a}a=HE(a,C)|0;if(!a){e=84;break a}if(!m)k[n>>2]=k[D>>2];break}case 70:{k[M>>2]=10;f=+eO(e,L);a=k[L>>2]|0;if((a|0)==(e|0)){e=66;break a}p[l>>3]=f;if(!a){e=84;break a}a=HE(a,E)|0;if(!a){e=84;break a}if(!m)k[n>>2]=k[F>>2];break}case 83:{k[M>>2]=11;a=HE(e,l)|0;if(!a){e=84;break a}if(!m)k[n>>2]=k[G>>2];break}case 73:{k[M>>2]=12;a=FE(e,l)|0;if(!a){e=84;break a}a=HE(a,C)|0;if(!a){e=84;break a}if(!m)k[n>>2]=k[H>>2];break}case 116:{k[M>>2]=15;a=fO(e,L,10)|0;k[t>>2]=a;a=k[L>>2]|0;a=(a|0)==(e|0)?0:a;if(!a){e=84;break a}if(!m)k[n>>2]=k[I>>2];break}default:{e=84;break a}}while(0);e=k[d>>2]|0;if((e|0)==(g|0)){j=g<<1;c=xP(c,ha(j,N)|0)|0;e=ha(g,N)|0;IP(c+e|0,0,e|0)|0;e=k[d>>2]|0;g=j}e=c+(ha(e,N)|0)|0;h=M;j=e+80|0;do{k[e>>2]=k[h>>2];e=e+4|0;h=h+4|0}while((e|0)<(j|0));k[d>>2]=(k[d>>2]|0)+1}if((e|0)==11)a=c;else if((e|0)==48)e=84;else if((e|0)==51)e=84;else if((e|0)==60)e=84;else if((e|0)==66)e=84;if((e|0)==84){a=d+16|0;k[a>>2]=k[a>>2]|1;a=c}c=k[d>>2]|0;if(!c){vP(a);vP(d);d=0;break}else{N=xP(a,ha(c,N)|0)|0;k[d+8>>2]=N;break}}while(0);r=O;return d|0}function BE(a,b,c){a=a|0;b=b|0;c=c|0;return AE(a,b,c,0)|0}function CE(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0;b=k[a+12>>2]|0;if(a){e=k[a+8>>2]|0;a:do if((k[a>>2]|0)>0){f=a+4|0;g=(b|0)==0;h=0;while(1){c=ha(k[f>>2]|0,h)|0;d=e+c|0;if(!g)Nb[b&127](d);switch(k[d>>2]|0){case 3:case 2:{vP(k[e+(c+12)>>2]|0);break}case 5:case 4:{vP(k[e+(c+12)>>2]|0);break}case 6:{vP(k[e+(c+12)>>2]|0);break}case 7:{vP(k[e+(c+40)>>2]|0);break}case 9:case 8:{vP(k[e+(c+8)>>2]|0);break}case 14:case 13:{EE(e+(c+8)|0);break}case 10:{vP(k[e+(c+16)>>2]|0);break}case 11:{vP(k[e+(c+8)>>2]|0);break}case 12:{vP(k[e+(c+40)>>2]|0);break}default:{}}h=h+1|0;if((h|0)>=(k[a>>2]|0))break a}}while(0);vP(e);vP(a)}return}function DE(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,q=0,s=0;s=r;r=r+16|0;q=s;c=i[a>>0]|0;a:do switch(c|0){case 91:{a=a+1|0;k[b>>2]=1;j=b+8|0;d=+eO(a,q);c=k[q>>2]|0;if((c|0)==(a|0)){a=0;break a}p[j>>3]=d;if(c){d=+eO(c,q);g=k[q>>2]|0;if((g|0)==(c|0)){a=0;break a}p[b+16>>3]=d;if(g){d=+eO(g,q);f=k[q>>2]|0;if((f|0)==(g|0)){a=0;break a}p[b+24>>3]=d;if(f){d=+eO(f,q);c=k[q>>2]|0;if((c|0)==(f|0)){a=0;break a}p[b+32>>3]=d;if((c|0)!=0?(l=b+40|0,h=gO(c,q,10)|0,k[l>>2]=h,e=k[q>>2]|0,!((e|0)==(c|0)|(e|0)==0)):0){g=wP(h,8)|0;b:do if((h|0)>0){f=0;while(1){d=+eO(e,q);c=k[q>>2]|0;if((c|0)==(e|0)|(c|0)==0){c=19;break}o[g+(f<<3)>>2]=d;e=HE(c,g+(f<<3)+4|0)|0;f=f+1|0;if(!e){c=21;break}if((f|0)>=(k[l>>2]|0))break b}if((c|0)==19){vP(g);a=0;break a}else if((c|0)==21){vP(g);a=0;break a}}while(0);k[j+36>>2]=g}else a=0}else a=0}else a=0}else a=0;break}case 40:{a=a+1|0;k[b>>2]=2;d=+eO(a,q);c=k[q>>2]|0;if((c|0)==(a|0)){a=0;break a}p[b+8>>3]=d;if(c){d=+eO(c,q);e=k[q>>2]|0;if((e|0)==(c|0)){a=0;break a}p[b+16>>3]=d;if(e){d=+eO(e,q);c=k[q>>2]|0;if((c|0)==(e|0)){a=0;break a}p[b+24>>3]=d;if(c){d=+eO(c,q);e=k[q>>2]|0;if((e|0)==(c|0)){a=0;break a}p[b+32>>3]=d;if(e){d=+eO(e,q);f=k[q>>2]|0;if((f|0)==(e|0)){a=0;break a}p[b+40>>3]=d;if(f){d=+eO(f,q);c=k[q>>2]|0;if((c|0)==(f|0)){a=0;break a}p[b+48>>3]=d;if((c|0)!=0?(n=b+56|0,j=gO(c,q,10)|0,k[n>>2]=j,m=k[q>>2]|0,!((m|0)==(c|0)|(m|0)==0)):0){g=wP(j,8)|0;c:do if((j|0)>0){f=0;e=m;while(1){d=+eO(e,q);c=k[q>>2]|0;if((c|0)==(e|0)|(c|0)==0){c=46;break}o[g+(f<<3)>>2]=d;e=HE(c,g+(f<<3)+4|0)|0;f=f+1|0;if(!e){c=48;break}if((f|0)>=(k[n>>2]|0))break c}if((c|0)==46){vP(g);a=0;break a}else if((c|0)==48){vP(g);a=0;break a}}while(0);k[b+60>>2]=g}else a=0}else a=0}else a=0}else a=0}else a=0}else a=0;break}case 47:case 35:{k[b>>2]=0;k[b+8>>2]=a;break}default:if(!(WL(c)|0))a=0;else{k[b>>2]=0;k[b+8>>2]=a}}while(0);r=s;return a|0}function EE(a){a=a|0;var b=0,c=0;switch(k[a>>2]|0){case 1:{c=a+40|0;a=a+8+36|0;if((k[c>>2]|0)>0){b=0;do{vP(k[(k[a>>2]|0)+(b<<3)+4>>2]|0);b=b+1|0}while((b|0)<(k[c>>2]|0))}vP(k[a>>2]|0);break}case 2:{c=a+56|0;a=a+60|0;if((k[c>>2]|0)>0){b=0;do{vP(k[(k[a>>2]|0)+(b<<3)+4>>2]|0);b=b+1|0}while((b|0)<(k[c>>2]|0))}vP(k[a>>2]|0);break}default:{}}return}function FE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0.0;g=r;r=r+16|0;f=g;h=+eO(a,f);p[b>>3]=h;c=k[f>>2]|0;if(((c|0)!=(a|0)?(h=+eO(c,f),p[b+8>>3]=h,d=k[f>>2]|0,(c|0)!=(d|0)):0)?(h=+eO(d,f),p[b+16>>3]=h,e=k[f>>2]|0,(d|0)!=(e|0)):0){h=+eO(e,f);p[b+24>>3]=h;c=k[f>>2]|0;c=(e|0)==(c|0)?0:c}else c=0;r=g;return c|0}function GE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0.0;h=r;r=r+16|0;c=h+4|0;f=h;d=gO(a,c,10)|0;c=k[c>>2]|0;a:do if((c|0)==(a|0)|(c|0)==0)c=0;else{g=wP(d,24)|0;k[b>>2]=d;b:do if((d|0)>0){d=g;e=0;while(1){i=+eO(c,f);p[d>>3]=i;a=k[f>>2]|0;if((c|0)==(a|0)){a=5;break}i=+eO(a,f);p[d+8>>3]=i;c=k[f>>2]|0;if((a|0)==(c|0)){a=7;break}p[d+16>>3]=0.0;e=e+1|0;if((e|0)>=(k[b>>2]|0))break b;else d=d+24|0}if((a|0)==5){vP(g);c=0;break a}else if((a|0)==7){vP(g);c=0;break a}}while(0);k[b+4>>2]=g}while(0);r=h;return c|0}function HE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;h=r;r=r+16|0;g=h;d=gO(a,g,10)|0;g=k[g>>2]|0;a=(g|0)==(a|0)?0:g;a:do if(!((d|0)<1|(a|0)==0)){do{g=i[a>>0]|0;c=g<<24>>24==0;a=a+1|0}while(g<<24>>24!=45&(c^1));if(!c){g=wP(d+1|0,1)|0;b:do if((d|0)>0){f=d;e=g;while(1){d=i[a>>0]|0;if(!(d<<24>>24))break;c=e+1|0;i[e>>0]=d;a=a+1|0;if((f|0)>1){f=f+-1|0;e=c}else break b}vP(g);a=0;break a}else c=g;while(0);i[c>>0]=0;k[b>>2]=g}else a=0}else a=0;while(0);r=h;return a|0}function IE(a){a=a|0;var b=0.0,c=0.0,d=0,e=0;a=k[a+16>>2]|0;c=+p[a+16>>3];b=+p[a+24>>3];a=~~(c>b?c:b)>>>0;if(!a)a=0;else{e=a>>>0>65535;a=e?a>>>16:a;e=e?16:0;d=a>>>0>255;a=d?a>>>8:a;e=d?e|8:e;d=a>>>0>15;a=d?a>>>4:a;e=d?e|4:e;d=a>>>0>3;a=(d?e|2:e)+1+((d?a>>>2:a)>>>0>1&1)|0}return a|0}function JE(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,l=0,m=0.0,n=0.0,o=0.0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0;Ja=r;r=r+432|0;Ha=Ja+384|0;va=Ja+352|0;wa=Ja+320|0;za=Ja+288|0;Aa=Ja+256|0;Ba=Ja+224|0;Ca=Ja+192|0;Da=Ja+160|0;Ea=Ja+128|0;Fa=Ja+96|0;Ga=Ja+64|0;xa=Ja+32|0;ya=Ja;h=By(28)|0;ua=Lr(60628,k[12816]|0)|0;g=h+20|0;k[g>>2]=ua;do if(ua){ua=eG()|0;k[h+24>>2]=ua;if(!ua){QN(147543,14,1,k[24528]|0)|0;Ia=6;break}else{k[h>>2]=a;k[h+4>>2]=b;k[h+8>>2]=c;k[h+12>>2]=d;k[h+16>>2]=e;break}}else{QN(147543,14,1,k[24528]|0)|0;Ia=6}while(0);if((Ia|0)==6){g=k[g>>2]|0;if(g)Hr(g)|0;g=k[h+24>>2]|0;if(g)fG(g)|0;vP(h);h=0}u=IE(h)|0;v=h+4|0;a:do if((k[v>>2]|0)>0){w=(u|0)>0;l=h+20|0;y=0;while(1){x=By(32)|0;c=k[h>>2]|0;k[x+28>>2]=c+(y*40|0);g=k[c+(y*40|0)+32>>2]|0;if(!g){n=0.0;o=0.0}else{n=+p[g>>3];o=+p[g+8>>3]}E=+p[c+(y*40|0)>>3];j=~~+V(+(E-n));m=+p[c+(y*40|0)+8>>3];s=~~+V(+(m-o));d=~~+ga(+(n+(E+ +p[c+(y*40|0)+16>>3])));if((d|0)==2147483647){Ia=18;break}c=~~+ga(+(o+(m+ +p[c+(y*40|0)+24>>3])));if((c|0)==2147483647){Ia=20;break}k[x+12>>2]=j;k[x+16>>2]=s;k[x+20>>2]=d;k[x+24>>2]=c;if(w){t=u;g=0;q=((d-j|0)/2|0)+j|0;j=((c-s|0)/2|0)+s|0;while(1){ua=t;t=t+-1|0;d=q>>>t&1;ta=j>>>t&1;g=d<<1|g<<2|ta^d;ta=ta+-1|0;c=ta&(j^q);d=ta&0-d;if((ua|0)<=1)break;else{q=c^q^d;j=c^j^d}}}else g=0;k[x+8>>2]=g;ua=k[l>>2]|0;y=y+1|0;if(!(Tb[k[ua>>2]&63](ua,x,1)|0)){f=-1;break a}if((y|0)>=(k[v>>2]|0)){Ia=25;break a}}if((Ia|0)==18)Wa(147558,147585,264,147595);else if((Ia|0)==20)Wa(147605,147585,266,147595)}else{l=h+20|0;Ia=25}while(0);if((Ia|0)==25){f=k[l>>2]|0;f=Tb[k[f>>2]&63](f,0,128)|0;if(f){g=h+24|0;do{ua=k[g>>2]|0;hG(ua,f+12|0,k[f+28>>2]|0,ua,0)|0;ua=k[l>>2]|0;f=Tb[k[ua>>2]&63](ua,f,8)|0}while((f|0)!=0)}j=Nr(k[l>>2]|0)|0;b:do if(!(Nr(k[l>>2]|0)|0))z=0;else{f=0;while(1){d=k[l>>2]|0;g=k[(k[d+8>>2]|0)+4>>2]|0;if(!g)break;c=k[(k[d+4>>2]|0)+8>>2]|0;if((c|0)<0)g=k[g+8>>2]|0;else g=g+(0-c)|0;if(!g)break;Tb[k[d>>2]&63](d,g,4096)|0;vP(g);f=f+1|0;if(!(Nr(k[l>>2]|0)|0)){z=f;break b}}Wa(147632,147585,616,147635)}while(0);if((j|0)!=(z|0))Wa(147647,147585,623,147635);f=Hr(k[l>>2]|0)|0;if((f|0)>=0){if((b|0)>0){sa=va+8|0;ta=va+16|0;ua=va+24|0;y=e+32|0;z=wa+8|0;e=wa+16|0;F=wa+24|0;G=za+8|0;H=za+16|0;I=za+24|0;J=Aa+8|0;K=Aa+16|0;L=Aa+24|0;M=Ba+8|0;N=Ba+16|0;O=Ba+24|0;P=Ca+8|0;Q=Ca+16|0;R=Ca+24|0;S=Da+8|0;T=Da+16|0;U=Da+24|0;W=Ea+8|0;X=Ea+16|0;Y=Ea+24|0;Z=Ha+24|0;_=Ha+28|0;$=Ha+32|0;aa=Ha+12|0;ba=Ha+8|0;ca=Ha+4|0;da=Ha+20|0;ea=xa+8|0;fa=xa+16|0;ha=xa+24|0;ia=ya+8|0;ja=ya+16|0;ka=ya+24|0;la=Fa+8|0;ma=Fa+16|0;na=Fa+24|0;oa=Ga+8|0;pa=Ga+16|0;qa=Ga+24|0;ra=0;f=0;do{x=a+(ra*40|0)+32|0;j=k[x>>2]|0;do if(j){v=a+(ra*40|0)|0;m=+p[j>>3];q=a+(ra*40|0)+16|0;D=(m*2.0+ +p[q>>3])*.125;s=j+8|0;w=a+(ra*40|0)+24|0;n=+p[w>>3];E=(+p[s>>3]*2.0+n)*.5;g=Ha;c=g+36|0;do{k[g>>2]=0;g=g+4|0}while((g|0)<(c|0));l=j+16|0;p[l>>3]=+p[v>>3]-m;t=a+(ra*40|0)+8|0;u=j+24|0;p[u>>3]=n+ +p[t>>3];KE(va,h,v,Ha);g=k[va>>2]|0;n=+p[sa>>3];o=+p[ta>>3];m=+p[ua>>3];c:do if(g){p[u>>3]=+p[t>>3];KE(wa,h,v,Ha);c=k[wa>>2]|0;C=+p[z>>3];A=+p[e>>3];B=+p[F>>3];if(c){if(C<n){m=B;o=A;g=c;n=C}p[u>>3]=+p[t>>3]-+p[s>>3];KE(za,h,v,Ha);c=k[za>>2]|0;C=+p[G>>3];A=+p[H>>3];B=+p[I>>3];if(c){if(C<n){m=B;o=A;g=c;n=C}p[l>>3]=+p[v>>3];p[u>>3]=+p[t>>3]+ +p[w>>3];KE(Aa,h,v,Ha);c=k[Aa>>2]|0;C=+p[J>>3];A=+p[K>>3];B=+p[L>>3];if(!c){g=0;n=C;o=A;m=B}else{if(C<n){m=B;o=A;g=c;n=C}p[u>>3]=+p[t>>3]-+p[s>>3];KE(Ba,h,v,Ha);c=k[Ba>>2]|0;C=+p[M>>3];A=+p[N>>3];B=+p[O>>3];if(!c){g=0;n=C;o=A;m=B;break}if(C<n){m=B;o=A;g=c;n=C}p[l>>3]=+p[v>>3]+ +p[q>>3];p[u>>3]=+p[t>>3]+ +p[w>>3];KE(Ca,h,v,Ha);c=k[Ca>>2]|0;C=+p[P>>3];A=+p[Q>>3];B=+p[R>>3];if(!c){g=0;n=C;o=A;m=B;break}if(C<n){m=B;o=A;g=c;n=C}p[u>>3]=+p[t>>3];KE(Da,h,v,Ha);c=k[Da>>2]|0;C=+p[S>>3];A=+p[T>>3];B=+p[U>>3];if(!c){g=0;n=C;o=A;m=B;break}if(C<n){m=B;o=A;n=C}else c=g;p[u>>3]=+p[t>>3]-+p[s>>3];KE(Ea,h,v,Ha);g=k[Ea>>2]|0;C=+p[W>>3];A=+p[X>>3];B=+p[Y>>3];if(!g){g=0;n=C;o=A;m=B;break}if(C<n){m=B;o=A;n=C}else g=c;c=(k[_>>2]|0)==0&(k[$>>2]|0)==0;do if(!(k[Z>>2]|0)){if(!c){Ia=73;break}if((k[aa>>2]|0)==0&(k[Ha>>2]|0)==0)C=o;else Ia=68}else if(c)Ia=68;else Ia=73;while(0);do if((Ia|0)==68){Ia=0;C=+p[v>>3];B=C-+p[j>>3];p[l>>3]=B;p[u>>3]=+p[t>>3]+ +p[w>>3];if(!(B<=C+ +p[q>>3])){Ia=73;break}else{C=m;B=o;A=n}while(1){KE(Fa,h,v,Ha);c=k[Fa>>2]|0;n=+p[la>>3];o=+p[ma>>3];m=+p[na>>3];if(!c){g=0;break c}if(n<A)g=c;else{m=C;o=B;n=A}C=D+ +p[l>>3];p[l>>3]=C;if(!(C<=+p[v>>3]+ +p[q>>3])){Ia=73;break}else{C=m;B=o;A=n}}}while(0);do if((Ia|0)==73){Ia=0;if(!((k[aa>>2]|0)==0&(k[Ha>>2]|0)==0)){C=o;break}p[l>>3]=+p[v>>3]-+p[j>>3];C=+p[t>>3];B=C+ +p[w>>3];p[u>>3]=B;if(!(B>=C-+p[s>>3])){C=o;break}else{C=m;c=g;B=n}while(1){KE(Ga,h,v,Ha);g=k[Ga>>2]|0;n=+p[oa>>3];A=+p[pa>>3];m=+p[qa>>3];if(!g){g=0;o=A;break c}if(n<B)o=A;else{m=C;g=c;n=B}C=+p[u>>3]-E;p[u>>3]=C;if(!(C>=+p[t>>3]-+p[s>>3])){C=o;break}else{C=m;c=g;B=n}}}while(0);o=+p[v>>3];A=o+ +p[q>>3];p[l>>3]=A;B=+p[t>>3]-+p[s>>3];p[u>>3]=B;c=k[ca>>2]|0;do if(!(k[ba>>2]|0)){d=k[Ha>>2]|0;if(!((c|0)==0&(d|0)==0))break;if((k[da>>2]|0)==0&(k[$>>2]|0)==0){o=C;break c}else{c=0;d=0}}else d=k[Ha>>2]|0;while(0);do if((d|0)==0&(c|0)==0){p[l>>3]=A;p[u>>3]=B;if(!(A>=o-+p[j>>3]))break;else B=m;while(1){KE(xa,h,v,Ha);c=k[xa>>2]|0;A=+p[ea>>3];o=+p[fa>>3];m=+p[ha>>3];if(!c){g=0;n=A;break c}if(A<n){C=o;g=c;n=A}else m=B;B=+p[l>>3]-D;p[l>>3]=B;o=+p[v>>3];if(!(B>=o-+p[j>>3]))break;else B=m}}while(0);if(!((k[da>>2]|0)==0&(k[$>>2]|0)==0)){o=C;break}p[l>>3]=o+ +p[q>>3];D=+p[t>>3];B=D-+p[s>>3];p[u>>3]=B;if(!(B<=D+ +p[w>>3])){o=C;break}else{c=g;B=n}while(1){KE(ya,h,v,Ha);g=k[ya>>2]|0;n=+p[ia>>3];o=+p[ja>>3];A=+p[ka>>3];if(!g){g=0;m=A;break c}if(n<B)m=A;else{o=C;g=c;n=B}D=E+ +p[u>>3];p[u>>3]=D;if(!(D<=+p[t>>3]+ +p[w>>3]))break;else{C=o;c=g;B=n}}}}else{g=0;n=C;o=A;m=B}}else{g=0;n=C;o=A;m=B}}else g=0;while(0);if(!g){i[(k[x>>2]|0)+36>>0]=1;break}if(n==0.0){x=k[x>>2]|0;p[x+16>>3]=o;p[x+24>>3]=m;i[x+36>>0]=1;break}if((i[y>>0]|0)==1){x=k[x>>2]|0;p[x+16>>3]=o;p[x+24>>3]=m;i[x+36>>0]=1}else f=1}while(0);ra=ra+1|0}while((ra|0)<(b|0))}else f=0;fG(k[h+24>>2]|0)|0;vP(h)}}r=Ja;return f|0}function KE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0,g=0,h=0,j=0.0,l=0,m=0,n=0.0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0.0,A=0.0,B=0.0,C=0,D=0,E=0,F=0,G=0,H=0.0;G=r;r=r+64|0;E=G+48|0;C=G+32|0;D=G+16|0;F=G;l=k[c+32>>2]|0;if(!l)Wa(147659,147585,382,147669);o=l+16|0;k[F>>2]=k[o>>2];k[F+4>>2]=k[o+4>>2];k[F+8>>2]=k[o+8>>2];k[F+12>>2]=k[o+12>>2];o=k[b+4>>2]|0;a:do if((o|0)>0){q=k[b>>2]|0;s=l+16|0;t=l+24|0;m=l+8|0;g=0;u=0;b:while(1){do if((q+(u*40|0)|0)!=(c|0)){e=+p[q+(u*40|0)+16>>3];if(e>0.0?+p[q+(u*40|0)+24>>3]>0.0:0)break;if(!(e==0.0))break b;if(!(+p[q+(u*40|0)+24>>3]==0.0))break b;H=+p[q+(u*40|0)>>3];e=+p[s>>3];if((H>e?H<e+ +p[l>>3]:0)?(j=+p[q+(u*40|0)+8>>3],n=+p[t>>3],j>n):0)h=j<n+ +p[m>>3];else h=0;g=(h&1)+g|0}while(0);u=u+1|0;if((u|0)>=(o|0)){f=g;break a}}Wa(147685,147585,219,147722)}else f=0;while(0);n=+p[l+16>>3];k[C>>2]=~~n;H=+p[l+24>>3];k[C+4>>2]=~~H;k[C+8>>2]=~~(n+ +p[l>>3]);k[C+12>>2]=~~(H+ +p[l+8>>3]);y=k[b+24>>2]|0;y=gG(y,k[y>>2]|0,C)|0;if(!y){k[a>>2]=f;p[a+8>>3]=0.0;a=a+16|0;k[a>>2]=k[F>>2];k[a+4>>2]=k[F+4>>2];k[a+8>>2]=k[F+8>>2];k[a+12>>2]=k[F+12>>2]}else{o=D+4|0;q=D+8|0;s=D+12|0;t=E+4|0;u=E+8|0;b=E+12|0;v=E+4|0;w=E+8|0;x=E+12|0;e=0.0;m=y;do{l=k[(k[m+4>>2]|0)+16>>2]|0;if((l|0)!=(c|0)){H=+p[l>>3];k[D>>2]=~~H;j=+p[l+8>>3];k[o>>2]=~~j;k[q>>2]=~~(H+ +p[l+16>>3]);k[s>>2]=~~(j+ +p[l+24>>3]);j=+ME(C,D);if(j>0.0){h=NE(c,l)|0;h=d+(((h|0)<0?5:h)<<2)|0;g=k[h>>2]|0;if(g){H=+p[g>>3];k[E>>2]=~~H;n=+p[g+8>>3];k[t>>2]=~~n;k[u>>2]=~~(H+ +p[g+16>>3]);k[b>>2]=~~(n+ +p[g+24>>3]);n=+ME(C,E);n=n>j?n:0.0;g=k[g+32>>2]|0;if((g|0)!=0?(H=+p[g+16>>3],k[E>>2]=~~H,z=+p[g+24>>3],k[t>>2]=~~z,k[u>>2]=~~(H+ +p[g>>3]),k[b>>2]=~~(z+ +p[g+8>>3]),z=+ME(C,E),z>j):0)n=z>n?z:n;if(n>0.0)j=n;else k[h>>2]=l}else k[h>>2]=l;f=f+1|0;e=e+j}g=k[l+32>>2]|0;if(((g|0)!=0?(i[g+36>>0]|0)!=0:0)?(H=+p[g+16>>3],k[D>>2]=~~H,A=+p[g+24>>3],k[o>>2]=~~A,k[q>>2]=~~(H+ +p[g>>3]),k[s>>2]=~~(A+ +p[g+8>>3]),A=+ME(C,D),A>0.0):0){h=NE(c,l)|0;h=d+(((h|0)<0?5:h)<<2)|0;g=k[h>>2]|0;if(g){H=+p[g>>3];k[E>>2]=~~H;j=+p[g+8>>3];k[v>>2]=~~j;k[w>>2]=~~(H+ +p[g+16>>3]);k[x>>2]=~~(j+ +p[g+24>>3]);j=+ME(C,E);j=j>A?j:0.0;g=k[g+32>>2]|0;if((g|0)!=0?(H=+p[g+16>>3],k[E>>2]=~~H,B=+p[g+24>>3],k[v>>2]=~~B,k[w>>2]=~~(H+ +p[g>>3]),k[x>>2]=~~(B+ +p[g+8>>3]),B=+ME(C,E),B>A):0)j=B>j?B:j;if(!(j>0.0)){k[h>>2]=l;j=A}}else{k[h>>2]=l;j=A}f=f+1|0;e=e+j}}m=k[m>>2]|0}while((m|0)!=0);dG(y);k[a>>2]=f;p[a+8>>3]=e;a=a+16|0;k[a>>2]=k[F>>2];k[a+4>>2]=k[F+4>>2];k[a+8>>2]=k[F+8>>2];k[a+12>>2]=k[F+12>>2]}r=G;return}function LE(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return (k[b>>2]|0)-(k[c>>2]|0)|0}function ME(a,b){a=a|0;b=b|0;var c=0.0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0;d=k[a+8>>2]|0;h=k[b>>2]|0;if((((d|0)>=(h|0)?(i=k[a>>2]|0,j=k[b+8>>2]|0,(i|0)<=(j|0)):0)?(l=k[a+12>>2]|0,e=k[b+4>>2]|0,(l|0)>=(e|0)):0)?(f=k[a+4>>2]|0,g=k[b+12>>2]|0,(f|0)<=(g|0)):0)c=(+(((d|0)<(j|0)?d:j)|0)-+(((i|0)>(h|0)?i:h)|0))*(+(((l|0)<(g|0)?l:g)|0)-+(((f|0)>(e|0)?f:e)|0));else c=0.0;return +c}function NE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,f=0.0,g=0.0,h=0.0;c=k[a+32>>2]|0;d=k[b+32>>2]|0;if((c|0)==(d|0))Wa(147735,147585,276,147745);do if((i[c+36>>0]|0)!=0?(i[d+36>>0]|0)!=0:0){g=+p[a>>3];if(g==0.0?+p[a+8>>3]==0.0:0){c=-1;break}h=+p[b>>3];f=+p[b+8>>3];if(!(h==0.0&f==0.0)){e=+p[a+8>>3];if(f<e){if(h<g){c=0;break}c=h>g?2:1;break}c=h<g;if(f>e){if(c){c=6;break}c=h>g?8:7;break}if(!c)if(h>g)c=5;else c=-1;else c=3}else c=-1}else c=-1;while(0);return c|0}function OE(a){a=a|0;var b=0,c=0,d=0;b=uO(a)|0;if((b|0)>=(k[15166]|0)){b=b+11|0;k[15166]=b;b=Ey(k[15167]|0,b)|0;k[15167]=b;if(!b)b=0;else c=4}else{b=k[15167]|0;c=4}if((c|0)==4){c=i[a>>0]|0;if(c<<24>>24){d=b;while(1){a=a+1|0;b=c&255;if($L(b)|0)c=(oM(b)|0)&255;b=d+1|0;i[d>>0]=c;c=i[a>>0]|0;if(!(c<<24>>24))break;else d=b}}i[b>>0]=0;b=k[15167]|0}return b|0}function PE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0.0,g=0,h=0.0,j=0.0,m=0,n=0.0,o=0.0,q=0.0,s=0.0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0;I=r;r=r+112|0;y=I+64|0;m=I+48|0;B=I+92|0;C=I+40|0;E=I+32|0;G=I+24|0;D=I+16|0;F=I+8|0;H=I;g=I+88|0;u=I+84|0;v=I+80|0;w=I+76|0;k[b+32>>2]=c;while(1){e=a+1|0;if((i[a>>0]|0)==32)a=e;else{x=e;break}}k[w>>2]=255;e=i[a>>0]|0;a:do if(e<<24>>24==35){k[m>>2]=g;k[m+4>>2]=u;k[m+8>>2]=v;k[m+12>>2]=w;if((UN(a,147756,m)|0)<=2){e=i[a>>0]|0;z=21;break}switch(c|0){case 0:{t=+((k[g>>2]|0)>>>0)/255.0;p[D>>3]=t;s=+((k[u>>2]|0)>>>0)/255.0;p[F>>3]=s;j=+((k[v>>2]|0)>>>0)/255.0;p[H>>3]=j;n=+((k[w>>2]|0)>>>0)/255.0;d=s<j?s:j;o=s>j?s:j;o=o<t?t:o;d=o-(d>t?t:d);q=o>0.0?d/o:0.0;if(q>0.0){f=(o-t)/d;h=(o-s)/d;d=(o-j)/d;do if(!(o==t)){if(o==s){d=f+2.0-d;break}if(o==j)d=h+4.0-f;else d=0.0}else d=d-h;while(0);d=d*60.0;if(d<0.0)d=d+360.0}else d=0.0;t=d/360.0;p[C>>3]=t;p[G>>3]=o;p[E>>3]=q;p[b>>3]=t;p[b+8>>3]=q;p[b+16>>3]=o;p[b+24>>3]=n;a=0;break a}case 1:{i[b>>0]=k[g>>2];i[b+1>>0]=k[u>>2];i[b+2>>0]=k[v>>2];i[b+3>>0]=k[w>>2];a=0;break a}case 3:{o=+((k[g>>2]|0)>>>0)/255.0;p[D>>3]=o;q=+((k[u>>2]|0)>>>0)/255.0;p[F>>3]=q;s=+((k[v>>2]|0)>>>0)/255.0;p[H>>3]=s;o=1.0-o;q=1.0-q;s=1.0-s;t=o<q?o:q;t=s<t?s:t;i[b>>0]=~~(o-t)*255;i[b+1>>0]=~~(q-t)*255;i[b+2>>0]=~~(s-t)*255;i[b+3>>0]=~~t*255;a=0;break a}case 2:{k[b>>2]=(((k[g>>2]|0)*65535|0)>>>0)/255|0;k[b+4>>2]=(((k[u>>2]|0)*65535|0)>>>0)/255|0;k[b+8>>2]=(((k[v>>2]|0)*65535|0)>>>0)/255|0;k[b+12>>2]=(((k[w>>2]|0)*65535|0)>>>0)/255|0;a=0;break a}case 4:{p[b>>3]=+((k[g>>2]|0)>>>0)/255.0;p[b+8>>3]=+((k[u>>2]|0)>>>0)/255.0;p[b+16>>3]=+((k[v>>2]|0)>>>0)/255.0;p[b+24>>3]=+((k[w>>2]|0)>>>0)/255.0;a=0;break a}default:{a=0;break a}}}else z=21;while(0);b:do if((z|0)==21){if(!(e<<24>>24!=46?((e&255)+-48|0)>>>0>=10:0))z=23;do if((z|0)==23){e=uO(a)|0;if((e|0)>=(k[15168]|0)){e=e+11|0;k[15168]=e;e=Ey(k[15169]|0,e)|0;k[15169]=e;if(!e){a=-1;break b}else g=a}else{g=a;e=k[15169]|0}c:while(1){m=g+1|0;g=i[g>>0]|0;switch(g<<24>>24){case 0:break c;case 44:{g=32;break}default:{}}i[e>>0]=g;g=m;e=e+1|0}i[e>>0]=0;z=k[15169]|0;k[y>>2]=C;k[y+4>>2]=E;k[y+8>>2]=G;if((UN(z,147770,y)|0)!=3){e=i[a>>0]|0;break}h=+p[C>>3];h=h<1.0?h:1.0;h=h>0.0?h:0.0;p[C>>3]=h;f=+p[E>>3];f=f<1.0?f:1.0;f=f>0.0?f:0.0;p[E>>3]=f;d=+p[G>>3];d=d<1.0?d:1.0;d=d>0.0?d:0.0;p[G>>3]=d;switch(c|0){case 0:{p[b>>3]=h;p[b+8>>3]=f;p[b+16>>3]=d;p[b+24>>3]=1.0;a=0;break b}case 1:{RE(h,f,d,D,F,H);i[b>>0]=~~(+p[D>>3]*255.0);i[b+1>>0]=~~(+p[F>>3]*255.0);i[b+2>>0]=~~(+p[H>>3]*255.0);i[b+3>>0]=-1;a=0;break b}case 3:{RE(h,f,d,D,F,H);o=1.0-+p[D>>3];q=1.0-+p[F>>3];s=1.0-+p[H>>3];t=o<q?o:q;t=s<t?s:t;i[b>>0]=~~(o-t)*255;i[b+1>>0]=~~(q-t)*255;i[b+2>>0]=~~(s-t)*255;i[b+3>>0]=~~t*255;a=0;break b}case 2:{RE(h,f,d,D,F,H);k[b>>2]=~~(+p[D>>3]*65535.0);k[b+4>>2]=~~(+p[F>>3]*65535.0);k[b+8>>2]=~~(+p[H>>3]*65535.0);k[b+12>>2]=65535;a=0;break b}case 4:{RE(h,f,d,D,F,H);p[b>>3]=+p[D>>3];p[b+8>>3]=+p[F>>3];p[b+16>>3]=+p[H>>3];p[b+24>>3]=1.0;a=0;break b}default:{a=0;break b}}}while(0);if(((e<<24>>24!=98?!(e<<24>>24==119|(wO(x,147780,4)|0)==0):0)?!(e<<24>>24==108|(wO(x,147785,4)|0)==0):0)?(wO(x,147790,8)|0)!=0:0){do if(e<<24>>24==47){e=oO(x,47)|0;if(!e)a=x;else{if((i[x>>0]|0)!=47){G=(vO(147799,x,4)|0)==0;a=G?e+1|0:a;break}e=k[15170]|0;if(((e|0)!=0?(i[e>>0]|0)!=0:0)?(vO(147799,e,3)|0)!=0:0){a=SE(e,a+2|0)|0;break}a=a+2|0}}else{e=k[15170]|0;if(((e|0)!=0?(i[e>>0]|0)!=0:0)?(vO(147799,e,3)|0)!=0:0)a=SE(e,a)|0}while(0);a=OE(a)|0;k[B>>2]=a;if(!a){a=-1;break}}else k[B>>2]=a;g=k[15171]|0;if(((g|0)!=0?(A=k[g>>2]|0,(i[A>>0]|0)==(i[a>>0]|0)):0)?(qO(A,a)|0)==0:0){e=g;a=g}else{a=cO(B,60688,2491,12,106)|0;k[15171]=a;if(!a)switch(c|0){case 0:{k[b>>2]=0;k[b+4>>2]=0;k[b+8>>2]=0;k[b+12>>2]=0;k[b+16>>2]=0;k[b+20>>2]=0;p[b+24>>3]=1.0;a=1;break b}case 1:{i[b+2>>0]=0;i[b+1>>0]=0;i[b>>0]=0;i[b+3>>0]=-1;a=1;break b}case 3:{i[b>>0]=0;i[b+1>>0]=0;i[b+2>>0]=0;i[b+3>>0]=0;a=1;break b}case 2:{k[b+8>>2]=0;k[b+4>>2]=0;k[b>>2]=0;k[b+12>>2]=65535;a=1;break b}case 4:{k[b>>2]=0;k[b+4>>2]=0;k[b+8>>2]=0;k[b+12>>2]=0;k[b+16>>2]=0;k[b+20>>2]=0;p[b+24>>3]=1.0;a=1;break b}default:{a=1;break b}}else e=a}switch(c|0){case 0:{p[b>>3]=+(l[e+4>>0]|0)/255.0;p[b+8>>3]=+(l[a+5>>0]|0)/255.0;p[b+16>>3]=+(l[a+6>>0]|0)/255.0;p[b+24>>3]=+(l[a+10>>0]|0)/255.0;a=0;break b}case 1:{i[b>>0]=i[e+7>>0]|0;i[b+1>>0]=i[(k[15171]|0)+8>>0]|0;i[b+2>>0]=i[(k[15171]|0)+9>>0]|0;i[b+3>>0]=i[(k[15171]|0)+10>>0]|0;a=0;break b}case 3:{o=+(l[e+7>>0]|0)/255.0;p[D>>3]=o;q=+(l[a+8>>0]|0)/255.0;p[F>>3]=q;s=+(l[a+9>>0]|0)/255.0;p[H>>3]=s;o=1.0-o;q=1.0-q;s=1.0-s;t=o<q?o:q;t=s<t?s:t;i[b>>0]=~~(o-t)*255;i[b+1>>0]=~~(q-t)*255;i[b+2>>0]=~~(s-t)*255;i[b+3>>0]=~~t*255;a=0;break b}case 2:{k[b>>2]=(l[e+7>>0]|0)*257;k[b+4>>2]=(l[a+8>>0]|0)*257;k[b+8>>2]=(l[a+9>>0]|0)*257;k[b+12>>2]=(l[a+10>>0]|0)*257;a=0;break b}case 4:{p[b>>3]=+(l[e+7>>0]|0)/255.0;p[b+8>>3]=+(l[a+8>>0]|0)/255.0;p[b+16>>3]=+(l[a+9>>0]|0)/255.0;p[b+24>>3]=+(l[a+10>>0]|0)/255.0;a=0;break b}default:{a=0;break b}}}while(0);r=I;return a|0}function QE(a){a=a|0;k[15170]=a;return}function RE(a,b,c,d,e,f){a=+a;b=+b;c=+c;d=d|0;e=e|0;f=f|0;var g=0.0,h=0.0,i=0;a:do if(!(b<=0.0)){a=!(a>=1.0)?a*6.0:0.0;i=~~a;a=a-+(i|0);h=(1.0-b)*c;g=(1.0-a*b)*c;a=(1.0-(1.0-a)*b)*c;switch(i|0){case 0:{p[d>>3]=c;p[e>>3]=a;p[f>>3]=h;break a}case 1:{p[d>>3]=g;p[e>>3]=c;p[f>>3]=h;break a}case 2:{p[d>>3]=h;p[e>>3]=c;p[f>>3]=a;break a}case 3:{p[d>>3]=h;p[e>>3]=g;p[f>>3]=c;break a}case 4:{p[d>>3]=a;p[e>>3]=h;p[f>>3]=c;break a}case 5:{p[d>>3]=c;p[e>>3]=h;p[f>>3]=g;break a}default:break a}}else{p[d>>3]=c;p[e>>3]=c;p[f>>3]=c}while(0);return}function SE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=r;r=r+16|0;d=e;c=uO(a)|0;c=(uO(b)|0)+c|0;if((c+3|0)<(k[22645]|0))c=k[22646]|0;else{c=c+13|0;k[22645]=c;c=Ey(k[22646]|0,c)|0;k[22646]=c}k[d>>2]=a;k[d+4>>2]=b;TN(c,173291,d)|0;r=e;return k[22646]|0}function TE(a,b){a=a|0;b=b|0;return mO(k[a>>2]|0,k[b>>2]|0)|0}function UE(a,b,c,d,e){a=a|0;b=+b;c=+c;d=+d;e=+e;var f=0.0,g=0.0,h=0.0,i=0,j=0.0,l=0,m=0.0,n=0.0,o=0.0,q=0.0,r=0.0,s=0.0,t=0,u=0.0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,W=0,Y=0,aa=0,ba=0,ca=0,fa=0.0,ga=0.0,ha=0.0,ia=0.0,ja=0,ka=0.0,la=0.0,ma=0,na=0.0,oa=0.0,pa=0.0,qa=0.0,ra=0.0;na=+p[a>>3];la=+p[a+8>>3];h=+da(+(+_(+d)/c),+(+Z(+d)/b));fa=+da(+(+_(+e)/c),+(+Z(+e)/b));fa=fa-+V(+((fa-h)/6.283185307179586))*6.283185307179586;ia=+Z(+h);ka=ia*b;ha=+_(+h);ga=ha*c;f=na+ka-ga*0.0;ka=ga+(la+ka*0.0);ga=c/b;ma=By(8)|0;fa=(e-d>3.141592653589793&fa-h<3.141592653589793?fa+6.283185307179586:fa)-h;t=ga<.25?42840:43096;u=(ga*(ga*.001+4.98)+.207)/(ga+.0067)*b;v=t+8|0;w=t+16|0;x=t+24|0;y=t+32|0;z=t+40|0;A=t+48|0;B=t+56|0;C=t+64|0;D=t+72|0;E=t+80|0;F=t+88|0;G=t+96|0;H=t+104|0;I=t+112|0;J=t+120|0;K=t+128|0;L=t+136|0;M=t+144|0;N=t+152|0;O=t+160|0;P=t+168|0;Q=t+176|0;R=t+184|0;S=t+192|0;T=t+200|0;U=t+208|0;W=t+216|0;Y=t+224|0;aa=t+232|0;ba=t+240|0;ca=t+248|0;n=fa;a=1;do{if(!(n<=1.5707963267948966))i=0;else{if((a|0)<=0){ja=4;break}r=(+p[w>>3]+ga*(ga*+p[t>>3]+ +p[v>>3]))/(ga+ +p[x>>3]);d=(+p[A>>3]+ga*(ga*+p[y>>3]+ +p[z>>3]))/(ga+ +p[B>>3]);e=(+p[E>>3]+ga*(ga*+p[C>>3]+ +p[D>>3]))/(ga+ +p[F>>3]);g=(+p[I>>3]+ga*(ga*+p[G>>3]+ +p[H>>3]))/(ga+ +p[J>>3]);j=(+p[M>>3]+ga*(ga*+p[K>>3]+ +p[L>>3]))/(ga+ +p[N>>3]);m=(+p[Q>>3]+ga*(ga*+p[O>>3]+ +p[P>>3]))/(ga+ +p[R>>3]);o=(+p[U>>3]+ga*(ga*+p[S>>3]+ +p[T>>3]))/(ga+ +p[W>>3]);q=(+p[ba>>3]+ga*(ga*+p[Y>>3]+ +p[aa>>3]))/(ga+ +p[ca>>3]);s=h;l=0;do{ra=s;s=n+s;oa=(ra+s)*.5;qa=+Z(+(oa*2.0));pa=+Z(+(oa*4.0));oa=+Z(+(oa*6.0));i=u*+ea(+(r+d*qa+e*pa+g*oa+(s-ra)*(j+m*qa+o*pa+q*oa)))<=1.0e-05;l=l+1|0}while((l|0)<(a|0)&i);i=i&1}a=a<<1;n=fa/+(a|0)}while((a|0)<1024&i<<24>>24==0);if((ja|0)==4){a=a<<1;n=fa/+(a|0)}j=ha*b;d=ia*c;k[22647]=100;ca=By(1600)|0;k[ma>>2]=ca;p[ca>>3]=na;ja=ca+8|0;p[ja>>3]=la;l=ma+4|0;k[l>>2]=1;VE(ma,+p[ca>>3],+p[ja>>3],f,ka,f,ka);m=+$(+(n*.5));m=+_(+n)*(+X(+(m*(m*3.0)+4.0))+-1.0)/3.0;if((a|0)>0){i=0;g=-j-d*0.0;e=ka;d=d-j*0.0;do{h=n+h;ia=+Z(+h);ka=+_(+h);pa=ia*b;ra=ka*c;ka=ka*b;ia=ia*c;oa=f;f=na+pa-ra*0.0;qa=e;e=ra+(la+pa*0.0);pa=g;g=-ka-ia*0.0;ra=d;d=ia-ka*0.0;VE(ma,oa+m*pa,qa+m*ra,f-m*g,e-m*d,f,e);i=i+1|0}while((i|0)!=(a|0))}ca=k[ma>>2]|0;qa=+p[ca>>3];ra=+p[ca+8>>3];ja=(k[l>>2]|0)+-1|0;VE(ma,+p[ca+(ja<<4)>>3],+p[ca+(ja<<4)+8>>3],qa,ra,qa,ra);ja=xP(k[ma>>2]|0,k[l>>2]<<4)|0;k[ma>>2]=ja;k[22647]=0;return ma|0}function VE(a,b,c,d,e,f,g){a=a|0;b=+b;c=+c;d=+d;e=+e;f=+f;g=+g;var h=0,i=0,j=0,l=0;j=a+4|0;h=k[j>>2]|0;i=k[22647]|0;if((h+3|0)<(i|0))i=k[a>>2]|0;else{k[22647]=i<<1;i=xP(k[a>>2]|0,i<<5)|0;k[a>>2]=i;h=k[j>>2]|0}p[i+(h<<4)>>3]=b;l=h+1|0;p[i+(h<<4)+8>>3]=c;p[i+(l<<4)>>3]=d;a=h+2|0;p[i+(l<<4)+8>>3]=e;p[i+(a<<4)>>3]=f;k[j>>2]=h+3;p[i+(a<<4)+8>>3]=g;return}function WE(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0.0,g=0.0,h=0,l=0,m=0,n=0;n=r;r=r+80|0;m=n;d=px(a)|0;e=k[d>>2]|0;l=k[e+4>>2]|0;k[d+4>>2]=l;k[d+12>>2]=k[e+12>>2];switch(l|0){case 2:{k[d+8>>2]=k[e+8>>2];break}case 0:{k[d+8>>2]=k[e+8>>2];break}case 1:{k[d+8>>2]=k[e+8>>2];break}case 3:{k[d+8>>2]=k[e+8>>2];break}default:{}}k[d+208>>2]=k[e+208>>2];k[d+228>>2]=k[e+228>>2];k[d+244>>2]=k[e+244>>2];l=d+260|0;j[l>>1]=j[l>>1]&-2|j[e+260>>1]&1;g=+p[c+56>>3];f=+p[c+64>>3];switch(i[c+80>>0]|0){case 116:{f=f+(+p[c+48>>3]-+fF(b))*.5+-1.0;break}case 98:{f=f-(+p[c+48>>3]-+fF(b))*.5+-1.0;break}default:{}}p[m>>3]=g;p[m+8>>3]=f;k[m+20>>2]=k[c+8>>2];k[m+16>>2]=k[c+4>>2];p[m+32>>3]=+p[c+16>>3];c=a+16|0;e=ss(k[(k[c>>2]|0)+8>>2]|0,173298)|0;d=m+56|0;k[d>>2]=e;h=m+60|0;k[h>>2]=k[(k[c>>2]|0)+212>>2];l=m+64|0;i[l>>0]=0;if(!((e|0)!=0?(i[e>>0]|0)!=0:0))k[d>>2]=173309;if((i[b+4>>0]|0)==1){d=k[b>>2]|0;GD(a,k[(k[a>>2]|0)+336>>2]|0);e=k[d+24>>2]|0;if(!e)DD(a,173315);else DD(a,e);hF(a,d,m);if(i[l>>0]|0)vP(k[h>>2]|0)}else gF(a,k[b>>2]|0,m);m=k[c>>2]|0;k[m+208>>2]=0;k[m+228>>2]=0;k[m+244>>2]=0;k[m+212>>2]=0;qx(a);r=n;return}function XE(a){a=a|0;vP(k[a>>2]|0);vP(k[a+4>>2]|0);vP(k[a+8>>2]|0);vP(k[a+16>>2]|0);vP(k[a+12>>2]|0);vP(k[a+20>>2]|0);vP(k[a+24>>2]|0);return}function YE(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0;if(a){c=a+4|0;if((j[c>>1]|0)>0){f=0;i=k[a>>2]|0;while(1){e=i+4|0;if((j[e>>1]|0)>0){g=0;h=k[i>>2]|0;while(1){b=k[h>>2]|0;if(b)vP(b);b=k[h+8>>2]|0;if((b|0)!=0?(d=k[h+12>>2]|0,(d|0)!=0):0)Nb[d&127](b);g=g+1|0;if((g|0)>=(j[e>>1]|0))break;else h=h+56|0}}f=f+1|0;if((f|0)>=(j[c>>1]|0))break;else i=i+24|0}}b=k[a>>2]|0;if(b)vP(b);vP(a)}return}function ZE(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;switch(i[a+4>>0]|0){case 1:{e=k[a>>2]|0;f=e+84|0;if((k[e+100>>2]|0)==-1)Hr(k[f>>2]|0)|0;else{d=k[f>>2]|0;vP(k[e+92>>2]|0);vP(k[e+96>>2]|0);c=k[d>>2]|0;if(c)do{ZE(c+88|0,0);XE(c);vP(c);d=d+4|0;c=k[d>>2]|0}while((c|0)!=0);vP(k[f>>2]|0)}XE(e);vP(e);break}case 3:{f=k[a>>2]|0;vP(k[f+32>>2]|0);vP(f);break}default:YE(k[a>>2]|0)}if(b)vP(a);return}function _E(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;a=k[(k[(k[a+8>>2]|0)+104>>2]|0)+72>>2]|0;if((i[a+4>>0]|0)!=2?(d=iF(k[a>>2]|0,b)|0,(d|0)!=0):0){k[c>>2]=l[d+35>>0];a=d+48|0}else a=0;return a|0}function $E(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return 0}function aF(a){a=a|0;var b=0,c=0,d=0.0,e=0,f=0,g=0,h=0,l=0,n=0,o=0,q=0,r=0,s=0,t=0;r=By((k[a+100>>2]<<2)+4|0)|0;s=a+92|0;k[s>>2]=r;r=By((k[a+104>>2]<<2)+4|0)|0;k[a+96>>2]=r;c=k[a+84>>2]|0;b=k[c>>2]|0;if(b){q=a+32|0;do{g=j[b+82>>1]|0;e=g&65535;d=+p[b+72>>3];if(g<<16>>16==1)h=~~d;else{h=~~((d-+(ha((i[q>>0]|0)+-1|0,e+-1|0)|0))/+(e|0));h=(h|0)>1?h:1}n=j[b+80>>1]|0;l=n&65535;d=+p[b+64>>3];if(n<<16>>16==1)o=~~d;else{o=~~((d-+(ha((i[q>>0]|0)+-1|0,l+-1|0)|0))/+(l|0));o=(o|0)>1?o:1}a=m[b+86>>1]|0;f=e+a|0;if(g<<16>>16){e=k[s>>2]|0;do{g=e+(a<<2)|0;t=k[g>>2]|0;k[g>>2]=(t|0)>(h|0)?t:h;a=a+1|0}while((a|0)<(f|0))}a=m[b+84>>1]|0;b=l+a|0;if(n<<16>>16)do{t=r+(a<<2)|0;n=k[t>>2]|0;k[t>>2]=(n|0)>(o|0)?n:o;a=a+1|0}while((a|0)<(b|0));c=c+4|0;b=k[c>>2]|0}while((b|0)!=0)}return}function bF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,l=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0;v=r;r=r+48|0;s=v+40|0;q=v+32|0;u=v+24|0;t=v+16|0;o=v+8|0;i=v;n=a+104|0;l=a+100|0;if((k[n>>2]|0)>=0){e=c+8|0;f=0;g=0;while(1){if(f>>>0<21)d=k[90592+(f<<2)>>2]|0;else{k[i>>2]=f;TN(173321,173421,i)|0;d=173321}h=g;g=Qt(c,d,1)|0;qu(g,173424,304,1)|0;d=g+8|0;k[(k[d>>2]|0)+176>>2]=0;x=By((k[l>>2]<<2)+4|0)|0;w=k[d>>2]|0;k[w+172>>2]=x;k[w+184>>2]=0;w=By((k[l>>2]<<2)+4|0)|0;k[(k[d>>2]|0)+180>>2]=w;if(!h)k[(k[e>>2]|0)+192>>2]=g;else k[(k[h+8>>2]|0)+164>>2]=g;if((f|0)>=(k[n>>2]|0))break;else f=f+1|0}}if((k[l>>2]|0)>=0){e=b+8|0;f=0;g=0;while(1){if(f>>>0<21)d=k[90592+(f<<2)>>2]|0;else{k[o>>2]=f;TN(173321,173421,o)|0;d=173321}h=g;g=Qt(b,d,1)|0;qu(g,173424,304,1)|0;x=g+8|0;k[(k[x>>2]|0)+176>>2]=0;i=By((k[n>>2]<<2)+4|0)|0;w=k[x>>2]|0;k[w+172>>2]=i;k[w+184>>2]=0;w=By((k[n>>2]<<2)+4|0)|0;k[(k[x>>2]|0)+180>>2]=w;if(!h)k[(k[e>>2]|0)+192>>2]=g;else k[(k[h+8>>2]|0)+164>>2]=g;if((f|0)>=(k[l>>2]|0))break;else f=f+1|0}}e=k[a+84>>2]|0;d=k[e>>2]|0;if(d)do{g=d+84|0;x=j[g>>1]|0;f=x&65535;if((x&65535)<21)f=k[90592+(f<<2)>>2]|0;else{k[t>>2]=f;TN(173321,173421,t)|0;f=173321}h=Qt(c,f,0)|0;f=(m[d+80>>1]|0)+(m[g>>1]|0)|0;if(f>>>0<21)f=k[90592+(f<<2)>>2]|0;else{k[u>>2]=f;TN(173321,173421,u)|0;f=173321}g=Qt(c,f,0)|0;jF(c,h,g,~~+p[d+64>>3]);g=d+86|0;x=j[g>>1]|0;f=x&65535;if((x&65535)<21)f=k[90592+(f<<2)>>2]|0;else{k[q>>2]=f;TN(173321,173421,q)|0;f=173321}h=Qt(b,f,0)|0;f=(m[d+82>>1]|0)+(m[g>>1]|0)|0;if(f>>>0<21)f=k[90592+(f<<2)>>2]|0;else{k[s>>2]=f;TN(173321,173421,s)|0;f=173321}x=Qt(b,f,0)|0;jF(b,h,x,~~+p[d+72>>3]);e=e+4|0;d=k[e>>2]|0}while((d|0)!=0);kF(c);kF(b);r=v;return}function cF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;b=k[(k[(k[(k[b+8>>2]|0)+192>>2]|0)+8>>2]|0)+164>>2]|0;if(b){f=k[a+92>>2]|0;g=0;e=0;while(1){h=k[b+8>>2]|0;d=h+232|0;k[f+(g<<2)>>2]=(k[d>>2]|0)-e;b=k[h+164>>2]|0;if(!b)break;else{g=g+1|0;e=k[d>>2]|0}}}b=k[(k[(k[(k[c+8>>2]|0)+192>>2]|0)+8>>2]|0)+164>>2]|0;if(b){f=k[a+96>>2]|0;g=0;e=0;while(1){h=k[b+8>>2]|0;d=h+232|0;k[f+(g<<2)>>2]=(k[d>>2]|0)-e;b=k[h+164>>2]|0;if(!b)break;else{g=g+1|0;e=k[d>>2]|0}}}return}function dF(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;g=r;r=r+16|0;e=g+4|0;d=g;k[d>>2]=k[12890];b=k[a+100>>2]|0;if((b|0)!=1?(c=a+104|0,(k[c>>2]|0)!=1):0){f=By((b<<2)+4|0)|0;k[a+92>>2]=f;f=By((k[c>>2]<<2)+4|0)|0;k[a+96>>2]=f;k[e>>2]=k[d>>2];f=Vs(173437,e,0)|0;k[e>>2]=k[d>>2];e=Vs(173442,e,0)|0;qu(f,173447,280,1)|0;qu(e,173447,280,1)|0;bF(a,f,e);Gy(f,2,2147483647)|0;Gy(e,2,2147483647)|0;cF(a,f,e);b=k[(k[e+8>>2]|0)+192>>2]|0;if(b)do{d=b+8|0;b=k[d>>2]|0;c=k[b+172>>2]|0;if(c){vP(c);b=k[d>>2]|0}c=k[b+180>>2]|0;if(c){vP(c);b=k[d>>2]|0}b=k[b+164>>2]|0}while((b|0)!=0);Ys(f)|0;Ys(e)|0}else aF(a);r=g;return}function eF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0.0,q=0.0;n=r;r=r+256|0;f=n+104|0;m=n+248|0;e=n;g=n+32|0;l=n+232|0;k[g+48>>2]=a;switch(ku(a)|0){case 0:{c=k[a+48>>2]|0;h=g+52|0;k[h>>2]=c;break}case 1:{c=$t(a)|0;h=g+52|0;k[h>>2]=c;break}case 2:{c=$t(k[((k[a>>2]&3|0)==2?a:a+-32|0)+28>>2]|0)|0;h=g+52|0;k[h>>2]=c;break}default:{h=g+52|0;c=0}}j=k[c+48>>2]|0;p[g+32>>3]=+p[b+16>>3];k[g+16>>2]=k[b+4>>2];k[g+20>>2]=k[b+8>>2];k[g+40>>2]=0;d=yG(k[b>>2]|0,m,g)|0;if(!d){$r(l,128,f);i[b+82>>0]=0;a:do switch(ku(a)|0){case 0:{cs(l,ht(a)|0)|0;break}case 1:{cs(l,ht(a)|0)|0;break}case 2:{cs(l,ht(k[((k[a>>2]&3|0)==3?a:a+32|0)+28>>2]|0)|0)|0;g=a+-32|0;cs(l,ht(k[((k[a>>2]&3|0)==2?a:g)+28>>2]|0)|0)|0;if(!(at($t(k[((k[a>>2]&3|0)==2?a:g)+28>>2]|0)|0)|0)){cs(l,176693)|0;break a}else{cs(l,173460)|0;break a}}default:{}}while(0);d=l+4|0;c=k[d>>2]|0;if(c>>>0>=(k[l+8>>2]|0)>>>0){as(l,1)|0;c=k[d>>2]|0}i[c>>0]=0;c=k[l>>2]|0;k[d>>2]=c;c=tO(c)|0;k[b>>2]=c;if((k[b+12>>2]|0)==1)c=OB(c)|0;else c=NB(c,k[h>>2]|0)|0;vP(k[b>>2]|0);k[b>>2]=c;py(k[(k[j+8>>2]|0)+144>>2]|0,b);ds(l);c=k[m>>2]|0}else{c=d+4|0;if((i[c>>0]|0)==1){if((k[(k[d>>2]|0)+24>>2]|0)==0?(lF(a)|0)!=0:0){l=tO(lF(a)|0)|0;k[(k[d>>2]|0)+24>>2]=l}a=mF(j,k[d>>2]|0,0,g)|0;k[m>>2]=k[m>>2]|a;a=k[d>>2]|0;q=+p[a+64>>3]*.5;o=+p[a+72>>3]*.5;p[e>>3]=-q;l=e+8|0;p[l>>3]=-o;h=e+16|0;p[h>>3]=q;j=e+24|0;p[j>>3]=o;k[f>>2]=k[e>>2];k[f+4>>2]=k[e+4>>2];k[f+8>>2]=k[e+8>>2];k[f+12>>2]=k[e+12>>2];k[f+16>>2]=k[e+16>>2];k[f+20>>2]=k[e+20>>2];k[f+24>>2]=k[e+24>>2];k[f+28>>2]=k[e+28>>2];nF(a,f,15);p[b+24>>3]=+p[h>>3]-+p[e>>3];p[b+32>>3]=+p[j>>3]-+p[l>>3]}else{oF(k[(k[j+8>>2]|0)+144>>2]|0,k[d>>2]|0,g);l=k[d>>2]|0;o=+p[l+24>>3]*.5;q=+p[l+32>>3]*.5;p[e>>3]=-o;p[e+8>>3]=-q;p[e+16>>3]=o;p[e+24>>3]=q;l=l+8|0;k[l>>2]=k[e>>2];k[l+4>>2]=k[e+4>>2];k[l+8>>2]=k[e+8>>2];k[l+12>>2]=k[e+12>>2];k[l+16>>2]=k[e+16>>2];k[l+20>>2]=k[e+20>>2];k[l+24>>2]=k[e+24>>2];k[l+28>>2]=k[e+28>>2];p[b+24>>3]=o+o;p[b+32>>3]=q+q}k[b+72>>2]=d;if((i[c>>0]|0)==1){vP(k[b>>2]|0);l=tO(176865)|0;k[b>>2]=l}c=k[m>>2]|0}r=n;return c|0}function fF(a){a=a|0;var b=0.0;switch(i[a+4>>0]|0){case 1:{a=k[a>>2]|0;b=+p[a+72>>3]-+p[a+56>>3];break}case 3:{a=k[a>>2]|0;b=+p[a+24>>3]-+p[a+8>>3];break}case 2:{a=k[a>>2]|0;b=+p[a+32>>3]-+p[a+16>>3];break}default:b=0.0}return +b}function gF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,g=0,h=0,m=0.0,n=0.0,o=0.0,q=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0.0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0.0;T=r;r=r+128|0;P=T+104|0;R=T+48|0;Q=T+16|0;O=T;d=j[b+4>>1]|0;if(d<<16>>16>=1){e=+p[b+24>>3];N=+p[b+8>>3];o=(e-N)*.5;N=+p[c>>3]+(e+N)*.5;e=+p[b+32>>3];f=+p[b+16>>3];U=+p[c+8>>3]+(e+f)*.5;L=d<<16>>16;M=k[b>>2]|0;y=i[b+6>>0]|0;J=c+16|0;J=l[J>>0]|l[J+1>>0]<<8|l[J+2>>0]<<16|l[J+3>>0]<<24;K=c+20|0;K=l[K>>0]|l[K+1>>0]<<8|l[K+2>>0]<<16|l[K+3>>0]<<24;q=c+32|0;i[t>>0]=i[q>>0];i[t+1>>0]=i[q+1>>0];i[t+2>>0]=i[q+2>>0];i[t+3>>0]=i[q+3>>0];i[t+4>>0]=i[q+4>>0];i[t+5>>0]=i[q+5>>0];i[t+6>>0]=i[q+6>>0];i[t+7>>0]=i[q+7>>0];m=+p[t>>3];q=O;k[q>>2]=0;k[q+4>>2]=0;n=N-o;o=o+N;q=O+8|0;p[q>>3]=U+(e-f)*.5;AD(a,1);s=Q+16|0;u=Q+4|0;v=Q+24|0;w=R+4|0;x=R+16|0;y=y<<24>>24==0;z=R+24|0;A=R+8|0;B=R+32|0;C=R+40|0;D=R+48|0;E=K;F=Q+8|0;I=0;do{switch(i[M+(I*24|0)+6>>0]|0){case 108:{e=n;break}case 114:{e=o-+p[M+(I*24|0)+8>>3];break}default:e=N-+p[M+(I*24|0)+8>>3]*.5}G=M+(I*24|0)+16|0;p[q>>3]=+p[q>>3]-+p[G>>3];H=M+(I*24|0)+4|0;if((j[H>>1]|0)>0){g=0;h=k[M+(I*24|0)>>2]|0;while(1){c=h+4|0;b=k[c>>2]|0;if(b){U=+p[b+16>>3];p[s>>3]=U>0.0?U:m;d=k[b>>2]|0;if(!d)k[Q>>2]=J;else k[Q>>2]=d;d=k[b+4>>2]|0;if(!d){k[u>>2]=K;d=E}else k[u>>2]=d;b=k[b+24>>2]&127;if(!b)S=18;else b=k[v>>2]&-128|b}else{p[s>>3]=m;k[Q>>2]=J;k[u>>2]=K;d=E;S=18}if((S|0)==18){S=0;b=k[v>>2]&-128}k[v>>2]=b;DD(a,d);k[R>>2]=k[h>>2];k[w>>2]=Q;p[x>>3]=+p[h+16>>3];if(y)f=1.0;else f=+p[h+24>>3];p[z>>3]=f;k[F>>2]=k[(k[c>>2]|0)+8>>2];k[A>>2]=k[h+8>>2];d=h+32|0;p[B>>3]=+p[d>>3];p[C>>3]=+p[G>>3];i[D>>0]=108;p[O>>3]=e;k[P>>2]=k[O>>2];k[P+4>>2]=k[O+4>>2];k[P+8>>2]=k[O+8>>2];k[P+12>>2]=k[O+12>>2];CD(a,P,R);g=g+1|0;if((g|0)>=(j[H>>1]|0))break;else{e=e+ +p[d>>3];h=h+56|0}}}I=I+1|0}while((I|0)!=(L|0));BD(a)}r=T;return}function hF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,g=0,h=0,n=0.0,o=0.0,q=0,s=0,t=0,u=0,v=0.0,w=0.0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0.0;ea=r;r=r+352|0;ba=ea+232|0;da=ea+160|0;T=ea+128|0;R=ea+64|0;S=ea+336|0;aa=ea+200|0;ca=ea+296|0;s=ea;t=ea+344|0;X=b+48|0;k[aa>>2]=k[X>>2];k[aa+4>>2]=k[X+4>>2];k[aa+8>>2]=k[X+8>>2];k[aa+12>>2]=k[X+12>>2];k[aa+16>>2]=k[X+16>>2];k[aa+20>>2]=k[X+20>>2];k[aa+24>>2]=k[X+24>>2];k[aa+28>>2]=k[X+28>>2];e=+p[c>>3];X=c+8|0;f=+p[X>>3];U=b+84|0;u=k[U>>2]|0;if(!(k[b>>2]|0))$=(k[b+8>>2]|0)!=0;else $=1;W=b+108|0;d=k[W>>2]|0;if(d)pF(c,d,43384);p[aa>>3]=e+ +p[aa>>3];V=aa+16|0;p[V>>3]=e+ +p[V>>3];V=aa+8|0;p[V>>3]=f+ +p[V>>3];V=aa+24|0;p[V>>3]=f+ +p[V>>3];if($?(k[a+152>>2]&4|0)==0:0){k[ba>>2]=k[aa>>2];k[ba+4>>2]=k[aa+4>>2];k[ba+8>>2]=k[aa+8>>2];k[ba+12>>2]=k[aa+12>>2];k[ba+16>>2]=k[aa+16>>2];k[ba+20>>2]=k[aa+20>>2];k[ba+24>>2]=k[aa+24>>2];k[ba+28>>2]=k[aa+28>>2];V=rF(a,c,b,ba,ca,1)|0}else V=0;h=b+42|0;d=m[h>>1]|0;if(!(d&32)){g=k[b+20>>2]|0;if(g){q=sF(a,g,k[b+28>>2]|0,d,t)|0;if(!(j[h>>1]&4)){k[ba>>2]=k[aa>>2];k[ba+4>>2]=k[aa+4>>2];k[ba+8>>2]=k[aa+8>>2];k[ba+12>>2]=k[aa+12>>2];k[ba+16>>2]=k[aa+16>>2];k[ba+20>>2]=k[aa+20>>2];k[ba+24>>2]=k[aa+24>>2];k[ba+28>>2]=k[aa+28>>2];JD(a,ba,q)}else{d=i[b+33>>0]|0;k[ba>>2]=k[aa>>2];k[ba+4>>2]=k[aa+4>>2];k[ba+8>>2]=k[aa+8>>2];k[ba+12>>2]=k[aa+12>>2];k[ba+16>>2]=k[aa+16>>2];k[ba+20>>2]=k[aa+20>>2];k[ba+24>>2]=k[aa+24>>2];k[ba+28>>2]=k[aa+28>>2];k[s>>2]=k[aa>>2];k[s+4>>2]=k[aa+4>>2];k[s+8>>2]=k[aa+8>>2];k[s+12>>2]=k[aa+12>>2];g=s+32|0;Q=ba+16|0;k[g>>2]=k[Q>>2];k[g+4>>2]=k[Q+4>>2];k[g+8>>2]=k[Q+8>>2];k[g+12>>2]=k[Q+12>>2];if((d&255)>1){o=+(d&255|0)*.5;n=o+ +p[s>>3];p[s>>3]=n;Q=s+8|0;f=o+ +p[Q>>3];p[Q>>3]=f;e=+p[g>>3]-o;p[g>>3]=e;Q=s+40|0;o=+p[Q>>3]-o;p[Q>>3]=o}else{e=+p[g>>3];f=+p[s+8>>3];n=+p[s>>3];o=+p[s+40>>3]}p[s+16>>3]=e;p[s+24>>3]=f;p[s+48>>3]=n;p[s+56>>3]=o;Pz(a,s,4,4,q)}vP(k[t>>2]|0)}d=k[u>>2]|0;a:do if(d){x=T+16|0;y=T+8|0;z=T+24|0;A=a+152|0;B=ba+8|0;C=ba+32|0;D=ba+40|0;E=ba+16|0;F=ba+24|0;G=ba+48|0;H=ba+56|0;I=c+56|0;J=R+32|0;K=ba+16|0;L=R+8|0;M=R+40|0;N=R+16|0;O=R+24|0;P=R+48|0;Q=R+56|0;b:while(1){t=d+48|0;k[T>>2]=k[t>>2];k[T+4>>2]=k[t+4>>2];k[T+8>>2]=k[t+8>>2];k[T+12>>2]=k[t+12>>2];k[T+16>>2]=k[t+16>>2];k[T+20>>2]=k[t+20>>2];k[T+24>>2]=k[t+24>>2];k[T+28>>2]=k[t+28>>2];e=+p[c>>3];f=+p[X>>3];if(!(k[d>>2]|0))t=(k[d+8>>2]|0)!=0;else t=1;p[T>>3]=e+ +p[T>>3];p[x>>3]=e+ +p[x>>3];p[y>>3]=f+ +p[y>>3];p[z>>3]=f+ +p[z>>3];if(t?(k[A>>2]&4|0)==0:0){k[ba>>2]=k[T>>2];k[ba+4>>2]=k[T+4>>2];k[ba+8>>2]=k[T+8>>2];k[ba+12>>2]=k[T+12>>2];k[ba+16>>2]=k[T+16>>2];k[ba+20>>2]=k[T+20>>2];k[ba+24>>2]=k[T+24>>2];k[ba+28>>2]=k[T+28>>2];s=rF(a,c,d,ba,da,1)|0}else s=0;q=d+42|0;g=m[q>>1]|0;c:do if(!(g&32)){h=k[d+20>>2]|0;if(h){h=sF(a,h,k[d+28>>2]|0,g,S)|0;if(!(j[q>>1]&4)){k[ba>>2]=k[T>>2];k[ba+4>>2]=k[T+4>>2];k[ba+8>>2]=k[T+8>>2];k[ba+12>>2]=k[T+12>>2];k[ba+16>>2]=k[T+16>>2];k[ba+20>>2]=k[T+20>>2];k[ba+24>>2]=k[T+24>>2];k[ba+28>>2]=k[T+28>>2];JD(a,ba,h)}else{g=i[d+33>>0]|0;k[ba>>2]=k[T>>2];k[ba+4>>2]=k[T+4>>2];k[ba+8>>2]=k[T+8>>2];k[ba+12>>2]=k[T+12>>2];k[ba+16>>2]=k[T+16>>2];k[ba+20>>2]=k[T+20>>2];k[ba+24>>2]=k[T+24>>2];k[ba+28>>2]=k[T+28>>2];k[R>>2]=k[T>>2];k[R+4>>2]=k[T+4>>2];k[R+8>>2]=k[T+8>>2];k[R+12>>2]=k[T+12>>2];k[J>>2]=k[K>>2];k[J+4>>2]=k[K+4>>2];k[J+8>>2]=k[K+8>>2];k[J+12>>2]=k[K+12>>2];if((g&255)>1){o=+(g&255|0)*.5;n=o+ +p[R>>3];p[R>>3]=n;f=o+ +p[L>>3];p[L>>3]=f;e=+p[J>>3]-o;p[J>>3]=e;o=+p[M>>3]-o;p[M>>3]=o}else{e=+p[J>>3];f=+p[L>>3];n=+p[R>>3];o=+p[M>>3]}p[N>>3]=e;p[O>>3]=f;p[P>>3]=n;p[Q>>3]=o;Pz(a,R,4,4,h)}vP(k[S>>2]|0)}if(i[d+33>>0]|0){k[ba>>2]=k[T>>2];k[ba+4>>2]=k[T+4>>2];k[ba+8>>2]=k[T+8>>2];k[ba+12>>2]=k[T+12>>2];k[ba+16>>2]=k[T+16>>2];k[ba+20>>2]=k[T+20>>2];k[ba+24>>2]=k[T+24>>2];k[ba+28>>2]=k[T+28>>2];tF(a,d,ba)}g=d+88|0;switch(i[d+92>>0]|0){case 1:{hF(a,k[g>>2]|0,c);break c}case 3:{h=k[g>>2]|0;v=+p[c>>3];n=+p[h>>3]+v;o=+p[X>>3];w=+p[h+8>>3]+o;v=+p[h+16>>3]+v;o=+p[h+24>>3]+o;p[ba>>3]=v;p[B>>3]=o;p[C>>3]=n;p[D>>3]=w;p[E>>3]=n;p[F>>3]=o;p[G>>3]=v;p[H>>3]=w;g=k[h+36>>2]|0;if(!g)g=k[I>>2]|0;h=k[h+32>>2]|0;if(!h){d=40;break b}if(!(i[h>>0]|0)){d=42;break b}ND(a,h,ba,4,1,g);break c}default:{gF(a,k[g>>2]|0,c);break c}}}while(0);if(s)uF(a,da,1);if((t?(k[A>>2]&4|0)!=0:0)?(k[ba>>2]=k[T>>2],k[ba+4>>2]=k[T+4>>2],k[ba+8>>2]=k[T+8>>2],k[ba+12>>2]=k[T+12>>2],k[ba+16>>2]=k[T+16>>2],k[ba+20>>2]=k[T+20>>2],k[ba+24>>2]=k[T+24>>2],k[ba+28>>2]=k[T+28>>2],(rF(a,c,d,ba,da,0)|0)!=0):0)uF(a,da,0);u=u+4|0;d=k[u>>2]|0;if(!d)break a}if((d|0)==40)Wa(173781,173473,627,173789);else if((d|0)==42)Wa(173803,173473,628,173789)}while(0);d=k[U>>2]|0;OD(a,1.0);g=k[d>>2]|0;if(g){x=b+24|0;y=da+8|0;z=da+16|0;A=da+24|0;B=da+8|0;C=da+16|0;D=da+24|0;do{d=d+4|0;t=g+100|0;if(i[t>>0]|0){h=k[x>>2]|0;u=k[d>>2]|0;n=+p[c>>3];f=+p[X>>3];h=(h|0)==0?173315:h;ED(a,h);DD(a,h);o=n+ +p[g+48>>3];v=n+ +p[g+64>>3];w=f+ +p[g+56>>3];f=f+ +p[g+72>>3];h=i[t>>0]|0;if((h&1)!=0?(Y=k[g+96>>2]|0,((m[g+80>>1]|0)+(m[g+84>>1]|0)|0)<(k[Y+104>>2]|0)):0){h=j[g+86>>1]|0;do if(h<<16>>16){q=i[Y+32>>0]|0;if(((m[g+82>>1]|0)+(h&65535)|0)==(k[Y+100>>2]|0)){U=(q<<24>>24|0)/2|0;h=U+(l[Y+33>>0]|0)|0;s=q;e=w-+(U|0)-+(h&255|0);break}else{s=q;e=w-+((q<<24>>24|0)/2|0|0);h=0;break}}else{s=i[Y+32>>0]|0;h=(s<<24>>24|0)/2|0;e=w-+(h|0);h=h+(l[Y+33>>0]|0)|0}while(0);fa=v+ +((s<<24>>24|0)/2|0|0);p[da>>3]=fa;p[B>>3]=e;p[C>>3]=fa+0.0;p[D>>3]=e+(+(s<<24>>24)+(f+ +(h&255|0)-w));k[ba>>2]=k[da>>2];k[ba+4>>2]=k[da+4>>2];k[ba+8>>2]=k[da+8>>2];k[ba+12>>2]=k[da+12>>2];k[ba+16>>2]=k[da+16>>2];k[ba+20>>2]=k[da+20>>2];k[ba+24>>2]=k[da+24>>2];k[ba+28>>2]=k[da+28>>2];JD(a,ba,1);h=i[t>>0]|0}if((h&2)!=0?(Z=j[g+86>>1]|0,_=k[g+96>>2]|0,((m[g+82>>1]|0)+(Z&65535)|0)<(k[_+100>>2]|0)):0){h=j[g+84>>1]|0;do if(!(h<<16>>16)){h=i[_+32>>0]|0;U=(h<<24>>24|0)/2|0;s=U+(l[_+33>>0]|0)|0;q=s&255;s=s&255;f=+(U|0);e=o-+(s|0)-f;if((m[g+80>>1]|0)==(k[_+104>>2]|0)){g=s<<1&255;break}if((u|0)!=0?(j[u+86>>1]|0)!=Z<<16>>16:0)g=~~(+(q&255)+(n+ +p[_+64>>3]-(v+f)))&255;else g=q}else{if(((m[g+80>>1]|0)+(h&65535)|0)==(k[_+104>>2]|0)){h=i[_+32>>0]|0;g=(h<<24>>24|0)/2|0;e=o-+(g|0);g=g+(l[_+33>>0]|0)&255;break}g=i[_+32>>0]|0;f=+((g<<24>>24|0)/2|0|0);e=o-f;if((u|0)!=0?(j[u+86>>1]|0)!=Z<<16>>16:0){h=g;g=~~(n+ +p[_+64>>3]-(v+f)+0.0)&255}else{h=g;g=0}}while(0);fa=w-+((h<<24>>24|0)/2|0|0);p[da>>3]=e;p[y>>3]=fa;p[z>>3]=e+(+(h<<24>>24)+(v+ +(g&255|0)-o));p[A>>3]=fa+0.0;k[ba>>2]=k[da>>2];k[ba+4>>2]=k[da+4>>2];k[ba+8>>2]=k[da+8>>2];k[ba+12>>2]=k[da+12>>2];k[ba+16>>2]=k[da+16>>2];k[ba+20>>2]=k[da+20>>2];k[ba+24>>2]=k[da+24>>2];k[ba+28>>2]=k[da+28>>2];JD(a,ba,1)}}g=k[d>>2]|0}while((g|0)!=0)}if(i[b+33>>0]|0){k[ba>>2]=k[aa>>2];k[ba+4>>2]=k[aa+4>>2];k[ba+8>>2]=k[aa+8>>2];k[ba+12>>2]=k[aa+12>>2];k[ba+16>>2]=k[aa+16>>2];k[ba+20>>2]=k[aa+20>>2];k[ba+24>>2]=k[aa+24>>2];k[ba+28>>2]=k[aa+28>>2];tF(a,b,ba)}}if(V)uF(a,ca,1);if(($?(k[a+152>>2]&4|0)!=0:0)?(k[ba>>2]=k[aa>>2],k[ba+4>>2]=k[aa+4>>2],k[ba+8>>2]=k[aa+8>>2],k[ba+12>>2]=k[aa+12>>2],k[ba+16>>2]=k[aa+16>>2],k[ba+20>>2]=k[aa+20>>2],k[ba+24>>2]=k[aa+24>>2],k[ba+28>>2]=k[aa+28>>2],(rF(a,c,b,ba,ca,0)|0)!=0):0)uF(a,ca,0);if(k[W>>2]|0){d=k[10846]|0;if(d)k[c+16>>2]=d;d=k[10847]|0;if(d)k[c+20>>2]=d;e=+p[5425];if(e>=0.0)p[c+32>>3]=e}r=ea;return}function iF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;d=k[a+4>>2]|0;if((d|0)!=0?(mO(d,b)|0)==0:0)c=a;else f=3;a:do if((f|0)==3){a=k[a+84>>2]|0;d=k[a>>2]|0;if(!d)c=0;else{e=a;while(1){e=e+4|0;a=k[d+4>>2]|0;if((a|0)!=0?(mO(a,b)|0)==0:0){c=d;f=8}else f=6;if((f|0)==6?(f=0,(i[d+92>>0]|0)==1):0){c=iF(k[d+88>>2]|0,b)|0;f=8}if((f|0)==8?(0,(c|0)!=0):0)break a;d=k[e>>2]|0;if(!d){c=0;break}}}}while(0);return c|0}function jF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=Ls(a,b,c,0,0)|0;if(!e){f=Ls(a,b,c,0,1)|0;qu(f,173717,176,1)|0;j[(k[f+8>>2]|0)+170>>1]=d;d=b+8|0;a=k[d>>2]|0;e=k[a+180>>2]|0;a=k[a+184>>2]|0;if(!e)e=Cy((a<<2)+8|0)|0;else e=Ey(e,(a<<2)+8|0)|0;b=k[d>>2]|0;k[b+180>>2]=e;b=b+184|0;a=k[b>>2]|0;k[b>>2]=a+1;k[e+(a<<2)>>2]=f;d=k[d>>2]|0;k[(k[d+180>>2]|0)+(k[d+184>>2]<<2)>>2]=0;d=c+8|0;a=k[d>>2]|0;e=k[a+172>>2]|0;a=k[a+176>>2]|0;if(!e)e=Cy((a<<2)+8|0)|0;else e=Ey(e,(a<<2)+8|0)|0;b=k[d>>2]|0;k[b+172>>2]=e;b=b+176|0;c=k[b>>2]|0;k[b>>2]=c+1;k[e+(c<<2)>>2]=f;f=k[d>>2]|0;k[(k[f+172>>2]|0)+(k[f+176>>2]<<2)>>2]=0}else{f=(k[e+8>>2]|0)+170|0;c=m[f>>1]|0;j[f>>1]=(c|0)>(d|0)?c:d}return}function kF(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;c=k[(k[a+8>>2]|0)+192>>2]|0;b=c+8|0;d=k[(k[b>>2]|0)+164>>2]|0;if(d){f=d;while(1){if(!(Ls(a,c,f,0,0)|0)){e=Ls(a,c,f,0,1)|0;qu(e,173717,176,1)|0;j[(k[e+8>>2]|0)+170>>1]=0;d=k[b>>2]|0;c=k[d+180>>2]|0;d=k[d+184>>2]|0;if(!c)c=Cy((d<<2)+8|0)|0;else c=Ey(c,(d<<2)+8|0)|0;g=k[b>>2]|0;k[g+180>>2]=c;g=g+184|0;d=k[g>>2]|0;k[g>>2]=d+1;k[c+(d<<2)>>2]=e;b=k[b>>2]|0;k[(k[b+180>>2]|0)+(k[b+184>>2]<<2)>>2]=0;b=f+8|0;d=k[b>>2]|0;c=k[d+172>>2]|0;d=k[d+176>>2]|0;if(!c)c=Cy((d<<2)+8|0)|0;else c=Ey(c,(d<<2)+8|0)|0;d=k[b>>2]|0;k[d+172>>2]=c;d=d+176|0;g=k[d>>2]|0;k[d>>2]=g+1;k[c+(g<<2)>>2]=e;g=k[b>>2]|0;k[(k[g+172>>2]|0)+(k[g+176>>2]<<2)>>2]=0}else b=f+8|0;c=k[(k[b>>2]|0)+164>>2]|0;if(!c)break;else{g=f;f=c;c=g}}}return}function lF(a){a=a|0;var b=0,c=0;b=ss(a,173708)|0;if(!((b|0)!=0?(i[b>>0]|0)!=0:0))c=3;do if((c|0)==3){b=ss(a,176965)|0;if((b|0)!=0?(i[b>>0]|0)!=0:0)break;b=0}while(0);return b|0}function mF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0.0,g=0,h=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;J=r;r=r+16|0;H=J+8|0;G=J;I=b+108|0;e=k[I>>2]|0;if(e)pF(d,e,43352);k[b+80>>2]=c;n=b+84|0;C=k[n>>2]|0;D=az()|0;E=vF()|0;c=Jr(C)|0;if(!c)e=0;else{e=0;h=0;do{g=Jr(k[c+8>>2]|0)|0;if(g)do{e=e+1|0;g=k[g>>2]|0}while((g|0)!=0);h=h+1|0;if(i[c+12>>0]|0)wF(E,h);c=k[c>>2]|0}while((c|0)!=0)}e=By((e<<2)+4|0)|0;k[n>>2]=e;g=Jr(C)|0;if(!g){c=0;e=0;s=0}else{c=0;q=0;A=0;o=0;while(1){n=Jr(k[g+8>>2]|0)|0;if(!n){h=q;n=o}else{z=A&65535;h=0;s=e;y=q;while(1){x=k[n+8>>2]|0;e=s+4|0;k[s>>2]=x;o=qF(a,x,b,d)|0|o;w=x+80|0;v=j[w>>1]|0;s=(v&65535)+-1|0;if(v<<16>>16){a:while(1){q=s+h|0;while(1){if(fz(D,q,A)|0){h=q;break}if((q|0)>(h|0))q=q+-1|0;else break a}h=h+1|0}q=j[w>>1]|0;if(!(q<<16>>16))B=16;else{v=x+82|0;t=j[v>>1]|0;s=t;u=h;do{if(!(t<<16>>16))t=0;else{s=A;do{dz(D,u,s);s=s+1|0;q=j[v>>1]|0}while((s|0)<((q&65535)+A|0));s=q;t=q;q=j[w>>1]|0}u=u+1|0}while((u|0)<((q&65535)+h|0))}}else B=16;if((B|0)==16){B=0;q=0;s=j[x+82>>1]|0}j[x+86>>1]=z;j[x+84>>1]=h;h=(q&65535)+h|0;c=(h|0)>(c|0)?h:c;w=(s&65535)+A|0;q=(w|0)>(y|0)?w:y;if(xF(E,w)|0){y=x+100|0;i[y>>0]=l[y>>0]|2}n=k[n>>2]|0;if(!n){h=q;n=o;break}else{s=e;y=q}}}g=k[g>>2]|0;if(!g){e=h;s=n;break}else{q=h;A=A+1|0;o=n}}}h=b+100|0;k[h>>2]=e;g=b+104|0;k[g>>2]=c;Hr(C)|0;Hr(E)|0;bz(D);q=b+36|0;e=j[q>>1]|0;if(!(e&128))i[b+32>>0]=2;c=b+33|0;if(!(e&32))i[c>>0]=1;dF(b);n=k[g>>2]|0;E=i[b+32>>0]|0;e=ha(E,n+1|0)|0;c=l[c>>0]<<1;e=c+e|0;o=k[h>>2]|0;c=(ha(o+1|0,E)|0)+c|0;if((n|0)>0){g=k[b+96>>2]|0;h=0;do{e=(k[g+(h<<2)>>2]|0)+e|0;h=h+1|0}while((h|0)<(n|0))}if((o|0)>0){h=k[b+92>>2]|0;g=0;do{c=(k[h+(g<<2)>>2]|0)+c|0;g=g+1|0}while((g|0)<(o|0))}h=b+38|0;do if(!(j[q>>1]&1))g=s;else{E=j[h>>1]|0;g=E&65535;if(E<<16>>16!=0?(F=j[b+40>>1]|0,F<<16>>16!=0):0){if(!((g|0)<(e|0)|(F&65535|0)<(c|0))){c=0;g=s;e=0;break}Yr(0,173508,G)|0;c=0;g=1;e=0;break}Yr(0,173542,H)|0;g=1}while(0);H=m[h>>1]|0;p[b+64>>3]=+(((e|0)>(H|0)?e:H)|0);H=m[b+40>>1]|0;p[b+72>>3]=+(((c|0)>(H|0)?c:H)|0);if(k[I>>2]|0){e=k[10838]|0;if(e)k[d+16>>2]=e;e=k[10839]|0;if(e)k[d+20>>2]=e;f=+p[5421];if(f>=0.0)p[d+32>>3]=f}r=J;return g|0}function nF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0.0,h=0,n=0.0,o=0,q=0.0,s=0.0,t=0.0,u=0,v=0,w=0,x=0.0,y=0.0,z=0.0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;M=r;r=r+64|0;L=M+32|0;K=M;A=k[a+84>>2]|0;d=k[a+80>>2]|0;if(((d|0)!=0?(e=k[d+24>>2]|0,(e|0)!=0):0)?(f=a+24|0,(k[f>>2]|0)==0):0){I=tO(e)|0;k[f>>2]=I}I=a+48|0;e=b+16|0;n=+p[e>>3];g=+p[b>>3];d=~~(n-g-+(~~+p[a+64>>3]|0));if((d|0)<=-1)Wa(173463,173473,1765,173485);f=b+24|0;q=+p[f>>3];h=b+8|0;s=+p[h>>3];t=+(~~+p[a+72>>3]|0);u=~~(q-s-t);if((u|0)<=-1)Wa(173498,173473,1768,173485);o=m[a+36>>1]|0;a:do if(o&1){b:do if((d|0)>0)switch(o&6|0){case 4:{p[e>>3]=g+t;break b}case 2:{z=+(d|0);p[e>>3]=n+z;g=z+g;p[b>>3]=g;break b}default:{z=+((d|0)/2|0|0);g=g+z;p[b>>3]=g;p[e>>3]=n-z;break b}}while(0);if((u|0)>0)switch(o&24|0){case 16:{q=t+s;p[f>>3]=q;d=0;v=0;break a}case 8:{z=+(u|0);q=z+q;p[f>>3]=q;p[h>>3]=z+s;d=0;v=0;break a}default:{z=+((u|0)/2|0|0);p[h>>3]=s+z;q=q-z;p[f>>3]=q;d=0;v=0;break a}}else{d=0;v=0}}else v=u;while(0);w=a+33|0;G=a+32|0;H=a+104|0;F=k[H>>2]|0;u=(d|0)/(F|0)|0;e=d-(ha(u,F)|0)|0;e=~~(+(e|0)+((e|0)>-1?.5:-.5));if((F|0)>=0){d=i[G>>0]|0;f=k[a+96>>2]|0;h=d<<24>>24;o=0;d=~~(+(d<<24>>24)+(g+ +(l[w>>0]|0)));while(1){E=f+(o<<2)|0;F=k[E>>2]|0;k[E>>2]=d;d=d+u+((o|0)<(e|0)&1)+F+h|0;if((o|0)>=(k[H>>2]|0))break;else o=o+1|0}}F=a+100|0;E=k[F>>2]|0;u=(v|0)/(E|0)|0;e=v-(ha(u,E)|0)|0;e=~~(+(e|0)+((e|0)>-1?.5:-.5));if((E|0)>=0){d=i[G>>0]|0;f=k[a+92>>2]|0;h=d<<24>>24;o=0;d=~~(q-+(l[w>>0]|0)-+(d<<24>>24));while(1){D=f+(o<<2)|0;E=k[D>>2]|0;k[D>>2]=d;d=d-u+(((o|0)<(e|0))<<31>>31)-E-h|0;if((o|0)>=(k[F>>2]|0))break;else o=o+1|0}}d=k[A>>2]|0;c:do if(d){v=(c|0)==0;w=a+96|0;B=a+92|0;C=K+8|0;D=K+16|0;E=K+24|0;while(1){A=A+4|0;e=j[d+84>>1]|0;if(v){f=j[d+80>>1]|0;h=j[d+86>>1]|0;o=j[d+82>>1]|0;u=0}else{u=e<<16>>16==0?8:0;O=j[d+86>>1]|0;u=O<<16>>16==0?u|4:u;N=j[d+80>>1]|0;P=j[d+82>>1]|0;f=N;h=O;o=P;u=((P&65535)+(O&65535)|0)==(k[F>>2]|0)|(((N&65535)+(e&65535)|0)==(k[H>>2]|0)?u|2:u)}P=e&65535;O=k[w>>2]|0;q=+(k[O+(P<<2)>>2]|0);e=i[G>>0]|0;s=+((k[O+((f&65535)+P<<2)>>2]|0)-e|0);h=h&65535;P=k[B>>2]|0;z=+(k[P+(h<<2)>>2]|0);y=+((k[P+((o&65535)+h<<2)>>2]|0)+e|0);h=u&c;e=d+24|0;if((k[e>>2]|0)==0?(J=k[(k[d+96>>2]|0)+24>>2]|0,(J|0)!=0):0){P=tO(J)|0;k[e>>2]=P}o=d+36|0;u=m[o>>1]|0;f=d+64|0;d:do if(u&1){g=+p[f>>3];e=d+72|0;x=+p[e>>3];n=s-q-g;e:do if(n>0.0)switch(u&6|0){case 4:{s=q+g;g=q;break e}case 2:{s=s+n;g=q+n;break e}default:{g=n*.5;s=s-g;g=q+g;break e}}else g=q;while(0);n=z-y-x;if(n>0.0)switch(u&24|0){case 16:{q=g;t=y;g=y+x;break d}case 8:{q=g;t=y+n;g=z+n;break d}default:{x=n*.5;q=g;t=y+x;g=z-x;break d}}else{q=g;t=y;g=z}}else{e=d+72|0;t=y;g=z}while(0);p[d+48>>3]=q;p[d+56>>3]=t;p[f>>3]=s;p[e>>3]=g;i[d+35>>0]=h;y=+(l[d+33>>0]|0);z=+(l[d+34>>0]|0);x=q+y+z;p[K>>3]=x;t=t+y+z;p[C>>3]=t;q=s-y-z;p[D>>3]=q;s=g-y-z;p[E>>3]=s;e=d+88|0;switch(i[d+92>>0]|0){case 1:{P=k[e>>2]|0;k[L>>2]=k[K>>2];k[L+4>>2]=k[K+4>>2];k[L+8>>2]=k[K+8>>2];k[L+12>>2]=k[K+12>>2];k[L+16>>2]=k[K+16>>2];k[L+20>>2]=k[K+20>>2];k[L+24>>2]=k[K+24>>2];k[L+28>>2]=k[K+28>>2];nF(P,L,h);break}case 3:{d=k[e>>2]|0;g=+p[d+24>>3];n=q-x-+p[d+16>>3];f:do if(n>0.0)switch(u&6|0){case 4:{p[D>>3]=q-n;break f}case 2:{p[K>>3]=x+n;break f}default:break f}while(0);g=s-t-g;g:do if(g>0.0)switch(u&24|0){case 16:{p[E>>3]=s-g;break g}case 8:{p[C>>3]=t+g;break g}default:break g}while(0);HP(d|0,K|0,32)|0;break}default:{d=k[e>>2]|0;g=+p[d+32>>3];n=q-x-+p[d+24>>3];h:do if(n>0.0)switch(u&6|0){case 6:break h;case 4:{p[D>>3]=q-n;break h}case 2:{p[K>>3]=x+n;break h}default:{z=n*.5;p[K>>3]=x+z;p[D>>3]=q-z;break h}}while(0);g=s-t-g;i:do if(g>0.0)switch(u&24|0){case 16:{p[E>>3]=s-g;break i}case 8:{p[C>>3]=t+g;break i}default:{z=g*.5;p[C>>3]=t+z;p[E>>3]=s-z;break i}}while(0);d=d+8|0;k[d>>2]=k[K>>2];k[d+4>>2]=k[K+4>>2];k[d+8>>2]=k[K+8>>2];k[d+12>>2]=k[K+12>>2];k[d+16>>2]=k[K+16>>2];k[d+20>>2]=k[K+20>>2];k[d+24>>2]=k[K+24>>2];k[d+28>>2]=k[K+28>>2];o=m[o>>1]&768;o=(o|0)==512?108:(o|0)==256?114:110;d=k[e>>2]|0;e=j[d+4>>1]|0;if(e<<16>>16>0){h=k[d>>2]|0;d=e<<16>>16;f=0;do{e=h+(f*24|0)+6|0;if(!(i[e>>0]|0))i[e>>0]=o;f=f+1|0}while((f|0)!=(d|0))}}}d=k[A>>2]|0;if(!d)break c}}while(0);i[a+35>>0]=c;k[I>>2]=k[b>>2];k[I+4>>2]=k[b+4>>2];k[I+8>>2]=k[b+8>>2];k[I+12>>2]=k[b+12>>2];k[I+16>>2]=k[b+16>>2];k[I+20>>2]=k[b+20>>2];k[I+24>>2]=k[b+24>>2];k[I+28>>2]=k[b+28>>2];r=M;return}function oF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,g=0,h=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0.0;Q=r;r=r+112|0;O=Q+48|0;P=Q+16|0;M=Q;k[P>>2]=0;k[P+4>>2]=0;k[P+8>>2]=0;k[P+12>>2]=0;k[P+16>>2]=0;k[P+20>>2]=0;k[P+24>>2]=0;k[P+28>>2]=0;N=b+4|0;g=j[N>>1]|0;u=g<<16>>16>0;if(u){n=c+32|0;o=P+16|0;q=c+16|0;m=k[b>>2]|0;s=g<<16>>16;t=0;l=0;e=-1.0;a:while(1){if((j[m+(t*24|0)+4>>1]|0)>1){h=0;break}h=k[(k[m+(t*24|0)>>2]|0)+4>>2]|0;do if(h){if(k[h+24>>2]&127){h=0;break a}d=+p[h+16>>3];if(!(d>0.0))d=+p[n>>3];p[o>>3]=d;h=k[h>>2]|0;if(!h){h=k[q>>2]|0;k[P>>2]=h;break}else{k[P>>2]=h;break}}else{d=+p[n>>3];p[o>>3]=d;h=k[q>>2]|0;k[P>>2]=h}while(0);if(!(e==-1.0))if(d!=e){h=0;break}else d=e;if(l)if(!(qO(h,l)|0))h=l;else{h=0;break}t=t+1|0;if((t|0)>=(s|0)){h=1;break}else{l=h;e=d}}i[b+6>>0]=h;if(u){q=(h|0)==0;s=c+48|0;t=c+16|0;u=c+32|0;A=P+16|0;B=c+20|0;C=P+4|0;D=c+40|0;E=P+24|0;F=a+144|0;G=O+4|0;H=M+8|0;I=O+16|0;J=O+24|0;K=O+8|0;L=O+12|0;n=c+16|0;g=k[b>>2]|0;z=0.0;o=0;e=0.0;d=0.0;while(1){if((j[g+(o*24|0)+4>>1]|0)>0){h=k[g+(o*24|0)>>2]|0;m=0;y=0.0;v=0.0;f=0.0;x=0.0;while(1){l=uy(k[h+(m*56|0)>>2]|0,k[s>>2]|0)|0;k[O>>2]=l;l=(k[b>>2]|0)+(o*24|0)|0;g=k[(k[l>>2]|0)+(m*56|0)+4>>2]|0;do if(g){g=k[g+24>>2]&127;do if(!g){g=k[D>>2]&127;h=k[E>>2]&-128;if(!g){k[E>>2]=h;break}else{k[E>>2]=h|g;break}}else k[E>>2]=k[E>>2]&-128|g;while(0);h=k[(k[l>>2]|0)+(m*56|0)+4>>2]|0;w=+p[h+16>>3];if(!(w>0.0))w=+p[u>>3];p[A>>3]=w;g=k[h>>2]|0;if(!g)k[P>>2]=k[n>>2];else k[P>>2]=g;g=k[h+4>>2]|0;if(!g){k[C>>2]=k[B>>2];break}else{k[C>>2]=g;break}}else{p[A>>3]=+p[u>>3];k[P>>2]=k[t>>2];k[C>>2]=k[B>>2];k[E>>2]=k[E>>2]&-128|k[D>>2]&127}while(0);g=k[F>>2]|0;g=Tb[k[g>>2]&63](g,P,1)|0;k[G>>2]=g;YA(M,a,O);R=+p[M>>3];w=+p[H>>3];vP(k[(k[(k[b>>2]|0)+(o*24|0)>>2]|0)+(m*56|0)>>2]|0);g=k[b>>2]|0;h=k[g+(o*24|0)>>2]|0;k[h+(m*56|0)>>2]=k[O>>2];p[h+(m*56|0)+32>>3]=R;p[h+(m*56|0)+16>>3]=+p[I>>3];p[h+(m*56|0)+24>>3]=+p[J>>3];k[h+(m*56|0)+4>>2]=k[G>>2];k[h+(m*56|0)+8>>2]=k[K>>2];k[h+(m*56|0)+12>>2]=k[L>>2];x=x+R;R=+p[A>>3];v=R>v?R:v;f=w>f?w:f;w=+p[J>>3];w=w>y?w:y;m=m+1|0;if((m|0)>=(j[g+(o*24|0)+4>>1]|0)){l=g;break}else y=w}}else{l=g;w=0.0;v=0.0;f=0.0;x=0.0}p[l+(o*24|0)+8>>3]=x;h=(o|0)==0;do if(q)if(h){w=v-w;p[l+16>>3]=w;break}else{w=d+v-z-w;p[l+(o*24|0)+16>>3]=w;break}else{g=l+(o*24|0)+16|0;if(h){p[g>>3]=v;w=v;v=f;break}else{p[g>>3]=f;w=f;v=f;break}}while(0);e=x>e?x:e;d=d+v;o=o+1|0;g=j[N>>1]|0;if((o|0)>=(g<<16>>16|0))break;else{g=l;z=z+w}}}else{f=0.0;e=0.0;d=0.0}}else{i[b+6>>0]=1;f=0.0;e=0.0;d=0.0}p[b+24>>3]=e;p[b+32>>3]=g<<16>>16==1?f:d;r=Q;return}function pF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0.0,h=0;d=a+16|0;e=k[d>>2]|0;do if(e)if(!(k[b>>2]|0)){k[c>>2]=0;break}else{k[c>>2]=e;k[d>>2]=k[b>>2];break}while(0);e=a+20|0;f=k[e>>2]|0;do if(f){h=b+4|0;d=c+4|0;if(!(k[h>>2]|0)){k[d>>2]=0;break}else{k[d>>2]=f;k[e>>2]=k[h>>2];break}}while(0);f=a+32|0;g=+p[f>>3];do if(g>=0.0){e=b+16|0;d=c+16|0;if(!(+p[e>>3]>=0.0)){p[d>>3]=-1.0;break}else{p[d>>3]=g;p[f>>3]=+p[e>>3];break}}while(0);return}function qF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,g=0,h=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0.0;x=r;r=r+32|0;w=x+16|0;v=x+8|0;q=x;h=x+24|0;k[b+96>>2]=c;t=b+36|0;g=j[t>>1]|0;do if(!(g&64))if(!(j[c+36>>1]&64)){i[b+34>>0]=2;break}else{i[b+34>>0]=i[c+34>>0]|0;break}while(0);do if(!(g&32)){g=i[c+88>>0]|0;if(g<<24>>24>-1){i[b+33>>0]=g;break}if(!(j[c+36>>1]&32)){i[b+33>>0]=1;break}else{i[b+33>>0]=i[c+33>>0]|0;break}}while(0);o=b+88|0;s=b+92|0;switch(i[s>>0]|0){case 1:{g=mF(a,k[o>>2]|0,b,d)|0;a=k[o>>2]|0;c=a+64|0;a=a+72|0;break}case 3:{n=k[o>>2]|0;g=d+52|0;c=n+32|0;dw(h,k[g>>2]|0,k[c>>2]|0);a=k[h>>2]|0;d=k[h+4>>2]|0;if((d&a|0)==-1){k[q>>2]=k[c>>2];Yr(1,173593,q)|0;f=0.0;e=0.0;g=1}else{i[(k[(k[g>>2]|0)+8>>2]|0)+114>>0]=1;f=+(a|0);e=+(d|0);g=0}k[n>>2]=0;k[n+4>>2]=0;k[n+8>>2]=0;k[n+12>>2]=0;p[n+16>>3]=f;p[n+24>>3]=e;a=k[o>>2]|0;c=a+16|0;a=a+24|0;break}default:{oF(k[(k[a+8>>2]|0)+144>>2]|0,k[o>>2]|0,d);a=k[o>>2]|0;c=a+24|0;a=a+32|0;g=0}}e=+((l[b+33>>0]|0)+(l[b+34>>0]|0)<<1|0);f=+p[c>>3]+e;e=+p[a>>3]+e;a=b+38|0;do if(j[t>>1]&1){t=j[a>>1]|0;c=t&65535;if(t<<16>>16!=0?(u=j[b+40>>1]|0,u<<16>>16!=0):0){if(!(+(c|0)<f|+(u&65535|0)<e)){f=0.0;e=0.0;break}if((i[s>>0]|0)==3){f=0.0;e=0.0;break}Yr(0,173625,v)|0;g=1;f=0.0;e=0.0;break}Yr(0,173658,w)|0;g=1}while(0);y=+(m[a>>1]|0);p[b+64>>3]=f>y?f:y;f=+(m[b+40>>1]|0);p[b+72>>3]=e>f?e:f;r=x;return g|0}function rF(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0;x=r;r=r+224|0;v=x+8|0;m=x;w=x+40|0;l=x+56|0;h=x+88|0;n=k[a+16>>2]|0;s=n+208|0;k[e>>2]=k[s>>2];t=n+228|0;k[e+4>>2]=k[t>>2];u=n+244|0;k[e+8>>2]=k[u>>2];o=n+212|0;k[e+12>>2]=k[o>>2];p=n+260|0;q=e+16|0;i[q>>0]=(j[p>>1]<<15&65535)<<16>>16>>15;g=k[c+16>>2]|0;if((g|0)!=0?(i[g>>0]|0)!=0:0)h=0;else{$r(w,128,h);h=b+60|0;g=k[h>>2]|0;if(!g){g=tO(sx(a,k[n+8>>2]|0,w)|0)|0;k[h>>2]=g;i[b+64>>0]=1}cs(w,g)|0;h=k[22669]|0;k[22669]=h+1;k[m>>2]=h;TN(l,173840,m)|0;cs(w,l)|0;h=w+4|0;g=k[h>>2]|0;if(g>>>0>=(k[w+8>>2]|0)>>>0){as(w,1)|0;g=k[h>>2]|0}i[g>>0]=0;g=k[w>>2]|0;k[h>>2]=g;h=1}g=rx(a,0,k[c>>2]|0,k[c+12>>2]|0,k[c+8>>2]|0,g,k[n+8>>2]|0)|0;if(h)ds(w);do if(g){do if(f){if((k[e>>2]|0)==0?(i[q>>0]|0)==0:0)break;zD(a)}while(0);if((k[s>>2]|0)==0?(j[p>>1]&1)==0:0)break;k[v>>2]=k[d>>2];k[v+4>>2]=k[d+4>>2];k[v+8>>2]=k[d+8>>2];k[v+12>>2]=k[d+12>>2];k[v+16>>2]=k[d+16>>2];k[v+20>>2]=k[d+20>>2];k[v+24>>2]=k[d+24>>2];k[v+28>>2]=k[d+28>>2];vx(a,v);yD(a,k[s>>2]|0,k[t>>2]|0,k[u>>2]|0,k[o>>2]|0)}while(0);r=x;return g|0}function sF(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0.0,g=0,h=0;h=r;r=r+16|0;g=h;if(!((Bx(b,e,g)|0)<<24>>24)){ED(a,b);e=1}else{ED(a,k[e>>2]|0);e=k[e+4>>2]|0;f=+o[g>>2];if(!e)FD(a,173315,c,f);else FD(a,e,c,f);e=d>>>1&1|2}DD(a,173828);r=h;return e|0}function tF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0.0,g=0.0,h=0.0,n=0.0,o=0,q=0,s=0,t=0;t=r;r=r+144|0;q=t+96|0;s=t;e=t+128|0;o=k[b+24>>2]|0;DD(a,(o|0)==0?173315:o);o=b+42|0;d=j[o>>1]|0;if(!(d&384))GD(a,k[(k[a>>2]|0)+336>>2]|0);else{k[e+4>>2]=0;k[e>>2]=0;d=d&65535;if(!(d&256)){if(d&128)k[e>>2]=173821}else k[e>>2]=173814;GD(a,e)}d=b+33|0;OD(a,+(l[d>>0]|0));a:do if(!(j[o>>1]&4)){o=(m[b+36>>1]|0)&15360;if(!o){d=i[d>>0]|0;if((d&255)>1){n=+(d&255)*.5;p[c>>3]=n+ +p[c>>3];s=c+8|0;p[s>>3]=n+ +p[s>>3];s=c+16|0;p[s>>3]=+p[s>>3]-n;s=c+24|0;p[s>>3]=+p[s>>3]-n};k[q>>2]=k[c>>2];k[q+4>>2]=k[c+4>>2];k[q+8>>2]=k[c+8>>2];k[q+12>>2]=k[c+12>>2];k[q+16>>2]=k[c+16>>2];k[q+20>>2]=k[c+20>>2];k[q+24>>2]=k[c+24>>2];k[q+28>>2]=k[c+28>>2];JD(a,q,0);break}b=s+16|0;d=i[d>>0]|0;k[q>>2]=k[c>>2];k[q+4>>2]=k[c+4>>2];k[q+8>>2]=k[c+8>>2];k[q+12>>2]=k[c+12>>2];k[q+16>>2]=k[c+16>>2];k[q+20>>2]=k[c+20>>2];k[q+24>>2]=k[c+24>>2];k[q+28>>2]=k[c+28>>2];k[b>>2]=k[c>>2];k[b+4>>2]=k[c+4>>2];k[b+8>>2]=k[c+8>>2];k[b+12>>2]=k[c+12>>2];e=s+48|0;q=q+16|0;k[e>>2]=k[q>>2];k[e+4>>2]=k[q+4>>2];k[e+8>>2]=k[q+8>>2];k[e+12>>2]=k[q+12>>2];if((d&255)>1){n=+(d&255|0)*.5;h=n+ +p[b>>3];p[b>>3]=h;q=s+24|0;g=n+ +p[q>>3];p[q>>3]=g;f=+p[e>>3]-n;p[e>>3]=f;q=s+56|0;n=+p[q>>3]-n;p[q>>3]=n}else{f=+p[e>>3];g=+p[s+24>>3];h=+p[b>>3];n=+p[s+56>>3]}p[s+32>>3]=f;p[s+40>>3]=g;p[s+64>>3]=h;p[s+72>>3]=n;if((o|0)<8192)switch(o|0){case 4096:{LD(a,s+32|0,2);break a}case 2048:{LD(a,e,2);break a}case 1024:{q=s+64|0;k[s>>2]=k[q>>2];k[s+4>>2]=k[q+4>>2];k[s+8>>2]=k[q+8>>2];k[s+12>>2]=k[q+12>>2];LD(a,s,2);break a}case 6144:{LD(a,s+32|0,3);break a}case 3072:{s=s+80|0;k[s>>2]=k[b>>2];k[s+4>>2]=k[b+4>>2];k[s+8>>2]=k[b+8>>2];k[s+12>>2]=k[b+12>>2];LD(a,e,3);break a}case 7168:{q=s+80|0;k[q>>2]=k[b>>2];k[q+4>>2]=k[b+4>>2];k[q+8>>2]=k[b+8>>2];k[q+12>>2]=k[b+12>>2];LD(a,s+32|0,4);break a}case 5120:{a=s+64|0;k[s>>2]=k[a>>2];k[s+4>>2]=k[a+4>>2];k[s+8>>2]=k[a+8>>2];k[s+12>>2]=k[a+12>>2];break a}default:break a}else switch(o|0){case 8192:{LD(a,b,2);break a}case 12288:{LD(a,b,3);break a}case 9216:{q=s+64|0;k[s>>2]=k[q>>2];k[s+4>>2]=k[q+4>>2];k[s+8>>2]=k[q+8>>2];k[s+12>>2]=k[q+12>>2];LD(a,s,3);break a}case 14336:{LD(a,b,4);break a}case 11264:{q=s+80|0;k[q>>2]=k[b>>2];k[q+4>>2]=k[b+4>>2];k[q+8>>2]=k[b+8>>2];k[q+12>>2]=k[b+12>>2];q=s+96|0;s=s+32|0;k[q>>2]=k[s>>2];k[q+4>>2]=k[s+4>>2];k[q+8>>2]=k[s+8>>2];k[q+12>>2]=k[s+12>>2];LD(a,e,4);break a}case 13312:{q=s+64|0;k[s>>2]=k[q>>2];k[s+4>>2]=k[q+4>>2];k[s+8>>2]=k[q+8>>2];k[s+12>>2]=k[q+12>>2];LD(a,s,4);break a}case 10240:{LD(a,b,2);LD(a,e,2);break a}default:break a}}else{e=i[d>>0]|0;k[q>>2]=k[c>>2];k[q+4>>2]=k[c+4>>2];k[q+8>>2]=k[c+8>>2];k[q+12>>2]=k[c+12>>2];k[q+16>>2]=k[c+16>>2];k[q+20>>2]=k[c+20>>2];k[q+24>>2]=k[c+24>>2];k[q+28>>2]=k[c+28>>2];k[s>>2]=k[c>>2];k[s+4>>2]=k[c+4>>2];k[s+8>>2]=k[c+8>>2];k[s+12>>2]=k[c+12>>2];d=s+32|0;q=q+16|0;k[d>>2]=k[q>>2];k[d+4>>2]=k[q+4>>2];k[d+8>>2]=k[q+8>>2];k[d+12>>2]=k[q+12>>2];if((e&255)>1){n=+(e&255|0)*.5;h=n+ +p[s>>3];p[s>>3]=h;q=s+8|0;g=n+ +p[q>>3];p[q>>3]=g;f=+p[d>>3]-n;p[d>>3]=f;q=s+40|0;n=+p[q>>3]-n;p[q>>3]=n}else{f=+p[d>>3];g=+p[s+8>>3];h=+p[s>>3];n=+p[s+40>>3]}p[s+16>>3]=f;p[s+24>>3]=g;p[s+48>>3]=h;p[s+56>>3]=n;Pz(a,s,4,4,0)}while(0);r=t;return}function uF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,m=0,n=0;h=k[a+16>>2]|0;m=h+208|0;if((k[m>>2]|0)==0?(j[h+260>>1]&1)==0:0)d=0;else{zD(a);d=k[m>>2]|0}if((d|0)!=(k[b>>2]|0)){vP(d);k[m>>2]=k[b>>2]}i=h+228|0;d=k[i>>2]|0;e=b+4|0;if((d|0)!=(k[e>>2]|0)){vP(d);k[i>>2]=k[e>>2]}g=h+244|0;d=k[g>>2]|0;e=b+8|0;if((d|0)!=(k[e>>2]|0)){vP(d);k[g>>2]=k[e>>2]}d=h+212|0;e=k[d>>2]|0;f=b+12|0;if((e|0)!=(k[f>>2]|0)){vP(e);e=k[f>>2]|0;k[d>>2]=e}h=h+260|0;d=(l[b+16>>0]|0)&1;j[h>>1]=j[h>>1]&-2|d;if((c|0)!=0?(n=k[m>>2]|0,!(d<<16>>16==0&(n|0)==0)):0)yD(a,n,k[i>>2]|0,k[g>>2]|0,e);return}function vF(){return Lr(90680,k[12815]|0)|0}function wF(a,b){a=a|0;b=b|0;var c=0,d=0;c=r;r=r+16|0;d=c;k[d>>2]=b;Tb[k[a>>2]&63](a,d,1)|0;r=c;return}function xF(a,b){a=a|0;b=b|0;var c=0,d=0;c=r;r=r+16|0;d=c;k[d>>2]=b;b=(Tb[k[a>>2]&63](a,d,512)|0)!=0&1;r=c;return b|0}function yF(a,b,c){a=a|0;b=b|0;c=c|0;c=By(12)|0;k[c>>2]=k[b>>2];return c|0}function zF(a,b,c){a=a|0;b=b|0;c=c|0;vP(b);return}function AF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;b=k[b>>2]|0;c=k[c>>2]|0;return ((b|0)>(c|0)?1:((b|0)<(c|0))<<31>>31)|0}function BF(a){a=a|0;var b=0;if(!(k[22679]|0)){b=By((a<<2)+4|0)|0;k[22679]=b;k[b>>2]=90720;k[22690]=a}k[22691]=0;return}function CF(){vP(k[22679]|0);k[22679]=0;k[22691]=0;return}function DF(){k[22691]=0;return}function EF(){var a=0,b=0,c=0;a=k[22691]|0;a:do if((a|0)>=1){b=k[22679]|0;c=1;while(1){if((k[(k[b+(c<<2)>>2]|0)+4>>2]|0)!=(c|0))break;if((c|0)<(a|0))c=c+1|0;else break a}Wa(174497,173844,61,173850)}while(0);return}function FF(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;c=k[22679]|0;b=c+(a<<2)|0;f=k[b>>2]|0;e=k[f>>2]|0;d=(a|0)/2|0;c=k[c+(d<<2)>>2]|0;if((k[c>>2]|0)<(e|0))while(1){k[b>>2]=c;k[c+4>>2]=a;a=(d|0)/2|0;b=k[22679]|0;c=k[b+(a<<2)>>2]|0;b=b+(d<<2)|0;if((k[c>>2]|0)>=(e|0)){a=d;break}else{g=d;d=a;a=g}}k[b>>2]=f;k[f+4>>2]=a;return}function GF(a){a=a|0;var b=0,c=0;c=r;r=r+16|0;b=k[22691]|0;if((b|0)==(k[22690]|0)){Yr(1,173858,c)|0;b=1}else{b=b+1|0;k[22691]=b;k[(k[22679]|0)+(b<<2)>>2]=a;FF(b);EF();b=0}r=c;return b|0}function HF(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;b=k[22679]|0;h=k[b+(a<<2)>>2]|0;f=k[h>>2]|0;c=k[22691]|0;g=(c|0)/2|0;a:do if((g|0)>=(a|0))while(1){d=a<<1;e=k[b+(d<<2)>>2]|0;if((d|0)<(c|0)){j=d|1;c=k[b+(j<<2)>>2]|0;i=(k[e>>2]|0)<(k[c>>2]|0);d=i?j:d;c=i?c:e}else c=e;if((f|0)>=(k[c>>2]|0))break a;k[b+(a<<2)>>2]=c;k[c+4>>2]=a;b=k[22679]|0;if((d|0)>(g|0)){a=d;break a}a=d;c=k[22691]|0}while(0);k[b+(a<<2)>>2]=h;k[h+4>>2]=a;return}function IF(){var a=0,b=0,c=0,d=0;b=k[22691]|0;if(!b)a=0;else{d=k[22679]|0;c=d+4|0;a=k[c>>2]|0;k[c>>2]=k[d+(b<<2)>>2];b=b+-1|0;k[22691]=b;if(b)HF(1);EF()}return a|0}function JF(a,b){a=a|0;b=b|0;k[a>>2]=b;FF(k[a+4>>2]|0);EF();return}function KF(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0;g=k[a+16>>2]|0;h=(i[g+((k[c+12>>2]|0)*40|0)+36>>0]|0)!=(i[g+((k[c+16>>2]|0)*40|0)+36>>0]|0);j=~~((+p[b+64>>3]-+p[b+48>>3]+-3.0)*.5);l=~~((+p[b+56>>3]-+p[b+40>>3]+-3.0)*.5);f=(j|0)<(l|0)?j:l;m=k[b+4>>2]|0;a:do if((m|0)>0){a=0;do{d=k[b+8+(a<<2)>>2]|0;if((i[g+((k[d+12>>2]|0)*40|0)+36>>0]|0)==(i[g+((k[d+16>>2]|0)*40|0)+36>>0]|0))break a;e=d+8|0;o=k[e>>2]|0;k[e>>2]=o+1;if((o|0)>=(f|0)){k[e>>2]=0;p[d>>3]=+p[d>>3]+16384.0}a=a+1|0}while((a|0)<(m|0))}else a=0;while(0);if((a|0)<(m|0))do{d=k[b+8+(a<<2)>>2]|0;if(h|(d|0)==(c|0)?(o=(i[g+((k[d+12>>2]|0)*40|0)+36>>0]|0)!=0?j:l,n=d+8|0,f=k[n>>2]|0,k[n>>2]=f+1,(f|0)>=(o|0)):0){k[n>>2]=0;p[d>>3]=+p[d>>3]+16384.0}a=a+1|0}while((a|0)<(m|0));return}function LF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,f=0.0,g=0.0,h=0.0,j=0,l=0,m=0,n=0.0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0.0,S=0.0,T=0.0,U=0.0;Q=r;r=r+256|0;z=Q+208|0;O=Q+200|0;N=Q+192|0;t=Q+160|0;s=Q+128|0;q=Q+96|0;o=Q+80|0;m=Q+32|0;A=Q+16|0;C=Q;u=Q+240|0;v=Q+48|0;P=By(28)|0;b=Zs(a)|0;B=P+4|0;k[B>>2]=b;b=By(b*72|0)|0;D=P+12|0;k[D>>2]=b;w=v+8|0;p[w>>3]=1797693134862315708145274.0e284;p[v>>3]=1797693134862315708145274.0e284;y=v+24|0;p[y>>3]=-1797693134862315708145274.0e284;x=v+16|0;p[x>>3]=-1797693134862315708145274.0e284;c=Kt(a)|0;if(!c){e=1797693134862315708145274.0e284;f=1797693134862315708145274.0e284;g=-1797693134862315708145274.0e284;h=-1797693134862315708145274.0e284}else{e=1797693134862315708145274.0e284;f=1797693134862315708145274.0e284;g=-1797693134862315708145274.0e284;h=-1797693134862315708145274.0e284;while(1){E=c+8|0;l=k[E>>2]|0;R=(+p[l+88>>3]+ +p[l+96>>3])*.5;R=R<1.0?1.0:R;n=+p[l+80>>3]*.5;n=n<1.0?1.0:n;U=+p[l+16>>3];T=U-R;R=U+R;U=+p[l+24>>3];S=U-n;n=U+n;p[v>>3]=e<T?e:T;p[w>>3]=f<S?f:S;p[x>>3]=g>R?g:R;p[y>>3]=h>n?h:n;p[b+40>>3]=T;p[b+48>>3]=S;p[b+56>>3]=R;p[b+64>>3]=n;k[b>>2]=k[b>>2]|1;k[(k[E>>2]|0)+112>>2]=b;c=Lt(a,c)|0;if(!c)break;e=+p[v>>3];f=+p[w>>3];g=+p[x>>3];h=+p[y>>3];b=b+72|0}e=+p[v>>3];f=+p[w>>3];g=+p[x>>3];h=+p[y>>3]}p[v>>3]=e+-36.0;p[w>>3]=f+-36.0;p[x>>3]=g+36.0;p[y>>3]=h+36.0;E=k[D>>2]|0;l=k[B>>2]|0;k[z>>2]=k[v>>2];k[z+4>>2]=k[v+4>>2];k[z+8>>2]=k[v+8>>2];k[z+12>>2]=k[v+12>>2];k[z+16>>2]=k[v+16>>2];k[z+20>>2]=k[v+20>>2];k[z+24>>2]=k[v+24>>2];k[z+28>>2]=k[v+28>>2];l=QF(E,l,u,z)|0;if(k[15041]&1){c=k[D>>2]|0;a=k[B>>2]|0;d=k[u>>2]|0;e=+p[v>>3];f=+p[w>>3];g=+p[x>>3];h=+p[y>>3];j=k[24528]|0;HN(k[22692]|0,j)|0;k[m>>2]=10;k[m+4>>2]=10;k[m+8>>2]=~~(g+10.0-e);k[m+12>>2]=~~(h+10.0-f);FN(j,173873,m)|0;p[o>>3]=10.0-e;p[o+8>>3]=10.0-f;FN(j,173921,o)|0;QN(173938,18,1,j)|0;if((a|0)>0){b=0;do{S=+p[c+(b*72|0)+48>>3];T=+p[c+(b*72|0)+56>>3];U=+p[c+(b*72|0)+64>>3];p[q>>3]=+p[c+(b*72|0)+40>>3];p[q+8>>3]=S;p[q+16>>3]=T;p[q+24>>3]=U;FN(j,173957,q)|0;b=b+1|0}while((b|0)!=(a|0))}QN(173975,18,1,j)|0;if((d|0)>0){b=0;do{S=+p[l+(b<<5)+8>>3];T=+p[l+(b<<5)+16>>3];U=+p[l+(b<<5)+24>>3];p[s>>3]=+p[l+(b<<5)>>3];p[s+8>>3]=S;p[s+16>>3]=T;p[s+24>>3]=U;FN(j,173994,s)|0;b=b+1|0}while((b|0)!=(d|0))}QN(174012,18,1,j)|0;p[t>>3]=e;p[t+8>>3]=f;p[t+16>>3]=g;p[t+24>>3]=h;FN(j,173994,t)|0;HN(k[22693]|0,j)|0}b=By((k[u>>2]|0)*72|0)|0;E=P+8|0;k[E>>2]=b;k[P>>2]=k[u>>2];c=k[u>>2]|0;if((c|0)>0?(u=b+40|0,k[u>>2]=k[l>>2],k[u+4>>2]=k[l+4>>2],k[u+8>>2]=k[l+8>>2],k[u+12>>2]=k[l+12>>2],k[u+16>>2]=k[l+16>>2],k[u+20>>2]=k[l+20>>2],k[u+24>>2]=k[l+24>>2],k[u+28>>2]=k[l+28>>2],(c|0)>1):0){b=1;do{u=(k[E>>2]|0)+(b*72|0)+40|0;t=l+(b<<5)|0;k[u>>2]=k[t>>2];k[u+4>>2]=k[t+4>>2];k[u+8>>2]=k[t+8>>2];k[u+12>>2]=k[t+12>>2];k[u+16>>2]=k[t+16>>2];k[u+20>>2]=k[t+20>>2];k[u+24>>2]=k[t+24>>2];k[u+28>>2]=k[t+28>>2];b=b+1|0}while((b|0)<(c|0))}vP(l);n=+p[v>>3];h=+p[w>>3];g=+p[x>>3];f=+p[y>>3];x=k[P>>2]|0;y=$C(x<<2|2)|0;v=Lr(90776,k[12815]|0)|0;w=Lr(90812,k[12815]|0)|0;x=By(x<<7)|0;b=By(k[P>>2]<<4)|0;if((k[P>>2]|0)>0){c=A+8|0;m=0;do{a=k[E>>2]|0;d=a+(m*72|0)|0;k[a+(m*72|0)+32>>2]=4;j=a+(m*72|0)+36|0;k[j>>2]=b+(m<<2<<2);l=a+(m*72|0)+40|0;e=+p[a+(m*72|0)+56>>3];if(e<g){p[A>>3]=e;p[c>>3]=+p[a+(m*72|0)+48>>3];k[z>>2]=k[A>>2];k[z+4>>2]=k[A+4>>2];k[z+8>>2]=k[A+8>>2];k[z+12>>2]=k[A+12>>2];u=NF(y,v,z,x,1)|0;k[u+20>>2]=d;k[k[j>>2]>>2]=u}e=+p[a+(m*72|0)+64>>3];if(e<f){p[A>>3]=+p[l>>3];p[c>>3]=e;k[z>>2]=k[A>>2];k[z+4>>2]=k[A+4>>2];k[z+8>>2]=k[A+8>>2];k[z+12>>2]=k[A+12>>2];u=NF(y,w,z,x,0)|0;k[u+20>>2]=d;k[(k[j>>2]|0)+4>>2]=u}if(+p[l>>3]>n){k[z>>2]=k[l>>2];k[z+4>>2]=k[l+4>>2];k[z+8>>2]=k[l+8>>2];k[z+12>>2]=k[l+12>>2];u=NF(y,v,z,x,1)|0;k[u+24>>2]=d;k[(k[j>>2]|0)+8>>2]=u}if(+p[a+(m*72|0)+48>>3]>h){k[z>>2]=k[l>>2];k[z+4>>2]=k[l+4>>2];k[z+8>>2]=k[l+8>>2];k[z+12>>2]=k[l+12>>2];u=NF(y,w,z,x,0)|0;k[u+24>>2]=d;k[(k[j>>2]|0)+12>>2]=u}m=m+1|0}while((m|0)<(k[P>>2]|0))}q=By(k[y>>2]<<2)|0;if((k[B>>2]|0)>0){s=C+8|0;t=0;b=0;u=0;while(1){l=k[D>>2]|0;m=l+(t*72|0)|0;o=l+(t*72|0)+36|0;k[o>>2]=q+(u<<2);c=l+(t*72|0)+40|0;k[C>>2]=k[c>>2];k[C+4>>2]=k[c+4>>2];k[C+8>>2]=k[c+8>>2];k[C+12>>2]=k[c+12>>2];c=Tb[k[w>>2]&63](w,C,512)|0;a:do if(c){a=l+(t*72|0)+56|0;d=l+(t*72|0)+32|0;do{if(!(+p[c+8>>3]<+p[a>>3]))break a;z=k[c>>2]|0;A=k[d>>2]|0;k[d>>2]=A+1;k[(k[o>>2]|0)+(A<<2)>>2]=z;k[(k[c>>2]|0)+24>>2]=m;c=Tb[k[w>>2]&63](w,c,8)|0}while((c|0)!=0)}while(0);c=Tb[k[v>>2]&63](v,C,512)|0;j=l+(t*72|0)+64|0;b:do if(c){a=l+(t*72|0)+32|0;do{if(!(+p[c+16>>3]<+p[j>>3]))break b;z=k[c>>2]|0;A=k[a>>2]|0;k[a>>2]=A+1;k[(k[o>>2]|0)+(A<<2)>>2]=z;k[(k[c>>2]|0)+24>>2]=m;c=Tb[k[v>>2]&63](v,c,8)|0}while((c|0)!=0)}while(0);p[s>>3]=+p[j>>3];c=Tb[k[w>>2]&63](w,C,512)|0;a=l+(t*72|0)+56|0;d=l+(t*72|0)+32|0;c:do if(c)do{if(!(+p[c+8>>3]<+p[a>>3]))break c;z=k[c>>2]|0;A=k[d>>2]|0;k[d>>2]=A+1;k[(k[o>>2]|0)+(A<<2)>>2]=z;k[(k[c>>2]|0)+20>>2]=m;c=Tb[k[w>>2]&63](w,c,8)|0}while((c|0)!=0);while(0);p[C>>3]=+p[a>>3];p[s>>3]=+p[l+(t*72|0)+48>>3];c=Tb[k[v>>2]&63](v,C,512)|0;d:do if(c)do{if(!(+p[c+16>>3]<+p[j>>3]))break d;z=k[c>>2]|0;A=k[d>>2]|0;k[d>>2]=A+1;k[(k[o>>2]|0)+(A<<2)>>2]=z;k[(k[c>>2]|0)+20>>2]=m;c=Tb[k[v>>2]&63](v,c,8)|0}while((c|0)!=0);while(0);a=k[d>>2]|0;b=(a|0)>(b|0)?a:b;t=t+1|0;c=k[B>>2]|0;if((t|0)>=(c|0)){q=c;break}else u=a+u|0}if((q|0)>0){l=k[D>>2]|0;o=0;do{m=l+(o*72|0)|0;if((+p[l+(o*72|0)+64>>3]-+p[l+(o*72|0)+48>>3]+-3.0)*.5<2.0?(F=k[l+(o*72|0)+32>>2]|0,(F|0)>0):0){d=k[l+(o*72|0)+36>>2]|0;j=0;do{c=k[d+(j<<2)>>2]|0;e:do if(i[c+36>>0]|0){a=k[c+20>>2]|0;if((a|0)==(m|0)){c=k[c+24>>2]|0;k[c>>2]=k[c>>2]|8;c=k[k[c+36>>2]>>2]|0;if(!c)break;do{c=k[c+24>>2]|0;a=k[c>>2]|0;if(a&1)break e;k[c>>2]=a|8;c=k[k[c+36>>2]>>2]|0}while((c|0)!=0)}else{k[a>>2]=k[a>>2]|8;c=k[(k[a+36>>2]|0)+8>>2]|0;if(!c)break;do{c=k[c+20>>2]|0;a=k[c>>2]|0;if(a&1)break e;k[c>>2]=a|8;c=k[(k[c+36>>2]|0)+8>>2]|0}while((c|0)!=0)}}while(0);j=j+1|0}while((j|0)!=(F|0))}if((+p[l+(o*72|0)+56>>3]-+p[l+(o*72|0)+40>>3]+-3.0)*.5<2.0?(G=k[l+(o*72|0)+32>>2]|0,(G|0)>0):0){d=k[l+(o*72|0)+36>>2]|0;j=0;do{c=k[d+(j<<2)>>2]|0;f:do if(!(i[c+36>>0]|0)){a=k[c+20>>2]|0;if((a|0)==(m|0)){c=k[c+24>>2]|0;k[c>>2]=k[c>>2]|16;c=k[(k[c+36>>2]|0)+4>>2]|0;if(!c)break;do{c=k[c+24>>2]|0;a=k[c>>2]|0;if(a&1)break f;k[c>>2]=a|16;c=k[(k[c+36>>2]|0)+4>>2]|0}while((c|0)!=0)}else{k[a>>2]=k[a>>2]|16;c=k[(k[a+36>>2]|0)+12>>2]|0;if(!c)break;do{c=k[c+20>>2]|0;a=k[c>>2]|0;if(a&1)break f;k[c>>2]=a|16;c=k[(k[c+36>>2]|0)+12>>2]|0}while((c|0)!=0)}}while(0);j=j+1|0}while((j|0)!=(G|0))}o=o+1|0}while((o|0)!=(q|0))}}else b=0;G=k[y>>2]|0;l=y+16|0;F=k[l>>2]|0;k[F+(G*40|0)+32>>2]=G;G=G+1|0;k[F+(G*40|0)+32>>2]=G;_C(y,b);if((k[P>>2]|0)>0){j=0;do{d=k[E>>2]|0;b=d+(j*72|0)|0;f=+p[d+(j*72|0)+56>>3]-+p[d+(j*72|0)+40>>3];g=+p[d+(j*72|0)+64>>3]-+p[d+(j*72|0)+48>>3];e=(f+g)*.5+500.0;if((g+-3.0)*.5<2.0){G=(k[b>>2]&8|0)==0;h=G?16384.0:f;e=G?16384.0:e}else h=f;if((f+-3.0)*.5<2.0){G=(k[b>>2]&16|0)==0;g=G?16384.0:g;e=G?16384.0:e}a=d+(j*72|0)+36|0;b=k[a>>2]|0;c=k[b+8>>2]|0;if((c|0)!=0?(H=k[b+4>>2]|0,(H|0)!=0):0){G=bD(y,c,H,e)|0;F=d+(j*72|0)+4|0;b=k[F>>2]|0;k[F>>2]=b+1;k[d+(j*72|0)+8+(b<<2)>>2]=G;b=k[a>>2]|0}c=k[b+4>>2]|0;if((c|0)!=0?(I=k[b>>2]|0,(I|0)!=0):0){G=bD(y,c,I,e)|0;F=d+(j*72|0)+4|0;b=k[F>>2]|0;k[F>>2]=b+1;k[d+(j*72|0)+8+(b<<2)>>2]=G;b=k[a>>2]|0}c=k[b+8>>2]|0;if((c|0)!=0?(J=k[b+12>>2]|0,(J|0)!=0):0){G=bD(y,c,J,e)|0;F=d+(j*72|0)+4|0;b=k[F>>2]|0;k[F>>2]=b+1;k[d+(j*72|0)+8+(b<<2)>>2]=G;b=k[a>>2]|0}c=k[b+12>>2]|0;if((c|0)!=0?(K=k[b>>2]|0,(K|0)!=0):0){G=bD(y,c,K,e)|0;F=d+(j*72|0)+4|0;b=k[F>>2]|0;k[F>>2]=b+1;k[d+(j*72|0)+8+(b<<2)>>2]=G;b=k[a>>2]|0}c=k[b+4>>2]|0;if((c|0)!=0?(L=k[b+12>>2]|0,(L|0)!=0):0){G=bD(y,c,L,g)|0;F=d+(j*72|0)+4|0;b=k[F>>2]|0;k[F>>2]=b+1;k[d+(j*72|0)+8+(b<<2)>>2]=G;b=k[a>>2]|0}c=k[b+8>>2]|0;if((c|0)!=0?(M=k[b>>2]|0,(M|0)!=0):0){F=bD(y,c,M,h)|0;D=d+(j*72|0)+4|0;G=k[D>>2]|0;k[D>>2]=G+1;k[d+(j*72|0)+8+(G<<2)>>2]=F}j=j+1|0}while((j|0)<(k[P>>2]|0))}Hr(v)|0;Hr(w)|0;vP(x);g:do if((k[y>>2]|0)>0){a=k[24528]|0;d=0;while(1){b=k[l>>2]|0;c=b+(d*40|0)+20|0;if((k[c>>2]|0)==0?(k[N>>2]=d,FN(a,174031,N)|0,(k[c>>2]|0)==0):0){b=98;break}b=b+(d*40|0)+24|0;if((k[b>>2]|0)==0?(k[O>>2]=d,FN(a,174083,O)|0,(k[b>>2]|0)==0):0){b=101;break}d=d+1|0;if((d|0)>=(k[y>>2]|0))break g}if((b|0)==98)Wa(174053,174066,313,174073);else if((b|0)==101)Wa(174105,174066,315,174073)}while(0);YC(y);k[P+16>>2]=y;r=Q;return P|0}function MF(a){a=a|0;var b=0,c=0;c=a+8|0;vP(k[(k[c>>2]|0)+36>>2]|0);b=a+12|0;vP(k[(k[b>>2]|0)+36>>2]|0);vP(k[c>>2]|0);vP(k[b>>2]|0);cD(k[a+16>>2]|0);Hr(k[a+20>>2]|0)|0;Hr(k[a+24>>2]|0)|0;vP(a);return}function NF(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;f=Tb[k[b>>2]&63](b,c,512)|0;do if(!f){f=aD(a)|0;if(!d)Wa(174444,174066,293,174451);else{a=k[f+32>>2]|0;g=d+(a<<5)|0;d=d+(a<<5)+8|0;k[d>>2]=k[c>>2];k[d+4>>2]=k[c+4>>2];k[d+8>>2]=k[c+8>>2];k[d+12>>2]=k[c+12>>2];k[g>>2]=f;i[f+36>>0]=e;Tb[k[b>>2]&63](b,g,1)|0;break}}else g=f;while(0);return k[g>>2]|0}function OF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0;e=+p[b+8>>3];f=+p[c+8>>3];if(!(e>f))if(!(e<f)){f=+p[b>>3];e=+p[c>>3];if(f>e)a=1;else a=(f<e)<<31>>31}else a=-1;else a=1;return a|0}function PF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0;e=+p[b>>3];f=+p[c>>3];if(!(e>f))if(!(e<f)){f=+p[b+8>>3];e=+p[c+8>>3];if(f>e)a=1;else a=(f<e)<<31>>31}else a=-1;else a=1;return a|0}function QF(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0;u=r;r=r+32|0;j=u;t=b<<2;h=t+4|0;t=t+5|0;s=Cy(t*56|0)|0;t=By(t<<2)|0;l=h*5|1;n=Cy(l*72|0)|0;q=l<<5;o=By(q)|0;q=By(q)|0;k[j>>2]=k[d>>2];k[j+4>>2]=k[d+4>>2];k[j+8>>2]=k[d+8>>2];k[j+12>>2]=k[d+12>>2];k[j+16>>2]=k[d+16>>2];k[j+20>>2]=k[d+20>>2];k[j+24>>2]=k[d+24>>2];k[j+28>>2]=k[d+28>>2];RF(a,b,j,s,0);cN(173);SF(h,t);YF(h,s,t,l,n)|0;m=TF(h,s,n,0,o)|0;k[j>>2]=k[d>>2];k[j+4>>2]=k[d+4>>2];k[j+8>>2]=k[d+8>>2];k[j+12>>2]=k[d+12>>2];k[j+16>>2]=k[d+16>>2];k[j+20>>2]=k[d+20>>2];k[j+24>>2]=k[d+24>>2];k[j+28>>2]=k[d+28>>2];RF(a,b,j,s,1);SF(h,t);YF(h,s,t,l,n)|0;h=TF(h,s,n,1,q)|0;l=By(ha(m<<5,h)|0)|0;if((h|0)>0){i=(m|0)>0;d=0;j=0;do{if(i){b=q+(j<<5)|0;e=q+(j<<5)+16|0;f=q+(j<<5)+8|0;g=q+(j<<5)+24|0;a=0;do{z=+p[b>>3];y=+p[o+(a<<5)>>3];y=z>y?z:y;z=+p[e>>3];x=+p[o+(a<<5)+16>>3];x=z<x?z:x;p[l+(d<<5)+16>>3]=x;p[l+(d<<5)>>3]=y;z=+p[f>>3];w=+p[o+(a<<5)+8>>3];w=z>w?z:w;z=+p[g>>3];v=+p[o+(a<<5)+24>>3];v=z<v?z:v;p[l+(d<<5)+24>>3]=v;p[l+(d<<5)+8>>3]=w;d=((y>=x|w>=v)&1^1)+d|0;a=a+1|0}while((a|0)!=(m|0))}j=j+1|0}while((j|0)!=(h|0))}else d=0;m=Ey(l,d<<5)|0;vP(s);vP(t);vP(n);vP(o);vP(q);k[c>>2]=d;r=u;return m|0}function RF(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0.0,g=0.0,h=0.0,j=0.0,k=0,l=0,m=0,n=0,o=0,q=0,s=0,u=0,v=0,w=0,x=0;w=r;r=r+64|0;v=w;g=+p[c>>3];h=+p[c+8>>3];j=+p[c+16>>3];f=+p[c+24>>3];p[v>>3]=g;q=v+8|0;p[q>>3]=h;s=v+32|0;p[s>>3]=j;u=v+40|0;p[u>>3]=f;l=v+16|0;p[l>>3]=j;m=v+24|0;p[m>>3]=h;n=v+48|0;p[n>>3]=g;o=v+56|0;p[o>>3]=f;k=(e|0)==0;if(!k){p[q>>3]=g;h=-h;p[v>>3]=h;p[m>>3]=j;p[l>>3]=h;p[u>>3]=j;j=-f;p[s>>3]=j;p[o>>3]=g;p[n>>3]=j}c=XF(d,1,v)|0;if((b|0)>0){e=0;do{x=a+(e*72|0)+40|0;i[t>>0]=i[x>>0];i[t+1>>0]=i[x+1>>0];i[t+2>>0]=i[x+2>>0];i[t+3>>0]=i[x+3>>0];i[t+4>>0]=i[x+4>>0];i[t+5>>0]=i[x+5>>0];i[t+6>>0]=i[x+6>>0];i[t+7>>0]=i[x+7>>0];f=+p[t>>3];x=a+(e*72|0)+48|0;i[t>>0]=i[x>>0];i[t+1>>0]=i[x+1>>0];i[t+2>>0]=i[x+2>>0];i[t+3>>0]=i[x+3>>0];i[t+4>>0]=i[x+4>>0];i[t+5>>0]=i[x+5>>0];i[t+6>>0]=i[x+6>>0];i[t+7>>0]=i[x+7>>0];g=+p[t>>3];x=a+(e*72|0)+56|0;i[t>>0]=i[x>>0];i[t+1>>0]=i[x+1>>0];i[t+2>>0]=i[x+2>>0];i[t+3>>0]=i[x+3>>0];i[t+4>>0]=i[x+4>>0];i[t+5>>0]=i[x+5>>0];i[t+6>>0]=i[x+6>>0];i[t+7>>0]=i[x+7>>0];h=+p[t>>3];x=a+(e*72|0)+64|0;i[t>>0]=i[x>>0];i[t+1>>0]=i[x+1>>0];i[t+2>>0]=i[x+2>>0];i[t+3>>0]=i[x+3>>0];i[t+4>>0]=i[x+4>>0];i[t+5>>0]=i[x+5>>0];i[t+6>>0]=i[x+6>>0];i[t+7>>0]=i[x+7>>0];j=+p[t>>3];p[v>>3]=f;p[q>>3]=g;p[s>>3]=h;p[u>>3]=j;p[l>>3]=f;p[m>>3]=j;p[n>>3]=h;p[o>>3]=g;if(!k){p[q>>3]=f;g=-g;p[v>>3]=g;p[m>>3]=f;j=-j;p[l>>3]=j;p[u>>3]=h;p[s>>3]=j;p[o>>3]=h;p[n>>3]=g}c=XF(d,c,v)|0;e=e+1|0}while((e|0)!=(b|0))}r=w;return}function SF(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;if((a|0)>=0){c=0;while(1){k[b+(c<<2)>>2]=c;if((c|0)==(a|0))break;else c=c+1|0}if((a|0)>=1){a=a+1|0;d=1;do{c=~~(+(d|0)+ +(a-d|0)*+_M());if((c|0)!=(d|0)){f=b+(d<<2)|0;e=k[f>>2]|0;c=b+(c<<2)|0;k[f>>2]=k[c>>2];k[c>>2]=e}d=d+1|0}while((d|0)!=(a|0))}}return}function TF(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0.0,l=0.0,m=0,n=0,o=0,q=0,r=0;h=(a*5|0)+1|0;n=By(h<<2)|0;m=By(h<<4)|0;k[22712]=m;m=By((a*56|0)+56|0)|0;k[22713]=m;m=By(a<<2)|0;k[22714]=m;if((a|0)>-1){f=0;a:do{g=k[c+(f*72|0)+4>>2]|0;do if((k[c+(f*72|0)+68>>2]|0)!=2?!((g|0)<1?1:(k[c+(f*72|0)>>2]|0)<1):0){if(!((k[c+(f*72|0)+40>>2]|0)<1?(k[c+(f*72|0)+44>>2]|0)<1:0)){if((k[c+(f*72|0)+48>>2]|0)>=1)break;if((k[c+(f*72|0)+52>>2]|0)>=1)break}j=+p[b+(g*56|0)+24>>3];l=+p[b+(g*56|0)+8>>3];if(j>l+1.0e-07)break a;if(!(j<l+-1.0e-07)?+p[b+(g*56|0)+16>>3]>+p[b+(g*56|0)>>3]:0)break a}while(0);f=f+1|0}while((f|0)<(h|0));if((a|0)<1)g=f;else{g=k[22712]|0;h=k[22713]|0;i=1;while(1){k[g+(i<<4)+8>>2]=k[b+(i*56|0)+48>>2];o=b+(i*56|0)+44|0;k[g+(i<<4)+4>>2]=k[o>>2];k[g+(i<<4)>>2]=i;q=h+(i*56|0)|0;r=b+(i*56|0)|0;k[q>>2]=k[r>>2];k[q+4>>2]=k[r+4>>2];k[q+8>>2]=k[r+8>>2];k[q+12>>2]=k[r+12>>2];k[h+(i*56|0)+16>>2]=k[o>>2];k[h+(i*56|0)+32>>2]=i;k[h+(i*56|0)+48>>2]=1;if((i|0)==(a|0)){g=f;break}else i=i+1|0}}}else g=0;k[22715]=a;k[22716]=0;k[m>>2]=1;f=k[c+(g*72|0)+40>>2]|0;if((f|0)<=0){f=k[c+(g*72|0)+48>>2]|0;if((f|0)>0)f=UF(n,e,0,b,c,0,g,f,d,2)|0;else f=0}else f=UF(n,e,0,b,c,0,g,f,d,1)|0;vP(n);vP(k[22712]|0);vP(k[22713]|0);vP(k[22714]|0);return f|0}
function Qt(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0;l=r;r=r+16|0;i=l;e=au(a)|0;do if(et(a,1,b,i,0)|0){k[12953]=k[i>>2];k[12969]=51808;h=k[a+28>>2]|0;h=Tb[k[h>>2]&63](h,51860,4)|0;if((h|0)!=0?(d=k[h+16>>2]|0,(d|0)!=0):0)break;if((!((c|0)==0|(e|0)==(a|0))?(k[12953]=k[i>>2],k[12969]=51808,f=k[e+28>>2]|0,f=Tb[k[f>>2]&63](f,51860,4)|0,(f|0)!=0):0)?(g=k[f+16>>2]|0,(g|0)!=0):0)d=Pt(a,g,1)|0;else j=8}else j=8;while(0);if((j|0)==8)if((c|0)!=0?(et(a,1,b,i,1)|0)!=0:0){d=k[i>>2]|0;d=Vt(a,d,Xs(a,1)|0)|0;Wt(a,d);Xt(a,d);it(a,1,d)}else d=0;r=l;return d|0}function Rt(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;k[12978]=b;c=Js(a,b)|0;if(c)do{d=c;c=Ks(a,c,b)|0;Ms(a,d,0)}while((c|0)!=0);d=k[a+28>>2]|0;Tb[k[d>>2]&63](d,51896,2)|0;d=k[a+24>>2]|0;Tb[k[d>>2]&63](d,51896,2)|0;return}function St(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=b+4|0;k[12953]=k[d>>2];k[12969]=51808;c=k[a+28>>2]|0;c=Tb[k[c>>2]&63](c,51860,4)|0;if((c|0)!=0?(k[c+16>>2]|0)!=0:0){if((au(a)|0)==(a|0)){c=Js(a,b)|0;if(c)do{e=c;c=Ks(a,c,b)|0;Ns(a,e)|0}while((c|0)!=0);if(i[a+12>>0]&64)ps(b);fu(a,b);uu(b);gt(a,1,k[d>>2]|0)}if(!(kv(a,b,57,0,0)|0))if((au(a)|0)==(a|0)){Ft(a,b);c=0}else c=0;else c=-1}else c=-1;return c|0}function Tt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=k[(k[b+16>>2]|0)+4>>2]|0;b=k[(k[c+16>>2]|0)+4>>2]|0;if((a|0)==(b|0))b=0;else b=a-b>>31|1;return b|0}function Ut(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=(k[k[b+16>>2]>>2]|0)>>>4;d=(k[k[c+16>>2]>>2]|0)>>>4;return ((a|0)==(d|0)?0:a>>>0<d>>>0?-1:1)|0}function Vt(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=Et(a,52)|0;e=k[d>>2]|0;k[d+4>>2]=b;k[d>>2]=e&12|c<<4|1;c=au(a)|0;k[d+12>>2]=c;c=(au(a)|0)+12|0;if(i[c>>0]&64)qu(d,k[12841]|0,16,0)|0;return d|0}function Wt(a,b){a=a|0;b=b|0;do{Yt(a,b);a=Ku(a)|0}while((a|0)!=0);return}function Xt(a,b){a=a|0;b=b|0;var c=0;c=(au(a)|0)+12|0;if(i[c>>0]&64)os(a,b);bu(a,b);return}function Yt(a,b){a=a|0;b=b|0;var c=0,d=0;c=a+28|0;Nr(k[c>>2]|0)|0;if((au(a)|0)==(a|0))d=b+16|0;else d=Et(a,36)|0;k[d+16>>2]=b;b=k[c>>2]|0;Tb[k[b>>2]&63](b,d,1)|0;b=k[a+24>>2]|0;Tb[k[b>>2]&63](b,d,1)|0;return}function Zt(a,b,c){a=a|0;b=b|0;c=c|0;a=k[b+16>>2]|0;if((a+16|0)!=(b|0))Ft(k[a+12>>2]|0,b);return}function _t(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;g=r;r=r+16|0;e=g+8|0;d=g;c=k[b>>2]|0;do if(!(c&3))if((Ku(b)|0)==(a|0)){c=k[b>>2]|0;f=5;break}else{Yr(1,132697,d)|0;c=-1;break}else f=5;while(0);a:do if((f|0)==5)switch(c&3|0){case 1:{c=St(a,b)|0;break a}case 2:case 3:{c=Ns(a,b)|0;break a}case 0:{c=Ys(b)|0;break a}default:{Yr(1,132721,e)|0;c=0;break a}}while(0);r=g;return c|0}function $t(a){a=a|0;var b=0;b=r;r=r+16|0;switch(k[a>>2]&3|0){case 2:case 3:{a=k[(k[a+28>>2]|0)+12>>2]|0;break}case 1:{a=k[a+12>>2]|0;break}case 0:break;default:{Yr(1,132744,b)|0;a=0}}r=b;return a|0}function au(a){a=a|0;var b=0;b=r;r=r+16|0;switch(k[a>>2]&3|0){case 2:case 3:{a=k[(k[a+28>>2]|0)+12>>2]|0;break}case 1:{a=k[a+12>>2]|0;break}case 0:{a=k[a+48>>2]|0;break}default:{Yr(1,132766,b)|0;a=0}}r=b;return a|0}function bu(a,b){a=a|0;b=b|0;var c=0;c=k[a+52>>2]|0;if(!(i[c+40>>0]|0))lu(a,b,100,0);else cu(a,b,k[c+36>>2]|0);return}function cu(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;a:do if(c){cu(a,b,k[c+8>>2]|0);switch(k[b>>2]&3|0){case 0:{d=k[c>>2]|0;break}case 1:{d=(k[c>>2]|0)+12|0;break}case 2:{d=(k[c>>2]|0)+24|0;break}default:break a}d=k[d>>2]|0;if(d)dc[d&127](a,b,k[c+4>>2]|0)}while(0);return}function du(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=k[a+52>>2]|0;if(!(i[d+40>>0]|0))lu(a,b,101,c);else eu(a,b,c,k[d+36>>2]|0);return}function eu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;a:do if(d){eu(a,b,c,k[d+8>>2]|0);switch(k[b>>2]&3|0){case 0:{e=(k[d>>2]|0)+4|0;break}case 1:{e=(k[d>>2]|0)+16|0;break}case 2:{e=(k[d>>2]|0)+28|0;break}default:break a}e=k[e>>2]|0;if(e)hc[e&31](a,b,k[d+4>>2]|0,c)}while(0);return}function fu(a,b){a=a|0;b=b|0;var c=0;c=k[a+52>>2]|0;if(!(i[c+40>>0]|0))lu(a,b,102,0);else gu(a,b,k[c+36>>2]|0);return}function gu(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;a:do if(c){gu(a,b,k[c+8>>2]|0);switch(k[b>>2]&3|0){case 0:{d=(k[c>>2]|0)+8|0;break}case 1:{d=(k[c>>2]|0)+20|0;break}case 2:{d=(k[c>>2]|0)+32|0;break}default:break a}d=k[d>>2]|0;if(d)dc[d&127](a,b,k[c+4>>2]|0)}while(0);return}function hu(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=Et(a,12)|0;k[d>>2]=b;k[d+4>>2]=c;c=(k[a+52>>2]|0)+36|0;k[d+8>>2]=k[c>>2];k[c>>2]=d;return}function iu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=(k[a+52>>2]|0)+36|0;c=k[d>>2]|0;a:do if(!c)c=-1;else{if((k[c>>2]|0)!=(b|0)){while(1){if(!c){c=-1;break a}e=c+8|0;d=k[e>>2]|0;if((k[d>>2]|0)==(b|0))break;else c=d}if(d)k[e>>2]=k[d+8>>2]}else k[d>>2]=k[c+8>>2];Ft(a,c);c=0}while(0);return c|0}function ju(a,b){a=a|0;b=b|0;var c=0;c=au(a)|0;a:do if((c|0)==(au(b)|0))switch(k[b>>2]&3|0){case 0:{while(1){if((b|0)==(a|0)){b=1;break a}b=Ku(b)|0;if(!b){b=0;break}}break}case 1:{b=(Ot(a,k[b+4>>2]|0,0)|0)!=0&1;break a}default:{b=(Os(a,b,0)|0)!=0&1;break a}}else b=0;while(0);return b|0}function ku(a){a=a|0;return k[a>>2]&3|0}function lu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;i=r;r=r+32|0;e=i;h=i+8|0;g=qu(a,132789,44,0)|0;a:do switch(c|0){case 100:{c=mu(g,b,100)|0;k[h+8>>2]=k[b+4>>2];if(!(Tb[k[c>>2]&63](c,h,4)|0))nu(c,a,b,d)|0;break}case 101:{f=mu(g,b,100)|0;c=b+4|0;k[h+8>>2]=k[c>>2];if((Tb[k[f>>2]&63](f,h,4)|0)==0?(f=mu(g,b,102)|0,k[h+8>>2]=k[c>>2],(Tb[k[f>>2]&63](f,h,4)|0)==0):0){e=mu(g,b,101)|0;k[h+8>>2]=k[c>>2];c=Tb[k[e>>2]&63](e,h,4)|0;if(!c)c=nu(e,a,b,d)|0;c=k[c+20>>2]|0;if(c)do{if((k[c>>2]|0)==(d|0))break a;c=k[c+4>>2]|0}while((c|0)!=0)}break}case 102:{c=mu(g,b,100)|0;f=b+4|0;k[h+8>>2]=k[f>>2];e=Tb[k[c>>2]&63](c,h,4)|0;if(e)Tb[k[c>>2]&63](c,e,2)|0;c=mu(g,b,101)|0;k[h+8>>2]=k[f>>2];e=Tb[k[c>>2]&63](c,h,4)|0;if(e)Tb[k[c>>2]&63](c,e,2)|0;c=mu(g,b,102)|0;k[h+8>>2]=k[f>>2];if(!(Tb[k[c>>2]&63](c,h,4)|0))nu(c,a,b,d)|0;break}default:Yr(1,132801,e)|0}while(0);r=i;return}function mu(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;f=r;r=r+16|0;d=f;a:do switch(k[b>>2]&3|0){case 0:switch(c|0){case 100:{c=a+8|0;break a}case 101:{c=a+20|0;break a}case 102:{c=a+32|0;break a}default:{e=14;break a}}case 1:switch(c|0){case 100:{c=a+12|0;break a}case 101:{c=a+24|0;break a}case 102:{c=a+36|0;break a}default:{e=14;break a}}case 2:switch(c|0){case 100:{c=a+16|0;break a}case 101:{c=a+28|0;break a}case 102:{c=a+40|0;break a}default:{e=14;break a}}default:e=14}while(0);if((e|0)==14){Yr(1,132835,d)|0;c=0}a=k[c>>2]|0;if(!a){a=$t(b)|0;a=Pu(a,51932,k[12819]|0)|0;k[c>>2]=a}r=f;return a|0}function nu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=Et($t(c)|0,24)|0;k[e+16>>2]=c;k[e+8>>2]=k[c+4>>2];k[e+12>>2]=b;if(d){c=Et(b,8)|0;k[e+20>>2]=c;k[c>>2]=d}Tb[k[a>>2]&63](a,e,1)|0;return e|0}function ou(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;a=k[b+20>>2]|0;c=b+12|0;if(a)do{d=a;a=k[a+4>>2]|0;Ft(k[c>>2]|0,d)}while((a|0)!=0);Ft(k[c>>2]|0,b);return}function pu(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0;j=r;r=r+16|0;g=j;d=k[a+8>>2]|0;e=d;while(1){if(!e){d=0;break}f=k[e>>2]|0;if((f|0)==(b|0)){h=7;break}if((i[b>>0]|0)==(i[f>>0]|0)?(qO(b,f)|0)==0:0){h=7;break}e=k[e+4>>2]|0;if((e|0)==(d|0)){d=0;break}}do if((h|0)==7){if(!(k[a>>2]&4)){if((e|0)==(d|0)&(c|0)==0)break;vu(a,e,c);d=e;break}if(c){if((d|0)!=(e|0)){Yr(1,132860,g)|0;d=e}}else d=e}while(0);r=j;return d|0}function qu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;f=$t(a)|0;e=pu(a,b,0)|0;a:do if((c|0)!=0&(e|0)==0){e=Et(f,c)|0;f=Bu(f,b)|0;k[e>>2]=f;switch(k[a>>2]&3|0){case 0:{wu(a,e);break a}case 1:{wu(a,e);break a}case 2:case 3:{wu(a,e);break a}default:break a}}while(0);if(d)pu(a,b,1)|0;return e|0}function ru(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;h=$t(a)|0;d=pu(a,b,0)|0;if(!d)b=-1;else{e=a+8|0;f=k[e>>2]|0;c=f;do{b=c+4|0;c=k[b>>2]|0}while((c|0)!=(d|0));c=d+4|0;k[b>>2]=k[c>>2];b=k[a>>2]|0;switch(b&3|0){case 0:{if((f|0)==(d|0)?(g=k[c>>2]|0,g=(g|0)==(d|0)?0:g,k[e>>2]=g,k[a>>2]=b&-5,(b&2|0)!=0):0){f=a+32|0;k[a+40>>2]=g;k[f>>2]=k[f>>2]&-5}break}case 2:case 3:case 1:{kv(au(h)|0,a,58,d,0)|0;break}default:{}}Du(h,k[d>>2]|0)|0;Ft(h,d);b=0}return b|0}function su(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;g=(d|0)<0?0-d|0:d;switch(b|0){case 0:{qu(a,c,g,e)|0;if((d|0)<=-1?(f=Iu(a)|0,(f|0)!=0):0)do{su(f,0,c,d,e);f=Ju(f)|0}while((f|0)!=0);break}case 3:case 2:case 1:{f=Kt(a)|0;if(f){b=(b|0)==1;d=f;do{if(!b){f=Es(a,d)|0;if(f)do{qu(f,c,g,e)|0;f=Gs(a,f)|0}while((f|0)!=0)}else qu(d,c,g,e)|0;d=Lt(a,d)|0}while((d|0)!=0)}break}default:{}}return}function tu(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;switch(b|0){case 0:{kv(a,a,59,c,1)|0;break}case 3:case 2:case 1:{d=Kt(a)|0;if(d){e=(b|0)==1;do{if(!e){b=Es(a,d)|0;if(b)do{ru(b,c)|0;b=Gs(a,b)|0}while((b|0)!=0)}else ru(d,c)|0;d=Lt(a,d)|0}while((d|0)!=0)}break}default:{}}return}function uu(a){a=a|0;var b=0,c=0,d=0;c=$t(a)|0;b=a+8|0;a=k[b>>2]|0;if(a)do{d=a;a=k[a+4>>2]|0;Du(c,k[d>>2]|0)|0;Ft(c,d)}while((a|0)!=(k[b>>2]|0));k[b>>2]=0;return}function vu(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;k[a+8>>2]=b;d=k[a>>2]|0;c=c<<2&4;k[a>>2]=d&-5|c;if(d&2){a=(d&3|0)==3?a+-32|0:a+32|0;k[a+8>>2]=b;k[a>>2]=k[a>>2]&-5|c}return}function wu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=a+8|0;c=k[f>>2]|0;do if(c){d=c+4|0;e=k[d>>2]|0;if((e|0)==(c|0)){k[d>>2]=b;k[b+4>>2]=c;break}else{k[b+4>>2]=e;k[d>>2]=b;break}}else k[b+4>>2]=b;while(0);c=k[a>>2]|0;if((c&4|0)==0?(k[f>>2]=b,k[a>>2]=c&-5,(c&2|0)!=0):0){a=(c&3|0)==3?a+-32|0:a+32|0;k[a+8>>2]=b;k[a>>2]=k[a>>2]&-5}return}function xu(a,b,c){a=a|0;b=b|0;c=c|0;if((k[b+8>>2]|0)==(c|0)){a=k[c+4>>2]|0;vu(b,(a|0)==(c|0)?0:a,0)}return}function yu(a,b,c){a=a|0;b=b|0;c=c|0;ru(b,c)|0;return}function zu(a){a=a|0;return Ru(a,Gu(a)|0)|0}function Au(a,b){a=a|0;b=b|0;var c=0,d=0;c=r;r=r+32|0;d=c;a=Gu(a)|0;k[d+12>>2]=b;a=Tb[k[a>>2]&63](a,d,4)|0;if(!a)a=0;else a=k[a+12>>2]|0;r=c;return a|0}function Bu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=r;r=r+32|0;c=e;if(!b)c=0;else{d=Gu(a)|0;k[c+12>>2]=b;c=Tb[k[d>>2]&63](d,c,4)|0;if(!c){c=(uO(b)|0)+20|0;if(!a)c=uP(c)|0;else c=Et(a,c)|0;k[c+8>>2]=1;a=c+16|0;rO(a,b)|0;k[c+12>>2]=a;Tb[k[d>>2]&63](d,c,1)|0}else{b=c+8|0;k[b>>2]=(k[b>>2]|0)+1}c=k[c+12>>2]|0}r=e;return c|0}function Cu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=r;r=r+32|0;c=e;if(!b)c=0;else{d=Gu(a)|0;k[c+12>>2]=b;c=Tb[k[d>>2]&63](d,c,4)|0;if(!c){c=(uO(b)|0)+20|0;if(!a)c=uP(c)|0;else c=Et(a,c)|0;k[c+8>>2]=k[12992]|1;a=c+16|0;rO(a,b)|0;k[c+12>>2]=a;Tb[k[d>>2]&63](d,c,1)|0}else{b=c+8|0;k[b>>2]=(k[b>>2]|0)+1}c=k[c+12>>2]|0}r=e;return c|0}function Du(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=r;r=r+32|0;e=f;if((b|0)!=0?(c=Gu(a)|0,k[e+12>>2]=b,d=Tb[k[c>>2]&63](c,e,4)|0,(d|0)!=0):0)if((k[d+12>>2]|0)==(b|0)?(e=d+8|0,b=(k[e>>2]|0)+-1|0,k[e>>2]=b,!((b|0)!=0&(k[12993]|0)!=0)):0){Qu(a,c,d)|0;c=0}else c=0;else c=-1;r=f;return c|0}function Eu(a){a=a|0;if(!a)a=0;else a=k[12992]&k[a+-8>>2];return a|0}function Fu(a){a=a|0;if(a){a=a+-8|0;k[a>>2]=k[a>>2]|k[12992]}return}function Gu(a){a=a|0;var b=0,c=0;if(!a)c=51976;else c=(k[a+52>>2]|0)+20|0;b=k[c>>2]|0;if(!b){b=Pu(a,51980,k[12819]|0)|0;k[c>>2]=b;k[12992]=-2147483648;k[12993]=2147483647}return b|0}function Hu(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;g=r;r=r+64|0;f=g+8|0;e=g;if(!(((b|0)!=0?(et(a,0,b,e,0)|0)!=0:0)?(h=k[e>>2]|0,d=a+40|0,Su(a,k[d>>2]|0,51520),k[f+4>>2]=h,d=k[d>>2]|0,d=Tb[k[d>>2]&63](d,f,4)|0,(d|0)!=0):0))if((c|0)!=0?(et(a,0,b,e,1)|0)!=0:0){d=Mu(a,k[e>>2]|0)|0;it(a,0,d)}else d=0;r=g;return d|0}function Iu(a){a=a|0;a=k[a+40>>2]|0;return Tb[k[a>>2]&63](a,0,128)|0}function Ju(a){a=a|0;var b=0;b=k[a+44>>2]|0;if(!b)b=0;else{b=k[b+40>>2]|0;b=Tb[k[b>>2]&63](b,a,8)|0}return b|0}function Ku(a){a=a|0;return k[a+44>>2]|0}function Lu(a,b){a=a|0;b=b|0;a=k[a+40>>2]|0;return Tb[k[a>>2]&63](a,b,2)|0}function Mu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;d=r;r=r+64|0;c=d;e=a+40|0;Su(a,k[e>>2]|0,51520);k[c+4>>2]=b;e=k[e>>2]|0;c=Tb[k[e>>2]&63](e,c,4)|0;if(!c){c=Et(a,56)|0;k[c+52>>2]=k[a+52>>2];e=c+12|0;f=k[a+12>>2]|0;k[e>>2]=f;i[e>>0]=f&255&-9;k[c+44>>2]=a;k[c+48>>2]=k[a+48>>2];k[c+4>>2]=b;c=Ws(c)|0}r=d;return c|0}function Nu(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=k[13004]|0;d=(b|0)!=0;do if(!a)if(d){vP(b);a=0;break}else{a=uP(c)|0;break}else if(d){Ft(a,b);a=0;break}else{a=Et(a,c)|0;break}while(0);return a|0}function Ou(a,b,c){a=a|0;b=b|0;c=c|0;a=k[13004]|0;if(!a)vP(b);else Ft(a,b);return}function Pu(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=b+28|0;e=k[d>>2]|0;k[d>>2]=7;k[13004]=a;c=Lr(b,c)|0;k[d>>2]=e;k[13004]=0;return c|0}function Qu(a,b,c){a=a|0;b=b|0;c=c|0;k[13004]=a;return Tb[k[b>>2]&63](b,c,2)|0}function Ru(a,b){a=a|0;b=b|0;var c=0,d=0;c=(Tr(b,0,0)|0)+28|0;d=k[c>>2]|0;k[c>>2]=7;k[13004]=a;if(!(Hr(b)|0)){k[c>>2]=d;k[13004]=0;c=0}else c=1;return c|0}function Su(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)!=0?(Tr(b,0,0)|0)!=(c|0):0)Tr(b,c,0)|0;return}function Tu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;if(!(Eu(a)|0))b=Xu(a,b)|0;else{i[b>>0]=60;c=b+1|0;d=i[a>>0]|0;if(!(d<<24>>24))d=b;else{e=c;while(1){a=a+1|0;i[e>>0]=d;c=e+1|0;d=i[a>>0]|0;if(!(d<<24>>24)){d=e;break}else e=c}}i[c>>0]=62;i[d+2>>0]=0}return b|0}function Uu(a){a=a|0;return Tu(a,Yu(a)|0)|0}function Vu(a,b){a=a|0;b=b|0;a=Iu(a)|0;a:do if(!a)a=0;else while(1){if((Zu(a)|0)==0?(Pt(a,b,0)|0)!=0:0){a=1;break a}a=Ju(a)|0;if(!a){a=0;break}}while(0);return a|0}function Wu(a,b){a=a|0;b=b|0;var c=0,d=0;k[13005]=0;c=ss(a,132893)|0;if(((c|0)!=0?((i[c>>0]|0)+-48|0)>>>0<10:0)?(d=gO(c,0,10)|0,(d|0)==0|(d|0)>59):0)k[13006]=d;_u(a,1);if((($u(a,b,1)|0)!=-1?(av(a,b)|0)!=-1:0)?(bv(a,b)|0)!=-1:0){k[13006]=128;c=Rb[k[(k[(k[a+52>>2]|0)+8>>2]|0)+8>>2]&63](b)|0}else c=-1;return c|0}function Xu(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;do if((a|0)!=0?(i[a>>0]|0)!=0:0){c=b+1|0;i[b>>0]=34;f=i[a>>0]|0;if(f<<24>>24){r=a;o=0;e=0;g=0;h=((f+-45&255)<2|((f&255)+-48|0)>>>0<10)&1;d=0;n=f;while(1){r=r+1|0;f=n&255;a:do if(n<<24>>24==34){i[c>>0]=92;l=g;m=h;d=1;j=c+1|0}else{if(!h){j=n<<24>>24>-1&(n<<24>>24!=95&(WL(f)|0)==0);l=g;m=0;d=j?1:d;j=c;break}switch(n<<24>>24){case 45:{j=(e|0)==0;l=g;m=j?h:0;d=j?d:1;j=c;break a}case 46:{j=(g|0)==0;l=g+1|0;m=j?h:0;d=j?d:1;j=c;break a}default:{j=(f+-48|0)>>>0<10;l=g;m=j?h:0;d=j?d:1;j=c;break a}}}while(0);c=j+1|0;i[j>>0]=n;h=n;n=i[r>>0]|0;e=e+1|0;b:do if(k[13006]|0){f=n&255;g=n<<24>>24!=0;c:do if(((o|0)!=0&g?(WL(h<<24>>24)|0)==0:0)?(p=i[j>>0]|0,p<<24>>24>=0):0){switch(p<<24>>24){case 45:case 46:case 92:break c;default:{}}if(!(n<<24>>24>-1&((n+-45&255)>1&(WL(f)|0)==0))){i[c>>0]=92;i[j+2>>0]=10;f=0;e=0;d=1;c=j+3|0;break b}}while(0);if(!((e|0)<(k[13006]|0)|g^1))if((WL(i[j>>0]|0)|0)==0?(q=i[j>>0]|0,q<<24>>24>=0):0){switch(q<<24>>24){case 45:case 46:case 92:{f=1;break b}default:{}}if(!(n<<24>>24>-1&((n+-45&255)>1&(WL(f)|0)==0))){i[c>>0]=92;i[j+2>>0]=10;f=o;e=0;d=1;c=j+3|0}else f=1}else f=1;else f=o}else f=o;while(0);if(!(n<<24>>24))break;else{o=f;g=l;h=m}}i[c>>0]=34;i[c+1>>0]=0;if(d)break;if((e|0)==1?((i[a>>0]|0)+-45&255)<2:0)break}else{i[c>>0]=34;i[b+2>>0]=0}if(((((mO(147381,a)|0)!=0?(mO(147390,a)|0)!=0:0)?(mO(132958,a)|0)!=0:0)?(mO(147425,a)|0)!=0:0)?(mO(147417,a)|0)!=0:0){r=(mO(147431,a)|0)==0;return (r?b:a)|0}}else b=132955;while(0);return b|0}function Yu(a){a=a|0;var b=0;b=((uO(a)|0)<<1)+2|0;b=b>>>0>1024?b:1024;a=k[13010]|0;if((b|0)>(k[13009]|0)){if(!a)a=uP(b)|0;else a=xP(a,b)|0;k[13010]=a;k[13009]=b}return a|0}function Zu(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;e=ht(a)|0;if((e|0)!=0?(i[e>>0]|0)!=37:0)b=0;else c=3;a:do if((c|0)==3){b=js(a)|0;if(((b|0)!=0?(d=js(Ku(a)|0)|0,(d|0)!=0):0)?(f=(js(au(a)|0)|0)+8|0,f=Nr(k[f>>2]|0)|0,(f|0)>0):0){e=k[b+12>>2]|0;b=d+12|0;d=0;do{c=k[e+(d<<2)>>2]|0;if(((c|0)!=0?(g=k[(k[b>>2]|0)+(d<<2)>>2]|0,(g|0)!=0):0)?(qO(c,g)|0)!=0:0){b=0;break a}d=d+1|0}while((d|0)<(f|0))}b=fs(a,0)|0;if(b)if((Nr(k[b+8>>2]|0)|0)>0)b=0;else return (Nr(k[b+12>>2]|0)|0)<1|0;else b=1}while(0);return b|0}function _u(a,b){a=a|0;b=b|0;var c=0,d=0;k[a>>2]=k[a>>2]&-9;c=Iu(a)|0;if(c)do{_u(c,0);c=Ju(c)|0}while((c|0)!=0);if((b|0)!=0?(d=Kt(a)|0,(d|0)!=0):0)do{k[d>>2]=k[d>>2]&-9;c=Es(a,d)|0;if(c)do{k[c>>2]=k[c>>2]&-9;c=Gs(a,c)|0}while((c|0)!=0);d=Lt(a,d)|0}while((d|0)!=0);return}function $u(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0;if((c|0)==0?(Ku(a)|0)!=0:0){h=145683;j=0;l=176676}else{h=(i[a+12>>0]&1)==0?176676:132937;l=(ct(a)|0)==0;j=ks(a,2,147395,0)|0;k[13007]=j;j=ks(a,2,147404,0)|0;k[13008]=j;j=1;l=l?176676:132940}d=ht(a)|0;if((d|0)!=0?(i[d>>0]|0)!=37:0)g=138519;else{d=176676;g=176676}e=k[13005]|0;f=a+52|0;a:do if((e|0)>0)while(1){if((_b[k[(k[(k[f>>2]|0)+8>>2]|0)+4>>2]&127](b,191536)|0)==-1){d=-1;break a}if((e|0)>1)e=e+-1|0;else{m=10;break}}else m=10;while(0);do if((m|0)==10)if((_b[k[(k[(k[f>>2]|0)+8>>2]|0)+4>>2]&127](b,l)|0)!=-1){if((j|0)!=0|(i[d>>0]|0)!=0){if((_b[k[(k[(k[f>>2]|0)+8>>2]|0)+4>>2]&127](b,h)|0)==-1){d=-1;break}if((_b[k[(k[(k[f>>2]|0)+8>>2]|0)+4>>2]&127](b,138507)|0)==-1){d=-1;break}if((i[d>>0]|0)!=0?(m=Tu(d,Yu(d)|0)|0,(_b[k[(k[(k[f>>2]|0)+8>>2]|0)+4>>2]&127](b,m)|0)==-1):0){d=-1;break}}if((_b[k[(k[(k[f>>2]|0)+8>>2]|0)+4>>2]&127](b,g)|0)!=-1?(_b[k[(k[(k[f>>2]|0)+8>>2]|0)+4>>2]&127](b,132948)|0)!=-1:0){k[13005]=(k[13005]|0)+1;d=fs(a,0)|0;if(d){if((jv(a,b,147425,k[d+16>>2]|0,c)|0)==-1){d=-1;break}if((jv(a,b,147381,k[d+8>>2]|0,c)|0)==-1){d=-1;break}if((jv(a,b,147390,k[d+12>>2]|0,c)|0)==-1){d=-1;break}}k[a>>2]=k[a>>2]|8;d=0}else d=-1}else d=-1;while(0);return d|0}function av(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0;a:do if((cv(a,b)|0)!=-1){c=fs(au(a)|0,0)|0;d=Kt(a)|0;if(!d)c=0;else{m=(c|0)==0;n=c+12|0;l=c+8|0;while(1){if(dv(a,d,(k[d>>2]|0)>>>4)|0){if(m)c=0;else c=k[l>>2]|0;if((ev(d,b,c)|0)==-1){c=-1;break a}}c=Es(a,d)|0;if(c){f=d;do{g=c+-32|0;e=k[((k[c>>2]&3|0)==2?c:g)+28>>2]|0;if((f|0)!=(e|0)?(dv(a,e,(k[d>>2]|0)>>>4)|0)!=0:0){if(m)e=0;else e=k[l>>2]|0;if((ev(k[((k[c>>2]&3|0)==2?c:g)+28>>2]|0,b,e)|0)==-1){c=-1;break a}f=k[((k[c>>2]&3|0)==2?c:g)+28>>2]|0}e=Iu(a)|0;b:do if(!e)o=19;else while(1){if((Zu(e)|0)==0?(Os(e,c,0)|0)!=0:0)break b;e=Ju(e)|0;if(!e){o=19;break}}while(0);if((o|0)==19){o=0;if(m)i=0;else i=k[n>>2]|0;h=k[c>>2]&3;j=k[((h|0)==3?c:c+32|0)+28>>2]|0;g=k[((h|0)==2?c:g)+28>>2]|0;h=$t(j)|0;e=k[13005]|0;h=h+52|0;if((e|0)>0)while(1){if((_b[k[(k[(k[h>>2]|0)+8>>2]|0)+4>>2]&127](b,191536)|0)==-1){c=-1;break a}if((e|0)>1)e=e+-1|0;else break}if((fv(j,b)|0)==-1){c=-1;break a}if((gv(c,b,k[13007]|0)|0)==-1){c=-1;break a}j=(at($t(j)|0)|0)!=0;if((_b[k[(k[(k[h>>2]|0)+8>>2]|0)+4>>2]&127](b,j?137127:137132)|0)==-1){c=-1;break a}if((fv(g,b)|0)==-1){c=-1;break a}if((gv(c,b,k[13008]|0)|0)==-1){c=-1;break a}if(!(k[c>>2]&8)){if((hv(c,b,i)|0)==-1){c=-1;break a}}else if((iv(c,b,1)|0)==-1){c=-1;break a}if((_b[k[(k[(k[h>>2]|0)+8>>2]|0)+4>>2]&127](b,132904)|0)==-1){c=-1;break a}}c=Gs(a,c)|0}while((c|0)!=0)}d=Lt(a,d)|0;if(!d){c=0;break}}}}else c=-1;while(0);return c|0}function bv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=k[13005]|0;c=f+-1|0;k[13005]=c;d=a+52|0;a:do if((f|0)>1){a=c;while(1){if((_b[k[(k[(k[d>>2]|0)+8>>2]|0)+4>>2]&127](b,191536)|0)==-1){a=-1;break a}if((a|0)>1)a=a+-1|0;else{e=4;break}}}else e=4;while(0);if((e|0)==4)a=((_b[k[(k[(k[d>>2]|0)+8>>2]|0)+4>>2]&127](b,146907)|0)==-1)<<31>>31;return a|0}function cv(a,b){a=a|0;b=b|0;a=Iu(a)|0;a:do if(!a)a=0;else while(1){if(!(Zu(a)|0)){if(($u(a,b,0)|0)==-1){a=-1;break a}if((av(a,b)|0)==-1){a=-1;break a}if((bv(a,b)|0)==-1){a=-1;break a}}else cv(a,b)|0;a=Ju(a)|0;if(!a){a=0;break}}while(0);return a|0}function dv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;a:do if((Vu(a,b)|0)==0?(k[b>>2]|0)>>>4>>>0>=c>>>0:0){d=Hs(a,b)|0;if(d)do{if((k[k[d+28>>2]>>2]|0)>>>4>>>0<c>>>0){d=0;break a}d=Is(a,d)|0}while((d|0)!=0);if((Hs(a,b)|0)==0?(Es(a,b)|0)==0:0){d=1;break}d=js(b)|0;if((d|0)!=0?(f=d+8|0,e=k[f>>2]|0,e=Tb[k[e>>2]&63](e,0,128)|0,(e|0)!=0):0){a=d+12|0;d=e;while(1){if((k[(k[a>>2]|0)+(k[d+16>>2]<<2)>>2]|0)!=(k[d+12>>2]|0)){d=1;break a}e=k[f>>2]|0;d=Tb[k[e>>2]&63](e,d,8)|0;if(!d){d=0;break}}}else d=0}else d=0;while(0);return d|0}function ev(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;e=$t(a)|0;d=k[13005]|0;e=e+52|0;a:do if((d|0)>0)while(1){if((_b[k[(k[(k[e>>2]|0)+8>>2]|0)+4>>2]&127](b,191536)|0)==-1){d=-1;break a}if((d|0)>1)d=d+-1|0;else{f=4;break}}else f=4;while(0);do if((f|0)==4)if((fv(a,b)|0)==-1)d=-1;else{if((k[a>>2]&8|0)==0?(hv(a,b,c)|0)==-1:0){d=-1;break}d=_b[k[(k[(k[e>>2]|0)+8>>2]|0)+4>>2]&127](b,132904)|0}while(0);return d|0}function fv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;h=r;r=r+32|0;f=h;e=h+4|0;c=ht(a)|0;d=$t(a)|0;if(!c){k[f>>2]=k[a+4>>2];TN(e,132924,f)|0;if((_b[k[(k[(k[d+52>>2]|0)+8>>2]|0)+4>>2]&127](b,e)|0)==-1)c=-1;else g=4}else{f=Tu(c,Yu(c)|0)|0;if((_b[k[(k[(k[d+52>>2]|0)+8>>2]|0)+4>>2]&127](b,f)|0)==-1)c=-1;else g=4}if((g|0)==4)c=0;r=h;return c|0}function gv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;a:do if((c|0)!=0?(d=$t(a)|0,e=ts(a,c)|0,(i[e>>0]|0)!=0):0){a=d+52|0;if((_b[k[(k[(k[a>>2]|0)+8>>2]|0)+4>>2]&127](b,145961)|0)==-1)d=-1;else{do if(Eu(e)|0){e=Tu(e,Yu(e)|0)|0;if((_b[k[(k[(k[a>>2]|0)+8>>2]|0)+4>>2]&127](b,e)|0)==-1){d=-1;break a}}else{d=oO(e,58)|0;if(!d){e=Xu(e,Yu(e)|0)|0;if((_b[k[(k[(k[a>>2]|0)+8>>2]|0)+4>>2]&127](b,e)|0)==-1){d=-1;break a}else break}i[d>>0]=0;e=Xu(e,Yu(e)|0)|0;if((_b[k[(k[(k[a>>2]|0)+8>>2]|0)+4>>2]&127](b,e)|0)==-1){d=-1;break a}if((_b[k[(k[(k[a>>2]|0)+8>>2]|0)+4>>2]&127](b,145961)|0)==-1){d=-1;break a}e=d+1|0;e=Xu(e,Yu(e)|0)|0;if((_b[k[(k[(k[a>>2]|0)+8>>2]|0)+4>>2]&127](b,e)|0)==-1){d=-1;break a}i[d>>0]=58}while(0);d=0}}else d=0;while(0);return d|0}function hv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0;a:do if(!(k[a>>2]&2)){d=0;l=4}else{switch(iv(a,b,0)|0){case -1:{d=-1;break a}case 0:{d=0;l=4;break a}default:{}}d=1;l=4}while(0);b:do if((l|0)==4){e=js(a)|0;j=$t(a)|0;if((e|0)!=0?(f=Tb[k[c>>2]&63](c,0,128)|0,(f|0)!=0):0){i=e+12|0;h=j+52|0;do{do if(k[a>>2]&2){g=k[13007]|0;if((g|0)!=0?(k[f+16>>2]|0)==(k[g+16>>2]|0):0)break;g=k[13008]|0;if(!((g|0)!=0?(k[f+16>>2]|0)==(k[g+16>>2]|0):0))l=12}else l=12;while(0);if((l|0)==12){l=0;e=f+16|0;if((k[(k[i>>2]|0)+(k[e>>2]<<2)>>2]|0)!=(k[f+12>>2]|0)){g=d+1|0;if(d){if((_b[k[(k[(k[h>>2]|0)+8>>2]|0)+4>>2]&127](b,132919)|0)==-1){d=-1;break b}d=k[13005]|0;if((d|0)>0)while(1){if((_b[k[(k[(k[h>>2]|0)+8>>2]|0)+4>>2]&127](b,191536)|0)==-1){d=-1;break b}if((d|0)>1)d=d+-1|0;else break}}else{d=k[13005]|0;if((d|0)>0)while(1){if((_b[k[(k[(k[h>>2]|0)+8>>2]|0)+4>>2]&127](b,191536)|0)==-1){d=-1;break b}if((d|0)>1)d=d+-1|0;else break}if((_b[k[(k[(k[h>>2]|0)+8>>2]|0)+4>>2]&127](b,132916)|0)==-1){d=-1;break b}k[13005]=(k[13005]|0)+1}d=k[f+8>>2]|0;d=Tu(d,Yu(d)|0)|0;if((_b[k[(k[(k[h>>2]|0)+8>>2]|0)+4>>2]&127](b,d)|0)==-1){d=-1;break b}if((_b[k[(k[(k[h>>2]|0)+8>>2]|0)+4>>2]&127](b,132922)|0)==-1){d=-1;break b}e=k[(k[i>>2]|0)+(k[e>>2]<<2)>>2]|0;e=Tu(e,Yu(e)|0)|0;if((_b[k[(k[(k[h>>2]|0)+8>>2]|0)+4>>2]&127](b,e)|0)==-1){d=-1;break b}else d=g}}f=Tb[k[c>>2]&63](c,f,8)|0}while((f|0)!=0)}if((d|0)>0){if((_b[k[(k[(k[j+52>>2]|0)+8>>2]|0)+4>>2]&127](b,132914)|0)==-1){d=-1;break}k[13005]=(k[13005]|0)+-1}k[a>>2]=k[a>>2]|8;d=0}while(0);return d|0}function iv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=ht(a)|0;a=$t(a)|0;if((d|0)!=0?(i[d>>0]|0)!=0:0){a=a+52|0;if((_b[k[(k[(k[a>>2]|0)+8>>2]|0)+4>>2]&127](b,132907)|0)!=-1?(d=Tu(d,Yu(d)|0)|0,(_b[k[(k[(k[a>>2]|0)+8>>2]|0)+4>>2]&127](b,d)|0)!=-1):0)if((c|0)!=0?(_b[k[(k[(k[a>>2]|0)+8>>2]|0)+4>>2]&127](b,132914)|0)==-1:0)a=-1;else{a=1;e=7}else a=-1}else{a=0;e=7}return a|0}function jv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0;m=(e|0)!=0;if(m)n=0;else n=Qr(d,0)|0;e=Tb[k[d>>2]&63](d,0,128)|0;a:do if(e){j=(n|0)==0;l=a+52|0;f=0;h=e;while(1){g=h+12|0;o=k[g>>2]|0;if((o|0)!=0?(i[o>>0]|0)!=0:0)o=12;else o=7;do if((o|0)==7){o=0;if(!(i[h+22>>0]|0))if(!j){e=Tb[k[n>>2]&63](n,h,4)|0;p=k[e+12>>2]|0;if((p|0)!=0?(i[p>>0]|0)!=0:0){o=12;break}if(!(i[e+22>>0]|0))o=12;else e=f}else e=f;else o=12}while(0);if((o|0)==12){o=0;e=f+1|0;if(f){if((_b[k[(k[(k[l>>2]|0)+8>>2]|0)+4>>2]&127](b,132919)|0)==-1){e=-1;break a}f=k[13005]|0;if((f|0)>0)while(1){if((_b[k[(k[(k[l>>2]|0)+8>>2]|0)+4>>2]&127](b,191536)|0)==-1){e=-1;break a}if((f|0)>1)f=f+-1|0;else break}}else{f=k[13005]|0;if((f|0)>0)while(1){if((_b[k[(k[(k[l>>2]|0)+8>>2]|0)+4>>2]&127](b,191536)|0)==-1){e=-1;break a}if((f|0)>1)f=f+-1|0;else break}if((_b[k[(k[(k[l>>2]|0)+8>>2]|0)+4>>2]&127](b,c)|0)==-1){e=-1;break a}if((_b[k[(k[(k[l>>2]|0)+8>>2]|0)+4>>2]&127](b,132916)|0)==-1){e=-1;break a}k[13005]=(k[13005]|0)+1}p=k[h+8>>2]|0;p=Tu(p,Yu(p)|0)|0;if((_b[k[(k[(k[l>>2]|0)+8>>2]|0)+4>>2]&127](b,p)|0)==-1){e=-1;break a}if((_b[k[(k[(k[l>>2]|0)+8>>2]|0)+4>>2]&127](b,132922)|0)==-1){e=-1;break a}p=k[g>>2]|0;p=Tu(p,Yu(p)|0)|0;if((_b[k[(k[(k[l>>2]|0)+8>>2]|0)+4>>2]&127](b,p)|0)==-1){e=-1;break a}}h=Tb[k[d>>2]&63](d,h,8)|0;if(!h)break;else f=e}if((e|0)>0){k[13005]=(k[13005]|0)+-1;f=a+52|0;if((e|0)>1){if((_b[k[(k[(k[f>>2]|0)+8>>2]|0)+4>>2]&127](b,191538)|0)==-1){e=-1;break}e=k[13005]|0;if((e|0)>0)while(1){if((_b[k[(k[(k[f>>2]|0)+8>>2]|0)+4>>2]&127](b,191536)|0)==-1){e=-1;break a}if((e|0)>1)e=e+-1|0;else break}}e=(_b[k[(k[(k[f>>2]|0)+8>>2]|0)+4>>2]&127](b,132951)|0)==-1;if(m|e)e=e<<31>>31;else o=35}else o=34}else o=34;while(0);if((o|0)==34)if(m)e=0;else o=35;if((o|0)==35){Qr(d,n)|0;e=0}return e|0}function kv(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;i=r;r=r+16|0;g=i;f=k[b>>2]&3;switch(f|0){case 0:{g=83;h=5;break}case 1:{g=84;h=5;break}case 3:case 2:{g=85;h=5;break}default:{k[g>>2]=f;Yr(1,132965,g)|0;f=-1}}if((h|0)==5){f=_b[g&127](a,b)|0;if(!f)f=-1;else{ov(a,f,c,d,g,e);f=0}}r=i;return f|0}function lv(a,b){a=a|0;b=b|0;if(($t(b)|0)!=(a|0))b=Os(a,b,0)|0;return b|0}function mv(a,b){a=a|0;b=b|0;if(($t(b)|0)!=(a|0))b=Pt(a,b,0)|0;return b|0}function nv(a,b){a=a|0;b=b|0;return a|0}function ov(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;i=(f|0)!=0;if(i)dc[c&127](a,b,d);g=Iu(a)|0;if(g)do{h=_b[e&127](g,b)|0;if(h)ov(g,h,c,d,e,f);g=Ju(g)|0}while((g|0)!=0);if(!i)dc[c&127](a,b,d);return}function pv(){var a=0,b=0,c=0,d=0,e=0,f=0,g=0,h=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0;A=r;r=r+2224|0;w=A+800|0;y=A+1824|0;b=A;k[13011]=0;k[13012]=-2;q=0;g=y;a=y;d=200;h=0;f=b;a:while(1){j[a>>1]=h;if((g+(d+-1<<1)|0)>>>0<=a>>>0){e=a-g>>1;a=e+1|0;if(d>>>0>9999){b=g;z=100;break}c=d<<1;c=c>>>0>1e4?1e4:c;b=uP(c*6|3)|0;if(!b){b=g;z=100;break}GP(b|0,g|0,a<<1|0)|0;d=b+((c>>>1&1073741823)<<2)|0;GP(d|0,f|0,a<<2|0)|0;if((g|0)!=(y|0))vP(g);if((c+-1|0)>(e|0)){u=b;a=b+(e<<1)|0;s=c;t=d;b=d+(e<<2)|0}else{a=1;z=102;break}}else{u=g;s=d;t=f}if((h|0)==6){a=0;b=u;z=101;break}p=i[132998+h>>0]|0;e=p<<24>>24;do if(p<<24>>24!=-18){c=k[13012]|0;if((c|0)==-2){c=Dv()|0;k[13012]=c}if((c|0)>=1)if(c>>>0<269)d=l[133078+c>>0]|0;else d=2;else{k[13012]=0;d=0}c=d+e|0;if(c>>>0<=59?(l[133347+c>>0]|0)==(d|0):0){p=i[133407+c>>0]|0;c=p<<24>>24;if(p<<24>>24<1){c=0-c|0;z=23;break}else{k[13012]=-2;b=b+4|0;k[b>>2]=k[13013];e=(q|0)==0?0:q+-1|0;break}}else z=22}else z=22;while(0);if((z|0)==22){z=0;p=i[133467+h>>0]|0;c=p&255;if(!(p<<24>>24)){c=k[13012]|0;b:do switch(q|0){case 0:{k[13011]=(k[13011]|0)+1;Hv(178304);break}case 3:if((c|0)<1)if(!c){a=1;b=u;z=101;break a}else break b;else{k[13012]=-2;break b}default:{}}while(0);if(h)do{if((a|0)==(u|0)){a=1;b=u;z=101;break a}b=b+-4|0;a=a+-2|0}while((j[a>>1]|0)!=0);b=b+4|0;k[b>>2]=k[13013];e=3;c=1}else z=23}do if((z|0)==23){z=0;n=l[133547+c>>0]|0;o=1-n|0;p=b+(o<<2)|0;m=k[p>>2]|0;c:do switch(c|0){case 2:{Iv();ut(k[13014]|0);d=m;break}case 3:{d=k[13014]|0;if(!d)d=m;else{Ys(d)|0;k[12896]=0;k[13014]=0;d=m}break}case 6:{e=k[b>>2]|0;d=k[13014]|0;if(!d){i[52060]=(k[b+-8>>2]&255)<<1&2|k[b+-4>>2]&1|i[52060]&-12|8;d=k[13016]|0;k[w>>2]=k[13015];d=Vs(e,w,d)|0;k[13014]=d}k[12896]=d;g=k[13017]|0;h=Et(d,36)|0;k[h+32>>2]=g;k[h>>2]=d;k[13017]=h;Du(0,e)|0;d=m;break}case 7:{d=k[b>>2]|0;break}case 8:{d=0;break}case 9:{d=1;break}case 10:{d=0;break}case 11:{d=0;break}case 12:{d=1;break}case 21:{if(!(k[b+-4>>2]|0)){sv(1);e=k[13017]|0;d=k[e+8>>2]|0;if(!d)d=0;else{do{vv(k[d+4>>2]|0);d=k[d+12>>2]|0}while((d|0)!=0);d=k[13017]|0;e=d;d=k[d+8>>2]|0}uv(d);k[e+12>>2]=0;k[e+8>>2]=0;d=k[13017]|0;h=d+24|0;uv(k[h>>2]|0);k[d+28>>2]=0;k[h>>2]=0;h=k[13017]|0;d=h+16|0;uv(k[d>>2]|0);k[h+20>>2]=0;k[d>>2]=0;k[(k[13017]|0)+4>>2]=0;d=m;break c}sv(2);d=k[13017]|0;e=k[d+24>>2]|0;if(!e)f=0;else{g=i[133610]|0;f=0;do{if(((k[e>>2]|0)==267?(v=k[e+4>>2]|0,(i[v>>0]|0)==g<<24>>24):0)?(qO(v,133610)|0)==0:0)f=k[e+8>>2]|0;e=k[e+12>>2]|0}while((e|0)!=0)}g=k[d+16>>2]|0;e=g+12|0;h=k[e>>2]|0;if(h){do{d=g+4|0;if((k[g>>2]|0)==262){g=k[d>>2]|0;d=Kt(g)|0;if(d)do{h=Pt(k[k[13017]>>2]|0,d,0)|0;tv(h,0,k[e>>2]|0,f);d=Lt(g,d)|0}while((d|0)!=0)}else{d=k[d>>2]|0;if((d|0)!=0?(tv(k[d+4>>2]|0,k[d+8>>2]|0,h,f),x=k[d+12>>2]|0,(x|0)!=0):0){d=x;do{tv(k[d+4>>2]|0,k[d+8>>2]|0,k[e>>2]|0,f);d=k[d+12>>2]|0}while((d|0)!=0)}}g=k[e>>2]|0;e=g+12|0;h=k[e>>2]|0}while((h|0)!=0);d=k[13017]|0}h=d+8|0;uv(k[h>>2]|0);k[d+12>>2]=0;k[h>>2]=0;d=k[13017]|0;h=d+16|0;uv(k[h>>2]|0);k[d+20>>2]=0;k[h>>2]=0;h=k[13017]|0;d=h+24|0;uv(k[d>>2]|0);k[h+28>>2]=0;k[d>>2]=0;k[(k[13017]|0)+4>>2]=0;d=m;break}case 24:{wv();d=m;break}case 25:{wv();d=m;break}case 26:{d=1;break}case 27:{d=0;break}case 30:{xv(k[b>>2]|0,0,0);d=m;break}case 31:{xv(k[b+-8>>2]|0,k[b>>2]|0,0);d=m;break}case 32:{xv(k[b+-16>>2]|0,k[b+-8>>2]|0,k[b>>2]|0);d=m;break}case 33:{yv(k[b+-8>>2]|0,k[b+-4>>2]|0);d=m;break}case 34:{yv(258,0);d=m;break}case 35:{d=258;break}case 36:{d=259;break}case 37:{d=260;break}case 38:{d=k[b+-4>>2]|0;break}case 39:{d=0;break}case 48:{zv(k[b+-8>>2]|0,k[b>>2]|0);d=m;break}case 49:{zv(k[b>>2]|0,0);d=m;break}case 51:{d=k[b>>2]|0;f=k[13017]|0;g=Hu(k[f>>2]|0,d,1)|0;h=Et(k[13014]|0,36)|0;k[h+32>>2]=f;k[h>>2]=g;k[13017]=h;Du(k[13014]|0,d)|0;d=m;break}case 52:{g=k[13017]|0;h=k[g>>2]|0;d=k[g+32>>2]|0;Ft(k[13014]|0,g);k[13017]=d;k[d+4>>2]=h;d=m;break}case 53:{d=k[b>>2]|0;break}case 54:{d=0;break}case 55:{d=0;break}case 59:{d=k[b>>2]|0;break}case 60:{d=k[b>>2]|0;break}case 61:{d=k[b>>2]|0;break}case 62:{f=k[b+-8>>2]|0;g=k[b>>2]|0;d=uO(f)|0;d=d+1+(uO(g)|0)|0;if((d|0)<1025)e=w;else e=uP(d)|0;rO(e,f)|0;nO(e,g)|0;d=Bu(k[13014]|0,e)|0;Du(k[13014]|0,f)|0;Du(k[13014]|0,g)|0;if((e|0)!=(w|0))vP(e);break}default:d=m}while(0);a=a+(0-n<<1)|0;b=b+(o<<2)|0;k[p>>2]=d;c=(l[133614+c>>0]|0)+-24|0;p=j[a>>1]|0;d=p+(i[133677+c>>0]|0)|0;if(d>>>0<60?(l[133347+d>>0]|0)==(p|0):0){e=q;c=i[133407+d>>0]|0;break}e=q;c=i[133712+c>>0]|0}while(0);q=e;g=u;a=a+2|0;d=s;h=c;f=t}if((z|0)==100){Hv(176659);a=2;z=101}if((z|0)==101)if((b|0)!=(y|0))z=102;if((z|0)==102)vP(b);r=A;return a|0}function qv(a,b,c){a=a|0;b=b|0;c=c|0;k[13018]=b;k[13014]=a;k[12896]=0;a=(c|0)!=0?c:51572;k[13016]=a;Cv(a,b);pv()|0;b=k[12896]|0;if(!b){Jv();b=k[12896]|0}return b|0}function rv(a,b){a=a|0;b=b|0;return qv(0,a,b)|0}function sv(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;b=k[(k[13017]|0)+24>>2]|0;if(b){e=(a|0)==2;do{c=b+4|0;d=k[c>>2]|0;if(!((e?(i[d>>0]|0)==(i[133610]|0):0)?(qO(d,133610)|0)==0:0)){f=ks(k[k[13017]>>2]|0,a,d,0)|0;k[c>>2]=f;if(!f){f=ks(k[k[13017]>>2]|0,a,d,176676)|0;k[c>>2]=f}k[b>>2]=266;Du(k[13014]|0,d)|0}b=k[b+12>>2]|0}while((b|0)!=0)}return}function tv(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=c+4|0;if((k[c>>2]|0)==262){c=k[e>>2]|0;e=Kt(c)|0;if(e)do{Av(a,b,Pt(k[k[13017]>>2]|0,e,0)|0,0,d);e=Lt(c,e)|0}while((e|0)!=0)}else{e=k[e>>2]|0;if(e)do{c=Pt(k[k[13017]>>2]|0,k[e+4>>2]|0,0)|0;Av(a,b,c,k[e+8>>2]|0,d);e=k[e+12>>2]|0}while((e|0)!=0)}return}function uv(a){a=a|0;var b=0;a:do if(a)while(1){b=a;a=k[a+12>>2]|0;switch(k[b>>2]|0){case 265:{uv(k[b+4>>2]|0);break}case 266:case 267:{Du(k[13014]|0,k[b+8>>2]|0)|0;break}default:{}}Ft(k[13014]|0,b);if(!a)break a}while(0);return}function vv(a){a=a|0;var b=0,c=0;b=k[(k[13017]|0)+24>>2]|0;if(b)do{if((k[b>>2]|0)==266?(c=k[b+4>>2]|0,(c|0)!=0):0)vs(a,c,k[b+8>>2]|0)|0;b=k[b+12>>2]|0}while((b|0)!=0);return}function wv(){var a=0,b=0,c=0,d=0;b=k[13017]|0;a=k[b+8>>2]|0;if(!a){a=k[b+4>>2]|0;if(!a){a=b;b=0}else{b=Et(k[13014]|0,16)|0;k[b>>2]=262;k[b+4>>2]=a;k[b+8>>2]=0;a=k[13017]|0}k[a+4>>2]=0}else{b=Et(k[13014]|0,16)|0;k[b>>2]=265;k[b+4>>2]=a;k[b+8>>2]=0;k[(k[13017]|0)+12>>2]=0;k[(k[13017]|0)+8>>2]=0}if(b){a=k[13017]|0;c=a+20|0;d=k[c>>2]|0;if(d)k[d+12>>2]=b;k[c>>2]=b;a=a+16|0;if(!(k[a>>2]|0))k[a>>2]=b}return}function xv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;h=r;r=r+1040|0;f=h;g=h+8|0;if(!c)d=b;else{d=uO(b)|0;d=d+2+(uO(c)|0)|0;if((d|0)<1025)e=g;else e=uP(d)|0;k[f>>2]=b;k[f+4>>2]=c;TN(e,133780,f)|0;d=Bu(k[13014]|0,e)|0;Du(k[13014]|0,b)|0;Du(k[13014]|0,c)|0;if((e|0)!=(g|0))vP(e)}e=Qt(k[k[13017]>>2]|0,a,1)|0;g=Et(k[13014]|0,16)|0;k[g>>2]=259;k[g+4>>2]=e;k[g+8>>2]=d;d=k[13017]|0;e=d+12|0;f=k[e>>2]|0;if(f)k[f+12>>2]=g;k[e>>2]=g;d=d+8|0;if(!(k[d>>2]|0))k[d>>2]=g;Du(k[13014]|0,a)|0;r=h;return}function yv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;g=r;r=r+16|0;c=g+8|0;if(b)Yr(0,133747,g)|0;b=k[(k[13017]|0)+24>>2]|0;if(b)do{if(!(k[b+8>>2]|0))Yr(0,133747,c)|0;b=k[b+12>>2]|0}while((b|0)!=0);e=(a|0)==260?2:(a|0)==259&1;sv(e);b=k[13017]|0;a=k[b+24>>2]|0;if(!a){a=b;b=0}else{do{c=k[a+4>>2]|0;d=k[b>>2]|0;if(!((i[c+21>>0]|0)!=0&(d|0)==(k[13014]|0))){c=ks(d,e,k[c+8>>2]|0,k[a+8>>2]|0)|0;b=k[13017]|0;if((k[b>>2]|0)==(k[13014]|0))f=10}else f=10;if((f|0)==10){f=0;i[c+22>>0]=1}a=k[a+12>>2]|0}while((a|0)!=0);a=b;b=k[b+24>>2]|0}uv(b);k[a+28>>2]=0;k[a+24>>2]=0;r=g;return}function zv(a,b){a=a|0;b=b|0;var c=0,d=0;d=Et(k[13014]|0,16)|0;k[d>>2]=267;k[d+4>>2]=a;k[d+8>>2]=b;a=k[13017]|0;b=a+28|0;c=k[b>>2]|0;if(c)k[c+12>>2]=d;k[b>>2]=d;a=a+24|0;if(!(k[a>>2]|0))k[a>>2]=d;return}function Av(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;c=Ls(k[k[13017]>>2]|0,a,c,e,1)|0;if(c){f=k[c>>2]&3;e=k[((f|0)==2?c:c+-32|0)+28>>2]|0;a=(e|0)==(a|0)?(k[((f|0)==3?c:c+32|0)+28>>2]|0)!=(e|0):0;Bv(c,147395,a?d:b);Bv(c,147404,a?b:d);vv(c)}return}function Bv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if(c){d=ks(k[k[13017]>>2]|0,2,b,0)|0;if(!d)d=ks(k[k[13017]>>2]|0,2,b,176676)|0;vs(a,d,c)|0}return}function Cv(a,b){a=a|0;b=b|0;k[13024]=a;k[13025]=b;k[13026]=0;return}function Dv(){var a=0,b=0,c=0,d=0,e=0,f=0,g=0,h=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;z=r;r=r+2096|0;x=z+24|0;v=z+16|0;s=z;w=z+1072|0;u=z+48|0;y=z+32|0;if(!(k[13027]|0)){k[13027]=1;if(!(k[13028]|0))k[13028]=1;if(!(k[13018]|0))k[13018]=k[24529];if(!(k[13019]|0))k[13019]=k[24530];a=k[13029]|0;if(!((a|0)!=0?(c=k[13030]|0,b=k[a+(c<<2)>>2]|0,(b|0)!=0):0)){Kv();q=Ev(k[13018]|0,16384)|0;b=k[13030]|0;k[(k[13029]|0)+(b<<2)>>2]=q;q=k[13029]|0;a=q;c=b;b=k[q+(b<<2)>>2]|0}k[13031]=k[b+16>>2];q=k[b+8>>2]|0;k[13032]=q;k[13020]=q;k[13018]=k[k[a+(c<<2)>>2]>>2];i[133786]=i[q>>0]|0}a:while(1){a=k[13032]|0;i[a>>0]=i[133786]|0;b=a;c=(k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]|0)+(k[13028]|0)|0;b:while(1){e=a;while(1){a=k[52132+(l[e>>0]<<2)>>2]|0;if(j[101128+(c<<1)>>1]|0){k[13289]=c;k[13290]=e}c:while(1){d=a&255;while(1){a=(j[101314+(c<<1)>>1]|0)+d|0;if((j[101524+(a<<1)>>1]|0)==(c|0))break c;q=j[102082+(c<<1)>>1]|0;a=q<<16>>16;if(q<<16>>16>92){c=a;break}else c=a}a=k[53164+(d<<2)>>2]|0}c=j[102292+(a<<1)>>1]|0;a=e+1|0;if((j[101314+(c<<1)>>1]|0)==230){q=b;break}else e=a}d:while(1){p=q;e:while(1){b=j[101128+(c<<1)>>1]|0;if(!(b<<16>>16)){b=j[101128+(k[13289]<<1)>>1]|0;n=k[13290]|0}else{b=b<<16>>16;n=a}k[13020]=q;o=n;k[13021]=o-p;i[133786]=i[n>>0]|0;i[n>>0]=0;k[13032]=n;a=b;f:while(1){switch(a|0){case 1:{t=28;break a}case 12:{t=68;break a}case 13:{t=70;break a}case 14:{t=72;break a}case 15:{t=76;break a}case 16:{t=80;break a}case 17:{t=82;break a}case 18:{t=84;break a}case 19:{t=87;break a}case 20:{t=90;break a}case 21:{d=q;c=n;t=94;break a}case 23:{t=108;break a}case 33:{t=146;break a}case 39:case 38:case 37:case 36:{a=0;t=195;break a}case 2:{t=30;break b}case 3:{t=33;break b}case 4:{t=36;break b}case 5:{t=38;break b}case 6:{t=40;break b}case 7:{t=43;break b}case 8:{t=45;break b}case 9:{t=62;break b}case 10:{t=64;break b}case 11:{t=66;break b}case 22:{t=103;break b}case 24:{t=111;break b}case 25:{t=114;break b}case 26:{t=117;break b}case 27:{t=120;break b}case 28:{t=124;break b}case 29:{t=129;break b}case 30:{t=134;break b}case 31:{t=138;break b}case 32:{t=142;break b}case 34:{t=150;break b}case 0:break f;case 35:break;default:{t=194;break a}}c=k[13020]|0;i[n>>0]=i[133786]|0;a=k[13030]|0;b=k[13029]|0;d=k[b+(a<<2)>>2]|0;if(!(k[d+44>>2]|0)){k[13031]=k[d+16>>2];k[d>>2]=k[13018];b=k[13029]|0;k[(k[b+(a<<2)>>2]|0)+44>>2]=1;a=k[13030]|0;d=k[b+(a<<2)>>2]|0}e=k[13032]|0;f=k[13031]|0;g=k[d+4>>2]|0;m=k[13020]|0;h=m;if(e>>>0<=(g+f|0)>>>0){b=m;a=o;break e}if(e>>>0>(g+(f+1)|0)>>>0){t=164;break a}e=e-h|0;if(!(k[d+40>>2]|0)){f=(e|0)==1?1:2;d=h;e=m}else{h=e+-1|0;if((e|0)>1){b=g;d=0;a=m;while(1){i[b>>0]=i[a>>0]|0;d=d+1|0;if((d|0)>=(h|0))break;else{b=b+1|0;a=a+1|0}}b=k[13029]|0;d=k[b+(k[13030]<<2)>>2]|0}if((k[d+44>>2]|0)==2){k[13031]=0;k[d+16>>2]=0}else{b=k[d+12>>2]|0;a=b-h+-1|0;if(!a){f=k[13032]|0;do{a=d+4|0;e=k[a>>2]|0;if(!(k[d+20>>2]|0)){t=175;break a}m=b<<1;b=(m|0)==0?(b>>>3)+b|0:m;k[d+12>>2]=b;b=xP(e,b+2|0)|0;k[a>>2]=b;if(!b){t=177;break a}f=b+(f-e)|0;k[13032]=f;d=k[(k[13029]|0)+(k[13030]<<2)>>2]|0;b=k[d+12>>2]|0;a=b-h+-1|0}while((a|0)==0)}m=Tb[k[k[(k[52096>>2]|0)+8>>2]>>2]&63](k[13025]|0,(k[d+4>>2]|0)+h|0,a>>>0>8192?8192:a)|0;k[13031]=m;b=k[13029]|0;k[(k[b+(k[13030]<<2)>>2]|0)+16>>2]=m}do if(!(k[13031]|0))if(!h){Fv(k[13018]|0);b=k[13029]|0;f=1;break}else{k[(k[b+(k[13030]<<2)>>2]|0)+44>>2]=2;f=2;break}else f=0;while(0);a=k[13031]|0;d=a+h|0;b=k[b+(k[13030]<<2)>>2]|0;if(d>>>0>(k[b+12>>2]|0)>>>0){m=xP(k[b+4>>2]|0,d+(a>>>1)|0)|0;a=k[13030]|0;k[(k[(k[13029]|0)+(a<<2)>>2]|0)+4>>2]=m;a=k[(k[(k[13029]|0)+(a<<2)>>2]|0)+4>>2]|0;if(!a){t=188;break a}d=k[13031]|0}else{d=a;a=k[b+4>>2]|0}b=d+h|0;k[13031]=b;i[a+b>>0]=0;i[(k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+4>>2]|0)+((k[13031]|0)+1)>>0]=0;a=k[13030]|0;b=k[13029]|0;e=k[(k[b+(a<<2)>>2]|0)+4>>2]|0;k[13020]=e;d=e}switch(f|0){case 0:{b=e;a=o;t=192;break d}case 2:{t=193;break e}case 1:break;default:continue a}k[13032]=d;a=(((k[13028]|0)+-1|0)/2|0)+36|0}i[n>>0]=i[133786]|0;a=k[13290]|0;c=k[13289]|0}if((t|0)==193){t=0;k[13032]=(k[(k[b+(a<<2)>>2]|0)+4>>2]|0)+(k[13031]|0);c=Mv()|0;q=k[13020]|0;a=k[13032]|0;continue}k[13032]=b+(a-c+-1);c=Mv()|0;if(j[101128+(c<<1)>>1]|0){q=k[13032]|0;k[13289]=c;k[13290]=q}a=(j[101314+(c<<1)>>1]|0)+1|0;if((j[101524+(a<<1)>>1]|0)!=(c|0)){b=c;do{q=j[102082+(b<<1)>>1]|0;b=q<<16>>16;a=(j[101314+(b<<1)>>1]|0)+1|0}while((j[101524+(a<<1)>>1]|0)!=q<<16>>16)}d=j[102292+(a<<1)>>1]|0;b=k[13020]|0;e=k[13032]|0;if(!(d<<16>>16==92|(a|0)==0)){a=e;t=162;break}else{q=b;a=e}}if((t|0)==162){t=0;a=a+1|0;k[13032]=a;c=d<<16>>16;continue}else if((t|0)==192){t=0;k[13032]=b+(a-c+-1);c=Mv()|0;b=k[13020]|0;a=k[13032]|0;continue}}switch(t|0){case 30:{t=0;a=k[13021]|0;if(a)k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;k[13022]=(k[13022]|0)+1;continue a}case 33:{t=0;a=k[13021]|0;if(a)k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;k[13028]=3;continue a}case 36:{t=0;a=k[13021]|0;if(!a)continue a;k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;continue a}case 38:{t=0;a=k[13021]|0;if(!a)continue a;k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;continue a}case 40:{t=0;a=k[13021]|0;if(a)k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;k[13028]=1;continue a}case 43:{t=0;a=k[13021]|0;if(!a)continue a;k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;continue a}case 45:{t=0;a=k[13021]|0;if(!a)b=k[13020]|0;else{b=k[13020]|0;k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[b+(a+-1)>>0]|0)==10&1}c=b+1|0;q=(wO(c,133787,4)|0)==0;a=q?5:1;k[s>>2]=u;k[s+4>>2]=y;k[s+8>>2]=w;c=UN(q?b+5|0:c,133792,s)|0;if((c|0)>0?(k[13022]=(k[u>>2]|0)+-1,(c|0)>1):0){c=b+((k[w>>2]|0)+a)|0;a=c;g:while(1){switch(i[a>>0]|0){case 0:case 34:break g;default:{}}a=a+1|0}if((a|0)!=(c|0)){i[a>>0]=0;b=a-c|0;a=k[13340]|0;if((a|0)<(b|0)){if(!a)a=uP(b+1|0)|0;else a=xP(k[13341]|0,b+1|0)|0;k[13341]=a;k[13340]=b}else a=k[13341]|0;rO(a,c)|0;k[13023]=k[13341]}}continue a}case 62:{t=0;a=k[13021]|0;if(!a)continue a;k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;continue a}case 64:{t=0;a=k[13021]|0;if(!a)continue a;k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;continue a}case 66:{t=0;a=k[13021]|0;if(!a)continue a;k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;continue a}case 103:{t=0;a=k[13021]|0;if(a)k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;k[13028]=5;a=k[13342]|0;if(!a){a=uP(1024)|0;k[13342]=a;k[13343]=a+1024}k[13344]=a;i[a>>0]=0;continue a}case 111:{t=0;a=k[13021]|0;if(a)k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;Lv(134779);continue a}case 114:{t=0;a=k[13021]|0;if(a)k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;Lv(133895);continue a}case 117:{t=0;a=k[13021]|0;if(a)k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;k[13022]=(k[13022]|0)+1;continue a}case 120:{t=0;a=k[13021]|0;if(!a)a=k[13020]|0;else{q=k[13020]|0;k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[q+(a+-1)>>0]|0)==10&1;a=q}Lv(a);continue a}case 124:{t=0;a=k[13021]|0;if(a)k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;k[13028]=7;k[13345]=1;a=k[13342]|0;if(!a){a=uP(1024)|0;k[13342]=a;k[13343]=a+1024}k[13344]=a;i[a>>0]=0;continue a}case 129:{t=0;a=k[13021]|0;if(a)k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;q=(k[13345]|0)+-1|0;k[13345]=q;if(!q){t=133;break a}Lv(k[13020]|0);continue a}case 134:{t=0;a=k[13021]|0;if(!a)a=k[13020]|0;else{q=k[13020]|0;k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[q+(a+-1)>>0]|0)==10&1;a=q}k[13345]=(k[13345]|0)+1;Lv(a);continue a}case 138:{t=0;a=k[13021]|0;if(!a)a=k[13020]|0;else{q=k[13020]|0;k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[q+(a+-1)>>0]|0)==10&1;a=q}Lv(a);k[13022]=(k[13022]|0)+1;continue a}case 142:{t=0;a=k[13021]|0;if(!a)a=k[13020]|0;else{q=k[13020]|0;k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[q+(a+-1)>>0]|0)==10&1;a=q}Lv(a);continue a}case 150:{t=0;a=k[13021]|0;if(!a){a=k[13020]|0;b=0}else{b=k[13020]|0;k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[b+(a+-1)>>0]|0)==10&1;a=b;b=k[13021]|0}QN(a,b,1,k[13019]|0)|0;continue a}}}switch(t|0){case 28:{a=k[13021]|0;if(!a){a=-1;t=195}else{k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;a=-1;t=195}break}case 68:{a=k[13021]|0;if(!a){a=259;t=195}else{k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;a=259;t=195}break}case 70:{a=k[13021]|0;if(!a){a=260;t=195}else{k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;a=260;t=195}break}case 72:{a=k[13021]|0;if(a)k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;if(!(k[13026]|0)){k[13026]=258;a=258;t=195}else{a=258;t=195}break}case 76:{a=k[13021]|0;if(a)k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;if(!(k[13026]|0)){k[13026]=261;a=261;t=195}else{a=261;t=195}break}case 80:{a=k[13021]|0;if(!a){a=263;t=195}else{k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;a=263;t=195}break}case 82:{a=k[13021]|0;if(!a){a=262;t=195}else{k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;a=262;t=195}break}case 84:{a=k[13021]|0;if(a)k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;a=(k[13026]|0)==261?264:45;t=195;break}case 87:{a=k[13021]|0;if(a)k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;a=(k[13026]|0)==258?264:45;t=195;break}case 90:{a=k[13021]|0;if(!a)a=k[13020]|0;else{y=k[13020]|0;k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[y+(a+-1)>>0]|0)==10&1;a=y}a=Bu(k[12896]|0,a)|0;k[13013]=a;a=267;t=195;break}case 94:{a=k[13021]|0;if(!a){a=k[13020]|0;b=-1}else{b=k[13020]|0;k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[b+(a+-1)>>0]|0)==10&1;a=b;b=(k[13021]|0)+-1|0}t=i[a+b>>0]|0;if(!(t<<24>>24==46|((t&255)+-48|0)>>>0<10)){b=k[13023]|0;$r(y,1024,w);cs(y,133809)|0;cs(y,k[13020]|0)|0;k[v>>2]=k[13022];TN(u,133853,v)|0;cs(y,u)|0;cs(y,(b|0)==0?133803:b)|0;cs(y,133870)|0;b=y+4|0;a=k[b>>2]|0;if(a>>>0>=(k[y+8>>2]|0)>>>0){as(y,1)|0;a=k[b>>2]|0}i[a>>0]=0;a=k[y>>2]|0;k[b>>2]=a;Yr(0,a,x)|0;ds(y);y=(k[13021]|0)+-1|0;i[c>>0]=i[133786]|0;a=d+y|0;k[13032]=a;k[13020]=d;k[13021]=y;i[133786]=i[a>>0]|0;i[a>>0]=0;k[13032]=a;a=k[13020]|0}a=Bu(k[12896]|0,a)|0;k[13013]=a;a=267;t=195;break}case 108:{a=k[13021]|0;if(a)k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[(k[13020]|0)+(a+-1)>>0]|0)==10&1;k[13028]=1;a=Bu(k[12896]|0,k[13342]|0)|0;k[13013]=a;a=268;t=195;break}case 133:{k[13028]=1;a=Cu(k[12896]|0,k[13342]|0)|0;k[13013]=a;a=268;t=195;break}case 146:{a=k[13021]|0;if(!a)a=k[13020]|0;else{y=k[13020]|0;k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]=(i[y+(a+-1)>>0]|0)==10&1;a=y}a=i[a>>0]|0;t=195;break}case 164:{Nv(133898);break}case 175:{k[a>>2]=0;t=177;break}case 188:{Nv(133998);break}case 194:{Nv(134045);break}}if((t|0)==177)Nv(133954);else if((t|0)==195){r=z;return a|0}return 0}function Ev(a,b){a=a|0;b=b|0;var c=0;c=uP(48)|0;if(!c)Nv(134096);k[c+12>>2]=b;b=uP(b+2|0)|0;k[c+4>>2]=b;if(!b)Nv(134096);else{k[c+20>>2]=1;Ov(c,a);return c|0}return 0}function Fv(a){a=a|0;var b=0,c=0,d=0;b=k[13029]|0;if((b|0)!=0?(c=k[13030]|0,(k[b+(c<<2)>>2]|0)!=0):0)d=4;else{Kv();b=Ev(k[13018]|0,16384)|0;c=k[13030]|0;k[(k[13029]|0)+(c<<2)>>2]=b;b=k[13029]|0;if(!b)b=0;else d=4}if((d|0)==4)b=k[b+(c<<2)>>2]|0;Ov(b,a);a=(k[13029]|0)+(k[13030]<<2)|0;d=k[a>>2]|0;k[13031]=k[d+16>>2];d=k[d+8>>2]|0;k[13032]=d;k[13020]=d;k[13018]=k[k[a>>2]>>2];i[133786]=i[d>>0]|0;return}function Gv(a){a=a|0;var b=0,c=0;if(a){k[a+16>>2]=0;b=a+4|0;i[k[b>>2]>>0]=0;i[(k[b>>2]|0)+1>>0]=0;k[a+8>>2]=k[b>>2];k[a+28>>2]=1;k[a+44>>2]=0;b=k[13029]|0;if(!b)c=0;else c=k[b+(k[13030]<<2)>>2]|0;if((c|0)==(a|0)){c=b+(k[13030]<<2)|0;a=k[c>>2]|0;k[13031]=k[a+16>>2];a=k[a+8>>2]|0;k[13032]=a;k[13020]=a;k[13018]=k[k[c>>2]>>2];i[133786]=i[a>>0]|0}}return}function Hv(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;f=r;r=r+2080|0;d=f;c=f+32|0;e=f+16|0;$r(e,1024,f+1056|0);b=k[13023]|0;if(b){cs(e,b)|0;cs(e,134141)|0}cs(e,a)|0;k[d>>2]=k[13022];TN(c,134144,d)|0;cs(e,c)|0;cs(e,k[13020]|0)|0;cs(e,134163)|0;c=e+4|0;b=k[c>>2]|0;if(b>>>0>=(k[e+8>>2]|0)>>>0){as(e,1)|0;b=k[c>>2]|0}i[b>>0]=0;d=k[e>>2]|0;k[c>>2]=d;Yr(1,d,f+8|0)|0;ds(e);r=f;return}function Iv(){var a=0,b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0;h=k[13020]|0;f=k[13032]|0;i[f>>0]=i[133786]|0;e=k[13029]|0;c=k[e+(k[13030]<<2)>>2]|0;a=k[c+4>>2]|0;if(f>>>0<(a+2|0)>>>0){l=(k[13031]|0)+2|0;d=k[c+12>>2]|0;b=a+(d+2)|0;a=a+l|0;if((l|0)>0){do{a=a+-1|0;b=b+-1|0;i[b>>0]=i[a>>0]|0;d=k[13029]|0;c=k[d+(k[13030]<<2)>>2]|0}while(a>>>0>(k[c+4>>2]|0)>>>0);e=d;d=k[c+12>>2]|0}b=b-a|0;a=f+b|0;k[13031]=d;k[c+16>>2]=d;if(a>>>0<((k[(k[e+(k[13030]<<2)>>2]|0)+4>>2]|0)+2|0)>>>0)Nv(134166);else{g=h+b|0;j=a}}else{g=h;j=f}l=j+-1|0;i[l>>0]=64;k[13020]=g;i[133786]=i[l>>0]|0;k[13032]=l;return}function Jv(){var a=0;a=k[13029]|0;if(!a)a=0;else a=k[a+(k[13030]<<2)>>2]|0;Gv(a);return}function Kv(){var a=0,b=0,c=0;b=k[13029]|0;do if(!b){a=uP(4)|0;k[13029]=a;if(!a)Nv(134202);else{k[a>>2]=0;k[13346]=1;k[13030]=0;break}}else{a=k[13346]|0;if((k[13030]|0)>>>0>=(a+-1|0)>>>0){c=a+8|0;a=xP(b,c<<2)|0;k[13029]=a;if(!a)Nv(134202);else{b=a+(k[13346]<<2)|0;k[b>>2]=0;k[b+4>>2]=0;k[b+8>>2]=0;k[b+12>>2]=0;k[b+16>>2]=0;k[b+20>>2]=0;k[b+24>>2]=0;k[b+28>>2]=0;k[13346]=c;break}}}while(0);return}function Lv(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;b=k[13344]|0;if(b>>>0>(k[13342]|0)>>>0){b=b+-1|0;k[13344]=b}c=i[a>>0]|0;k[13344]=b+1;i[b>>0]=c;if(c<<24>>24){c=a;do{c=c+1|0;b=k[13344]|0;a=k[13343]|0;if(b>>>0>=a>>>0){f=k[13342]|0;d=f;e=a-d<<1;a=xP(f,e)|0;k[13342]=a;k[13343]=a+e;b=a+(b-d)|0;k[13344]=b}f=i[c>>0]|0;k[13344]=b+1;i[b>>0]=f}while(f<<24>>24!=0)}return}function Mv(){var a=0,b=0,c=0,d=0,e=0;a=(k[(k[(k[13029]|0)+(k[13030]<<2)>>2]|0)+28>>2]|0)+(k[13028]|0)|0;b=k[13020]|0;e=k[13032]|0;if(b>>>0<e>>>0)do{c=i[b>>0]|0;if(!(c<<24>>24))c=1;else c=k[52132+((c&255)<<2)>>2]|0;if(j[101128+(a<<1)>>1]|0){k[13289]=a;k[13290]=b}a:while(1){d=c&255;do{c=(j[101314+(a<<1)>>1]|0)+d|0;if((j[101524+(c<<1)>>1]|0)==(a|0)){a=c;break a}c=j[102082+(a<<1)>>1]|0;a=c<<16>>16}while(c<<16>>16<=92);c=k[53164+(d<<2)>>2]|0}a=j[102292+(a<<1)>>1]|0;b=b+1|0}while(b>>>0<e>>>0);return a|0}function Nv(a){a=a|0;var b=0,c=0;b=r;r=r+16|0;c=k[24528]|0;k[b>>2]=a;FN(c,134198,b)|0;Hb(2)}function Ov(a,b){a=a|0;b=b|0;var c=0,d=0;c=sM()|0;d=k[c>>2]|0;Gv(a);k[a>>2]=b;k[a+40>>2]=1;b=k[13029]|0;if(!b)b=0;else b=k[b+(k[13030]<<2)>>2]|0;if((b|0)!=(a|0)){k[a+32>>2]=1;k[a+36>>2]=0}k[a+24>>2]=0;k[c>>2]=d;return}function Pv(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0;m=r;r=r+128|0;l=m+16|0;j=m+8|0;e=m;f=m+20|0;b=k[a+76>>2]|0;d=k[a>>2]|0;if((b|0)!=0?(c=k[b>>2]|0,(c|0)!=0):0){Nb[c&127](a);g=21}else g=4;do if((g|0)==4)if((k[a+40>>2]|0)==0?(h=a+36|0,(k[h>>2]|0)==0):0){if(!(i[d+13>>0]|0)){c=a+32|0;b=c;c=k[c>>2]|0}else{b=k[a+24>>2]|0;if(!b)i[f>>0]=0;else{k[e>>2]=b+1;TN(f,134252,e)|0}c=k[a+20>>2]|0;c=(c|0)!=0?c:134256;e=uO(c)|0;b=uO(f)|0;d=a+52|0;b=e+1+b+(uO(k[d>>2]|0)|0)|0;if((k[13347]|0)>>>0<(b+1|0)>>>0){b=b+11|0;k[13347]=b;b=xP(k[13348]|0,b)|0;k[13348]=b}else b=k[13348]|0;rO(b,c)|0;nO(k[13348]|0,f)|0;c=k[13348]|0;c=c+(uO(c)|0)|0;i[c>>0]=46;i[c+1>>0]=0;d=tO(k[d>>2]|0)|0;c=zO(d,58)|0;b=k[13348]|0;if(c)do{nO(b,c+1|0)|0;b=k[13348]|0;b=b+(uO(b)|0)|0;i[b>>0]=46;i[b+1>>0]=0;i[c>>0]=0;c=zO(d,58)|0;b=k[13348]|0}while((c|0)!=0);nO(b,d)|0;vP(d);c=k[13348]|0;b=a+32|0;k[b>>2]=c}if(!c){k[h>>2]=k[24530];g=21;break}f=EN(c,141442)|0;k[h>>2]=f;if(!f){l=k[(k[a+12>>2]|0)+16>>2]|0;a=k[b>>2]|0;b=sM()|0;b=tM(k[b>>2]|0)|0;k[j>>2]=a;k[j+4>>2]=b;Pb[l&31](134266,j);b=1}else g=21}else g=21;while(0);if((g|0)==21)if(!(k[a+152>>2]&1024))b=0;else{Pb[k[(k[a+12>>2]|0)+16>>2]&31](134304,l);b=1}r=m;return b|0}function Qv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0;n=r;r=r+32|0;f=n+16|0;m=n+8|0;d=n;a:do if((b|0)!=0&(c|0)!=0){if(k[a+152>>2]&1024){Pb[k[(k[a+12>>2]|0)+16>>2]&31](134304,d);Hb(1)}d=k[(k[a>>2]|0)+104>>2]|0;do if(!d){h=a+40|0;g=k[h>>2]|0;if(!g){d=QN(b,1,c,k[a+36>>2]|0)|0;break}d=a+44|0;f=a+48|0;e=k[f>>2]|0;do if(((k[d>>2]|0)+-1-e|0)>>>0<c>>>0){e=c+4096+e&-4096;k[d>>2]=e;d=xP(g,e)|0;k[h>>2]=d;if(!d){Pb[k[(k[a+12>>2]|0)+16>>2]&31](134322,m);Hb(1)}else{j=d;l=k[f>>2]|0;break}}else{j=g;l=e}while(0);GP(j+l|0,b|0,c|0)|0;e=(k[f>>2]|0)+c|0;k[f>>2]=e;i[(k[h>>2]|0)+e>>0]=0;e=c;break a}else d=Tb[d&63](a,b,c)|0;while(0);if((d|0)==(c|0))e=c;else{a=k[(k[a+12>>2]|0)+16>>2]|0;k[f>>2]=c;Pb[a&31](134349,f);Hb(1)}}else e=0;while(0);r=n;return e|0}function Rv(a,b){a=a|0;b=b|0;var c=0;c=uO(b)|0;b=(Qv(a,b,c)|0)==(c|0);return (b?1:-1)|0}function Sv(a,b){a=a|0;b=b|0;var c=0,d=0;c=r;r=r+16|0;d=c;i[d>>0]=b;a=(Qv(a,d,1)|0)==1;r=c;return (a?b:-1)|0}function Tv(a){a=a|0;var b=0;b=k[a+36>>2]|0;if(((b|0)!=0?(i[a+144>>0]|0)==0:0)?(k[(k[a>>2]|0)+104>>2]|0)==0:0)b=AN(b)|0;else b=0;return b|0}function Uv(a){a=a|0;var b=0,c=0;b=k[a+76>>2]|0;if((b|0)!=0?(c=k[b+4>>2]|0,(c|0)!=0):0)Nb[c&127](a);Tv(a)|0;return}function Vv(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0;h=r;r=r+16|0;b=k[a+76>>2]|0;if(k[a+152>>2]&1024){Pb[k[(k[a+12>>2]|0)+16>>2]&31](134374,h);Hb(1)}if((b|0)!=0?(c=k[b+8>>2]|0,(c|0)!=0):0)Nb[c&127](a);else g=6;if((((g|0)==6?(Tv(a)|0,d=a+32|0,(k[d>>2]|0)!=0):0)?(e=a+36|0,f=k[e>>2]|0,(f|0)!=(k[24530]|0)):0)?(i[a+144>>0]|0)==0:0){if(f){yN(f)|0;k[e>>2]=0}k[d>>2]=0}r=h;return}function Wv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;g=r;r=r+1040|0;f=g+16|0;e=g;k[e>>2]=c;d=ZN(f,1024,b,e)|0;if(d>>>0>1023){d=Cy(d+1|0)|0;k[e>>2]=c;c=d;d=_N(d,b,e)|0}else c=f;Qv(a,c,d)|0;if((c|0)!=(f|0))vP(c);r=g;return}function Xv(a,b){a=a|0;b=+b;var c=0,d=0,e=0;c=r;r=r+16|0;d=c;e=_v(d,b)|0;Qv(a,e,k[d>>2]|0)|0;r=c;return}function Yv(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=r;r=r+16|0;d=c;e=_v(d,+p[b>>3])|0;Qv(a,e,k[d>>2]|0)|0;Qv(a,138519,1)|0;b=_v(d,+p[b+8>>3])|0;Qv(a,b,k[d>>2]|0)|0;r=c;return}function Zv(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;f=r;r=r+16|0;d=f;k[d>>2]=k[b>>2];k[d+4>>2]=k[b+4>>2];k[d+8>>2]=k[b+8>>2];k[d+12>>2]=k[b+12>>2];Yv(a,d);if((c|0)>1){e=1;do{Qv(a,138519,1)|0;g=b+(e<<4)|0;k[d>>2]=k[g>>2];k[d+4>>2]=k[g+4>>2];k[d+8>>2]=k[g+8>>2];k[d+12>>2]=k[g+12>>2];Yv(a,d);e=e+1|0}while((e|0)!=(c|0))}r=f;return}function _v(a,b){a=a|0;b=+b;var c=0,d=0,e=0,f=0,g=0,h=0,j=0;do if(b<-1.0e15){k[a>>2]=19;c=134411}else{if(b>1.0e15){k[a>>2]=18;c=134412;break}b=b*100.0;c=~~(b+(b<0.0?-.5:.5));if(!c){k[a>>2]=1;c=174497;break}j=(c|0)<0;f=j?0-c|0:c;h=2;c=134411;e=0;while(1){d=(f|0)%10|0;g=f;f=(f|0)/10|0;if(e<<24>>24==0&(d|0)==0)e=0;else{c=c+-1|0;i[c>>0]=d|48;e=1}if((h|0)==1)if(!(e<<24>>24))e=1;else{c=c+-1|0;i[c>>0]=46;e=1}if(!((g+9|0)>>>0>18|(h|0)>1))break;else h=h+-1|0}if(j){c=c+-1|0;i[c>>0]=45}k[a>>2]=134411-c}while(0);return c|0}function $v(a){a=a|0;var b=0;if(!a)Wa(147051,134431,577,134445);if(!(i[a>>0]|0))Wa(147056,134431,578,134445);b=k[13349]|0;if(!b)b=0;else b=Tb[k[b>>2]&63](b,a,512)|0;return b|0}function aw(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0;j=r;r=r+16|0;h=j+8|0;g=j;if(!a)Wa(147204,134431,593,134462);e=a+8|0;c=k[e>>2]|0;if(!c)Wa(147207,134431,594,134462);if(!(i[c>>0]|0))Wa(147216,134431,595,134462);f=a+20|0;d=k[f>>2]|0;do if(!d){b=wB(c)|0;if(!b){k[g>>2]=k[e>>2];Yr(0,134486,g)|0;b=0;break}g=EN(b,174924)|0;k[f>>2]=g;if(!g){a=sM()|0;a=tM(k[a>>2]|0)|0;k[h>>2]=a;k[h+4>>2]=b;Yr(0,134511,h)|0;b=0;break}b=k[13350]|0;if((b|0)>49){i[a+17>>0]=1;b=1;break}else{k[13350]=b+1;b=1;break}}else{LN(d,0,0)|0;if(!(k[f>>2]|0))Wa(134532,134431,618,134462);else b=1}while(0);r=j;return b|0}function bw(a){a=a|0;var b=0,c=0;if((i[a+17>>0]|0)!=0?(b=a+20|0,c=k[b>>2]|0,(c|0)!=0):0){yN(c)|0;k[b>>2]=0}return}function cw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0;if(!b){c=-1;d=-1}else{d=k[b+48>>2]|0;if(!d){e=+p[c>>3];f=+p[c+8>>3]}else{f=+(d|0);p[c+8>>3]=f;p[c>>3]=f;e=f}c=~~(+((k[b+40>>2]|0)*72|0)/e);d=~~(+((k[b+44>>2]|0)*72|0)/f)}k[a>>2]=c;k[a+4>>2]=d;return}function dw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0.0,g=0,h=0,j=0,l=0,m=0,n=0,o=0.0,q=0.0,s=0.0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0.0,M=0,N=0;N=r;r=r+2432|0;D=N+2160|0;C=N+2152|0;B=N+2144|0;A=N+2136|0;z=N+2128|0;m=N+2120|0;n=N+2104|0;l=N+2096|0;J=N+2072|0;H=N+2056|0;F=N+1032|0;K=N+8|0;E=N;y=N+2408|0;x=N+2176|0;w=N+2208|0;if((c|0)!=0?(i[c>>0]|0)!=0:0){if(((k[13599]|0)==0?(d=k[13598]|0,(k[13351]|0)!=(d|0)):0)?(k[13351]=d,e=k[13349]|0,(e|0)!=0):0){Hr(e)|0;k[13349]=0}L=+p[(k[(k[b+8>>2]|0)+8>>2]|0)+24>>3];L=!(L>=1.0)?96.0:L;if(!(k[13349]|0)){G=Lr(53408,k[12819]|0)|0;k[13349]=G}d=$v(c)|0;a:do if(!d){d=By(64)|0;if((d|0)!=0?(G=Bu(0,c)|0,j=d+8|0,k[j>>2]=G,(aw(d)|0)<<24>>24!=0):0){G=d+20|0;e=k[G>>2]|0;if(!e)Wa(134532,134431,649,134538);b:do if((IN(J,1,20,e)|0)==20){e=0;while(1){if(!(iO(J,k[53444+(e<<4)>>2]|0,k[53444+(e<<4)+4>>2]|0)|0))break;e=e+1|0;if(e>>>0>=10){I=25;break b}}g=d+28|0;k[g>>2]=k[53444+(e<<4)+12>>2];b=k[53444+(e<<4)+8>>2]|0;h=d+24|0;k[h>>2]=b;c:do switch(e|0){case 7:{while(1){if(!(CN(w,200,k[G>>2]|0)|0)){I=23;break}if(!(iO(w,134555,4)|0)){I=20;break}}if((I|0)==20){k[g>>2]=138053;k[h>>2]=8;I=75;break c}else if((I|0)==23){e=k[h>>2]|0;I=26;break c}break}case 8:{if(!(iO(J+8|0,134560,4)|0)){k[g>>2]=134565;k[h>>2]=11;I=67}else{e=b;I=26}break}default:{e=b;I=26}}while(0);d:do if((I|0)==26)switch(e|0){case 0:break b;case 11:{I=67;break d}case 8:{I=75;break d}case 2:{k[d+48>>2]=0;LN(k[G>>2]|0,6,0)|0;if((ew(k[G>>2]|0,2,J)|0)<<24>>24!=0?(ew(k[G>>2]|0,2,H)|0)<<24>>24!=0:0){k[d+40>>2]=k[J>>2];k[d+44>>2]=k[H>>2]}break d}case 3:{k[d+48>>2]=0;LN(k[G>>2]|0,16,0)|0;if((fw(k[G>>2]|0,4,J)|0)<<24>>24!=0?(fw(k[G>>2]|0,4,H)|0)<<24>>24!=0:0){k[d+40>>2]=k[J>>2];k[d+44>>2]=k[H>>2]}break d}case 1:{k[d+48>>2]=0;LN(k[G>>2]|0,16,0)|0;if((((ew(k[G>>2]|0,2,J)|0)<<24>>24!=0?(ew(k[G>>2]|0,2,H)|0)<<24>>24!=0:0)?(ew(k[G>>2]|0,2,F)|0)<<24>>24!=0:0)?(ew(k[G>>2]|0,2,K)|0)<<24>>24!=0:0){k[d+40>>2]=k[J>>2]<<16|k[H>>2];k[d+44>>2]=k[F>>2]<<16|k[K>>2]}break d}case 4:{k[d+48>>2]=0;e:do if((fw(k[G>>2]|0,1,J)|0)<<24>>24){while(1){b=k[J>>2]|0;if((b|0)!=255?(oO(134635,b)|0)==0:0){if((b|0)==192){I=48;break}e=k[G>>2]|0;if((b|0)==194){I=53;break}if(!((fw(e,2,H)|0)<<24>>24))break e;LN(k[G>>2]|0,(k[H>>2]|0)+-2|0,1)|0}if(!((fw(k[G>>2]|0,1,J)|0)<<24>>24))break e}if((I|0)==48){if(!((fw(k[G>>2]|0,3,E)|0)<<24>>24))break;if(!((fw(k[G>>2]|0,2,F)|0)<<24>>24))break;if(!((fw(k[G>>2]|0,2,K)|0)<<24>>24))break;k[d+44>>2]=k[F>>2];k[d+40>>2]=k[K>>2];break}else if((I|0)==53){if(!((fw(e,3,E)|0)<<24>>24))break;if(!((fw(k[G>>2]|0,2,F)|0)<<24>>24))break;if(!((fw(k[G>>2]|0,2,K)|0)<<24>>24))break;k[d+44>>2]=k[F>>2];k[d+40>>2]=k[K>>2];break}}while(0);break d}case 6:{k[d+48>>2]=72;LN(k[G>>2]|0,0,0)|0;f:do if(CN(K,1024,k[G>>2]|0)|0){while(1){e=BO(K,134647)|0;if((e|0)!=0?(k[n>>2]=J,k[n+4>>2]=H,k[n+8>>2]=F,k[n+12>>2]=E,(UN(e,140175,n)|0)==4):0)break;if(!(CN(K,1024,k[G>>2]|0)|0))break f}J=k[J>>2]|0;k[d+32>>2]=J;K=k[H>>2]|0;k[d+36>>2]=K;k[d+40>>2]=(k[F>>2]|0)-J;k[d+44>>2]=(k[E>>2]|0)-K}while(0);break d}case 5:{k[d+48>>2]=0;LN(k[G>>2]|0,0,0)|0;b=k[G>>2]|0;do{if(!(CN(F,1024,b)|0)){I=104;break}e=BO(F,134760)|0}while((e|0)==0);if((I|0)==104)break d;g=H+4|0;k[g>>2]=F;k[H>>2]=e+9;h=H+8|0;k[h>>2]=b;hw(H);e=k[H>>2]|0;b=i[e>>0]|0;if(!(b<<24>>24)){g=k[g>>2]|0;if(!(CN(g,1024,k[h>>2]|0)|0))b=0;else{k[H>>2]=g;b=i[g>>0]|0;e=g}b=b&255}else b=b<<24>>24;if((((b|0)==91?(k[H>>2]=e+1,iw(H,K),o=+eO(K,J),(k[J>>2]|0)!=(K|0)):0)?(iw(H,K),q=+eO(K,J),(k[J>>2]|0)!=(K|0)):0)?(iw(H,K),s=+eO(K,J),(k[J>>2]|0)!=(K|0)):0){iw(H,K);f=+eO(K,J);if((k[J>>2]|0)==(K|0))break d;k[d+32>>2]=~~o;k[d+36>>2]=~~q;k[d+40>>2]=~~(s-o);k[d+44>>2]=~~(f-q);break d}break d}case 12:{k[d+48>>2]=0;LN(k[G>>2]|0,6,0)|0;if((fw(k[G>>2]|0,1,J)|0)<<24>>24!=0?(fw(k[G>>2]|0,1,H)|0)<<24>>24!=0:0){k[d+40>>2]=k[J>>2];k[d+44>>2]=k[H>>2]}break d}default:break d}while(0);if((I|0)==67){k[d+48>>2]=0;LN(k[G>>2]|0,15,0)|0;K=(BN(k[G>>2]|0)|0)==88;e=k[G>>2]|0;if(K){LN(e,24,0)|0;if((ew(k[G>>2]|0,4,J)|0)<<24>>24!=0?(ew(k[G>>2]|0,4,H)|0)<<24>>24!=0:0){k[d+40>>2]=k[J>>2];k[d+44>>2]=k[H>>2]}}else{LN(e,26,0)|0;if((ew(k[G>>2]|0,2,J)|0)<<24>>24!=0?(ew(k[G>>2]|0,2,H)|0)<<24>>24!=0:0){k[d+40>>2]=k[J>>2];k[d+44>>2]=k[H>>2]}}}else if((I|0)==75){if(!(k[13401]|0)){if(dN(53608,134662,1)|0){k[m>>2]=134662;Yr(1,134689,m)|0}k[13401]=53608}LN(k[G>>2]|0,0,0)|0;g:do if(!(CN(w,200,k[G>>2]|0)|0)){b=0;e=0}else{m=x+12|0;n=x+20|0;t=x+8|0;u=x+16|0;v=x+4|0;b=0;g=0;e=0;h=0;do{if(g<<24>>24==0|h<<24>>24==0)c=w;else break g;h:while(1){j=g;l=h;i:while(1){if(fN(53608,c,4,x,0)|0){g=j;h=l;break h}while(1){i[c+(k[m>>2]|0)>>0]=0;i[c+(k[n>>2]|0)>>0]=0;h=c+(k[t>>2]|0)|0;g=c+(k[u>>2]|0)|0;c=c+((k[v>>2]|0)+1)|0;if(!(qO(h,177253)|0))break;if(!(qO(h,177185)|0)){h=l;break i}if((qO(h,134736)|0)==0?(k[D>>2]=H,k[D+4>>2]=F,k[D+8>>2]=K,k[D+12>>2]=E,(UN(g,134744,D)|0)==4):0){I=99;break h}if(fN(53608,c,4,x,0)|0){g=j;h=l;break h}}k[z>>2]=J;k[z+4>>2]=y;do if((UN(g,134726,z)|0)==2){e=gw(+p[J>>3],y)|0;h=1}else{k[A>>2]=J;if((UN(g,137283,A)|0)!=1){h=l;break}e=gw(+p[J>>3],134733)|0;h=1}while(0);if(!(j<<24>>24)){j=0;l=h}else{g=j;break h}}k[B>>2]=J;k[B+4>>2]=y;do if((UN(g,134726,B)|0)==2){b=gw(+p[J>>3],y)|0;g=1}else{k[C>>2]=J;if((UN(g,137283,C)|0)!=1){g=j;break}b=gw(+p[J>>3],134733)|0;g=1}while(0);if(!(h<<24>>24))h=0;else break}if((I|0)==99){I=0;b=~~(+p[E>>3]-+p[F>>3]+1.0)>>>0;g=1;e=~~(+p[K>>3]-+p[H>>3]+1.0)>>>0;h=1}}while((CN(w,200,k[G>>2]|0)|0)!=0)}while(0);k[d+48>>2]=0;k[d+40>>2]=e;k[d+44>>2]=b}if((i[d+17>>0]|0)!=0?(M=k[G>>2]|0,(M|0)!=0):0){yN(M)|0;k[G>>2]=0}I=k[13349]|0;Tb[k[I>>2]&63](I,d,1)|0;I=129;break a}else I=25;while(0);if((I|0)==25){k[d+28>>2]=134570;k[d+24>>2]=0}M=Sz(k[j>>2]|0)|0;k[d+52>>2]=M;if(!M){k[l>>2]=k[j>>2];Yr(0,134576,l)|0}vP(d);e=-1;d=-1}else{e=-1;d=-1}}else if((i[d+17>>0]|0)!=0?(g=d+20|0,h=k[g>>2]|0,(h|0)!=0):0){yN(h)|0;k[g>>2]=0;I=129}else I=129;while(0);if((I|0)==129){e=k[d+48>>2]|0;L=(e|0)==0?L:+(e|0);e=~~(+((k[d+40>>2]|0)*72|0)/L);d=~~(+((k[d+44>>2]|0)*72|0)/L)}k[a>>2]=e;k[a+4>>2]=d}else{k[a>>2]=-1;k[a+4>>2]=-1}r=N;return}function ew(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;k[c>>2]=0;a:do if(!b)d=1;else{e=0;while(1){d=BN(a)|0;if(zN(a)|0){d=0;break a}k[c>>2]=k[c>>2]|d<<(e<<3);e=e+1|0;if(e>>>0>=b>>>0){d=1;break}}}while(0);return d|0}function fw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;k[c>>2]=0;a:do if(!b)d=1;else{e=0;while(1){d=BN(a)|0;if(zN(a)|0){d=0;break a}k[c>>2]=k[c>>2]<<8|d;e=e+1|0;if(e>>>0>=b>>>0){d=1;break}}}while(0);return d|0}function gw(a,b){a=+a;b=b|0;do if(!(qO(b,134770)|0)){a=a*72.0;b=~~(a+(a>=0.0?.5:-.5))}else{if(!(qO(b,134773)|0)){a=a*72.0/96.0;b=~~(a+(a>=0.0?.5:-.5));break}if(!(qO(b,134776)|0)){a=a*72.0/6.0;b=~~(a+(a>=0.0?.5:-.5));break}if((qO(b,134733)|0)!=0?(qO(b,134779)|0)!=0:0){if(!(qO(b,134781)|0)){a=a*28.346456664;b=~~(a+(a>=0.0?.5:-.5));break}if(qO(b,134784)|0){b=0;break}a=a*2.8346456663999997;b=~~(a+(a>=0.0?.5:-.5));break}b=~~((a>=0.0?.5:-.5)+a)}while(0);return b|0}function hw(a){a=a|0;var b=0;b=k[a>>2]|0;while(1){b=i[b>>0]|0;if(!(b<<24>>24))b=(jw(a)|0)&255;else b=b<<24>>24;if(!((b&255)<<24>>24))break;if(!(_L(b&255)|0))break;b=(k[a>>2]|0)+1|0;k[a>>2]=b}return}function iw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;hw(a);d=k[a>>2]|0;c=0;while(1){d=i[d>>0]|0;if(!(d<<24>>24))d=(jw(a)|0)&255;else d=d<<24>>24;e=d<<24>>24;if(!e)break;if(!((e|0)==46|(e+-48|0)>>>0<10))break;i[b+c>>0]=d;c=c+1|0;d=(k[a>>2]|0)+1|0;k[a>>2]=d;if((c|0)==1023){c=1023;break}}i[b+c>>0]=0;return}function jw(a){a=a|0;var b=0;b=a+4|0;if(!(CN(k[b>>2]|0,1024,k[a+8>>2]|0)|0))b=0;else{b=k[b>>2]|0;k[a>>2]=b;b=i[b>>0]|0}return b|0}function kw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;a=k[b+20>>2]|0;if(a)yN(a)|0;if((k[b+52>>2]|0)!=0?(d=k[b+60>>2]|0,(d|0)!=0):0)Nb[d&127](b);vP(b);return}function lw(){var a=0;ks(0,1,145884,142237)|0;a=UD(0,1)|0;xE(a,0);return a|0}function mw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,g=0.0,h=0.0,j=0,l=0,m=0,n=0;n=r;r=r+304|0;m=n+24|0;l=n+8|0;d=n;j=n+40|0;if((RD(a,c)|0)!=999)if((SD(a,b)|0)==-1)c=-1;else{d=k[b+8>>2]|0;e=+p[d+16>>3];f=+p[d+24>>3];g=+p[d+32>>3];h=+p[d+40>>3];if(!(i[(k[d+8>>2]|0)+81>>0]|0)){k[m>>2]=~~(e+(e>=0.0?.5:-.5));k[m+4>>2]=~~(f+(f>=0.0?.5:-.5));k[m+8>>2]=~~(g+(g>=0.0?.5:-.5));k[m+12>>2]=~~(h+(h>=0.0?.5:-.5));TN(j,134886,m)|0}else{k[l>>2]=~~(f+(f>=0.0?.5:-.5));k[l+4>>2]=~~(e+(e>=0.0?.5:-.5));k[l+8>>2]=~~(h+(h>=0.0?.5:-.5));k[l+12>>2]=~~(g+(g>=0.0?.5:-.5));TN(j,134886,l)|0}ws(b,138583,j,176676)|0;c=0}else{m=vE(a,1,c)|0;k[d>>2]=c;k[d+4>>2]=m;Yr(1,147125,d)|0;c=-1}r=n;return c|0}function nw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;h=r;r=r+16|0;f=h;e=k[b+48>>2]|0;WD(a,c)|0;b=k[a+164>>2]|0;c=eD(b,k[b+52>>2]|0)|0;k[b+56>>2]=c;if((qu(e,173447,0,1)|0)!=0?(k[(k[e+8>>2]|0)+8>>2]|0)!=0:0)g=5;else if(!(k[b+152>>2]&67108864)){Zr(134898,f);b=-1}else g=5;if((g|0)==5){VD(a,d);g=Ex(a,e)|0;gD(b);Vv(b);_D(a);b=g}r=h;return b|0}function ow(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0;l=r;r=r+16|0;g=l+8|0;f=l;b=k[b+48>>2]|0;WD(a,c)|0;i=k[a+164>>2]|0;c=eD(i,k[i+52>>2]|0)|0;k[i+56>>2]=c;if((qu(b,173447,0,1)|0)!=0?(k[(k[b+8>>2]|0)+8>>2]|0)!=0:0)j=5;else if(!(k[i+152>>2]&67108864)){Zr(134898,f);b=-1}else j=5;do if((j|0)==5){if((d|0)!=0?(h=uP(4096)|0,k[d>>2]=h,(h|0)!=0):0){f=i+40|0;k[f>>2]=h;k[i+44>>2]=4096;c=i+48|0;k[c>>2]=0;b=Ex(a,b)|0;gD(i);if(!b){k[d>>2]=k[f>>2];k[e>>2]=k[c>>2]}_D(a);break}Yr(1,134919,g)|0;b=-1}while(0);r=l;return b|0}function pw(a,b){a=a|0;b=b|0;wE(a,0,b);return}function qw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,y=0,z=0,A=0,B=0,C=0,D=0;D=r;r=r+4288|0;A=D+8|0;z=D;B=4;C=uP(40)|0;k[C>>2]=0;u=D+4152|0;v=D+52|0;y=D+32|0;j=D+16|0;h=D+56|0;w=0;e=ra(22,a|0)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,C|0,B|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;a:do if((g|0)!=1){if(!e){k[b>>2]=0;e=0;break}w=0;m=ta(36,c|0,v|0,u|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,C|0,B|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)!=1){w=0;l=ra(21,40)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,C|0,B|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)!=1){k[j>>2]=h;k[j+4>>2]=h+4096;k[j+12>>2]=0;k[j+8>>2]=0;k[y>>2]=j;k[y+4>>2]=j;k[y+8>>2]=h;k[y+12>>2]=21;c=y+16|0;k[c>>2]=86;w=0;e=ra(23,a|0)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,C|0,B|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;if((g|0)!=1){if(e)do{i[(k[e+8>>2]|0)+157>>0]=0;w=0;e=Aa(87,a|0,e|0)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,C|0,B|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;if((g|0)==1){t=l;s=m;e=L;l=12;break a}}while((e|0)!=0);C=DP(53640,1,C|0,B|0)|0;B=L;w=0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,C|0,B|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)!=1){t=l;s=m;e=0;l=12}else{t=l;s=m;e=L;l=12}}else{t=l;s=m;e=L;l=12}}else{c=0;t=0;s=m;e=L;l=12}}else{c=0;t=0;s=m;e=L;l=12}}else{c=0;t=0;s=0;e=L;l=12}while(0);do if((l|0)==12){b:while(1){if(!e){w=0;g=ra(23,a|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,C|0,B|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){p=s;q=t;l=c;e=L;s=p;t=q;c=l;l=12;continue}c:do if(!g){g=0;q=0}else{n=s+(k[v>>2]|0)|0;e=86;l=0;m=0;j=0;while(1){w=0;e=Aa(e|0,g|0,-1)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){h=FP(k[f>>2]|0,C|0,B|0)|0;if(!h)Za(f|0,x|0);L=x}else h=-1;if((h|0)==1){p=s;q=t;l=c;e=L;s=p;t=q;c=l;l=12;continue b}if((e|0)==0?(i[(k[g+8>>2]|0)+119>>0]|0)==3:0){if(!m){w=0;k[z>>2]=l;ta(37,n|0,173421,z|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,C|0,B|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){p=s;q=t;l=c;e=L;s=p;t=q;c=l;l=12;continue b}w=0;h=ta(38,a|0,s|0,1)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,C|0,B|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){p=s;q=t;l=c;e=L;s=p;t=q;c=l;l=12;continue b}w=0;Ea(51,h|0,173447,280,1)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,C|0,B|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){p=s;q=t;l=c;e=L;s=p;t=q;c=l;l=12;continue b}k[t+(l<<2)>>2]=h;l=l+1|0;j=1}else h=m;w=0;Ea(52,a|0,g|0,h|0,y|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,C|0,B|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){p=s;q=t;l=c;e=L;s=p;t=q;c=l;l=12;continue b}}else h=m;w=0;g=Aa(87,a|0,g|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,C|0,B|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){p=s;q=t;l=c;e=L;s=p;t=q;c=l;l=12;continue b}if(!g){g=l;q=j;break c}e=k[c>>2]|0;m=h}}while(0);w=0;h=ra(23,a|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,C|0,B|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){p=s;q=t;l=c;e=L;s=p;t=q;c=l;l=12;continue}if(!h){j=g;l=t;g=0;h=q}else{p=s+(k[v>>2]|0)|0;n=10;o=t;while(1){w=0;e=Aa(k[c>>2]|0,h|0,-1)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){j=FP(k[f>>2]|0,C|0,B|0)|0;if(!j)Za(f|0,x|0);L=x}else j=-1;if((j|0)==1){p=s;q=t;l=c;e=L;s=p;t=q;c=l;l=12;continue b}if(!e){w=0;k[A>>2]=g;ta(37,p|0,173421,A|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,C|0,B|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){p=s;q=t;l=c;e=L;s=p;t=q;c=l;l=12;continue b}w=0;m=ta(38,a|0,s|0,1)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,C|0,B|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){p=s;q=t;l=c;e=L;s=p;t=q;c=l;l=12;continue b}w=0;Ea(51,m|0,173447,280,1)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,C|0,B|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){p=s;q=t;l=c;e=L;s=p;t=q;c=l;l=12;continue b}w=0;Ea(52,a|0,h|0,m|0,y|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,C|0,B|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){p=s;q=t;l=c;e=L;s=p;t=q;c=l;l=12;continue b}if((g|0)==(n|0)){l=n<<1;w=0;j=Aa(88,o|0,n<<3|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,C|0,B|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){p=s;q=t;l=c;e=L;s=p;t=q;c=l;l=12;continue b}e=l;f=j}else{e=n;f=o}k[f+(g<<2)>>2]=m;j=e;g=g+1|0;l=f}else{j=n;l=o}w=0;h=Aa(87,a|0,h|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,C|0,B|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){p=s;q=t;l=c;e=L;s=p;t=q;c=l;l=12;continue b}if(!h){j=g;g=0;h=q;break}else{n=j;o=l}}}}else{j=0;l=t;g=1;h=0}w=0;na(98,y|0);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,C|0,B|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){p=s;q=t;l=c;e=L;s=p;t=q;c=l;l=12;continue}if((s|0)!=(u|0)){w=0;na(95,s|0);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,C|0,B|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){p=s;q=t;l=c;e=L;s=p;t=q;c=l;l=12;continue}}if(!g){w=0;e=Aa(88,l|0,j<<2|0)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,C|0,B|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;if((g|0)==1){p=s;q=t;l=c;e=L;s=p;t=q;c=l;l=12;continue}else{l=55;break}}k[b>>2]=0;if((j|0)>0){g=0;while(1){w=0;ra(24,k[l+(g<<2)>>2]|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,C|0,B|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){p=s;q=t;l=c;e=L;s=p;t=q;c=l;l=12;continue b}g=g+1|0;if((g|0)==(j|0))break}}w=0;na(95,l|0);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,C|0,B|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){p=s;q=t;l=c;e=L;s=p;t=q;c=l;l=12}else{l=53;break}}if((l|0)==53){e=0;break}else if((l|0)==55){k[b>>2]=j;i[d>>0]=h;break}}while(0);vP(C|0);r=D;return e|0}function rw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,y=0,z=0,A=0;A=r;r=r+4272|0;v=A;y=4;z=uP(40)|0;k[z>>2]=0;s=A+4144|0;t=A+44|0;u=A+24|0;h=A+8|0;g=A+48|0;w=0;d=ra(22,a|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,z|0,y|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;a:do if((f|0)!=1){if(!d){k[b>>2]=0;d=0;break}w=0;j=ta(36,c|0,t|0,s|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,z|0,y|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)!=1){w=0;l=ra(21,40)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,z|0,y|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)!=1){k[h>>2]=g;k[h+4>>2]=g+4096;k[h+12>>2]=0;k[h+8>>2]=0;k[u>>2]=h;k[u+4>>2]=h;k[u+8>>2]=g;k[u+12>>2]=21;c=u+16|0;k[c>>2]=86;w=0;d=ra(23,a|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,z|0,y|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)!=1){if(d)do{i[(k[d+8>>2]|0)+157>>0]=0;w=0;d=Aa(87,a|0,d|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,z|0,y|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){q=l;p=j;d=L;o=c;n=l;j=12;break a}}while((d|0)!=0);z=DP(53640,1,z|0,y|0)|0;y=L;w=0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,z|0,y|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)!=1){q=l;p=j;d=0;o=c;n=l;j=12}else{q=l;p=j;d=L;o=c;n=l;j=12}}else{q=l;p=j;d=L;o=c;n=l;j=12}}else{q=l;p=j;d=L;o=0;n=0;j=12}}else{q=0;p=j;d=L;o=0;n=0;j=12}}else{q=0;p=0;d=L;o=0;n=0;j=12}while(0);do if((j|0)==12){b:while(1){if(d){w=0;na(98,u|0);d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,z|0,y|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){h=n;l=o;m=p;j=q;d=L;n=h;o=l;p=m;q=j;j=12;continue}w=0;na(95,q|0);d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,z|0,y|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){h=n;l=o;m=p;j=q;d=L;n=h;o=l;p=m;q=j;j=12;continue}if((p|0)==(s|0)){j=18;break}w=0;na(95,p|0);d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,z|0,y|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){h=n;l=o;m=p;j=q;d=L;n=h;o=l;p=m;q=j;j=12;continue}else{j=17;break}}w=0;c=ra(23,a|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,z|0,y|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){h=n;l=o;m=p;j=q;d=L;n=h;o=l;p=m;q=j;j=12;continue}c:do if(!c){c=0;f=n}else{m=p+(k[t>>2]|0)|0;d=86;l=10;h=0;f=n;while(1){w=0;d=Aa(d|0,c|0,-1)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){g=FP(k[e>>2]|0,z|0,y|0)|0;if(!g)Za(e|0,x|0);L=x}else g=-1;if((g|0)==1){h=n;l=o;m=p;j=q;d=L;n=h;o=l;p=m;q=j;j=12;continue b}if(!d){w=0;k[v>>2]=h;ta(37,m|0,173421,v|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,z|0,y|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){h=n;l=o;m=p;j=q;d=L;n=h;o=l;p=m;q=j;j=12;continue b}w=0;j=ta(38,a|0,p|0,1)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,z|0,y|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){h=n;l=o;m=p;j=q;d=L;n=h;o=l;p=m;q=j;j=12;continue b}w=0;Ea(51,j|0,173447,280,1)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,z|0,y|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){h=n;l=o;m=p;j=q;d=L;n=h;o=l;p=m;q=j;j=12;continue b}w=0;Ea(52,a|0,c|0,j|0,u|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,z|0,y|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){h=n;l=o;m=p;j=q;d=L;n=h;o=l;p=m;q=j;j=12;continue b}if((h|0)==(l|0)){g=l<<1;w=0;f=Aa(88,f|0,l<<3|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,z|0,y|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){h=n;l=o;m=p;j=q;d=L;n=h;o=l;p=m;q=j;j=12;continue b}d=g}else d=l;k[f+(h<<2)>>2]=j;g=d;h=h+1|0}else g=l;w=0;c=Aa(87,a|0,c|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,z|0,y|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){h=n;l=o;m=p;j=q;d=L;n=h;o=l;p=m;q=j;j=12;continue b}if(!c){c=h;break c}d=k[o>>2]|0;l=g}}while(0);w=0;na(98,u|0);d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,z|0,y|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){h=n;l=o;m=p;j=q;d=L;n=h;o=l;p=m;q=j;j=12;continue}w=0;d=Aa(88,f|0,c<<2|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,z|0,y|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){h=n;l=o;m=p;j=q;d=L;n=h;o=l;p=m;q=j;j=12;continue}if((p|0)==(s|0)){j=40;break}w=0;na(95,p|0);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,z|0,y|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){h=n;l=o;m=p;j=q;d=L;n=h;o=l;p=m;q=j;j=12}else{j=39;break}}if((j|0)==17)j=18;else if((j|0)==39)j=40;if((j|0)==18){k[b>>2]=0;d=0;break}else if((j|0)==40){k[b>>2]=c;break}}while(0);vP(z|0);r=A;return d|0}function sw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=Kt(a)|0;if(!d)c=0;else{c=0;do{e=Es(b,d)|0;if(e)do{if(Pt(a,k[((k[e>>2]&3|0)==2?e:e+-32|0)+28>>2]|0,0)|0){Os(a,e,1)|0;c=c+1|0}e=Gs(b,e)|0}while((e|0)!=0);d=Lt(a,d)|0}while((d|0)!=0)}return c|0}function tw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;y=r;r=r+4320|0;d=y+4180|0;w=y+24|0;t=y+8|0;s=y;x=y+4184|0;v=y+4160|0;h=y+48|0;g=y+64|0;j=y+40|0;if(Zs(a)|0){su(a,0,134956,-12,0);su(a,1,134968,16,0);u=vw(c,j,x)|0;k[d>>2]=k[12892];q=Vs(134980,d,0)|0;Aw(q,a);c=Kt(a)|0;if(c)do{p=(pu(c,134968,0)|0)+12|0;if(!(k[p>>2]|0)){o=Qt(q,ht(c)|0,1)|0;qu(o,134968,16,1)|0;k[(k[o+8>>2]|0)+12>>2]=c;p=(pu(c,134968,0)|0)+12|0;k[p>>2]=o}c=Lt(a,c)|0}while((c|0)!=0);c=Kt(a)|0;if(c)do{f=(pu(c,134968,0)|0)+12|0;f=k[f>>2]|0;d=Es(a,c)|0;if(d)do{e=(pu(k[((k[d>>2]&3|0)==2?d:d+-32|0)+28>>2]|0,134968,0)|0)+12|0;e=k[e>>2]|0;do if((e|0)!=(f|0))if(e>>>0>f>>>0){Ls(q,f,e,0,1)|0;break}else{Ls(q,e,f,0,1)|0;break}while(0);d=Gs(a,d)|0}while((d|0)!=0);c=Lt(a,c)|0}while((c|0)!=0);p=Cy((Zs(q)|0)<<2)|0;k[h>>2]=g;k[h+4>>2]=g+4096;k[h+12>>2]=0;k[h+8>>2]=0;k[v>>2]=h;k[v+4>>2]=h;k[v+8>>2]=g;k[v+12>>2]=21;o=v+16|0;k[o>>2]=89;d=Kt(q)|0;a:do if(!d)c=0;else{m=u+(k[j>>2]|0)|0;n=k[24528]|0;e=89;c=0;while(1){if(!(_b[e&127](d,-1)|0)){k[s>>2]=c;TN(m,135887,s)|0;h=Hu(q,u,1)|0;j=Hu(a,u,1)|0;qu(j,134956,12,0)|0;l=(pu(j,134956,0)|0)+8|0;i[l>>0]=1;l=yw(q,d,h,v)|0;e=Kt(h)|0;if(e)do{g=k[(k[e+8>>2]|0)+12>>2]|0;if((k[g>>2]&3|0)!=1){f=Kt(g)|0;if(f)do{Pt(j,f,1)|0;f=Lt(g,f)|0}while((f|0)!=0)}else Pt(j,g,1)|0;e=Lt(h,e)|0}while((e|0)!=0);e=sw(j,k[j+48>>2]|0)|0;Cw(a,j,0);k[p+(c<<2)>>2]=j;_t(q,h)|0;if(i[137280]|0){k[t>>2]=c;k[t+4>>2]=l;k[t+8>>2]=e;FN(n,134983,t)|0}c=c+1|0}d=Lt(q,d)|0;if(!d)break a;e=k[o>>2]|0}}while(0);if(i[137280]|0){t=k[24528]|0;n=Zs(a)|0;o=_s(a)|0;s=ht(a)|0;k[w>>2]=n;k[w+4>>2]=o;k[w+8>>2]=c;k[w+12>>2]=s;FN(t,135013,w)|0}Ys(q)|0;tu(a,0,134956);tu(a,1,134968);zw(v);d=Ey(p,c<<2)|0;if((u|0)!=(x|0))vP(u)}else{d=0;c=0}k[b>>2]=c;r=y;return d|0}function uw(a){a=a|0;return sw(a,k[a+48>>2]|0)|0}function vw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;a:do if(!a)a=135146;else{d=a;b:while(1){e=d;d=d+1|0;e=i[e>>0]|0;switch(e<<24>>24){case 0:break a;case 95:continue b;default:{}}if(!(WL(e&255)|0)){a=135146;break a}}}while(0);e=uO(a)|0;d=e+25|0;if((d|0)>=129){c=Cy(d)|0;if(!c)c=0;else f=6}else f=6;if((f|0)==6){rO(c,a)|0;k[b>>2]=e}return c|0}function ww(a,b){a=a|0;b=b|0;Pt(b,a,1)|0;return}function xw(a,b){a=a|0;b=b|0;var c=0;a=(k[a+8>>2]|0)+157|0;c=i[a>>0]|0;if((b|0)>=0)i[a>>0]=b;return c|0}function yw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0;Dw(d,b);i=d+8|0;j=d+4|0;l=d+12|0;m=d+16|0;b=0;a:while(1){e=k[i>>2]|0;f=k[j>>2]|0;if((e|0)==(k[f>>2]|0)){if((f|0)==(k[d>>2]|0))break;e=k[f+8>>2]|0;k[j>>2]=e;e=k[e+4>>2]|0;k[i>>2]=e}h=e+-4|0;k[i>>2]=h;h=k[h>>2]|0;if(!h)break;b=b+1|0;e=k[l>>2]|0;if(e)Pb[e&31](h,c);e=Js(a,h)|0;if(!e)continue;while(1){g=k[e>>2]&3;f=k[((g|0)==3?e:e+32|0)+28>>2]|0;if((f|0)==(h|0))f=k[((g|0)==2?e:e+-32|0)+28>>2]|0;if(!(_b[k[m>>2]&127](f,-1)|0))Dw(d,f);e=Ks(a,e,h)|0;if(!e)continue a}}return b|0}function zw(a){a=a|0;var b=0;a=k[(k[a>>2]|0)+12>>2]|0;if(a)do{b=a;a=k[a+12>>2]|0;vP(k[b>>2]|0);vP(b)}while((a|0)!=0);return}function Aw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;g=r;r=r+16|0;f=g;b=Iu(b)|0;if(b){e=k[24528]|0;do{if(!(wO(ht(b)|0,143893,7)|0)){d=Qt(a,ht(b)|0,1)|0;qu(d,134968,16,1)|0;k[(k[d+8>>2]|0)+12>>2]=b;c=Kt(b)|0;if(c)do{h=(pu(c,134968,0)|0)+12|0;if(k[h>>2]|0){j=ht(c)|0;i=ht(b)|0;h=(pu(c,134968,0)|0)+12|0;h=ht(k[h>>2]|0)|0;k[f>>2]=j;k[f+4>>2]=i;k[f+8>>2]=h;FN(e,135060,f)|0}j=(pu(c,134968,0)|0)+12|0;k[j>>2]=d;c=Lt(b,c)|0}while((c|0)!=0)}else Aw(a,b);b=Ju(b)|0}while((b|0)!=0)}r=g;return}function Bw(a,b){a=a|0;b=b|0;var c=0;a=(k[a+8>>2]|0)+8|0;c=i[a>>0]|0;if((b|0)>=0)i[a>>0]=b;return c|0}function Cw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;a=Iu(a)|0;if(a){g=(c|0)!=0;f=(c|0)==0;do{e=(pu(a,134956,0)|0)+8|0;if(!(i[e>>0]|0)){c=Kt(a)|0;if(!c)c=0;else{d=0;do{e=Qt(b,ht(c)|0,0)|0;if(e){if(!d)d=Hu(b,ht(a)|0,1)|0;Pt(d,e,1)|0}c=Lt(a,c)|0}while((c|0)!=0);c=d}if(g&(c|0)==0)c=Hu(b,ht(a)|0,1)|0;if(c){sw(c,a)|0;xs(a,c)|0;if(f)d=(wO(ht(a)|0,143893,7)|0)==0;else d=1;Cw(a,c,d&1)}}a=Ju(a)|0}while((a|0)!=0)}return}function Dw(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;j=r;r=r+16|0;i=j+8|0;e=j;f=a+8|0;g=a+4|0;c=k[g>>2]|0;if((k[f>>2]|0)==(k[c+4>>2]|0)){c=k[c+12>>2]|0;do if(!c){d=Cy(16)|0;if(!d){Yr(1,135127,e)|0;Za(53640,1)}k[d+8>>2]=k[g>>2];k[d+12>>2]=0;c=Cy(4e6)|0;k[d>>2]=c;if(!c){Yr(1,135127,i)|0;Za(53640,1)}else{k[d+4>>2]=c+4e6;k[(k[g>>2]|0)+12>>2]=d;h=d;break}}else h=c;while(0);k[g>>2]=h;k[f>>2]=k[h>>2]}_b[k[a+16>>2]&127](b,1)|0;i=k[f>>2]|0;k[f>>2]=i+4;k[i>>2]=b;r=j;return}function Ew(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,k=0,l=0,m=0.0;m=+p[a>>3];d=~~(m+(m>=0.0?.5:-.5));m=+p[a+8>>3];a=~~(m+(m>=0.0?.5:-.5));m=+p[b>>3];j=~~(m+(m>=0.0?.5:-.5));m=+p[b+8>>3];g=~~(m+(m>=0.0?.5:-.5));k=j-d|0;h=((k|0)>-1?k:0-k|0)<<1;k=k>>31|1;l=g-a|0;i=((l|0)>-1?l:0-l|0)<<1;l=l>>31|1;dz(c,d,a);if((h|0)>(i|0)){if((j|0)!=(d|0)){f=0-h|0;e=i-(h>>1)|0;b=a;while(1){a=(e|0)>-1;b=(a?l:0)+b|0;d=d+k|0;dz(c,d,b);if((d|0)==(j|0))break;else e=e+i+(a?f:0)|0}}}else if((g|0)!=(a|0)){f=0-i|0;e=h-(i>>1)|0;b=a;while(1){a=(e|0)>-1;d=(a?k:0)+d|0;b=b+l|0;dz(c,d,b);if((b|0)==(g|0))break;else e=e+h+(a?f:0)|0}}return}function Fw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0.0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0.0,ha=0.0;ea=r;r=r+208|0;$=ea+192|0;U=ea+144|0;o=ea+136|0;da=ea+120|0;ba=ea+104|0;X=ea+96|0;Y=ea+80|0;w=ea+72|0;v=ea+32|0;V=ea+16|0;W=ea;aa=ea+176|0;n=ea+184|0;do if((a|0)<1)e=0;else{Z=d+16|0;if((k[Z>>2]|0)>>>0>=4){j=Cy(a<<5)|0;e=0;do{ca=k[b+(e<<2)>>2]|0;FB(ca);da=j+(e<<5)|0;ca=(k[ca+8>>2]|0)+16|0;k[da>>2]=k[ca>>2];k[da+4>>2]=k[ca+4>>2];k[da+8>>2]=k[ca+8>>2];k[da+12>>2]=k[ca+12>>2];k[da+16>>2]=k[ca+16>>2];k[da+20>>2]=k[ca+20>>2];k[da+24>>2]=k[ca+24>>2];k[da+28>>2]=k[ca+28>>2];e=e+1|0}while((e|0)!=(a|0));if((k[Z>>2]|0)==4){h=d+28|0;if(k[h>>2]&2){g=By(a<<2)|0;e=d+24|0;k[e>>2]=g;g=0;do{f=ss(k[b+(g<<2)>>2]|0,135277)|0;if((f|0)!=0?(k[o>>2]=n,da=(UN(f,173421,o)|0)>0,m=k[n>>2]|0,da&(m|0)>-1):0)k[(k[e>>2]|0)+(g<<2)>>2]=m;g=g+1|0}while((g|0)!=(a|0))}e=Tw(a,j,d)|0;if(k[h>>2]&2)vP(k[d+24>>2]|0)}else e=0;vP(j);break}_=k[d+20>>2]|0;t=(_|0)==0;ca=k[24528]|0;j=0;g=0;h=0;f=0;q=0;u=0;while(1){s=k[b+(u<<2)>>2]|0;FB(s);if(!t?(i[_+u>>0]|0)!=0:0){n=k[s+8>>2]|0;I=+p[n+16>>3];e=~~(I+(I>=0.0?.5:-.5));I=+p[n+24>>3];o=~~(I+(I>=0.0?.5:-.5));I=+p[n+32>>3];m=~~(I+(I>=0.0?.5:-.5));I=+p[n+40>>3];n=~~(I+(I>=0.0?.5:-.5));if(!q){j=e;g=m;h=n;f=o}else{j=(e|0)<(j|0)?e:j;g=(m|0)>(g|0)?m:g;h=(n|0)>(h|0)?n:h;f=(o|0)<(f|0)?o:f}e=q+1|0}else e=q;if((l[137280]|0)>2){T=ht(s)|0;S=k[s+8>>2]|0;ha=+p[S+16>>3];fa=+p[S+24>>3];x=+p[S+32>>3];I=+p[S+40>>3];k[v>>2]=T;p[v+8>>3]=ha;p[v+16>>3]=fa;p[v+24>>3]=x;p[v+32>>3]=I;FN(ca,135151,v)|0}u=u+1|0;if((u|0)==(a|0))break;else q=e}T=Cy(a<<5)|0;e=0;do{S=T+(e<<5)|0;R=(k[(k[b+(e<<2)>>2]|0)+8>>2]|0)+16|0;k[S>>2]=k[R>>2];k[S+4>>2]=k[R+4>>2];k[S+8>>2]=k[R+8>>2];k[S+12>>2]=k[R+12>>2];k[S+16>>2]=k[R+16>>2];k[S+20>>2]=k[R+20>>2];k[S+24>>2]=k[R+24>>2];k[S+28>>2]=k[R+28>>2];e=e+1|0}while((e|0)!=(a|0));R=d+8|0;S=Ow(a,T,k[R>>2]|0)|0;if(i[137280]|0){k[w>>2]=S;FN(ca,135179,w)|0}if((S|0)>=1){O=(_|0)!=0;if(O){N=(j+g|0)/2|0;M=(f+h|0)/2|0}else{N=0;M=0}P=aa+4|0;k[P>>2]=M;k[aa>>2]=N;Q=By(a<<4)|0;E=d+12|0;F=(c|0)==0;G=V+8|0;H=U+4|0;I=+(S|0);J=W+8|0;L=0;do{C=k[b+(L<<2)>>2]|0;D=Q+(L<<4)|0;k[Q+(L<<4)+12>>2]=L;if((k[Z>>2]|0)==3){A=(k[C+8>>2]|0)+16|0;B=k[R>>2]|0;K=ht(C)|0;k[U>>2]=k[A>>2];k[U+4>>2]=k[A+4>>2];k[U+8>>2]=k[A+8>>2];k[U+12>>2]=k[A+12>>2];k[U+16>>2]=k[A+16>>2];k[U+20>>2]=k[A+20>>2];k[U+24>>2]=k[A+24>>2];k[U+28>>2]=k[A+28>>2];k[$>>2]=k[aa>>2];k[$+4>>2]=k[aa+4>>2];Pw(U,D,S,B,$,K)}else{B=k[R>>2]|0;y=k[E>>2]|0;z=F?C:c;K=az()|0;A=C+8|0;d=k[A>>2]|0;ha=+p[d+16>>3];w=N-~~(ha+(ha>=0.0?.5:-.5))|0;ha=+p[d+24>>3];d=M-~~(ha+(ha>=0.0?.5:-.5))|0;if((k[Z>>2]|0)!=1){e=Kt(C)|0;if(e){x=+(B|0);do{tB(W,e);fa=+p[W>>3];ha=+p[J>>3];o=~~(fa+(fa>=0.0?.5:-.5))+w|0;k[U>>2]=o;q=~~(ha+(ha>=0.0?.5:-.5))+d|0;k[H>>2]=q;j=k[e+8>>2]|0;h=~~(x+(+p[j+88>>3]+ +p[j+96>>3])*.5);j=~~(x+ +p[j+80>>3]*.5);f=o-h|0;g=q-j|0;h=h+o|0;j=j+q|0;if((f|0)>-1)f=(f|0)/(S|0)|0;else f=((f+1|0)/(S|0)|0)+-1|0;if((g|0)>-1)n=(g|0)/(S|0)|0;else n=((g+1|0)/(S|0)|0)+-1|0;if((h|0)>-1)m=(h|0)/(S|0)|0;else m=((h+1|0)/(S|0)|0)+-1|0;if((j|0)>-1)j=(j|0)/(S|0)|0;else j=((j+1|0)/(S|0)|0)+-1|0;if((f|0)<=(m|0)){h=(n|0)>(j|0);while(1){if(!h){g=n;while(1){dz(K,f,g);if((g|0)<(j|0))g=g+1|0;else break}}if((f|0)<(m|0))f=f+1|0;else break}}if((o|0)>-1)f=(o|0)/(S|0)|0;else f=((o+1|0)/(S|0)|0)+-1|0;k[U>>2]=f;if((q|0)>-1)f=(q|0)/(S|0)|0;else f=((q+1|0)/(S|0)|0)+-1|0;k[H>>2]=f;f=Es(z,e)|0;if(f)do{k[$>>2]=k[U>>2];k[$+4>>2]=k[U+4>>2];Qw(f,$,K,w,d,S,y);f=Gs(z,f)|0}while((f|0)!=0);e=Lt(C,e)|0}while((e|0)!=0)}}else{v=Cy((Zs(C)|0)<<2)|0;e=Kt(C)|0;if(e){f=0;while(1){u=e+8|0;k[v+(f<<2)>>2]=k[(k[u>>2]|0)+112>>2];k[(k[u>>2]|0)+112>>2]=0;e=Lt(C,e)|0;if(!e)break;else f=f+1|0}}e=k[A>>2]|0;if((k[e+180>>2]|0)>=1){q=w-B|0;s=d-B|0;t=w+B|0;u=d+B|0;o=1;while(1){n=k[(k[e+184>>2]|0)+(o<<2)>>2]|0;j=k[n+8>>2]|0;ha=+p[j+16>>3];f=~~(ha+(ha>=0.0?.5:-.5));ha=+p[j+24>>3];g=~~(ha+(ha>=0.0?.5:-.5));ha=+p[j+32>>3];h=~~(ha+(ha>=0.0?.5:-.5));ha=+p[j+40>>3];j=~~(ha+(ha>=0.0?.5:-.5));if((h|0)>(f|0)&(j|0)>(g|0)){e=f+q|0;f=g+s|0;g=t+h|0;h=u+j|0;if((e|0)>-1)e=(e|0)/(S|0)|0;else e=((e+1|0)/(S|0)|0)+-1|0;if((f|0)>-1)m=(f|0)/(S|0)|0;else m=((f+1|0)/(S|0)|0)+-1|0;if((g|0)>-1)j=(g|0)/(S|0)|0;else j=((g+1|0)/(S|0)|0)+-1|0;if((h|0)>-1)h=(h|0)/(S|0)|0;else h=((h+1|0)/(S|0)|0)+-1|0;if((e|0)<=(j|0)){g=(m|0)>(h|0);while(1){if(!g){f=m;while(1){dz(K,e,f);if((f|0)<(h|0))f=f+1|0;else break}}if((e|0)<(j|0))e=e+1|0;else break}}e=Kt(n)|0;if(e)do{k[(k[e+8>>2]|0)+212>>2]=n;e=Lt(n,e)|0}while((e|0)!=0);e=k[A>>2]|0}if((o|0)<(k[e+180>>2]|0))o=o+1|0;else break}}e=Kt(C)|0;if(e){x=+(B|0);do{tB(V,e);fa=+p[V>>3];ha=+p[G>>3];o=~~(fa+(fa>=0.0?.5:-.5))+w|0;k[U>>2]=o;q=~~(ha+(ha>=0.0?.5:-.5))+d|0;k[H>>2]=q;g=e+8|0;f=k[g>>2]|0;do if(!(k[f+212>>2]|0)){h=~~(x+(+p[f+88>>3]+ +p[f+96>>3])*.5);j=~~(x+ +p[f+80>>3]*.5);f=o-h|0;g=q-j|0;h=h+o|0;j=j+q|0;if((f|0)>-1)f=(f|0)/(S|0)|0;else f=((f+1|0)/(S|0)|0)+-1|0;if((g|0)>-1)n=(g|0)/(S|0)|0;else n=((g+1|0)/(S|0)|0)+-1|0;if((h|0)>-1)m=(h|0)/(S|0)|0;else m=((h+1|0)/(S|0)|0)+-1|0;if((j|0)>-1)j=(j|0)/(S|0)|0;else j=((j+1|0)/(S|0)|0)+-1|0;if((f|0)<=(m|0)){h=(n|0)>(j|0);while(1){if(!h){g=n;while(1){dz(K,f,g);if((g|0)<(j|0))g=g+1|0;else break}}if((f|0)<(m|0))f=f+1|0;else break}}if((o|0)>-1)f=(o|0)/(S|0)|0;else f=((o+1|0)/(S|0)|0)+-1|0;k[U>>2]=f;if((q|0)>-1)f=(q|0)/(S|0)|0;else f=((q+1|0)/(S|0)|0)+-1|0;k[H>>2]=f;f=Es(z,e)|0;if(!f)break;do{k[$>>2]=k[U>>2];k[$+4>>2]=k[U+4>>2];Qw(f,$,K,w,d,S,y);f=Gs(z,f)|0}while((f|0)!=0)}else{if((o|0)>-1)f=(o|0)/(S|0)|0;else f=((o+1|0)/(S|0)|0)+-1|0;k[U>>2]=f;if((q|0)>-1)f=(q|0)/(S|0)|0;else f=((q+1|0)/(S|0)|0)+-1|0;k[H>>2]=f;f=Es(z,e)|0;if(!f)break;do{if((k[(k[g>>2]|0)+212>>2]|0)!=(k[(k[(k[((k[f>>2]&3|0)==2?f:f+-32|0)+28>>2]|0)+8>>2]|0)+212>>2]|0)){k[$>>2]=k[U>>2];k[$+4>>2]=k[U+4>>2];Qw(f,$,K,w,d,S,y)}f=Gs(z,f)|0}while((f|0)!=0)}while(0);e=Lt(C,e)|0}while((e|0)!=0)}e=Kt(C)|0;if(e){f=0;while(1){k[(k[e+8>>2]|0)+112>>2]=k[v+(f<<2)>>2];e=Lt(C,e)|0;if(!e)break;else f=f+1|0}}vP(v)}f=hz(K)|0;g=Q+(L<<4)+4|0;k[g>>2]=f;f=gz(K)|0;h=Q+(L<<4)+8|0;k[h>>2]=f;f=k[A>>2]|0;ha=+(B<<1|0);e=~~+ga(+((ha+(+p[f+32>>3]-+p[f+16>>3]))/I));f=~~+ga(+((ha+(+p[f+40>>3]-+p[f+24>>3]))/I));k[D>>2]=f+e;if((l[137280]|0)>2?(C=ht(C)|0,D=k[h>>2]|0,k[Y>>2]=C,k[Y+4>>2]=D,k[Y+8>>2]=e,k[Y+12>>2]=f,FN(ca,135195,Y)|0,(k[h>>2]|0)>0):0){e=0;do{C=k[g>>2]|0;D=k[C+(e<<3)+4>>2]|0;k[X>>2]=k[C+(e<<3)>>2];k[X+4>>2]=D;FN(ca,135222,X)|0;e=e+1|0}while((e|0)<(k[h>>2]|0))}bz(K)}L=L+1|0}while((L|0)!=(a|0));o=By(a<<2)|0;e=0;do{k[o+(e<<2)>>2]=Q+(e<<4);e=e+1|0}while((e|0)!=(a|0));dO(o,a,4,90);q=az()|0;e=By(a<<3)|0;if(O){n=0;do{if(i[_+n>>0]|0){h=k[o+(n<<2)>>2]|0;m=k[h+12>>2]|0;b=k[P>>2]|0;f=k[h+4>>2]|0;h=k[h+8>>2]|0;j=e+(m<<3)|0;k[j>>2]=0-(k[aa>>2]|0);m=e+(m<<3)+4|0;k[m>>2]=0-b;if((h|0)>0){g=0;while(1){k[$>>2]=k[f>>2];k[$+4>>2]=k[f+4>>2];cz(q,$);g=g+1|0;if((g|0)==(h|0))break;else f=f+8|0}}if((l[137280]|0)>1){Z=k[j>>2]|0;b=k[m>>2]|0;k[ba>>2]=h;k[ba+4>>2]=Z;k[ba+8>>2]=b;FN(ca,135236,ba)|0}}n=n+1|0}while((n|0)!=(a|0));f=0;do{if(!(i[_+f>>0]|0)){ba=k[o+(f<<2)>>2]|0;Sw(f,ba,q,e+(k[ba+12>>2]<<3)|0,S,k[R>>2]|0,T)}f=f+1|0}while((f|0)!=(a|0))}else{f=0;do{ba=k[o+(f<<2)>>2]|0;Sw(f,ba,q,e+(k[ba+12>>2]<<3)|0,S,k[R>>2]|0,T);f=f+1|0}while((f|0)!=(a|0))}vP(o);f=0;do{vP(k[Q+(f<<4)+4>>2]|0);f=f+1|0}while((f|0)!=(a|0));vP(Q);bz(q);vP(T);if((l[137280]|0)>1){f=0;do{aa=k[e+(f<<3)>>2]|0;ba=k[e+(f<<3)+4>>2]|0;k[da>>2]=f;k[da+4>>2]=aa;k[da+8>>2]=ba;FN(ca,135262,da)|0;f=f+1|0}while((f|0)!=(a|0))}}else e=0}while(0);r=ea;return e|0}function Gw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,m=0,n=0,o=0,p=0;o=r;r=r+80|0;g=o+64|0;e=o+24|0;n=o+8|0;d=o;f=o+56|0;a:do if((a|0)<1)c=0;else{switch(k[c+16>>2]|0){case 4:{c=Tw(a,b,c)|0;break a}case 3:break;default:{c=0;break a}}j=c+8|0;m=Ow(a,b,k[j>>2]|0)|0;if(i[137280]|0){h=k[24528]|0;k[d>>2]=m;FN(h,135179,d)|0}if((m|0)>=1){k[f+4>>2]=0;k[f>>2]=0;h=By(a<<4)|0;c=0;do{k[h+(c<<4)+12>>2]=c;p=b+(c<<5)|0;d=k[j>>2]|0;k[e>>2]=k[p>>2];k[e+4>>2]=k[p+4>>2];k[e+8>>2]=k[p+8>>2];k[e+12>>2]=k[p+12>>2];k[e+16>>2]=k[p+16>>2];k[e+20>>2]=k[p+20>>2];k[e+24>>2]=k[p+24>>2];k[e+28>>2]=k[p+28>>2];k[g>>2]=k[f>>2];k[g+4>>2]=k[f+4>>2];Pw(e,h+(c<<4)|0,m,d,g,176676);c=c+1|0}while((c|0)!=(a|0));e=By(a<<2)|0;c=0;do{k[e+(c<<2)>>2]=h+(c<<4);c=c+1|0}while((c|0)!=(a|0));dO(e,a,4,90);f=az()|0;c=By(a<<3)|0;d=0;do{p=k[e+(d<<2)>>2]|0;Sw(d,p,f,c+(k[p+12>>2]<<3)|0,m,k[j>>2]|0,b);d=d+1|0}while((d|0)!=(a|0));vP(e);d=0;do{vP(k[h+(d<<4)+4>>2]|0);d=d+1|0}while((d|0)!=(a|0));vP(h);bz(f);if((l[137280]|0)>=2){d=k[24528]|0;e=0;do{b=k[c+(e<<3)>>2]|0;p=k[c+(e<<3)+4>>2]|0;k[n>>2]=e;k[n+4>>2]=b;k[n+8>>2]=p;FN(d,135262,n)|0;e=e+1|0}while((e|0)!=(a|0))}}else c=0}while(0);r=o;return c|0}function Hw(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;if((a|0)<1)e=(a|0)>-1?a:0-a|0;else{z=(d|0)==0;u=(e|0)==0;y=0;do{v=k[b+(y<<2)>>2]|0;o=z?v:d;w=k[c+(y<<3)>>2]|0;x=k[c+(y<<3)+4>>2]|0;q=+(w|0);r=q/72.0;s=+(x|0);t=s/72.0;e=Kt(v)|0;if(e)do{f=k[e+8>>2]|0;n=k[f+132>>2]|0;p[n>>3]=r+ +p[n>>3];n=n+8|0;p[n>>3]=t+ +p[n>>3];n=f+16|0;p[n>>3]=q+ +p[n>>3];n=f+24|0;p[n>>3]=s+ +p[n>>3];f=k[f+108>>2]|0;if(f){n=f+56|0;p[n>>3]=q+ +p[n>>3];n=f+64|0;p[n>>3]=s+ +p[n>>3]}if(!u?(A=Es(o,e)|0,(A|0)!=0):0){n=A;do{g=k[n+8>>2]|0;f=k[g+96>>2]|0;if(f){m=f+56|0;p[m>>3]=q+ +p[m>>3];m=f+64|0;p[m>>3]=s+ +p[m>>3]}f=k[g+108>>2]|0;if(f){m=f+56|0;p[m>>3]=q+ +p[m>>3];m=f+64|0;p[m>>3]=s+ +p[m>>3]}f=k[g+100>>2]|0;if(f){m=f+56|0;p[m>>3]=q+ +p[m>>3];m=f+64|0;p[m>>3]=s+ +p[m>>3]}f=k[g+104>>2]|0;if(f){m=f+56|0;p[m>>3]=q+ +p[m>>3];m=f+64|0;p[m>>3]=s+ +p[m>>3]}f=k[g+8>>2]|0;if((f|0)!=0?(B=k[f+4>>2]|0,(B|0)>0):0){f=k[f>>2]|0;l=0;do{g=k[f+(l*48|0)>>2]|0;h=k[f+(l*48|0)+4>>2]|0;i=k[f+(l*48|0)+8>>2]|0;j=k[f+(l*48|0)+12>>2]|0;if((h|0)>0){m=0;do{C=g+(m<<4)|0;p[C>>3]=q+ +p[C>>3];C=g+(m<<4)+8|0;p[C>>3]=s+ +p[C>>3];m=m+1|0}while((m|0)!=(h|0))}if(i){C=f+(l*48|0)+16|0;p[C>>3]=q+ +p[C>>3];C=f+(l*48|0)+24|0;p[C>>3]=s+ +p[C>>3]}if(j){C=f+(l*48|0)+32|0;p[C>>3]=q+ +p[C>>3];C=f+(l*48|0)+40|0;p[C>>3]=s+ +p[C>>3]}l=l+1|0}while((l|0)!=(B|0))}n=Gs(o,n)|0}while((n|0)!=0)}e=Lt(v,e)|0}while((e|0)!=0);Uw(v,w,x);y=y+1|0}while((y|0)!=(a|0));e=0}return e|0}function Iw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=Fw(a,b,c,d)|0;if(!e)e=1;else{c=Hw(a,b,e,c,k[d+12>>2]|0)|0;vP(e);e=c}return e|0}function Jw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,g=0.0,h=0.0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,r=0.0,s=0;q=Iw(a,b,c,d)|0;if(!q){FB(c);l=k[c+8>>2]|0;m=l+16|0;f=+p[m>>3];n=l+24|0;g=+p[n>>3];o=l+32|0;e=+p[o>>3];l=l+40|0;h=+p[l>>3];if((a|0)>0){j=0;do{d=k[(k[b+(j<<2)>>2]|0)+8>>2]|0;i=k[d+180>>2]|0;if((i|0)>=1){c=k[d+184>>2]|0;d=1;while(1){s=k[(k[c+(d<<2)>>2]|0)+8>>2]|0;r=+p[s+16>>3];f=f<r?f:r;r=+p[s+24>>3];g=g<r?g:r;r=+p[s+32>>3];e=e>r?e:r;r=+p[s+40>>3];h=h>r?h:r;if((d|0)<(i|0))d=d+1|0;else break}}j=j+1|0}while((j|0)!=(a|0))}p[m>>3]=f;p[n>>3]=g;p[o>>3]=e;p[l>>3]=h}return q|0}function Kw(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;f=r;r=r+16|0;e=f;if(!d)Wa(135283,135289,1400,135296);c=Nw(a,c,c)|0;k[d+8>>2]=c;if(i[137280]|0){g=k[24528]|0;k[e>>2]=c;FN(g,135308,e)|0}k[d+12>>2]=0;k[d+20>>2]=0;Lw(ss(a,135321)|0,b,d)|0;r=f;return k[d+16>>2]|0}function Lw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,q=0,s=0,t=0,u=0,v=0;v=r;r=r+64|0;s=v+40|0;q=v+32|0;u=v+24|0;t=v+16|0;g=v+8|0;j=v;f=v+48|0;h=v+44|0;if(!c)Wa(135283,135289,1292,135330);m=c+28|0;k[m>>2]=0;n=c+16|0;k[n>>2]=b;l=c+4|0;k[l>>2]=0;k[c+24>>2]=0;a:do if((a|0)!=0?(e=i[a>>0]|0,e<<24>>24!=0):0)switch(e<<24>>24|0){case 97:{if(wO(a,135348,5)|0){if(wO(a,135354,6)|0)break a;k[n>>2]=5;k[g>>2]=f;j=(UN(a+5|0,135361,g)|0)>0;d=+o[f>>2];if(j&d>0.0){o[c>>2]=d;break a}else{o[c>>2]=1.0;break a}}k[n>>2]=4;b=a+5|0;b:do if((i[b>>0]|0)==95){b=a+6|0;e=i[b>>0]|0;if(e<<24>>24){f=0;while(1){switch(e<<24>>24|0){case 99:{f=f|1;k[m>>2]=f;break}case 105:{f=f|64;k[m>>2]=f;break}case 117:{f=f|2;k[m>>2]=f;break}case 116:{f=f|16;k[m>>2]=f;break}case 98:{f=f|32;k[m>>2]=f;break}case 108:{f=f|4;k[m>>2]=f;break}case 114:{f=f|8;k[m>>2]=f;break}default:break b}b=b+1|0;e=i[b>>0]|0;if(!(e<<24>>24))break b}}}while(0);k[j>>2]=h;j=(UN(b,173421,j)|0)>0;b=k[h>>2]|0;if(!(j&(b|0)>0))break a;k[l>>2]=b;break a}case 99:{if(e<<24>>24!=99)break a;if(qO(a,143893)|0)break a;k[n>>2]=1;break a}case 103:{if(e<<24>>24!=103)break a;if(qO(a,147425)|0)break a;k[n>>2]=3;break a}case 110:{if(e<<24>>24!=110)break a;if(qO(a,147381)|0)break a;k[n>>2]=2;break a}default:break a}while(0);if(i[137280]|0){b=k[24528]|0;QN(135364,11,1,b)|0;switch(k[n>>2]|0){case 1:{e=143893;break}case 2:{e=147381;break}case 3:{e=147425;break}case 4:{e=135348;break}case 5:{e=135354;break}default:e=135376}k[t>>2]=e;FN(b,135386,t)|0;if((k[n>>2]|0)==5){p[u>>3]=+o[c>>2];FN(b,135399,u)|0}k[q>>2]=k[l>>2];FN(b,135412,q)|0;k[s>>2]=k[m>>2];FN(b,135425,s)|0}r=v;return k[n>>2]|0}function Mw(a,b,c){a=a|0;b=b|0;c=c|0;return Lw(ss(a,135321)|0,b,c)|0}function Nw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;g=r;r=r+16|0;f=g;e=g+4|0;d=ss(a,135438)|0;a:do if(d){k[f>>2]=e;f=(UN(d,173421,f)|0)==1;a=k[e>>2]|0;if(!(f&(a|0)>-1)){switch(i[d>>0]|0){case 84:case 116:break;default:{a=b;break a}}a=c}}else a=b;while(0);r=g;return a|0}function Ow(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,g=0.0,h=0.0,i=0.0,j=0,m=0.0,n=0,o=0,q=0,s=0;s=r;r=r+96|0;o=s+80|0;q=s+48|0;n=s+8|0;j=s;m=+((a*100|0)+-1|0);if((a|0)>0){e=+(c<<1|0);d=0.0;h=0.0;c=0;do{g=e+(+p[b+(c<<5)+16>>3]-+p[b+(c<<5)>>3]);i=e+(+p[b+(c<<5)+24>>3]-+p[b+(c<<5)+8>>3]);d=d-(g+i);h=h-g*i;c=c+1|0}while((c|0)!=(a|0));i=d}else{i=0.0;h=0.0}g=i*i-m*4.0*h;if(!(g<0.0)){d=+X(+g);f=m*2.0;e=(d-i)/f;f=(-i-d)/f;c=~~e;c=(c|0)==0?1:c;if((l[137280]|0)>2){j=k[24528]|0;QN(135565,27,1,j)|0;p[n>>3]=m;p[n+8>>3]=i;p[n+16>>3]=h;p[n+24>>3]=g;p[n+32>>3]=d;FN(j,135593,n)|0;k[q>>2]=c;p[q+8>>3]=e;k[q+16>>2]=~~f;p[q+24>>3]=f;FN(j,135619,q)|0;p[o>>3]=h+(i*e+e*(m*e));p[o+8>>3]=h+(i*f+f*(m*f));FN(j,135641,o)|0}}else{p[j>>3]=g;Yr(1,135538,j)|0;c=-1}r=s;return c|0}function Pw(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,m=0.0,n=0.0,o=0.0,q=0.0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0.0;w=r;r=r+32|0;v=w+16|0;t=w;m=+p[a>>3];q=+p[a+8>>3];o=+p[a+16>>3];n=+p[a+24>>3];s=az()|0;g=k[e>>2]|0;a=g-d|0;h=k[e+4>>2]|0;e=h-d|0;g=d-~~(m+(m>=0.0?.5:-.5))+g+~~(o+(o>=0.0?.5:-.5))|0;h=d-~~(q+(q>=0.0?.5:-.5))+h+~~(n+(n>=0.0?.5:-.5))|0;if((a|0)>-1)a=(a|0)/(c|0)|0;else a=((a+1|0)/(c|0)|0)+-1|0;if((e|0)>-1)j=(e|0)/(c|0)|0;else j=((e+1|0)/(c|0)|0)+-1|0;if((g|0)>-1)i=(g|0)/(c|0)|0;else i=((g+1|0)/(c|0)|0)+-1|0;if((h|0)>-1)h=(h|0)/(c|0)|0;else h=((h+1|0)/(c|0)|0)+-1|0;if((a|0)<=(i|0)){g=(j|0)>(h|0);while(1){if(!g){e=j;while(1){dz(s,a,e);if((e|0)<(h|0))e=e+1|0;else break}}if((a|0)<(i|0))a=a+1|0;else break}}g=hz(s)|0;h=b+4|0;k[h>>2]=g;g=gz(s)|0;i=b+8|0;k[i>>2]=g;y=+(d<<1|0);x=+(c|0);e=~~+ga(+((y+(o-m))/x));a=~~+ga(+((y+(n-q))/x));k[b>>2]=a+e;if((l[137280]|0)>2?(u=k[24528]|0,k[t>>2]=f,k[t+4>>2]=g,k[t+8>>2]=e,k[t+12>>2]=a,FN(u,135195,t)|0,(k[i>>2]|0)>0):0){a=0;do{f=k[h>>2]|0;t=k[f+(a<<3)+4>>2]|0;k[v>>2]=k[f+(a<<3)>>2];k[v+4>>2]=t;FN(u,135222,v)|0;a=a+1|0}while((a|0)<(k[i>>2]|0))}bz(s);r=w;return}function Qw(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0.0,i=0.0,j=0,l=0,m=0.0,n=0.0,o=0.0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;z=r;r=r+112|0;w=z+96|0;y=z+80|0;t=z+16|0;u=z;x=z+64|0;v=z+48|0;l=z+32|0;p[x>>3]=+(k[b>>2]|0);q=x+8|0;p[q>>3]=+(k[b+4>>2]|0);if((g|0)!=0?(s=a+8|0,j=k[(k[s>>2]|0)+8>>2]|0,(j|0)!=0):0){if((k[j+4>>2]|0)>0){o=+(d|0);n=+(e|0);m=+(f|0);b=v+8|0;a=0;do{e=k[j>>2]|0;l=k[e+(a*48|0)>>2]|0;g=k[e+(a*48|0)+4>>2]|0;f=k[e+(a*48|0)+8>>2]|0;d=k[e+(a*48|0)+12>>2]|0;j=e+(a*48|0)+16|0;k[t>>2]=k[j>>2];k[t+4>>2]=k[j+4>>2];k[t+8>>2]=k[j+8>>2];k[t+12>>2]=k[j+12>>2];e=e+(a*48|0)+32|0;k[u>>2]=k[e>>2];k[u+4>>2]=k[e+4>>2];k[u+8>>2]=k[e+8>>2];k[u+12>>2]=k[e+12>>2];if(!f){k[x>>2]=k[l>>2];k[x+4>>2]=k[l+4>>2];k[x+8>>2]=k[l+8>>2];k[x+12>>2]=k[l+12>>2];j=l+16|0;k[v>>2]=k[j>>2];k[v+4>>2]=k[j+4>>2];k[v+8>>2]=k[j+8>>2];k[v+12>>2]=k[j+12>>2];j=2}else{k[x>>2]=k[t>>2];k[x+4>>2]=k[t+4>>2];k[x+8>>2]=k[t+8>>2];k[x+12>>2]=k[t+12>>2];k[v>>2]=k[l>>2];k[v+4>>2]=k[l+4>>2];k[v+8>>2]=k[l+8>>2];k[v+12>>2]=k[l+12>>2];j=1}h=o+ +p[x>>3];p[x>>3]=h;i=n+ +p[q>>3];p[q>>3]=i;if(!(h>=0.0))h=(h+1.0)/m+-1.0;else h=h/m;p[x>>3]=h;if(!(i>=0.0))h=(i+1.0)/m+-1.0;else h=i/m;p[q>>3]=h;h=o+ +p[v>>3];p[v>>3]=h;i=n+ +p[b>>3];p[b>>3]=i;if(!(h>=0.0))h=(h+1.0)/m+-1.0;else h=h/m;p[v>>3]=h;if(!(i>=0.0))h=(i+1.0)/m+-1.0;else h=i/m;p[b>>3]=h;k[y>>2]=k[x>>2];k[y+4>>2]=k[x+4>>2];k[y+8>>2]=k[x+8>>2];k[y+12>>2]=k[x+12>>2];k[w>>2]=k[v>>2];k[w+4>>2]=k[v+4>>2];k[w+8>>2]=k[v+8>>2];k[w+12>>2]=k[v+12>>2];Ew(y,w,c);if((j|0)<(g|0))do{k[x>>2]=k[v>>2];k[x+4>>2]=k[v+4>>2];k[x+8>>2]=k[v+8>>2];k[x+12>>2]=k[v+12>>2];f=l+(j<<4)|0;k[v>>2]=k[f>>2];k[v+4>>2]=k[f+4>>2];k[v+8>>2]=k[f+8>>2];k[v+12>>2]=k[f+12>>2];h=o+ +p[v>>3];p[v>>3]=h;i=n+ +p[b>>3];p[b>>3]=i;if(!(h>=0.0))h=(h+1.0)/m+-1.0;else h=h/m;p[v>>3]=h;if(!(i>=0.0))h=(i+1.0)/m+-1.0;else h=i/m;p[b>>3]=h;k[y>>2]=k[x>>2];k[y+4>>2]=k[x+4>>2];k[y+8>>2]=k[x+8>>2];k[y+12>>2]=k[x+12>>2];k[w>>2]=k[v>>2];k[w+4>>2]=k[v+4>>2];k[w+8>>2]=k[v+8>>2];k[w+12>>2]=k[v+12>>2];Ew(y,w,c);j=j+1|0}while((j|0)!=(g|0));if(d){k[x>>2]=k[v>>2];k[x+4>>2]=k[v+4>>2];k[x+8>>2]=k[v+8>>2];k[x+12>>2]=k[v+12>>2];k[v>>2]=k[u>>2];k[v+4>>2]=k[u+4>>2];k[v+8>>2]=k[u+8>>2];k[v+12>>2]=k[u+12>>2];h=o+ +p[v>>3];p[v>>3]=h;i=n+ +p[b>>3];p[b>>3]=i;if(!(h>=0.0))h=(h+1.0)/m+-1.0;else h=h/m;p[v>>3]=h;if(!(i>=0.0))h=(i+1.0)/m+-1.0;else h=i/m;p[b>>3]=h;k[y>>2]=k[x>>2];k[y+4>>2]=k[x+4>>2];k[y+8>>2]=k[x+8>>2];k[y+12>>2]=k[x+12>>2];k[w>>2]=k[v>>2];k[w+4>>2]=k[v+4>>2];k[w+8>>2]=k[v+8>>2];k[w+12>>2]=k[v+12>>2];Ew(y,w,c)}a=a+1|0;j=k[(k[s>>2]|0)+8>>2]|0}while((a|0)<(k[j+4>>2]|0))}}else{tB(l,k[((k[a>>2]&3|0)==2?a:a+-32|0)+28>>2]|0);k[v>>2]=k[l>>2];k[v+4>>2]=k[l+4>>2];k[v+8>>2]=k[l+8>>2];k[v+12>>2]=k[l+12>>2];h=+(d|0)+ +p[v>>3];p[v>>3]=h;j=v+8|0;i=+(e|0)+ +p[j>>3];p[j>>3]=i;if(!(h>=0.0))h=(h+1.0)/+(f|0)+-1.0;else h=h/+(f|0);p[v>>3]=h;if(!(i>=0.0))h=(i+1.0)/+(f|0)+-1.0;else h=i/+(f|0);p[j>>3]=h;k[y>>2]=k[x>>2];k[y+4>>2]=k[x+4>>2];k[y+8>>2]=k[x+8>>2];k[y+12>>2]=k[x+12>>2];k[w>>2]=k[v>>2];k[w+4>>2]=k[v+4>>2];k[w+8>>2]=k[v+8>>2];k[w+12>>2]=k[v+12>>2];Ew(y,w,c)}r=z;return}function Rw(a,b){a=a|0;b=b|0;return (k[k[b>>2]>>2]|0)-(k[k[a>>2]>>2]|0)|0}function Sw(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0.0,i=0.0,j=0.0,l=0.0,m=0,n=0,o=0,q=0.0,r=0.0;o=k[b+12>>2]|0;h=+p[g+(o<<5)>>3];i=+p[g+(o<<5)+8>>3];j=+p[g+(o<<5)+16>>3];l=+p[g+(o<<5)+24>>3];if(!((a|0)==0?(r=+(f<<1|0),q=+(e|0),(Xw((~~+ga(+((r+(j-h))/q))|0)/-2|0,(~~+ga(+((r+(l-i))/q))|0)/-2|0,b,c,d,e,g)|0)!=0):0))m=3;a:do if((m|0)==3?(Xw(0,0,b,c,d,e,g)|0)==0:0)if((~~+ga(+(j-h))|0)<(~~+ga(+(l-i))|0)){o=1;while(1){n=0-o|0;f=0;while(1){if(Xw(n,f,b,c,d,e,g)|0)break a;a=f+-1|0;if((a|0)>(n|0))f=a;else{m=f;break}}if((o|0)>(n|0)){f=n;do{if(Xw(f,a,b,c,d,e,g)|0)break a;f=f+1|0}while((f|0)<(o|0))}else f=n;if((m|0)<=(o|0))do{if(Xw(f,a,b,c,d,e,g)|0)break a;a=a+1|0}while((a|0)<(o|0));if((f|0)>(n|0))do{if(Xw(f,a,b,c,d,e,g)|0)break a;f=f+-1|0}while((f|0)>(n|0));if((a|0)>0)while(1){if(Xw(f,a,b,c,d,e,g)|0)break a;if((a|0)>1)a=a+-1|0;else break}o=o+1|0}}else{o=1;while(1){n=0-o|0;f=0;while(1){if(Xw(f,n,b,c,d,e,g)|0)break a;a=f+1|0;if((a|0)<(o|0))f=a;else{m=f;break}}if((o|0)>(n|0)){f=n;do{if(Xw(a,f,b,c,d,e,g)|0)break a;f=f+1|0}while((f|0)<(o|0))}else f=n;if((m|0)>=(n|0))do{if(Xw(a,f,b,c,d,e,g)|0)break a;a=a+-1|0}while((a|0)>(n|0));if((f|0)>(n|0))do{if(Xw(a,f,b,c,d,e,g)|0)break a;f=f+-1|0}while((f|0)>(n|0));if((a|0)<0)while(1){if(Xw(a,f,b,c,d,e,g)|0)break a;if((a|0)<-1)a=a+1|0;else break}o=o+1|0}}while(0);return}function Tw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0.0,h=0.0,j=0,l=0.0,m=0.0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0;B=r;r=r+16|0;f=B;A=By(a<<3)|0;e=k[c+4>>2]|0;q=c+28|0;d=(e|0)>0;do if(!(k[q>>2]&1))if(d){z=e;e=(a+-1+e|0)/(e|0)|0;o=1;break}else{e=~~+ga(+(+X(+(+(a|0)))));z=e;e=(a+-1+e|0)/(e|0)|0;o=1;break}else if(d){z=(a+-1+e|0)/(e|0)|0;o=0;break}else{e=~~+ga(+(+X(+(+(a|0)))));z=(a+-1+e|0)/(e|0)|0;o=0;break}while(0);if(i[137280]|0){y=k[24528]|0;k[f>>2]=(o|0)!=0?135443:135453;k[f+4>>2]=e;k[f+8>>2]=z;FN(y,135466,f)|0}w=By((z<<3)+8|0)|0;x=By((e<<3)+8|0)|0;y=By(a*24|0)|0;n=(a|0)>0;if(n){g=+((k[c+8>>2]|0)>>>0);d=0;f=y;while(1){m=+p[b+(d<<5)+8>>3];l=+p[b+(d<<5)+24>>3];p[f>>3]=+p[b+(d<<5)+16>>3]-+p[b+(d<<5)>>3]+g;p[f+8>>3]=l-m+g;k[f+16>>2]=d;d=d+1|0;if((d|0)==(a|0))break;else f=f+24|0}f=By(a<<2)|0;if(n){d=0;do{k[f+(d<<2)>>2]=y+(d*24|0);d=d+1|0}while((d|0)!=(a|0));v=f;u=f}else{v=f;u=f}}else{u=By(a<<2)|0;v=u}d=k[c+24>>2]|0;if(!d){if(!(k[q>>2]&64))dO(v,a,4,92)}else{k[13449]=d;dO(v,a,4,91)}if(n){c=(o|0)==0;d=0;j=0;f=0;do{s=k[u+(j<<2)>>2]|0;t=w+(d<<3)|0;m=+p[t>>3];l=+p[s>>3];p[t>>3]=m>l?m:l;t=x+(f<<3)|0;l=+p[t>>3];m=+p[s+8>>3];p[t>>3]=l>m?l:m;if(c){f=f+1|0;t=(f|0)==(e|0);d=(t&1)+d|0;f=t?0:f}else{d=d+1|0;t=(d|0)==(z|0);d=t?0:d;f=(t&1)+f|0}j=j+1|0}while((j|0)!=(a|0))}if((z|0)>=0){d=0;h=0.0;while(1){t=w+(d<<3)|0;g=+p[t>>3];p[t>>3]=h;if((d|0)==(z|0))break;else{d=d+1|0;h=h+g}}}if((e|0)>0){g=0.0;d=e;do{t=d;d=d+-1|0;m=+p[x+(d<<3)>>3];p[x+(t<<3)>>3]=g;g=g+m}while((t|0)>1)}else g=0.0;p[x>>3]=g;if(n){t=(o|0)==0;q=k[q>>2]|0;j=(q&4|0)==0;n=(q&8|0)==0;o=(q&16|0)==0;q=(q&32|0)==0;d=0;s=0;f=0;do{c=k[(k[u+(s<<2)>>2]|0)+16>>2]|0;g=+p[b+(c<<5)>>3];h=+p[b+(c<<5)+8>>3];l=+p[b+(c<<5)+16>>3];m=+p[b+(c<<5)+24>>3];do if(j)if(n){k[A+(c<<3)>>2]=~~((+p[w+(d<<3)>>3]+ +p[w+(d+1<<3)>>3]-l-g)*.5);break}else{k[A+(c<<3)>>2]=~~(+p[w+(d+1<<3)>>3]-(l-g));break}else k[A+(c<<3)>>2]=~~+p[w+(d<<3)>>3];while(0);do if(o)if(q){k[A+(c<<3)+4>>2]=~~((+p[x+(f<<3)>>3]+ +p[x+(f+1<<3)>>3]-m-h)*.5);break}else{k[A+(c<<3)+4>>2]=~~+p[x+(f+1<<3)>>3];break}else k[A+(c<<3)+4>>2]=~~(+p[x+(f<<3)>>3]-(m-h));while(0);if(t){f=f+1|0;c=(f|0)==(e|0);d=(c&1)+d|0;f=c?0:f}else{d=d+1|0;c=(d|0)==(z|0);d=c?0:d;f=(c&1)+f|0}s=s+1|0}while((s|0)!=(a|0))}vP(y);vP(v);vP(w);vP(x);r=B;return A|0}function Uw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,g=0,h=0.0,i=0.0,j=0,l=0.0,m=0;g=a+8|0;a=k[g>>2]|0;m=a+16|0;j=a+24|0;d=a+32|0;a=a+40|0;e=+(b|0);i=e+ +p[d>>3];f=+(c|0);l=f+ +p[j>>3];h=f+ +p[a>>3];p[m>>3]=e+ +p[m>>3];p[j>>3]=l;p[d>>3]=i;p[a>>3]=h;a=k[g>>2]|0;d=k[a+12>>2]|0;if(d){m=d+56|0;p[m>>3]=e+ +p[m>>3];m=d+64|0;p[m>>3]=f+ +p[m>>3]}if((k[a+180>>2]|0)>=1){d=1;while(1){Uw(k[(k[a+184>>2]|0)+(d<<2)>>2]|0,b,c);a=k[g>>2]|0;if((d|0)>=(k[a+180>>2]|0))break;else d=d+1|0}}return}function Vw(a,b){a=a|0;b=b|0;var c=0;c=k[13449]|0;a=k[c+(k[(k[a>>2]|0)+16>>2]<<2)>>2]|0;b=k[c+(k[(k[b>>2]|0)+16>>2]<<2)>>2]|0;return ((a|0)>(b|0)?1:((a|0)<(b|0))<<31>>31)|0}function Ww(a,b){a=a|0;b=b|0;var c=0.0,d=0.0;a=k[a>>2]|0;b=k[b>>2]|0;d=+p[a+8>>3]+ +p[a>>3];c=+p[b+8>>3]+ +p[b>>3];return (d<c?1:(d>c)<<31>>31)|0}function Xw(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0.0,A=0.0;v=r;r=r+48|0;t=v+32|0;u=v;s=v+24|0;o=c+4|0;q=k[c+8>>2]|0;m=(q|0)>0;a:do if(m){h=s+4|0;i=k[o>>2]|0;j=0;while(1){w=i;x=k[w>>2]|0;w=k[w+4>>2]|0;y=s;k[y>>2]=x;k[y+4>>2]=w;k[s>>2]=x+a;k[h>>2]=w+b;k[t>>2]=k[s>>2];k[t+4>>2]=k[s+4>>2];if(ez(d,t)|0){h=0;break a}j=j+1|0;if((j|0)>=(q|0)){n=5;break}else i=i+8|0}}else n=5;while(0);if((n|0)==5){y=k[c+12>>2]|0;A=+p[g+(y<<5)>>3];z=+p[g+(y<<5)+8>>3];y=(ha(f,a)|0)-~~(A+(A>=0.0?.5:-.5))|0;k[e>>2]=y;y=(ha(f,b)|0)-~~(z+(z>=0.0?.5:-.5))|0;j=e+4|0;k[j>>2]=y;if(m){i=s+4|0;h=k[o>>2]|0;g=0;while(1){y=h;x=k[y>>2]|0;y=k[y+4>>2]|0;w=s;k[w>>2]=x;k[w+4>>2]=y;k[s>>2]=x+a;k[i>>2]=y+b;k[t>>2]=k[s>>2];k[t+4>>2]=k[s+4>>2];cz(d,t);g=g+1|0;if((g|0)==(q|0))break;else h=h+8|0}}if((l[137280]|0)>1){h=k[24528]|0;x=k[e>>2]|0;y=k[j>>2]|0;k[u>>2]=q;k[u+4>>2]=a;k[u+8>>2]=b;k[u+12>>2]=x;k[u+16>>2]=y;FN(h,135504,u)|0;h=1}else h=1}r=v;return h|0}function Yw(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0;j=r;r=r+16|0;h=j+4|0;g=j;k[b>>2]=0;d=(at($t(a)|0)|0)!=0&1;k[c>>2]=d;d=k[13673]|0;a:do if(d){d=ts(a,d)|0;switch(i[d>>0]|0){case 110:{if(!(qO(d,171734)|0))d=53836;else break a;break}case 102:{if(!(qO(d,137153)|0))d=53800;else break a;break}case 98:{if(qO(d,137161)|0)if(!(qO(d,147064)|0))d=53824;else break a;else d=53812;break}default:break a}k[b>>2]=k[d+4>>2];k[c>>2]=k[d+8>>2]}while(0);d=k[13684]|0;if(((d|0)!=0?(k[c>>2]|0)==1:0)?(e=ts(a,d)|0,(i[e>>0]|0)!=0):0)dx(e,c);d=k[13685]|0;if(((d|0)!=0?(k[b>>2]|0)==1:0)?(f=ts(a,d)|0,(i[f>>0]|0)!=0):0)dx(f,b);if(i[(k[a+8>>2]|0)+153>>0]|0){e=a+-32|0;d=$t(k[((k[a>>2]&3|0)==2?a:e)+28>>2]|0)|0;f=k[a>>2]&3;Yw(Ls(d,k[((f|0)==2?a:e)+28>>2]|0,k[((f|0)==3?a:a+32|0)+28>>2]|0,0,0)|0,h,g);k[c>>2]=k[h>>2]|k[c>>2];k[b>>2]=k[g>>2]|k[b>>2]}r=j;return}function Zw(a,b){a=a|0;b=b|0;var c=0.0,d=0,e=0,f=0;e=0;c=0.0;do{d=b>>(e<<3)&15;if((d|0)!=1)if((d|0)!=2)if((d|0)!=3)if((d|0)!=4)if((d|0)!=5)if((d|0)!=6)if((d|0)!=7){if((d|0)==8){d=33848;f=3}}else{d=33824;f=3}else{d=33800;f=3}else{d=33776;f=3}else{d=33752;f=3}else{d=33728;f=3}else{d=33704;f=3}else{d=33680;f=3}if((f|0)==3){f=0;c=c+ +p[d+8>>3]}e=e+1|0}while((e|0)!=4);return +(c*10.0*+jB(a,k[13677]|0,1.0,0.0))}function _w(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0.0,h=0,i=0,j=0,l=0,m=0.0,n=0.0,o=0,q=0,s=0;l=r;r=r+80|0;i=l+72|0;j=l+8|0;h=l;g=+Zw(a,f);g=g*g;p[h>>3]=g;k[e+12>>2]=f;e=e+32|0;a=d+3|0;f=b+(a<<4)|0;k[e>>2]=k[f>>2];k[e+4>>2]=k[f+4>>2];k[e+8>>2]=k[f+8>>2];k[e+12>>2]=k[f+12>>2];if((d|0)>(c|0)?(n=+p[b+(d<<4)>>3]-+p[f>>3],m=+p[b+(d<<4)+8>>3]-+p[b+(a<<4)+8>>3],n*n+m*m<g):0)d=d+-3|0;s=j+48|0;q=b+(d<<4)|0;k[s>>2]=k[q>>2];k[s+4>>2]=k[q+4>>2];k[s+8>>2]=k[q+8>>2];k[s+12>>2]=k[q+12>>2];o=j+32|0;a=b+(d+1<<4)|0;k[o>>2]=k[a>>2];k[o+4>>2]=k[a+4>>2];k[o+8>>2]=k[a+8>>2];k[o+12>>2]=k[a+12>>2];f=j+16|0;c=b+(d+2<<4)|0;k[f>>2]=k[c>>2];k[f+4>>2]=k[c+4>>2];k[f+8>>2]=k[c+8>>2];k[f+12>>2]=k[c+12>>2];k[j>>2]=k[e>>2];k[j+4>>2]=k[e+4>>2];k[j+8>>2]=k[e+8>>2];k[j+12>>2]=k[e+12>>2];k[i>>2]=j;k[i+4>>2]=h;BA(i,93,j,1);k[q>>2]=k[s>>2];k[q+4>>2]=k[s+4>>2];k[q+8>>2]=k[s+8>>2];k[q+12>>2]=k[s+12>>2];k[a>>2]=k[o>>2];k[a+4>>2]=k[o+4>>2];k[a+8>>2]=k[o+8>>2];k[a+12>>2]=k[o+12>>2];k[c>>2]=k[f>>2];k[c+4>>2]=k[f+4>>2];k[c+8>>2]=k[f+8>>2];k[c+12>>2]=k[f+12>>2];b=b+(d+3<<4)|0;k[b>>2]=k[j>>2];k[b+4>>2]=k[j+4>>2];k[b+8>>2]=k[j+8>>2];k[b+12>>2]=k[j+12>>2];r=l;return d|0}function $w(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0.0,i=0,j=0,l=0,m=0,n=0.0,o=0.0,q=0,s=0;m=r;r=r+80|0;i=m+72|0;l=m+8|0;j=m;h=+Zw(a,f);h=h*h;p[j>>3]=h;k[e+8>>2]=f;f=e+16|0;a=b+(c<<4)|0;k[f>>2]=k[a>>2];k[f+4>>2]=k[a+4>>2];k[f+8>>2]=k[a+8>>2];k[f+12>>2]=k[a+12>>2];if(!((d|0)>(c|0)?(g=c+3|0,o=+p[a>>3]-+p[b+(g<<4)>>3],n=+p[b+(c<<4)+8>>3]-+p[b+(g<<4)+8>>3],o*o+n*n<h):0))g=c;c=b+(g+3<<4)|0;k[l>>2]=k[c>>2];k[l+4>>2]=k[c+4>>2];k[l+8>>2]=k[c+8>>2];k[l+12>>2]=k[c+12>>2];e=l+16|0;d=b+(g+2<<4)|0;k[e>>2]=k[d>>2];k[e+4>>2]=k[d+4>>2];k[e+8>>2]=k[d+8>>2];k[e+12>>2]=k[d+12>>2];q=l+32|0;a=b+(g+1<<4)|0;k[q>>2]=k[a>>2];k[q+4>>2]=k[a+4>>2];k[q+8>>2]=k[a+8>>2];k[q+12>>2]=k[a+12>>2];s=l+48|0;k[s>>2]=k[f>>2];k[s+4>>2]=k[f+4>>2];k[s+8>>2]=k[f+8>>2];k[s+12>>2]=k[f+12>>2];k[i>>2]=s;k[i+4>>2]=j;BA(i,93,l,0);j=b+(g<<4)|0;k[j>>2]=k[s>>2];k[j+4>>2]=k[s+4>>2];k[j+8>>2]=k[s+8>>2];k[j+12>>2]=k[s+12>>2];k[a>>2]=k[q>>2];k[a+4>>2]=k[q+4>>2];k[a+8>>2]=k[q+8>>2];k[a+12>>2]=k[q+12>>2];k[d>>2]=k[e>>2];k[d+4>>2]=k[e+4>>2];k[d+8>>2]=k[e+8>>2];k[d+12>>2]=k[e+12>>2];k[c>>2]=k[l>>2];k[c+4>>2]=k[l+4>>2];k[c+8>>2]=k[l+8>>2];k[c+12>>2]=k[l+12>>2];r=m;return g|0}function ax(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0.0,j=0.0,l=0.0,m=0.0,n=0.0,o=0.0,q=0,r=0,s=0.0,t=0.0,u=0.0,v=0;r=(f|0)!=0;h=(g|0)!=0;if(!((d|0)==(c|0)&(r&h))){if(h){i=+Zw(a,g);j=+p[b+(d<<4)>>3];l=+p[b+(d<<4)+8>>3];q=d+3|0;h=b+(q<<4)|0;m=+p[h>>3];q=b+(q<<4)+8|0;n=+p[q>>3];t=j-m;u=l-n;u=+X(+(t*t+u*u))*.9;i=i>=u?u:i;do if(l==n)if(j<m){o=m-i;i=l;break}else{o=m+i;i=l;break}else if(l<n){o=j;i=n-i;break}else{o=j;i=n+i;break}while(0);v=d+1|0;p[b+(v<<4)>>3]=j;p[b+(v<<4)+8>>3]=l;d=b+(d+2<<4)|0;p[h>>3]=o;p[q>>3]=i;k[d>>2]=k[h>>2];k[d+4>>2]=k[h+4>>2];k[d+8>>2]=k[h+8>>2];k[d+12>>2]=k[h+12>>2];k[e+12>>2]=g;p[e+32>>3]=m;p[e+40>>3]=n}if(r){i=+Zw(a,f);h=b+(c<<4)|0;j=+p[h>>3];l=+p[b+(c<<4)+8>>3];v=c+3|0;m=+p[b+(v<<4)>>3];n=+p[b+(v<<4)+8>>3];t=j-m;u=l-n;u=+X(+(t*t+u*u))*.9;i=i>=u?u:i;do if(l==n)if(j<m){o=j+i;i=l;break}else{o=j-i;i=l;break}else if(l<n){o=j;i=l+i;break}else{o=j;i=l-i;break}while(0);d=c+1|0;v=b+(d<<4)|0;p[v>>3]=o;p[b+(d<<4)+8>>3]=i;k[h>>2]=k[v>>2];k[h+4>>2]=k[v+4>>2];k[h+8>>2]=k[v+8>>2];k[h+12>>2]=k[v+12>>2];v=c+2|0;p[b+(v<<4)>>3]=m;p[b+(v<<4)+8>>3]=n;k[e+8>>2]=f;p[e+16>>3]=j;p[e+24>>3]=l}}else{q=b+(d<<4)|0;s=+p[q>>3];t=+p[b+(d<<4)+8>>3];h=d+3|0;r=b+(h<<4)|0;u=+p[r>>3];h=b+(h<<4)+8|0;o=+p[h>>3];i=+Zw(a,f);n=+Zw(a,g);m=s-u;j=t-o;j=+X(+(m*m+j*j));v=!(i+n>=j);j=j/3.0;i=v?i:j;j=v?n:j;do if(t==o)if(s<u){n=s+i;l=t;m=u-j;i=t;break}else{n=s-i;l=t;m=u+j;i=t;break}else if(t<o){n=s;l=t+i;m=s;i=o-j;break}else{n=s;l=t-i;m=s;i=o+j;break}while(0);c=d+1|0;v=b+(c<<4)|0;p[v>>3]=n;p[b+(c<<4)+8>>3]=l;k[q>>2]=k[v>>2];k[q+4>>2]=k[v+4>>2];k[q+8>>2]=k[v+8>>2];k[q+12>>2]=k[v+12>>2];v=b+(d+2<<4)|0;p[r>>3]=m;p[h>>3]=i;k[v>>2]=k[r>>2];k[v+4>>2]=k[r+4>>2];k[v+8>>2]=k[r+8>>2];k[v+12>>2]=k[r+12>>2];k[e+12>>2]=g;p[e+32>>3]=s;p[e+40>>3]=t;k[e+8>>2]=f;p[e+16>>3]=u;p[e+24>>3]=o}return}function bx(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;var f=0.0,g=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0;l=+p[b>>3];j=+p[c>>3]-l;k=+p[b+8>>3];i=+p[c+8>>3]-k;n=d*10.0/(+X(+(j*j+i*i))+.0001);j=n*(j+(j>=0.0?.0001:-.0001));i=n*(i+(i>=0.0?.0001:-.0001));n=j*.5;m=i*.5;h=l-m;f=k-n;m=l+m;k=n+k;n=j+h;l=i+f;j=j+m;i=i+k;g=n>j?n:j;g=m>g?m:g;d=l>i?l:i;d=k>d?k:d;j=n<j?n:j;j=m<j?m:j;i=l<i?l:i;i=k<i?k:i;p[a>>3]=h<j?h:j;p[a+8>>3]=f<i?f:i;p[a+16>>3]=h>g?h:g;p[a+24>>3]=f>d?f:d;return}function cx(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=+f;g=g|0;var h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0.0,z=0.0;w=r;r=r+80|0;u=w+64|0;s=w+48|0;t=w+32|0;q=w+16|0;m=w;n=(k[a+16>>2]|0)+12|0;o=k[n>>2]|0;k[n>>2]=b;GD(a,k[(k[a>>2]|0)+336>>2]|0);OD(a,f);z=+p[d>>3]-+p[c>>3];h=d+8|0;x=+p[h>>3]-+p[c+8>>3];y=10.0/(+X(+(z*z+x*x))+.0001);p[d>>3]=y*(z+(z>=0.0?.0001:-.0001));p[h>>3]=y*(x+(x>=0.0?.0001:-.0001));h=t+8|0;i=q+8|0;l=0;do{b=g>>(l<<3);j=b&255;if(!j)break;k[t>>2]=k[d>>2];k[t+4>>2]=k[d+4>>2];k[t+8>>2]=k[d+8>>2];k[t+12>>2]=k[d+12>>2];k[q>>2]=k[c>>2];k[q+4>>2]=k[c+4>>2];k[q+8>>2]=k[c+8>>2];k[q+12>>2]=k[c+12>>2];b=b&15;if((b|0)!=1)if((b|0)!=2)if((b|0)!=3)if((b|0)!=4)if((b|0)!=5)if((b|0)!=6)if((b|0)!=7){if((b|0)==8){b=33848;v=4}}else{b=33824;v=4}else{b=33800;v=4}else{b=33776;v=4}else{b=33752;v=4}else{b=33728;v=4}else{b=33704;v=4}else{b=33680;v=4}if((v|0)==4){v=0;z=+p[b+8>>3]*e;p[t>>3]=+p[t>>3]*z;p[h>>3]=z*+p[h>>3];b=k[b+16>>2]|0;k[s>>2]=k[q>>2];k[s+4>>2]=k[q+4>>2];k[s+8>>2]=k[q+8>>2];k[s+12>>2]=k[q+12>>2];k[u>>2]=k[t>>2];k[u+4>>2]=k[t+4>>2];k[u+8>>2]=k[t+8>>2];k[u+12>>2]=k[t+12>>2];bc[b&15](a,s,u,e,f,j);p[q>>3]=+p[q>>3]+ +p[t>>3];p[i>>3]=+p[i>>3]+ +p[h>>3]};k[m>>2]=k[q>>2];k[m+4>>2]=k[q+4>>2];k[m+8>>2]=k[q+8>>2];k[m+12>>2]=k[q+12>>2];k[c>>2]=k[m>>2];k[c+4>>2]=k[m+4>>2];k[c+8>>2]=k[m+8>>2];k[c+12>>2]=k[m+12>>2];l=l+1|0}while((l|0)<4);k[n>>2]=o;r=w;return}function dx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0;m=r;r=r+16|0;l=m;h=m+4|0;k[b>>2]=0;a:do if(i[a>>0]|0){j=0;b:while(1){f=(j|0)==3;g=(j|0)==0;while(1){k[h>>2]=0;c=nx(a,53860,h)|0;if((c|0)==(a|0)){c=a;while(1){d=nx(c,53876,h)|0;if((c|0)==(d|0))break;else c=d}e=nx(c,53924,h)|0}else e=c;c=k[h>>2]|0;if((c|0)!=0&(c&15|0)==0){a=e;e=14;break}if(!c)break b;d=(c|0)==8;if(!(f&d)){a=e;e=12;break}if(!(i[e>>0]|0))break a;else a=e}if((e|0)==12){if(g&d)if(!(i[a>>0]|0))break a;else c=8}else if((e|0)==14)c=c|1;k[b>>2]=k[b>>2]|c<<(j<<3);j=j+1|0;if(!((j|0)<4&(i[a>>0]|0)!=0))break a}k[l>>2]=a;Yr(0,135655,l)|0}while(0);r=m;return}function ex(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0;e=k[a>>2]|0;d=+p[b>>3]-+p[e>>3];c=+p[b+8>>3]-+p[e+8>>3];return d*d+c*c<=+p[k[a+4>>2]>>3]|0}function fx(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=+e;f=f|0;var g=0.0,h=0.0,i=0.0,j=0.0,l=0,m=0;m=r;r=r+80|0;l=m;i=e>4.0?e*.25*.35:.35;h=+p[c+8>>3];j=i*h;g=+p[c>>3];i=i*g;e=+p[b>>3];g=g+e;d=+p[b+8>>3];h=h+d;c=l+64|0;if(!(f&32)){p[l+64>>3]=g;p[l+72>>3]=h;k[l>>2]=k[c>>2];k[l+4>>2]=k[c+4>>2];k[l+8>>2]=k[c+8>>2];k[l+12>>2]=k[c+12>>2];c=l+32|0;k[c>>2]=k[b>>2];k[c+4>>2]=k[b+4>>2];k[c+8>>2]=k[b+8>>2];k[c+12>>2]=k[b+12>>2];e=g;d=h}else{k[c>>2]=k[b>>2];k[c+4>>2]=k[b+4>>2];k[c+8>>2]=k[b+8>>2];k[c+12>>2]=k[b+12>>2];k[l>>2]=k[b>>2];k[l+4>>2]=k[b+4>>2];k[l+8>>2]=k[b+8>>2];k[l+12>>2]=k[b+12>>2];p[l+32>>3]=g;p[l+40>>3]=h}p[l+16>>3]=j+e;p[l+24>>3]=d-i;p[l+48>>3]=e-j;p[l+56>>3]=i+d;do if(!(f&64))if(!(f&128)){ID(a,l+16|0,3,f>>>4&1^1);break}else{ID(a,l+32|0,3,f>>>4&1^1);break}else ID(a,l,3,f>>>4&1^1);while(0);r=m;return}function gx(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=+e;f=f|0;var g=0.0,h=0.0,i=0.0,j=0.0,l=0.0,m=0.0,n=0.0,o=0.0,q=0,s=0.0,t=0,u=0;u=r;r=r+144|0;t=u;g=d*4.0;q=(f&32|0)==0;g=!(g<e)|q?.45:e/g*.45;if(!(e>1.0)|q)d=0.0;else d=(e+-1.0)*.05/d;m=+p[c+8>>3];o=-m;s=g*o;l=+p[c>>3];n=g*l;o=d*o;j=d*l;e=+p[b>>3];d=l+e;h=+p[b+8>>3];i=m+h;l=e+l*.5;m=m*.5+h;c=t+128|0;if(q){p[t+128>>3]=d;p[t+136>>3]=i;k[t>>2]=k[c>>2];k[t+4>>2]=k[c+4>>2];k[t+8>>2]=k[c+8>>2];k[t+12>>2]=k[c+12>>2];p[t+16>>3]=e-s;p[t+24>>3]=h-n;p[t+32>>3]=l-o;p[t+40>>3]=m-j;p[t+48>>3]=e;p[t+56>>3]=h;q=t+64|0;k[q>>2]=k[b>>2];k[q+4>>2]=k[b+4>>2];k[q+8>>2]=k[b+8>>2];k[q+12>>2]=k[b+12>>2];p[t+80>>3]=e;g=h;d=h}else{k[c>>2]=k[b>>2];k[c+4>>2]=k[b+4>>2];k[c+8>>2]=k[b+8>>2];k[c+12>>2]=k[b+12>>2];k[t>>2]=k[b>>2];k[t+4>>2]=k[b+4>>2];k[t+8>>2]=k[b+8>>2];k[t+12>>2]=k[b+12>>2];p[t+16>>3]=d-s;p[t+24>>3]=i-n;p[t+32>>3]=l-o;p[t+40>>3]=m-j;p[t+48>>3]=d-o;p[t+56>>3]=i-j;p[t+64>>3]=d;p[t+72>>3]=i;p[t+80>>3]=o+d;e=d;g=i;d=j+i}p[t+88>>3]=d;p[t+96>>3]=o+l;p[t+104>>3]=j+m;p[t+112>>3]=s+e;p[t+120>>3]=n+g;do if(!(f&64))if(!(f&128)){ID(a,t,9,1);break}else{ID(a,t+48|0,6,1);break}else ID(a,t,6,1);while(0);r=u;return}function hx(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=+e;f=f|0;var g=0.0,h=0,i=0,j=0,l=0,m=0,n=0,o=0.0,q=0.0,s=0.0,t=0,u=0,v=0.0,w=0.0;u=r;r=r+64|0;t=u;w=+p[c+8>>3];v=+p[c>>3];e=+p[b>>3];o=v+e;g=+p[b+8>>3];q=w+g;s=e+v*.2;d=w*.2+g;e=e+v*.6;g=w*.6+g;p[t>>3]=s-w;c=t+8|0;p[c>>3]=v+d;h=t+16|0;p[h>>3]=w+s;i=t+24|0;p[i>>3]=d-v;j=t+32|0;p[j>>3]=w+e;l=t+40|0;p[l>>3]=g-v;m=t+48|0;p[m>>3]=e-w;n=t+56|0;p[n>>3]=v+g;if(!(f&64)){if(f&128){p[h>>3]=s;p[i>>3]=d;p[j>>3]=e;p[l>>3]=g}}else{p[t>>3]=s;p[c>>3]=d;p[m>>3]=e;p[n>>3]=g}ID(a,t,4,1);k[t>>2]=k[b>>2];k[t+4>>2]=k[b+4>>2];k[t+8>>2]=k[b+8>>2];k[t+12>>2]=k[b+12>>2];p[h>>3]=o;p[i>>3]=q;LD(a,t,2);r=u;return}function ix(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=+e;f=f|0;var g=0.0,h=0,i=0,j=0,l=0,m=0,n=0,o=0.0,q=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0;s=r;r=r+64|0;q=s;g=+p[c+8>>3];u=g*-.4;e=+p[c>>3];t=e*.4;w=+p[b>>3];o=w+e*.8;v=+p[b+8>>3];d=g*.8+v;e=e+w;g=g+v;p[q>>3]=u+w;c=q+8|0;p[c>>3]=t+v;h=q+16|0;p[h>>3]=w-u;i=q+24|0;p[i>>3]=v-t;j=q+32|0;p[j>>3]=o-u;l=q+40|0;p[l>>3]=d-t;m=q+48|0;p[m>>3]=u+o;n=q+56|0;p[n>>3]=t+d;if(!(f&64)){if(f&128){k[h>>2]=k[b>>2];k[h+4>>2]=k[b+4>>2];k[h+8>>2]=k[b+8>>2];k[h+12>>2]=k[b+12>>2];p[j>>3]=o;p[l>>3]=d}}else{k[q>>2]=k[b>>2];k[q+4>>2]=k[b+4>>2];k[q+8>>2]=k[b+8>>2];k[q+12>>2]=k[b+12>>2];p[m>>3]=o;p[n>>3]=d}ID(a,q,4,f>>>4&1^1);p[q>>3]=o;p[c>>3]=d;p[q+16>>3]=e;p[i>>3]=g;LD(a,q,2);r=s;return}function jx(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=+e;f=f|0;var g=0,h=0,i=0.0,j=0.0,l=0.0,m=0.0,n=0.0,o=0.0;h=r;r=r+80|0;g=h;m=+p[c+8>>3];i=-m/3.0;o=+p[c>>3];e=o/3.0;n=+p[b>>3];j=o*.5+n;l=+p[b+8>>3];d=m*.5+l;c=g+64|0;p[g+64>>3]=o+n;p[g+72>>3]=m+l;k[g>>2]=k[c>>2];k[g+4>>2]=k[c+4>>2];k[g+8>>2]=k[c+8>>2];k[g+12>>2]=k[c+12>>2];p[g+16>>3]=i+j;p[g+24>>3]=e+d;c=g+32|0;k[c>>2]=k[b>>2];k[c+4>>2]=k[b+4>>2];k[c+8>>2]=k[b+8>>2];k[c+12>>2]=k[b+12>>2];p[g+48>>3]=j-i;p[g+56>>3]=d-e;do if(!(f&64)){c=f>>>4&1^1;if(!(f&128)){ID(a,g,4,c);break}else{ID(a,g,3,c);break}}else ID(a,c,3,f>>>4&1^1);while(0);r=h;return}function kx(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=+e;f=f|0;var g=0,h=0,i=0.0;g=r;r=r+32|0;h=g;i=+p[c>>3];e=+p[c+8>>3];d=+X(+(i*i+e*e))*.5;i=i*.5+ +p[b>>3];p[h>>3]=i-d;e=+p[b+8>>3]+e*.5;p[h+8>>3]=e-d;p[h+16>>3]=d+i;p[h+24>>3]=d+e;HD(a,h,2,f>>>4&1^1);r=g;return}function lx(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=+e;f=f|0;var g=0,h=0,i=0,j=0,l=0,m=0.0,n=0.0,o=0.0,q=0.0,s=0.0;j=r;r=r+128|0;i=j+64|0;l=j+32|0;g=j+16|0;h=j;q=e>4.0?e*.5*.25:.5;o=+p[b>>3];n=+p[c>>3];d=+p[b+8>>3];s=+p[c+8>>3];e=q*s;q=q*n;k[l>>2]=k[b>>2];k[l+4>>2]=k[b+4>>2];k[l+8>>2]=k[b+8>>2];k[l+12>>2]=k[b+12>>2];p[l+16>>3]=o+n;p[l+24>>3]=d+s;p[i>>3]=q+(o-e);s=e+(q+d);p[i+8>>3]=s;p[i+48>>3]=q+(e+o);d=e+(d-q);p[i+56>>3]=d;n=e*-.95;m=q*4.0/3.0;p[i+16>>3]=q+(n+o)-m;e=e*4.0/3.0;p[i+24>>3]=s-e;p[i+32>>3]=q+(o-n)-m;p[i+40>>3]=d-e;LD(a,l,2);if(!(f&64)){if(f&128)uB(h,i,3,.5,i,0)}else uB(g,i,3,.5,0,i);KD(a,i,4,0,0,0);r=j;return}function mx(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=+e;f=f|0;var g=0;f=r;r=r+32|0;g=f;d=+p[b>>3]+ +p[c>>3];e=+p[b+8>>3]+ +p[c+8>>3];k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];p[g+16>>3]=d;p[g+24>>3]=e;LD(a,g,2);r=f;return}function nx(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=k[b>>2]|0;a:do if(d){e=b;while(1){b=uO(d)|0;if(!(wO(a,d,b)|0)){d=e;break}e=e+8|0;d=k[e>>2]|0;if(!d)break a}k[c>>2]=k[c>>2]|k[d+4>>2];a=a+b|0}while(0);return a|0}function ox(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;g=r;r=r+16|0;e=g+8|0;d=g;b=ss(a,135750)|0;if((b|0)!=0?(i[b>>0]|0)!=0:0){c=b;f=5}else{b=ss(a,135762)|0;if((b|0)!=0?(i[b>>0]|0)!=0:0){c=b;f=5}else b=0}if((f|0)==5){b=BE(c,0,120)|0;if(!b){f=ht(a)|0;k[d>>2]=f;Yr(0,135769,d)|0;k[e>>2]=c;Yr(3,135822,e)|0}}r=g;return b|0}function px(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;f=r;r=r+16|0;e=By(304)|0;if(!e)Yr(1,135830,f)|0;d=a+16|0;a=k[d>>2]|0;k[e>>2]=a;k[d>>2]=e;if(!a){k[e+144>>2]=3;k[e+148>>2]=0;p[e+152>>3]=1.0}else{b=e+16|0;c=a+16|0;d=b+40|0;do{k[b>>2]=k[c>>2];b=b+4|0;c=c+4|0}while((b|0)<(d|0));b=e+56|0;c=a+56|0;d=b+40|0;do{k[b>>2]=k[c>>2];b=b+4|0;c=c+4|0}while((b|0)<(d|0));k[e+144>>2]=k[a+144>>2];k[e+148>>2]=k[a+148>>2];p[e+152>>3]=+p[a+152>>3];k[e+136>>2]=k[a+136>>2];b=e+96|0;c=a+96|0;d=b+40|0;do{k[b>>2]=k[c>>2];b=b+4|0;c=c+4|0}while((b|0)<(d|0))}r=f;return e|0}function qx(a){a=a|0;var b=0;a=a+16|0;b=k[a>>2]|0;if(!b)Wa(135856,135860,119,135867);else{vP(k[b+212>>2]|0);vP(k[b+208>>2]|0);vP(k[b+216>>2]|0);vP(k[b+220>>2]|0);vP(k[b+224>>2]|0);vP(k[b+228>>2]|0);vP(k[b+232>>2]|0);vP(k[b+236>>2]|0);vP(k[b+240>>2]|0);vP(k[b+244>>2]|0);vP(k[b+248>>2]|0);vP(k[b+252>>2]|0);vP(k[b+256>>2]|0);vP(k[b+272>>2]|0);vP(k[b+284>>2]|0);vP(k[b+280>>2]|0);k[a>>2]=k[b>>2];vP(b);return}}function rx(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,l=0;l=k[a+16>>2]|0;h=k[a+152>>2]|0;if((b|0)!=0&(h&32768|0)!=0)k[l+192>>2]=b;if(((h&65536|0)!=0?(b=uy(f,g)|0,k[l+212>>2]=b,(c|0)!=0):0)?(i[c>>0]|0)!=0:0){a=uy(c,g)|0;k[l+208>>2]=a;a=1}else a=0;do if(h&4194304){if((d|0)!=0?(i[d>>0]|0)!=0:0){a=uy(d,g)|0;k[l+228>>2]=a;a=l+260|0;j[a>>1]=j[a>>1]|1;a=1;break}f=k[l+192>>2]|0;if(f){a=tO(f)|0;k[l+228>>2]=a;a=1}}while(0);if((e|0)!=0&(h&8388608|0)!=0?(i[e>>0]|0)!=0:0){a=uy(e,g)|0;k[l+244>>2]=a;a=1}return a|0}function sx(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;h=r;r=r+80|0;g=h;f=h+8|0;e=k[(k[a>>2]|0)+168>>2]|0;d=k[(k[(k[e+8>>2]|0)+8>>2]|0)+92>>2]|0;Fx(a,c);a=ss(b,177197)|0;if((a|0)!=0?(i[a>>0]|0)!=0:0){cs(c,a)|0;d=c+4|0;a=k[d>>2]|0;if(a>>>0>=(k[c+8>>2]|0)>>>0){as(c,1)|0;a=k[d>>2]|0}i[a>>0]=0;a=k[c>>2]|0;k[d>>2]=a}else{if((e|0)!=(b|0)&(d|0)!=0){cs(c,d)|0;d=c+4|0;a=k[d>>2]|0;if(a>>>0>=(k[c+8>>2]|0)>>>0){as(c,1)|0;a=k[d>>2]|0}k[d>>2]=a+1;i[a>>0]=95}switch(ku(b)|0){case 0:{d=(k[b>>2]|0)>>>4;a=(e|0)==(b|0)?147425:135881;break}case 1:{d=(k[b>>2]|0)>>>4;a=147381;break}case 2:{d=(k[b>>2]|0)>>>4;a=147390;break}default:{d=0;a=0}}cs(c,a)|0;k[g>>2]=d;TN(f,135887,g)|0;cs(c,f)|0;d=c+4|0;a=k[d>>2]|0;if(a>>>0>=(k[c+8>>2]|0)>>>0){as(c,1)|0;a=k[d>>2]|0}i[a>>0]=0;a=k[c>>2]|0;k[d>>2]=a}r=h;return a|0}function tx(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,g=0,h=0,i=0.0,j=0.0,l=0,m=0,n=0.0,q=0,s=0,t=0;t=r;r=r+48|0;s=t+16|0;d=t+32|0;q=t;n=+p[(k[a+16>>2]|0)+152>>3];m=Gx(c,0,d)|0;if((m+-1|0)>>>0>=2){e=+p[b+16>>3];i=(+p[b>>3]+e)*.5;p[q>>3]=i;f=+p[b+24>>3];j=(+p[b+8>>3]+f)*.5;p[q+8>>3]=j;i=e-i;j=f-j;l=n>.5;if(l)OD(a,.5);g=k[d>>2]|0;h=g+8|0;b=k[h>>2]|0;c=k[b>>2]|0;if(c){e=0.0;do{d=b+4|0;if(!(+o[d>>2]==0.0)){ED(a,c);if(!(k[b+12>>2]|0))f=6.283185307179586;else f=e+ +o[d>>2]*6.283185307179586;k[s>>2]=k[q>>2];k[s+4>>2]=k[q+4>>2];k[s+8>>2]=k[q+8>>2];k[s+12>>2]=k[q+12>>2];d=UE(s,i,j,e,f)|0;KD(a,k[d>>2]|0,k[d+4>>2]|0,0,0,1);PH(d);e=f}b=b+12|0;c=k[b>>2]|0}while((c|0)!=0)}if(l)OD(a,n);vP(k[g+4>>2]|0);vP(k[h>>2]|0);vP(g)}r=t;return m|0}function ux(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0.0,g=0,h=0,i=0,j=0.0,l=0.0,m=0,n=0,q=0,s=0.0,t=0,u=0;u=r;r=r+80|0;e=u+64|0;t=u;s=+p[(k[a+16>>2]|0)+152>>3];q=Gx(c,0,e)|0;if((q+-1|0)>>>0>=2){if(!d){k[t>>2]=k[b>>2];k[t+4>>2]=k[b+4>>2];k[t+8>>2]=k[b+8>>2];k[t+12>>2]=k[b+12>>2];n=t+16|0;m=b+16|0;k[n>>2]=k[m>>2];k[n+4>>2]=k[m+4>>2];k[n+8>>2]=k[m+8>>2];k[n+12>>2]=k[m+12>>2];n=t+32|0;m=b+32|0;k[n>>2]=k[m>>2];k[n+4>>2]=k[m+4>>2];k[n+8>>2]=k[m+8>>2];k[n+12>>2]=k[m+12>>2];n=t+48|0;m=b+48|0;k[n>>2]=k[m>>2];k[n+4>>2]=k[m+4>>2];k[n+8>>2]=k[m+8>>2];k[n+12>>2]=k[m+12>>2]}else{n=b+32|0;k[t>>2]=k[n>>2];k[t+4>>2]=k[n+4>>2];k[t+8>>2]=k[n+8>>2];k[t+12>>2]=k[n+12>>2];n=t+16|0;m=b+48|0;k[n>>2]=k[m>>2];k[n+4>>2]=k[m+4>>2];k[n+8>>2]=k[m+8>>2];k[n+12>>2]=k[m+12>>2];n=t+32|0;k[n>>2]=k[b>>2];k[n+4>>2]=k[b+4>>2];k[n+8>>2]=k[b+8>>2];k[n+12>>2]=k[b+12>>2];n=t+48|0;m=b+16|0;k[n>>2]=k[m>>2];k[n+4>>2]=k[m+4>>2];k[n+8>>2]=k[m+8>>2];k[n+12>>2]=k[m+12>>2]}i=t+16|0;j=+p[i>>3];f=+p[t>>3];l=j-f;m=t+32|0;p[m>>3]=f;p[i>>3]=f;n=s>.5;if(n)OD(a,.5);e=k[e>>2]|0;g=e+8|0;b=k[g>>2]|0;c=k[b>>2]|0;if(c){h=t+48|0;do{d=b+4|0;if(!(+o[d>>2]==0.0)){ED(a,c);if(!(k[b+12>>2]|0))f=j;else f=+p[t>>3]+l*+o[d>>2];p[m>>3]=f;p[i>>3]=f;ID(a,t,4,1);f=+p[i>>3];p[h>>3]=f;p[t>>3]=f}b=b+12|0;c=k[b>>2]|0}while((c|0)!=0)}if(n)OD(a,s);vP(k[e+4>>2]|0);vP(k[g>>2]|0);vP(e)}r=u;return q|0}function vx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;c=k[a+16>>2]|0;d=k[a+152>>2]|0;if(d&4259840){e=d&131072;k[c+264>>2]=e>>>16^2;g=c+268|0;k[g>>2]=(e>>>16^2)+2;f=c+272|0;vP(k[f>>2]|0);c=By(k[g>>2]<<4)|0;k[f>>2]=c;k[c>>2]=k[b>>2];k[c+4>>2]=k[b+4>>2];k[c+8>>2]=k[b+8>>2];k[c+12>>2]=k[b+12>>2];f=c+16|0;b=b+16|0;k[f>>2]=k[b>>2];k[f+4>>2]=k[b+4>>2];k[f+8>>2]=k[b+8>>2];k[f+12>>2]=k[b+12>>2];if(!(d&8192))hD(a,c,c,2)|0;if(!e)dy(c)}return}function wx(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0,f=0,g=0,h=0.0,i=0.0,j=0.0,l=0.0,m=0,n=0,o=0,q=0,s=0;q=r;r=r+160|0;f=q+96|0;e=q+32|0;m=q+16|0;g=q;c=+p[b>>3];o=a+16|0;i=+p[o>>3];if(!(((((((((!(c>i)?(j=+p[a>>3],!(c<j)):0)?(l=+p[b+8>>3],d=+p[a+24>>3],!(l>d)):0)?(h=+p[a+8>>3],!(l<h)):0)?(l=+p[b+16>>3],!(l>i|l<j)):0)?(l=+p[b+24>>3],!(l>d|l<h)):0)?(l=+p[b+32>>3],!(l>i|l<j)):0)?(l=+p[b+40>>3],!(l>d|l<h)):0)?(l=+p[b+48>>3],!(l>i|l<j)):0)?(l=+p[b+56>>3],!(l>d|l<h)):0))n=11;do if((n|0)==11){s=b+48|0;n=b+16|0;k[m>>2]=k[b>>2];k[m+4>>2]=k[b+4>>2];k[m+8>>2]=k[b+8>>2];k[m+12>>2]=k[b+12>>2];k[e>>2]=k[s>>2];k[e+4>>2]=k[s+4>>2];k[e+8>>2]=k[s+8>>2];k[e+12>>2]=k[s+12>>2];k[f>>2]=k[n>>2];k[f+4>>2]=k[n+4>>2];k[f+8>>2]=k[n+8>>2];k[f+12>>2]=k[n+12>>2];l=+hy(m,e,f);n=b+32|0;k[m>>2]=k[b>>2];k[m+4>>2]=k[b+4>>2];k[m+8>>2]=k[b+8>>2];k[m+12>>2]=k[b+12>>2];k[e>>2]=k[s>>2];k[e+4>>2]=k[s+4>>2];k[e+8>>2]=k[s+8>>2];k[e+12>>2]=k[s+12>>2];k[f>>2]=k[n>>2];k[f+4>>2]=k[n+4>>2];k[f+8>>2]=k[n+8>>2];k[f+12>>2]=k[n+12>>2];if(!(l<4.0&+hy(m,e,f)<4.0)){uB(g,b,3,.5,f,e);wx(a,f);wx(a,e);break}e=a+24|0;f=a+8|0;d=+p[o>>3];g=0;while(1){c=+p[b+(g<<4)>>3];if(!(c>d))if(c<+p[a>>3]){p[a>>3]=c;c=d}else c=d;else p[o>>3]=c;d=+p[b+(g<<4)+8>>3];if(!(d>+p[e>>3])){if(d<+p[f>>3])p[f>>3]=d}else p[e>>3]=d;g=g+1|0;if((g|0)==4)break;else d=c}}while(0);r=q;return}function xx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,f=0.0,g=0.0,h=0.0,j=0.0,l=0.0,m=0.0,n=0.0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0;I=r;r=r+208|0;F=I+176|0;H=I+144|0;G=I+112|0;B=I+80|0;C=I+48|0;D=I+16|0;E=I;y=k[b+8>>2]|0;A=k[y+144>>2]|0;z=y+16|0;k[F>>2]=k[z>>2];k[F+4>>2]=k[z+4>>2];k[F+8>>2]=k[z+8>>2];k[F+12>>2]=k[z+12>>2];k[F+16>>2]=k[z+16>>2];k[F+20>>2]=k[z+20>>2];k[F+24>>2]=k[z+24>>2];k[F+28>>2]=k[z+28>>2];y=k[(k[y+8>>2]|0)+88>>2]|0;k[G>>2]=0;k[G+4>>2]=0;k[G+8>>2]=0;k[G+12>>2]=0;k[G+16>>2]=0;k[G+20>>2]=0;k[G+24>>2]=0;k[G+28>>2]=0;if(!y){k[a>>2]=k[F>>2];k[a+4>>2]=k[F+4>>2];k[a+8>>2]=k[F+8>>2];k[a+12>>2]=k[F+12>>2];k[a+16>>2]=k[F+16>>2];k[a+20>>2]=k[F+20>>2];k[a+24>>2]=k[F+24>>2];k[a+28>>2]=k[F+28>>2]}else{z=F+16|0;if(+p[F>>3]==+p[z>>3]?(c=F+8|0,d=F+24|0,+p[c>>3]==+p[d>>3]):0){p[c>>3]=1797693134862315708145274.0e284;p[F>>3]=1797693134862315708145274.0e284;p[d>>3]=-1797693134862315708145274.0e284;p[z>>3]=-1797693134862315708145274.0e284}a:do if((k[y>>2]|0)>0){o=F+24|0;q=F+8|0;s=H+16|0;t=H+24|0;u=A+144|0;v=y+12|0;b=0;c=0;e=0.0;w=0;x=k[y+8>>2]|0;while(1){k[H>>2]=k[G>>2];k[H+4>>2]=k[G+4>>2];k[H+8>>2]=k[G+8>>2];k[H+12>>2]=k[G+12>>2];k[H+16>>2]=k[G+16>>2];k[H+20>>2]=k[G+20>>2];k[H+24>>2]=k[G+24>>2];k[H+28>>2]=k[G+28>>2];switch(k[x>>2]|0){case 1:case 0:{l=+p[x+8>>3];m=+p[x+24>>3];h=l-m;f=+p[x+16>>3];n=+p[x+32>>3];j=f-n;m=l+m;n=f+n;p[x+80>>3]=h;p[x+88>>3]=j;p[x+96>>3]=m;p[x+104>>3]=n;f=+p[z>>3];if(h>f){p[z>>3]=h;f=h}g=+p[F>>3];if(h<g){p[F>>3]=h;g=h}h=+p[o>>3];if(j>h){p[o>>3]=j;h=j}l=+p[q>>3];if(j<l)p[q>>3]=j;else j=l;if(m>f)p[z>>3]=m;if(m<g)p[F>>3]=m;if(n>h)p[o>>3]=n;if(n<j)p[q>>3]=n;break}case 3:case 2:{d=x+80|0;J=x+8|0;Hx(B,k[J+4>>2]|0,k[J>>2]|0,F);k[d>>2]=k[B>>2];k[d+4>>2]=k[B+4>>2];k[d+8>>2]=k[B+8>>2];k[d+12>>2]=k[B+12>>2];k[d+16>>2]=k[B+16>>2];k[d+20>>2]=k[B+20>>2];k[d+24>>2]=k[B+24>>2];k[d+28>>2]=k[B+28>>2];break}case 5:case 4:{J=x+80|0;d=x+8|0;Hx(C,k[d+4>>2]|0,k[d>>2]|0,F);k[J>>2]=k[C>>2];k[J+4>>2]=k[C+4>>2];k[J+8>>2]=k[C+8>>2];k[J+12>>2]=k[C+12>>2];k[J+16>>2]=k[C+16>>2];k[J+20>>2]=k[C+20>>2];k[J+24>>2]=k[C+24>>2];k[J+28>>2]=k[C+28>>2];break}case 6:{J=x+80|0;d=x+8|0;Hx(D,k[d+4>>2]|0,k[d>>2]|0,F);k[J>>2]=k[D>>2];k[J+4>>2]=k[D+4>>2];k[J+8>>2]=k[D+8>>2];k[J+12>>2]=k[D+12>>2];k[J+16>>2]=k[D+16>>2];k[J+20>>2]=k[D+20>>2];k[J+24>>2]=k[D+24>>2];k[J+28>>2]=k[D+28>>2];break}case 7:{J=By(56)|0;d=x+112|0;k[d>>2]=J;J=tO(k[x+40>>2]|0)|0;K=k[d>>2]|0;k[K>>2]=J;i[K+48>>0]=i[135891+(k[x+24>>2]|0)>>0]|0;k[H>>2]=c;p[s>>3]=e;k[t>>2]=k[t>>2]&-128|b&127;K=k[u>>2]|0;K=Tb[k[K>>2]&63](K,H,1)|0;J=k[d>>2]|0;k[J+4>>2]=K;YA(E,A,J);f=+p[x+8>>3];h=+p[x+16>>3];d=k[d>>2]|0;g=+p[d+32>>3];j=+p[d+40>>3];switch(i[d+48>>0]|0){case 108:{l=f;n=f+g;break}case 110:{n=g*.5;l=f-n;n=f+n;break}case 114:{l=f-g;n=f;break}default:{l=0.0;n=0.0}}m=h+ +p[d+16>>3];j=m-j;p[x+80>>3]=l;p[x+88>>3]=j;p[x+96>>3]=n;p[x+104>>3]=m;f=+p[z>>3];if(l>f){p[z>>3]=l;f=l}g=+p[F>>3];if(l<g){p[F>>3]=l;g=l}h=+p[o>>3];if(j>h){p[o>>3]=j;h=j}l=+p[q>>3];if(j<l)p[q>>3]=j;else j=l;if(n>f)p[z>>3]=n;if(n<g)p[F>>3]=n;if(m>h)p[o>>3]=m;if(m<j)p[q>>3]=m;if(!(k[v>>2]|0))k[v>>2]=99;break}case 10:{c=k[x+16>>2]|0;e=+p[x+8>>3];break}case 15:{b=k[x+8>>2]|0;break}default:{}}w=w+1|0;if((w|0)>=(k[y>>2]|0))break a;else x=x+120|0}}while(0);k[a>>2]=k[F>>2];k[a+4>>2]=k[F+4>>2];k[a+8>>2]=k[F+8>>2];k[a+12>>2]=k[F+12>>2];k[a+16>>2]=k[F+16>>2];k[a+20>>2]=k[F+20>>2];k[a+24>>2]=k[F+24>>2];k[a+28>>2]=k[F+28>>2]}r=I;return}function yx(a,b){a=a|0;b=b|0;var c=0.0,d=0,e=0,f=0.0,g=0.0,h=0,m=0,n=0,q=0,s=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,ba=0,ca=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0,xa=0,ya=0,za=0,Aa=0,Ba=0,Ca=0,Da=0,Ea=0,Fa=0,Ga=0,Ha=0,Ia=0,Ja=0,Ka=0,La=0,Ma=0,Na=0,Oa=0,Pa=0,Qa=0,Ra=0,Sa=0,Ta=0,Ua=0,Va=0,Wa=0,Xa=0;Wa=r;r=r+240|0;Ra=Wa+32|0;Ua=Wa+24|0;Ta=Wa+16|0;n=Wa+8|0;q=Wa;Sa=Wa+96|0;Oa=Wa+88|0;Pa=Wa+84|0;Qa=Wa+80|0;Na=Wa+104|0;Va=Wa+64|0;Ka=a+152|0;e=k[Ka>>2]|0;La=a+352|0;g=+p[La>>3];x=+p[a+432>>3];f=g*x/72.0;p[a+488>>3]=f;c=+p[a+440>>3];g=g*c/72.0;p[a+496>>3]=g;p[a+520>>3]=x/72.0;c=c/72.0;d=a+528|0;p[d>>3]=c;if(e&4096|k[13607])p[d>>3]=-c;Ia=a+360|0;Fa=(k[Ia>>2]|0)==0;x=+((k[a+448>>2]|0)>>>0);w=+((k[a+452>>2]|0)>>>0);Ja=a+368|0;p[Ja>>3]=(Fa?x:w)/f;Ha=a+376|0;p[Ha>>3]=(Fa?w:x)/g;MD(a,lB(b,ks(b,0,137762,0)|0,176676)|0);Fa=a+160|0;k[Fa>>2]=0;Ga=px(a)|0;k[Ga+4>>2]=0;k[Ga+8>>2]=b;k[Ga+12>>2]=0;Ga=b+8|0;Jx(a,k[(k[Ga>>2]|0)+12>>2]|0,b);iD(a,b);if(e&2){ED(a,170825);d=ss(b,177114)|0;if((d|0)!=0?(i[d>>0]|0)!=0:0)ED(a,d);d=ss(b,137686)|0;if((d|0)!=0?(i[d>>0]|0)!=0:0)DD(a,d);Kx(a,b);d=Kt(b)|0;if(d)do{e=ss(d,176965)|0;if((e|0)!=0?(i[e>>0]|0)!=0:0)DD(a,e);e=ss(d,173708)|0;if((e|0)!=0?(i[e>>0]|0)!=0:0)ED(a,e);e=ss(d,137658)|0;do if((e|0)!=0?(i[e>>0]|0)!=0:0){if(!(oO(e,58)|0)){DD(a,e);break}h=tO(e)|0;e=CO(h,145961)|0;if(e)do{if(i[e>>0]|0)DD(a,e);e=CO(0,145961)|0}while((e|0)!=0);vP(h)}while(0);e=ss(d,137686)|0;if((e|0)!=0?(i[e>>0]|0)!=0:0)DD(a,e);e=Es(b,d)|0;if(e)do{h=ss(e,176965)|0;do if((h|0)!=0?(i[h>>0]|0)!=0:0){if(!(oO(h,58)|0)){DD(a,h);break}m=tO(h)|0;h=CO(m,145961)|0;if(h)do{if(i[h>>0]|0)DD(a,h);h=CO(0,145961)|0}while((h|0)!=0);vP(m)}while(0);h=ss(e,137686)|0;if((h|0)!=0?(i[h>>0]|0)!=0:0)DD(a,h);e=Gs(b,e)|0}while((e|0)!=0);d=Lt(b,d)|0}while((d|0)!=0)}d=Kt(b)|0;if(d)do{i[(k[d+8>>2]|0)+116>>0]=0;d=Lt(b,d)|0}while((d|0)!=0);m=k[a>>2]|0;d=k[m+312>>2]|0;Ea=a+156|0;k[Ea>>2]=d;m=k[m+316>>2]|0;if(!m)if((d|0)>1?(k[Ka>>2]&64|0)==0:0){k[n>>2]=k[a+52>>2];Yr(0,135894,n)|0;k[Ea>>2]=1;k[Fa>>2]=1;e=0;Da=55}else{h=1;e=0;Da=54}else{e=m+4|0;if((k[m>>2]|0)>1?(k[Ka>>2]&64|0)==0:0){k[q>>2]=k[a+52>>2];Yr(0,135894,q)|0;k[m+8>>2]=(k[Ea>>2]|0)+1;d=k[Ea>>2]|0}h=k[e>>2]|0;e=m+8|0;Da=54}if((Da|0)==54?(k[Fa>>2]=h,(h|0)<=(d|0)):0)Da=55;if((Da|0)==55){G=a+196|0;H=a+172|0;I=a+164|0;J=a+200|0;K=a+168|0;L=a+196|0;M=a+16|0;N=Va+4|0;O=Va+8|0;P=a+164|0;Q=a+320|0;R=a+240|0;S=a+288|0;T=a+328|0;U=a+248|0;V=a+296|0;W=a+304|0;X=a+312|0;Y=a+12|0;Z=a+472|0;_=a+456|0;$=a+336|0;ba=a+344|0;ca=a+256|0;ea=a+264|0;fa=a+272|0;ga=a+280|0;ha=a+384|0;ia=a+504|0;ja=a+392|0;ka=a+512|0;la=a+256|0;ma=Oa+4|0;na=a+188|0;oa=a+192|0;pa=a+184|0;qa=a+176|0;ra=a+180|0;sa=a+172|0;ta=a+288|0;ua=a+304|0;va=a+504|0;wa=a+456|0;xa=a+476|0;ya=a+460|0;za=a+480|0;Aa=a+464|0;Ba=a+484|0;Ca=a+468|0;while(1){F=k[(k[a>>2]|0)+316>>2]|0;if((k[((F|0)==0?Ea:F)>>2]|0)>1)mD(a);d=H;h=k[d>>2]|0;d=k[d+4>>2]|0;F=G;k[F>>2]=h;k[F+4>>2]=d;a:do if((h|0)>-1?((d|0)>-1?(h|0)<(k[I>>2]|0):0):0)do{if((d|0)>=(k[K>>2]|0))break a;E=k[M>>2]|0;F=k[Ka>>2]|0;if((k[Fa>>2]|0)>1|(h|0)>0){$r(Va,128,Na);h=E+212|0;m=k[h>>2]|0;Fx(a,Va);cs(Va,m)|0;d=k[N>>2]|0;if(d>>>0>=(k[O>>2]|0)>>>0){as(Va,1)|0;d=k[N>>2]|0}i[d>>0]=0;D=k[Va>>2]|0;k[N>>2]=D;k[h>>2]=D}else m=0;QE(ss(b,135929)|0);C=G;D=k[C>>2]|0;C=k[C+4>>2]|0;h=P;d=k[h>>2]|0;h=k[h+4>>2]|0;n=(k[Ia>>2]|0)==0;c=+((n?D:C)|0);g=+p[Q>>3];v=g*c-+p[R>>3];p[S>>3]=v;f=+((n?C:D)|0);w=+p[T>>3];x=f*w-+p[U>>3];p[V>>3]=x;p[W>>3]=g+v;p[X>>3]=w+x;if(!(k[(k[Y>>2]|0)+28>>2]|0)){k[Z>>2]=k[_>>2];k[Z+4>>2]=k[_+4>>2];k[Z+8>>2]=k[_+8>>2];k[Z+12>>2]=k[_+12>>2]}else{D=k[Z>>2]|0;C=k[wa>>2]|0;k[Z>>2]=(D|0)<(C|0)?D:C;C=k[xa>>2]|0;D=k[ya>>2]|0;k[xa>>2]=(C|0)<(D|0)?C:D;D=k[za>>2]|0;C=k[Aa>>2]|0;k[za>>2]=(D|0)>(C|0)?D:C;C=k[Ba>>2]|0;D=k[Ca>>2]|0;k[Ba>>2]=(C|0)>(D|0)?C:D}q=k[Ka>>2]|0;s=+p[$>>3];x=+p[ba>>3];if(!(q&128)){s=g*(c-+((n?d:h)|0)*.5)+s;x=w*(f-+((n?h:d)|0)*.5)+x;u=x;v=s;s=g+s;g=w+x}else{w=+p[Ja>>3]*.5;g=+p[Ha>>3]*.5;u=x-g;v=s-w;s=s+w;g=x+g}p[ca>>3]=v;p[ea>>3]=u;p[fa>>3]=s;p[ga>>3]=g;do if(n){f=+p[La>>3];p[ia>>3]=+p[ha>>3]/f-v;c=+p[ja>>3];if(!(k[13607]|q&4096)){p[ka>>3]=c/f-u;break}else{p[ka>>3]=-g-c/f;break}}else{f=+p[La>>3];p[ka>>3]=-g-+p[ja>>3]/f;c=+p[ha>>3];if(!(k[13607]|q&4096)){p[va>>3]=c/f-v;break}else{p[va>>3]=-s-c/f;break}}while(0);kD(a);DD(a,173315);ED(a,170825);do if(F&4259840){if((k[E+208>>2]|0)==0?(j[E+260>>1]&1)==0:0)break;do if(!(F&655360)){d=0;h=0}else{D=F&131072;h=D>>>16^2;d=h+2|0;k[E+264>>2]=h;h=By(d<<4)|0;k[h>>2]=k[ta>>2];k[h+4>>2]=k[ta+4>>2];k[h+8>>2]=k[ta+8>>2];k[h+12>>2]=k[ta+12>>2];C=h+16|0;k[C>>2]=k[ua>>2];k[C+4>>2]=k[ua+4>>2];k[C+8>>2]=k[ua+8>>2];k[C+12>>2]=k[ua+12>>2];if(D)break;dy(h)}while(0);if(!(F&8192))hD(a,h,h,d)|0;k[E+272>>2]=h;k[E+268>>2]=d}while(0);if((F&32768|0)!=0?(Ma=k[(k[Ga>>2]|0)+12>>2]|0,(Ma|0)!=0):0)k[E+192>>2]=k[Ma>>2];D=(F&4|0)!=0;do if(!D){d=E+208|0;if((k[d>>2]|0)==0?(j[E+260>>1]&1)==0:0)break;k[Ra>>2]=k[la>>2];k[Ra+4>>2]=k[la+4>>2];k[Ra+8>>2]=k[la+8>>2];k[Ra+12>>2]=k[la+12>>2];k[Ra+16>>2]=k[la+16>>2];k[Ra+20>>2]=k[la+20>>2];k[Ra+24>>2]=k[la+24>>2];k[Ra+28>>2]=k[la+28>>2];vx(a,Ra);yD(a,k[d>>2]|0,k[E+228>>2]|0,k[E+244>>2]|0,k[E+212>>2]|0)}while(0);d=ss(b,177114)|0;if(!d){n=1;d=173223}else{C=(i[d>>0]|0)==0;n=C&1;d=C?173223:d}q=k[Ka>>2]|0;h=(i[d>>0]|0)==116;do if(q&256){if(!h){h=n;Da=101;break}if(qO(d,173828)|0){h=n;Da=101}}else{if(!h){h=n;Da=101;break}Da=(qO(d,173828)|0)==0;h=Da?1:n;d=Da?173223:d;Da=101}while(0);do if((Da|0)==101){Da=0;if((q&33554432|0)!=0&(h|0)!=0)break;if(!((Bx(d,Oa,Pa)|0)<<24>>24)){ED(a,d);DD(a,173828);k[Ra>>2]=k[la>>2];k[Ra+4>>2]=k[la+4>>2];k[Ra+8>>2]=k[la+8>>2];k[Ra+12>>2]=k[la+12>>2];k[Ra+16>>2]=k[la+16>>2];k[Ra+20>>2]=k[la+20>>2];k[Ra+24>>2]=k[la+24>>2];k[Ra+28>>2]=k[la+28>>2];JD(a,Ra,1);break}k[Qa>>2]=0;d=k[Oa>>2]|0;ED(a,d);DD(a,173828);Lx(b,Qa)|0;h=k[ma>>2]|0;n=iB(b,k[13617]|0,0,0)|0;c=+o[Pa>>2];if(!h)FD(a,173315,n,c);else FD(a,h,n,c);C=(k[Qa>>2]|0)>>>1&1|2;k[Ra>>2]=k[la>>2];k[Ra+4>>2]=k[la+4>>2];k[Ra+8>>2]=k[la+8>>2];k[Ra+12>>2]=k[la+12>>2];k[Ra+16>>2]=k[la+16>>2];k[Ra+20>>2]=k[la+20>>2];k[Ra+24>>2]=k[la+24>>2];k[Ra+28>>2]=k[la+28>>2];JD(a,Ra,C);vP(d)}while(0);d=k[Ga>>2]|0;C=k[(k[d+8>>2]|0)+88>>2]|0;if(C){k[Sa>>2]=1e3;d=Cy(16e3)|0;do if((k[C>>2]|0)>0){y=1;A=0;q=1;B=k[C+8>>2]|0;h=0;while(1){n=k[B>>2]|0;b:do switch(n|0){case 1:case 0:{i[t>>0]=i[ca>>0];i[t+1>>0]=i[ca+1>>0];i[t+2>>0]=i[ca+2>>0];i[t+3>>0]=i[ca+3>>0];i[t+4>>0]=i[ca+4>>0];i[t+5>>0]=i[ca+5>>0];i[t+6>>0]=i[ca+6>>0];i[t+7>>0]=i[ca+7>>0];w=+p[t>>3];i[t>>0]=i[ea>>0];i[t+1>>0]=i[ea+1>>0];i[t+2>>0]=i[ea+2>>0];i[t+3>>0]=i[ea+3>>0];i[t+4>>0]=i[ea+4>>0];i[t+5>>0]=i[ea+5>>0];i[t+6>>0]=i[ea+6>>0];i[t+7>>0]=i[ea+7>>0];x=+p[t>>3];i[t>>0]=i[fa>>0];i[t+1>>0]=i[fa+1>>0];i[t+2>>0]=i[fa+2>>0];i[t+3>>0]=i[fa+3>>0];i[t+4>>0]=i[fa+4>>0];i[t+5>>0]=i[fa+5>>0];i[t+6>>0]=i[fa+6>>0];i[t+7>>0]=i[fa+7>>0];s=+p[t>>3];z=B+80|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];u=+p[t>>3];z=B+96|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];v=+p[t>>3];z=B+104|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];if(!(s>=u)|!(v>=w)|!(+p[t>>3]>=x)){n=y;break b}z=B+88|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];x=+p[t>>3];i[t>>0]=i[ga>>0];i[t+1>>0]=i[ga+1>>0];i[t+2>>0]=i[ga+2>>0];i[t+3>>0]=i[ga+3>>0];i[t+4>>0]=i[ga+4>>0];i[t+5>>0]=i[ga+5>>0];i[t+6>>0]=i[ga+6>>0];i[t+7>>0]=i[ga+7>>0];if(!(+p[t>>3]>=x)){n=y;break b}w=+p[B+24>>3];p[d>>3]=+p[B+8>>3]-w;x=+p[B+32>>3];p[d+8>>3]=+p[B+16>>3]-x;p[d+16>>3]=w;p[d+24>>3]=x;HD(a,d,2,(n|0)==0?y:0);n=y;break}case 3:case 2:{i[t>>0]=i[ca>>0];i[t+1>>0]=i[ca+1>>0];i[t+2>>0]=i[ca+2>>0];i[t+3>>0]=i[ca+3>>0];i[t+4>>0]=i[ca+4>>0];i[t+5>>0]=i[ca+5>>0];i[t+6>>0]=i[ca+6>>0];i[t+7>>0]=i[ca+7>>0];w=+p[t>>3];i[t>>0]=i[ea>>0];i[t+1>>0]=i[ea+1>>0];i[t+2>>0]=i[ea+2>>0];i[t+3>>0]=i[ea+3>>0];i[t+4>>0]=i[ea+4>>0];i[t+5>>0]=i[ea+5>>0];i[t+6>>0]=i[ea+6>>0];i[t+7>>0]=i[ea+7>>0];x=+p[t>>3];i[t>>0]=i[fa>>0];i[t+1>>0]=i[fa+1>>0];i[t+2>>0]=i[fa+2>>0];i[t+3>>0]=i[fa+3>>0];i[t+4>>0]=i[fa+4>>0];i[t+5>>0]=i[fa+5>>0];i[t+6>>0]=i[fa+6>>0];i[t+7>>0]=i[fa+7>>0];s=+p[t>>3];z=B+80|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];u=+p[t>>3];z=B+96|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];v=+p[t>>3];z=B+104|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];if(!(s>=u)|!(v>=w)|!(+p[t>>3]>=x)){n=y;break b}z=B+88|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];x=+p[t>>3];i[t>>0]=i[ga>>0];i[t+1>>0]=i[ga+1>>0];i[t+2>>0]=i[ga+2>>0];i[t+3>>0]=i[ga+3>>0];i[t+4>>0]=i[ga+4>>0];i[t+5>>0]=i[ga+5>>0];i[t+6>>0]=i[ga+6>>0];i[t+7>>0]=i[ga+7>>0];if(!(+p[t>>3]>=x)){n=y;break b}n=B+8|0;d=Mx(d,Sa,k[n+4>>2]|0,k[n>>2]|0)|0;ID(a,d,k[n>>2]|0,(k[B>>2]|0)==2?y:0);n=y;break}case 5:case 4:{i[t>>0]=i[ca>>0];i[t+1>>0]=i[ca+1>>0];i[t+2>>0]=i[ca+2>>0];i[t+3>>0]=i[ca+3>>0];i[t+4>>0]=i[ca+4>>0];i[t+5>>0]=i[ca+5>>0];i[t+6>>0]=i[ca+6>>0];i[t+7>>0]=i[ca+7>>0];w=+p[t>>3];i[t>>0]=i[ea>>0];i[t+1>>0]=i[ea+1>>0];i[t+2>>0]=i[ea+2>>0];i[t+3>>0]=i[ea+3>>0];i[t+4>>0]=i[ea+4>>0];i[t+5>>0]=i[ea+5>>0];i[t+6>>0]=i[ea+6>>0];i[t+7>>0]=i[ea+7>>0];x=+p[t>>3];i[t>>0]=i[fa>>0];i[t+1>>0]=i[fa+1>>0];i[t+2>>0]=i[fa+2>>0];i[t+3>>0]=i[fa+3>>0];i[t+4>>0]=i[fa+4>>0];i[t+5>>0]=i[fa+5>>0];i[t+6>>0]=i[fa+6>>0];i[t+7>>0]=i[fa+7>>0];s=+p[t>>3];z=B+80|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];u=+p[t>>3];z=B+96|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];v=+p[t>>3];z=B+104|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];if(!(s>=u)|!(v>=w)|!(+p[t>>3]>=x)){n=y;break b}z=B+88|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];x=+p[t>>3];i[t>>0]=i[ga>>0];i[t+1>>0]=i[ga+1>>0];i[t+2>>0]=i[ga+2>>0];i[t+3>>0]=i[ga+3>>0];i[t+4>>0]=i[ga+4>>0];i[t+5>>0]=i[ga+5>>0];i[t+6>>0]=i[ga+6>>0];i[t+7>>0]=i[ga+7>>0];if(!(+p[t>>3]>=x)){n=y;break b}n=B+8|0;d=Mx(d,Sa,k[n+4>>2]|0,k[n>>2]|0)|0;KD(a,d,k[n>>2]|0,0,0,(k[B>>2]|0)==4?y&255:0);n=y;break}case 6:{i[t>>0]=i[ca>>0];i[t+1>>0]=i[ca+1>>0];i[t+2>>0]=i[ca+2>>0];i[t+3>>0]=i[ca+3>>0];i[t+4>>0]=i[ca+4>>0];i[t+5>>0]=i[ca+5>>0];i[t+6>>0]=i[ca+6>>0];i[t+7>>0]=i[ca+7>>0];w=+p[t>>3];i[t>>0]=i[ea>>0];i[t+1>>0]=i[ea+1>>0];i[t+2>>0]=i[ea+2>>0];i[t+3>>0]=i[ea+3>>0];i[t+4>>0]=i[ea+4>>0];i[t+5>>0]=i[ea+5>>0];i[t+6>>0]=i[ea+6>>0];i[t+7>>0]=i[ea+7>>0];x=+p[t>>3];i[t>>0]=i[fa>>0];i[t+1>>0]=i[fa+1>>0];i[t+2>>0]=i[fa+2>>0];i[t+3>>0]=i[fa+3>>0];i[t+4>>0]=i[fa+4>>0];i[t+5>>0]=i[fa+5>>0];i[t+6>>0]=i[fa+6>>0];i[t+7>>0]=i[fa+7>>0];s=+p[t>>3];z=B+80|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];u=+p[t>>3];z=B+96|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];v=+p[t>>3];z=B+104|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];if(!(s>=u)|!(v>=w)|!(+p[t>>3]>=x)){n=y;break b}z=B+88|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];x=+p[t>>3];i[t>>0]=i[ga>>0];i[t+1>>0]=i[ga+1>>0];i[t+2>>0]=i[ga+2>>0];i[t+3>>0]=i[ga+3>>0];i[t+4>>0]=i[ga+4>>0];i[t+5>>0]=i[ga+5>>0];i[t+6>>0]=i[ga+6>>0];i[t+7>>0]=i[ga+7>>0];if(!(+p[t>>3]>=x)){n=y;break b}n=B+8|0;d=Mx(d,Sa,k[n+4>>2]|0,k[n>>2]|0)|0;LD(a,d,k[n>>2]|0);n=y;break}case 7:{i[t>>0]=i[ca>>0];i[t+1>>0]=i[ca+1>>0];i[t+2>>0]=i[ca+2>>0];i[t+3>>0]=i[ca+3>>0];i[t+4>>0]=i[ca+4>>0];i[t+5>>0]=i[ca+5>>0];i[t+6>>0]=i[ca+6>>0];i[t+7>>0]=i[ca+7>>0];w=+p[t>>3];i[t>>0]=i[ea>>0];i[t+1>>0]=i[ea+1>>0];i[t+2>>0]=i[ea+2>>0];i[t+3>>0]=i[ea+3>>0];i[t+4>>0]=i[ea+4>>0];i[t+5>>0]=i[ea+5>>0];i[t+6>>0]=i[ea+6>>0];i[t+7>>0]=i[ea+7>>0];x=+p[t>>3];i[t>>0]=i[fa>>0];i[t+1>>0]=i[fa+1>>0];i[t+2>>0]=i[fa+2>>0];i[t+3>>0]=i[fa+3>>0];i[t+4>>0]=i[fa+4>>0];i[t+5>>0]=i[fa+5>>0];i[t+6>>0]=i[fa+6>>0];i[t+7>>0]=i[fa+7>>0];s=+p[t>>3];z=B+80|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];u=+p[t>>3];z=B+96|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];v=+p[t>>3];z=B+104|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];if(!(s>=u)|!(v>=w)|!(+p[t>>3]>=x)){n=y;break b}z=B+88|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];x=+p[t>>3];i[t>>0]=i[ga>>0];i[t+1>>0]=i[ga+1>>0];i[t+2>>0]=i[ga+2>>0];i[t+3>>0]=i[ga+3>>0];i[t+4>>0]=i[ga+4>>0];i[t+5>>0]=i[ga+5>>0];i[t+6>>0]=i[ga+6>>0];i[t+7>>0]=i[ga+7>>0];if(!(+p[t>>3]>=x)){n=y;break b}p[d>>3]=+p[B+8>>3];p[d+8>>3]=+p[B+16>>3];n=k[B+112>>2]|0;k[Ra>>2]=k[d>>2];k[Ra+4>>2]=k[d+4>>2];k[Ra+8>>2]=k[d+8>>2];k[Ra+12>>2]=k[d+12>>2];CD(a,Ra,n);n=y;break}case 8:{ED(a,k[B+8>>2]|0);n=1;break}case 9:{DD(a,k[B+8>>2]|0);n=1;break}case 13:{n=B+16|0;if((k[B+8>>2]|0)!=2){y=k[n+36>>2]|0;z=k[y+12>>2]|0;x=+o[y+8>>2];n=~~(+da(+(+p[B+40>>3]-+p[B+24>>3]),+(+p[B+32>>3]-+p[n>>3]))*180.0/3.141592653589793);ED(a,k[y+4>>2]|0);FD(a,z,n,x);n=2;break b}Xa=k[B+68>>2]|0;y=k[Xa+4>>2]|0;z=k[Xa+12>>2]|0;g=+o[Xa+8>>2];f=+p[B+40>>3];c=+p[n>>3];if(f==c?+p[B+48>>3]==+p[B+24>>3]:0)n=0;else n=~~(+aa(+((c-f)/+p[B+32>>3]))*180.0/3.141592653589793);ED(a,y);FD(a,z,n,g);n=3;break}case 14:{Yr(0,135941,Ta)|0;n=y;break}case 12:{if(!q){n=y;q=0;break b}Yr(0,135981,Ua)|0;n=y;q=0;break}case 11:{Cx(k[B+8>>2]|0)|0;GD(a,54028);n=y;h=54028;break}default:n=y}while(0);A=A+1|0;if((A|0)>=(k[C>>2]|0))break;else{y=n;B=B+120|0}}if(!h)break;GD(a,k[(k[a>>2]|0)+336>>2]|0)}while(0);vP(d);d=k[Ga>>2]|0}d=k[d+12>>2]|0;if(d)ty(a,4,d);if(D){Xa=(k[a>>2]|0)+28|0;k[Xa>>2]=(k[Xa>>2]|0)+1}else{if(!((k[E+208>>2]|0)==0?(j[E+260>>1]&1)==0:0))zD(a);Xa=(k[a>>2]|0)+28|0;k[Xa>>2]=(k[Xa>>2]|0)+1;Ax(a,b,F)}c:do if(!(F&1)){if(F&16){sD(a);d=Kt(b)|0;if(d)do{h=Es(b,d)|0;if(h)do{Ox(a,h);h=Gs(b,h)|0}while((h|0)!=0);d=Lt(b,d)|0}while((d|0)!=0);tD(a);qD(a);d=Kt(b)|0;if(d)do{Nx(a,d);d=Lt(b,d)|0}while((d|0)!=0);rD(a);break}if(!(F&8)){d=Kt(b)|0;if(!d)break;while(1){Nx(a,d);h=Es(b,d)|0;if(h)do{Nx(a,k[((k[h>>2]&3|0)==2?h:h+-32|0)+28>>2]|0);Ox(a,h);h=Gs(b,h)|0}while((h|0)!=0);d=Lt(b,d)|0;if(!d)break c}}qD(a);d=Kt(b)|0;if(d)do{h=k[Ga>>2]|0;d:do if((k[h+180>>2]|0)<1)Da=173;else{n=1;while(1){if(ju(k[(k[h+184>>2]|0)+(n<<2)>>2]|0,d)|0)break d;h=k[Ga>>2]|0;if((n|0)>=(k[h+180>>2]|0)){Da=173;break}else n=n+1|0}}while(0);if((Da|0)==173){Da=0;Nx(a,d)}d=Lt(b,d)|0}while((d|0)!=0);rD(a);sD(a);d=Kt(b)|0;if(d)do{h=Es(b,d)|0;if(h)do{n=k[Ga>>2]|0;e:do if((k[n+180>>2]|0)<1)Da=181;else{q=1;while(1){if(ju(k[(k[n+184>>2]|0)+(q<<2)>>2]|0,h)|0)break e;n=k[Ga>>2]|0;if((q|0)>=(k[n+180>>2]|0)){Da=181;break}else q=q+1|0}}while(0);if((Da|0)==181){Da=0;Ox(a,h)}h=Gs(b,h)|0}while((h|0)!=0);d=Lt(b,d)|0}while((d|0)!=0);tD(a)}else{qD(a);d=Kt(b)|0;if(d)do{Nx(a,d);d=Lt(b,d)|0}while((d|0)!=0);rD(a);sD(a);d=Kt(b)|0;if(d)do{h=Es(b,d)|0;if(h)do{Ox(a,h);h=Gs(b,h)|0}while((h|0)!=0);d=Lt(b,d)|0}while((d|0)!=0);tD(a)}while(0);if(D)Ax(a,b,F);lD(a);if(m){ds(Va);k[E+212>>2]=m}h=(l[L>>0]|l[L+1>>0]<<8|l[L+2>>0]<<16|l[L+3>>0]<<24)+(l[na>>0]|l[na+1>>0]<<8|l[na+2>>0]<<16|l[na+3>>0]<<24)|0;d=(l[J>>0]|l[J+1>>0]<<8|l[J+2>>0]<<16|l[J+3>>0]<<24)+(l[oa>>0]|l[oa+1>>0]<<8|l[oa+2>>0]<<16|l[oa+3>>0]<<24)|0;Xa=G;k[Xa>>2]=h;k[Xa+4>>2]=d;do if((h|0)>-1){if(!((d|0)>-1?(h|0)<(k[I>>2]|0):0)){Da=198;break}if((d|0)>=(k[K>>2]|0))Da=198}else Da=198;while(0);if((Da|0)==198){Da=0;m=k[pa>>2]|0;if(!m){d=k[qa>>2]|0;k[J>>2]=d}else{h=k[sa>>2]|0;k[G>>2]=h}h=(l[ra>>0]|l[ra+1>>0]<<8|l[ra+2>>0]<<16|l[ra+3>>0]<<24)+h|0;d=d+m|0;Xa=G;k[Xa>>2]=h;k[Xa+4>>2]=d;if((h|0)<=-1)break a}}while((d|0)>-1?(h|0)<(k[I>>2]|0):0);while(0);Xa=k[(k[a>>2]|0)+316>>2]|0;if((k[((Xa|0)==0?Ea:Xa)>>2]|0)>1)nD(a);if(!e){h=0;d=(k[Fa>>2]|0)+1|0}else{h=e+4|0;d=k[e>>2]|0}k[Fa>>2]=d;if((d|0)>(k[Ea>>2]|0))break;else e=h}}jD(a);qx(a);r=Wa;return}function zx(a){a=a|0;var b=0,c=0,d=0;b=k[13571]|0;if(!b){b=Lr(54288,k[12815]|0)|0;k[13571]=b}if(!(Tb[k[b>>2]&63](b,a,4)|0)){c=k[13571]|0;d=k[c>>2]|0;b=tO(a)|0;Tb[d&63](c,b,1)|0;b=1}else b=0;return b|0}function Ax(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0.0,h=0,m=0,n=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0;W=r;r=r+128|0;w=W+72|0;U=W+64|0;T=W+120|0;Q=W;R=W+112|0;S=W+104|0;x=b+8|0;d=k[x>>2]|0;if((k[d+180>>2]|0)>=1){M=a+156|0;N=(c&4|0)!=0;O=a+16|0;P=Q+32|0;y=Q+16|0;z=Q+8|0;B=Q+24|0;C=Q+48|0;E=Q+40|0;F=Q+56|0;G=(c&8|0)==0;H=R+4|0;I=a+160|0;v=1;while(1){u=k[(k[d+184>>2]|0)+(v<<2)>>2]|0;a:do if((k[M>>2]|0)>=2?(K=lB(u,ks(u,0,137750,0)|0,176676)|0,(Px(k[a>>2]|0,k[I>>2]|0,k[M>>2]|0,K)|0)<<24>>24==0):0){if((i[K>>0]|0)==0?(L=Kt(u)|0,(L|0)!=0):0){d=L;do{if((Qx(a,u,d)|0)<<24>>24){V=9;break a}d=Lt(u,d)|0}while((d|0)!=0)}}else V=9;while(0);if((V|0)==9){V=0;if(N)Ax(a,u,c);n=px(a)|0;k[n+4>>2]=1;k[n+8>>2]=u;k[n+12>>2]=1;n=u+8|0;Jx(a,k[(k[n>>2]|0)+12>>2]|0,u);oD(a,u);q=k[O>>2]|0;s=q+208|0;if(!(k[s>>2]|0))t=(j[q+260>>1]&1)!=0;else t=1;QE(ss(u,135929)|0);if(!(N|t^1)){m=(k[n>>2]|0)+16|0;k[w>>2]=k[m>>2];k[w+4>>2]=k[m+4>>2];k[w+8>>2]=k[m+8>>2];k[w+12>>2]=k[m+12>>2];k[w+16>>2]=k[m+16>>2];k[w+20>>2]=k[m+20>>2];k[w+24>>2]=k[m+24>>2];k[w+28>>2]=k[m+28>>2];vx(a,w);yD(a,k[s>>2]|0,k[q+228>>2]|0,k[q+244>>2]|0,k[q+212>>2]|0)}k[T>>2]=0;d=Lx(u,T)|0;if(!d)m=0;else{GD(a,d);m=k[T>>2]&1}d=l[(k[n>>2]|0)+112>>0]|0;do if(!(d&1)){if(d&2){d=mB(u,k[13608]|0,141964)|0;e=mB(u,k[13609]|0,141972)|0;V=34;break}if(d&8){d=mB(u,k[13612]|0,141980)|0;e=mB(u,k[13613]|0,141988)|0;V=34;break}if(d&4){d=mB(u,k[13610]|0,141996)|0;e=mB(u,k[13611]|0,142004)|0;V=34;break}d=ss(u,176965)|0;if(!d)e=0;else e=(i[d>>0]|0)==0?0:d;d=ss(u,173708)|0;if(!d)d=e;else d=(i[d>>0]|0)==0?e:d;f=ss(u,137658)|0;if(f)e=(i[f>>0]|0)==0?e:f;if(!((m|0)!=0&(e|0)!=0)?(A=ss(u,177114)|0,(A|0)!=0):0){h=(i[A>>0]|0)==0;e=h?e:A;if(!h){V=34;break}}d=(d|0)==0?173315:d;e=(e|0)==0?170825:e;k[R>>2]=0;if(!m){h=e;m=0}else{h=e;e=m;V=36}}else{d=mB(u,k[13608]|0,141948)|0;e=mB(u,k[13609]|0,141956)|0;V=34}while(0);if((V|0)==34){k[R>>2]=0;d=(d|0)==0?173315:d;h=(e|0)==0?170825:e;e=1;V=36}do if((V|0)==36){V=0;if(!((Bx(h,R,S)|0)<<24>>24)){ED(a,h);m=e;break}ED(a,k[R>>2]|0);e=k[H>>2]|0;f=iB(u,k[13617]|0,0,0)|0;g=+o[S>>2];if(!e)FD(a,173315,f,g);else FD(a,e,f,g);m=(k[T>>2]|0)>>>1&1|2}while(0);e=k[13616]|0;if(((e|0)!=0?(D=ts(u,e)|0,(D|0)!=0):0)?(i[D>>0]|0)!=0:0)OD(a,+jB(u,k[13616]|0,1.0,0.0));f=k[T>>2]|0;do if(f&4){e=iB(u,k[13615]|0,1,0)|0;if(e|m){h=(k[n>>2]|0)+16|0;k[Q>>2]=k[h>>2];k[Q+4>>2]=k[h+4>>2];k[Q+8>>2]=k[h+8>>2];k[Q+12>>2]=k[h+12>>2];h=(k[n>>2]|0)+32|0;k[P>>2]=k[h>>2];k[P+4>>2]=k[h+4>>2];k[P+8>>2]=k[h+8>>2];k[P+12>>2]=k[h+12>>2];p[y>>3]=+p[P>>3];p[B>>3]=+p[z>>3];p[C>>3]=+p[Q>>3];p[F>>3]=+p[E>>3];if(!e)DD(a,173828);else DD(a,d);Pz(a,Q,4,f,m)}}else{if(!(f&64)){if(iB(u,k[13615]|0,1,0)|0){DD(a,d);h=(k[n>>2]|0)+16|0;k[w>>2]=k[h>>2];k[w+4>>2]=k[h+4>>2];k[w+8>>2]=k[h+8>>2];k[w+12>>2]=k[h+12>>2];k[w+16>>2]=k[h+16>>2];k[w+20>>2]=k[h+20>>2];k[w+24>>2]=k[h+24>>2];k[w+28>>2]=k[h+28>>2];JD(a,w,m);break}if(!m)break;DD(a,173828);h=(k[n>>2]|0)+16|0;k[w>>2]=k[h>>2];k[w+4>>2]=k[h+4>>2];k[w+8>>2]=k[h+8>>2];k[w+12>>2]=k[h+12>>2];k[w+16>>2]=k[h+16>>2];k[w+20>>2]=k[h+20>>2];k[w+24>>2]=k[h+24>>2];k[w+28>>2]=k[h+28>>2];JD(a,w,m);break}m=(k[n>>2]|0)+16|0;k[Q>>2]=k[m>>2];k[Q+4>>2]=k[m+4>>2];k[Q+8>>2]=k[m+8>>2];k[Q+12>>2]=k[m+12>>2];m=(k[n>>2]|0)+32|0;k[P>>2]=k[m>>2];k[P+4>>2]=k[m+4>>2];k[P+8>>2]=k[m+8>>2];k[P+12>>2]=k[m+12>>2];p[y>>3]=+p[P>>3];p[B>>3]=+p[z>>3];p[C>>3]=+p[Q>>3];p[F>>3]=+p[E>>3];if(!(iB(u,k[13615]|0,1,0)|0))DD(a,173828);else DD(a,d);if((ux(a,Q,h,0)|0)>1){m=ht(u)|0;k[U>>2]=m;Yr(3,136027,U)|0}m=(k[n>>2]|0)+16|0;k[w>>2]=k[m>>2];k[w+4>>2]=k[m+4>>2];k[w+8>>2]=k[m+8>>2];k[w+12>>2]=k[m+12>>2];k[w+16>>2]=k[m+16>>2];k[w+20>>2]=k[m+20>>2];k[w+24>>2]=k[m+24>>2];k[w+28>>2]=k[m+28>>2];JD(a,w,0)}while(0);vP(k[R>>2]|0);d=k[(k[n>>2]|0)+12>>2]|0;if(d)ty(a,5,d);if(t){if(N){t=(k[n>>2]|0)+16|0;k[w>>2]=k[t>>2];k[w+4>>2]=k[t+4>>2];k[w+8>>2]=k[t+8>>2];k[w+12>>2]=k[t+12>>2];k[w+16>>2]=k[t+16>>2];k[w+20>>2]=k[t+20>>2];k[w+24>>2]=k[t+24>>2];k[w+28>>2]=k[t+28>>2];vx(a,w);yD(a,k[s>>2]|0,k[q+228>>2]|0,k[q+244>>2]|0,k[q+212>>2]|0)}zD(a)}if(!G?(J=Kt(u)|0,(J|0)!=0):0){e=J;do{Nx(a,e);d=Es(u,e)|0;if(d)do{Ox(a,d);d=Gs(u,d)|0}while((d|0)!=0);e=Lt(u,e)|0}while((e|0)!=0)}pD(a,b);qx(a);if(!N)Ax(a,u,c)}d=k[x>>2]|0;if((v|0)>=(k[d+180>>2]|0))break;else v=v+1|0}}r=W;return}function Bx(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0;j=r;r=r+16|0;f=j;e=j+4|0;if(((Gx(a,0,e)|0)==0?(g=k[e>>2]|0,d=k[g>>2]|0,(d|0)>=2):0)?(h=g+8|0,(k[k[h>>2]>>2]|0)!=0):0){if((d|0)>2)Yr(0,136042,f)|0;f=Cy((uO(a)|0)+1|0)|0;k[b>>2]=f;rO(f,k[k[h>>2]>>2]|0)|0;if(!(k[(k[h>>2]|0)+12>>2]|0))k[b+4>>2]=0;else{f=k[b>>2]|0;f=f+((uO(f)|0)+1)|0;k[b+4>>2]=f;rO(f,k[(k[h>>2]|0)+12>>2]|0)|0}d=k[h>>2]|0;do if(!(i[d+8>>0]|0))if(!(i[d+20>>0]|0)){o[c>>2]=0.0;break}else{o[c>>2]=1.0-+o[d+16>>2];break}else k[c>>2]=k[d+4>>2];while(0);vP(k[g+4>>2]|0);vP(k[h>>2]|0);vP(g);d=1}else{k[b>>2]=0;d=0}r=j;return d|0}function Cx(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0;s=r;r=r+176|0;o=s+24|0;n=s+16|0;m=s+8|0;l=s;p=s+32|0;if(i[136108]|0){$r(54324,128,136109);i[136108]=0}$r(p,128,s+48|0);h=p+4|0;j=p+8|0;c=0;b=0;d=a;a:while(1){e=d;b:while(1){d=i[e>>0]|0;c:do if(!(d<<24>>24))d=0;else while(1){if((_L(d<<24>>24)|0)==0?(g=i[e>>0]|0,g<<24>>24!=44):0){d=g;break c}e=e+1|0;d=i[e>>0]|0;if(!(d<<24>>24)){d=0;break}}while(0);f=d<<24>>24;switch(f|0){case 0:{q=31;break a}case 41:case 40:break;default:{q=10;break b}}e=e+1|0;switch(f|0){case 41:if(!(b<<24>>24)){q=19;break a}else{b=0;continue b}case 40:if(!(b<<24>>24)){b=1;continue b}else{q=17;break a}default:break b}}d:do if((q|0)==10){q=0;f=d;while(1){switch(f<<24>>24|0){case 0:case 44:case 41:case 40:break d;default:{}}d=k[h>>2]|0;if(d>>>0>=(k[j>>2]|0)>>>0){as(p,1)|0;d=k[h>>2]|0}k[h>>2]=d+1;i[d>>0]=f;d=e+1|0;f=i[d>>0]|0;e=d}}while(0);if(!(b<<24>>24)){if((c|0)==63){q=22;break}d=k[13582]|0;if(d>>>0>=(k[13583]|0)>>>0){as(54324,1)|0;d=k[13582]|0}k[13582]=d+1;i[d>>0]=0;k[54028+(c<<2)>>2]=k[13582];c=c+1|0}d=k[h>>2]|0;if(d>>>0>=(k[j>>2]|0)>>>0){as(p,1)|0;d=k[h>>2]|0}i[d>>0]=0;d=k[p>>2]|0;k[h>>2]=d;cs(54324,d)|0;d=k[13582]|0;if(d>>>0>=(k[13583]|0)>>>0){as(54324,1)|0;d=k[13582]|0}k[13582]=d+1;i[d>>0]=0;d=e}do if((q|0)==17){k[l>>2]=a;Yr(1,136237,l)|0;k[13507]=0;ds(p)}else if((q|0)==19){k[m>>2]=a;Yr(1,136271,m)|0;k[13507]=0;ds(p)}else if((q|0)==22){k[n>>2]=a;Yr(0,136299,n)|0;k[13570]=0;ds(p)}else if((q|0)==31){if(b<<24>>24){k[o>>2]=a;Yr(1,136322,o)|0;k[13507]=0;ds(p);break}k[54028+(c<<2)>>2]=0;ds(p);b=k[13582]|0;if(b>>>0>=(k[13583]|0)>>>0){as(54324,1)|0;b=k[13582]|0}i[b>>0]=0;k[13582]=k[13581]}while(0);r=s;return 54028}function Dx(a){a=a|0;var b=0;b=k[13585]|0;if(!a){if((b|0)>0?(a=b+-1|0,k[13585]=a,(a|0)==0):0)vP(k[13586]|0)}else{k[13585]=b+1;if(!b){a=tO(AM(1,0)|0)|0;k[13586]=a}}return}
function Ex(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0.0,h=0,j=0,l=0.0,m=0.0,n=0.0,o=0.0,q=0.0,s=0.0,t=0.0,u=0.0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ia=0,ja=0,ka=0,la=0,ma=0;ma=r;r=r+432|0;Y=ma+384|0;X=ma+368|0;fa=ma+352|0;ea=ma+344|0;da=ma+320|0;ca=ma+296|0;ba=ma+280|0;la=ma+264|0;ka=ma+256|0;aa=ma+240|0;$=ma+232|0;W=ma+224|0;V=ma+216|0;T=ma+208|0;R=ma+200|0;d=ma+184|0;c=ma+176|0;_=ma+128|0;ga=ma+96|0;ia=ma+64|0;P=ma+32|0;Q=ma;if(i[137280]|0)cB();a:do if((qu(b,173447,0,1)|0)!=0?(Z=b+8|0,(k[(k[Z>>2]|0)+8>>2]|0)!=0):0){c=Kt(b)|0;b:do if(c){y=ga+8|0;z=ga+16|0;A=ga+24|0;B=ia+8|0;C=ia+16|0;D=ia+24|0;E=_+8|0;F=_+12|0;G=_+32|0;H=_+4|0;I=Q+8|0;J=Q+16|0;K=Q+24|0;L=_+16|0;M=P+8|0;N=P+16|0;O=P+24|0;c:while(1){d=k[c+8>>2]|0;s=+p[d+16>>3];p[d+48>>3]=s-+p[d+88>>3];t=+p[d+24>>3];u=+p[d+80>>3]*.5;p[d+56>>3]=t-u;p[d+64>>3]=s+ +p[d+96>>3];p[d+72>>3]=t+u;d=Es(b,c)|0;if(d)do{x=k[(k[d+8>>2]|0)+8>>2]|0;if(x){w=x+4|0;if((k[w>>2]|0)<=0)break c;e=k[x>>2]|0;f=_;h=e;j=f+48|0;do{k[f>>2]=k[h>>2];f=f+4|0;h=h+4|0}while((f|0)<(j|0));f=Y;h=e;j=f+48|0;do{k[f>>2]=k[h>>2];f=f+4|0;h=h+4|0}while((f|0)<(j|0));Rx(ga,Y);l=+p[ga>>3];n=+p[y>>3];m=+p[z>>3];g=+p[A>>3];if((k[w>>2]|0)>0){v=0;do{if((v|0)>0){e=(k[x>>2]|0)+(v*48|0)|0;f=_;h=e;j=f+48|0;do{k[f>>2]=k[h>>2];f=f+4|0;h=h+4|0}while((f|0)<(j|0));f=Y;h=e;j=f+48|0;do{k[f>>2]=k[h>>2];f=f+4|0;h=h+4|0}while((f|0)<(j|0));Rx(ia,Y);q=+p[ia>>3];s=+p[B>>3];t=+p[C>>3];u=+p[D>>3];l=l<q?l:q;n=n<s?n:s;m=m>t?m:t;g=g>u?g:u}e=k[E>>2]|0;if(e){j=k[_>>2]|0;k[X>>2]=k[L>>2];k[X+4>>2]=k[L+4>>2];k[X+8>>2]=k[L+8>>2];k[X+12>>2]=k[L+12>>2];k[Y>>2]=k[j>>2];k[Y+4>>2]=k[j+4>>2];k[Y+8>>2]=k[j+8>>2];k[Y+12>>2]=k[j+12>>2];bx(P,X,Y,1.0,e);q=+p[P>>3];s=+p[M>>3];t=+p[N>>3];u=+p[O>>3];l=l<q?l:q;n=n<s?n:s;m=m>t?m:t;g=g>u?g:u}e=k[F>>2]|0;if(e){j=(k[_>>2]|0)+((k[H>>2]|0)+-1<<4)|0;k[X>>2]=k[G>>2];k[X+4>>2]=k[G+4>>2];k[X+8>>2]=k[G+8>>2];k[X+12>>2]=k[G+12>>2];k[Y>>2]=k[j>>2];k[Y+4>>2]=k[j+4>>2];k[Y+8>>2]=k[j+8>>2];k[Y+12>>2]=k[j+12>>2];bx(Q,X,Y,1.0,e);q=+p[Q>>3];s=+p[I>>3];t=+p[J>>3];u=+p[K>>3];l=l<q?l:q;n=n<s?n:s;m=m>t?m:t;g=g>u?g:u}v=v+1|0}while((v|0)<(k[w>>2]|0))}p[x+8>>3]=l;p[x+16>>3]=n;p[x+24>>3]=m;p[x+32>>3]=g}d=Gs(b,d)|0}while((d|0)!=0);c=Lt(b,c)|0;if(!c)break b}Wa(136429,135860,3899,136443)}while(0);k[a+168>>2]=b;d=a+293|0;i[d>>0]=0;c=ss(b,142240)|0;if((c|0)!=0?(k[R>>2]=Y,k[R+4>>2]=X,S=UN(c,142247,R)|0,(S|0)>0):0){u=+p[Y>>3]*72.0;c=a+208|0;p[c>>3]=u;p[a+200>>3]=u;if((S|0)>1)p[c>>3]=+p[X>>3]*72.0;i[d>>0]=1}d=a+292|0;i[d>>0]=0;c=ss(b,136459)|0;if((c|0)!=0?(k[T>>2]=Y,k[T+4>>2]=X,U=UN(c,142247,T)|0,(U|0)>0):0){u=+p[Y>>3]*72.0;c=a+224|0;p[c>>3]=u;p[a+216>>3]=u;if((U|0)>1)p[c>>3]=+p[X>>3]*72.0;i[d>>0]=1}c=a+294|0;i[c>>0]=0;d=a+232|0;U=(k[(k[Z>>2]|0)+8>>2]|0)+48|0;k[d>>2]=k[U>>2];k[d+4>>2]=k[U+4>>2];k[d+8>>2]=k[U+8>>2];k[d+12>>2]=k[U+12>>2];d=k[(k[Z>>2]|0)+8>>2]|0;if(+p[d+48>>3]>.001?+p[d+56>>3]>.001:0)i[c>>0]=1;k[a+288>>2]=(i[d+81>>0]|0)==0?0:90;c=a+196|0;k[c>>2]=136463;d=ss(b,136466)|0;if((d|0)!=0?(i[d>>0]|0)!=0:0)k[c>>2]=d;f=a+256|0;c=(k[Z>>2]|0)+16|0;k[f>>2]=k[c>>2];k[f+4>>2]=k[c+4>>2];k[f+8>>2]=k[c+8>>2];k[f+12>>2]=k[c+12>>2];k[f+16>>2]=k[c+16>>2];k[f+20>>2]=k[c+20>>2];k[f+24>>2]=k[c+24>>2];k[f+28>>2]=k[c+28>>2];f=ks(b,0,137712,0)|0;k[13615]=f;f=ks(b,0,137703,0)|0;k[13616]=f;f=mB(0,k[13633]|0,143881)|0;k[a+320>>2]=f;u=+jB(0,k[13632]|0,14.0,1.0);p[a+328>>3]=u;k[a+336>>2]=54348;f=ht(b)|0;k[a+188>>2]=f;f=a+304|0;c=k[f>>2]|0;if(c){vP(c);k[f>>2]=0}v=a+308|0;c=k[v>>2]|0;if(c){vP(c);k[v>>2]=0}w=a+316|0;c=k[w>>2]|0;if(c){vP(c);k[w>>2]=0}c=ss(b,136474)|0;if(c){e=ss(b,136481)|0;j=a+296|0;k[j>>2]=(e|0)==0?136490:e;e=ss(b,136494)|0;d=a+300|0;e=(e|0)==0?136507:e;k[d>>2]=e;e=yO(k[j>>2]|0,e)|0;if(e){k[V>>2]=i[e>>0];Yr(0,136509,V)|0;k[d>>2]=176676}c=tO(c)|0;k[f>>2]=c;c=CO(c,k[j>>2]|0)|0;if(c){d=0;f=0;h=c;while(1){c=d+1|0;if((d|0)<(f|0))e=k[v>>2]|0;else{f=f+128|0;e=k[v>>2]|0;if(!e)e=Cy(f<<2)|0;else e=Ey(e,f<<2)|0;k[v>>2]=e}k[e+(c<<2)>>2]=h;h=CO(0,k[j>>2]|0)|0;if(!h)break;else d=c}if(c){V=Ey(k[v>>2]|0,(c<<2)+8|0)|0;k[v>>2]=V;k[V>>2]=0;k[(k[v>>2]|0)+(d+2<<2)>>2]=0}else c=0}else c=0;j=a+312|0;k[j>>2]=c;h=ss(b,136610)|0;if((h|0)!=0?(i[h>>0]|0)!=0:0){c=Cy((k[j>>2]<<2)+8|0)|0;d=k[j>>2]|0;do if((d|0)<1)ja=68;else{e=0;f=1;while(1){if((Px(a,f,d,h)|0)<<24>>24){e=e+1|0;k[c+(e<<2)>>2]=f}d=k[j>>2]|0;if((f|0)>=(d|0)){d=e;break}else f=f+1|0}if(!d){ja=68;break}k[c>>2]=d;k[c+(d+1<<2)>>2]=(k[j>>2]|0)+1}while(0);if((ja|0)==68){k[W>>2]=h;Yr(0,136622,W)|0;vP(c);c=0}k[w>>2]=c}}else{k[v>>2]=0;k[a+312>>2]=1}Dx(1);c=XD(a)|0;d:do if(c){F=a+56|0;G=a+184|0;H=a+192|0;I=b+48|0;J=a+28|0;E=c;e:while(1){c=k[F>>2]|0;if(!c){k[E+20>>2]=0;c=0}else{k[E+20>>2]=k[c+8>>2];c=k[c+12>>2]|0}k[E+24>>2]=c;k[E+12>>2]=a;k[E+28>>2]=k[G>>2];k[E+620>>2]=60436;k[E+624>>2]=k[15137];if(!(k[(k[Z>>2]|0)+8>>2]|0)){ja=77;break}c=E+52|0;W=eD(E,k[c>>2]|0)|0;e=E+56|0;k[e>>2]=W;switch(W|0){case 999:{ja=80;break e}case 21:{ja=E+152|0;k[ja>>2]=k[ja>>2]|1;break}case 24:{ja=E+152|0;k[ja>>2]=k[ja>>2]|520;break}default:{d=ss(b,136776)|0;f:do if(!d)ja=88;else switch(i[d>>0]|0){case 110:if(!(qO(d+1|0,136788)|0)){d=1;break f}else{ja=88;break f}case 101:if(!(qO(d+1|0,136798)|0)){d=16;break f}else{ja=88;break f}default:{ja=88;break f}}while(0);if((ja|0)==88)d=0;ja=E+152|0;k[ja>>2]=k[ja>>2]|d}}d=k[H>>2]|0;g:do if(!d){k[13590]=0;ja=97}else{do if(k[d+152>>2]&32){if(qO(k[c>>2]|0,k[d+52>>2]|0)|0)break;c=k[13590]|0;if(!c){ja=97;break g}k[c+8>>2]=E;k[E+36>>2]=k[(k[13590]|0)+36>>2];ja=99;break g}while(0);gD(d);k[H>>2]=0;k[J>>2]=0;k[13590]=0;ja=97}while(0);do if((ja|0)==97){ja=0;if(fD(E)|0)break;k[H>>2]=E;ja=99}while(0);if((ja|0)==99){ja=0;k[E+8>>2]=0;k[E+104>>2]=60552;d=k[E>>2]|0;do if(!(i[d+292>>0]|0))if((k[e>>2]|0)==300){u=+p[(k[E+68>>2]|0)+8>>3];p[E+248>>3]=u;p[E+240>>3]=u;break}else{p[E+248>>3]=4.0;p[E+240>>3]=4.0;break}else{W=E+240|0;V=d+216|0;k[W>>2]=k[V>>2];k[W+4>>2]=k[V+4>>2];k[W+8>>2]=k[V+8>>2];k[W+12>>2]=k[V+12>>2]}while(0);h:do if(!(i[d+293>>0]|0))switch(k[e>>2]|0){case 300:{W=E+416|0;V=(k[E+84>>2]|0)+8|0;k[W>>2]=k[V>>2];k[W+4>>2]=k[V+4>>2];k[W+8>>2]=k[V+8>>2];k[W+12>>2]=k[V+12>>2];break h}case 30:case 21:case 22:case 4:case 3:case 2:{p[E+424>>3]=36.0;p[E+416>>3]=36.0;break h}default:{W=E+416|0;k[W>>2]=0;k[W+4>>2]=0;k[W+8>>2]=0;k[W+12>>2]=0;break h}}else{W=E+416|0;V=d+200|0;k[W>>2]=k[V>>2];k[W+4>>2]=k[V+4>>2];k[W+8>>2]=k[V+8>>2];k[W+12>>2]=k[V+12>>2]}while(0);c=k[d+192>>2]|0;g=+p[(k[(k[Z>>2]|0)+8>>2]|0)+24>>3];i:do if(!(g!=0.0)){do if(c){if(!(i[c+128>>0]|0))break;W=E+432|0;V=c+112|0;k[W>>2]=k[V>>2];k[W+4>>2]=k[V+4>>2];k[W+8>>2]=k[V+8>>2];k[W+12>>2]=k[V+12>>2];break i}while(0);c=E+432|0;if((k[e>>2]|0)==300){W=(k[E+84>>2]|0)+40|0;k[c>>2]=k[W>>2];k[c+4>>2]=k[W+4>>2];k[c+8>>2]=k[W+8>>2];k[c+12>>2]=k[W+12>>2];break}else{p[E+440>>3]=96.0;p[c>>3]=96.0;break}}else{p[E+440>>3]=g;p[E+432>>3]=g}while(0);q=+p[d+272>>3];t=+p[d+280>>3];s=+p[d+256>>3];u=+p[d+264>>3];o=+p[E+240>>3];g=s-o;p[E+208>>3]=g;l=+p[E+248>>3];n=u-l;p[E+216>>3]=n;o=q+o;p[E+224>>3]=o;l=t+l;p[E+232>>3]=l;g=o-g;n=l-n;p[_>>3]=1.0;c=k[(k[Z>>2]|0)+8>>2]|0;l=+p[c+64>>3];do if(l>.001){m=+p[c+72>>3];if(!(m>.001)){o=1.0;l=g;m=n;break}g=g==0.0?l:g;n=n==0.0?m:n;if(!(l<g|m<n)?!(m>n&(l>g&(i[c+80>>0]|0)!=0)):0){o=1.0;l=g;m=n;break}l=l/g;o=m/n;o=l<o?l:o;p[_>>3]=o;l=g;m=n}else{o=1.0;l=g;m=n}while(0);n=(q+s)*.5;p[ga>>3]=n;g=(t+u)*.5;p[ia>>3]=g;D=E+360|0;k[D>>2]=k[d+288>>2];l=o*l;p[Y>>3]=l;m=o*m;p[X>>3]=m;c=ss(b,136808)|0;if(c){d=uP((uO(c)|0)+1|0)|0;e=uP((uO(c)|0)+1|0)|0;k[ba>>2]=Y;k[ba+4>>2]=X;k[ba+8>>2]=_;k[ba+12>>2]=d;do if((UN(c,136817,ba)|0)==4){c=Qt(k[I>>2]|0,d,0)|0;if(!c)break;W=k[c+8>>2]|0;p[ga>>3]=+p[W+16>>3];p[ia>>3]=+p[W+24>>3]}else{k[ca>>2]=Y;k[ca+4>>2]=X;k[ca+8>>2]=_;k[ca+12>>2]=d;k[ca+16>>2]=e;if((UN(c,136837,ca)|0)!=4){k[da>>2]=Y;k[da+4>>2]=X;k[da+8>>2]=_;k[da+12>>2]=ga;k[da+16>>2]=ia;UN(c,136857,da)|0;break}c=Qt(k[I>>2]|0,d,0)|0;if(!c)break;W=k[c+8>>2]|0;p[ga>>3]=+p[W+16>>3];p[ia>>3]=+p[W+24>>3]}while(0);vP(d);vP(e);l=+p[Y>>3];m=+p[X>>3];o=+p[_>>3];n=+p[ga>>3];g=+p[ia>>3]}V=E+368|0;p[V>>3]=l;W=E+376|0;p[W>>3]=m;C=E+352|0;p[C>>3]=o;p[E+336>>3]=n;p[E+344>>3]=g;f=k[E>>2]|0;s=+p[V>>3];o=+p[W>>3];W=(k[D>>2]|0)==0;q=W?o:s;o=W?s:o;s=+p[E+416>>3];t=+p[E+424>>3];do if(!(i[f+294>>0]|0))ja=143;else{if(!(k[E+152>>2]&32)){ja=143;break}m=+p[f+232>>3]-s*2.0;n=+p[f+240>>3]-t*2.0;do if(m<.0001){k[E+164>>2]=1;c=1}else{c=~~(o/m);d=E+164|0;k[d>>2]=c;if(!(o-m*+(c|0)>.0001))break;c=c+1|0;k[d>>2]=c}while(0);do if(n<.0001){k[E+168>>2]=1;d=1}else{d=~~(q/n);e=E+168|0;k[e>>2]=d;if(!(q-n*+(d|0)>.0001))break;d=d+1|0;k[e>>2]=d}while(0);W=ha(d,c)|0;k[E+204>>2]=W;g=m;l=n;o=o<m?o:m;q=q<n?q:n}while(0);do if((ja|0)==143){ja=0;do if(!(k[E+68>>2]|0)){g=0.0;l=0.0}else{W=k[E+84>>2]|0;g=+p[W+24>>3]-s*2.0;g=g<0.0?0.0:g;l=+p[W+32>>3]-t*2.0;if(!(l<0.0))break;l=0.0}while(0);k[E+204>>2]=1;k[E+168>>2]=1;k[E+164>>2]=1;g=g<o?o:g;if(!(l<q)){d=1;c=1;break}l=q;d=1;c=1}while(0);A=E+432|0;u=(s*2.0+g)*+p[A>>3]/72.0;k[E+448>>2]=~~(u+(u>=0.0?.5:-.5));B=E+440|0;u=(t*2.0+l)*+p[B>>3]/72.0;k[E+452>>2]=~~(u+(u>=0.0?.5:-.5));y=E+188|0;z=E+180|0;h=E+176|0;j=E+172|0;v=f+196|0;k[j>>2]=0;k[j+4>>2]=0;k[j+8>>2]=0;k[j+12>>2]=0;k[j+16>>2]=0;k[j+20>>2]=0;switch(i[k[v>>2]>>0]|0){case 84:{k[h>>2]=d+-1;w=0;e=0;f=0;x=-1;break}case 66:{w=0;e=0;f=0;x=1;break}case 76:{w=1;e=0;f=0;x=0;break}case 82:{k[j>>2]=c+-1;w=-1;e=0;f=0;x=0;break}default:{w=0;e=0;f=0;x=0}}W=z;k[W>>2]=w|e;k[W+4>>2]=f|x;switch(i[(k[v>>2]|0)+1>>0]|0){case 84:{k[h>>2]=d+-1;c=0;d=0;e=0;f=-1;break}case 66:{c=0;d=0;e=0;f=1;break}case 76:{c=1;d=0;e=0;f=0;break}case 82:{k[j>>2]=c+-1;c=-1;d=0;e=0;f=0;break}default:{c=0;d=0;e=0;f=0}}W=y;k[W>>2]=c|d;k[W+4>>2]=e|f;W=c+w|0;if(!((((W|0)>-1?W:0-W|0)|0)==1?(W=f+x|0,(((W|0)>-1?W:0-W|0)|0)==1):0)){W=z;k[W>>2]=0;k[W+4>>2]=1;W=y;k[W>>2]=1;k[W+4>>2]=0;k[ea>>2]=k[v>>2];Yr(0,136877,ea)|0}do if(!(i[(k[(k[Z>>2]|0)+8>>2]|0)+82>>0]|0)){g=0.0;l=0.0}else{g=g>o?(g-o)*.5:0.0;if(!(l>q)){l=0.0;break}l=(l-q)*.5}while(0);W=(k[D>>2]|0)==0;n=W?q:o;m=W?o:q;u=(W?s:t)+(W?g:l);p[E+384>>3]=u;o=(W?t:s)+(W?l:g);p[E+392>>3]=o;q=m+u;p[E+400>>3]=q;t=n+o;p[E+408>>3]=t;s=+p[C>>3];p[E+320>>3]=m/s;p[E+328>>3]=n/s;s=+p[A>>3];u=u*s/72.0;h=~~(u+(u>=0.0?.5:-.5));j=E+456|0;k[j>>2]=h;u=+p[B>>3];o=o*u/72.0;c=~~(o+(o>=0.0?.5:-.5));k[E+460>>2]=c;s=q*s/72.0;d=~~(s+(s>=0.0?.5:-.5));e=E+464|0;k[e>>2]=d;u=t*u/72.0;f=~~(u+(u>=0.0?.5:-.5));k[E+468>>2]=f;if(!W){W=j;k[W>>2]=c;k[W+4>>2]=h;W=e;k[W>>2]=f;k[W+4>>2]=d}if(!(k[E+152>>2]&128))yx(E,b);k[13590]=E}E=YD(a)|0;if(!E)break d}if((ja|0)==77){Yr(1,136723,$)|0;Dx(0);if(!(i[137280]|0)){c=-1;break a}c=k[24528]|0;la=ht(b)|0;u=+dB();k[aa>>2]=la;p[aa+8>>3]=u;FN(c,136400,aa)|0;c=-1;break a}else if((ja|0)==80){k[ka>>2]=k[c>>2];Yr(1,136744,ka)|0;Dx(0);if(!(i[137280]|0)){c=-1;break a}c=k[24528]|0;ka=ht(b)|0;u=+dB();k[la>>2]=ka;p[la+8>>3]=u;FN(c,136400,la)|0;c=-1;break a}}while(0);Dx(0);if(!(i[137280]|0))c=0;else{c=k[24528]|0;la=ht(b)|0;u=+dB();k[fa>>2]=la;p[fa+8>>3]=u;FN(c,136400,fa)|0;c=0}}else ja=5;while(0);if((ja|0)==5){Yr(1,136352,c)|0;if(!(i[137280]|0))c=-1;else{c=k[24528]|0;la=ht(b)|0;u=+dB();k[d>>2]=la;p[d+8>>3]=u;FN(c,136400,d)|0;c=-1}}r=ma;return c|0}function Fx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;g=r;r=r+144|0;f=g;e=g+8|0;c=k[a+160>>2]|0;if((c|0)>1?(k[a+152>>2]&64|0)!=0:0){cs(b,k[(k[(k[a>>2]|0)+308>>2]|0)+(c<<2)>>2]|0)|0;d=b+4|0;c=k[d>>2]|0;if(c>>>0>=(k[b+8>>2]|0)>>>0){as(b,1)|0;c=k[d>>2]|0}k[d>>2]=c+1;i[c>>0]=95}c=k[a+196>>2]|0;if((c|0)>0){a=k[a+200>>2]|0;k[f>>2]=c;k[f+4>>2]=a;TN(e,137269,f)|0;cs(b,e)|0}r=g;return}function Gx(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0.0,g=0,h=0,j=0.0,l=0.0,m=0,n=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0;v=r;r=r+16|0;q=v+8|0;p=v;n=v+12|0;u=By(12)|0;e=tO(a)|0;a:do if(!b){b=1;d=e;while(1){switch(i[d>>0]|0){case 0:break a;case 58:{b=b+1|0;break}default:{}}d=d+1|0}}while(0);m=u+4|0;k[m>>2]=e;t=By((b*12|0)+12|0)|0;h=u+8|0;k[h>>2]=t;b=CO(e,145961)|0;b:do if(b){e=0;g=b;f=1.0;b=0;while(1){d=oO(g,59)|0;if(d){w=d+1|0;i[d>>0]=0;j=+eO(w,n);if(j>=0.0?(k[n>>2]|0)==(w|0):1){s=19;break}}else j=0.0;l=j-f;if(l>0.0)if((k[13593]|0)!=0?!(l<1.0e-05&l>-1.0e-05):0){k[p>>2]=a;Yr(0,137188,p)|0;k[13593]=0;b=3;j=f}else j=f;f=f-j;if(j>0.0)i[t+(e*12|0)+8>>0]=1;if(i[g>>0]|0)k[t+(e*12|0)>>2]=g;d=e+1|0;o[t+(e*12|0)+4>>2]=j;if(f<1.0e-05&f>-1.0e-05){s=33;break b}g=CO(0,145961)|0;if(!g)break;else e=d}if((s|0)==19){if(!(k[13593]|0))b=1;else{k[q>>2]=a;Yr(1,137223,q)|0;k[13593]=0;b=2}vP(k[m>>2]|0);vP(k[h>>2]|0);vP(u);break}if(f>0.0){h=(e|0)>-1;if(h){e=0;g=0;do{e=(+o[t+(g*12|0)+4>>2]==0.0&1)+e|0;g=g+1|0}while((g|0)!=(d|0));if((e|0)>0)if(h){f=f/+(e|0);g=0;do{e=t+(g*12|0)+4|0;if(+o[e>>2]==0.0)o[e>>2]=f;g=g+1|0}while((g|0)!=(d|0));s=33}else s=33;else s=32}else s=32}else s=33}else{d=0;f=1.0;b=0;s=32}while(0);if((s|0)==32){w=t+((d+-1|0)*12|0)+4|0;o[w>>2]=f+ +o[w>>2];s=33}if((s|0)==33){while(1){e=d+-1|0;if((d|0)<=0)break;if(+o[t+(e*12|0)+4>>2]>0.0)break;else d=e}k[t+(d*12|0)>>2]=0;k[u>>2]=d;k[c>>2]=u}r=v;return b|0}function Hx(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,g=0.0,h=0,i=0.0,j=0.0,k=0,l=0.0,m=0.0,n=0.0;g=+p[b>>3];e=+p[b+8>>3];if((c|0)>1){l=e;f=e;i=g;e=g;k=1;while(1){h=b;b=b+24|0;g=+p[b>>3];if(!(g<i))if(g>e){j=g;g=i}else{j=e;g=i}else j=e;e=+p[h+32>>3];if(!(e<l))if(e>f){f=e;e=l}else e=l;k=k+1|0;if((k|0)==(c|0)){n=f;m=e;l=g;break}else{l=e;i=g;e=j}}}else{n=e;j=g;m=e;l=g}k=d+16|0;e=+p[k>>3];if(l>e){p[k>>3]=l;e=l}f=+p[d>>3];if(l<f){p[d>>3]=l;f=l}h=d+24|0;g=+p[h>>3];if(m>g){p[h>>3]=m;g=m}b=d+8|0;i=+p[b>>3];if(m<i){p[b>>3]=m;i=m}if(j>e)p[k>>3]=j;if(j<f)p[d>>3]=j;if(n>g)p[h>>3]=n;if(n<i)p[b>>3]=n;p[a>>3]=l;p[a+8>>3]=m;p[a+16>>3]=j;p[a+24>>3]=n;return}function Ix(a){a=a|0;if((k[a>>2]|0)==7)ry(k[a+112>>2]|0,1);return}function Jx(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0;j=r;r=r+144|0;h=j;d=ss(c,177192)|0;f=ss(c,177238)|0;g=ss(c,177225)|0;$r(h,128,j+16|0);if(!b)e=0;else e=k[b>>2]|0;if((d|0)!=0?(i[d>>0]|0)!=0:0)b=d;else b=ss(c,147386)|0;rx(a,e,b,f,g,sx(a,c,h)|0,c)|0;ds(h);r=j;return}function Kx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=b+8|0;b=k[e>>2]|0;if((k[b+180>>2]|0)>=1){d=1;while(1){c=k[(k[b+184>>2]|0)+(d<<2)>>2]|0;Kx(a,c);b=ss(c,176965)|0;if((b|0)!=0?(i[b>>0]|0)!=0:0)DD(a,b);b=ss(c,173708)|0;if((b|0)!=0?(i[b>>0]|0)!=0:0)DD(a,b);b=ss(c,177114)|0;if((b|0)!=0?(i[b>>0]|0)!=0:0)DD(a,b);b=ss(c,137658)|0;if((b|0)!=0?(i[b>>0]|0)!=0:0)ED(a,b);b=ss(c,137686)|0;if((b|0)!=0?(i[b>>0]|0)!=0:0)DD(a,b);b=k[e>>2]|0;if((d|0)>=(k[b+180>>2]|0))break;else d=d+1|0}}return}function Lx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;a=ss(a,177219)|0;a:do if((a|0)!=0?(i[a>>0]|0)!=0:0){Cx(a)|0;a=k[13507]|0;if(!a){a=0;c=54028}else{d=0;c=54028;while(1){while(1){if(!(qO(a,146944)|0)){a=9;break}if(!(qO(a,142042)|0)){a=12;break}if(!(qO(a,142049)|0)){a=15;break}if(!(qO(a,142024)|0)){a=18;break}c=c+4|0;a=k[c>>2]|0;if(!a){a=d;c=54028;break a}}if((a|0)==9){d=d|1;c=c+4|0}else if((a|0)==12){a=c;do{f=a;a=a+4|0;e=k[a>>2]|0;k[f>>2]=e}while((e|0)!=0);d=d|3}else if((a|0)==15){a=c;do{e=a;a=a+4|0;f=k[a>>2]|0;k[e>>2]=f}while((f|0)!=0);d=d|64}else if((a|0)==18){a=c;do{e=a;a=a+4|0;f=k[a>>2]|0;k[e>>2]=f}while((f|0)!=0);d=d|4}a=k[c>>2]|0;if(!a){a=d;c=54028;break}}}}else{a=0;c=0}while(0);k[b>>2]=a;return c|0}function Mx(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=k[b>>2]|0;if((e|0)<(d|0)){e=e<<1;e=(e|0)>(d|0)?e:d;a=Ey(a,e<<4)|0;k[b>>2]=e}if((d|0)>0){e=0;do{p[a+(e<<4)>>3]=+p[c+(e*24|0)>>3];p[a+(e<<4)+8>>3]=+p[c+(e*24|0)+8>>3];e=e+1|0}while((e|0)!=(d|0))}return a|0}function Nx(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0.0,l=0.0,n=0.0,o=0.0,q=0,r=0,s=0,u=0,v=0.0,w=0.0,x=0,y=0,z=0,A=0,B=0.0;c=k[a>>2]|0;z=b+8|0;a:do if(((((k[(k[z>>2]|0)+8>>2]|0)!=0?(Qx(a,$t(b)|0,b)|0)<<24>>24!=0:0)?(d=a+256|0,i[t>>0]=i[d>>0],i[t+1>>0]=i[d+1>>0],i[t+2>>0]=i[d+2>>0],i[t+3>>0]=i[d+3>>0],i[t+4>>0]=i[d+4>>0],i[t+5>>0]=i[d+5>>0],i[t+6>>0]=i[d+6>>0],i[t+7>>0]=i[d+7>>0],w=+p[t>>3],d=k[z>>2]|0,y=d+64|0,i[t>>0]=i[y>>0],i[t+1>>0]=i[y+1>>0],i[t+2>>0]=i[y+2>>0],i[t+3>>0]=i[y+3>>0],i[t+4>>0]=i[y+4>>0],i[t+5>>0]=i[y+5>>0],i[t+6>>0]=i[y+6>>0],i[t+7>>0]=i[y+7>>0],+p[t>>3]>=w):0)?(y=d+56|0,i[t>>0]=i[y>>0],i[t+1>>0]=i[y+1>>0],i[t+2>>0]=i[y+2>>0],i[t+3>>0]=i[y+3>>0],i[t+4>>0]=i[y+4>>0],i[t+5>>0]=i[y+5>>0],i[t+6>>0]=i[y+6>>0],i[t+7>>0]=i[y+7>>0],n=+p[t>>3],y=a+280|0,i[t>>0]=i[y>>0],i[t+1>>0]=i[y+1>>0],i[t+2>>0]=i[y+2>>0],i[t+3>>0]=i[y+3>>0],i[t+4>>0]=i[y+4>>0],i[t+5>>0]=i[y+5>>0],i[t+6>>0]=i[y+6>>0],i[t+7>>0]=i[y+7>>0],l=+p[t>>3],y=d+72|0,i[t>>0]=i[y>>0],i[t+1>>0]=i[y+1>>0],i[t+2>>0]=i[y+2>>0],i[t+3>>0]=i[y+3>>0],i[t+4>>0]=i[y+4>>0],i[t+5>>0]=i[y+5>>0],i[t+6>>0]=i[y+6>>0],i[t+7>>0]=i[y+7>>0],o=+p[t>>3],y=a+272|0,i[t>>0]=i[y>>0],i[t+1>>0]=i[y+1>>0],i[t+2>>0]=i[y+2>>0],i[t+3>>0]=i[y+3>>0],i[t+4>>0]=i[y+4>>0],i[t+5>>0]=i[y+5>>0],i[t+6>>0]=i[y+6>>0],i[t+7>>0]=i[y+7>>0],w=+p[t>>3],y=a+264|0,i[t>>0]=i[y>>0],i[t+1>>0]=i[y+1>>0],i[t+2>>0]=i[y+2>>0],i[t+3>>0]=i[y+3>>0],i[t+4>>0]=i[y+4>>0],i[t+5>>0]=i[y+5>>0],i[t+6>>0]=i[y+6>>0],i[t+7>>0]=i[y+7>>0],v=+p[t>>3],y=d+48|0,i[t>>0]=i[y>>0],i[t+1>>0]=i[y+1>>0],i[t+2>>0]=i[y+2>>0],i[t+3>>0]=i[y+3>>0],i[t+4>>0]=i[y+4>>0],i[t+5>>0]=i[y+5>>0],i[t+6>>0]=i[y+6>>0],i[t+7>>0]=i[y+7>>0],!(!(l>=n)|(o>=v?!(w>=+p[t>>3]):1))):0)?(e=d+116|0,f=k[c+28>>2]|0,(i[e>>0]|0)!=(f|0)):0){i[e>>0]=f;MD(a,ht(b)|0);c=lB(b,k[13651]|0,176676)|0;if(i[c>>0]|0)MD(a,c);c=lB(b,k[13639]|0,176676)|0;if((i[c>>0]|0)!=0?(Cx(c)|0,g=k[13507]|0,(g|0)!=0):0){c=g;d=54032;while(1){if((i[c>>0]|0)==105?(qO(c,170360)|0)==0:0)break a;c=k[d>>2]|0;if(!c)break;else d=d+4|0}}x=k[a+152>>2]|0;y=px(a)|0;k[y+4>>2]=2;k[y+8>>2]=b;k[y+12>>2]=8;do if(x&16777216){u=($t(b)|0)+8|0;if((m[(k[u>>2]|0)+178>>1]|0)>2){w=+p[(k[(k[z>>2]|0)+132>>2]|0)+16>>3]*72.0;p[y+168>>3]=+(~~(w+(w>=0.0?.5:-.5))|0);break}else{p[y+168>>3]=0.0;break}}while(0);Jx(a,k[(k[z>>2]|0)+104>>2]|0,b);do if(x&4259840){if((k[y+208>>2]|0)==0?(j[y+260>>1]&1)==0:0)break;f=Qz(b)|0;c=k[z>>2]|0;v=+p[c+16>>3];w=+p[c+24>>3];c=mB(b,k[13639]|0,176676)|0;if((i[c>>0]|0)!=0?(Cx(c)|0,q=k[13507]|0,(q|0)!=0):0){d=q;e=54028;c=0;do{u=(qO(d,146944)|0)==0;c=u?1:c;e=e+4|0;d=k[e>>2]|0}while((d|0)!=0)}else c=0;b:do if((f&-3|0)==1){r=k[(k[z>>2]|0)+12>>2]|0;g=r+8|0;d=k[g>>2]|0;if((((d|0)==4?(o=+p[r+16>>3],((~~(o+(o>=0.0?.5:-.5))|0)%90|0|0)==0):0)?+p[r+24>>3]==0.0:0)?+p[r+32>>3]==0.0:0)e=(k[r+4>>2]|c|0)!=0;else e=0;if(!((x&524288|0)==0|((r|0)==0|e))){d=(d|0)<3?1:d;f=r+4|0;q=k[f>>2]|0;q=(q|0)>1?q:1;s=k[r+44>>2]|0;e=ss(b,138617)|0;if(!e)e=0;else e=bO(e)|0;u=(e+-4|0)>>>0>56?20:e;if(!(k[f>>2]|c)){k[y+264>>2]=0;c=By(32)|0;d=k[z>>2]|0;n=+p[d+88>>3];p[c>>3]=v-n;o=+p[d+80>>3]*.5;p[c+8>>3]=w-o;p[c+16>>3]=v+n;p[c+24>>3]=w+o;d=2;break}c=k[g>>2]|0;do if((c|0)<3){if(!(+p[r+32>>3]==0.0))break;if(!(+p[r+24>>3]==0.0))break;c=y+264|0;if(k[r>>2]|0){k[c>>2]=1;c=By(32)|0;p[c>>3]=v;p[c+8>>3]=w;d=(q<<1)+-1|0;p[c+16>>3]=v+ +p[s+(d<<4)>>3];p[c+24>>3]=w+ +p[s+(d<<4)+8>>3];d=2;break b}k[c>>2]=2;c=(q<<1)+-1|0;o=+p[s+(c<<4)>>3];h=+p[s+(c<<4)+8>>3];l=6.283185307179586/+(u|0);c=By(u<<4)|0;if((u|0)>0){d=0;n=0.0}else{d=u;break b}while(1){B=o*+Z(+n);p[c+(d<<4)>>3]=B;B=h*+_(+n);p[c+(d<<4)+8>>3]=B;d=d+1|0;if((d|0)==(u|0)){d=0;break}else n=l+n}while(1){s=c+(d<<4)|0;p[s>>3]=v+ +p[s>>3];s=c+(d<<4)+8|0;p[s>>3]=w+ +p[s>>3];d=d+1|0;if((d|0)==(u|0)){d=u;break b}}}while(0);g=ha(c,q+-1|0)|0;k[y+264>>2]=2;if((c|0)<(u|0)){c=By(d<<4)|0;if((d|0)>0)e=0;else break;do{u=e+g|0;p[c+(e<<4)>>3]=v+ +p[s+(u<<4)>>3];p[c+(e<<4)+8>>3]=w+ +p[s+(u<<4)+8>>3];e=e+1|0}while((e|0)!=(d|0))}else{d=(c|0)/(u|0)|0;c=By(u<<4)|0;if((u|0)>0){e=0;f=0}else{d=u;break}while(1){r=e+g|0;p[c+(f<<4)>>3]=v+ +p[s+(r<<4)>>3];p[c+(f<<4)+8>>3]=w+ +p[s+(r<<4)+8>>3];f=f+1|0;if((f|0)==(u|0)){d=u;break}else e=e+d|0}}}else A=47}else A=47;while(0);if((A|0)==47){k[y+264>>2]=0;c=By(32)|0;d=k[z>>2]|0;p[c>>3]=v-+p[d+88>>3];B=+p[d+80>>3]*.5;p[c+8>>3]=w-B;p[c+16>>3]=v+ +p[d+96>>3];p[c+24>>3]=w+B;d=2}if(!(x&8192))hD(a,c,c,d)|0;k[y+272>>2]=c;k[y+268>>2]=d}while(0);QE(ss(b,135929)|0);uD(a,b);Pb[k[(k[(k[(k[z>>2]|0)+8>>2]|0)+4>>2]|0)+20>>2]&31](a,b);c=k[(k[z>>2]|0)+108>>2]|0;if((c|0)!=0?(i[c+81>>0]|0)!=0:0)ty(a,10,c);vD(a);qx(a)}while(0);return}function Ox(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,n=0,q=0,s=0,u=0,v=0,w=0,x=0.0,y=0.0,z=0.0,A=0.0,B=0,C=0,D=0.0,E=0.0,F=0,G=0.0,H=0.0,I=0.0,J=0.0,K=0.0,L=0.0,M=0.0,N=0,O=0,P=0.0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,Y=0,$=0,aa=0,ba=0,ca=0,ea=0,fa=0.0,ga=0.0,ha=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0,pa=0,qa=0,ra=0,sa=0,ta=0,ua=0,va=0,wa=0;wa=r;r=r+1952|0;va=wa+1808|0;sa=wa+1008|0;ca=wa+992|0;ua=wa+192|0;ta=wa+144|0;ka=wa+96|0;la=wa+48|0;ha=wa+1936|0;ma=wa;Q=sa;N=a+256|0;O=Q+32|0;do{i[Q>>0]=i[N>>0]|0;Q=Q+1|0;N=N+1|0}while((Q|0)<(O|0));na=b+8|0;c=k[na>>2]|0;d=k[c+8>>2]|0;if(((((d|0)!=0?(oa=d+16|0,i[t>>0]=i[oa>>0],i[t+1>>0]=i[oa+1>>0],i[t+2>>0]=i[oa+2>>0],i[t+3>>0]=i[oa+3>>0],i[t+4>>0]=i[oa+4>>0],i[t+5>>0]=i[oa+5>>0],i[t+6>>0]=i[oa+6>>0],i[t+7>>0]=i[oa+7>>0],y=+p[t>>3],oa=d+24|0,i[t>>0]=i[oa>>0],i[t+1>>0]=i[oa+1>>0],i[t+2>>0]=i[oa+2>>0],i[t+3>>0]=i[oa+3>>0],i[t+4>>0]=i[oa+4>>0],i[t+5>>0]=i[oa+5>>0],i[t+6>>0]=i[oa+6>>0],i[t+7>>0]=i[oa+7>>0],ga=+p[t>>3],oa=d+32|0,i[t>>0]=i[oa>>0],i[t+1>>0]=i[oa+1>>0],i[t+2>>0]=i[oa+2>>0],i[t+3>>0]=i[oa+3>>0],i[t+4>>0]=i[oa+4>>0],i[t+5>>0]=i[oa+5>>0],i[t+6>>0]=i[oa+6>>0],i[t+7>>0]=i[oa+7>>0],x=+p[t>>3],ga>=+p[sa>>3]):0)?(oa=d+8|0,i[t>>0]=i[oa>>0],i[t+1>>0]=i[oa+1>>0],i[t+2>>0]=i[oa+2>>0],i[t+3>>0]=i[oa+3>>0],i[t+4>>0]=i[oa+4>>0],i[t+5>>0]=i[oa+5>>0],i[t+6>>0]=i[oa+6>>0],i[t+7>>0]=i[oa+7>>0],+p[sa+16>>3]>=+p[t>>3]):0)?x>=+p[sa+8>>3]:0)?+p[sa+24>>3]>=y:0)oa=13;else oa=6;do if((oa|0)==6){d=k[c+96>>2]|0;if(d){k[va>>2]=k[sa>>2];k[va+4>>2]=k[sa+4>>2];k[va+8>>2]=k[sa+8>>2];k[va+12>>2]=k[sa+12>>2];k[va+16>>2]=k[sa+16>>2];k[va+20>>2]=k[sa+20>>2];k[va+24>>2]=k[sa+24>>2];k[va+28>>2]=k[sa+28>>2];if((RB(d,va)|0)<<24>>24){oa=13;break}c=k[na>>2]|0}c=k[c+108>>2]|0;if(((c|0)!=0?(i[c+81>>0]|0)!=0:0)?(k[va>>2]=k[sa>>2],k[va+4>>2]=k[sa+4>>2],k[va+8>>2]=k[sa+8>>2],k[va+12>>2]=k[sa+12>>2],k[va+16>>2]=k[sa+16>>2],k[va+20>>2]=k[sa+20>>2],k[va+24>>2]=k[sa+24>>2],k[va+28>>2]=k[sa+28>>2],(RB(c,va)|0)<<24>>24!=0):0){oa=13;break}}while(0);a:do if((oa|0)==13){ea=b+-32|0;$t(k[((k[b>>2]&3|0)==2?b:ea)+28>>2]|0)|0;f=a+156|0;b:do if((k[f>>2]|0)>=2?(e=lB(b,k[13679]|0,176676)|0,g=a+160|0,(Px(k[a>>2]|0,k[g>>2]|0,k[f>>2]|0,e)|0)<<24>>24==0):0){if(i[e>>0]|0)break a;c=b+32|0;e=0;while(1){d=k[b>>2]&3;d=lB(k[((e|0)<1?((d|0)==3?b:c):(d|0)==2?b:ea)+28>>2]|0,k[13649]|0,176676)|0;if(!(i[d>>0]|0))break b;e=e+1|0;if((Px(k[a>>2]|0,k[g>>2]|0,k[f>>2]|0,d)|0)<<24>>24)break b;if((e|0)>=2)break a}}while(0);$=b+32|0;c=uO(ht(k[((k[b>>2]&3|0)==3?b:$)+28>>2]|0)|0)|0;c=uP(c+3+(uO(ht(k[((k[b>>2]&3|0)==2?b:ea)+28>>2]|0)|0)|0)|0)|0;rO(c,ht(k[((k[b>>2]&3|0)==3?b:$)+28>>2]|0)|0)|0;ja=(at($t(k[((k[b>>2]&3|0)==2?b:ea)+28>>2]|0)|0)|0)==0;d=c+(uO(c)|0)|0;if(ja){i[d>>0]=i[176693]|0;i[d+1>>0]=i[176694]|0;i[d+2>>0]=i[176695]|0}else{i[d>>0]=i[173460]|0;i[d+1>>0]=i[173461]|0;i[d+2>>0]=i[173462]|0}nO(c,ht(k[((k[b>>2]&3|0)==2?b:ea)+28>>2]|0)|0)|0;MD(a,c);vP(c);c=lB(b,k[13680]|0,176676)|0;if(i[c>>0]|0)MD(a,c);c=lB(b,k[13674]|0,176676)|0;if(i[c>>0]|0){Cx(c)|0;c=k[13507]|0;if(!c)ja=54028;else{d=54032;while(1){if((i[c>>0]|0)==105?(qO(c,170360)|0)==0:0)break a;c=k[d>>2]|0;if(!c){ja=54028;break}else d=d+4|0}}}else ja=0;ba=a+152|0;V=k[ba>>2]|0;W=px(a)|0;k[W+4>>2]=3;k[W+8>>2]=b;k[W+12>>2]=9;ia=(ja|0)==0;if(!ia?(k[(k[na>>2]|0)+8>>2]|0)!=0:0)GD(a,ja);c=k[13695]|0;if(((c|0)!=0?(h=ts(b,c)|0,(h|0)!=0):0)?(i[h>>0]|0)!=0:0)OD(a,+jB(b,k[13695]|0,1.0,0.0));do if(V&16777216){U=($t(k[((k[b>>2]&3|0)==3?b:$)+28>>2]|0)|0)+8|0;if((m[(k[U>>2]|0)+178>>1]|0)>2){ga=+p[(k[(k[(k[((k[b>>2]&3|0)==3?b:$)+28>>2]|0)+8>>2]|0)+132>>2]|0)+16>>3]*72.0;p[W+176>>3]=+(~~(ga+(ga>=0.0?.5:-.5))|0);ga=+p[(k[(k[(k[((k[b>>2]&3|0)==2?b:ea)+28>>2]|0)+8>>2]|0)+132>>2]|0)+16>>3]*72.0;p[W+184>>3]=+(~~(ga+(ga>=0.0?.5:-.5))|0);break}else{U=W+176|0;k[U>>2]=0;k[U+4>>2]=0;k[U+8>>2]=0;k[U+12>>2]=0;break}}while(0);if(V&32768){f=k[na>>2]|0;c=k[f+96>>2]|0;if(!c)c=k[W+192>>2]|0;else{c=k[c>>2]|0;k[W+192>>2]=c}d=W+196|0;k[d>>2]=c;g=W+204|0;k[g>>2]=c;e=W+200|0;k[e>>2]=c;c=k[f+108>>2]|0;if(c)k[d>>2]=k[c>>2];c=k[f+104>>2]|0;if(c)k[e>>2]=k[c>>2];c=k[f+100>>2]|0;if(c)k[g>>2]=k[c>>2]}if(!(V&65536))e=0;else{$r(ta,128,va);c=uy(sx(a,b,ta)|0,b)|0;k[W+212>>2]=c;ds(ta);c=ss(b,177192)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0)oa=56;else{c=ss(b,147386)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0)oa=56;else d=0}if((oa|0)==56)d=uy(c,b)|0;c=ss(b,136963)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0)oa=61;else oa=59;do if((oa|0)==59){c=ss(b,136972)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0){oa=61;break}if(d){U=tO(d)|0;k[W+208>>2]=U}}while(0);if((oa|0)==61){oa=uy(c,b)|0;k[W+208>>2]=oa}c=ss(b,136980)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0)oa=68;else oa=66;do if((oa|0)==66){c=ss(b,136990)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0){oa=68;break}if(d){U=tO(d)|0;k[W+216>>2]=U}}while(0);if((oa|0)==68){oa=uy(c,b)|0;k[W+216>>2]=oa}c=ss(b,136999)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0)oa=75;else oa=73;do if((oa|0)==73){c=ss(b,137008)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0){oa=75;break}if(d){U=tO(d)|0;k[W+220>>2]=U}}while(0);if((oa|0)==75){oa=uy(c,b)|0;k[W+220>>2]=oa;oa=W+260|0;j[oa>>1]=j[oa>>1]|128}c=ss(b,137016)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0)oa=82;else oa=80;do if((oa|0)==80){c=ss(b,137025)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0){oa=82;break}if(d){U=tO(d)|0;k[W+224>>2]=U}}while(0);if((oa|0)==82){U=uy(c,b)|0;k[W+224>>2]=U;U=W+260|0;j[U>>1]=j[U>>1]|256}e=d}do if(V&8388608){c=ss(b,177225)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0)d=uy(c,b)|0;else d=0;c=ss(b,137033)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0){U=W+260|0;j[U>>1]=j[U>>1]|64;U=uy(c,b)|0;k[W+244>>2]=U}else oa=93;if((oa|0)==93?(d|0)!=0:0){U=tO(d)|0;k[W+244>>2]=U}c=ss(b,137044)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0){U=uy(c,b)|0;k[W+248>>2]=U}else oa=98;if((oa|0)==98?(d|0)!=0:0){U=tO(d)|0;k[W+248>>2]=U}c=ss(b,137056)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0){U=uy(c,b)|0;k[W+252>>2]=U;U=W+260|0;j[U>>1]=j[U>>1]|16}else oa=103;if((oa|0)==103?(d|0)!=0:0){U=tO(d)|0;k[W+252>>2]=U}c=ss(b,137067)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0){U=W+260|0;j[U>>1]=j[U>>1]|32;U=uy(c,b)|0;k[W+256>>2]=U;break}if(d){U=tO(d)|0;k[W+256>>2]=U}else d=0}else d=0;while(0);do if(V&4194304){c=ss(b,177238)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0)oa=115;else oa=113;do if((oa|0)==113){c=ss(b,137078)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0){oa=115;break}c=k[W+192>>2]|0;if(c){U=tO(c)|0;k[W+228>>2]=U}}while(0);if((oa|0)==115){U=uy(c,b)|0;k[W+228>>2]=U;U=W+260|0;j[U>>1]=j[U>>1]|1}c=ss(b,137090)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0){U=uy(c,b)|0;k[W+232>>2]=U;U=W+260|0;j[U>>1]=j[U>>1]|8}else oa=121;if((oa|0)==121?(n=k[W+192>>2]|0,(n|0)!=0):0){U=tO(n)|0;k[W+232>>2]=U}c=ss(b,137103)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0){U=uy(c,b)|0;k[W+236>>2]=U;U=W+260|0;j[U>>1]=j[U>>1]|2}else oa=126;if((oa|0)==126?(q=k[W+200>>2]|0,(q|0)!=0):0){U=tO(q)|0;k[W+236>>2]=U}c=ss(b,137115)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0){U=uy(c,b)|0;k[W+240>>2]=U;U=W+260|0;j[U>>1]=j[U>>1]|4;break}c=k[W+204>>2]|0;if(c){U=tO(c)|0;k[W+240>>2]=U}}while(0);vP(e);vP(d);do if((V&4259840|0)!=0?(Y=k[(k[na>>2]|0)+8>>2]|0,(Y|0)!=0):0){if(!(k[W+208>>2]|0)){if((V&524288|0)==0|(k[W+228>>2]|0)==0)break}else if(!(V&524288))break;G=+p[(k[a+16>>2]|0)+152>>3]*.5;G=G>2.0?G:2.0;Q=k[Y+4>>2]|0;if((Q|0)>0){R=va+16|0;S=va+32|0;T=va+48|0;f=0;g=0;h=0;U=0;do{d=k[Y>>2]|0;c=Cy(24)|0;k[c+16>>2]=1;O=(k[d+(U*48|0)+4>>2]|0)+-1|0;q=(O|0)/3|0;if((O|0)>2){d=d+(U*48|0)|0;e=0;n=c;do{O=e*3|0;N=k[d>>2]|0;F=N+(O<<4)|0;k[va>>2]=k[F>>2];k[va+4>>2]=k[F+4>>2];k[va+8>>2]=k[F+8>>2];k[va+12>>2]=k[F+12>>2];F=N+(O+1<<4)|0;k[R>>2]=k[F>>2];k[R+4>>2]=k[F+4>>2];k[R+8>>2]=k[F+8>>2];k[R+12>>2]=k[F+12>>2];F=N+(O+2<<4)|0;k[S>>2]=k[F>>2];k[S+4>>2]=k[F+4>>2];k[S+8>>2]=k[F+8>>2];k[S+12>>2]=k[F+12>>2];O=N+(O+3<<4)|0;k[T>>2]=k[O>>2];k[T+4>>2]=k[O+4>>2];k[T+8>>2]=k[O+8>>2];k[T+12>>2]=k[O+12>>2];n=Ux(va,n)|0;e=e+1|0}while((e|0)<(q|0))}if(c){B=0;O=c;d=0;while(1){N=k[O+16>>2]|0;C=sa+(B<<4)|0;F=ua+(B<<4)|0;D=+p[O>>3];E=+p[O+8>>3];do if(d){y=+p[d>>3];x=+p[d+8>>3];if(!N){z=E*2.0-x;A=D*2.0-y;break}else{z=+p[N+8>>3];A=+p[N>>3];break}}else{y=+p[N>>3];x=+p[N+8>>3];z=x;A=y;x=E*2.0-x;y=D*2.0-y}while(0);fa=+da(+(x-E),+(y-D));ga=+da(+(z-E),+(A-D))-fa;ga=fa+(ga>0.0?ga+-6.283185307179586:ga)*.5;fa=G*+Z(+ga);ga=G*+_(+ga);p[C>>3]=D+fa;p[sa+(B<<4)+8>>3]=E+ga;p[F>>3]=D-fa;p[ua+(B<<4)+8>>3]=E-ga;d=B+1|0;w=(N|0)==0;if((d|0)==50|w){u=d<<1;v=u+-1|0;if((f|0)>0){n=g;q=0;e=0;do{e=(k[n+(q<<2)>>2]|0)+e|0;q=q+1|0}while((q|0)!=(f|0));n=(f|0)>1?f:1;s=e}else{n=0;s=0}f=f+1|0;q=Ey(g,f<<2)|0;g=q;k[q+(n<<2)>>2]=u;q=Ey(h,s+u<<4)|0;h=q;do if((B|0)>-1){n=v+s|0;v=q+(s<<4)|0;k[v>>2]=k[sa>>2];k[v+4>>2]=k[sa+4>>2];k[v+8>>2]=k[sa+8>>2];k[v+12>>2]=k[sa+12>>2];v=q+(n<<4)|0;k[v>>2]=k[ua>>2];k[v+4>>2]=k[ua+4>>2];k[v+8>>2]=k[ua+8>>2];k[v+12>>2]=k[ua+12>>2];if(!B)break;else e=1;do{B=q+(e+s<<4)|0;v=sa+(e<<4)|0;k[B>>2]=k[v>>2];k[B+4>>2]=k[v+4>>2];k[B+8>>2]=k[v+8>>2];k[B+12>>2]=k[v+12>>2];B=q+(n-e<<4)|0;v=ua+(e<<4)|0;k[B>>2]=k[v>>2];k[B+4>>2]=k[v+4>>2];k[B+8>>2]=k[v+8>>2];k[B+12>>2]=k[v+12>>2];e=e+1|0}while((e|0)!=(d|0))}while(0);k[sa>>2]=k[C>>2];k[sa+4>>2]=k[C+4>>2];k[sa+8>>2]=k[C+8>>2];k[sa+12>>2]=k[C+12>>2];k[ua>>2]=k[F>>2];k[ua+4>>2]=k[F+4>>2];k[ua+8>>2]=k[F+8>>2];k[ua+12>>2]=k[F+12>>2];d=1}if(w)break;else{F=O;B=d;O=N;d=F}}do{O=c;c=k[c+16>>2]|0;vP(O)}while((c|0)!=0)}U=U+1|0}while((U|0)!=(Q|0))}else{h=0;g=0;f=0}k[W+276>>2]=f;k[W+280>>2]=g;if(!(V&8192)){if((f|0)>0){d=g;e=0;c=0;do{c=(k[d+(e<<2)>>2]|0)+c|0;e=e+1|0}while((e|0)!=(f|0))}else c=0;Y=h;hD(a,Y,Y,c)|0}k[W+284>>2]=h;k[W+264>>2]=2;k[W+272>>2]=h;k[W+268>>2]=k[g>>2]}while(0);wD(a,b);c=k[W+208>>2]|0;if(!((c|0)==0?(j[W+260>>1]&1)==0:0))yD(a,c,k[W+228>>2]|0,k[W+244>>2]|0,k[W+212>>2]|0);V=a+16|0;fa=+p[(k[V>>2]|0)+152>>3];QE(ss(b,135929)|0);c:do if(k[(k[na>>2]|0)+8>>2]|0){ga=+jB(b,k[13677]|0,1.0,0.0);e=lB(b,k[13658]|0,176676)|0;R=(ja|0)!=0;d:do if(R?(aa=k[ja>>2]|0,(aa|0)!=0):0){c=aa;d=ja;while(1){d=d+4|0;if((i[c>>0]|0)==116?(qO(c,146960)|0)==0:0){h=1;break d}c=k[d>>2]|0;if(!c){h=0;break}}}else h=0;while(0);d=0;c=0;f=e;e:while(1){switch(i[f>>0]|0){case 0:{n=d;break e}case 58:{d=d+1|0;break}case 59:{c=c+1|0;break}default:{}}f=f+1|0}f=(n|0)!=0;do if((c|0)!=0&f){c=Gx(e,n+1|0,ha)|0;if((c|0)>1){aa=$t(k[((k[b>>2]&3|0)==3?b:$)+28>>2]|0)|0;Y=ht(k[((k[b>>2]&3|0)==3?b:$)+28>>2]|0)|0;$=(at(aa)|0)!=0;aa=ht(k[((k[b>>2]&3|0)==2?b:ea)+28>>2]|0)|0;k[ca>>2]=Y;k[ca+4>>2]=$?137127:137132;k[ca+8>>2]=aa;Yr(3,137137,ca)|0;if((c|0)==2)oa=210}else if((c|0)==1)oa=210;if((oa|0)==210){e=173315;break}d=k[(k[na>>2]|0)+8>>2]|0;if((k[d+4>>2]|0)>0){s=ua+8|0;u=ua+12|0;v=ua+32|0;w=ua+4|0;B=ua+16|0;C=ka+4|0;F=la+4|0;c=k[ha>>2]|0;q=c+8|0;e=d;d=0;n=0;do{Q=ua;N=(k[e>>2]|0)+(n*48|0)|0;O=Q+48|0;do{k[Q>>2]=k[N>>2];Q=Q+4|0;N=N+4|0}while((Q|0)<(O|0));e=k[q>>2]|0;f=k[e>>2]|0;f:do if(f){g=1;y=1.0;g:while(1){h=e+4|0;P=+o[h>>2];do if(P<1.0e-05&P>-1.0e-05)x=y;else{DD(a,f);x=+o[h>>2];y=y-x;d=k[e>>2]|0;if(g){Vx(ua,x,ka,la);ma=k[ka>>2]|0;KD(a,ma,k[C>>2]|0,0,0,0);vP(ma);if(y<1.0e-05&y>-1.0e-05){oa=193;break g}else{g=0;x=y;break}}if(y<1.0e-05&y>-1.0e-05){oa=195;break g}Q=ta;N=la;O=Q+48|0;do{k[Q>>2]=k[N>>2];Q=Q+4|0;N=N+4|0}while((Q|0)<(O|0));x=+o[h>>2];Vx(ta,x/(y+x),ka,la);vP(k[ta>>2]|0);g=k[ka>>2]|0;KD(a,g,k[C>>2]|0,0,0,0);vP(g);g=0;x=y}while(0);e=e+12|0;f=k[e>>2]|0;if(!f)break f;else y=x}if((oa|0)==193){oa=0;vP(k[la>>2]|0);break}else if((oa|0)==195){oa=0;ma=k[la>>2]|0;KD(a,ma,k[F>>2]|0,0,0,0);vP(ma);break}}while(0);if(k[s>>2]|0){DD(a,k[k[q>>2]>>2]|0);ED(a,k[k[q>>2]>>2]|0);b=k[ua>>2]|0;ma=k[s>>2]|0;k[sa>>2]=k[B>>2];k[sa+4>>2]=k[B+4>>2];k[sa+8>>2]=k[B+8>>2];k[sa+12>>2]=k[B+12>>2];k[va>>2]=k[b>>2];k[va+4>>2]=k[b+4>>2];k[va+8>>2]=k[b+8>>2];k[va+12>>2]=k[b+12>>2];cx(a,2,sa,va,ga,fa,ma)}if(k[u>>2]|0){DD(a,d);ED(a,d);b=(k[ua>>2]|0)+((k[w>>2]|0)+-1<<4)|0;ma=k[u>>2]|0;k[sa>>2]=k[v>>2];k[sa+4>>2]=k[v+4>>2];k[sa+8>>2]=k[v+8>>2];k[sa+12>>2]=k[v+12>>2];k[va>>2]=k[b>>2];k[va+4>>2]=k[b+4>>2];k[va+8>>2]=k[b+8>>2];k[va+12>>2]=k[b+12>>2];cx(a,3,sa,va,ga,fa,ma)}e=k[(k[na>>2]|0)+8>>2]|0;f=k[e+4>>2]|0;do if((f|0)>1){if(!(k[s>>2]|0)){if(!(R&(k[u>>2]|0)!=0))break}else if(ia)break;GD(a,ja);f=k[(k[na>>2]|0)+8>>2]|0;e=f;f=k[f+4>>2]|0}while(0);n=n+1|0}while((n|0)<(f|0))}else c=k[ha>>2]|0;vP(c);break c}while(0);c=l[(k[na>>2]|0)+115>>0]|0;do if(!(c&1)){if(c&2){d=k[13662]|0;d=mB(b,d,Wx(e,141964)|0)|0;c=mB(b,k[13663]|0,141972)|0;oa=220;break}if(c&8){d=k[13666]|0;d=mB(b,d,Wx(e,141980)|0)|0;c=mB(b,k[13667]|0,141988)|0;oa=220;break}if(!(c&4)){g=mB(b,k[13659]|0,e)|0;d=e;break}else{d=k[13664]|0;d=mB(b,d,Wx(e,141996)|0)|0;c=mB(b,k[13665]|0,142004)|0;oa=220;break}}else{d=k[13660]|0;d=mB(b,d,Wx(e,141948)|0)|0;c=mB(b,k[13661]|0,141956)|0;oa=220}while(0);do if((oa|0)==220){if((d|0)==(e|0)){g=c;d=e;break}DD(a,d);g=c}while(0);if((g|0)!=(e|0))ED(a,g);if(h<<24>>24){f=(i[d>>0]|0)==0?173315:d;e=(i[g>>0]|0)==0?173315:g;DD(a,173828);ED(a,f);Q=ma;N=k[k[(k[na>>2]|0)+8>>2]>>2]|0;O=Q+48|0;do{k[Q>>2]=k[N>>2];Q=Q+4|0;N=N+4|0}while((Q|0)<(O|0));c=k[13673]|0;h:do if(!c)oa=231;else{c=ts(b,c)|0;switch(i[c>>0]|0){case 110:if(!(qO(c,171734)|0)){c=2;break h}else{oa=231;break h}case 102:if(!(qO(c,137153)|0)){c=1;break h}else{oa=231;break h}case 98:{if(!(qO(c,137161)|0)){c=3;break h}if(!(qO(c,147064)|0)){c=4;break h}else{oa=231;break h}}default:{oa=231;break h}}}while(0);if((oa|0)==231){c=(at($t(k[((k[b>>2]&3|0)==2?b:ea)+28>>2]|0)|0)|0)!=0;c=c?1:2}c=TA(ma,c,fa,0,0)|0;d=c+8|0;ID(a,k[d>>2]|0,k[c>>2]|0,1);if(c){vP(k[d>>2]|0);vP(c)}DD(a,f);if((e|0)!=(f|0))ED(a,e);c=k[ma+8>>2]|0;if(c){la=ma+16|0;na=k[ma>>2]|0;k[sa>>2]=k[la>>2];k[sa+4>>2]=k[la+4>>2];k[sa+8>>2]=k[la+8>>2];k[sa+12>>2]=k[la+12>>2];k[va>>2]=k[na>>2];k[va+4>>2]=k[na+4>>2];k[va+8>>2]=k[na+8>>2];k[va+12>>2]=k[na+12>>2];cx(a,2,sa,va,ga,fa,c)}c=k[ma+12>>2]|0;if(!c)break;la=ma+32|0;na=(k[ma>>2]|0)+((k[ma+4>>2]|0)+-1<<4)|0;k[sa>>2]=k[la>>2];k[sa+4>>2]=k[la+4>>2];k[sa+8>>2]=k[la+8>>2];k[sa+12>>2]=k[la+12>>2];k[va>>2]=k[na>>2];k[va+4>>2]=k[na+4>>2];k[va+8>>2]=k[na+8>>2];k[va+12>>2]=k[na+12>>2];cx(a,3,sa,va,ga,fa,c);break}c=k[na>>2]|0;if(!f){do if(!(i[c+115>>0]&3)){if(i[d>>0]|0){DD(a,d);ED(a,g);break}DD(a,173315);if(!(i[g>>0]|0)){ED(a,173315);break}else{ED(a,g);break}}while(0);c=k[(k[na>>2]|0)+8>>2]|0;if((k[c+4>>2]|0)<=0)break;f=ma+4|0;g=ma+8|0;h=ma+12|0;n=ma+32|0;q=ma+16|0;e=0;while(1){Q=ma;N=(k[c>>2]|0)+(e*48|0)|0;O=Q+48|0;do{k[Q>>2]=k[N>>2];Q=Q+4|0;N=N+4|0}while((Q|0)<(O|0));c=k[ma>>2]|0;d=k[f>>2]|0;do if(!(k[ba>>2]&16384)){KD(a,c,d,0,0,0);c=k[g>>2]|0;if(c){la=k[ma>>2]|0;k[sa>>2]=k[q>>2];k[sa+4>>2]=k[q+4>>2];k[sa+8>>2]=k[q+8>>2];k[sa+12>>2]=k[q+12>>2];k[va>>2]=k[la>>2];k[va+4>>2]=k[la+4>>2];k[va+8>>2]=k[la+8>>2];k[va+12>>2]=k[la+12>>2];cx(a,2,sa,va,ga,fa,c)}c=k[h>>2]|0;if(c){la=(k[ma>>2]|0)+((k[f>>2]|0)+-1<<4)|0;k[sa>>2]=k[n>>2];k[sa+4>>2]=k[n+4>>2];k[sa+8>>2]=k[n+8>>2];k[sa+12>>2]=k[n+12>>2];k[va>>2]=k[la>>2];k[va+4>>2]=k[la+4>>2];k[va+8>>2]=k[la+8>>2];k[va+12>>2]=k[la+12>>2];cx(a,3,sa,va,ga,fa,c)}if((k[(k[(k[na>>2]|0)+8>>2]|0)+4>>2]|0)<=1)break;if(!(k[g>>2]|0)){if(!(R&(k[h>>2]|0)!=0))break}else if(!R)break;GD(a,ja)}else KD(a,c,d,k[g>>2]|0,k[h>>2]|0,0);while(0);e=e+1|0;c=k[(k[na>>2]|0)+8>>2]|0;if((e|0)>=(k[c+4>>2]|0))break c}}F=c+8|0;c=k[F>>2]|0;S=k[c+4>>2]|0;U=S*48|0;T=uP(U)|0;U=uP(U)|0;P=+(n+2|0)*.5;R=(S|0)>0;i:do if(R){C=ma+4|0;A=0.0;z=0.0;e=0;while(1){Q=ma;N=(k[c>>2]|0)+(e*48|0)|0;O=Q+48|0;do{k[Q>>2]=k[N>>2];Q=Q+4|0;N=N+4|0}while((Q|0)<(O|0));c=k[C>>2]|0;k[T+(e*48|0)+4>>2]=c;k[U+(e*48|0)+4>>2]=c;B=c<<4;w=uP(B)|0;k[T+(e*48|0)>>2]=w;B=uP(B)|0;k[U+(e*48|0)>>2]=B;s=k[ma>>2]|0;x=+p[s>>3];y=+p[s+8>>3];if((c|0)>1){u=c+-1|0;v=c+-2|0;v=v-((v>>>0)%3|0)|0;M=x;q=0;while(1){n=q+1|0;J=+p[s+(n<<4)>>3];K=+p[s+(n<<4)+8>>3];if(!q){x=M-J;L=y-K;I=2.0/+X(+(x*x+L*L+.0001));x=x*I;I=L*I}else{x=z-J;L=A-K;I=2.0/+X(+(x*x+L*L+.0001));x=x*I;I=L*I}H=-x;p[w+(q<<4)>>3]=I;p[w+(q<<4)+8>>3]=H;c=q+2|0;z=+p[s+(c<<4)>>3];A=+p[s+(c<<4)+8>>3];h=q;q=q+3|0;x=+p[s+(q<<4)>>3];L=+p[s+(q<<4)+8>>3];f=w+(n<<4)|0;g=w+(c<<4)|0;G=J-z;E=K-A;D=+X(+(G*G+E*E));if(D<.0001){G=M-x;E=y-L;D=+X(+(G*G+E*E+.0001))}D=2.0/D;E=E*D;G=-(G*D);p[g>>3]=E;p[w+(c<<4)+8>>3]=G;k[f>>2]=k[g>>2];k[f+4>>2]=k[g+4>>2];k[f+8>>2]=k[g+8>>2];k[f+12>>2]=k[g+12>>2];p[B+(h<<4)>>3]=M-P*I;p[B+(h<<4)+8>>3]=y-P*H;p[B+(n<<4)>>3]=J-P*+p[f>>3];p[B+(n<<4)+8>>3]=K-P*+p[w+(n<<4)+8>>3];p[B+(c<<4)>>3]=z-P*E;p[B+(c<<4)+8>>3]=A-P*G;if((q|0)>=(u|0)){y=L;break}else{M=x;y=L}}c=v+3|0}else c=0;K=z-x;L=A-y;M=2.0/+X(+(L*L+K*K+.0001));L=L*M;M=-(K*M);p[w+(c<<4)>>3]=L;p[w+(c<<4)+8>>3]=M;p[B+(c<<4)>>3]=x-P*L;p[B+(c<<4)+8>>3]=y-P*M;e=e+1|0;if((e|0)==(S|0))break i;c=k[F>>2]|0}}while(0);u=tO(d)|0;c=CO(u,145961)|0;if(!c){f=d;c=d}else{s=0;f=d;e=d;while(1){c=(i[c>>0]|0)==0?173315:c;do if((c|0)!=(e|0)){if(i[(k[na>>2]|0)+115>>0]&3){e=c;break}DD(a,c);ED(a,c);e=c}while(0);q=(s|0)==0?c:f;d=s>>>0<2?c:d;if(R){h=0;do{c=k[U+(h*48|0)>>2]|0;f=k[T+(h*48|0)>>2]|0;g=k[U+(h*48|0)+4>>2]|0;if((g|0)>0){n=0;do{la=c+(n<<4)|0;p[la>>3]=+p[f+(n<<4)>>3]+ +p[la>>3];la=c+(n<<4)+8|0;p[la>>3]=+p[f+(n<<4)+8>>3]+ +p[la>>3];n=n+1|0}while((n|0)!=(g|0))}KD(a,c,g,0,0,0);h=h+1|0}while((h|0)!=(S|0))}c=CO(0,145961)|0;if(!c){f=q;c=d;break}else{s=s+1|0;f=q}}}e=ma+8|0;d=k[e>>2]|0;if(!d)e=0;else{do if(!c)c=0;else{if(i[(k[na>>2]|0)+115>>0]&3)break;DD(a,c);ED(a,c);d=k[e>>2]|0}while(0);la=ma+16|0;e=k[ma>>2]|0;k[sa>>2]=k[la>>2];k[sa+4>>2]=k[la+4>>2];k[sa+8>>2]=k[la+8>>2];k[sa+12>>2]=k[la+12>>2];k[va>>2]=k[e>>2];k[va+4>>2]=k[e+4>>2];k[va+8>>2]=k[e+8>>2];k[va+12>>2]=k[e+12>>2];cx(a,2,sa,va,ga,fa,d);e=c}d=ma+12|0;c=k[d>>2]|0;if(c){do if((e|0)!=(f|0)){if(i[(k[na>>2]|0)+115>>0]&3)break;DD(a,f);ED(a,f);c=k[d>>2]|0}while(0);la=ma+32|0;na=(k[ma>>2]|0)+((k[ma+4>>2]|0)+-1<<4)|0;k[sa>>2]=k[la>>2];k[sa+4>>2]=k[la+4>>2];k[sa+8>>2]=k[la+8>>2];k[sa+12>>2]=k[la+12>>2];k[va>>2]=k[na>>2];k[va+4>>2]=k[na+4>>2];k[va+8>>2]=k[na+8>>2];k[va+12>>2]=k[na+12>>2];cx(a,3,sa,va,ga,fa,c)}vP(u);if(R){c=0;do{vP(k[T+(c*48|0)>>2]|0);vP(k[U+(c*48|0)>>2]|0);c=c+1|0}while((c|0)!=(S|0))}vP(T);vP(U)}while(0);F=k[V>>2]|0;C=k[F+8>>2]|0;u=F+208|0;if(!((k[u>>2]|0)==0?(j[F+260>>1]&1)==0:0))oa=298;if(((oa|0)==298?(zD(a),qa=F+276|0,pa=k[qa>>2]|0,(pa|0)!=0):0)?(ra=F+280|0,(pa|0)>1):0){s=k[ra>>2]|0;c=F+268|0;d=F+284|0;e=F+272|0;f=F+228|0;g=F+244|0;h=F+212|0;n=s;q=1;s=k[s>>2]|0;do{k[c>>2]=k[n+(q<<2)>>2];k[e>>2]=(k[d>>2]|0)+(s<<4);yD(a,k[u>>2]|0,k[f>>2]|0,k[g>>2]|0,k[h>>2]|0);zD(a);n=k[ra>>2]|0;s=(k[n+(q<<2)>>2]|0)+s|0;q=q+1|0}while((q|0)<(k[qa>>2]|0))}k[F+268>>2]=0;k[F+272>>2]=0;B=C+8|0;c=k[B>>2]|0;d=k[c+8>>2]|0;if(!d)w=F+260|0;else{qa=k[d>>2]|0;c=k[qa>>2]|0;ra=k[qa+8>>2]|0;pa=qa+16|0;k[ua>>2]=k[pa>>2];k[ua+4>>2]=k[pa+4>>2];k[ua+8>>2]=k[pa+8>>2];k[ua+12>>2]=k[pa+12>>2];qa=qa+32|0;k[ta>>2]=k[qa>>2];k[ta+4>>2]=k[qa+4>>2];k[ta+8>>2]=k[qa+8>>2];k[ta+12>>2]=k[qa+12>>2];if(!ra){k[sa>>2]=k[c>>2];k[sa+4>>2]=k[c+4>>2];k[sa+8>>2]=k[c+8>>2];k[sa+12>>2]=k[c+12>>2]}else{k[sa>>2]=k[ua>>2];k[sa+4>>2]=k[ua+4>>2];k[sa+8>>2]=k[ua+8>>2];k[sa+12>>2]=k[ua+12>>2]}c=F+260|0;pa=j[c>>1]|0;qa=k[F+220>>2]|0;k[va>>2]=k[sa>>2];k[va+4>>2]=k[sa+4>>2];k[va+8>>2]=k[sa+8>>2];k[va+12>>2]=k[sa+12>>2];$x(a,va,(pa<<8&65535)<<16>>16>>15&255,qa,(pa<<14&65535)<<16>>16>>15&255,(pa<<11&65535)<<16>>16>>15&255);pa=k[(k[B>>2]|0)+8>>2]|0;qa=(k[pa+4>>2]|0)+-1|0;pa=k[pa>>2]|0;d=k[pa+(qa*48|0)>>2]|0;e=k[pa+(qa*48|0)+4>>2]|0;ra=k[pa+(qa*48|0)+12>>2]|0;oa=pa+(qa*48|0)+16|0;k[ua>>2]=k[oa>>2];k[ua+4>>2]=k[oa+4>>2];k[ua+8>>2]=k[oa+8>>2];k[ua+12>>2]=k[oa+12>>2];ua=pa+(qa*48|0)+32|0;k[ta>>2]=k[ua>>2];k[ta+4>>2]=k[ua+4>>2];k[ta+8>>2]=k[ua+8>>2];k[ta+12>>2]=k[ua+12>>2];if(!ra){ua=d+(e+-1<<4)|0;k[sa>>2]=k[ua>>2];k[sa+4>>2]=k[ua+4>>2];k[sa+8>>2]=k[ua+8>>2];k[sa+12>>2]=k[ua+12>>2]}else{k[sa>>2]=k[ta>>2];k[sa+4>>2]=k[ta+4>>2];k[sa+8>>2]=k[ta+8>>2];k[sa+12>>2]=k[ta+12>>2]}w=j[c>>1]|0;ua=k[F+224>>2]|0;k[va>>2]=k[sa>>2];k[va+4>>2]=k[sa+4>>2];k[va+8>>2]=k[sa+8>>2];k[va+12>>2]=k[sa+12>>2];$x(a,va,(w<<7&65535)<<16>>16>>15&255,ua,(w<<13&65535)<<16>>16>>15&255,(w<<10&65535)<<16>>16>>15&255);w=c;c=k[B>>2]|0}c=k[c+96>>2]|0;d=(j[w>>1]<<12&65535)<<16>>16>>15<<16>>16;q=F+216|0;e=k[q>>2]|0;s=F+232|0;f=k[s>>2]|0;u=F+248|0;g=k[u>>2]|0;v=F+212|0;h=k[v>>2]|0;if(!((oB(lB(C,k[13675]|0,173309)|0)|0)<<24>>24))n=0;else n=k[(k[B>>2]|0)+8>>2]|0;ay(a,c,11,d,e,f,g,h,n);h=k[(k[B>>2]|0)+108>>2]|0;n=(j[w>>1]<<12&65535)<<16>>16>>15<<16>>16;g=k[q>>2]|0;f=k[s>>2]|0;d=k[u>>2]|0;e=k[v>>2]|0;if(!((oB(lB(C,k[13675]|0,173309)|0)|0)<<24>>24))c=0;else c=k[(k[B>>2]|0)+8>>2]|0;ay(a,h,11,n,g,f,d,e,c);ay(a,k[(k[B>>2]|0)+100>>2]|0,7,(j[w>>1]<<13&65535)<<16>>16>>15<<16>>16,k[F+224>>2]|0,k[F+240>>2]|0,k[F+256>>2]|0,k[v>>2]|0,0);ay(a,k[(k[B>>2]|0)+104>>2]|0,6,(j[w>>1]<<14&65535)<<16>>16>>15<<16>>16,k[F+220>>2]|0,k[F+236>>2]|0,k[F+252>>2]|0,k[v>>2]|0,0);xD(a);qx(a)}while(0);r=wa;return}function Px(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0;p=r;r=r+160|0;m=p+20|0;l=p+16|0;o=p;k[m>>2]=0;k[l>>2]=0;$r(o,128,p+24|0);cs(o,d)|0;f=o+4|0;d=k[f>>2]|0;if(d>>>0>=(k[o+8>>2]|0)>>>0){as(o,1)|0;d=k[f>>2]|0}i[d>>0]=0;d=k[o>>2]|0;k[f>>2]=d;h=a+300|0;j=a+296|0;d=DO(d,k[h>>2]|0,m)|0;a:do if(!d)e=0;else{while(1){d=DO(d,k[j>>2]|0,l)|0;f=(d|0)!=0;if(f)g=DO(0,k[j>>2]|0,l)|0;else g=0;switch(((g|0)!=0&1)+(f&1)|0){case 2:{f=Sx(a,d,0)|0;d=Sx(a,g,c)|0;if((d&f|0)>-1){e=(f|0)>(d|0);e=((e?f:d)|0)>=(b|0)&((e?d:f)|0)<=(b|0);n=11}break}case 1:{e=(Sx(a,d,b)|0)==(b|0);n=11;break}default:{}}if((n|0)==11?(n=0,e):0)break;d=DO(0,k[h>>2]|0,m)|0;if(!d){e=0;break a}}e=e&1}while(0);ds(o);r=p;return e|0}function Qx(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;f=a+156|0;a:do if((k[f>>2]|0)>=2?(d=lB(c,k[13649]|0,176676)|0,g=a+160|0,(Px(k[a>>2]|0,k[g>>2]|0,k[f>>2]|0,d)|0)<<24>>24==0):0)if(!(i[d>>0]|0))if(Js(b,c)|0){d=Js(b,c)|0;if(!d)d=0;else while(1){e=lB(d,k[13679]|0,176676)|0;if(!(i[e>>0]|0)){d=1;break a}if((Px(k[a>>2]|0,k[g>>2]|0,k[f>>2]|0,e)|0)<<24>>24){d=1;break a}d=Ks(b,d,c)|0;if(!d){d=0;break}}}else d=1;else d=0;else d=1;while(0);return d|0}function Rx(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0,g=0.0,h=0,i=0,j=0.0,l=0,m=0;i=k[b+4>>2]|0;if((i|0)<=0)Wa(136920,135860,3873,136932);if(((i|0)%3|0|0)!=1)Wa(136942,135860,3874,136932);h=k[b>>2]|0;c=+p[h>>3];g=+p[h+8>>3];if((i|0)>1){e=c;f=g;d=c;c=g;b=1;do{m=b+1|0;l=b+2|0;j=(+p[h+(b<<4)>>3]+ +p[h+(m<<4)>>3])*.5;g=(+p[h+(b<<4)+8>>3]+ +p[h+(m<<4)+8>>3])*.5;e=e<j?e:j;f=f<g?f:g;j=d>j?d:j;g=c>g?c:g;d=+p[h+(l<<4)>>3];c=+p[h+(l<<4)+8>>3];e=e<d?e:d;f=f<c?f:c;d=j>d?j:d;c=g>c?g:c;b=b+3|0}while((b|0)<(i|0))}else{e=c;f=g;d=c;c=g}p[a>>3]=e;p[a+8>>3]=f;p[a+16>>3]=d;p[a+24>>3]=c;return}function Sx(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;f=i[b>>0]|0;if(f<<24>>24==97){if(qO(b,136959)|0){c=97;d=3}}else{c=f;d=3}a:do if((d|0)==3){b:do if(c<<24>>24){d=b;while(1){d=d+1|0;if(((c&255)+-48|0)>>>0>=10)break;c=i[d>>0]|0;if(!(c<<24>>24))break b}e=k[a+308>>2]|0;if(!e){c=-1;break a}d=k[a+312>>2]|0;if((d|0)<1){c=-1;break a}else c=1;while(1){a=k[e+(c<<2)>>2]|0;if(f<<24>>24==(i[a>>0]|0)?(qO(b,a)|0)==0:0)break a;if((c|0)<(d|0))c=c+1|0;else{c=-1;break a}}}while(0);c=bO(b)|0}while(0);return c|0}function Tx(a,b,c){a=a|0;b=b|0;c=c|0;vP(b);return}function Ux(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0.0,n=0;h=r;r=r+192|0;g=h+176|0;j=h+160|0;l=h+144|0;e=h+64|0;f=h;d=h+128|0;c=a+48|0;n=a+16|0;k[l>>2]=k[a>>2];k[l+4>>2]=k[a+4>>2];k[l+8>>2]=k[a+8>>2];k[l+12>>2]=k[a+12>>2];k[j>>2]=k[c>>2];k[j+4>>2]=k[c+4>>2];k[j+8>>2]=k[c+8>>2];k[j+12>>2]=k[c+12>>2];k[g>>2]=k[n>>2];k[g+4>>2]=k[n+4>>2];k[g+8>>2]=k[n+8>>2];k[g+12>>2]=k[n+12>>2];m=+hy(l,j,g);n=a+32|0;k[l>>2]=k[a>>2];k[l+4>>2]=k[a+4>>2];k[l+8>>2]=k[a+8>>2];k[l+12>>2]=k[a+12>>2];k[j>>2]=k[c>>2];k[j+4>>2]=k[c+4>>2];k[j+8>>2]=k[c+8>>2];k[j+12>>2]=k[c+12>>2];k[g>>2]=k[n>>2];k[g+4>>2]=k[n+4>>2];k[g+8>>2]=k[n+8>>2];k[g+12>>2]=k[n+12>>2];if(m<4.0&+hy(l,j,g)<4.0){f=b+16|0;if((k[f>>2]|0)==1){k[f>>2]=0;k[b>>2]=k[a>>2];k[b+4>>2]=k[a+4>>2];k[b+8>>2]=k[a+8>>2];k[b+12>>2]=k[a+12>>2]}e=g;d=e+16|0;do{i[e>>0]=i[c>>0]|0;e=e+1|0;c=c+1|0}while((e|0)<(d|0));c=Cy(24)|0;k[c+16>>2]=0;k[c>>2]=k[g>>2];k[c+4>>2]=k[g+4>>2];k[c+8>>2]=k[g+8>>2];k[c+12>>2]=k[g+12>>2];k[f>>2]=c}else{uB(d,a,3,.5,e,f);c=Ux(f,Ux(e,b)|0)|0}r=h;return c|0}function Vx(a,b,c,d){a=a|0;b=+b;c=c|0;d=d|0;var e=0,f=0.0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0;o=r;r=r+32|0;m=o;n=k[a+4>>2]|0;e=n+-1|0;j=(e|0)/3|0;if((n+-4|0)>>>0<3){k[c+4>>2]=4;n=By(64)|0;k[c>>2]=n;k[d+4>>2]=4;n=By(64)|0;k[d>>2]=n;uB(o+16|0,k[a>>2]|0,3,b,k[c>>2]|0,n)}else{n=By(j<<3)|0;h=(e|0)>2;a:do if(h){e=0;g=k[a>>2]|0;f=0.0;while(1){u=+p[g+16>>3];s=+p[g>>3]-u;t=+p[g+24>>3];v=+p[g+8>>3]-t;v=+X(+(s*s+v*v));s=+p[g+32>>3];u=u-s;q=+p[g+40>>3];t=t-q;t=v+ +X(+(u*u+t*t));s=s-+p[g+48>>3];q=q-+p[g+56>>3];q=t+ +X(+(s*s+q*q));p[n+(e<<3)>>3]=q;f=f+q;e=e+1|0;if((e|0)>=(j|0))break;else g=g+48|0}b=b*f;if(h){e=0;f=0.0;do{f=f+ +p[n+(e<<3)>>3];if(f>=b)break a;e=e+1|0}while((j|0)>(e|0))}else{e=0;f=0.0}}else{b=b*0.0;e=0;f=0.0}while(0);l=e*3|0;h=l+4|0;i=c+4|0;k[i>>2]=h;h=By(h<<4)|0;k[c>>2]=h;h=((j-e|0)*3|0)+1|0;j=d+4|0;k[j>>2]=h;h=By(h<<4)|0;k[d>>2]=h;if((k[i>>2]|0)>0){g=0;while(1){h=(k[c>>2]|0)+(g<<4)|0;w=(k[a>>2]|0)+(g<<4)|0;k[h>>2]=k[w>>2];k[h+4>>2]=k[w+4>>2];k[h+8>>2]=k[w+8>>2];k[h+12>>2]=k[w+12>>2];h=g+1|0;if((h|0)<(k[i>>2]|0))g=h;else break}g=g+-3|0}else g=-4;if((k[j>>2]|0)>0){h=0;while(1){w=(k[d>>2]|0)+(h<<4)|0;i=(k[a>>2]|0)+(g<<4)|0;k[w>>2]=k[i>>2];k[w+4>>2]=k[i+4>>2];k[w+8>>2]=k[i+8>>2];k[w+12>>2]=k[i+12>>2];h=h+1|0;if((h|0)>=(k[j>>2]|0))break;else g=g+1|0}}v=+p[n+(e<<3)>>3];uB(m,(k[a>>2]|0)+(l<<4)|0,3,(b-(f-v))/v,(k[c>>2]|0)+(l<<4)|0,k[d>>2]|0);vP(n)}r=o;return}function Wx(a,b){a=a|0;b=b|0;var c=0;c=1;a:while(1){switch(i[a>>0]|0){case 0:{a=c;break a}case 58:{c=c+1|0;break}default:{}}a=a+1|0}c=ha((uO(b)|0)+1|0,a)|0;if((k[13591]|0)<(c|0)){c=c+10|0;k[13591]=c;c=xP(k[13592]|0,c)|0;k[13592]=c}else c=k[13592]|0;rO(c,b)|0;a=a+-1|0;c=k[13592]|0;if(a)do{c=c+(uO(c)|0)|0;i[c>>0]=58;i[c+1>>0]=0;nO(k[13592]|0,b)|0;a=a+-1|0;c=k[13592]|0}while((a|0)!=0);return c|0}function Xx(a,b,c){a=+a;b=+b;c=+c;return +((1.0-a/b)*c*.5)}function Yx(a,b,c){a=+a;b=+b;c=+c;return +(c*.5)}function Zx(a,b,c){a=+a;b=+b;c=+c;return +(a/b*c*.5)}function _x(a,b,c){a=+a;b=+b;c=+c;b=a/b;return +((!(b<=.5)?1.0-b:b)*c)}function $x(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0.0,l=0.0,m=0;g=k[a+16>>2]|0;if(!(c<<24>>24))d=k[g+208>>2]|0;if(!(e<<24>>24==0?((d|0)==0?(j[g+260>>1]&1)==0:0):0))h=5;if((h|0)==5?(i=+p[b>>3],l=+p[b+8>>3],m=k[a+152>>2]|0,(m&4259840|0)!=0):0){f=m&131072;h=f>>>16^2;k[g+264>>2]=h;d=g+268|0;k[d>>2]=h+2;h=g+272|0;vP(k[h>>2]|0);d=By(k[d>>2]<<4)|0;k[h>>2]=d;p[d>>3]=i+-3.0;p[d+8>>3]=l+-3.0;p[d+16>>3]=i+3.0;p[d+24>>3]=l+3.0;if(!(m&8192))hD(a,d,d,2)|0;if(!f)dy(d)}return}function ay(a,b,c,d,e,f,g,h,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0.0,z=0.0,A=0.0;x=r;r=r+96|0;u=x+72|0;n=x+64|0;w=x+16|0;v=x;o=k[a+152>>2]|0;if((b|0)!=0?(i[b+81>>0]|0)!=0:0){if(!h)t=0;else{l=By((uO(h)|0)+11|0)|0;switch(c|0){case 11:{m=145884;break}case 7:{m=137823;break}case 6:{m=137833;break}default:Wa(174497,135860,2645,137166)}k[n>>2]=h;k[n+4>>2]=m;TN(l,137182,n)|0;t=l}q=a+16|0;n=(k[q>>2]|0)+12|0;s=k[n>>2]|0;k[n>>2]=c;n=(d|0)!=0|(e|0)!=0;m=(o&4|0)==0;if(n&m){by(a,b);yD(a,e,f,g,t)}ty(a,c,b);if(j){l=k[b>>2]|0;h=i[l>>0]|0;a:do if(h<<24>>24){while(1){if(!(_L(h&255)|0))break;l=l+1|0;h=i[l>>0]|0;if(!(h<<24>>24))break a}if(i[l>>0]|0){z=+p[b+24>>3];o=b+56|0;A=z*.5+ +p[o>>3];y=+p[b+64>>3]-+p[b+32>>3]*.5;p[w>>3]=A;p[w+8>>3]=y;p[w+16>>3]=A-z;p[w+24>>3]=y;c=w+32|0;k[u>>2]=k[o>>2];k[u+4>>2]=k[o+4>>2];k[u+8>>2]=k[o+8>>2];k[u+12>>2]=k[o+12>>2];zB(v,j,u);k[c>>2]=k[v>>2];k[c+4>>2]=k[v+4>>2];k[c+8>>2]=k[v+8>>2];k[c+12>>2]=k[v+12>>2];GD(a,k[(k[a>>2]|0)+336>>2]|0);DD(a,k[b+8>>2]|0);LD(a,w,3)}}while(0)}if(n){if(!m){by(a,b);yD(a,e,f,g,t)}zD(a)}if(t)vP(t);k[(k[q>>2]|0)+12>>2]=s}r=x;return}function by(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;c=k[a+16>>2]|0;d=k[a+152>>2]|0;if(d&4259840){e=d&131072;k[c+264>>2]=e>>>16^2;g=c+268|0;k[g>>2]=(e>>>16^2)+2;h=c+272|0;vP(k[h>>2]|0);c=By(k[g>>2]<<4)|0;k[h>>2]=c;h=b+56|0;g=b+24|0;p[c>>3]=+p[h>>3]-+p[g>>3]*.5;f=b+64|0;b=b+32|0;p[c+8>>3]=+p[f>>3]-+p[b>>3]*.5;p[c+16>>3]=+p[h>>3]+ +p[g>>3]*.5;p[c+24>>3]=+p[f>>3]+ +p[b>>3]*.5;if(!(d&8192))hD(a,c,c,2)|0;if(!e)dy(c)}return}function cy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,g=0.0,h=0,i=0,j=0.0,k=0,l=0.0,m=0.0,n=0.0,o=0.0,q=0.0,r=0.0;q=+p[a>>3];r=+p[c>>3];i=!(q>=r);if((!i?q<=+p[c+16>>3]:0)?(e=+p[a+8>>3],e>=+p[c+8>>3]):0)h=e<=+p[c+24>>3];else h=0;e=+p[b>>3];if((e>=r?e<=+p[c+16>>3]:0)?(f=+p[b+8>>3],f>=+p[c+8>>3]):0){d=f<=+p[c+24>>3];if(!(h^d))if(h&d)d=1;else k=11;else d=0}else if(h)d=0;else k=11;a:do if((k|0)==11){o=+p[a+8>>3];do if(q==e){r=+p[c+8>>3];if(!(i|o>=r^+p[b+8>>3]>=r^1)?q<=+p[c+16>>3]:0){d=0;break a}}else{j=+p[b+8>>3];if(o==j){if(!(q>=r^e>=r))break;if(!(o>=+p[c+8>>3]))break;if(!(o<=+p[c+24>>3]))break;else{d=0;break a}}n=(j-o)/(e-q);k=q<e;g=k?q:e;e=k?e:q;f=o+n*(r-q);l=+p[c+8>>3];if(!(!(r>=g)|!(r<=e)|!(f>=l))?f<=+p[c+24>>3]:0){d=0;break a}m=+p[c+16>>3];f=f+n*(m-r);if(f>=l?!(!(m<=e)|(m>=g?!(f<=+p[c+24>>3]):1)):0){d=0;break a}k=o<j;g=k?o:j;f=k?j:o;e=q+(l-o)/n;if(!(!(l<=f)|(!(l>=g)|(!(e>=r)|!(e<=m))))){d=0;break a}o=+p[c+24>>3];q=e+(o-l)/n;if(!(!(o<=f)|(!(o>=g)|(!(q>=r)|!(q<=m))))){d=0;break a}}while(0);d=-1}while(0);return d|0}function dy(a){a=a|0;var b=0,c=0.0;b=a+16|0;c=+p[b>>3];p[a+32>>3]=c;p[a+48>>3]=c;p[a+40>>3]=+p[a+24>>3];p[a+56>>3]=+p[a+8>>3];p[b>>3]=+p[a>>3];return}function ey(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0.0,g=0,h=0,i=0;i=r;r=r+16|0;g=i;d=+p[b>>3];e=b+8|0;f=+p[e>>3];a:do switch(c|0){case 0:{h=10;break}case 90:{p[b>>3]=f;p[e>>3]=-d;h=10;break}case 180:{p[b>>3]=d;p[e>>3]=-f;h=10;break}case 270:{p[b>>3]=f;p[e>>3]=d;h=10;break}default:{if((c|0)<0){k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];fy(a,g,0-c|0);break a}if((c|0)>360){k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];ey(a,g,(c|0)%360|0);break a}else{k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];iy(a,g,c);break a}}}while(0);if((h|0)==10){k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2]}r=i;return}function fy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0.0,g=0,h=0,i=0;i=r;r=r+16|0;g=i;d=+p[b>>3];e=b+8|0;f=+p[e>>3];a:do switch(c|0){case 0:{h=10;break}case 90:{p[b>>3]=-f;p[e>>3]=d;h=10;break}case 180:{p[b>>3]=d;p[e>>3]=-f;h=10;break}case 270:{p[b>>3]=f;p[e>>3]=d;h=10;break}default:{if((c|0)<0){k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];ey(a,g,0-c|0);break a}if((c|0)>360){k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];fy(a,g,(c|0)%360|0);break a}else{k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];iy(a,g,360-c|0);break a}}}while(0);if((h|0)==10){k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2]}r=i;return}function gy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,g=0.0;g=+p[c>>3];d=+p[c+8>>3];f=+p[b>>3]+d;e=+p[b+24>>3]+g;d=+p[b+16>>3]+d;p[a>>3]=+p[b+8>>3]+g;p[a+8>>3]=f;p[a+16>>3]=e;p[a+24>>3]=d;return}function hy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,g=0.0;d=+p[a>>3];f=+p[b>>3]-d;g=+p[a+8>>3];e=+p[b+8>>3]-g;d=f*(+p[c+8>>3]-g)-e*(+p[c>>3]-d);d=d*d;if(d<1.0e-10)d=0.0;else d=d/(f*f+e*e);return +d}function iy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,g=0.0;if((k[13594]|0)!=(c|0)){RM(+(c|0)/6.283185307179586,33896,33904);k[13594]=c}e=+p[b>>3];g=+p[4238];f=+p[b+8>>3];d=+p[4237];p[a>>3]=e*g-f*d;p[a+8>>3]=g*f+e*d;return}function jy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;f=r;r=r+16|0;e=f+8|0;d=f;a=ss(a,b)|0;if((a|0)!=0?(k[e>>2]=d,(UN(a,137283,e)|0)>0):0)p[c>>3]=+p[d>>3];r=f;return}function ky(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0;n=r;r=r+32|0;g=n+16|0;e=n+8|0;h=n;c=By(96)|0;m=a+8|0;k[(k[m>>2]|0)+8>>2]=c;c=ss(a,137287)|0;if(!c){c=ob(137296)|0;if(c)f=3}else f=3;if((f|0)==3)Va(137308,c|0,1)|0;c=mB(a,ks(a,0,137319,0)|0,137327)|0;if(((((((mO(c,137333)|0)!=0?(mO(c,137341)|0)!=0:0)?(mO(c,137348)|0)!=0:0)?(mO(c,137351)|0)!=0:0)?(mO(c,137362)|0)!=0:0)?(mO(c,137373)|0)!=0:0)?(mO(c,137383)|0)!=0:0)if((mO(c,137394)|0)!=0?(mO(c,137400)|0)!=0:0)if((mO(c,137327)|0)!=0?(mO(c,137405)|0)!=0:0){k[e>>2]=c;Yr(0,137410,e)|0;c=0}else c=0;else c=2;else c=1;i[(k[m>>2]|0)+115>>0]=c;if((k[13599]|0)==0?(f=ss(a,137453)|0,k[13598]=f,(f|0)==0):0)k[13598]=k[13597];d=+jB(a,ks(a,0,137463,0)|0,0.0,0.0);p[k[(k[m>>2]|0)+8>>2]>>3]=d;c=ss(a,137471)|0;a:do if(!c)e=0;else{switch(i[c>>0]|0){case 76:{if(!(qO(c,137479)|0)){e=1;break a}break}case 66:{if(!(qO(c,137482)|0)){e=2;break a}break}case 82:{e=(qO(c,137485)|0)==0;e=e?3:0;break a}default:{e=0;break a}}e=0}while(0);c=e<<2;if(!(b<<24>>24))k[(k[m>>2]|0)+116>>2]=c;else k[(k[m>>2]|0)+116>>2]=c|e;d=+jB(a,ks(a,0,137488,0)|0,.25,.02);p[h>>3]=d;d=d*72.0;k[(k[m>>2]|0)+248>>2]=~~(d+(d>=0.0?.5:-.5));c=lB(a,ks(a,0,137496,0)|0,0)|0;if(c){k[g>>2]=h;if(UN(c,137283,g)|0){d=+p[h>>3];if(d<.02){p[h>>3]=.02;d=.02}}else{p[h>>3]=.5;d=.5}if(BO(c,137504)|0)i[(k[m>>2]|0)+276>>0]=1}else{p[h>>3]=.5;d=.5}d=d*72.0;k[(k[m>>2]|0)+252>>2]=~~(d+(d>=0.0?.5:-.5));c=(iB(a,ks(a,0,137512,0)|0,0,0)|0)&255;i[(k[m>>2]|0)+243>>0]=c;c=xB(lB(a,ks(a,0,137522,0)|0,0)|0,54784,54800)|0;k[(k[m>>2]|0)+244>>2]=c;c=ss(a,137532)|0;b:do if((c|0)!=0?(j=i[c>>0]|0,j<<24>>24!=0):0)switch(j<<24>>24|0){case 97:{if(j<<24>>24!=97)break b;if(qO(c,137538)|0)break b;k[(k[(k[m>>2]|0)+8>>2]|0)+84>>2]=4;break b}case 99:{if(j<<24>>24!=99)break b;if(qO(c,137543)|0)break b;k[(k[(k[m>>2]|0)+8>>2]|0)+84>>2]=3;break b}case 101:{if(j<<24>>24!=101)break b;if(qO(c,137552)|0)break b;k[(k[(k[m>>2]|0)+8>>2]|0)+84>>2]=5;break b}case 102:{if(j<<24>>24!=102)break b;if(qO(c,137559)|0)break b;k[(k[(k[m>>2]|0)+8>>2]|0)+84>>2]=2;break b}default:{d=+aO(c);if(!(d>0.0))break b;j=k[(k[m>>2]|0)+8>>2]|0;k[j+84>>2]=1;p[j+16>>3]=d;break b}}while(0);j=oy(a,137564,(k[(k[m>>2]|0)+8>>2]|0)+64|0)|0;c=k[(k[m>>2]|0)+8>>2]|0;i[c+80>>0]=j;oy(a,137569,c+48|0)|0;c=oB(ss(a,137574)|0)|0;i[(k[(k[m>>2]|0)+8>>2]|0)+82>>0]=c;c=ss(a,137581)|0;do if(!c){c=ss(a,137588)|0;if(c){j=i[c>>0]|0;i[(k[(k[m>>2]|0)+8>>2]|0)+81>>0]=j<<24>>24==108?1:j<<24>>24==76&1;break}c=ss(a,137600)|0;if(c){j=oB(c)|0;i[(k[(k[m>>2]|0)+8>>2]|0)+81>>0]=j}}else{j=(bO(c)|0)==90&1;i[(k[(k[m>>2]|0)+8>>2]|0)+81>>0]=j}while(0);c=xB(ss(a,137610)|0,54816,54832)|0;k[13602]=c;c=oB(ss(a,137622)|0)|0;i[137282]=c;k[13605]=0;k[13606]=0;p[(k[(k[m>>2]|0)+8>>2]|0)+24>>3]=0.0;c=ss(a,137634)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0)f=63;else f=61;if(((f|0)==61?(l=ss(a,137638)|0,(l|0)!=0):0)?(i[l>>0]|0)!=0:0){c=l;f=63}if((f|0)==63){d=+aO(c);p[(k[(k[m>>2]|0)+8>>2]|0)+24>>3]=d}ly(a);p[4241]=1.e+37;l=ks(a,0,137649,0)|0;k[13614]=l;l=ks(a,0,177171,0)|0;k[13617]=l;l=ks(a,0,142240,0)|0;k[13618]=l;l=ks(a,1,177185,0)|0;k[13619]=l;l=ks(a,1,177253,0)|0;k[13620]=l;l=ks(a,1,145890,0)|0;k[13621]=l;l=ks(a,1,176965,0)|0;k[13622]=l;l=ks(a,1,137658,0)|0;k[13623]=l;l=ks(a,1,177219,0)|0;k[13639]=l;l=ks(a,1,137668,0)|0;k[13632]=l;l=ks(a,1,137677,0)|0;k[13633]=l;l=ks(a,1,137686,0)|0;k[13634]=l;l=ks(a,1,145884,0)|0;k[13636]=l;if(!l){l=ks(a,1,145884,142237)|0;k[13636]=l}c=ks(a,1,137696,0)|0;k[13637]=c;c=ks(a,1,137512,0)|0;k[13640]=c;c=ks(a,1,137703,0)|0;k[13654]=c;c=ks(a,1,137649,0)|0;k[13643]=c;c=ks(a,1,142240,0)|0;k[13635]=c;c=ks(a,1,177213,0)|0;k[13641]=c;c=ks(a,1,137712,0)|0;k[13642]=c;c=ks(a,1,137724,0)|0;k[13645]=c;c=ks(a,1,137588,0)|0;k[13644]=c;c=ks(a,1,137729,0)|0;k[13646]=c;c=ks(a,1,177161,0)|0;k[13647]=c;c=ks(a,1,173298,0)|0;k[13648]=c;c=ks(a,1,137740,0)|0;k[13638]=c;c=ks(a,1,137750,0)|0;k[13649]=c;c=ks(a,1,137756,0)|0;k[13650]=c;c=ks(a,1,137762,0)|0;k[13651]=c;c=ks(a,1,137770,0)|0;k[13652]=c;c=ks(a,1,137779,0)|0;k[13653]=c;c=ks(a,1,177171,0)|0;k[13655]=c;c=ks(a,2,137781,0)|0;k[13656]=c;c=ks(a,2,176965,0)|0;k[13658]=c;c=ks(a,2,137658,0)|0;k[13659]=c;c=ks(a,2,137668,0)|0;k[13668]=c;c=ks(a,2,137677,0)|0;k[13669]=c;c=ks(a,2,137686,0)|0;k[13670]=c;c=ks(a,2,145884,0)|0;k[13671]=c;c=ks(a,2,137696,0)|0;k[13672]=c;c=ks(a,2,137788,0)|0;k[13681]=c;c=ks(a,2,137799,0)|0;k[13673]=c;c=ks(a,2,137803,0)|0;k[13684]=c;c=ks(a,2,137813,0)|0;k[13685]=c;c=ks(a,2,137823,0)|0;k[13686]=c;c=ks(a,2,137833,0)|0;k[13687]=c;c=ks(a,2,137843,0)|0;k[13688]=c;c=ks(a,2,137857,0)|0;k[13689]=c;c=ks(a,2,137871,0)|0;k[13690]=c;c=ks(a,2,137886,0)|0;k[13691]=c;c=ks(a,2,137900,0)|0;k[13692]=c;c=ks(a,2,137911,0)|0;k[13657]=c;c=ks(a,2,137512,0)|0;k[13676]=c;c=ks(a,2,177219,0)|0;k[13674]=c;c=ks(a,2,137918,0)|0;k[13675]=c;c=ks(a,2,137927,0)|0;k[13677]=c;c=ks(a,2,137937,0)|0;k[13678]=c;c=ks(a,2,137750,0)|0;k[13679]=c;c=ks(a,2,137762,0)|0;k[13680]=c;c=ks(a,2,137948,0)|0;k[13693]=c;c=ks(a,2,137957,0)|0;k[13694]=c;c=ks(a,2,137703,0)|0;k[13695]=c;c=ox(a)|0;k[(k[(k[m>>2]|0)+8>>2]|0)+88>>2]=c;c=ss(a,177197)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0){a=uy(c,a)|0;k[(k[(k[m>>2]|0)+8>>2]|0)+92>>2]=a}r=n;return}function ly(a){a=a|0;var b=0,c=0,d=0.0,e=0.0,f=0;b=ss(a,145884)|0;do if((b|0)!=0?(i[b>>0]|0)!=0:0){c=(k[(k[a+48>>2]|0)+8>>2]|0)+113|0;i[c>>0]=l[c>>0]|8;c=(Eu(b)|0)!=0;e=+jB(a,ks(a,0,137668,0)|0,14.0,1.0);f=mB(a,ks(a,0,137677,0)|0,143881)|0;b=qy(a,b,c?2:0,e,f,mB(a,ks(a,0,137686,0)|0,173315)|0)|0;f=a+8|0;k[(k[f>>2]|0)+12>>2]=b;b=ss(a,142355)|0;c=(b|0)!=0;do if((au(a)|0)==(a|0)){if(c?(i[b>>0]|0)==116:0){b=1;break}b=0}else{if(c?(i[b>>0]|0)==98:0){b=0;break}b=1}while(0);c=ss(a,137966)|0;a:do if(c)switch(i[c>>0]|0){case 108:{b=(b&255|2)&255;break a}case 114:{b=(b&255|4)&255;break a}default:break a}while(0);i[(k[f>>2]|0)+275>>0]=b;if((au(a)|0)!=(a|0)){b=k[(k[f>>2]|0)+12>>2]|0;d=+p[b+24>>3]+16.0;e=+p[b+32>>3]+8.0;a=(au(a)|0)+8|0;b=k[f>>2]|0;c=(i[b+275>>0]&1)<<1;if(!(k[(k[a>>2]|0)+116>>2]&1)){p[b+48+(c<<4)>>3]=d;p[b+48+(c<<4)+8>>3]=e;break}else{a=c^3;p[b+48+(a<<4)>>3]=e;p[b+48+(a<<4)+8>>3]=d;break}}}while(0);return}function my(a){a=a|0;var b=0,c=0,d=0,e=0;e=a+8|0;b=k[e>>2]|0;c=k[b+8>>2]|0;do if(c){d=k[c+88>>2]|0;if(d){CE(d);b=k[e>>2]|0;c=k[b+8>>2]|0;if(!c)break}c=k[c+92>>2]|0;if(c){vP(c);b=k[e>>2]|0}}while(0);vP(k[b+8>>2]|0);e=k[e>>2]|0;k[e+8>>2]=0;sy(k[e+12>>2]|0);tu(a,0,173447);return}function ny(a){a=a|0;var b=0,c=0;c=r;r=r+16|0;b=c;switch(a|0){case 0:{a=138006;break}case 1:{a=137351;break}case 2:{a=138012;break}default:{k[b>>2]=a;Yr(1,137976,b)|0;a=138006}}r=c;return a|0}function oy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0,g=0,h=0,j=0,l=0,m=0;m=r;r=r+48|0;h=m+32|0;f=m+16|0;j=m+8|0;g=m;l=m+40|0;i[l>>0]=0;a=ss(a,b)|0;do if(a){k[f>>2]=j;k[f+4>>2]=g;k[f+8>>2]=l;f=(UN(a,138031,f)|0)>1;e=+p[j>>3];d=+p[g>>3];if(f&e>0.0&d>0.0){e=e*72.0;p[c>>3]=+(~~(e+(e>=0.0?.5:-.5))|0);e=d*72.0;p[c+8>>3]=+(~~(e+(e>=0.0?.5:-.5))|0);a=(i[l>>0]|0)==33&1;break}i[l>>0]=0;k[h>>2]=j;k[h+4>>2]=l;h=(UN(a,138041,h)|0)>0;d=+p[j>>3];if(h&d>0.0){e=d*72.0;e=+(~~(e+(e>=0.0?.5:-.5))|0);p[c>>3]=e;p[c+8>>3]=e;r=m;return (i[l>>0]|0)==33|0}else a=0}else a=0;while(0);r=m;return a|0}function py(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0;c=k[b>>2]|0;l=b+24|0;k[l>>2]=0;k[l+4>>2]=0;k[l+8>>2]=0;k[l+12>>2]=0;if(i[c>>0]|0){f=Cy((uO(c)|0)+1|0)|0;i[f>>0]=0;d=i[c>>0]|0;if(d<<24>>24){j=b+12|0;e=c;h=f;c=f;a:while(1){g=c;b:while(1){f=e+1|0;if(!(d<<24>>24==-1|((d&255)<161|(k[j>>2]|0)!=2))){i[g>>0]=d;f=i[f>>0]|0;c=g+2|0;i[g+1>>0]=f;if(!(f<<24>>24)){d=h;break a}else e=e+2|0}else{switch(d<<24>>24){case 92:{d=8;break b}case 10:{e=f;c=g;d=12;break b}default:{}}i[g>>0]=d;c=g+1|0;e=f}d=i[e>>0]|0;if(!(d<<24>>24)){d=h;break a}else g=c}if((d|0)==8){c=i[f>>0]|0;switch(c<<24>>24|0){case 114:case 108:case 110:{c=g+1|0;i[g>>0]=0;yy(a,b,h,i[f>>0]|0);d=c;break}default:{i[g>>0]=c;d=h;c=g+1|0}}g=d;e=(i[f>>0]|0)==0?f:e+2|0}else if((d|0)==12){f=c+1|0;i[c>>0]=0;yy(a,b,h,110);g=f;c=f}d=i[e>>0]|0;if(!(d<<24>>24)){d=g;break}else h=g}if((d|0)!=(c|0)){i[c>>0]=0;yy(a,b,d,110)}}b=b+40|0;k[b>>2]=k[l>>2];k[b+4>>2]=k[l+4>>2];k[b+8>>2]=k[l+8>>2];k[b+12>>2]=k[l+12>>2]}return}function qy(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;var g=0,h=0,j=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0;u=r;r=r+32|0;q=u+16|0;o=u+8|0;n=u;t=By(88)|0;switch(ku(a)|0){case 0:{h=0;s=k[a+48>>2]|0;j=0;m=a;break}case 1:{h=0;s=au($t(a)|0)|0;j=a;m=0;break}case 2:{h=a;s=au($t(k[((k[a>>2]&3|0)==2?a:a+-32|0)+28>>2]|0)|0)|0;j=0;m=0;break}default:{h=0;s=0;j=0;m=0}}k[t+4>>2]=e;k[t+8>>2]=f;p[t+16>>3]=d;g=s+8|0;e=t+12|0;k[e>>2]=l[(k[g>>2]|0)+115>>0];a:do if(c&4){s=tO(b)|0;k[t>>2]=s;if(c&2)i[t+82>>0]=1}else switch(c|0){case 2:{b=tO(b)|0;k[t>>2]=b;i[t+82>>0]=1;if(!(eF(a,t)|0))break a;switch(ku(a)|0){case 0:{s=ht(m)|0;k[n>>2]=s;Yr(3,138057,n)|0;break a}case 1:{s=ht(j)|0;k[o>>2]=s;Yr(3,138079,o)|0;break a}case 2:{n=ht(k[((k[h>>2]&3|0)==3?h:h+32|0)+28>>2]|0)|0;o=(at(s)|0)!=0;s=ht(k[((k[h>>2]&3|0)==2?h:h+-32|0)+28>>2]|0)|0;k[q>>2]=n;k[q+4>>2]=o?173460:176693;k[q+8>>2]=s;Yr(3,138100,q)|0;break a}default:break a}}case 0:{f=zy(b,a,0)|0;k[t>>2]=f;if((k[e>>2]|0)==1)f=OB(f)|0;else f=NB(f,s)|0;vP(k[t>>2]|0);k[t>>2]=f;py(k[(k[g>>2]|0)+144>>2]|0,t);break a}default:Wa(138127,138143,166,138152)}while(0);r=u;return t|0}function ry(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;if(a){if((b|0)>0){f=0;g=a;while(1){if((f|0)==0?(c=k[g>>2]|0,(c|0)!=0):0)vP(c);d=k[g+8>>2]|0;if((d|0)!=0?(e=k[g+12>>2]|0,(e|0)!=0):0)Nb[e&127](d);f=f+1|0;if((f|0)==(b|0))break;else g=g+56|0}}vP(a)}return}function sy(a){a=a|0;var b=0;if(a){vP(k[a>>2]|0);b=a+72|0;if(i[a+82>>0]|0){b=k[b>>2]|0;if(b)ZE(b,1)}else ry(k[b>>2]|0,j[a+76>>1]|0);vP(a)}return}function ty(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,l=0,m=0,n=0,o=0,q=0;q=r;r=r+32|0;o=q+16|0;n=q;l=(k[a+16>>2]|0)+12|0;m=k[l>>2]|0;k[l>>2]=b;if(!(i[c+82>>0]|0)){h=c+76|0;if((j[h>>1]|0)>=1){AD(a,0);DD(a,k[c+8>>2]|0);switch(i[c+80>>0]|0){case 116:{p[n+8>>3]=+p[c+64>>3]+ +p[c+48>>3]*.5-+p[c+16>>3];break}case 98:{p[n+8>>3]=+p[c+32>>3]+(+p[c+64>>3]-+p[c+48>>3]*.5)-+p[c+16>>3];break}default:p[n+8>>3]=+p[c+64>>3]+ +p[c+32>>3]*.5-+p[c+16>>3]}a:do if((j[h>>1]|0)>0){e=c+72|0;f=c+56|0;g=n+8|0;b=c+40|0;c=k[e>>2]|0;d=0;while(1){switch(i[c+(d*56|0)+48>>0]|0){case 108:{p[n>>3]=+p[f>>3]-+p[b>>3]*.5;break}case 114:{p[n>>3]=+p[f>>3]+ +p[b>>3]*.5;break}default:p[n>>3]=+p[f>>3]}k[o>>2]=k[n>>2];k[o+4>>2]=k[n+4>>2];k[o+8>>2]=k[n+8>>2];k[o+12>>2]=k[n+12>>2];CD(a,o,c+(d*56|0)|0);c=k[e>>2]|0;p[g>>3]=+p[g>>3]-+p[c+(d*56|0)+40>>3];d=d+1|0;if((d|0)>=(j[h>>1]|0))break a}}while(0);BD(a);k[l>>2]=m}}else{WE(a,k[c+72>>2]|0,c);k[l>>2]=m}r=q;return}function uy(a,b){a=a|0;b=b|0;return zy(a,b,1)|0}function vy(a){a=a|0;return wy(a,0)|0}function wy(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0;c=k[13712]|0;if(!c){k[13713]=64;c=Cy(64)|0;k[13712]=c}a:do if((a|0)!=0?(h=b<<24>>24==0,d=i[a>>0]|0,d<<24>>24!=0):0){g=0;e=0;while(1){b=k[13713]|0;if((g|0)>(b+-8|0)){c=b<<1;k[13713]=c;c=Ey(k[13712]|0,c)|0;k[13712]=c;b=i[a>>0]|0;c=c+g|0}else b=d;b:do switch(b<<24>>24){case 38:{if(h?(Ay(a)|0)!=0:0)j=16;else{d=5;b=138177}break}case 60:{d=4;b=138200;break}case 62:{d=4;b=138195;break}case 45:{d=5;b=138189;break}default:{if((e|0)!=0&b<<24>>24==32?(i[e>>0]|0)==32:0){d=6;b=138170;break b}switch(b<<24>>24){case 34:{d=6;b=138163;break b}case 39:break;default:{j=16;break b}}d=5;b=138183}}while(0);if((j|0)==16){j=0;d=1;b=a}g=d+g|0;e=d;f=c;while(1){e=e+-1|0;i[f>>0]=i[b>>0]|0;if(!e)break;else{f=f+1|0;b=b+1|0}}c=c+d|0;b=a+1|0;d=i[b>>0]|0;if(!(d<<24>>24))break a;else{e=a;a=b}}}while(0);i[c>>0]=0;return k[13712]|0}function xy(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0;b=k[13714]|0;if(!b){k[13715]=64;b=Cy(64)|0;k[13714]=b}a:do if((a|0)!=0?(c=i[a>>0]|0,c<<24>>24!=0):0){g=0;while(1){d=k[13715]|0;if((g|0)>(d+-8|0)){b=d<<1;k[13715]=b;b=Ey(k[13714]|0,b)|0;k[13714]=b;c=i[a>>0]|0;b=b+g|0}switch(c<<24>>24){case 38:{if(!(Ay(a)|0)){d=5;c=138177}else h=12;break}case 60:{d=4;c=138200;break}case 62:{d=4;c=138195;break}case 34:{d=6;c=138163;break}case 39:{d=5;c=138183;break}default:h=12}if((h|0)==12){h=0;d=1;c=a}g=d+g|0;e=d;f=b;while(1){e=e+-1|0;i[f>>0]=i[c>>0]|0;if(!e)break;else{f=f+1|0;c=c+1|0}}b=b+d|0;a=a+1|0;c=i[a>>0]|0;if(!(c<<24>>24))break a}}while(0);i[b>>0]=0;return k[13714]|0}function yy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0,g=0.0,h=0,l=0,m=0,n=0,o=0,q=0,s=0.0;q=r;r=r+16|0;n=q;o=b+76|0;f=j[o>>1]|0;l=b+72|0;h=k[l>>2]|0;if(!h)m=By((f*56|0)+112|0)|0;else m=Dy(h,f+2|0,56,f+1|0)|0;k[l>>2]=m;f=j[o>>1]|0;h=f<<16>>16;l=m+(h*56|0)|0;k[l>>2]=c;i[m+(h*56|0)+48>>0]=d;if((c|0)!=0?(i[c>>0]|0)!=0:0){k[8498]=k[b+4>>2];p[4251]=+p[b+16>>3];f=k[a+144>>2]|0;f=Tb[k[f>>2]&63](f,33992,1)|0;k[m+(h*56|0)+4>>2]=f;YA(n,a,l);f=j[o>>1]|0;g=+p[n>>3];e=+p[n+8>>3]}else{e=+(~~(+p[b+16>>3]*1.2)|0);p[m+(h*56|0)+40>>3]=e;g=0.0}j[o>>1]=f+1<<16>>16;o=b+24|0;s=+p[o>>3];p[o>>3]=s>g?s:g;b=b+32|0;p[b>>3]=e+ +p[b>>3];r=q;return}function zy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;switch(ku(b)|0){case 0:{f=ht(b)|0;e=uO(f)|0;d=k[(k[b+8>>2]|0)+12>>2]|0;if(d){d=k[d>>2]|0;if(!a){v=2;y=138211;t=2;x=138214;u=0;m=176676;s=0;n=2;w=d;g=2;h=142237;b=2;q=138217;o=0;r=176676}else{v=2;y=138211;t=2;x=138214;u=0;m=176676;s=0;n=uO(d)|0;w=d;g=2;h=142237;b=2;q=138217;o=0;r=176676}}else{v=2;y=138211;t=2;x=138214;u=0;m=176676;s=0;n=2;w=138205;g=2;h=142237;b=2;q=138217;o=0;r=176676}break}case 1:{f=ht($t(b)|0)|0;e=uO(f)|0;h=ht(b)|0;g=uO(h)|0;d=k[(k[b+8>>2]|0)+104>>2]|0;if(d){d=k[d>>2]|0;if(!a){v=2;y=138211;t=2;x=138214;u=0;m=176676;s=0;n=2;w=d;b=2;q=138217;o=0;r=176676}else{v=2;y=138211;t=2;x=138214;u=0;m=176676;s=0;n=uO(d)|0;w=d;b=2;q=138217;o=0;r=176676}}else{v=2;y=138211;t=2;x=138214;u=0;m=176676;s=0;n=2;w=138205;b=2;q=138217;o=0;r=176676}break}case 2:{g=b+32|0;f=ht(au($t(k[((k[b>>2]&3|0)==3?b:g)+28>>2]|0)|0)|0)|0;e=uO(f)|0;q=ht(k[((k[b>>2]&3|0)==3?b:g)+28>>2]|0)|0;p=uO(q)|0;d=b+8|0;r=k[(k[d>>2]|0)+52>>2]|0;if(!r)o=0;else o=uO(r)|0;j=ht(k[((k[b>>2]&3|0)==2?b:b+-32|0)+28>>2]|0)|0;d=k[d>>2]|0;m=k[d+92>>2]|0;if(!m)l=0;else l=uO(m)|0;h=uO(j)|0;d=k[d+96>>2]|0;if(d){d=k[d>>2]|0;if(!a)n=2;else n=uO(d)|0}else{n=2;d=138205}y=(at(au($t(k[((k[b>>2]&3|0)==3?b:g)+28>>2]|0)|0)|0)|0)==0;v=p+2+((o|0)!=0?o+1|0:0)+h+((l|0)!=0?l+1|0:0)|0;y=y?176693:173460;t=h;x=j;u=l;s=1;w=d;g=2;h=142237;b=p;break}default:{v=2;y=138211;e=2;f=138208;t=2;x=138214;u=0;m=176676;s=0;n=2;w=138205;g=2;h=142237;b=2;q=138217;o=0;r=176676}}p=(c|0)==0;d=0;j=a;a:while(1){l=j+1|0;switch(i[j>>0]|0){case 0:break a;case 92:break;default:{d=d+1|0;j=l;continue a}}j=j+2|0;switch(i[l>>0]|0){case 71:{d=d+e|0;continue a}case 78:{d=d+g|0;continue a}case 69:{d=d+v|0;continue a}case 72:{d=d+t|0;continue a}case 84:{d=d+b|0;continue a}case 76:{d=d+n|0;continue a}case 92:{if(!p){d=d+1|0;continue a}break}default:{}}d=d+2|0}b=Cy(d+1|0)|0;n=(s|0)==0;l=(o|0)==0;j=(u|0)==0;d=b;b:while(1){g=a+1|0;e=i[a>>0]|0;switch(e<<24>>24){case 0:break b;case 92:break;default:{i[d>>0]=e;d=d+1|0;a=g;continue b}}a=a+2|0;e=i[g>>0]|0;switch(e<<24>>24|0){case 71:{c=i[f>>0]|0;i[d>>0]=c;if(!(c<<24>>24)){c=d;d=c;continue b}else e=f;while(1){e=e+1|0;d=d+1|0;c=i[e>>0]|0;i[d>>0]=c;if(!(c<<24>>24))continue b}}case 78:{c=i[h>>0]|0;i[d>>0]=c;if(!(c<<24>>24)){c=d;d=c;continue b}else e=h;while(1){e=e+1|0;d=d+1|0;c=i[e>>0]|0;i[d>>0]=c;if(!(c<<24>>24))continue b}}case 69:{if(n){c=d;d=c;continue b}c=i[q>>0]|0;i[d>>0]=c;if(c<<24>>24){e=q;do{e=e+1|0;d=d+1|0;c=i[e>>0]|0;i[d>>0]=c}while(c<<24>>24!=0)}if(!l){i[d>>0]=58;e=r;while(1){d=d+1|0;c=i[e>>0]|0;i[d>>0]=c;if(!(c<<24>>24))break;else e=e+1|0}}c=i[y>>0]|0;i[d>>0]=c;if(c<<24>>24){e=y;do{e=e+1|0;d=d+1|0;c=i[e>>0]|0;i[d>>0]=c}while(c<<24>>24!=0)}c=i[x>>0]|0;i[d>>0]=c;if(c<<24>>24){e=x;do{e=e+1|0;d=d+1|0;c=i[e>>0]|0;i[d>>0]=c}while(c<<24>>24!=0)}if(j)continue b;i[d>>0]=58;e=m;while(1){d=d+1|0;c=i[e>>0]|0;i[d>>0]=c;if(!(c<<24>>24))continue b;else e=e+1|0}}case 84:{c=i[q>>0]|0;i[d>>0]=c;if(!(c<<24>>24)){c=d;d=c;continue b}else e=q;while(1){e=e+1|0;d=d+1|0;c=i[e>>0]|0;i[d>>0]=c;if(!(c<<24>>24))continue b}}case 72:{c=i[x>>0]|0;i[d>>0]=c;if(!(c<<24>>24)){c=d;d=c;continue b}else e=x;while(1){e=e+1|0;d=d+1|0;c=i[e>>0]|0;i[d>>0]=c;if(!(c<<24>>24))continue b}}case 76:{c=i[w>>0]|0;i[d>>0]=c;if(!(c<<24>>24)){c=d;d=c;continue b}else e=w;while(1){e=e+1|0;d=d+1|0;c=i[e>>0]|0;i[d>>0]=c;if(!(c<<24>>24))continue b}}case 92:{if(!p){i[d>>0]=92;d=d+1|0;continue b}break}default:{}}i[d>>0]=92;i[d+1>>0]=e;d=d+2|0}i[d>>0]=0;return b|0}function Ay(a){a=a|0;var b=0;b=i[a+1>>0]|0;a:do if(b<<24>>24!=35){if(((b&-33)+-65&255)<26){a=a+2|0;while(1){b=i[a>>0]|0;if(((b&-33)+-65&255)<26)a=a+1|0;else break}}}else{b=i[a+2>>0]|0;switch(b<<24>>24){case 88:case 120:break;default:{if((b+-48&255)>=10)break a;a=a+3|0;while(1){b=i[a>>0]|0;if((b+-48&255)<10)a=a+1|0;else break a}}}a=a+3|0;while(1){b=i[a>>0]|0;if((b+-48&255)>=10)switch(b<<24>>24){case 65:case 66:case 67:case 68:case 69:case 70:case 97:case 98:case 99:case 100:case 101:case 102:break;default:break a}a=a+1|0}}while(0);return b<<24>>24==59|0}function By(a){a=a|0;var b=0;if(!a)a=0;else{b=Cy(a)|0;IP(b|0,0,a|0)|0;a=b}return a|0}function Cy(a){a=a|0;if(a){a=uP(a)|0;if(!a){QN(147543,14,1,k[24528]|0)|0;a=0}}else a=0;return a|0}function Dy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=xP(a,ha(c,b)|0)|0;if(!((b|0)!=0&(a|0)==0)){if(b>>>0>d>>>0)IP(a+(ha(d,c)|0)|0,0,ha(b-d|0,c)|0)|0}else QN(147543,14,1,k[24528]|0)|0;return a|0}function Ey(a,b){a=a|0;b=b|0;a=xP(a,b)|0;if((b|0)!=0&(a|0)==0)QN(147543,14,1,k[24528]|0)|0;return a|0}function Fy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0.0,l=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;F=r;r=r+96|0;C=F+64|0;B=F+56|0;A=F+48|0;z=F+40|0;t=F+32|0;s=F+24|0;n=F;D=4;E=uP(40)|0;k[E>>2]=0;o=a+8|0;if(i[137280]|0){e=k[(k[o>>2]|0)+192>>2]|0;if(!e){f=0;e=0}else{f=0;g=0;do{g=g+1|0;l=k[e+8>>2]|0;e=k[l+180>>2]|0;if(k[e>>2]|0){h=0;do{f=f+1|0;h=h+1|0}while((k[e+(h<<2)>>2]|0)!=0)}e=k[l+164>>2]|0}while((e|0)!=0);e=g}v=k[24528]|0;w=0;k[n>>2]=138264;k[n+4>>2]=e;k[n+8>>2]=f;k[n+12>>2]=c;k[n+16>>2]=b;ta(31,v|0,138220,n|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)!=1){w=0;Ga(1);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)!=1)v=9;else{e=L;v=68}}else{e=L;v=68}}else v=9;a:do if((v|0)==9){k[13716]=a;k[13717]=0;k[13718]=0;k[13719]=0;e=k[(k[o>>2]|0)+192>>2]|0;if(!e)e=0;else{l=0;f=0;do{h=k[e+8>>2]|0;i[h+157>>0]=0;l=l+1|0;k[13719]=l;g=k[h+180>>2]|0;if(k[g>>2]|0){e=0;do{f=f+1|0;e=e+1|0}while((k[g+(e<<2)>>2]|0)!=0);k[13718]=f}e=k[h+164>>2]|0}while((e|0)!=0);e=l<<2}f=k[13720]|0;if(!f){w=0;e=ra(21,e|0)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,E|0,D|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;if((g|0)==1){e=L;v=68;break}}else{w=0;e=Aa(88,f|0,e|0)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,E|0,D|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;if((g|0)==1){e=L;v=68;break}}k[13720]=e;k[13721]=0;e=k[13722]|0;if(!e){w=0;e=ra(21,k[13719]<<2|0)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,E|0,D|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;if((g|0)==1){e=L;v=68;break}}else{w=0;e=Aa(88,e|0,k[13719]<<2|0)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,E|0,D|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;if((g|0)==1){e=L;v=68;break}}k[13722]=e;k[13723]=0;e=k[(k[o>>2]|0)+192>>2]|0;if(e){g=1;while(1){a=e+8|0;n=k[a>>2]|0;l=n+292|0;k[l>>2]=0;n=k[n+172>>2]|0;e=k[n>>2]|0;if(!e){h=g;e=0}else{h=e;e=0;while(1){e=e+1|0;k[l>>2]=e;f=k[h+8>>2]|0;k[f+160>>2]=0;k[f+164>>2]=-1;if(!g)f=0;else{u=k[h>>2]&3;f=((k[(k[(k[((u|0)==2?h:h+-32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)-(k[(k[(k[((u|0)==3?h:h+32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)|0)<(m[f+170>>1]|0)?0:g}h=k[n+(e<<2)>>2]|0;if(!h){h=f;break}else g=f}}w=0;e=ra(25,(e<<2)+4|0)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,E|0,D|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;if((g|0)==1){e=L;v=68;break a}f=k[a>>2]|0;k[f+264>>2]=e;k[f+268>>2]=0;e=k[f+180>>2]|0;f=0;do{u=f;f=f+1|0}while((k[e+(u<<2)>>2]|0)!=0);w=0;e=ra(25,f<<2|0)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,E|0,D|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;if((g|0)==1){e=L;v=68;break a}u=k[a>>2]|0;k[u+272>>2]=e;k[u+276>>2]=0;e=k[u+164>>2]|0;if(!e)break;else g=h}if(!h){w=0;q=ra(26,k[13719]|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;break}e=k[(k[(k[13716]|0)+8>>2]|0)+192>>2]|0;if(e){f=e;do{g=f+8|0;e=k[g>>2]|0;if(!(k[e+292>>2]|0)){w=0;pa(22,q|0,f|0);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;break a}e=k[g>>2]|0}f=k[e+164>>2]|0}while((f|0)!=0)}w=0;e=ra(27,q|0)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,E|0,D|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;if((g|0)==1){e=L;v=68;break}if(!e)e=0;else{h=e;e=0;do{o=h+8|0;g=k[o>>2]|0;a=g+232|0;k[a>>2]=0;e=e+1|0;n=k[g+172>>2]|0;f=k[n>>2]|0;if(f){h=0;l=0;do{u=(m[(k[f+8>>2]|0)+170>>1]|0)+(k[(k[(k[((k[f>>2]&3|0)==3?f:f+32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)|0;h=(h|0)>(u|0)?h:u;k[a>>2]=h;l=l+1|0;f=k[n+(l<<2)>>2]|0}while((f|0)!=0)}f=k[k[g+180>>2]>>2]|0;if(f){l=0;do{h=f+-32|0;a=(k[(k[((k[f>>2]&3|0)==2?f:h)+28>>2]|0)+8>>2]|0)+292|0;u=k[a>>2]|0;k[a>>2]=u+-1;if((u|0)<2){w=0;pa(22,q|0,k[((k[f>>2]&3|0)==2?f:h)+28>>2]|0);f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,E|0,D|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;if((g|0)==1){e=L;v=68;break a}g=k[o>>2]|0}l=l+1|0;f=k[(k[g+180>>2]|0)+(l<<2)>>2]|0}while((f|0)!=0)}w=0;h=ra(27,q|0)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,E|0,D|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;if((g|0)==1){e=L;v=68;break a}}while((h|0)!=0)}if((e|0)!=(k[13719]|0)){w=0;ta(25,1,138282,s|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;break}e=k[(k[(k[13716]|0)+8>>2]|0)+192>>2]|0;if(e){f=e;do{h=f+8|0;e=k[h>>2]|0;if(k[e+292>>2]|0){w=0;e=ra(28,f|0)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,E|0,D|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;if((g|0)==1){e=L;v=68;break a}u=k[(k[h>>2]|0)+292>>2]|0;w=0;k[t>>2]=e;k[t+4>>2]=u;ta(25,3,138304,t|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;break a}e=k[h>>2]|0}f=k[e+164>>2]|0}while((f|0)!=0)}}w=0;na(100,q|0);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;break}}}if((c|0)<1){w=0;Ga(2);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;break}e=0;break}else{k[13724]=(d|0)>-1?d:30;E=DP(54900,1,E|0,D|0)|0;D=L;w=0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;break}e=0;v=68;break}}while(0);b:do if((v|0)==68){c:while(1){v=0;if(e){e=2;break b}if((k[13719]|0)>=2){e=k[(k[13716]|0)+8>>2]|0;d:while(1){e=k[e+192>>2]|0;if(e)do{u=e+8|0;d=k[u>>2]|0;i[d+157>>0]=0;k[k[d+272>>2]>>2]=0;k[k[(k[u>>2]|0)+264>>2]>>2]=0;u=k[u>>2]|0;k[u+276>>2]=0;k[u+268>>2]=0;e=k[u+164>>2]|0}while((e|0)!=0);e=k[13723]|0;if((e|0)>0){f=k[13722]|0;g=0;do{k[(k[(k[f+(g<<2)>>2]|0)+8>>2]|0)+164>>2]=-1;g=g+1|0}while((g|0)!=(e|0))}k[13723]=0;k[13721]=0;e=k[(k[13716]|0)+8>>2]|0;f=k[e+192>>2]|0;if(!f){t=0;f=0}else{while(1){w=0;ra(29,f|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){g=FP(k[e>>2]|0,E|0,D|0)|0;if(!g)Za(e|0,x|0);L=x}else g=-1;if((g|0)==1){e=L;v=68;continue c}f=k[(k[f+8>>2]|0)+164>>2]|0;if(!((f|0)!=0&(k[13723]|0)==0))break}f=k[(k[13716]|0)+8>>2]|0;t=k[13721]|0;e=f;f=k[f+192>>2]|0}if((t|0)>=(k[13719]|0))break;if(!f){v=101;break}else g=0;while(1){s=k[f+8>>2]|0;q=k[s+180>>2]|0;f=k[q>>2]|0;if(f){o=0;while(1){h=k[f+8>>2]|0;do if((k[h+164>>2]|0)<0){w=0;l=ra(30,f|0)|0;n=w;w=0;if((n|0)!=0&(x|0)!=0){a=FP(k[n>>2]|0,E|0,D|0)|0;if(!a)Za(n|0,x|0);L=x}else a=-1;if((a|0)==1){e=L;v=68;continue c}if(l){if((g|0)!=0?(d=k[f>>2]&3,u=k[g>>2]&3,((k[(k[(k[((d|0)==2?f:f+-32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)-(k[(k[(k[((d|0)==3?f:f+32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)-(m[h+170>>1]|0)|0)>=((k[(k[(k[((u|0)==2?g:g+-32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)-(k[(k[(k[((u|0)==3?g:g+32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)-(m[(k[g+8>>2]|0)+170>>1]|0)|0)):0)break;g=f}}while(0);o=o+1|0;f=k[q+(o<<2)>>2]|0;if(!f)break}}f=k[s+164>>2]|0;if(!f)break}if(!g){v=101;break}d=k[g>>2]&3;l=k[((d|0)==2?g:g+-32|0)+28>>2]|0;d=(k[(k[l+8>>2]|0)+232>>2]|0)-(k[(k[(k[((d|0)==3?g:g+32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)|0;u=m[(k[g+8>>2]|0)+170>>1]|0;n=d-u|0;if((d|0)==(u|0))continue;w=0;f=ra(30,g|0)|0;g=w;w=0;if((g|0)!=0&(x|0)!=0){h=FP(k[g>>2]|0,E|0,D|0)|0;if(!h)Za(g|0,x|0);L=x}else h=-1;if((h|0)==1){e=L;v=68;continue c}g=(f|0)==(l|0)?0-n|0:n;if((t|0)<=0)continue;h=k[13720]|0;f=0;while(1){u=(k[(k[h+(f<<2)>>2]|0)+8>>2]|0)+232|0;k[u>>2]=(k[u>>2]|0)+g;f=f+1|0;if((f|0)==(t|0))continue d}}if((v|0)==101){w=0;Ga(2);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue}else{v=102;break}}w=0;ta(39,f|0,0,1)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue}w=0;pa(23,k[(k[(k[13716]|0)+8>>2]|0)+192>>2]|0,0);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue}}u=k[24528]|0;d=0;while(1){o=k[13717]|0;n=k[13723]|0;e:do if((o|0)<(n|0)){a=k[13722]|0;l=o;e=0;f=0;while(1){g=k[a+(l<<2)>>2]|0;h=k[(k[g+8>>2]|0)+160>>2]|0;if((h|0)<0){if(!f)f=g;else f=(k[(k[f+8>>2]|0)+160>>2]|0)>(h|0)?g:f;e=e+1|0;if((e|0)>=(k[13724]|0)){s=f;break e}}l=l+1|0;k[13717]=l;if((l|0)>=(n|0)){v=110;break}}}else{e=0;f=0;v=110}while(0);f:do if((v|0)==110){v=0;if((o|0)>0){k[13717]=0;n=k[13722]|0;l=0;while(1){g=k[n+(l<<2)>>2]|0;h=k[(k[g+8>>2]|0)+160>>2]|0;if((h|0)<0){if(!f)f=g;else f=(k[(k[f+8>>2]|0)+160>>2]|0)>(h|0)?g:f;e=e+1|0;if((e|0)>=(k[13724]|0)){s=f;break f}}l=l+1|0;k[13717]=l;if((l|0)>=(o|0)){s=f;break}}}else s=f}while(0);if(!s)break;w=0;t=ra(31,s|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue c}g=k[t>>2]&3;o=t+-32|0;q=t+32|0;a=t+8|0;g=(k[(k[(k[((g|0)==2?t:o)+28>>2]|0)+8>>2]|0)+232>>2]|0)-(k[(k[(k[((g|0)==3?t:q)+28>>2]|0)+8>>2]|0)+232>>2]|0)-(m[(k[a>>2]|0)+170>>1]|0)|0;do if((g|0)>0){e=k[s>>2]&3;h=k[((e|0)==3?s:s+32|0)+28>>2]|0;l=k[h+8>>2]|0;if(((k[l+276>>2]|0)+(k[l+268>>2]|0)|0)==1){w=0;pa(24,h|0,g|0);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue c}break}e=k[((e|0)==2?s:s+-32|0)+28>>2]|0;f=k[e+8>>2]|0;if(((k[f+276>>2]|0)+(k[f+268>>2]|0)|0)==1){w=0;pa(24,e|0,0-g|0);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue c}break}if((k[l+288>>2]|0)<(k[f+288>>2]|0)){w=0;pa(24,h|0,g|0);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue c}break}else{w=0;pa(24,e|0,0-g|0);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue c}break}}while(0);h=s+8|0;l=k[(k[h>>2]|0)+160>>2]|0;n=k[t>>2]&3;w=0;n=Ea(53,k[((n|0)==3?t:q)+28>>2]|0,k[((n|0)==2?t:o)+28>>2]|0,l|0,1)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue c}e=k[t>>2]&3;w=0;e=Ea(53,k[((e|0)==2?t:o)+28>>2]|0,k[((e|0)==3?t:q)+28>>2]|0,l|0,0)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,E|0,D|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;if((g|0)==1){e=L;v=68;continue c}if((e|0)!=(n|0)){v=134;break}f=k[a>>2]|0;k[f+160>>2]=0-l;g=k[h>>2]|0;k[g+160>>2]=0;g=g+164|0;k[f+164>>2]=k[g>>2];k[(k[13722]|0)+(k[g>>2]<<2)>>2]=t;k[(k[h>>2]|0)+164>>2]=-1;h=(k[((k[s>>2]&3|0)==3?s:s+32|0)+28>>2]|0)+8|0;g=k[h>>2]|0;f=g+276|0;a=k[f>>2]|0;l=a+-1|0;k[f>>2]=l;g=k[g+272>>2]|0;g:do if((a|0)<1)e=0;else{f=0;while(1){if((k[g+(f<<2)>>2]|0)==(s|0)){e=f;break g}e=f+1|0;if((f|0)<(l|0))f=e;else break}}while(0);k[g+(e<<2)>>2]=k[g+(l<<2)>>2];k[(k[(k[h>>2]|0)+272>>2]|0)+(l<<2)>>2]=0;h=(k[((k[s>>2]&3|0)==2?s:s+-32|0)+28>>2]|0)+8|0;g=k[h>>2]|0;f=g+268|0;a=k[f>>2]|0;l=a+-1|0;k[f>>2]=l;g=k[g+264>>2]|0;h:do if((a|0)<1)e=0;else{f=0;while(1){if((k[g+(f<<2)>>2]|0)==(s|0)){e=f;break h}e=f+1|0;if((f|0)<(l|0))f=e;else break}}while(0);k[g+(e<<2)>>2]=k[g+(l<<2)>>2];k[(k[(k[h>>2]|0)+264>>2]|0)+(l<<2)>>2]=0;e=(k[((k[t>>2]&3|0)==3?t:q)+28>>2]|0)+8|0;s=k[e>>2]|0;a=s+276|0;q=k[a>>2]|0;k[a>>2]=q+1;k[(k[s+272>>2]|0)+(q<<2)>>2]=t;e=k[e>>2]|0;k[(k[e+272>>2]|0)+(k[e+276>>2]<<2)>>2]=0;e=(k[((k[t>>2]&3|0)==2?t:o)+28>>2]|0)+8|0;q=k[e>>2]|0;o=q+268|0;s=k[o>>2]|0;k[o>>2]=s+1;k[(k[q+264>>2]|0)+(s<<2)>>2]=t;e=k[e>>2]|0;k[(k[e+264>>2]|0)+(k[e+268>>2]<<2)>>2]=0;e=k[n+8>>2]|0;w=0;ta(39,n|0,k[e+280>>2]|0,k[e+284>>2]|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue c}h=d+1|0;do if((i[137280]|0)!=0&((h|0)%100|0|0)==0){e=(h|0)%1e3|0;if((e|0)==100){w=0;Ea(54,138264,17,1,u|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue c}w=0;k[A>>2]=h;ta(31,u|0,138351,A|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue c}break}w=0;k[B>>2]=h;ta(31,u|0,138351,B|0)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,E|0,D|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;if((g|0)==1){e=L;v=68;continue c}if(e)break;w=0;Aa(94,10,u|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue c}}while(0);if((h|0)<(c|0))d=h;else{d=h;break}}if((v|0)==134){w=0;ta(25,1,138312,z|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue}w=0;pa(20,54900,1);e=w;w=0;if((e|0)!=0&(x|0)!=0){v=FP(k[e>>2]|0,E|0,D|0)|0;if(!v)Za(e|0,x|0);L=x};e=L;v=68;continue}switch(b|0){case 1:{w=0;Ga(3);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue c}w=0;s=ra(25,(k[13764]<<2)+4|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue c}if((k[13764]|0)>=0){e=0;while(1){k[s+(e<<2)>>2]=0;if((e|0)<(k[13764]|0))e=e+1|0;else break}}f=(k[(k[13716]|0)+8>>2]|0)+192|0;e=k[f>>2]|0;if(e){do{e=k[e+8>>2]|0;if(!(i[e+156>>0]|0)){v=s+(k[e+232>>2]<<2)|0;k[v>>2]=(k[v>>2]|0)+1}e=k[e+164>>2]|0}while((e|0)!=0);e=k[f>>2]|0;if(e)while(1){q=e+8|0;e=k[q>>2]|0;if(!(i[e+156>>0]|0)){h=k[13764]|0;a=k[e+172>>2]|0;f=k[a>>2]|0;if(!f){o=0;l=0}else{n=0;g=0;l=0;do{v=k[f+8>>2]|0;g=(k[v+156>>2]|0)+g|0;v=(m[v+170>>1]|0)+(k[(k[(k[((k[f>>2]&3|0)==3?f:f+32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)|0;l=(l|0)>(v|0)?l:v;n=n+1|0;f=k[a+(n<<2)>>2]|0}while((f|0)!=0);o=g}a=k[e+180>>2]|0;f=k[a>>2]|0;if(!f){n=h;g=0}else{n=0;g=0;do{v=k[f+8>>2]|0;g=(k[v+156>>2]|0)+g|0;v=(k[(k[(k[((k[f>>2]&3|0)==2?f:f+-32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)-(m[v+170>>1]|0)|0;h=(h|0)<(v|0)?h:v;n=n+1|0;f=k[a+(n<<2)>>2]|0}while((f|0)!=0);n=h}f=(l|0)<0?0:l;if((o|0)==(g|0)){if((f|0)<(n|0)){g=f;h=f;while(1){h=h+1|0;f=(k[s+(h<<2)>>2]|0)<(k[s+(g<<2)>>2]|0)?h:g;if((h|0)==(n|0))break;else g=f}}v=e+232|0;t=s+(k[v>>2]<<2)|0;k[t>>2]=(k[t>>2]|0)+-1;t=s+(f<<2)|0;k[t>>2]=(k[t>>2]|0)+1;k[v>>2]=f}f=k[e+264>>2]|0;if(f){w=0;na(95,f|0);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue c}e=k[q>>2]|0}f=k[e+272>>2]|0;if(f){w=0;na(95,f|0);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue c}e=k[q>>2]|0}i[e+157>>0]=0}e=k[e+164>>2]|0;if(!e)break}}w=0;na(95,s|0);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue c}break}case 2:{if((k[13723]|0)>0){l=0;while(1){h=k[(k[13722]|0)+(l<<2)>>2]|0;do if(!(k[(k[h+8>>2]|0)+160>>2]|0)){w=0;e=ra(31,h|0)|0;f=w;w=0;if((f|0)!=0&(x|0)!=0){g=FP(k[f>>2]|0,E|0,D|0)|0;if(!g)Za(f|0,x|0);L=x}else g=-1;if((g|0)==1){e=L;v=68;continue c}if((e|0)!=0?(y=k[e>>2]&3,y=(k[(k[(k[((y|0)==2?e:e+-32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)-(k[(k[(k[((y|0)==3?e:e+32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)-(m[(k[e+8>>2]|0)+170>>1]|0)|0,(y|0)>=2):0){e=k[h>>2]&3;f=k[((e|0)==3?h:h+32|0)+28>>2]|0;e=k[((e|0)==2?h:h+-32|0)+28>>2]|0;if((k[(k[f+8>>2]|0)+288>>2]|0)<(k[(k[e+8>>2]|0)+288>>2]|0)){w=0;pa(24,f|0,(y|0)/2|0|0);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue c}break}else{w=0;pa(24,e|0,(y|0)/-2|0|0);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue c}break}}}while(0);l=l+1|0;if((l|0)>=(k[13723]|0))break}}w=0;Ga(2);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue c}break}default:{w=0;Ga(3);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue c}w=0;Ga(2);e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue c}}}if(!(i[137280]|0)){e=0;break b}if((d|0)>99){w=0;Aa(94,10,u|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68;continue}}e=k[13719]|0;f=k[13718]|0;w=0;j=+Ba(1);g=w;w=0;if((g|0)!=0&(x|0)!=0){h=FP(k[g>>2]|0,E|0,D|0)|0;if(!h)Za(g|0,x|0);L=x}else h=-1;if((h|0)==1){e=L;v=68;continue}w=0;k[C>>2]=138264;k[C+4>>2]=e;k[C+8>>2]=f;k[C+12>>2]=d;p[C+16>>3]=j;ta(31,u|0,138355,C|0)|0;e=w;w=0;if((e|0)!=0&(x|0)!=0){f=FP(k[e>>2]|0,E|0,D|0)|0;if(!f)Za(e|0,x|0);L=x}else f=-1;if((f|0)==1){e=L;v=68}else{v=204;break}}if((v|0)==102){e=1;break}else if((v|0)==204){e=0;break}}while(0);vP(E|0);r=F;return e|0}function Gy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ss(a,138393)|0;if(!d)d=30;else d=bO(d)|0;return Fy(a,b,c,d)|0}function Hy(){var a=0,b=0,c=0;a=k[(k[(k[13716]|0)+8>>2]|0)+192>>2]|0;if(a)do{c=a+8|0;a=k[c>>2]|0;b=k[a+264>>2]|0;if(b){vP(b);a=k[c>>2]|0}b=k[a+272>>2]|0;if(b){vP(b);a=k[c>>2]|0}i[a+157>>0]=0;a=k[a+164>>2]|0}while((a|0)!=0);return}function Iy(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0;f=a+8|0;a=k[f>>2]|0;b=k[k[a+180>>2]>>2]|0;a:do if(!b)e=2;else{d=0;while(1){g=k[b>>2]&3;c=b+-32|0;h=k[(k[((g|0)==2?b:c)+28>>2]|0)+8>>2]|0;if((i[h+157>>0]|0)==0?((k[h+232>>2]|0)-(k[(k[(k[((g|0)==3?b:b+32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)|0)==(m[(k[b+8>>2]|0)+170>>1]|0):0){Ty(b);if((k[13723]|0)==((k[13719]|0)+-1|0)){a=1;break a}if(Iy(k[((k[b>>2]&3|0)==2?b:c)+28>>2]|0)|0){a=1;break a}a=k[f>>2]|0}d=d+1|0;b=k[(k[a+180>>2]|0)+(d<<2)>>2]|0;if(!b){e=2;break}}}while(0);b:do if((e|0)==2){b=k[k[a+172>>2]>>2]|0;if(!b)a=0;else{d=0;while(1){g=k[b>>2]&3;c=b+32|0;h=k[(k[((g|0)==3?b:c)+28>>2]|0)+8>>2]|0;if((i[h+157>>0]|0)==0?((k[(k[(k[((g|0)==2?b:b+-32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)-(k[h+232>>2]|0)|0)==(m[(k[b+8>>2]|0)+170>>1]|0):0){Ty(b);if((k[13723]|0)==((k[13719]|0)+-1|0)){a=1;break b}if(Iy(k[((k[b>>2]&3|0)==3?b:c)+28>>2]|0)|0){a=1;break b}a=k[f>>2]|0}d=d+1|0;b=k[(k[a+172>>2]|0)+(d<<2)>>2]|0;if(!b){a=0;break}}}}while(0);return a|0}function Jy(a){a=a|0;var b=0,c=0,d=0;b=k[a>>2]&3;c=k[((b|0)==3?a:a+32|0)+28>>2]|0;a=k[((b|0)==2?a:a+-32|0)+28>>2]|0;b=(i[(k[a+8>>2]|0)+157>>0]|0)==0;if(!(i[(k[c+8>>2]|0)+157>>0]|0)){if(b)d=4}else if(b)a=c;else d=4;if((d|0)==4)a=0;return a|0}function Ky(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;f=a+8|0;a=k[f>>2]|0;k[a+280>>2]=b;k[a+284>>2]=c;d=k[k[a+272>>2]>>2]|0;if(d){e=0;do{if((d|0)!=(b|0)){c=Ky(k[((k[d>>2]&3|0)==2?d:d+-32|0)+28>>2]|0,d,c)|0;a=k[f>>2]|0}e=e+1|0;d=k[(k[a+272>>2]|0)+(e<<2)>>2]|0}while((d|0)!=0)}d=k[k[a+264>>2]>>2]|0;if(d){e=0;do{if((d|0)!=(b|0)){c=Ky(k[((k[d>>2]&3|0)==3?d:d+32|0)+28>>2]|0,d,c)|0;a=k[f>>2]|0}e=e+1|0;d=k[(k[a+264>>2]|0)+(e<<2)>>2]|0}while((d|0)!=0)}k[a+288>>2]=c;return c+1|0}function Ly(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;e=a+8|0;c=k[e>>2]|0;a=k[k[c+272>>2]>>2]|0;if(a){d=0;do{if((a|0)!=(b|0)){Ly(k[((k[a>>2]&3|0)==2?a:a+-32|0)+28>>2]|0,a);c=k[e>>2]|0}d=d+1|0;a=k[(k[c+272>>2]|0)+(d<<2)>>2]|0}while((a|0)!=0)}a=k[k[c+264>>2]>>2]|0;if(a){d=0;do{if((a|0)!=(b|0)){Ly(k[((k[a>>2]&3|0)==3?a:a+32|0)+28>>2]|0,a);c=k[e>>2]|0}d=d+1|0;a=k[(k[c+264>>2]|0)+(d<<2)>>2]|0}while((a|0)!=0)}if(b){a=k[b>>2]&3;d=k[((a|0)==3?b:b+32|0)+28>>2]|0;c=k[d+8>>2]|0;if((k[c+280>>2]|0)==(b|0))h=1;else{d=k[((a|0)==2?b:b+-32|0)+28>>2]|0;c=k[d+8>>2]|0;h=-1}g=k[c+180>>2]|0;a=k[g>>2]|0;if(!a)a=0;else{e=a;f=0;a=0;do{a=(Sy(e,d,h)|0)+a|0;f=f+1|0;e=k[g+(f<<2)>>2]|0}while((e|0)!=0)}f=k[c+172>>2]|0;c=k[f>>2]|0;if(c){e=0;do{a=(Sy(c,d,h)|0)+a|0;e=e+1|0;c=k[f+(e<<2)>>2]|0}while((c|0)!=0)}k[(k[b+8>>2]|0)+160>>2]=a}return}function My(a){a=a|0;var b=0,c=0;b=k[a>>2]&3;c=k[((b|0)==3?a:a+32|0)+28>>2]|0;a=k[((b|0)==2?a:a+-32|0)+28>>2]|0;b=(k[(k[c+8>>2]|0)+288>>2]|0)<(k[(k[a+8>>2]|0)+288>>2]|0);a=b?c:a;k[13766]=0;k[13767]=2147483647;c=k[a+8>>2]|0;k[13768]=k[c+284>>2];k[13769]=k[c+288>>2];if(b)Ry(a);else Qy(a);return k[13766]|0}function Ny(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=a+8|0;a=k[e>>2]|0;c=a+232|0;k[c>>2]=(k[c>>2]|0)-b;c=k[k[a+272>>2]>>2]|0;if(c){d=0;do{if((c|0)!=(k[a+280>>2]|0)){Ny(k[((k[c>>2]&3|0)==2?c:c+-32|0)+28>>2]|0,b);a=k[e>>2]|0}d=d+1|0;c=k[(k[a+272>>2]|0)+(d<<2)>>2]|0}while((c|0)!=0)}c=k[k[a+264>>2]>>2]|0;if(c){d=0;do{if((c|0)!=(k[a+280>>2]|0)){Ny(k[((k[c>>2]&3|0)==3?c:c+32|0)+28>>2]|0,b);a=k[e>>2]|0}d=d+1|0;c=k[(k[a+264>>2]|0)+(d<<2)>>2]|0}while((c|0)!=0)}return}function Oy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;f=(d|0)==0&1;g=0-c|0;e=k[(k[b+8>>2]|0)+288>>2]|0;while(1){b=k[a+8>>2]|0;if((k[b+284>>2]|0)<=(e|0)?(e|0)<=(k[b+288>>2]|0):0)break;b=k[b+280>>2]|0;h=b+32|0;i=(k[b+8>>2]|0)+160|0;k[i>>2]=((((a|0)==(k[((k[b>>2]&3|0)==3?b:h)+28>>2]|0)?d:f)|0)==0?g:c)+(k[i>>2]|0);i=k[b>>2]&3;h=k[((i|0)==3?b:h)+28>>2]|0;b=k[((i|0)==2?b:b+-32|0)+28>>2]|0;a=(k[(k[h+8>>2]|0)+288>>2]|0)>(k[(k[b+8>>2]|0)+288>>2]|0)?h:b}return a|0}function Py(){var a=0,b=0,c=0,d=0,e=0,f=0,g=0;k[13765]=2147483647;k[13764]=-2147483647;d=(k[(k[13716]|0)+8>>2]|0)+192|0;c=k[d>>2]|0;if(c){a=2147483647;b=-2147483647;do{c=k[c+8>>2]|0;if(!(i[c+156>>0]|0)){f=c+232|0;g=k[f>>2]|0;a=(a|0)<(g|0)?a:g;k[13765]=a;f=k[f>>2]|0;b=(b|0)>(f|0)?b:f;k[13764]=b}c=k[c+164>>2]|0}while((c|0)!=0);if(a){c=k[d>>2]|0;if(!c)e=9;else{b=c;do{g=k[b+8>>2]|0;f=g+232|0;k[f>>2]=(k[f>>2]|0)-a;b=k[g+164>>2]|0;a=k[13765]|0}while((b|0)!=0);b=k[13764]|0;e=9}}}else{a=2147483647;b=-2147483647;e=9}if((e|0)==9){k[13764]=b-a;k[13765]=0}return}function Qy(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0;g=a+8|0;b=k[g>>2]|0;a=k[k[b+180>>2]>>2]|0;if(a){e=0;do{d=k[a+8>>2]|0;if((k[d+164>>2]|0)<0){b=k[a>>2]&3;c=k[(k[((b|0)==2?a:a+-32|0)+28>>2]|0)+8>>2]|0;h=k[c+288>>2]|0;if((k[13768]|0)>(h|0)|(h|0)>(k[13769]|0)?(f=(k[c+232>>2]|0)-(k[(k[(k[((b|0)==3?a:a+32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)-(m[d+170>>1]|0)|0,(f|0)<(k[13767]|0)|(k[13766]|0)==0):0){k[13766]=a;k[13767]=f}}else{a=k[((k[a>>2]&3|0)==2?a:a+-32|0)+28>>2]|0;if((k[(k[a+8>>2]|0)+288>>2]|0)<(k[b+288>>2]|0))Qy(a)}e=e+1|0;b=k[g>>2]|0;a=k[(k[b+180>>2]|0)+(e<<2)>>2]|0}while((a|0)!=0)}c=k[k[b+264>>2]>>2]|0;a=k[13767]|0;if((c|0)!=0&(a|0)>0){d=0;do{c=k[((k[c>>2]&3|0)==3?c:c+32|0)+28>>2]|0;if((k[(k[c+8>>2]|0)+288>>2]|0)<(k[b+288>>2]|0)){Qy(c);a=k[13767]|0;b=k[g>>2]|0}d=d+1|0;c=k[(k[b+264>>2]|0)+(d<<2)>>2]|0}while((c|0)!=0&(a|0)>0)}return}function Ry(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0;g=a+8|0;b=k[g>>2]|0;a=k[k[b+172>>2]>>2]|0;if(a){e=0;do{d=k[a+8>>2]|0;if((k[d+164>>2]|0)<0){b=k[a>>2]&3;c=k[(k[((b|0)==3?a:a+32|0)+28>>2]|0)+8>>2]|0;h=k[c+288>>2]|0;if((k[13768]|0)>(h|0)|(h|0)>(k[13769]|0)?(f=(k[(k[(k[((b|0)==2?a:a+-32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)-(k[c+232>>2]|0)-(m[d+170>>1]|0)|0,(f|0)<(k[13767]|0)|(k[13766]|0)==0):0){k[13766]=a;k[13767]=f}}else{a=k[((k[a>>2]&3|0)==3?a:a+32|0)+28>>2]|0;if((k[(k[a+8>>2]|0)+288>>2]|0)<(k[b+288>>2]|0))Ry(a)}e=e+1|0;b=k[g>>2]|0;a=k[(k[b+172>>2]|0)+(e<<2)>>2]|0}while((a|0)!=0)}c=k[k[b+272>>2]>>2]|0;a=k[13767]|0;if((c|0)!=0&(a|0)>0){d=0;do{c=k[((k[c>>2]&3|0)==2?c:c+-32|0)+28>>2]|0;if((k[(k[c+8>>2]|0)+288>>2]|0)<(k[b+288>>2]|0)){Ry(c);a=k[13767]|0;b=k[g>>2]|0}d=d+1|0;c=k[(k[b+272>>2]|0)+(d<<2)>>2]|0}while((c|0)!=0&(a|0)>0)}return}function Sy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;g=k[a>>2]&3;h=(g|0)==3?a:a+32|0;d=k[h+28>>2]|0;if((d|0)==(b|0))d=k[((g|0)==2?a:a+-32|0)+28>>2]|0;f=k[b+8>>2]|0;e=k[(k[d+8>>2]|0)+288>>2]|0;if((k[f+284>>2]|0)<=(e|0)?(e|0)<=(k[f+288>>2]|0):0){d=k[a+8>>2]|0;if((k[d+164>>2]|0)>-1)e=k[d+160>>2]|0;else e=0;f=1;d=e-(k[d+156>>2]|0)|0}else{f=0;d=k[(k[a+8>>2]|0)+156>>2]|0}b=(k[((c|0)>0?((g|0)==2?a:a+-32|0):h)+28>>2]|0)==(b|0)?1:-1;return (((f?b:0-b|0)|0)<0?0-d|0:d)|0}function Ty(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;f=r;r=r+32|0;b=(k[a+8>>2]|0)+164|0;if((k[b>>2]|0)>-1){Yr(1,138404,f)|0;Za(54900,1)}c=k[13723]|0;k[b>>2]=c;k[13723]=c+1;k[(k[13722]|0)+(c<<2)>>2]=a;c=k[a>>2]|0;e=a+32|0;b=k[((c&3|0)==3?a:e)+28>>2]|0;if(!(i[(k[b+8>>2]|0)+157>>0]|0)){d=k[13721]|0;k[13721]=d+1;k[(k[13720]|0)+(d<<2)>>2]=b;b=k[a>>2]|0}else b=c;d=a+-32|0;c=k[((b&3|0)==2?a:d)+28>>2]|0;if(!(i[(k[c+8>>2]|0)+157>>0]|0)){b=k[13721]|0;k[13721]=b+1;k[(k[13720]|0)+(b<<2)>>2]=c;b=k[a>>2]|0}e=(k[((b&3|0)==3?a:e)+28>>2]|0)+8|0;b=k[e>>2]|0;i[b+157>>0]=1;g=b+276|0;c=k[g>>2]|0;k[g>>2]=c+1;k[(k[b+272>>2]|0)+(c<<2)>>2]=a;c=k[e>>2]|0;k[(k[c+272>>2]|0)+(k[c+276>>2]<<2)>>2]=0;e=k[e>>2]|0;if(!(k[(k[e+180>>2]|0)+((k[e+276>>2]|0)+-1<<2)>>2]|0)){Yr(1,138438,f+8|0)|0;Za(54900,1)}g=(k[((k[a>>2]&3|0)==2?a:d)+28>>2]|0)+8|0;d=k[g>>2]|0;i[d+157>>0]=1;c=d+268|0;e=k[c>>2]|0;k[c>>2]=e+1;k[(k[d+264>>2]|0)+(e<<2)>>2]=a;a=k[g>>2]|0;k[(k[a+264>>2]|0)+(k[a+268>>2]<<2)>>2]=0;g=k[g>>2]|0;if(!(k[(k[g+172>>2]|0)+((k[g+268>>2]|0)+-1<<2)>>2]|0)){Yr(1,138473,f+16|0)|0;Za(54900,1)}else{r=f;return}}function Uy(a){a=+a;return +((k[13607]|0)==0?a:+p[4253]-a)}function Vy(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0.0,v=0.0,w=0.0;t=r;r=r+1088|0;o=t+40|0;s=t+32|0;j=t+24|0;l=t+16|0;h=t+8|0;g=t;q=t+56|0;f=k[(k[(k[b+52>>2]|0)+8>>2]|0)+4>>2]|0;k[13770]=f;e=k[b+8>>2]|0;if(k[13607]|0){u=+p[e+40>>3]+ +p[e+24>>3];p[4253]=u;p[4254]=u/72.0}v=+p[e+32>>3];u=+p[e+40>>3];w=+p[a+352>>3];_b[f&127](c,138507)|0;p[g>>3]=w;TN(q,138514,g)|0;_b[k[55080>>2]&127](c,q)|0;_b[k[55080>>2]&127](c,138519)|0;p[h>>3]=v/72.0;TN(q,138514,h)|0;_b[k[55080>>2]&127](c,q)|0;_b[k[55080>>2]&127](c,138519)|0;p[o>>3]=u/72.0;TN(q,138514,o)|0;_b[k[55080>>2]&127](c,q)|0;i[138521]=10;_b[k[55080>>2]&127](c,138521)|0;e=Kt(b)|0;if(e)do{f=e+8|0;if(!(i[(k[f>>2]|0)+118>>0]|0)){n=Uu(ht(e)|0)|0;_b[k[55080>>2]&127](c,138523)|0;_b[k[55080>>2]&127](c,n)|0;n=(k[f>>2]|0)+16|0;k[o>>2]=k[n>>2];k[o+4>>2]=k[n+4>>2];k[o+8>>2]=k[n+8>>2];k[o+12>>2]=k[n+12>>2];Yy(c,o);if(!(i[(k[(k[f>>2]|0)+104>>2]|0)+82>>0]|0)){m=$t(e)|0;n=Bu(m,k[k[(k[f>>2]|0)+104>>2]>>2]|0)|0;a=Uu(n)|0;Du(m,n)|0}else a=Uu(ts(e,k[13636]|0)|0)|0;w=+p[(k[f>>2]|0)+32>>3];_b[k[55080>>2]&127](c,138519)|0;p[l>>3]=w;TN(q,138514,l)|0;_b[k[55080>>2]&127](c,q)|0;w=+p[(k[f>>2]|0)+40>>3];_b[k[55080>>2]&127](c,138519)|0;p[j>>3]=w;TN(q,138514,j)|0;_b[k[55080>>2]&127](c,q)|0;_b[k[55080>>2]&127](c,138519)|0;_b[k[55080>>2]&127](c,a)|0;n=mB(e,k[13639]|0,146910)|0;_b[k[55080>>2]&127](c,138519)|0;_b[k[55080>>2]&127](c,n)|0;f=k[k[(k[f>>2]|0)+8>>2]>>2]|0;_b[k[55080>>2]&127](c,138519)|0;_b[k[55080>>2]&127](c,f)|0;f=mB(e,k[13622]|0,173315)|0;_b[k[55080>>2]&127](c,138519)|0;_b[k[55080>>2]&127](c,f)|0;f=mB(e,k[13623]|0,176676)|0;if(!(i[f>>0]|0))f=mB(e,k[13622]|0,170825)|0;_b[k[55080>>2]&127](c,138519)|0;_b[k[55080>>2]&127](c,f)|0;i[138521]=10;_b[k[55080>>2]&127](c,138521)|0}e=Lt(b,e)|0}while((e|0)!=0);e=Kt(b)|0;if(e){n=d<<24>>24==0;do{f=Es(b,e)|0;if(f)do{if(n){l=176676;d=176676}else{d=ss(f,147395)|0;l=ss(f,147404)|0;l=(l|0)!=0?l:176676;d=(d|0)!=0?d:176676}m=f+8|0;a=k[m>>2]|0;g=k[a+8>>2]|0;if(g){j=k[g+4>>2]|0;if((j|0)>0){g=k[g>>2]|0;h=0;a=0;do{a=(k[g+(h*48|0)+4>>2]|0)+a|0;h=h+1|0}while((h|0)<(j|0))}else a=0;_b[k[55080>>2]&127](c,147390)|0;Zy(c,k[((k[f>>2]&3|0)==3?f:f+32|0)+28>>2]|0,d);Zy(c,k[((k[f>>2]&3|0)==2?f:f+-32|0)+28>>2]|0,l);_b[k[55080>>2]&127](c,138519)|0;k[s>>2]=a;TN(q,173421,s)|0;_b[k[55080>>2]&127](c,q)|0;a=k[m>>2]|0;g=k[a+8>>2]|0;if((k[g+4>>2]|0)>0){j=0;do{h=k[g>>2]|0;g=k[h+(j*48|0)>>2]|0;h=k[h+(j*48|0)+4>>2]|0;if((h|0)>0){a=0;do{d=g+(a<<4)|0;k[o>>2]=k[d>>2];k[o+4>>2]=k[d+4>>2];k[o+8>>2]=k[d+8>>2];k[o+12>>2]=k[d+12>>2];Yy(c,o);a=a+1|0}while((a|0)!=(h|0));a=k[m>>2]|0}j=j+1|0;g=k[a+8>>2]|0}while((j|0)<(k[g+4>>2]|0))}}if(k[a+96>>2]|0){j=$t(k[((k[f>>2]&3|0)==3?f:f+32|0)+28>>2]|0)|0;l=Bu(j,k[k[(k[m>>2]|0)+96>>2]>>2]|0)|0;d=Uu(l)|0;Du(j,l)|0;_b[k[55080>>2]&127](c,138519)|0;_b[k[55080>>2]&127](c,d)|0;m=(k[(k[m>>2]|0)+96>>2]|0)+56|0;k[o>>2]=k[m>>2];k[o+4>>2]=k[m+4>>2];k[o+8>>2]=k[m+8>>2];k[o+12>>2]=k[m+12>>2];Yy(c,o)}m=mB(f,k[13674]|0,146910)|0;_b[k[55080>>2]&127](c,138519)|0;_b[k[55080>>2]&127](c,m)|0;m=mB(f,k[13658]|0,173315)|0;_b[k[55080>>2]&127](c,138519)|0;_b[k[55080>>2]&127](c,m)|0;i[138521]=10;_b[k[55080>>2]&127](c,138521)|0;f=Gs(b,f)|0}while((f|0)!=0);e=Lt(b,e)|0}while((e|0)!=0)}_b[k[55080>>2]&127](c,138529)|0;r=t;return}function Wy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0.0,l=0.0,n=0,o=0.0,q=0.0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;Y=r;r=r+2288|0;U=Y+208|0;T=Y+192|0;S=Y+176|0;R=Y+160|0;Q=Y+144|0;P=Y+128|0;N=Y+112|0;M=Y+96|0;L=Y+80|0;K=Y+64|0;J=Y+56|0;I=Y+48|0;V=Y+32|0;O=Y+24|0;H=Y;G=Y+1264|0;X=Y+224|0;W=a+8|0;F=(m[(k[W>>2]|0)+178>>1]|0)>2;Dx(1);if(k[13607]|0){C=k[W>>2]|0;q=+p[C+40>>3]+ +p[C+24>>3];p[4253]=q;p[4254]=q/72.0}$r(X,1024,Y+240|0);LB(a,1,138535,176676)|0;LB(a,1,138539,176676)|0;d=LB(a,1,177253,176676)|0;k[13620]=d;d=LB(a,1,177185,176676)|0;k[13619]=d;LB(a,2,138535,176676)|0;d=i[(k[W>>2]|0)+113>>0]|0;if(d&16){LB(a,1,138545,176676)|0;d=i[(k[W>>2]|0)+113>>0]|0}if(d&1){LB(a,2,138549,176676)|0;d=i[(k[W>>2]|0)+113>>0]|0}if(d&32){LB(a,2,138545,176676)|0;d=i[(k[W>>2]|0)+113>>0]|0}if(d&2){LB(a,2,138552,176676)|0;d=i[(k[W>>2]|0)+113>>0]|0}if(d&4){LB(a,2,138560,176676)|0;d=i[(k[W>>2]|0)+113>>0]|0}if(!(d&8)){A=0;B=0;C=0}else{B=LB(a,0,138549,176676)|0;C=LB(a,0,138568,176676)|0;A=LB(a,0,138575,176676)|0}z=LB(a,0,138583,176676)|0;d=Kt(a)|0;if(!d){e=0;d=0}else{x=X+4|0;y=X+8|0;e=0;w=d;d=0;do{v=w+8|0;f=k[v>>2]|0;h=+p[f+16>>3];l=+p[f+24>>3];l=(k[13607]|0)!=0?+p[4253]-l:l;if(F){q=+p[(k[f+132>>2]|0)+16>>3]*72.0;p[H>>3]=h;p[H+8>>3]=l;p[H+16>>3]=q;TN(G,138586,H)|0;cs(X,G)|0;if((m[(k[W>>2]|0)+178>>1]|0)>3){f=3;do{p[O>>3]=+p[(k[(k[v>>2]|0)+132>>2]|0)+(f<<3)>>3]*72.0;TN(G,138601,O)|0;cs(X,G)|0;f=f+1|0}while((f|0)<(m[(k[W>>2]|0)+178>>1]|0))}f=k[x>>2]|0;if(f>>>0>=(k[y>>2]|0)>>>0){as(X,1)|0;f=k[x>>2]|0}i[f>>0]=0;u=k[X>>2]|0;k[x>>2]=u;us(w,138535,u)|0;u=w}else{p[V>>3]=h;p[V+8>>3]=l;TN(G,138607,V)|0;us(w,138535,G)|0;u=w}p[I>>3]=+p[(k[v>>2]|0)+80>>3]/72.0;TN(G,138514,I)|0;vs(u,k[13619]|0,G)|0;f=k[v>>2]|0;p[J>>3]=(+p[f+88>>3]+ +p[f+96>>3])/72.0;TN(G,138514,J)|0;vs(u,k[13620]|0,G)|0;f=k[v>>2]|0;g=k[f+108>>2]|0;if((g|0)!=0?(i[g+81>>0]|0)!=0:0){q=+p[g+64>>3];q=(k[13607]|0)==0?q:+p[4253]-q;p[K>>3]=+p[g+56>>3];p[K+8>>3]=q;TN(G,138607,K)|0;us(u,138545,G)|0;f=k[v>>2]|0}if(qO(k[k[f+8>>2]>>2]|0,141928)|0){if((k[13652]|0)!=0?(Rz(w)|0)<<24>>24!=0:0){g=k[(k[v>>2]|0)+12>>2]|0;t=g+8|0;f=k[t>>2]|0;if((f|0)<3){f=ss(u,138617)|0;if(!f)f=8;else{f=bO(f)|0;f=(f|0)<3?8:f}}n=g+44|0;q=+(f|0);s=0;do{if((s|0)>0){g=k[x>>2]|0;if(g>>>0>=(k[y>>2]|0)>>>0){as(X,1)|0;g=k[x>>2]|0}k[x>>2]=g+1;i[g>>0]=32}if((k[t>>2]|0)>2){g=k[n>>2]|0;h=+p[g+(s<<4)+8>>3];if(!(k[13607]|0))h=h/72.0;else h=+p[4254]-h/72.0;p[L>>3]=+p[g+(s<<4)>>3]/72.0;p[L+8>>3]=h;TN(G,138630,L)|0}else{g=k[v>>2]|0;h=+(s|0)/q*3.141592653589793*2.0;o=+p[g+32>>3]*.5*+Z(+h);l=+p[g+40>>3];if(!(k[13607]|0))h=l*.5*+_(+h);else h=+p[4254]-l*.5*+_(+h);p[M>>3]=o;p[M+8>>3]=h;TN(G,138630,M)|0}cs(X,G)|0;s=s+1|0}while((s|0)!=(f|0));g=k[13652]|0;f=k[x>>2]|0;if(f>>>0>=(k[y>>2]|0)>>>0){as(X,1)|0;f=k[x>>2]|0}i[f>>0]=0;v=k[X>>2]|0;k[x>>2]=v;vs(u,g,v)|0}}else{_y(w,k[f+12>>2]|0,X);es(X)|0;f=k[x>>2]|0;if(f>>>0>=(k[y>>2]|0)>>>0){as(X,1)|0;f=k[x>>2]|0}i[f>>0]=0;v=k[X>>2]|0;k[x>>2]=v;us(u,138539,v)|0}if((k[13605]|0)>0?(D=Es(a,w)|0,(D|0)!=0):0){u=D;do{t=u+8|0;f=k[t>>2]|0;do if((i[f+112>>0]|0)!=6?(E=k[f+8>>2]|0,(E|0)!=0):0){if((k[E+4>>2]|0)>0){s=0;do{if((s|0)>0){f=k[x>>2]|0;if(f>>>0>=(k[y>>2]|0)>>>0){as(X,1)|0;f=k[x>>2]|0}k[x>>2]=f+1;i[f>>0]=59;f=k[t>>2]|0}n=k[f+8>>2]|0;g=k[n>>2]|0;if(k[g+(s*48|0)+8>>2]|0){q=+p[g+(s*48|0)+24>>3];q=(k[13607]|0)==0?q:+p[4253]-q;p[N>>3]=+p[g+(s*48|0)+16>>3];p[N+8>>3]=q;TN(G,138640,N)|0;cs(X,G)|0;f=k[t>>2]|0;n=k[f+8>>2]|0;g=k[n>>2]|0;d=1}if(k[g+(s*48|0)+12>>2]|0){q=+p[g+(s*48|0)+40>>3];q=(k[13607]|0)==0?q:+p[4253]-q;p[P>>3]=+p[g+(s*48|0)+32>>3];p[P+8>>3]=q;TN(G,138653,P)|0;cs(X,G)|0;f=k[t>>2]|0;n=k[f+8>>2]|0;g=k[n>>2]|0;e=1}if((k[g+(s*48|0)+4>>2]|0)>0){n=0;do{if((n|0)>0){f=k[x>>2]|0;if(f>>>0>=(k[y>>2]|0)>>>0){as(X,1)|0;f=k[x>>2]|0}k[x>>2]=f+1;i[f>>0]=32;f=k[t>>2]|0}f=k[(k[k[f+8>>2]>>2]|0)+(s*48|0)>>2]|0;q=+p[f+(n<<4)+8>>3];q=(k[13607]|0)==0?q:+p[4253]-q;p[Q>>3]=+p[f+(n<<4)>>3];p[Q+8>>3]=q;TN(G,138607,Q)|0;cs(X,G)|0;n=n+1|0;f=k[t>>2]|0;g=k[f+8>>2]|0}while((n|0)<(k[(k[g>>2]|0)+(s*48|0)+4>>2]|0))}else g=n;s=s+1|0}while((s|0)<(k[g+4>>2]|0))}f=k[x>>2]|0;if(f>>>0>=(k[y>>2]|0)>>>0){as(X,1)|0;f=k[x>>2]|0}i[f>>0]=0;f=k[X>>2]|0;k[x>>2]=f;us(u,138535,f)|0;f=k[t>>2]|0;g=k[f+96>>2]|0;if(g){q=+p[g+64>>3];q=(k[13607]|0)==0?q:+p[4253]-q;p[R>>3]=+p[g+56>>3];p[R+8>>3]=q;TN(G,138607,R)|0;us(u,138549,G)|0;f=k[t>>2]|0}g=k[f+108>>2]|0;do if(g){if(!(i[g+81>>0]|0))break;q=+p[g+64>>3];q=(k[13607]|0)==0?q:+p[4253]-q;p[S>>3]=+p[g+56>>3];p[S+8>>3]=q;TN(G,138607,S)|0;us(u,138545,G)|0;f=k[t>>2]|0}while(0);g=k[f+100>>2]|0;if(g){q=+p[g+64>>3];q=(k[13607]|0)==0?q:+p[4253]-q;p[T>>3]=+p[g+56>>3];p[T+8>>3]=q;TN(G,138607,T)|0;us(u,138552,G)|0;f=k[t>>2]|0}f=k[f+104>>2]|0;if(!f)break;q=+p[f+64>>3];q=(k[13607]|0)==0?q:+p[4253]-q;p[U>>3]=+p[f+56>>3];p[U+8>>3]=q;TN(G,138607,U)|0;us(u,138560,G)|0}while(0);u=Gs(a,u)|0}while((u|0)!=0)}w=Lt(a,w)|0}while((w|0)!=0)}$y(a,z,B,C,A);ds(X);if(j[(k[W>>2]|0)+136>>1]&1)KB(a);k[b>>2]=d;k[c>>2]=e;Dx(0);r=Y;return}function Xy(a){a=a|0;var b=0;b=r;r=r+16|0;Wy(a,b,b+4|0);r=b;return}function Yy(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0.0,g=0;c=r;r=r+1040|0;e=c+8|0;g=c;d=c+16|0;f=+p[b>>3]/72.0;_b[k[55080>>2]&127](a,138519)|0;p[g>>3]=f;TN(d,138514,g)|0;_b[k[55080>>2]&127](a,d)|0;f=+p[b+8>>3];f=((k[13607]|0)==0?f:+p[4253]-f)/72.0;_b[k[55080>>2]&127](a,138519)|0;p[e>>3]=f;TN(d,138514,e)|0;_b[k[55080>>2]&127](a,d)|0;r=c;return}function Zy(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if(!(i[(k[b+8>>2]|0)+118>>0]|0))b=Uu(ht(b)|0)|0;else{e=$t(b)|0;d=Bu(e,(oO(ht(b)|0,58)|0)+1|0)|0;b=Uu(d)|0;Du(e,d)|0}_b[k[55080>>2]&127](a,138519)|0;_b[k[55080>>2]&127](a,b)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0){e=Uu(c)|0;_b[k[55080>>2]&127](a,145961)|0;_b[k[55080>>2]&127](a,e)|0}return}function _y(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0.0,g=0.0,h=0.0,i=0.0,j=0,l=0,m=0,n=0.0;m=r;r=r+1056|0;j=m;e=m+32|0;l=b+48|0;d=k[l>>2]|0;if(!d){d=k[a+8>>2]|0;i=+p[d+16>>3];f=+p[b+24>>3];g=+p[d+24>>3];if(!(k[13607]|0)){h=f+g;f=+p[b+40>>3]+g}else{n=+p[4253];h=n-(f+g);f=n-(+p[b+40>>3]+g)}n=+p[b+32>>3]+i;p[j>>3]=+p[b+16>>3]+i;p[j+8>>3]=h;p[j+16>>3]=n;p[j+24>>3]=f;TN(e,138691,j)|0;cs(c,e)|0;d=k[l>>2]|0}if((d|0)>0){d=b+56|0;e=0;do{_y(a,k[(k[d>>2]|0)+(e<<2)>>2]|0,c);e=e+1|0}while((e|0)<(k[l>>2]|0))}r=m;return}function $y(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,j=0.0,l=0,m=0,n=0,o=0,q=0,s=0,t=0.0;s=r;r=r+1088|0;m=s+56|0;o=s+48|0;n=s+32|0;g=s;l=s+64|0;q=a+8|0;f=k[q>>2]|0;h=+p[f+24>>3];if(!(k[13607]|0))j=+p[f+40>>3];else{j=+p[4253];h=j-h;j=j-+p[f+40>>3]}t=+p[f+32>>3];p[g>>3]=+p[f+16>>3];p[g+8>>3]=h;p[g+16>>3]=t;p[g+24>>3]=j;TN(l,138666,g)|0;vs(a,b,l)|0;f=k[q>>2]|0;g=k[f+12>>2]|0;if((g|0)!=0?(i[k[g>>2]>>0]|0)!=0:0){t=+p[g+64>>3];t=(k[13607]|0)==0?t:+p[4253]-t;p[n>>3]=+p[g+56>>3];p[n+8>>3]=t;TN(l,138607,n)|0;vs(a,c,l)|0;f=k[(k[q>>2]|0)+12>>2]|0;t=+p[f+32>>3];p[o>>3]=+p[f+24>>3]/72.0;TN(l,138686,o)|0;vs(a,d,l)|0;p[m>>3]=t/72.0;TN(l,138686,m)|0;vs(a,e,l)|0;f=k[q>>2]|0}if((k[f+180>>2]|0)>=1){g=1;while(1){$y(k[(k[f+184>>2]|0)+(g<<2)>>2]|0,b,c,d,e);f=k[q>>2]|0;if((g|0)>=(k[f+180>>2]|0))break;else g=g+1|0}}r=s;return}function az(){return Lr(55084,k[12815]|0)|0}function bz(a){a=a|0;Hr(a)|0;return}function cz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=k[a>>2]|0;e=b;f=k[e>>2]|0;e=k[e+4>>2]|0;b=By(16)|0;d=b+8|0;k[d>>2]=f;k[d+4>>2]=e;Tb[c&63](a,b,1)|0;return}function dz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;e=k[a>>2]|0;d=By(16)|0;f=d+8|0;k[f>>2]=b;k[f+4>>2]=c;Tb[e&63](a,d,1)|0;return}function ez(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=r;r=r+16|0;d=c;f=b;e=k[f+4>>2]|0;b=d+8|0;k[b>>2]=k[f>>2];k[b+4>>2]=e;b=(Tb[k[a>>2]&63](a,d,4)|0)!=0&1;r=c;return b|0}function fz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=r;r=r+16|0;e=d;k[e+8>>2]=b;k[e+12>>2]=c;c=(Tb[k[a>>2]&63](a,e,4)|0)!=0&1;r=d;return c|0}function gz(a){a=a|0;return Nr(a)|0}function hz(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;c=By((Nr(a)|0)<<3)|0;a=Jr(a)|0;if(a){b=c;while(1){f=a+8|0;e=k[f+4>>2]|0;d=b;k[d>>2]=k[f>>2];k[d+4>>2]=e;a=k[a>>2]|0;if(!a)break;else b=b+8|0}}return c|0}function iz(){var a=0,b=0,c=0,d=0;a=Cy(40)|0;b=a;c=55120;d=b+36|0;do{k[b>>2]=k[c>>2];b=b+4|0;c=c+4|0}while((b|0)<(d|0));k[a+36>>2]=0;return Lr(a,k[12815]|0)|0}function jz(a){a=a|0;Tb[k[a>>2]&63](a,0,64)|0;return}function kz(a){a=a|0;var b=0,c=0;b=k[a+4>>2]|0;Hr(a)|0;a=k[b+36>>2]|0;if(a)do{c=a;a=k[a>>2]|0;vP(c)}while((a|0)!=0);vP(b);return}function lz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=r;r=r+32|0;f=e;k[f+8>>2]=b;k[f+12>>2]=c;k[f+16>>2]=d;c=(Tb[k[a>>2]&63](a,f,1)|0)+16|0;r=e;return k[c>>2]|0}function mz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;c=c+36|0;a=k[c>>2]|0;if(!a)a=Cy(20)|0;else k[c>>2]=k[a>>2];e=b+8|0;d=k[e+4>>2]|0;c=a+8|0;k[c>>2]=k[e>>2];k[c+4>>2]=d;k[a+16>>2]=k[b+16>>2];return a|0}function nz(a,b,c){a=a|0;b=b|0;c=c|0;c=c+36|0;k[b>>2]=k[c>>2];k[c>>2]=b;return}function oz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=k[b>>2]|0;d=k[c>>2]|0;if((a|0)<=(d|0))if((a|0)>=(d|0)){d=k[b+4>>2]|0;a=k[c+4>>2]|0;if((d|0)>(a|0))a=1;else a=((d|0)<(a|0))<<31>>31}else a=-1;else a=1;return a|0}function pz(a,b,c){a=a|0;b=b|0;c=c|0;vP(b);return}function qz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0.0,g=0.0,h=0.0,j=0.0,l=0,m=0,n=0,o=0,q=0,s=0,t=0;s=r;r=r+128|0;l=s+112|0;m=s+48|0;n=s;e=s+80|0;c=s+64|0;d=s+32|0;o=s+16|0;q=a+8|0;a=k[q>>2]|0;j=+p[a+16>>3];f=+p[a+24>>3];g=+p[a+32>>3];h=+p[a+40>>3];if((b+-1|0)>>>0<2){p[n>>3]=j;d=n+8|0;p[d>>3]=h;a=(k[13789]|0)*90|0;k[l>>2]=k[n>>2];k[l+4>>2]=k[n+4>>2];k[l+8>>2]=k[n+8>>2];k[l+12>>2]=k[n+12>>2];fy(m,l,a);k[n>>2]=k[m>>2];k[n+4>>2]=k[m+4>>2];k[n+8>>2]=k[m+8>>2];k[n+12>>2]=k[m+12>>2];p[n>>3]=+p[n>>3]-+p[4255];p[d>>3]=+p[d>>3]-+p[4256];k[e>>2]=k[n>>2];k[e+4>>2]=k[n+4>>2];k[e+8>>2]=k[n+8>>2];k[e+12>>2]=k[n+12>>2];d=e+16|0;p[n>>3]=g;a=n+8|0;p[a>>3]=f;t=(k[13789]|0)*90|0;k[l>>2]=k[n>>2];k[l+4>>2]=k[n+4>>2];k[l+8>>2]=k[n+8>>2];k[l+12>>2]=k[n+12>>2];fy(m,l,t);k[n>>2]=k[m>>2];k[n+4>>2]=k[m+4>>2];k[n+8>>2]=k[m+8>>2];k[n+12>>2]=k[m+12>>2];p[n>>3]=+p[n>>3]-+p[4255];p[a>>3]=+p[a>>3]-+p[4256];k[c>>2]=k[n>>2];k[c+4>>2]=k[n+4>>2];k[c+8>>2]=k[n+8>>2];k[c+12>>2]=k[n+12>>2];k[d>>2]=k[c>>2];k[d+4>>2]=k[c+4>>2];k[d+8>>2]=k[c+8>>2];k[d+12>>2]=k[c+12>>2]}else{p[n>>3]=j;t=n+8|0;p[t>>3]=f;c=(k[13789]|0)*90|0;k[l>>2]=k[n>>2];k[l+4>>2]=k[n+4>>2];k[l+8>>2]=k[n+8>>2];k[l+12>>2]=k[n+12>>2];fy(m,l,c);k[n>>2]=k[m>>2];k[n+4>>2]=k[m+4>>2];k[n+8>>2]=k[m+8>>2];k[n+12>>2]=k[m+12>>2];p[n>>3]=+p[n>>3]-+p[4255];p[t>>3]=+p[t>>3]-+p[4256];k[e>>2]=k[n>>2];k[e+4>>2]=k[n+4>>2];k[e+8>>2]=k[n+8>>2];k[e+12>>2]=k[n+12>>2];t=e+16|0;p[n>>3]=g;c=n+8|0;p[c>>3]=h;a=(k[13789]|0)*90|0;k[l>>2]=k[n>>2];k[l+4>>2]=k[n+4>>2];k[l+8>>2]=k[n+8>>2];k[l+12>>2]=k[n+12>>2];fy(m,l,a);k[n>>2]=k[m>>2];k[n+4>>2]=k[m+4>>2];k[n+8>>2]=k[m+8>>2];k[n+12>>2]=k[m+12>>2];p[n>>3]=+p[n>>3]-+p[4255];p[c>>3]=+p[c>>3]-+p[4256];k[d>>2]=k[n>>2];k[d+4>>2]=k[n+4>>2];k[d+8>>2]=k[n+8>>2];k[d+12>>2]=k[n+12>>2];k[t>>2]=k[d>>2];k[t+4>>2]=k[d+4>>2];k[t+8>>2]=k[d+8>>2];k[t+12>>2]=k[d+12>>2]}a=(k[q>>2]|0)+16|0;k[a>>2]=k[e>>2];k[a+4>>2]=k[e+4>>2];k[a+8>>2]=k[e+8>>2];k[a+12>>2]=k[e+12>>2];k[a+16>>2]=k[e+16>>2];k[a+20>>2]=k[e+20>>2];k[a+24>>2]=k[e+24>>2];k[a+28>>2]=k[e+28>>2];a=k[q>>2]|0;c=k[a+12>>2]|0;if(c){a=c+56|0;c=n;d=a;e=c+16|0;do{i[c>>0]=i[d>>0]|0;c=c+1|0;d=d+1|0}while((c|0)<(e|0));t=(k[13789]|0)*90|0;k[l>>2]=k[n>>2];k[l+4>>2]=k[n+4>>2];k[l+8>>2]=k[n+8>>2];k[l+12>>2]=k[n+12>>2];fy(m,l,t);k[n>>2]=k[m>>2];k[n+4>>2]=k[m+4>>2];k[n+8>>2]=k[m+8>>2];k[n+12>>2]=k[m+12>>2];p[n>>3]=+p[n>>3]-+p[4255];t=n+8|0;p[t>>3]=+p[t>>3]-+p[4256];k[o>>2]=k[n>>2];k[o+4>>2]=k[n+4>>2];k[o+8>>2]=k[n+8>>2];k[o+12>>2]=k[n+12>>2];k[a>>2]=k[o>>2];k[a+4>>2]=k[o+4>>2];k[a+8>>2]=k[o+8>>2];k[a+12>>2]=k[o+12>>2];a=k[q>>2]|0}if((k[a+180>>2]|0)>=1){c=1;while(1){qz(k[(k[a+184>>2]|0)+(c<<2)>>2]|0,b);a=k[q>>2]|0;if((c|0)>=(k[a+180>>2]|0))break;else c=c+1|0}}r=s;return}function rz(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0,f=0,g=0,h=0,j=0.0,n=0.0,o=0.0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0.0,ga=0.0,ha=0.0;ea=r;r=r+1568|0;aa=ea+536|0;da=ea+488|0;ca=ea+456|0;$=ea+448|0;O=ea+440|0;N=ea+432|0;M=ea+376|0;K=ea+328|0;F=ea+280|0;B=ea+272|0;A=ea+264|0;z=ea+256|0;y=ea+248|0;P=ea+208|0;Q=ea+192|0;S=ea+176|0;T=ea+160|0;U=ea+144|0;V=ea+104|0;W=ea+64|0;Y=ea+48|0;Z=ea+32|0;_=ea+16|0;R=ea;ba=a+8|0;I=(k[ba>>2]|0)+116|0;k[13789]=k[I>>2]&3;I=k[I>>2]&1;i[138712]=I;if(!(I<<24>>24))sz(a);else uz(a);I=k[ba>>2]|0;v=m[I+136>>1]&14;I=l[I+113>>0]|0;if(!((I&54|0)==0?(I&1|0)==0|(k[13606]|0)!=0:0)){e=Kt(a)|0;if(!e){g=0;e=0;f=0}else{u=(v|0)==0;h=0;q=0;f=0;while(1){g=k[(k[e+8>>2]|0)+108>>2]|0;do if(g)if(!(i[g+81>>0]|0)){t=q+1|0;break}else{t=q;f=f+1|0;break}else t=q;while(0);g=Es(a,e)|0;if(!g)g=h;else{do{s=k[g+8>>2]|0;q=k[s+108>>2]|0;do if(q){if(i[q+81>>0]|0){f=f+1|0;break}if(!u)h=((k[s+8>>2]|0)!=0&1)+h|0}while(0);q=k[s+100>>2]|0;do if(q){if(i[q+81>>0]|0){f=f+1|0;break}if(!u)h=((k[s+8>>2]|0)!=0&1)+h|0}while(0);q=k[s+104>>2]|0;do if(q){if(i[q+81>>0]|0){f=f+1|0;break}if(!u)h=((k[s+8>>2]|0)!=0&1)+h|0}while(0);q=k[s+96>>2]|0;do if(q){if(i[q+81>>0]|0){f=f+1|0;break}if(!u)h=((k[s+8>>2]|0)!=0&1)+h|0}while(0);g=Gs(a,g)|0}while((g|0)!=0);g=h}e=Lt(a,e)|0;if(!e){e=t;break}else{h=g;q=t}}}if(!(i[(k[ba>>2]|0)+113>>0]&8))w=0;else w=vz(a)|0;E=e+g|0;if(E){x=g+f+w+(Zs(a)|0)|0;C=By(x*40|0)|0;D=By(E*40|0)|0;e=Kt(a)|0;if(!e){n=2147483647.0;c=-2147483647.0;j=-2147483647.0;d=2147483647.0;e=C}else{v=(v|0)==0;n=2147483647.0;d=2147483647.0;j=-2147483647.0;c=-2147483647.0;u=e;e=C;h=D;while(1){g=(i[138712]|0)==0;f=u+8|0;I=k[f>>2]|0;H=I+32|0;I=I+40|0;ga=+p[(g?I:H)>>3]*72.0;ha=+p[(g?H:I)>>3]*72.0;p[e+16>>3]=ha;p[e+24>>3]=ga;I=(k[f>>2]|0)+16|0;k[e>>2]=k[I>>2];k[e+4>>2]=k[I+4>>2];k[e+8>>2]=k[I+8>>2];k[e+12>>2]=k[I+12>>2];fa=+p[e>>3]-ha*.5;p[e>>3]=fa;I=e+8|0;o=+p[I>>3]-ga*.5;p[I>>3]=o;n=n<fa?n:fa;d=d<o?d:o;fa=ha+fa;o=ga+o;j=j>fa?j:fa;c=c>o?c:o;f=k[(k[f>>2]|0)+108>>2]|0;do if(f){if(i[f+81>>0]|0){I=e+40|0;fa=+p[f+24>>3];o=+p[f+32>>3];ga=g?fa:o;fa=g?o:fa;p[e+56>>3]=ga;p[e+64>>3]=fa;H=f+56|0;k[I>>2]=k[H>>2];k[I+4>>2]=k[H+4>>2];k[I+8>>2]=k[H+8>>2];k[I+12>>2]=k[H+12>>2];o=+p[I>>3]-ga*.5;p[I>>3]=o;e=e+48|0;ha=+p[e>>3]-fa*.5;p[e>>3]=ha;ga=ga+o;fa=fa+ha;n=n<o?n:o;c=c>fa?c:fa;j=j>ga?j:ga;d=d<ha?d:ha;e=I;break}if(g){I=f+24|0;k[h>>2]=k[I>>2];k[h+4>>2]=k[I+4>>2];k[h+8>>2]=k[I+8>>2];k[h+12>>2]=k[I+12>>2]}else{p[h>>3]=+p[f+32>>3];p[h+8>>3]=+p[f+24>>3]}k[h+32>>2]=f;i[h+36>>0]=0;k[e+32>>2]=h;h=h+40|0}while(0);e=e+40|0;f=Es(a,u)|0;if(!f)f=h;else{t=f;while(1){s=t+8|0;g=k[s>>2]|0;f=k[g+96>>2]|0;a:do if(!f){q=h;J=59}else{do if(!(i[f+81>>0]|0)){if(!v?(k[g+8>>2]|0)!=0:0){MA(Q,a,t);k[aa>>2]=k[Q>>2];k[aa+4>>2]=k[Q+4>>2];k[aa+8>>2]=k[Q+8>>2];k[aa+12>>2]=k[Q+12>>2];J=e+16|0;k[J>>2]=0;k[J+4>>2]=0;k[J+8>>2]=0;k[J+12>>2]=0;k[e>>2]=k[aa>>2];k[e+4>>2]=k[aa+4>>2];k[e+8>>2]=k[aa+8>>2];k[e+12>>2]=k[aa+12>>2];if(!(i[138712]|0)){J=f+24|0;k[h>>2]=k[J>>2];k[h+4>>2]=k[J+4>>2];k[h+8>>2]=k[J+8>>2];k[h+12>>2]=k[J+12>>2]}else{p[h>>3]=+p[f+32>>3];p[h+8>>3]=+p[f+24>>3]}k[h+32>>2]=f;i[h+36>>0]=0;k[e+32>>2]=h;f=h+40|0;break}k[y>>2]=k[f>>2];Yr(0,138713,y)|0;f=h;break a}else{J=(i[138712]|0)==0;fa=+p[f+24>>3];o=+p[f+32>>3];ga=J?fa:o;fa=J?o:fa;p[e+16>>3]=ga;p[e+24>>3]=fa;f=f+56|0;k[e>>2]=k[f>>2];k[e+4>>2]=k[f+4>>2];k[e+8>>2]=k[f+8>>2];k[e+12>>2]=k[f+12>>2];o=+p[e>>3]-ga*.5;p[e>>3]=o;f=e+8|0;ha=+p[f>>3]-fa*.5;p[f>>3]=ha;ga=ga+o;fa=fa+ha;n=n<o?n:o;c=c>fa?c:fa;j=j>ga?j:ga;d=d<ha?d:ha;f=h}while(0);g=k[s>>2]|0;e=e+40|0;q=f;J=59}while(0);b:do if((J|0)==59){J=0;h=k[g+104>>2]|0;if(h){c:do if(!(i[h+81>>0]|0)){do if(!v){if(!(k[g+8>>2]|0))break;f=OA(t)|0;do if(f){f=k[f>>2]|0;if(!(k[f+8>>2]|0)){I=k[f>>2]|0;k[S>>2]=k[I>>2];k[S+4>>2]=k[I+4>>2];k[S+8>>2]=k[I+8>>2];k[S+12>>2]=k[I+12>>2];break}else{I=f+16|0;k[S>>2]=k[I>>2];k[S+4>>2]=k[I+4>>2];k[S+8>>2]=k[I+8>>2];k[S+12>>2]=k[I+12>>2];break}}else{k[S>>2]=0;k[S+4>>2]=0;k[S+8>>2]=0;k[S+12>>2]=0}while(0);k[aa>>2]=k[S>>2];k[aa+4>>2]=k[S+4>>2];k[aa+8>>2]=k[S+8>>2];k[aa+12>>2]=k[S+12>>2];I=e+16|0;k[I>>2]=0;k[I+4>>2]=0;k[I+8>>2]=0;k[I+12>>2]=0;k[e>>2]=k[aa>>2];k[e+4>>2]=k[aa+4>>2];k[e+8>>2]=k[aa+8>>2];k[e+12>>2]=k[aa+12>>2];if(!(i[138712]|0)){I=h+24|0;k[q>>2]=k[I>>2];k[q+4>>2]=k[I+4>>2];k[q+8>>2]=k[I+8>>2];k[q+12>>2]=k[I+12>>2]}else{p[q>>3]=+p[h+32>>3];p[q+8>>3]=+p[h+24>>3]}k[q+32>>2]=h;i[q+36>>0]=0;k[e+32>>2]=q;f=q+40|0;break c}while(0);k[z>>2]=k[h>>2];Yr(0,138748,z)|0;f=q;break b}else{f=(i[138712]|0)==0;fa=+p[h+24>>3];o=+p[h+32>>3];ga=f?fa:o;fa=f?o:fa;p[e+16>>3]=ga;p[e+24>>3]=fa;f=h+56|0;k[e>>2]=k[f>>2];k[e+4>>2]=k[f+4>>2];k[e+8>>2]=k[f+8>>2];k[e+12>>2]=k[f+12>>2];o=+p[e>>3]-ga*.5;p[e>>3]=o;f=e+8|0;ha=+p[f>>3]-fa*.5;p[f>>3]=ha;ga=ga+o;fa=fa+ha;n=n<o?n:o;c=c>fa?c:fa;j=j>ga?j:ga;d=d<ha?d:ha;f=q}while(0);g=k[s>>2]|0;e=e+40|0;q=f}h=k[g+100>>2]|0;if(!h)h=q;else{d:do if(!(i[h+81>>0]|0)){do if(!v){if(!(k[g+8>>2]|0))break;f=OA(t)|0;do if(f){g=(k[f+4>>2]|0)+-1|0;f=k[f>>2]|0;if(!(k[f+(g*48|0)+12>>2]|0)){I=(k[f+(g*48|0)>>2]|0)+((k[f+(g*48|0)+4>>2]|0)+-1<<4)|0;k[T>>2]=k[I>>2];k[T+4>>2]=k[I+4>>2];k[T+8>>2]=k[I+8>>2];k[T+12>>2]=k[I+12>>2];break}else{I=f+(g*48|0)+32|0;k[T>>2]=k[I>>2];k[T+4>>2]=k[I+4>>2];k[T+8>>2]=k[I+8>>2];k[T+12>>2]=k[I+12>>2];break}}else{k[T>>2]=0;k[T+4>>2]=0;k[T+8>>2]=0;k[T+12>>2]=0}while(0);k[aa>>2]=k[T>>2];k[aa+4>>2]=k[T+4>>2];k[aa+8>>2]=k[T+8>>2];k[aa+12>>2]=k[T+12>>2];I=e+16|0;k[I>>2]=0;k[I+4>>2]=0;k[I+8>>2]=0;k[I+12>>2]=0;k[e>>2]=k[aa>>2];k[e+4>>2]=k[aa+4>>2];k[e+8>>2]=k[aa+8>>2];k[e+12>>2]=k[aa+12>>2];if(!(i[138712]|0)){I=h+24|0;k[q>>2]=k[I>>2];k[q+4>>2]=k[I+4>>2];k[q+8>>2]=k[I+8>>2];k[q+12>>2]=k[I+12>>2]}else{p[q>>3]=+p[h+32>>3];p[q+8>>3]=+p[h+24>>3]}k[q+32>>2]=h;i[q+36>>0]=0;k[e+32>>2]=q;f=q+40|0;break d}while(0);k[A>>2]=k[h>>2];Yr(0,138788,A)|0;f=q;break b}else{f=(i[138712]|0)==0;fa=+p[h+24>>3];o=+p[h+32>>3];ga=f?fa:o;fa=f?o:fa;p[e+16>>3]=ga;p[e+24>>3]=fa;f=h+56|0;k[e>>2]=k[f>>2];k[e+4>>2]=k[f+4>>2];k[e+8>>2]=k[f+8>>2];k[e+12>>2]=k[f+12>>2];o=+p[e>>3]-ga*.5;p[e>>3]=o;f=e+8|0;ha=+p[f>>3]-fa*.5;p[f>>3]=ha;ga=ga+o;fa=fa+ha;n=n<o?n:o;c=c>fa?c:fa;j=j>ga?j:ga;d=d<ha?d:ha;f=q}while(0);g=k[s>>2]|0;e=e+40|0;h=f}f=k[g+108>>2]|0;if(!f)f=h;else{e:do if(!(i[f+81>>0]|0)){do if(!v){if(!(k[g+8>>2]|0))break;MA(U,a,t);k[aa>>2]=k[U>>2];k[aa+4>>2]=k[U+4>>2];k[aa+8>>2]=k[U+8>>2];k[aa+12>>2]=k[U+12>>2];I=e+16|0;k[I>>2]=0;k[I+4>>2]=0;k[I+8>>2]=0;k[I+12>>2]=0;k[e>>2]=k[aa>>2];k[e+4>>2]=k[aa+4>>2];k[e+8>>2]=k[aa+8>>2];k[e+12>>2]=k[aa+12>>2];if(!(i[138712]|0)){I=f+24|0;k[h>>2]=k[I>>2];k[h+4>>2]=k[I+4>>2];k[h+8>>2]=k[I+8>>2];k[h+12>>2]=k[I+12>>2]}else{p[h>>3]=+p[f+32>>3];p[h+8>>3]=+p[f+24>>3]}k[h+32>>2]=f;i[h+36>>0]=0;k[e+32>>2]=h;f=h+40|0;break e}while(0);k[B>>2]=k[f>>2];Yr(0,138828,B)|0;f=h;break b}else{I=(i[138712]|0)==0;fa=+p[f+24>>3];o=+p[f+32>>3];ga=I?fa:o;fa=I?o:fa;p[e+16>>3]=ga;p[e+24>>3]=fa;f=f+56|0;k[e>>2]=k[f>>2];k[e+4>>2]=k[f+4>>2];k[e+8>>2]=k[f+8>>2];k[e+12>>2]=k[f+12>>2];o=+p[e>>3]-ga*.5;p[e>>3]=o;f=e+8|0;ha=+p[f>>3]-fa*.5;p[f>>3]=ha;ga=ga+o;fa=fa+ha;n=n<o?n:o;c=c>fa?c:fa;j=j>ga?j:ga;d=d<ha?d:ha;f=h}while(0);e=e+40|0}}while(0);t=Gs(a,t)|0;if(!t)break;else h=f}}u=Lt(a,u)|0;if(!u)break;else h=f}}if(w){p[V>>3]=n;f=V+8|0;p[f>>3]=d;g=V+16|0;p[g>>3]=j;h=V+24|0;p[h>>3]=c;k[V+32>>2]=e;G=aa;H=V;I=G+40|0;do{k[G>>2]=k[H>>2];G=G+4|0;H=H+4|0}while((G|0)<(I|0));wz(W,a,aa);G=V;H=W;I=G+40|0;do{k[G>>2]=k[H>>2];G=G+4|0;H=H+4|0}while((G|0)<(I|0));n=+p[V>>3];d=+p[f>>3];j=+p[g>>3];c=+p[h>>3]}g=nB(a,ks(a,0,138864,0)|0,1)|0;h=P+32|0;i[h>>0]=g;p[P>>3]=n;g=P+8|0;p[g>>3]=d;f=P+16|0;p[f>>3]=j;e=P+24|0;p[e>>3]=c;JE(C,x,D,E,P)|0;if((i[137280]|0)!=0?(L=k[24528]|0,I=l[h>>0]|0,o=+p[P>>3],fa=+p[g>>3],ga=+p[f>>3],ha=+p[e>>3],k[F>>2]=x,k[F+4>>2]=E,k[F+8>>2]=I,p[F+16>>3]=o,p[F+24>>3]=fa,p[F+32>>3]=ga,p[F+40>>3]=ha,FN(L,138876,F)|0,(l[137280]|0)>=2):0){QN(138936,8,1,L)|0;if((x|0)>0){e=C;h=0;while(1){f=k[e+32>>2]|0;c=+p[e>>3];d=+p[e+8>>3];j=+p[e+16>>3];n=+p[e+24>>3];if(!f)g=176676;else g=k[k[f+32>>2]>>2]|0;k[K>>2]=h;p[K+8>>3]=c;p[K+16>>3]=d;p[K+24>>3]=j;p[K+32>>3]=n;k[K+40>>2]=f;k[K+44>>2]=g;FN(L,138945,K)|0;h=h+1|0;if((h|0)==(x|0))break;else e=e+40|0}}QN(138988,8,1,L)|0;if((E|0)>0){e=D;f=0;while(1){J=l[e+36>>0]|0;o=+p[e+16>>3];fa=+p[e+24>>3];ga=+p[e>>3];ha=+p[e+8>>3];K=k[k[e+32>>2]>>2]|0;k[M>>2]=f;k[M+4>>2]=e;k[M+8>>2]=J;p[M+16>>3]=o;p[M+24>>3]=fa;p[M+32>>3]=ga;p[M+40>>3]=ha;k[M+48>>2]=K;FN(L,138997,M)|0;f=f+1|0;if((f|0)==(E|0)){J=114;break}else e=e+40|0}}else e=0}else J=114;if((J|0)==114)if((E|0)>0){e=0;f=0;g=D;while(1){if(i[g+36>>0]|0){M=k[g+32>>2]|0;i[M+81>>0]=1;ha=+p[g+24>>3]+ +p[g+8>>3]*.5;p[M+56>>3]=+p[g+16>>3]+ +p[g>>3]*.5;p[M+64>>3]=ha;EB(a,M);e=e+1|0}f=f+1|0;if((f|0)==(E|0))break;else g=g+40|0}}else e=0;if(!(i[137280]|0)){if((e|0)!=(E|0)){k[O>>2]=e;k[O+4>>2]=E;Yr(0,139078,O)|0}}else{O=k[24528]|0;k[N>>2]=e;k[N+4>>2]=E;FN(O,139045,N)|0}vP(C);vP(D)}}f=k[ba>>2]|0;h=k[f+12>>2]|0;do if((h|0)!=0?(i[h+81>>0]|0)==0:0){n=+p[h+24>>3]+16.0;o=+p[h+32>>3]+8.0;e=(i[f+275>>0]&1)!=0;if(i[138712]|0){if(e){O=f+32|0;p[O>>3]=o+ +p[O>>3]}else{O=f+16|0;p[O>>3]=+p[O>>3]-o}e=f+40|0;c=+p[e>>3];g=f+24|0;d=+p[g>>3];j=c-d;if(!(n>j))break;ha=(n-j)*.5;p[g>>3]=d-ha;p[e>>3]=ha+c;break}g=(k[13789]|0)==0;do if(e)if(g){O=f+40|0;p[O>>3]=o+ +p[O>>3];break}else{O=f+24|0;p[O>>3]=+p[O>>3]-o;break}else if(g){O=f+24|0;p[O>>3]=+p[O>>3]-o;break}else{O=f+40|0;p[O>>3]=o+ +p[O>>3];break}while(0);e=f+32|0;c=+p[e>>3];g=f+16|0;d=+p[g>>3];j=c-d;if(n>j){ha=(n-j)*.5;p[g>>3]=d-ha;p[e>>3]=ha+c}}else{n=0.0;o=0.0}while(0);if(b){e=k[13789]|0;switch(e|0){case 0:{b=f+16|0;k[8510]=k[b>>2];k[8511]=k[b+4>>2];k[8512]=k[b+8>>2];k[8513]=k[b+12>>2];break}case 1:{ha=+p[f+16>>3];p[4255]=-+p[f+40>>3];p[4256]=ha;break}case 2:{ha=-+p[f+40>>3];p[4255]=+p[f+16>>3];p[4256]=ha;break}case 3:{ha=+p[f+16>>3];p[4255]=+p[f+24>>3];p[4256]=ha;break}default:{}}if(+p[4255]!=0.0|+p[4256]!=0.0|(e|0)!=0){e=Kt(a)|0;if(e){x=Q+8|0;y=Q+8|0;z=Q+8|0;A=Q+8|0;B=Q+8|0;C=Q+8|0;D=Q+8|0;E=Q+8|0;F=Q+8|0;do{if(!(k[13789]|0))h=0;else{ZB(e,0);h=k[13789]|0}f=e+8|0;g=(k[f>>2]|0)+16|0;G=Q;H=g;I=G+16|0;do{i[G>>0]=i[H>>0]|0;G=G+1|0;H=H+1|0}while((G|0)<(I|0));k[aa>>2]=k[Q>>2];k[aa+4>>2]=k[Q+4>>2];k[aa+8>>2]=k[Q+8>>2];k[aa+12>>2]=k[Q+12>>2];fy(P,aa,h*90|0);k[Q>>2]=k[P>>2];k[Q+4>>2]=k[P+4>>2];k[Q+8>>2]=k[P+8>>2];k[Q+12>>2]=k[P+12>>2];p[Q>>3]=+p[Q>>3]-+p[4255];p[x>>3]=+p[x>>3]-+p[4256];k[_>>2]=k[Q>>2];k[_+4>>2]=k[Q+4>>2];k[_+8>>2]=k[Q+8>>2];k[_+12>>2]=k[Q+12>>2];k[g>>2]=k[_>>2];k[g+4>>2]=k[_+4>>2];k[g+8>>2]=k[_+8>>2];k[g+12>>2]=k[_+12>>2];f=k[(k[f>>2]|0)+108>>2]|0;if(f){f=f+56|0;G=Q;H=f;I=G+16|0;do{i[G>>0]=i[H>>0]|0;G=G+1|0;H=H+1|0}while((G|0)<(I|0));b=(k[13789]|0)*90|0;k[aa>>2]=k[Q>>2];k[aa+4>>2]=k[Q+4>>2];k[aa+8>>2]=k[Q+8>>2];k[aa+12>>2]=k[Q+12>>2];fy(P,aa,b);k[Q>>2]=k[P>>2];k[Q+4>>2]=k[P+4>>2];k[Q+8>>2]=k[P+8>>2];k[Q+12>>2]=k[P+12>>2];p[Q>>3]=+p[Q>>3]-+p[4255];p[F>>3]=+p[F>>3]-+p[4256];k[R>>2]=k[Q>>2];k[R+4>>2]=k[Q+4>>2];k[R+8>>2]=k[Q+8>>2];k[R+12>>2]=k[Q+12>>2];k[f>>2]=k[R>>2];k[f+4>>2]=k[R+4>>2];k[f+8>>2]=k[R+8>>2];k[f+12>>2]=k[R+12>>2]}if((k[13605]|0)==1?(X=Es(a,e)|0,(X|0)!=0):0){w=X;do{v=w+8|0;f=k[v>>2]|0;g=k[f+8>>2]|0;do if(!g){if((i[137282]|0)==0?(i[f+112>>0]|0)!=6:0){O=ht(k[((k[w>>2]&3|0)==3?w:w+32|0)+28>>2]|0)|0;b=ht(k[((k[w>>2]&3|0)==2?w:w+-32|0)+28>>2]|0)|0;k[$>>2]=O;k[$+4>>2]=b;Yr(1,139120,$)|0}}else{if((k[g+4>>2]|0)>0){u=0;do{t=k[g>>2]|0;f=k[t+(u*48|0)>>2]|0;g=k[t+(u*48|0)+4>>2]|0;h=k[t+(u*48|0)+8>>2]|0;t=k[t+(u*48|0)+12>>2]|0;if((g|0)>0){s=0;do{q=f+(s<<4)|0;G=Q;H=q;I=G+16|0;do{i[G>>0]=i[H>>0]|0;G=G+1|0;H=H+1|0}while((G|0)<(I|0));b=(k[13789]|0)*90|0;k[aa>>2]=k[Q>>2];k[aa+4>>2]=k[Q+4>>2];k[aa+8>>2]=k[Q+8>>2];k[aa+12>>2]=k[Q+12>>2];fy(P,aa,b);k[Q>>2]=k[P>>2];k[Q+4>>2]=k[P+4>>2];k[Q+8>>2]=k[P+8>>2];k[Q+12>>2]=k[P+12>>2];p[Q>>3]=+p[Q>>3]-+p[4255];p[A>>3]=+p[A>>3]-+p[4256];k[S>>2]=k[Q>>2];k[S+4>>2]=k[Q+4>>2];k[S+8>>2]=k[Q+8>>2];k[S+12>>2]=k[Q+12>>2];k[q>>2]=k[S>>2];k[q+4>>2]=k[S+4>>2];k[q+8>>2]=k[S+8>>2];k[q+12>>2]=k[S+12>>2];s=s+1|0}while((s|0)!=(g|0))}if(h){f=(k[k[(k[v>>2]|0)+8>>2]>>2]|0)+(u*48|0)+16|0;G=Q;H=f;I=G+16|0;do{i[G>>0]=i[H>>0]|0;G=G+1|0;H=H+1|0}while((G|0)<(I|0));b=(k[13789]|0)*90|0;k[aa>>2]=k[Q>>2];k[aa+4>>2]=k[Q+4>>2];k[aa+8>>2]=k[Q+8>>2];k[aa+12>>2]=k[Q+12>>2];fy(P,aa,b);k[Q>>2]=k[P>>2];k[Q+4>>2]=k[P+4>>2];k[Q+8>>2]=k[P+8>>2];k[Q+12>>2]=k[P+12>>2];p[Q>>3]=+p[Q>>3]-+p[4255];p[z>>3]=+p[z>>3]-+p[4256];k[T>>2]=k[Q>>2];k[T+4>>2]=k[Q+4>>2];k[T+8>>2]=k[Q+8>>2];k[T+12>>2]=k[Q+12>>2];k[f>>2]=k[T>>2];k[f+4>>2]=k[T+4>>2];k[f+8>>2]=k[T+8>>2];k[f+12>>2]=k[T+12>>2]}if(t){f=(k[k[(k[v>>2]|0)+8>>2]>>2]|0)+(u*48|0)+32|0;G=Q;H=f;I=G+16|0;do{i[G>>0]=i[H>>0]|0;G=G+1|0;H=H+1|0}while((G|0)<(I|0));b=(k[13789]|0)*90|0;k[aa>>2]=k[Q>>2];k[aa+4>>2]=k[Q+4>>2];k[aa+8>>2]=k[Q+8>>2];k[aa+12>>2]=k[Q+12>>2];fy(P,aa,b);k[Q>>2]=k[P>>2];k[Q+4>>2]=k[P+4>>2];k[Q+8>>2]=k[P+8>>2];k[Q+12>>2]=k[P+12>>2];p[Q>>3]=+p[Q>>3]-+p[4255];p[y>>3]=+p[y>>3]-+p[4256];k[U>>2]=k[Q>>2];k[U+4>>2]=k[Q+4>>2];k[U+8>>2]=k[Q+8>>2];k[U+12>>2]=k[Q+12>>2];k[f>>2]=k[U>>2];k[f+4>>2]=k[U+4>>2];k[f+8>>2]=k[U+8>>2];k[f+12>>2]=k[U+12>>2]}u=u+1|0;f=k[v>>2]|0;g=k[f+8>>2]|0}while((u|0)<(k[g+4>>2]|0))}g=k[f+96>>2]|0;if(g){f=g+56|0;G=Q;H=f;I=G+16|0;do{i[G>>0]=i[H>>0]|0;G=G+1|0;H=H+1|0}while((G|0)<(I|0));b=(k[13789]|0)*90|0;k[aa>>2]=k[Q>>2];k[aa+4>>2]=k[Q+4>>2];k[aa+8>>2]=k[Q+8>>2];k[aa+12>>2]=k[Q+12>>2];fy(P,aa,b);k[Q>>2]=k[P>>2];k[Q+4>>2]=k[P+4>>2];k[Q+8>>2]=k[P+8>>2];k[Q+12>>2]=k[P+12>>2];p[Q>>3]=+p[Q>>3]-+p[4255];p[E>>3]=+p[E>>3]-+p[4256];k[V>>2]=k[Q>>2];k[V+4>>2]=k[Q+4>>2];k[V+8>>2]=k[Q+8>>2];k[V+12>>2]=k[Q+12>>2];k[f>>2]=k[V>>2];k[f+4>>2]=k[V+4>>2];k[f+8>>2]=k[V+8>>2];k[f+12>>2]=k[V+12>>2];f=k[v>>2]|0}g=k[f+108>>2]|0;if(g){f=g+56|0;G=Q;H=f;I=G+16|0;do{i[G>>0]=i[H>>0]|0;G=G+1|0;H=H+1|0}while((G|0)<(I|0));b=(k[13789]|0)*90|0;k[aa>>2]=k[Q>>2];k[aa+4>>2]=k[Q+4>>2];k[aa+8>>2]=k[Q+8>>2];k[aa+12>>2]=k[Q+12>>2];fy(P,aa,b);k[Q>>2]=k[P>>2];k[Q+4>>2]=k[P+4>>2];k[Q+8>>2]=k[P+8>>2];k[Q+12>>2]=k[P+12>>2];p[Q>>3]=+p[Q>>3]-+p[4255];p[D>>3]=+p[D>>3]-+p[4256];k[W>>2]=k[Q>>2];k[W+4>>2]=k[Q+4>>2];k[W+8>>2]=k[Q+8>>2];k[W+12>>2]=k[Q+12>>2];k[f>>2]=k[W>>2];k[f+4>>2]=k[W+4>>2];k[f+8>>2]=k[W+8>>2];k[f+12>>2]=k[W+12>>2];f=k[v>>2]|0}g=k[f+100>>2]|0;if(g){f=g+56|0;G=Q;H=f;I=G+16|0;do{i[G>>0]=i[H>>0]|0;G=G+1|0;H=H+1|0}while((G|0)<(I|0));b=(k[13789]|0)*90|0;k[aa>>2]=k[Q>>2];k[aa+4>>2]=k[Q+4>>2];k[aa+8>>2]=k[Q+8>>2];k[aa+12>>2]=k[Q+12>>2];fy(P,aa,b);k[Q>>2]=k[P>>2];k[Q+4>>2]=k[P+4>>2];k[Q+8>>2]=k[P+8>>2];k[Q+12>>2]=k[P+12>>2];p[Q>>3]=+p[Q>>3]-+p[4255];p[C>>3]=+p[C>>3]-+p[4256];k[Y>>2]=k[Q>>2];k[Y+4>>2]=k[Q+4>>2];k[Y+8>>2]=k[Q+8>>2];k[Y+12>>2]=k[Q+12>>2];k[f>>2]=k[Y>>2];k[f+4>>2]=k[Y+4>>2];k[f+8>>2]=k[Y+8>>2];k[f+12>>2]=k[Y+12>>2];f=k[v>>2]|0}f=k[f+104>>2]|0;if(!f)break;f=f+56|0;G=Q;H=f;I=G+16|0;do{i[G>>0]=i[H>>0]|0;G=G+1|0;H=H+1|0}while((G|0)<(I|0));b=(k[13789]|0)*90|0;k[aa>>2]=k[Q>>2];k[aa+4>>2]=k[Q+4>>2];k[aa+8>>2]=k[Q+8>>2];k[aa+12>>2]=k[Q+12>>2];fy(P,aa,b);k[Q>>2]=k[P>>2];k[Q+4>>2]=k[P+4>>2];k[Q+8>>2]=k[P+8>>2];k[Q+12>>2]=k[P+12>>2];p[Q>>3]=+p[Q>>3]-+p[4255];p[B>>3]=+p[B>>3]-+p[4256];k[Z>>2]=k[Q>>2];k[Z+4>>2]=k[Q+4>>2];k[Z+8>>2]=k[Q+8>>2];k[Z+12>>2]=k[Q+12>>2];k[f>>2]=k[Z>>2];k[f+4>>2]=k[Z+4>>2];k[f+8>>2]=k[Z+8>>2];k[f+12>>2]=k[Z+12>>2]}while(0);w=Gs(a,w)|0}while((w|0)!=0)}e=Lt(a,e)|0}while((e|0)!=0)}qz(a,k[(k[ba>>2]|0)+116>>2]&3)}f=k[ba>>2]|0;h=k[f+12>>2]|0}if((h|0)!=0?(i[h+81>>0]|0)==0:0){g=i[f+275>>0]|0;e=g<<24>>24;do if(!(e&4)){c=+p[f+16>>3];if(!(e&2)){d=(c+ +p[f+32>>3])*.5;break}else{d=n*.5+c;break}}else d=+p[f+32>>3]-n*.5;while(0);if(!(g&1))c=o*.5+ +p[f+24>>3];else c=+p[f+40>>3]-o*.5;p[h+56>>3]=d;p[h+64>>3]=c;i[(k[(k[ba>>2]|0)+12>>2]|0)+81>>0]=1}if(k[13601]|0){if(!(i[138712]|0)){ha=+p[4256];ga=+p[4255];p[da>>3]=ha;p[da+8>>3]=ga;p[da+16>>3]=ha;p[da+24>>3]=ga;p[da+32>>3]=-ga;p[da+40>>3]=-ha;TN(aa,139352,da)|0}else{ga=+p[4255];ha=+p[4256];p[ca>>3]=ga;p[ca+8>>3]=ha;p[ca+16>>3]=ga;p[ca+24>>3]=ha;TN(aa,139137,ca)|0}da=tO(aa)|0;k[k[13601]>>2]=da}r=ea;return}function sz(a){a=a|0;var b=0,c=0.0,d=0,e=0.0,f=0.0,g=0,h=0;d=(au(a)|0)==(a|0);h=a+8|0;a=k[h>>2]|0;if((!d?(g=k[a+12>>2]|0,(g|0)!=0):0)?(i[g+81>>0]|0)==0:0){d=i[a+275>>0]|0;if(!(d&1)){b=a+48|0;f=+p[a+24>>3]+ +p[a+56>>3]*.5}else{b=a+80|0;f=+p[a+40>>3]-+p[a+88>>3]*.5}e=+p[b>>3];b=d<<24>>24;do if(!(b&4)){c=+p[a+16>>3];if(!(b&2)){c=(c+ +p[a+32>>3])*.5;break}else{c=e*.5+c;break}}else c=+p[a+32>>3]-e*.5;while(0);p[g+56>>3]=c;p[g+64>>3]=f;a=k[h>>2]|0;i[(k[a+12>>2]|0)+81>>0]=1}if((k[a+180>>2]|0)>=1){b=1;while(1){sz(k[(k[a+184>>2]|0)+(b<<2)>>2]|0);a=k[h>>2]|0;if((b|0)>=(k[a+180>>2]|0))break;else b=b+1|0}}return}function tz(a){a=a|0;rz(a,1);return}function uz(a){a=a|0;var b=0,c=0.0,d=0,e=0.0,f=0.0,g=0,h=0;d=(au(a)|0)==(a|0);h=a+8|0;a=k[h>>2]|0;if((!d?(g=k[a+12>>2]|0,(g|0)!=0):0)?(i[g+81>>0]|0)==0:0){d=i[a+275>>0]|0;if(!(d&1)){b=a+104|0;f=+p[a+16>>3]+ +p[a+96>>3]*.5}else{b=a+72|0;f=+p[a+32>>3]-+p[a+64>>3]*.5}e=+p[b>>3];b=d<<24>>24;do if(!(b&4)){c=+p[a+40>>3];if(!(b&2)){c=(+p[a+24>>3]+c)*.5;break}else{c=c-e*.5;break}}else c=e*.5+ +p[a+24>>3];while(0);p[g+56>>3]=f;p[g+64>>3]=c;a=k[h>>2]|0;i[(k[a+12>>2]|0)+81>>0]=1}if((k[a+180>>2]|0)>=1){b=1;while(1){uz(k[(k[a+184>>2]|0)+(b<<2)>>2]|0);a=k[h>>2]|0;if((b|0)>=(k[a+180>>2]|0))break;else b=b+1|0}}return}function vz(a){a=a|0;var b=0,c=0,d=0,e=0;e=(au(a)|0)==(a|0);d=a+8|0;b=k[d>>2]|0;if(!e?(c=k[b+12>>2]|0,(c|0)!=0):0)a=(i[c+81>>0]|0)!=0&1;else a=0;if((k[b+180>>2]|0)>=1){c=1;while(1){a=(vz(k[(k[b+184>>2]|0)+(c<<2)>>2]|0)|0)+a|0;b=k[d>>2]|0;if((c|0)>=(k[b+180>>2]|0))break;else c=c+1|0}}return a|0}function wz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0;o=r;r=r+80|0;n=o+40|0;j=o;l=b+8|0;d=k[l>>2]|0;if((k[d+180>>2]|0)>=1){h=1;while(1){d=k[(k[d+184>>2]|0)+(h<<2)>>2]|0;e=n;f=c;g=e+40|0;do{k[e>>2]=k[f>>2];e=e+4|0;f=f+4|0}while((e|0)<(g|0));wz(j,d,n);e=c;f=j;g=e+40|0;do{k[e>>2]=k[f>>2];e=e+4|0;f=f+4|0}while((e|0)<(g|0));d=k[l>>2]|0;if((h|0)>=(k[d+180>>2]|0))break;else h=h+1|0}}if(((au(b)|0)!=(b|0)?(m=k[(k[l>>2]|0)+12>>2]|0,(m|0)!=0):0)?(i[m+81>>0]|0)!=0:0){n=c+32|0;b=k[n>>2]|0;y=+p[c>>3];h=c+8|0;w=+p[h>>3];j=c+16|0;u=+p[j>>3];l=c+24|0;s=+p[l>>3];g=(i[138712]|0)==0;q=+p[m+24>>3];x=+p[m+32>>3];t=g?q:x;q=g?x:q;p[b+16>>3]=t;p[b+24>>3]=q;m=m+56|0;k[b>>2]=k[m>>2];k[b+4>>2]=k[m+4>>2];k[b+8>>2]=k[m+8>>2];k[b+12>>2]=k[m+12>>2];x=+p[b>>3]-t*.5;p[b>>3]=x;m=b+8|0;v=+p[m>>3]-q*.5;p[m>>3]=v;t=t+x;q=q+v;p[c>>3]=y<x?y:x;p[h>>3]=w<v?w:v;p[j>>3]=u>t?u:t;p[l>>3]=s>q?s:q;k[n>>2]=b+40}e=a;f=c;g=e+40|0;do{k[e>>2]=k[f>>2];e=e+4|0;f=f+4|0}while((e|0)<(g|0));r=o;return}function xz(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0;q=r;r=r+1152|0;b=q+32|0;o=q+24|0;f=q+8|0;c=q;e=q+128|0;l=q+52|0;h=q+48|0;j=q+44|0;m=q+40|0;n=q+36|0;g=wB(ss(a,141385)|0)|0;if(g){b=k[13790]|0;if(!b){b=Lr(55164,k[12815]|0)|0;k[13790]=b}b=Tb[k[b>>2]&63](b,g,512)|0;do if(!b){d=EN(g,174924)|0;if(!d){k[c>>2]=g;Yr(0,140147,c)|0;b=0;break}else{c=0;b=0}do{if(!(CN(e,1024,d)|0))break;k[f>>2]=h;k[f+4>>2]=j;k[f+8>>2]=m;k[f+12>>2]=n;s=(UN(e,140175,f)|0)==4;b=s?1:b;if((i[e>>0]|0)!=37){s=(BO(e,140204)|0)==0;c=s?c:1}}while(!((b|0)!=0&(c|0)!=0));if(!b){k[o>>2]=g;Yr(0,140209,o)|0;b=0}else{b=Cy(64)|0;k[b+32>>2]=k[h>>2];s=b+36|0;k[s>>2]=k[j>>2];k[b+40>>2]=(k[m>>2]|0)-(k[h>>2]|0);k[s>>2]=(k[n>>2]|0)-(k[j>>2]|0);k[b+8>>2]=g;s=k[13800]|0;k[13800]=s+1;k[b+12>>2]=s;jN(DN(d)|0,l)|0;s=k[l+36>>2]|0;o=Cy(s+1|0)|0;k[b+52>>2]=o;LN(d,0,0)|0;IN(o,s,1,d)|0;i[o+s>>0]=0;s=k[13790]|0;Tb[k[s>>2]&63](s,b,1)|0;i[b+16>>0]=c}yN(d)|0}while(0);if(b){n=k[b+40>>2]|0;o=k[b+44>>2]|0;a=a+8|0;s=k[a>>2]|0;p[s+32>>3]=+(n|0)/72.0;p[s+40>>3]=+(o|0)/72.0;s=By(12)|0;k[(k[a>>2]|0)+12>>2]=s;k[s>>2]=k[b+12>>2];k[s+4>>2]=((n|0)/-2|0)-(k[b+32>>2]|0);k[s+8>>2]=((o|0)/-2|0)-(k[b+36>>2]|0)}}else{s=ht(a)|0;k[b>>2]=s;Yr(0,140248,b)|0}r=q;return}function yz(a){a=a|0;a=k[(k[a+8>>2]|0)+12>>2]|0;if(a)vP(a);return}function zz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0;o=r;r=r+16|0;n=o+8|0;m=o;l=(b|0)!=0;a:do if(l){g=0;h=1;while(1){f=k[b+(g<<2)>>2]|0;if(!f){j=2;break a}h=(i[f>>0]|0)==0?0:h;if(!(h<<24>>24))break;else g=g+1|0}}else j=2;while(0);if((j|0)==2?(e=k[c>>2]|0,(e|0)!=0):0)do{Rv(a,e)|0;Rv(a,191538)|0;c=c+4|0;e=k[c>>2]|0}while((e|0)!=0);if(l?(d=k[b>>2]|0,(d|0)!=0):0){f=0;do{do if(i[d>>0]|0){c=wB(d)|0;if(!c){k[m>>2]=d;Yr(0,140297,m)|0;break}e=EN(c,174924)|0;if(!e){k[n>>2]=c;Yr(0,140325,n)|0;break}d=vB(e)|0;if(d)do{Rv(a,d)|0;d=vB(e)|0}while((d|0)!=0);Rv(a,191538)|0;yN(e)|0}while(0);f=f+1|0;d=k[b+(f<<2)>>2]|0}while((d|0)!=0)}r=o;return}function Az(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=k[b+52>>2]|0;a:while(1){b=i[c>>0]|0;b:do switch(b<<24>>24){case 0:break a;case 37:{if((i[c+1>>0]|0)==37){b=c+2|0;if((((vO(b,140353,3)|0)!=0?(vO(b,140357,5)|0)!=0:0)?(vO(b,140363,3)|0)!=0:0)?(vO(b,140367,7)|0)!=0:0){b=37;break b}else b=37;c:while(1){switch(b<<24>>24){case 13:{d=c;e=10;break c}case 10:case 0:{d=c;e=12;break c}default:{}}e=c+1|0;b=i[e>>0]|0;c=e}if((e|0)==10){c=d+1|0;if((i[c>>0]|0)==10){c=d+2|0;continue a}}else if((e|0)==12)c=d+1|0;c=b<<24>>24==0?d:c;continue a}else b=37;break}default:{}}while(0);d:while(1){switch(b<<24>>24){case 13:{d=c;e=16;break d}case 10:case 0:{d=c;e=18;break d}default:{}}Sv(a,b<<24>>24)|0;e=c+1|0;b=i[e>>0]|0;c=e}if((e|0)==16){e=0;c=d+1|0;if((i[c>>0]|0)==10)b=d+2|0;else e=19}else if((e|0)==18){c=d+1|0;e=19}if((e|0)==19)b=b<<24>>24==0?d:c;Sv(a,10)|0;c=b}return}function Bz(a){a=a|0;var b=0,c=0,d=0,e=0;e=r;r=r+16|0;d=e;c=k[13790]|0;if((c|0)!=0?(b=Tb[k[c>>2]&63](c,0,128)|0,(b|0)!=0):0)do{if(!(i[b+16>>0]|0)){k[d>>2]=k[b+12>>2];Wv(a,140375,d);Rv(a,140393)|0;Az(a,b);Rv(a,140411)|0;Rv(a,140426)|0}c=k[13790]|0;b=Tb[k[c>>2]&63](c,b,8)|0}while((b|0)!=0);r=e;return}function Cz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=r;r=r+16|0;e=f;a:do switch(b|0){case 0:{d=a;break}case 1:{d=PB(a)|0;break}default:{c=a;b=0;b:while(1){while(1){d=i[c>>0]|0;if(!(d<<24>>24)){c=7;break b}if((d&255)<127)c=c+1|0;else{b=d;break}}if((b&-4)<<24>>24==-64){c=c+2|0;b=1}else{c=9;break}}if((c|0)==7){if((b|0)!=1){d=a;break a}d=PB(a)|0;break a}else if((c|0)==9){if(k[13801]|0){d=a;break a}Yr(0,140438,e)|0;k[13801]=1;d=a;break a}}}while(0);if(!(k[13802]|0))$r(55208,0,0);b=k[13803]|0;if(b>>>0>=(k[13804]|0)>>>0){as(55208,1)|0;b=k[13803]|0}k[13803]=b+1;i[b>>0]=40;c=d;c:while(1){switch(i[c>>0]|0){case 0:break c;case 92:case 41:case 40:{b=k[13803]|0;if(b>>>0>=(k[13804]|0)>>>0){as(55208,1)|0;b=k[13803]|0}k[13803]=b+1;i[b>>0]=92;break}default:{}}b=k[13803]|0;if(b>>>0>=(k[13804]|0)>>>0){as(55208,1)|0;b=k[13803]|0}e=i[c>>0]|0;k[13803]=b+1;i[b>>0]=e;c=c+1|0}b=k[13803]|0;if(b>>>0>=(k[13804]|0)>>>0){as(55208,1)|0;b=k[13803]|0}k[13803]=b+1;i[b>>0]=41;if((d|0)!=(a|0))vP(d);b=k[13803]|0;if(b>>>0>=(k[13804]|0)>>>0){as(55208,1)|0;b=k[13803]|0}i[b>>0]=0;a=k[13802]|0;k[13803]=a;r=f;return a|0}function Dz(a,b,c){a=a|0;b=b|0;c=c|0;vP(k[b+52>>2]|0);return}function Ez(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0;l=r;r=r+96|0;i=l+80|0;h=l+72|0;j=l+64|0;f=l+32|0;g=l;p[f>>3]=+p[a>>3];p[f+8>>3]=+p[a+8>>3];p[f+16>>3]=+p[b>>3];p[f+24>>3]=+p[b+8>>3];do if((EH(c,f,h)|0)>=0){if(!e){a=c+4|0;b=k[a>>2]|0;if((b|0)>(k[13806]|0)){e=k[13807]|0;if(!e)b=Cy(b<<5)|0;else b=Ey(e,b<<5)|0;k[13807]=b;b=k[a>>2]|0;k[13806]=b}f=k[13807]|0;if((b|0)>0){e=k[c>>2]|0;a=0;do{c=f+(a<<5)|0;m=e+(a<<4)|0;k[c>>2]=k[m>>2];k[c+4>>2]=k[m+4>>2];k[c+8>>2]=k[m+8>>2];k[c+12>>2]=k[m+12>>2];c=f+(a<<5)+16|0;a=a+1|0;m=e+(((a|0)%(b|0)|0)<<4)|0;k[c>>2]=k[m>>2];k[c+4>>2]=k[m+4>>2];k[c+8>>2]=k[m+8>>2];k[c+12>>2]=k[m+12>>2]}while((a|0)<(b|0))};k[g>>2]=0;k[g+4>>2]=0;k[g+8>>2]=0;k[g+12>>2]=0;k[g+16>>2]=0;k[g+20>>2]=0;k[g+24>>2]=0;k[g+28>>2]=0;k[i>>2]=k[h>>2];k[i+4>>2]=k[h+4>>2];if((BH(f,b,i,g,j)|0)<0){b=0;break}}else{k[i>>2]=k[h>>2];k[i+4>>2]=k[h+4>>2];QH(i,j)}b=j+4|0;if(!(Lz(k[b>>2]|0)|0)){f=k[b>>2]|0;b=k[13808]|0;if((f|0)>0){e=k[j>>2]|0;a=0;do{m=b+(a<<4)|0;j=e+(a<<4)|0;k[m>>2]=k[j>>2];k[m+4>>2]=k[j+4>>2];k[m+8>>2]=k[j+8>>2];k[m+12>>2]=k[j+12>>2];a=a+1|0}while((a|0)<(f|0))}k[d>>2]=f}else b=0}else b=0;while(0);r=l;return b|0}function Fz(){var a=0,b=0,c=0;b=r;r=r+16|0;a=b;c=k[13809]|0;k[13809]=c+1;do if((c|0)<=0){c=Cy(4800)|0;k[13808]=c;if(!c){Yr(1,140528,a)|0;a=1;break}k[13810]=300;k[13811]=0;k[13812]=0;if(i[137280]|0){cB();a=0}else a=0}else a=0;while(0);r=b;return a|0}function Gz(){var a=0,b=0,c=0,d=0.0,e=0,f=0;b=r;r=r+16|0;a=b;c=k[13809]|0;k[13809]=c+-1;if((c|0)<=1?(vP(k[13808]|0),(i[137280]|0)!=0):0){c=k[24528]|0;f=k[13811]|0;e=k[13812]|0;d=+dB();k[a>>2]=f;k[a+4>>2]=e;p[a+8>>3]=d;FN(c,140566,a)|0}r=b;return}function Hz(a,b){a=a|0;b=b|0;return Mz(a,b,0)|0}function Iz(a,b){a=a|0;b=b|0;return Mz(a,b,1)|0}function Jz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;i=r;r=r+80|0;g=i;e=b;f=1;while(1){e=k[(k[e+8>>2]|0)+172>>2]|0;if(!e)break;else f=f+1|0}if((f|0)<21)if((f|0)>0)h=7;else Kz(a,g,f,c,d);else{g=By(f<<2)|0;h=7}if((h|0)==7){e=0;while(1){k[g+(e<<2)>>2]=b;e=e+1|0;if((e|0)==(f|0))break;else b=k[(k[b+8>>2]|0)+172>>2]|0}Kz(a,g,f,c,d);if((f|0)>20)vP(g)}r=i;return}function Kz(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0.0,h=0.0,j=0.0,l=0.0,m=0.0,n=0.0,o=0,q=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0.0,Y=0.0,Z=0.0;V=r;r=r+256|0;T=V+224|0;R=V+160|0;N=V+80|0;O=V;Q=V+144|0;S=V+64|0;U=V+248|0;P=V+240|0;o=k[b>>2]|0;L=k[o>>2]&3;f=o+-32|0;J=k[((L|0)==2?o:f)+28>>2]|0;K=N+16|0;L=k[(k[((L|0)==3?o:o+32|0)+28>>2]|0)+8>>2]|0;H=o+8|0;M=k[H>>2]|0;I=M+16|0;i[t>>0]=i[I>>0];i[t+1>>0]=i[I+1>>0];i[t+2>>0]=i[I+2>>0];i[t+3>>0]=i[I+3>>0];i[t+4>>0]=i[I+4>>0];i[t+5>>0]=i[I+5>>0];i[t+6>>0]=i[I+6>>0];i[t+7>>0]=i[I+7>>0];h=+p[t>>3];M=M+24|0;i[t>>0]=i[M>>0];i[t+1>>0]=i[M+1>>0];i[t+2>>0]=i[M+2>>0];i[t+3>>0]=i[M+3>>0];i[t+4>>0]=i[M+4>>0];i[t+5>>0]=i[M+5>>0];i[t+6>>0]=i[M+6>>0];i[t+7>>0]=i[M+7>>0];l=+p[t>>3];M=L+16|0;i[t>>0]=i[M>>0];i[t+1>>0]=i[M+1>>0];i[t+2>>0]=i[M+2>>0];i[t+3>>0]=i[M+3>>0];i[t+4>>0]=i[M+4>>0];i[t+5>>0]=i[M+5>>0];i[t+6>>0]=i[M+6>>0];i[t+7>>0]=i[M+7>>0];j=+p[t>>3];L=L+24|0;i[t>>0]=i[L>>0];i[t+1>>0]=i[L+1>>0];i[t+2>>0]=i[L+2>>0];i[t+3>>0]=i[L+3>>0];i[t+4>>0]=i[L+4>>0];i[t+5>>0]=i[L+5>>0];i[t+6>>0]=i[L+6>>0];i[t+7>>0]=i[L+7>>0];j=h+j;l=l+ +p[t>>3];p[N>>3]=j;p[N+8>>3]=l;k[K>>2]=k[N>>2];k[K+4>>2]=k[N+4>>2];k[K+8>>2]=k[N+8>>2];k[K+12>>2]=k[N+12>>2];k[Q>>2]=k[N>>2];k[Q+4>>2]=k[N+4>>2];k[Q+8>>2]=k[N+8>>2];k[Q+12>>2]=k[N+12>>2];L=N+32|0;M=N+48|0;I=k[J+8>>2]|0;H=k[H>>2]|0;G=H+56|0;i[t>>0]=i[G>>0];i[t+1>>0]=i[G+1>>0];i[t+2>>0]=i[G+2>>0];i[t+3>>0]=i[G+3>>0];i[t+4>>0]=i[G+4>>0];i[t+5>>0]=i[G+5>>0];i[t+6>>0]=i[G+6>>0];i[t+7>>0]=i[G+7>>0];h=+p[t>>3];H=H+64|0;i[t>>0]=i[H>>0];i[t+1>>0]=i[H+1>>0];i[t+2>>0]=i[H+2>>0];i[t+3>>0]=i[H+3>>0];i[t+4>>0]=i[H+4>>0];i[t+5>>0]=i[H+5>>0];i[t+6>>0]=i[H+6>>0];i[t+7>>0]=i[H+7>>0];n=+p[t>>3];H=I+16|0;i[t>>0]=i[H>>0];i[t+1>>0]=i[H+1>>0];i[t+2>>0]=i[H+2>>0];i[t+3>>0]=i[H+3>>0];i[t+4>>0]=i[H+4>>0];i[t+5>>0]=i[H+5>>0];i[t+6>>0]=i[H+6>>0];i[t+7>>0]=i[H+7>>0];m=+p[t>>3];I=I+24|0;i[t>>0]=i[I>>0];i[t+1>>0]=i[I+1>>0];i[t+2>>0]=i[I+2>>0];i[t+3>>0]=i[I+3>>0];i[t+4>>0]=i[I+4>>0];i[t+5>>0]=i[I+5>>0];i[t+6>>0]=i[I+6>>0];i[t+7>>0]=i[I+7>>0];m=h+m;n=n+ +p[t>>3];p[N+48>>3]=m;p[N+56>>3]=n;k[L>>2]=k[M>>2];k[L+4>>2]=k[M+4>>2];k[L+8>>2]=k[M+8>>2];k[L+12>>2]=k[M+12>>2];k[S>>2]=k[M>>2];k[S+4>>2]=k[M+4>>2];k[S+8>>2]=k[M+8>>2];k[S+12>>2]=k[M+12>>2];a:do if((c|0)!=1&(i[137282]|0)==0){W=j-m;h=l-n;g=h*h;if(W*W+g<1.0e-06){k[K>>2]=k[N>>2];k[K+4>>2]=k[N+4>>2];k[K+8>>2]=k[N+8>>2];k[K+12>>2]=k[N+12>>2];k[L>>2]=k[M>>2];k[L+4>>2]=k[M+4>>2];k[L+8>>2]=k[M+8>>2];k[L+12>>2]=k[M+12>>2];g=0.0;h=0.0}else{Y=m-j;W=+X(+(Y*Y+g));I=k[(k[(k[a+48>>2]|0)+8>>2]|0)+248>>2]|0;g=+((ha(I,c+-1|0)|0)/2|0|0);Z=h*g/W;p[K>>3]=j+Z;g=Y*g/W;p[N+24>>3]=l+g;p[L>>3]=Z+m;p[N+40>>3]=g+n;n=+(0-I|0);g=h*n/W;h=Y*n/W}if((c|0)>0){q=(d|0)==6;s=P+4|0;u=U+4|0;v=N+24|0;w=N+40|0;x=O+16|0;y=O+32|0;z=O+48|0;A=R+16|0;B=O+16|0;C=R+32|0;D=O+32|0;E=R+48|0;F=O+48|0;G=O+48|0;H=O+32|0;I=O+16|0;f=0;while(1){d=o+-32|0;if((k[((k[o>>2]&3|0)==2?o:d)+28>>2]|0)==(J|0)){k[Q>>2]=k[N>>2];k[Q+4>>2]=k[N+4>>2];k[Q+8>>2]=k[N+8>>2];k[Q+12>>2]=k[N+12>>2];k[S>>2]=k[M>>2];k[S+4>>2]=k[M+4>>2];k[S+8>>2]=k[M+8>>2];k[S+12>>2]=k[M+12>>2];k[O>>2]=k[N>>2];k[O+4>>2]=k[N+4>>2];k[O+8>>2]=k[N+8>>2];k[O+12>>2]=k[N+12>>2];k[x>>2]=k[K>>2];k[x+4>>2]=k[K+4>>2];k[x+8>>2]=k[K+8>>2];k[x+12>>2]=k[K+12>>2];k[y>>2]=k[L>>2];k[y+4>>2]=k[L+4>>2];k[y+8>>2]=k[L+8>>2];k[y+12>>2]=k[L+12>>2];k[z>>2]=k[M>>2];k[z+4>>2]=k[M+4>>2];k[z+8>>2]=k[M+8>>2];k[z+12>>2]=k[M+12>>2]}else{k[Q>>2]=k[M>>2];k[Q+4>>2]=k[M+4>>2];k[Q+8>>2]=k[M+8>>2];k[Q+12>>2]=k[M+12>>2];k[S>>2]=k[N>>2];k[S+4>>2]=k[N+4>>2];k[S+8>>2]=k[N+8>>2];k[S+12>>2]=k[N+12>>2];k[G>>2]=k[N>>2];k[G+4>>2]=k[N+4>>2];k[G+8>>2]=k[N+8>>2];k[G+12>>2]=k[N+12>>2];k[H>>2]=k[K>>2];k[H+4>>2]=k[K+4>>2];k[H+8>>2]=k[K+8>>2];k[H+12>>2]=k[K+12>>2];k[I>>2]=k[L>>2];k[I+4>>2]=k[L+4>>2];k[I+8>>2]=k[L+8>>2];k[I+12>>2]=k[L+12>>2];k[O>>2]=k[M>>2];k[O+4>>2]=k[M+4>>2];k[O+8>>2]=k[M+8>>2];k[O+12>>2]=k[M+12>>2]}if(q){k[s>>2]=4;k[P>>2]=R;k[R>>2]=k[O>>2];k[R+4>>2]=k[O+4>>2];k[R+8>>2]=k[O+8>>2];k[R+12>>2]=k[O+12>>2];k[A>>2]=k[B>>2];k[A+4>>2]=k[B+4>>2];k[A+8>>2]=k[B+8>>2];k[A+12>>2]=k[B+12>>2];k[C>>2]=k[D>>2];k[C+4>>2]=k[D+4>>2];k[C+8>>2]=k[D+8>>2];k[C+12>>2]=k[D+12>>2];k[E>>2]=k[F>>2];k[E+4>>2]=k[F+4>>2];k[E+8>>2]=k[F+8>>2];k[E+12>>2]=k[F+12>>2];k[T>>2]=k[P>>2];k[T+4>>2]=k[P+4>>2];QH(T,U);EA(o,k[((k[o>>2]&3|0)==2?o:d)+28>>2]|0,k[U>>2]|0,k[u>>2]|0,e)}else EA(o,k[((k[o>>2]&3|0)==2?o:d)+28>>2]|0,O,4,e);k[R>>2]=k[Q>>2];k[R+4>>2]=k[Q+4>>2];k[R+8>>2]=k[Q+8>>2];k[R+12>>2]=k[Q+12>>2];k[T>>2]=k[S>>2];k[T+4>>2]=k[S+4>>2];k[T+8>>2]=k[S+8>>2];k[T+12>>2]=k[S+12>>2];NA(a,o,R,T);p[K>>3]=g+ +p[K>>3];p[v>>3]=h+ +p[v>>3];p[L>>3]=g+ +p[L>>3];p[w>>3]=h+ +p[w>>3];f=f+1|0;if((f|0)==(c|0))break a;o=k[b+(f<<2)>>2]|0}}}else{if((d|0)==4){U=k[a+8>>2]|0;Y=(+p[U+16>>3]+ +p[U+32>>3])*.5;p[4257]=Y;W=(+p[U+24>>3]+ +p[U+40>>3])*.5;p[4258]=W;g=(j+m)*.5;h=(l+n)*.5;Z=m-j;n=n-l;n=+X(+(Z*Z+n*n))/5.0;Y=Y-g;W=W-h;Z=+X(+(Y*Y+W*W));Y=g-n*(Y/Z);Z=h-n*(W/Z);p[N+32>>3]=Y;p[N+16>>3]=Y;p[N+40>>3]=Z;p[N+24>>3]=Z}EA(o,k[((k[o>>2]&3|0)==2?o:f)+28>>2]|0,N,4,e);k[R>>2]=k[Q>>2];k[R+4>>2]=k[Q+4>>2];k[R+8>>2]=k[Q+8>>2];k[R+12>>2]=k[Q+12>>2];k[T>>2]=k[S>>2];k[T+4>>2]=k[S+4>>2];k[T+8>>2]=k[S+8>>2];k[T+12>>2]=k[S+12>>2];NA(a,o,R,T)}while(0);r=V;return}function Lz(a){a=a|0;var b=0,c=0,d=0;d=r;r=r+16|0;c=d;b=k[13810]|0;do if((b|0)<(a|0)){b=a+300+b-((a|0)%300|0)|0;a=Ey(k[13808]|0,b<<4)|0;k[13808]=a;if(!a){Yr(1,141328,c)|0;b=1;break}else{k[13810]=b;b=0;break}}else b=0;while(0);r=d;return b|0}function Mz(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0.0,g=0.0,h=0,j=0,l=0,m=0,n=0,o=0.0,q=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0.0,O=0,P=0,Q=0.0,R=0.0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0;ka=r;r=r+208|0;ha=ka+192|0;ja=ka+152|0;aa=ka+144|0;Y=ka+136|0;T=ka+128|0;V=ka+112|0;U=ka+96|0;L=ka+88|0;M=ka+80|0;l=ka+72|0;h=ka+64|0;X=ka+184|0;ga=ka+176|0;ba=ka+168|0;W=ka+32|0;$=ka;ia=ka+160|0;k[13811]=(k[13811]|0)+1;j=a+80|0;k[13812]=(k[13812]|0)+(k[j>>2]|0);d=k[a+88>>2]|0;a:do if(!d)A=4;else{while(1){e=k[d+8>>2]|0;if(!(i[e+112>>0]|0)){fa=d;break}d=k[e+116>>2]|0;if(!d){A=4;break a}}ea=k[a+84>>2]|0;da=k[j>>2]|0;ca=(da|0)>0;if(ca){h=0;d=0;do{e=ea+(h<<5)|0;w=+p[ea+(h<<5)+8>>3]-+p[ea+(h<<5)+24>>3];if(!((w>=0.0?w:-w)<.01)?(w=+p[e>>3]-+p[ea+(h<<5)+16>>3],!((w>=0.0?w:-w)<.01)):0){if((d|0)!=(h|0)){P=ea+(d<<5)|0;k[P>>2]=k[e>>2];k[P+4>>2]=k[e+4>>2];k[P+8>>2]=k[e+8>>2];k[P+12>>2]=k[e+12>>2];k[P+16>>2]=k[e+16>>2];k[P+20>>2]=k[e+20>>2];k[P+24>>2]=k[e+24>>2];k[P+28>>2]=k[e+28>>2]}d=d+1|0}h=h+1|0}while((h|0)!=(da|0))}else d=0;f=+p[ea>>3];K=ea+16|0;g=+p[K>>3];if(!(f>g)?(S=ea+8|0,s=+p[S>>3],O=ea+24|0,o=+p[O>>3],!(s>o)):0){P=d+-1|0;do if((d|0)>1){J=k[24528]|0;d=0;while(1){A=d;d=d+1|0;E=ea+(d<<5)|0;t=+p[E>>3];F=ea+(d<<5)+16|0;u=+p[F>>3];if(t>u){A=19;break}G=ea+(d<<5)+8|0;v=+p[G>>3];H=ea+(d<<5)+24|0;w=+p[H>>3];if(v>w){A=19;break}I=ea+(A<<5)+16|0;z=g<t;h=z&1;D=ea+(A<<5)|0;x=f>u;j=x&1;C=ea+(A<<5)+24|0;q=o<v;e=q&1;B=ea+(A<<5)+8|0;m=s>w;l=m&1;y=j+h+e+l|0;n=(y|0)>0;if(!((i[137280]|0)==0|n^1)){k[L>>2]=A;k[L+4>>2]=d;FN(J,140742,L)|0;Nz(a)}if(n){do if(!z){if(x){j=~~+p[D>>3];p[D>>3]=+p[F>>3];p[F>>3]=+(j|0);j=0;break}if(q){e=~~+p[C>>3];p[C>>3]=+p[G>>3];p[G>>3]=+(e|0);e=0;break}if(m){l=~~+p[B>>3];p[B>>3]=+p[H>>3];p[H>>3]=+(l|0);l=0}}else{h=~~+p[I>>3];p[I>>3]=+p[E>>3];p[E>>3]=+(h|0);h=0}while(0);n=y+-1|0;if((y|0)>1){m=0;do{do if((h|0)==1){w=+(~~((+p[I>>3]+ +p[E>>3])*.5+.5)|0);p[E>>3]=w;p[I>>3]=w;h=0}else{if((j|0)==1){w=+(~~((+p[D>>3]+ +p[F>>3])*.5+.5)|0);p[F>>3]=w;p[D>>3]=w;j=0;break}if((e|0)==1){w=+(~~((+p[C>>3]+ +p[G>>3])*.5+.5)|0);p[G>>3]=w;p[C>>3]=w;e=0;break}if((l|0)!=1)break;w=+(~~((+p[B>>3]+ +p[H>>3])*.5+.5)|0);p[H>>3]=w;p[B>>3]=w;l=0}while(0);m=m+1|0}while((m|0)<(n|0))}}g=+p[D>>3];e=~~g;f=+p[I>>3];h=~~f;v=+p[E>>3];j=~~v;w=+p[F>>3];l=~~w;do if((h|0)>(j|0)&(l|0)>(e|0)){if(!((j|0)>(e|0)|(l|0)<(e|0))){m=l-e|0;break}if((h|0)<(j|0)|(h|0)>(l|0)){A=h-e|0;m=l-j|0;m=(A|0)<(m|0)?A:m;break}else{m=h-j|0;break}}else m=0;while(0);o=+p[B>>3];e=~~o;s=+p[C>>3];h=~~s;t=+p[G>>3];j=~~t;u=+p[H>>3];l=~~u;do if((h|0)>(j|0)&(l|0)>(e|0)){do if((j|0)>(e|0)|(l|0)<(e|0))if((h|0)<(j|0)|(h|0)>(l|0)){A=h-e|0;e=l-j|0;e=(A|0)<(e|0)?A:e;break}else{e=h-j|0;break}else e=l-e|0;while(0);if((m|0)!=0&(e|0)!=0)if((m|0)<(e|0)){e=f<w;if(f-g>w-v)if(e){p[I>>3]=v;s=t;o=u;f=v;g=w;break}else{p[D>>3]=w;s=t;o=u;f=v;g=w;break}else if(e){p[E>>3]=f;s=t;o=u;g=w;break}else{p[F>>3]=g;s=t;o=u;f=v;break}}else{e=s<u;if(s-o>u-t)if(e){p[C>>3]=t;s=t;o=u;f=v;g=w;break}else{p[B>>3]=u;s=t;o=u;f=v;g=w;break}else if(e){p[G>>3]=s;o=u;f=v;g=w;break}else{p[H>>3]=o;s=t;f=v;g=w;break}}else{s=t;o=u;f=v;g=w}}else{s=t;o=u;f=v;g=w}while(0);if((d|0)>=(P|0)){A=70;break}}if((A|0)==19){k[M>>2]=d;Yr(1,140696,M)|0;Nz(a);d=0;break a}else if((A|0)==70){f=+p[ea>>3];break}}while(0);g=+p[a>>3];if(!(((!(g<f)?!(g>+p[K>>3]):0)?(N=+p[a+8>>3],!(N<+p[S>>3])):0)?!(N>+p[O>>3]):0)){if(i[137280]|0){QN(140785,42,1,k[24528]|0)|0;Nz(a);g=+p[a>>3];f=+p[ea>>3]}if(g<f){p[a>>3]=f;g=f}f=+p[K>>3];if(g>f)p[a>>3]=f;d=a+8|0;f=+p[d>>3];g=+p[S>>3];if(f<g)p[d>>3]=g;else g=f;f=+p[O>>3];if(g>f)p[d>>3]=f}x=a+40|0;g=+p[x>>3];d=ea+(P<<5)|0;f=+p[d>>3];if(!(((!(g<f)?!(g>+p[ea+(P<<5)+16>>3]):0)?(Q=+p[a+48>>3],!(Q<+p[ea+(P<<5)+8>>3])):0)?!(Q>+p[ea+(P<<5)+24>>3]):0)){if(i[137280]|0){QN(140828,39,1,k[24528]|0)|0;Nz(a);g=+p[x>>3];f=+p[d>>3]}if(g<f)p[x>>3]=f;else f=g;g=+p[ea+(P<<5)+16>>3];if(f>g)p[x>>3]=g;d=a+48|0;f=+p[d>>3];g=+p[ea+(P<<5)+8>>3];if(f<g)p[d>>3]=g;else g=f;f=+p[ea+(P<<5)+24>>3];if(g>f)p[d>>3]=f}e=da<<3;if((e|0)>(k[13813]|0)){d=k[13814]|0;if(!d)d=Cy(da<<7)|0;else d=Ey(d,da<<7)|0;k[13814]=d;k[13813]=e}if((da|0)>1?(R=+p[S>>3],R>+p[ea+40>>3]):0){S=ea+24|0;Q=+p[S>>3];p[S>>3]=-R;p[ea+8>>3]=-Q;if((da|0)==1)q=1;else{d=1;do{S=ea+(d<<5)+24|0;R=+p[S>>3];p[S>>3]=-+p[ea+(d<<5)+8>>3];p[ea+(d<<5)+8>>3]=-R;d=d+1|0}while((d|0)!=(da|0));q=1}}else q=0;S=k[fa>>2]&3;y=fa+32|0;d=k[((S|0)==3?fa:y)+28>>2]|0;z=fa+-32|0;if((d|0)==(k[((S|0)==2?fa:z)+28>>2]|0)){d=ht(d)|0;k[T>>2]=d;Yr(1,140933,T)|0;d=0;break}b:do if(ca){n=da+-1|0;j=k[13814]|0;l=0;h=0;c:while(1){if((l|0)>0)d=+p[ea+(l<<5)+8>>3]>+p[ea+(l+-1<<5)+8>>3]?-1:1;else d=0;if((l|0)<(n|0))e=+p[ea+(l+1<<5)+8>>3]>+p[ea+(l<<5)+8>>3]?1:-1;else e=0;d:do if((d|0)!=(e|0))if((d|0)==1|(e|0)==-1){T=ea+(l<<5)|0;p[j+(h<<4)>>3]=+p[T>>3];d=h+1|0;p[j+(h<<4)+8>>3]=+p[ea+(l<<5)+24>>3];p[j+(d<<4)>>3]=+p[T>>3];p[j+(d<<4)+8>>3]=+p[ea+(l<<5)+8>>3];d=h+2|0;break}else{T=ea+(l<<5)+16|0;p[j+(h<<4)>>3]=+p[T>>3];d=h+1|0;p[j+(h<<4)+8>>3]=+p[ea+(l<<5)+8>>3];p[j+(d<<4)>>3]=+p[T>>3];p[j+(d<<4)+8>>3]=+p[ea+(l<<5)+24>>3];d=h+2|0;break}else{switch(d|0){case -1:{d=h;break d}case 0:break;default:{A=121;break c}}T=ea+(l<<5)|0;p[j+(h<<4)>>3]=+p[T>>3];d=h+1|0;p[j+(h<<4)+8>>3]=+p[ea+(l<<5)+24>>3];p[j+(d<<4)>>3]=+p[T>>3];p[j+(d<<4)+8>>3]=+p[ea+(l<<5)+8>>3];d=h+2|0}while(0);l=l+1|0;if((l|0)>=(da|0))break;else h=d}if((A|0)==121){k[U>>2]=d;k[U+4>>2]=d;k[U+8>>2]=480;Yr(1,140868,U)|0;d=0;break a}if(ca){l=k[13814]|0;m=n;j=d;e:while(1){if((m|0)<(n|0))d=+p[ea+(m<<5)+8>>3]>+p[ea+(m+1<<5)+8>>3]?-1:1;else d=0;h=(m|0)>0;if(h)e=+p[ea+(m+-1<<5)+8>>3]>+p[ea+(m<<5)+8>>3]?1:-1;else e=0;f:do if((d|0)!=(e|0))if((d|0)==1|(e|0)==-1){T=ea+(m<<5)|0;p[l+(j<<4)>>3]=+p[T>>3];U=j+1|0;p[l+(j<<4)+8>>3]=+p[ea+(m<<5)+24>>3];p[l+(U<<4)>>3]=+p[T>>3];p[l+(U<<4)+8>>3]=+p[ea+(m<<5)+8>>3];j=j+2|0;break}else{T=ea+(m<<5)+16|0;p[l+(j<<4)>>3]=+p[T>>3];U=j+1|0;p[l+(j<<4)+8>>3]=+p[ea+(m<<5)+8>>3];p[l+(U<<4)>>3]=+p[T>>3];p[l+(U<<4)+8>>3]=+p[ea+(m<<5)+24>>3];j=j+2|0;break}else switch(d|0){case 0:{T=ea+(m<<5)+16|0;p[l+(j<<4)>>3]=+p[T>>3];U=j+1|0;p[l+(j<<4)+8>>3]=+p[ea+(m<<5)+8>>3];p[l+(U<<4)>>3]=+p[T>>3];p[l+(U<<4)+8>>3]=+p[ea+(m<<5)+24>>3];j=j+2|0;break f}case -1:{O=ea+(m<<5)+16|0;p[l+(j<<4)>>3]=+p[O>>3];T=ea+(m<<5)+8|0;S=j+1|0;p[l+(j<<4)+8>>3]=+p[T>>3];p[l+(S<<4)>>3]=+p[O>>3];O=ea+(m<<5)+24|0;P=j+2|0;p[l+(S<<4)+8>>3]=+p[O>>3];S=ea+(m<<5)|0;p[l+(P<<4)>>3]=+p[S>>3];U=j+3|0;p[l+(P<<4)+8>>3]=+p[O>>3];p[l+(U<<4)>>3]=+p[S>>3];p[l+(U<<4)+8>>3]=+p[T>>3];j=j+4|0;break f}default:break e}while(0);if(h)m=m+-1|0;else break b}k[V>>2]=d;k[V+4>>2]=d;k[V+8>>2]=513;Yr(1,140868,V)|0;d=0;break a}else j=d}else j=0;while(0);if(q){if(ca){d=0;do{T=ea+(d<<5)+24|0;U=~~+p[T>>3];V=ea+(d<<5)+8|0;p[T>>3]=-+p[V>>3];p[V>>3]=+(0-U|0);d=d+1|0}while((d|0)!=(da|0))}if((j|0)>0){d=k[13814]|0;e=0;do{V=d+(e<<4)+8|0;p[V>>3]=-+p[V>>3];e=e+1|0}while((e|0)!=(j|0))}}if(ca){d=0;do{p[ea+(d<<5)>>3]=2147483647.0;p[ea+(d<<5)+16>>3]=-2147483648.0;d=d+1|0}while((d|0)!=(da|0))}k[X>>2]=k[13814];h=X+4|0;k[h>>2]=j;p[W>>3]=+p[a>>3];p[W+8>>3]=+p[a+8>>3];p[W+16>>3]=+p[x>>3];p[W+24>>3]=+p[a+48>>3];if((EH(X,W,ga)|0)<0){Yr(1,140972,Y)|0;d=0;break}do if(!c){d=k[h>>2]|0;if((d|0)>(k[13806]|0)){e=k[13807]|0;if(!e)d=Cy(d<<5)|0;else d=Ey(e,d<<5)|0;k[13807]=d;d=k[h>>2]|0;k[13806]=d}if((d|0)>0){e=k[13807]|0;h=k[13814]|0;j=0;do{Y=e+(j<<5)|0;c=h+(j<<4)|0;k[Y>>2]=k[c>>2];k[Y+4>>2]=k[c+4>>2];k[Y+8>>2]=k[c+8>>2];k[Y+12>>2]=k[c+12>>2];Y=e+(j<<5)+16|0;j=j+1|0;c=h+(((j|0)%(d|0)|0)<<4)|0;k[Y>>2]=k[c>>2];k[Y+4>>2]=k[c+4>>2];k[Y+8>>2]=k[c+8>>2];k[Y+12>>2]=k[c+12>>2]}while((j|0)<(d|0))}if(!(i[a+29>>0]|0)){f=0.0;g=0.0}else{g=+p[a+16>>3];f=+Z(+g);g=+_(+g)}p[$+8>>3]=g;p[$>>3]=f;if(!(i[a+69>>0]|0)){f=0.0;g=0.0}else{g=+p[a+56>>3];f=-+Z(+g);g=-+_(+g)}p[$+24>>3]=g;p[$+16>>3]=f;a=k[13807]|0;k[ha>>2]=k[ga>>2];k[ha+4>>2]=k[ga+4>>2];if((BH(a,d,ha,$,ba)|0)>=0)break;Yr(1,141011,aa)|0;d=0;break a}else{k[ha>>2]=k[ga>>2];k[ha+4>>2]=k[ga+4>>2];QH(ha,ba)}while(0);m=ba+4|0;if(Lz(k[m>>2]|0)|0){d=0;break}if(ca){d=0;do{p[ea+(d<<5)>>3]=2147483647.0;p[ea+(d<<5)+16>>3]=-2147483648.0;d=d+1|0}while((d|0)!=(da|0))}h=k[m>>2]|0;if((h|0)>0){j=k[13808]|0;d=k[ba>>2]|0;e=0;do{ba=j+(e<<4)|0;aa=d+(e<<4)|0;k[ba>>2]=k[aa>>2];k[ba+4>>2]=k[aa+4>>2];k[ba+8>>2]=k[aa+8>>2];k[ba+12>>2]=k[aa+12>>2];e=e+1|0}while((e|0)<(h|0));j=10;l=0;d=1}else{j=10;l=0;d=1}while(1){Oz(ea,da,k[13808]|0,h,j);g:do if(ca){e=0;while(1){if(+p[ea+(e<<5)>>3]==2147483647.0)break;if(+p[ea+(e<<5)+16>>3]==-2147483648.0)break;e=e+1|0;if((e|0)>=(da|0)){h=l;break g}}h=j<<1;j=h;h=(h|0)>(2147483647/(da|0)|0|0)?15:l}else{e=0;h=l}while(0);d=(e|0)==(da|0)?0:d;e=h+1|0;if(!((e|0)<15&d<<24>>24!=0))break;h=k[m>>2]|0;l=e}if(d<<24>>24){ca=ht(k[((k[fa>>2]&3|0)==3?fa:y)+28>>2]|0)|0;fa=ht(k[((k[fa>>2]&3|0)==2?fa:z)+28>>2]|0)|0;k[ja>>2]=ca;k[ja+4>>2]=fa;Yr(0,141049,ja)|0;k[ha>>2]=k[ga>>2];k[ha+4>>2]=k[ga+4>>2];QH(ha,ia);Oz(ea,da,k[ia>>2]|0,k[ia+4>>2]|0,10);vP(k[ia>>2]|0)}k[b>>2]=k[m>>2];d=k[13808]|0;break}Yr(1,140651,l)|0;Nz(a);d=0}while(0);if((A|0)==4){Yr(1,140609,h)|0;d=0}r=ka;return d|0}function Nz(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0.0,m=0.0,n=0.0,o=0.0,q=0;j=r;r=r+112|0;g=j+80|0;h=j+48|0;f=j+8|0;e=j;b=k[24528]|0;c=a+80|0;k[e>>2]=k[c>>2];FN(b,141158,e)|0;if((k[c>>2]|0)>0){d=a+84|0;e=0;do{q=k[d>>2]|0;o=+p[q+(e<<5)>>3];n=+p[q+(e<<5)+8>>3];m=+p[q+(e<<5)+16>>3];l=+p[q+(e<<5)+24>>3];k[f>>2]=e;p[f+8>>3]=o;p[f+16>>3]=n;p[f+24>>3]=m;p[f+32>>3]=l;FN(b,141169,f)|0;e=e+1|0}while((e|0)<(k[c>>2]|0))}o=+p[a+8>>3];n=+p[a+16>>3];q=(i[a+29>>0]|0)!=0?141200:141212;p[h>>3]=+p[a>>3];p[h+8>>3]=o;p[h+16>>3]=n;k[h+24>>2]=q;FN(b,141228,h)|0;n=+p[a+48>>3];o=+p[a+56>>3];q=(i[a+69>>0]|0)!=0?141200:141212;p[g>>3]=+p[a+40>>3];p[g+8>>3]=n;p[g+16>>3]=o;k[g+24>>2]=q;FN(b,141279,g)|0;r=j;return}function Oz(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0.0,k=0.0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,u=0.0,v=0,w=0,x=0.0,y=0.0,z=0.0,A=0.0,B=0.0;s=ha(e,b)|0;if((d|0)>3){t=(s|0)<0;u=+(s|0);v=(b|0)>0;w=3;e=0;while(1){if(!t){q=c+(e<<4)|0;r=c+(e<<4)+8|0;o=e+1|0;n=c+(o<<4)|0;o=c+(o<<4)+8|0;g=e+2|0;f=c+(g<<4)|0;g=c+(g<<4)+8|0;h=c+(w<<4)|0;i=c+(w<<4)+8|0;m=0;while(1){z=+(m|0)/u;j=+p[q>>3];k=+p[r>>3];A=+p[n>>3];x=+p[o>>3];B=+p[f>>3];y=+p[g>>3];j=j+z*(A-j);k=k+z*(x-k);A=A+z*(B-A);x=x+z*(y-x);j=j+z*(A-j);k=k+z*(x-k);j=j+z*(A+z*(B+z*(+p[h>>3]-B)-A)-j);k=k+z*(x+z*(y+z*(+p[i>>3]-y)-x)-k);if(v){l=0;do{if(k<=+p[a+(l<<5)+24>>3]+.0001?k>=+p[a+(l<<5)+8>>3]+-.0001:0){e=a+(l<<5)|0;if(+p[e>>3]>j)p[e>>3]=j;e=a+(l<<5)+16|0;if(+p[e>>3]<j)p[e>>3]=j}l=l+1|0}while((l|0)!=(b|0))}if((m|0)==(s|0))break;else m=m+1|0}}e=w+3|0;if((e|0)<(d|0)){r=w;w=e;e=r}else break}}return}
function jl(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0.0,l=0,m=0,n=0.0,q=0.0,s=0,u=0.0,v=0.0,w=0.0,x=0.0,y=0,z=0.0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0.0,I=0.0;G=r;r=r+80|0;F=G+72|0;E=G+64|0;A=G+56|0;m=G+48|0;l=G+40|0;f=G+24|0;e=G+16|0;s=G;a:do if((Zs(a)|0)>=2){h=hl(a)|0;c=ss(a,176896)|0;do if(((c|0)!=0?(g=s+8|0,k[e>>2]=s,k[e+4>>2]=g,d=UN(c,142247,e)|0,(d|0)!=0):0)?(n=+p[s>>3],!(+W(+n)<1.0e-09)):0){if((d|0)!=1){j=+p[g>>3];if(+W(+j)<1.0e-09){c=0;break}}else{p[g>>3]=n;j=n}if(!(n==1.0&j==1.0)){if(i[137280]|0){D=k[24528]|0;p[f>>3]=n;p[f+8>>3]=j;FN(D,128887,f)|0}c=Kt(a)|0;if(!c)c=1;else{do{D=k[(k[c+8>>2]|0)+132>>2]|0;p[D>>3]=+p[s>>3]*+p[D>>3];D=D+8|0;p[D>>3]=+p[g>>3]*+p[D>>3];c=Lt(a,c)|0}while((c|0)!=0);c=1}}else c=0}else c=0;while(0);c=c+h|0;d=k[b>>2]|0;if(d){if(i[137280]|0){d=k[24528]|0;C=ht(a)|0;D=k[b+4>>2]|0;k[l>>2]=C;k[l+4>>2]=D;FN(d,128910,l)|0;d=k[b>>2]|0}if(d>>>0>2){switch(d|0){case 3:{d=Il(a,1)|0;break}case 4:{d=Il(a,0)|0;break}case 6:case 5:{d=0;break}case 10:case 9:case 7:case 8:case 14:case 13:case 11:case 12:{Hl(a,d)|0;d=0;break}case 15:{d=Il(a,-1)|0;break}default:{k[m>>2]=k[b+4>>2];Yr(0,128933,m)|0;d=0}}c=d+c|0;break}e=Zs(a)|0;k[12704]=e;lm();e=Cy((k[12704]|0)*96|0)|0;k[12719]=e;e=Kt(a)|0;f=k[12719]|0;ml(s,a);j=+o[s>>2];n=+o[s+4>>2];h=(i[s+8>>0]|0)==0;n=h?n:n/72.0;j=h?j:j/72.0;h=h?1:2;d=k[12704]|0;b:do if((d|0)>0){g=0;while(1){D=k[(k[e+8>>2]|0)+132>>2]|0;p[f+8>>3]=+p[D>>3];p[f+16>>3]=+p[D+8>>3];if(Ob[h&3](f+40|0,e,j,n)|0)break;k[f+24>>2]=g;k[f+28>>2]=1;k[f>>2]=e;k[f+88>>2]=0;e=Lt(a,e)|0;g=g+1|0;d=k[12704]|0;if((g|0)>=(d|0))break b;else f=f+96|0}vP(k[12719]|0);k[12719]=0;pl();vP(k[12614]|0);k[12614]=0;break a}while(0);e=k[12719]|0;q=+p[e+8>>3];n=+p[e+16>>3];u=q+ +p[e+40>>3];j=n+ +p[e+48>>3];q=q+ +p[e+56>>3];n=n+ +p[e+64>>3];if((d|0)>1){f=1;while(1){x=+p[e+104>>3];z=+p[e+112>>3];v=x+ +p[e+136>>3];w=z+ +p[e+144>>3];x=x+ +p[e+152>>3];z=z+ +p[e+160>>3];u=v<u?v:u;j=w<j?w:j;q=x>q?x:q;n=z>n?z:n;f=f+1|0;if((f|0)==(d|0))break;else e=e+96|0}}d=ss(a,128961)|0;if((d|0)!=0?(i[d>>0]|0)!=0:0){z=+aO(d);p[4184]=z}w=+p[4184];x=(n-j)*w;w=(q-u)*w;v=u-w;z=j-x;w=q+w;x=n+x;p[4196]=v;p[4195]=w;p[4194]=z;p[4193]=x;p[4185]=v;p[4187]=v;p[4189]=w;p[4191]=w;p[4192]=x;p[4188]=x;p[4190]=z;p[4186]=z;D=(k[b>>2]|0)==2;g=ql(0)|0;d=(g|0)==0;if(D)if(!d){rl();d=0;do{e=k[12704]|0;if((e|0)>0){f=0;g=k[12719]|0;while(1){F=g+8|0;p[F>>3]=+p[F>>3]*1.05;F=g+16|0;p[F>>3]=+p[F>>3]*1.05;f=f+1|0;if((f|0)==(e|0))break;else g=g+96|0}}d=d+1|0}while((ql(d)|0)!=0);if(!(i[137280]|0))y=62;else{y=k[24528]|0;k[A>>2]=d;FN(y,128973,A)|0;y=62}}else d=0;else if(d)d=0;else{rl();sl(0);uo(0,1);f=0;d=0;e=0;while(1){D=k[12719]|0;C=D+8|0;u=+mm(C,33480);n=+mm(C,33496);q=+mm(C,33512);j=+mm(C,33528);if((k[12704]|0)>1){B=D;C=1;s=D;m=D;l=D;h=D;while(1){a=B+104|0;B=B+96|0;z=+mm(a,33480);A=z<u;h=A?B:h;x=+mm(a,33512);y=x<q;l=y?B:l;w=+mm(a,33496);b=w<n;m=b?B:m;v=+mm(a,33528);a=v<j;s=a?B:s;C=C+1|0;if((C|0)>=(k[12704]|0))break;else{j=a?v:j;n=b?w:n;q=y?x:q;u=A?z:u}}}else{s=D;m=D;l=D;h=D}Om(h+8|0,+p[4185],+p[4186]);Om(l+8|0,+p[4189],+p[4190]);Om(m+8|0,+p[4187],+p[4188]);Om(s+8|0,+p[4191],+p[4192]);a=k[12704]|0;if((a|0)>0){b=(k[12615]|0)==0;y=0;s=D;while(1){if(!(b?(k[s+32>>2]|0)==0:0)){h=k[s+88>>2]|0;l=k[h>>2]|0;m=k[l>>2]|0;if(!m){q=0.0;n=0.0;j=0.0}else{D=h+8|0;i[t>>0]=i[D>>0];i[t+1>>0]=i[D+1>>0];i[t+2>>0]=i[D+2>>0];i[t+3>>0]=i[D+3>>0];i[t+4>>0]=i[D+4>>0];i[t+5>>0]=i[D+5>>0];i[t+6>>0]=i[D+6>>0];i[t+7>>0]=i[D+7>>0];x=+p[t>>3];D=h+16|0;i[t>>0]=i[D>>0];i[t+1>>0]=i[D+1>>0];i[t+2>>0]=i[D+2>>0];i[t+3>>0]=i[D+3>>0];i[t+4>>0]=i[D+4>>0];i[t+5>>0]=i[D+5>>0];i[t+6>>0]=i[D+6>>0];i[t+7>>0]=i[D+7>>0];w=+p[t>>3];D=l+8|0;i[t>>0]=i[D>>0];i[t+1>>0]=i[D+1>>0];i[t+2>>0]=i[D+2>>0];i[t+3>>0]=i[D+3>>0];i[t+4>>0]=i[D+4>>0];i[t+5>>0]=i[D+5>>0];i[t+6>>0]=i[D+6>>0];i[t+7>>0]=i[D+7>>0];v=+p[t>>3];D=l+16|0;i[t>>0]=i[D>>0];i[t+1>>0]=i[D+1>>0];i[t+2>>0]=i[D+2>>0];i[t+3>>0]=i[D+3>>0];i[t+4>>0]=i[D+4>>0];i[t+5>>0]=i[D+5>>0];i[t+6>>0]=i[D+6>>0];i[t+7>>0]=i[D+7>>0];u=+p[t>>3];q=0.0;n=0.0;j=0.0;do{D=m+8|0;i[t>>0]=i[D>>0];i[t+1>>0]=i[D+1>>0];i[t+2>>0]=i[D+2>>0];i[t+3>>0]=i[D+3>>0];i[t+4>>0]=i[D+4>>0];i[t+5>>0]=i[D+5>>0];i[t+6>>0]=i[D+6>>0];i[t+7>>0]=i[D+7>>0];I=v;v=+p[t>>3];D=m+16|0;i[t>>0]=i[D>>0];i[t+1>>0]=i[D+1>>0];i[t+2>>0]=i[D+2>>0];i[t+3>>0]=i[D+3>>0];i[t+4>>0]=i[D+4>>0];i[t+5>>0]=i[D+5>>0];i[t+6>>0]=i[D+6>>0];i[t+7>>0]=i[D+7>>0];H=u;u=+p[t>>3];z=+W(+((w-H)*v+(x*(H-u)+I*(u-w))))*.5;q=q+z*((x+I+v)/3.0);n=n+z*((w+H+u)/3.0);j=j+z;m=k[m>>2]|0}while((m|0)!=0)}p[s+8>>3]=q/j;p[s+16>>3]=n/j}y=y+1|0;if((y|0)==(a|0))break;else s=s+96|0}}e=e+1|0;h=ql(e)|0;if(!h)break;f=(h|0)<(g|0)?0:f+1|0;k[12615]=1;if(f){z=+p[4195];H=+p[4193];v=+p[4196];w=+p[4194];I=(H-w)*.05;x=(z-v)*.05;z=z+x;H=H+I;x=v-x;I=w-I;p[4196]=x;p[4195]=z;p[4194]=I;p[4193]=H;p[4185]=x;p[4187]=x;p[4189]=z;p[4191]=z;p[4192]=H;p[4188]=H;p[4190]=I;p[4186]=I;d=d+1|0}sl(1);uo(0,1);g=h}if(i[137280]|0){D=k[24528]|0;k[E>>2]=e;FN(D,128973,E)|0;k[F>>2]=d;FN(D,129e3,F)|0}xm();Am();lo();fm();y=62}if((y|0)==62){d=k[12704]|0;if((d|0)>0){e=0;f=k[12719]|0;while(1){F=k[(k[(k[f>>2]|0)+8>>2]|0)+132>>2]|0;p[F>>3]=+p[f+8>>3];p[F+8>>3]=+p[f+16>>3];e=e+1|0;if((e|0)==(d|0)){d=1;break}else f=f+96|0}}else d=1}pl();vP(k[12614]|0);k[12614]=0;c=d+c|0}}else c=0;while(0);r=G;return c|0}function kl(a,b){a=a|0;b=b|0;var c=0,d=0;d=r;r=r+32|0;c=d;if((Zs(a)|0)<2)a=0;else{ol(a,b,c)|0;a=jl(a,c)|0}r=d;return a|0}function ll(a){a=a|0;return kl(a,ss(a,128879)|0)|0}function ml(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0.0,j=0.0;g=r;r=r+48|0;f=g;e=g+24|0;c=ss(b,129026)|0;if(!((c|0)!=0?(ul(c,e,1.0)|0)!=0:0))d=3;do if((d|0)==3){c=ss(b,129030)|0;if((c|0)!=0?(ul(c,e,.800000011920929)|0)!=0:0)break;o[e+4>>2]=4.0;o[e>>2]=4.0;i[e+8>>0]=1}while(0);if(i[137280]|0){d=k[24528]|0;j=+o[e>>2];h=+o[e+4>>2];k[f>>2]=l[e+8>>0];p[f+8>>3]=j;p[f+16>>3]=h;FN(d,129035,f)|0};k[a>>2]=k[e>>2];k[a+4>>2]=k[e+4>>2];k[a+8>>2]=k[e+8>>2];r=g;return}function nl(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0.0,j=0.0;g=r;r=r+48|0;f=g;e=g+24|0;c=ss(b,129030)|0;if(!((c|0)!=0?(ul(c,e,1.0)|0)!=0:0))d=3;do if((d|0)==3){c=ss(b,129026)|0;if((c|0)!=0?(ul(c,e,1.25)|0)!=0:0)break;o[e+4>>2]=3.200000047683716;o[e>>2]=3.200000047683716;i[e+8>>0]=1}while(0);if(i[137280]|0){d=k[24528]|0;j=+o[e>>2];h=+o[e+4>>2];k[f>>2]=l[e+8>>0];p[f+8>>3]=j;p[f+16>>3]=h;FN(d,129068,f)|0};k[a>>2]=k[e>>2];k[a+4>>2]=k[e+4>>2];k[a+8>>2]=k[e+8>>2];r=g;return}function ol(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0;l=r;r=r+16|0;h=l+8|0;g=l;do if((b|0)!=0?(i[b>>0]|0)!=0:0){e=129126;f=50488;while(1){if(!(vO(b,e,k[f+8>>2]|0)|0)){d=f;j=5;break}d=f+16|0;e=k[f+20>>2]|0;if(!e)break;else f=d}if((j|0)==5){if(!(k[d+12>>2]|0)){k[g>>2]=e;Yr(0,129134,g)|0;d=50488}g=k[d>>2]|0;k[c>>2]=g;k[c+4>>2]=k[d+12>>2];if((g|0)==18)xl(a,b+(k[d+8>>2]|0)|0,c)}if(!(k[d+4>>2]|0)){d=yB(b,63)|0;if(d<<24>>24!=63)if(!(d<<24>>24))d=c;else{k[c>>2]=0;k[c+4>>2]=171734;break}else{k[h>>2]=b;Yr(0,129176,h)|0;d=c}k[d>>2]=1;k[c+4>>2]=129223}}else j=3;while(0);if((j|0)==3){k[c>>2]=0;k[c+4>>2]=171734}r=l;return c|0}function pl(){var a=0,b=0;if((k[12704]|0)>0){a=0;b=k[12719]|0;while(1){_n(b+40|0);a=a+1|0;if((a|0)>=(k[12704]|0))break;else b=b+96|0}}Zn();Nm();vP(k[12719]|0);return}function ql(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,m=0,n=0,o=0,p=0,q=0;q=r;r=r+48|0;o=q+24|0;n=q+8|0;p=q;d=k[12719]|0;if((k[12704]|0)>0){c=0;do{k[d+(c*96|0)+32>>2]=0;c=c+1|0;b=k[12704]|0}while((c|0)<(b|0));if((b|0)>1){c=b;b=0;m=0;do{e=d;d=d+96|0;m=m+1|0;if((m|0)<(c|0)){h=e+8|0;i=e+40|0;j=e+32|0;f=m;g=d;while(1){c=e+104|0;k[n>>2]=k[h>>2];k[n+4>>2]=k[h+4>>2];k[n+8>>2]=k[h+8>>2];k[n+12>>2]=k[h+12>>2];k[o>>2]=k[c>>2];k[o+4>>2]=k[c+4>>2];k[o+8>>2]=k[c+8>>2];k[o+12>>2]=k[c+12>>2];if(bo(n,i,o,e+136|0)|0){k[j>>2]=1;k[e+128>>2]=1;b=b+1|0}f=f+1|0;c=k[12704]|0;if((f|0)>=(c|0))break;else{e=g;g=g+96|0}}}}while((m|0)<(c+-1|0))}else b=0}else b=0;if((l[137280]|0)>1){o=k[24528]|0;k[p>>2]=a;k[p+4>>2]=b;FN(o,129107,p)|0}r=q;return b|0}function rl(){var a=0,b=0,c=0,d=0.0,e=0,f=0,g=0,h=0,i=0,j=0.0,l=0.0,m=0,n=0,o=0,q=0.0,r=0;vl();a=k[12614]|0;i=k[12617]|0;if(a>>>0<i>>>0){m=k[12719]|0;do{f=a;g=a+4|0;a:do if((g>>>0<i>>>0?(o=k[g>>2]|0,q=+p[o>>3],r=k[a>>2]|0,j=+p[r>>3],!(q!=j)):0)?(l=+p[r+8>>3],!(+p[o+8>>3]!=l)):0){b=a+8|0;b:do if(b>>>0<i>>>0){e=2;while(1){c=k[b>>2]|0;if(!(+p[c>>3]==j)){c=e;h=b;break b}if(!(+p[c+8>>3]==l)){c=e;h=b;break b}c=e+1|0;b=b+4|0;if(b>>>0<i>>>0)e=c;else{h=b;break}}}else{c=2;h=b}while(0);if(h>>>0<i>>>0?(n=k[h>>2]|0,+p[n+8>>3]==l):0){d=(+p[n>>3]-j)/+(c|0);if(g>>>0>=h>>>0){a=h;break}c=(h+-4+~f|0)>>>2;p[o>>3]=d+q;if(!c){a=h;break}a=a+8|0;b=1;while(1){g=b;b=b+1|0;f=k[a>>2]|0;p[f>>3]=d*+(b|0)+ +p[f>>3];if((g|0)==(c|0)){a=h;break a}else a=a+4|0}}if(g>>>0<h>>>0){c=r;e=o;d=j;b=g;while(1){f=k[c+16>>2]|0;g=k[e+16>>2]|0;p[e>>3]=d+(+p[m+(f*96|0)+56>>3]-+p[m+(f*96|0)+40>>3]+(+p[m+(g*96|0)+56>>3]-+p[m+(g*96|0)+40>>3]))*.5;a=a+4|0;b=b+4|0;if(b>>>0>=h>>>0){a=h;break a}g=k[a>>2]|0;c=g;e=k[b>>2]|0;d=+p[g>>3]}}else a=h}else a=g;while(0)}while(a>>>0<i>>>0)}return}function sl(a){a=a|0;var b=0.0,c=0.0,d=0.0,e=0.0,f=0,g=0,h=0,i=0;if(a)vl();g=k[12614]|0;h=k[g>>2]|0;b=+p[h>>3];p[4199]=b;c=+p[h>>3];p[4200]=c;i=k[12704]|0;if((i|0)>1){f=1;do{a=k[g+(f<<2)>>2]|0;e=+p[a>>3];if(e<b){p[4199]=e;d=+p[a>>3];b=e}else d=e;if(d>c){p[4200]=d;c=d}f=f+1|0}while((f|0)<(i|0))}e=+p[h+8>>3];p[4201]=e;d=+p[(k[g+(i+-1<<2)>>2]|0)+8>>3];p[4202]=d;p[4204]=d-e;p[4203]=c-b;return}function tl(){var a=0;a=k[12616]|0;if(a>>>0<(k[12617]|0)>>>0){k[12616]=a+4;a=k[a>>2]|0}else a=0;return a|0}function ul(a,b,c){a=a|0;b=b|0;c=+c;var d=0.0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0;m=r;r=r+16|0;g=m;h=m+12|0;j=m+8|0;while(1){e=a+1|0;if(!(_L(i[a>>0]|0)|0))break;else a=e}n=(i[a>>0]|0)==43;f=b+8|0;i[f>>0]=n&1;k[g>>2]=h;k[g+4>>2]=j;switch(UN(n?e:a,129101,g)|0){case 0:{a=0;break}case 1:{l=k[h>>2]|0;k[j>>2]=l;d=(k[t>>2]=l,+o[t>>2]);l=6;break}default:{d=+o[h>>2];l=6}}do if((l|0)==6){d=d/c;if(!(i[f>>0]|0)){o[b>>2]=d+1.0;o[b+4>>2]=+o[j>>2]/c+1.0;a=1;break}else{o[b>>2]=d;o[b+4>>2]=+o[j>>2]/c;a=1;break}}while(0);r=m;return a|0}function vl(){var a=0,b=0,c=0,d=0;a=k[12614]|0;if(!a){c=Cy(k[12704]<<2)|0;k[12614]=c;k[12617]=c+(k[12704]<<2)}else c=a;b=k[12719]|0;Nm();a=k[12704]|0;if((a|0)>0){d=0;while(1){k[c>>2]=b+8;k[b+88>>2]=0;k[b+28>>2]=1;d=d+1|0;a=k[12704]|0;if((d|0)>=(a|0))break;else{b=b+96|0;c=c+4|0}}}dO(k[12614]|0,a,4,70);k[12616]=k[12614];return}function wl(a,b){a=a|0;b=b|0;var c=0.0,d=0.0;a=k[a>>2]|0;b=k[b>>2]|0;c=+p[a+8>>3];d=+p[b+8>>3];if(!(c<d))if(!(c>d)){d=+p[a>>3];c=+p[b>>3];if(d<c)a=-1;else a=d>c&1}else a=1;else a=-1;return a|0}function xl(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0,g=0;d=r;r=r+16|0;f=d;g=d+4|0;k[f>>2]=g;f=(UN(b,173421,f)|0)>0;b=k[g>>2]|0;k[c+8>>2]=f&(b|0)>-1?b:1e3;e=+jB(a,ks(a,0,129231,0)|0,-4.0,-1.0e10);p[c+16>>3]=e;r=d;return}function yl(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,p=0,q=0,r=0,s=0;s=(c|0)>0;if(s)IP(d|0,-1,c<<2|0)|0;k[d+(a<<2)>>2]=0;r=k[e>>2]|0;k[r>>2]=a;p=e+12|0;k[p>>2]=0;q=e+8|0;k[q>>2]=1;n=e+4|0;if(!(k[b+8>>2]|0)){a=0;f=1;while(1){e=a+1|0;k[p>>2]=e;g=k[r+(a<<2)>>2]|0;a=k[d+(g<<2)>>2]|0;j=b+(g*20|0)|0;if((k[j>>2]|0)>1){e=k[b+(g*20|0)+4>>2]|0;f=a+1|0;i=1;do{g=k[e+(i<<2)>>2]|0;h=d+(g<<2)|0;if((k[h>>2]|0)<0?(k[h>>2]=f,l=k[q>>2]|0,(l|0)<(k[n>>2]|0)):0){k[q>>2]=l+1;k[r+(l<<2)>>2]=g}i=i+1|0}while((i|0)<(k[j>>2]|0));e=k[p>>2]|0;f=k[q>>2]|0}if((e|0)<(f|0))a=e;else break}}else{a=0;f=1;while(1){e=a+1|0;k[p>>2]=e;g=k[r+(a<<2)>>2]|0;a=k[d+(g<<2)>>2]|0;j=b+(g*20|0)|0;if((k[j>>2]|0)>1){i=k[b+(g*20|0)+4>>2]|0;e=b+(g*20|0)+8|0;h=1;do{f=k[i+(h<<2)>>2]|0;g=d+(f<<2)|0;if((k[g>>2]|0)<0?(k[g>>2]=~~+o[(k[e>>2]|0)+(h<<2)>>2]+a,m=k[q>>2]|0,(m|0)<(k[n>>2]|0)):0){k[q>>2]=m+1;k[r+(m<<2)>>2]=f}h=h+1|0}while((h|0)<(k[j>>2]|0));e=k[p>>2]|0;f=k[q>>2]|0}if((e|0)<(f|0))a=e;else break}}if(s){a=a+10|0;f=0;do{e=d+(f<<2)|0;if((k[e>>2]|0)<0)k[e>>2]=a;f=f+1|0}while((f|0)!=(c|0))}return}function zl(a,b){a=a|0;b=b|0;var c=0;c=Cy(b<<2)|0;k[a>>2]=c;k[a+4>>2]=b;k[a+8>>2]=0;k[a+12>>2]=0;return}function Al(a){a=a|0;vP(k[a>>2]|0);return}function Bl(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0,g=0;if(i[137280]|0)QN(129552,25,1,k[24528]|0)|0;if((a|0)>0){g=0;do{f=b+(g<<2)|0;e=0;d=0.0;do{if((g|0)!=(e|0))d=d+ +p[(k[f>>2]|0)+(e<<3)>>3];e=e+1|0}while((e|0)!=(a|0));p[(k[f>>2]|0)+(g<<3)>>3]=-d;g=g+1|0}while((g|0)!=(a|0))}return gn(b,c,a+-1|0)|0}function Cl(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0.0;i=vj(b,b,0.0)|0;j=vj(b,b,0.0)|0;c=Kt(a)|0;if(c)do{d=Js(a,c)|0;if(d)do{f=k[d>>2]&3;e=(k[k[((f|0)==3?d:d+32|0)+28>>2]>>2]|0)>>>4;f=(k[k[((f|0)==2?d:d+-32|0)+28>>2]>>2]|0)>>>4;if((e|0)!=(f|0)){l=-1.0/+p[(k[d+8>>2]|0)+136>>3];p[(k[i+(f<<2)>>2]|0)+(e<<3)>>3]=l;p[(k[i+(e<<2)>>2]|0)+(f<<3)>>3]=l}d=Ks(a,d,c)|0}while((d|0)!=0);c=Lt(a,c)|0}while((c|0)!=0);h=Bl(b,i,j)|0;if((h|0)!=0&(b|0)>0){c=k[(k[a+8>>2]|0)+160>>2]|0;a=0;do{d=k[j+(a<<2)>>2]|0;e=d+(a<<3)|0;f=k[c+(a<<2)>>2]|0;g=0;do{p[f+(g<<3)>>3]=+p[e>>3]+ +p[(k[j+(g<<2)>>2]|0)+(g<<3)>>3]-+p[d+(g<<3)>>3]*2.0;g=g+1|0}while((g|0)!=(b|0));a=a+1|0}while((a|0)!=(b|0))}wj(i);wj(j);return h|0}function Dl(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=f|0;var g=0.0,h=0.0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;q=r;r=r+16|0;j=q;p=d<<3;k=Cy(p)|0;l=Cy(p)|0;m=Cy(p)|0;n=Cy(p)|0;o=Cy(p)|0;p=Cy(p)|0;zn(d,c,p);sn(d,p);sn(d,b);un(a,d,b,n);wn(d,p,n,k);zn(d,k,l);g=+An(d,k,k);a:do if((f|0)>0){c=f+-1|0;i=0;while(1){if(!(+Bn(d,k)>e)){c=0;break a}un(a,d,l,m);h=+An(d,l,m);if(h==0.0){c=0;break a}h=g/h;yn(d,l,h,o);xn(d,b,o,b);if((i|0)<(c|0)){yn(d,m,h,m);wn(d,k,m,k);h=+An(d,k,k);if(g==0.0)break;yn(d,l,h/g,l);xn(d,k,l,l);g=h}i=i+1|0;if((i|0)>=(f|0)){c=0;break a}}Yr(1,129578,j)|0;c=1}else c=0;while(0);vP(k);vP(l);vP(m);vP(n);vP(o);vP(p);r=q;return c|0}function El(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=f|0;g=g|0;var h=0.0,i=0.0,j=0,k=0,l=0,m=0,n=0,o=0,p=0,q=0;q=r;r=r+16|0;j=q;p=d<<3;k=Cy(p)|0;l=Cy(p)|0;m=Cy(p)|0;n=Cy(p)|0;o=Cy(p)|0;p=Cy(p)|0;zn(d,c,p);if(g<<24>>24){sn(d,p);sn(d,b)}vn(a,d,b,n);wn(d,p,n,k);zn(d,k,l);h=+An(d,k,k);a:do if((f|0)>0){c=f+-1|0;g=0;while(1){if(!(+Bn(d,k)>e)){c=0;break a}vn(a,d,l,m);i=+An(d,l,m);if(i==0.0){c=0;break a}i=h/i;yn(d,l,i,o);xn(d,b,o,b);if((g|0)<(c|0)){yn(d,m,i,m);wn(d,k,m,k);i=+An(d,k,k);if(h==0.0)break;yn(d,l,i/h,l);xn(d,k,l,l);h=i}g=g+1|0;if((g|0)>=(f|0)){c=0;break a}}Yr(1,129578,j)|0;c=1}else c=0;while(0);vP(k);vP(l);vP(m);vP(n);vP(o);vP(p);r=q;return c|0}function Fl(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=f|0;var g=0.0,h=0.0,i=0,j=0,k=0,l=0,m=0,n=0,o=0;o=r;r=r+16|0;j=o;n=d<<2;k=By(n)|0;l=By(n)|0;m=By(n)|0;n=By(n)|0;Dn(d,b);Dn(d,c);En(a,d,b,n);Dn(d,n);Fn(d,c,n,k);Jn(d,k,l);g=+Kn(d,k,k);a:do if((f|0)>0){c=f+-1|0;i=0;while(1){if(!(+Nn(d,k)>e)){c=0;break a}Dn(d,l);Dn(d,b);Dn(d,k);En(a,d,l,m);Dn(d,m);h=+Kn(d,l,m);if(h==0.0){c=0;break a}h=g/h;Hn(d,b,h,l);if((i|0)<(c|0)){Hn(d,k,-h,m);h=+Kn(d,k,k);if(g==0.0)break;In(d,l,h/g,l);Gn(d,k,l,l);g=h}i=i+1|0;if((i|0)>=(f|0)){c=0;break a}}Yr(1,129578,j)|0;c=1}else c=0;while(0);vP(k);vP(l);vP(m);vP(n);r=o;return c|0}function Gl(a,b,c,d,e,f,g,h,j,l){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;l=+l;var m=0,n=0,q=0.0,s=0,t=0,u=0,v=0,w=0.0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0.0,G=0.0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0.0;S=r;r=r+48|0;I=S+24|0;E=S+16|0;D=S+8|0;C=S;Q=S+40|0;P=S+36|0;J=S+32|0;v=g&4;k[Q>>2]=0;k[P>>2]=0;a:do if((k[a+16>>2]|0)!=0?(O=(b|0)>0,O):0){m=0;u=0;do{s=k[a+(u*20|0)>>2]|0;if((s|0)>1){t=a+(u*20|0)+16|0;n=1;do{if(!(m<<24>>24))m=+o[(k[t>>2]|0)+(n<<2)>>2]!=0.0;else m=1;m=m&1;n=n+1|0}while((n|0)<(s|0))}u=u+1|0}while((u|0)!=(b|0));if(m<<24>>24){A=(v|0)!=0;if(A){t=d+4|0;if((f|0)>2){m=f+-1|0;if((sj(a,b,c,t,e,m,g,h,15)|0)<0){m=-1;break}if(O){s=k[t>>2]|0;m=k[d+(m<<2)>>2]|0;n=0;do{p[m+(n<<3)>>3]=+p[s+(n<<3)>>3];n=n+1|0}while((n|0)!=(b|0))}}z=k[d>>2]|0;x=k[t>>2]|0;if((Vn(a,b,x,b)|0)==0?(Iq(a,b,.01,.1,x,Q,P,J)|0)==0:0){y=k[J>>2]|0;if((y|0)<1){m=sj(a,b,c,d,e,f,g,h,j)|0;break}if(l>0.0){s=k[P>>2]|0;t=k[Q>>2]|0;u=y+-1|0;w=0.0;c=0;do{m=k[s+(c<<2)>>2]|0;n=k[t+(m<<2)>>2]|0;q=+p[x+(n<<3)>>3];G=l-(w+q-+p[x+(k[t+(m+-1<<2)>>2]<<3)>>3]);w=w+(G<0.0?0.0:G);if((c|0)<(u|0))v=k[s+(c+1<<2)>>2]|0;else v=b;if((m|0)<(v|0)?(p[x+(n<<3)>>3]=w+q,B=m+1|0,(B|0)!=(v|0)):0){m=B;do{N=k[t+(m<<2)>>2]|0;p[x+(N<<3)>>3]=w+ +p[x+(N<<3)>>3];m=m+1|0}while((m|0)!=(v|0))}c=c+1|0}while((c|0)<(y|0))}if((f|0)==2?(ro(a,b,x,z,+p[4240])|0)!=0:0){m=-1;n=0}else R=32}else{m=-1;n=0}}else{nj(a,b,f,d,e)|0;if(!(Iq(a,b,.01,.1,0,Q,P,J)|0))R=32;else{m=-1;n=0}}b:do if((R|0)==32){if((b|0)==1){m=0;break a}N=Cy(k[J>>2]<<2)|0;if(!j){m=0;break a}if(i[137280]|0)cB();switch(h|0){case 2:{if(i[137280]|0)QN(129626,24,1,k[24528]|0)|0;m=rj(a,b)|0;R=45;break}case 1:{m=oj(a,b)|0;if(!m){Yr(0,129651,C)|0;Yr(3,129700,D)|0;R=46}else M=m;break}case 3:{if(i[137280]|0)QN(129753,21,1,k[24528]|0)|0;m=pj(a,b)|0;R=45;break}default:R=46}if((R|0)==45)if(!m)R=46;else M=m;if((R|0)==46){if(i[137280]|0)QN(129775,26,1,k[24528]|0)|0;M=qj(a,b)|0}if(i[137280]|0){L=k[24528]|0;G=+dB();p[E>>3]=G;FN(L,129802,E)|0;QN(129814,25,1,L)|0;cB()}K=b+-1|0;y=(ha(K,b)|0)/2|0;L=y+b|0;c=(L|0)>0;if(!A?(H=(f|0)>0,H):0){s=0;q=1.0;do{if(O){m=k[d+(s<<2)>>2]|0;n=0;do{G=+W(+(+p[m+(n<<3)>>3]));q=G>q?G:q;n=n+1|0}while((n|0)!=(b|0))}s=s+1|0}while((s|0)!=(f|0));if(H){q=10.0/q;n=0;do{if(O){m=k[d+(n<<2)>>2]|0;s=0;do{H=m+(s<<3)|0;p[H>>3]=q*+p[H>>3];s=s+1|0}while((s|0)!=(b|0))}n=n+1|0}while((n|0)!=(f|0))}}if(l>0.0){w=+(y|0);if((b|0)>1){m=0;u=0;v=b;q=0.0;while(1){t=u;u=u+1|0;n=m+1|0;if((u|0)<(b|0)){s=u;while(1){G=+Xm(d,f,t,s);q=q+G/+o[M+(n<<2)>>2];s=s+1|0;if((s|0)==(b|0))break;else n=n+1|0}m=m+v|0}else m=n;if((u|0)==(K|0))break;else v=v+-1|0}}else q=0.0;if(c){q=q/w;m=0;do{H=M+(m<<2)|0;o[H>>2]=q*+o[H>>2];m=m+1|0}while((m|0)!=(L|0))}}E=(f|0)>0;if(E){m=0;do{sn(b,k[d+(m<<2)>>2]|0);m=m+1|0}while((m|0)!=(f|0))}m=k[d+4>>2]|0;q=+p[m>>3];if(O?(p[m>>3]=q-q,(b|0)!=1):0){n=1;do{p[m+(n<<3)>>3]=+p[m+(n<<3)>>3]-q;n=n+1|0}while((n|0)!=(b|0))}v=f<<2;H=Cy(v)|0;x=b<<2;c=ha(x,f)|0;m=Cy(c)|0;if(E){t=0;do{n=ha(t,b)|0;k[H+(t<<2)>>2]=m+(n<<2);if(O){s=k[d+(t<<2)>>2]|0;u=0;do{o[m+(n+u<<2)>>2]=+p[s+(u<<3)>>3];u=u+1|0}while((u|0)!=(b|0))}t=t+1|0}while((t|0)!=(f|0))}w=+(y|0);if(i[137280]|0){a=k[24528]|0;G=+dB();p[I>>3]=G;FN(a,129840,I)|0}On(L,M);Pn(L,M);a=Cy(b<<3)|0;Ln(b,0.0,a);D=(b|0)>1;if(D){s=0;t=0;u=b;while(1){m=s+1|0;if((b-t|0)>1){q=0.0;n=1;while(1){G=+o[M+(m<<2)>>2];q=q+G;I=a+(n+t<<3)|0;p[I>>3]=+p[I>>3]-G;n=n+1|0;if((n|0)==(u|0))break;else m=m+1|0}m=s+u|0}else q=0.0;I=a+(t<<3)|0;p[I>>3]=+p[I>>3]-q;t=t+1|0;if((t|0)==(K|0))break;else{s=m;u=u+-1|0}}}if(O){m=0;n=0;s=b;while(1){o[M+(m<<2)>>2]=+p[a+(n<<3)>>3];n=n+1|0;if((n|0)==(b|0))break;else{m=s+m|0;s=s+-1|0}}}C=Cy(v)|0;m=Cy(c)|0;k[C>>2]=m;do if((f|0)>1){k[C+4>>2]=m+(b<<2);if((f|0)==2)break;else m=2;do{I=(k[C>>2]|0)+((ha(m,b)|0)<<2)|0;k[C+(m<<2)>>2]=I;m=m+1|0}while((m|0)!=(f|0))}while(0);h=Cy(x)|0;A=Cy(x)|0;B=Cy(L<<2)|0;n=ho(M,b)|0;g=ko(M,b,k[Q>>2]|0,k[P>>2]|0,k[J>>2]|0)|0;if((j|0)>0){e=C+4|0;G=w+0.0;m=0;F=1797693134862315708145274.0e284;while(1){Ln(b,0.0,a);Qn(L,M,B);if(D){s=0;y=0;z=K;while(1){x=(z|0)>1?z:1;u=b-y|0;c=u+-1|0;Mn(b,0.0,A);if(E){t=y+1|0;v=0;do{J=H+(v<<2)|0;Mn(c,+o[(k[J>>2]|0)+(y<<2)>>2],h);Hn(c,h,-1.0,(k[J>>2]|0)+(t<<2)|0);On(c,h);Gn(c,h,A,A);v=v+1|0}while((v|0)!=(f|0))}Rn(c,A);v=(u|0)>1;do if(v){u=0;do{t=A+(u<<2)|0;q=+o[t>>2];if(q>=3402823466385288598117041.0e14|q<0.0)o[t>>2]=0.0;u=u+1|0}while((u|0)<(c|0));s=s+1|0;if(!v){R=104;break}t=y+1|0;u=s;q=0.0;v=0;while(1){J=B+(u<<2)|0;T=+o[A+(v<<2)>>2]*+o[J>>2];o[J>>2]=T;q=q+T;J=a+(t+v<<3)|0;p[J>>3]=+p[J>>3]-T;v=v+1|0;if((v|0)>=(c|0))break;else u=u+1|0}s=s+x|0}else{s=s+1|0;R=104}while(0);if((R|0)==104){R=0;t=y+1|0;q=0.0}J=a+(y<<3)|0;p[J>>3]=+p[J>>3]-q;if((t|0)==(K|0))break;else{y=t;z=z+-1|0}}}if(O){s=0;t=0;u=b;while(1){o[B+(s<<2)>>2]=+p[a+(t<<3)>>3];t=t+1|0;if((t|0)==(b|0))break;else{s=u+s|0;u=u+-1|0}}}do if(E){s=0;do{En(B,b,k[H+(s<<2)>>2]|0,k[C+(s<<2)>>2]|0);s=s+1|0}while((s|0)!=(f|0));if(E){s=0;q=0.0}else{q=G;break}do{q=q+ +Kn(b,k[H+(s<<2)>>2]|0,k[C+(s<<2)>>2]|0);s=s+1|0}while((s|0)!=(f|0));q=w+q*2.0;if(E)s=0;else break;do{J=H+(s<<2)|0;En(M,b,k[J>>2]|0,h);q=q-+Kn(b,k[J>>2]|0,h);s=s+1|0}while((s|0)!=(f|0))}else q=G;while(0);T=+W(+(q-F))/+W(+(F+1.0e-10));if(T<+p[4240])t=1;else t=(m|0)>1&q>F;if(E){s=0;do{if((s|0)!=1){if(Fl(M,k[H+(s<<2)>>2]|0,k[C+(s<<2)>>2]|0,b,.001,b)|0){m=-1;break b}}else io(g,k[e>>2]|0,H,f,1,15,N,l)|0;s=s+1|0}while((s|0)<(f|0))}m=m+1|0;if((m|0)<(j|0)&(t^1))F=q;else break}}else m=0;vP(N);jo(g);if(H){if(E){u=0;do{if(O){s=k[H+(u<<2)>>2]|0;t=k[d+(u<<2)>>2]|0;v=0;do{p[t+(v<<3)>>3]=+o[s+(v<<2)>>2];v=v+1|0}while((v|0)!=(b|0))}u=u+1|0}while((u|0)!=(f|0))}vP(k[H>>2]|0);vP(H)}if(C){vP(k[C>>2]|0);vP(C)}vP(h);vP(A);vP(a);vP(M);vP(B)}while(0);vP(k[Q>>2]|0);vP(k[P>>2]|0);if(n){vP(k[n>>2]|0);vP(n)}}else R=10}else R=10;while(0);if((R|0)==10)m=sj(a,b,c,d,e,f,g,h,j)|0;r=S;return m|0}function Hl(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0.0,g=0.0,h=0,j=0,l=0,m=0,n=0,q=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0,y=0,z=0,A=0;A=r;r=r+16|0;c=A;y=Zs(a)|0;z=Cy(y*48|0)|0;ml(c,a);v=+o[c>>2];w=+o[c+4>>2];c=i[c+8>>0]|0;d=Kt(a)|0;if(d){m=c<<24>>24==0;t=v*5.0;u=w*5.0;l=z;while(1){s=k[d+8>>2]|0;j=k[s+132>>2]|0;f=+p[j>>3]*10.0*72.0;h=~~(f+(f>=0.0?.5:-.5));f=+p[j+8>>3]*10.0*72.0;j=~~(f+(f>=0.0?.5:-.5));f=+p[s+32>>3];g=+p[s+40>>3];if(m){f=t*f*72.0;g=u*g*72.0;c=~~(g+(g>=0.0?.5:-.5));e=~~(f+(f>=0.0?.5:-.5))}else{f=f*.5*72.0;g=g*.5*72.0;c=~~((w+ +(~~(g+(g>=0.0?.5:-.5))|0))*10.0);e=~~((v+ +(~~(f+(f>=0.0?.5:-.5))|0))*10.0)}k[l+12>>2]=h;k[l+16>>2]=j;k[l+20>>2]=d;k[l+32>>2]=h-e;k[l+36>>2]=j-c;k[l+40>>2]=e+h;k[l+44>>2]=c+j;d=Lt(a,d)|0;if(!d)break;else l=l+48|0}}h=y+-1|0;a:do if((y|0)>1){q=0;s=z;b:while(1){c=s;s=s+48|0;q=q+1|0;if((q|0)<(y|0)){j=k[c+32>>2]|0;l=c+40|0;m=c+36|0;n=c+44|0;d=q;e=s;while(1){if((((j|0)<=(k[c+88>>2]|0)?(k[c+80>>2]|0)<=(k[l>>2]|0):0)?(k[m>>2]|0)<=(k[c+92>>2]|0):0)?(k[c+84>>2]|0)<=(k[n>>2]|0):0)break b;d=d+1|0;if((d|0)>=(y|0))break;else{c=e;e=e+48|0}}}if((q|0)>=(h|0)){c=0;break a}}switch(b|0){case 9:{Kl(a,z,y,71,1);Ml(a,z,y,72,1);break}case 10:{Ml(a,z,y,72,1);Kl(a,z,y,71,1);break}case 7:{Kl(a,z,y,73,1);Ml(a,z,y,72,1);x=20;break}case 8:{x=20;break}case 13:{x=21;break}case 14:{Ml(a,z,y,72,0);Kl(a,z,y,71,0);break}case 12:{Ml(a,z,y,74,0);Kl(a,z,y,71,0);break}default:{Kl(a,z,y,73,0);Ml(a,z,y,72,0)}}if((x|0)==20){Ml(a,z,y,74,1);Kl(a,z,y,71,1);x=21}if((x|0)==21){Kl(a,z,y,71,0);Ml(a,z,y,72,0)}if((y|0)>0){c=0;d=z;while(1){b=k[d+16>>2]|0;x=k[(k[(k[d+20>>2]|0)+8>>2]|0)+132>>2]|0;p[x>>3]=+(k[d+12>>2]|0)/72.0/10.0;p[x+8>>3]=+(b|0)/72.0/10.0;c=c+1|0;if((c|0)==(y|0)){c=1;break}else d=d+48|0}}else c=1}else c=0;while(0);vP(z);r=A;return c|0}function Il(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,f=0.0,g=0.0,h=0,j=0,l=0.0,m=0.0,n=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,C=0.0,D=0,E=0,F=0,G=0,H=0,I=0.0,J=0.0;H=r;r=r+48|0;D=H+8|0;x=H;j=H+24|0;F=Zs(a)|0;G=Cy(F*72|0)|0;ml(j,a);f=+o[j>>2];g=+o[j+4>>2];j=(i[j+8>>0]|0)!=0;c=Kt(a)|0;if(c){m=j?f/72.0:f;l=j?g/72.0:g;h=G;while(1){d=k[c+8>>2]|0;f=+p[d+32>>3];if(j){g=l+ +p[d+40>>3]*.5;f=m+f*.5}else{g=l*+p[d+40>>3]*.5;f=m*f*.5}A=k[d+132>>2]|0;J=+p[A>>3];p[h>>3]=J;I=+p[A+8>>3];p[h+8>>3]=I;p[h+16>>3]=J-f;p[h+24>>3]=I-g;p[h+32>>3]=f+J;p[h+40>>3]=g+I;p[h+48>>3]=f;p[h+56>>3]=g;k[h+64>>2]=c;c=Lt(a,c)|0;if(!c)break;else h=h+72|0}}a:do if((b|0)>=0){c=Cy((F<<4)+16|0)|0;if((F|0)>0){h=0;z=0;A=G;d=F;do{y=A;A=A+72|0;z=z+1|0;if((z|0)<(F|0)){q=y+16|0;s=y+32|0;t=y+24|0;u=y+40|0;v=y+8|0;w=y+56|0;x=y+48|0;j=y;a=z;n=A;while(1){if(((+p[q>>3]<=+p[j+104>>3]?+p[j+88>>3]<=+p[s>>3]:0)?+p[t>>3]<=+p[j+112>>3]:0)?+p[j+96>>3]<=+p[u>>3]:0){if((h|0)==(d|0)){d=h+F|0;c=Ey(c,(d<<4)+16|0)|0}f=+p[y>>3];g=+p[j+72>>3];if(!(f==g)){f=(+p[x>>3]+ +p[j+120>>3])/+W(+(f-g));if(f<1.0)f=1.0}else f=B;g=+p[v>>3];l=+p[j+80>>3];if(!(g==l)){g=(+p[w>>3]+ +p[j+128>>3])/+W(+(g-l));if(g<1.0)g=1.0}else g=B;h=h+1|0;p[c+(h<<4)>>3]=f;p[c+(h<<4)+8>>3]=g}a=a+1|0;if((a|0)==(F|0))break;else{j=n;n=n+72|0}}}}while((z|0)!=(F|0))}else h=0;d=(h<<4)+16|0;a=Ey(c,d)|0;if(!h){vP(a);vP(G);c=0;break}do if(b)if((h|0)<1){C=0.0;e=0.0}else{c=a;d=1;e=0.0;while(1){E=c;c=c+16|0;I=+p[c>>3];J=+p[E+24>>3];J=I<J?I:J;e=J>e?J:e;if((d|0)==(h|0)){C=e;break}else d=d+1|0}}else{p[a>>3]=1.0;p[a+8>>3]=B;dO(a+16|0,h,16,75);j=Cy(d)|0;p[j+(h<<4)>>3]=+p[a+(h<<4)>>3];p[j+(h<<4)+8>>3]=1.0;if((h|0)>0){f=1.0;c=h;do{E=c;c=c+-1|0;p[j+(c<<4)>>3]=+p[a+(c<<4)>>3];J=+p[a+(E<<4)+8>>3];f=J>f?J:f;p[j+(c<<4)+8>>3]=f}while((E|0)>1);if((h|0)>=0){c=0;f=B;d=0;while(1){J=+p[j+(d<<4)>>3]*+p[j+(d<<4)+8>>3];E=J<f;c=E?d:c;f=E?J:f;if((d|0)==(h|0))break;else d=d+1|0}if(f<B){C=+p[j+(c<<4)>>3];e=+p[j+(c<<4)+8>>3];break}}}Wa(129865,129885,834,129898)}while(0);vP(a);if(!(i[137280]|0)){f=C;E=58}else{E=k[24528]|0;p[D>>3]=C;p[D+8>>3]=e;FN(E,129913,D)|0;f=C;E=58}}else{b:do if((F|0)>0){if((F|0)>1){v=G+72|0;w=1;t=G;e=0.0;while(1){m=+p[t+16>>3];d=t+8|0;h=t+56|0;j=t+48|0;a=t+32|0;n=t+24|0;q=t+40|0;c=t;s=w;u=v;while(1){if(((m<=+p[c+104>>3]?+p[c+88>>3]<=+p[a>>3]:0)?+p[n>>3]<=+p[c+112>>3]:0)?+p[c+96>>3]<=+p[q>>3]:0)break b;f=+p[t>>3];g=+p[c+72>>3];if(f==g)l=B;else l=(+p[j>>3]+ +p[c+120>>3])/+W(+(f-g));f=+p[d>>3];g=+p[c+80>>3];if(f==g)f=B;else f=(+p[h>>3]+ +p[c+128>>3])/+W(+(f-g));J=f<l?f:l;e=J>e?J:e;s=s+1|0;if((s|0)>=(F|0))break;else{c=u;u=u+72|0}}w=w+1|0;if((w|0)>=(F|0))break;else{t=v;v=v+72|0}}}else e=0.0;if(!(e==0.0)){if(!(i[137280]|0)){f=e;E=58;break a}E=k[24528]|0;p[x>>3]=e;FN(E,129851,x)|0;f=e;E=58;break a}}while(0);vP(G);c=0}while(0);if((E|0)==58){if((F|0)>0){c=0;d=G;while(1){E=k[(k[(k[d+64>>2]|0)+8>>2]|0)+132>>2]|0;p[E>>3]=f*+p[d>>3];p[E+8>>3]=e*+p[d+8>>3];c=c+1|0;if((c|0)==(F|0))break;else d=d+72|0}}vP(G);c=1}r=H;return c|0}function Jl(a,b){a=a|0;b=b|0;if((k[a+36>>2]|0)>(k[b+44>>2]|0))a=0;else a=(k[b+36>>2]|0)<=(k[a+44>>2]|0);return a&1|0}function Kl(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;i=Lr(50760,k[12816]|0)|0;h=(c|0)>0;if(h){f=0;g=b;while(1){k[g+8>>2]=k[g+12>>2];Tb[k[i>>2]&63](i,g,1)|0;f=f+1|0;if((f|0)==(c|0))break;else g=g+48|0}}if(!e)f=Sl(a,i,d,76)|0;else f=Rl(i,d,76)|0;Gy(f,2,2147483647)|0;if(h){a=0;while(1){h=b+12|0;e=k[(k[(k[b+24>>2]|0)+8>>2]|0)+232>>2]|0;g=e-(k[h>>2]|0)|0;k[h>>2]=e;h=b+32|0;k[h>>2]=(k[h>>2]|0)+g;h=b+40|0;k[h>>2]=(k[h>>2]|0)+g;a=a+1|0;if((a|0)==(c|0))break;else b=b+48|0}}Tl(f);Hr(i)|0;return}function Ll(a,b){a=a|0;b=b|0;if((k[a+32>>2]|0)>(k[b+40>>2]|0))a=0;else a=(k[b+32>>2]|0)<=(k[a+40>>2]|0);return a&1|0}function Ml(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;i=Lr(50760,k[12816]|0)|0;h=(c|0)>0;if(h){f=0;g=b;while(1){k[g+8>>2]=k[g+16>>2];Tb[k[i>>2]&63](i,g,1)|0;f=f+1|0;if((f|0)==(c|0))break;else g=g+48|0}}if(!e)f=Sl(a,i,d,77)|0;else f=Rl(i,d,77)|0;Gy(f,2,2147483647)|0;if(h){a=0;while(1){h=b+16|0;e=k[(k[(k[b+24>>2]|0)+8>>2]|0)+232>>2]|0;g=e-(k[h>>2]|0)|0;k[h>>2]=e;h=b+36|0;k[h>>2]=(k[h>>2]|0)+g;h=b+44|0;k[h>>2]=(k[h>>2]|0)+g;a=a+1|0;if((a|0)==(c|0))break;else b=b+48|0}}Tl(f);Hr(i)|0;return}function Nl(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;c=k[a+36>>2]|0;f=k[b+44>>2]|0;if((c|0)<=(f|0)?(g=k[b+36>>2]|0,h=k[a+44>>2]|0,(g|0)<=(h|0)):0){d=k[a+40>>2]|0;e=k[b+32>>2]|0;if((d|0)<(e|0))c=1;else{i=k[b+16>>2]|0;j=k[a+16>>2]|0;c=(((d-e-(k[a+32>>2]|0)+(k[b+40>>2]|0)|0)/2|0)-(k[b+12>>2]|0)+(k[a+12>>2]|0)|0)<=(((h-c+f-g|0)/2|0)+((i|0)<(j|0)?i-j|0:j-i|0)|0)&1}}else c=0;return c|0}function Ol(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;c=k[a+32>>2]|0;f=k[b+40>>2]|0;if((c|0)<=(f|0)?(g=k[b+32>>2]|0,h=k[a+40>>2]|0,(g|0)<=(h|0)):0){d=k[a+44>>2]|0;e=k[b+36>>2]|0;if((d|0)<(e|0))c=1;else{i=k[b+12>>2]|0;j=k[a+12>>2]|0;c=(((d-(k[a+36>>2]|0)+(k[b+44>>2]|0)-e|0)/2|0)-(k[b+16>>2]|0)+(k[a+16>>2]|0)|0)<=(((h-(g+c)+f|0)/2|0)+((i|0)<(j|0)?i-j|0:j-i|0)|0)&1}}else c=0;return c|0}function Pl(a,b){a=a|0;b=b|0;var c=0.0,d=0.0;c=+p[a>>3];d=+p[b>>3];if(!(c<d))if(!(c>d)){d=+p[a+8>>3];c=+p[b+8>>3];if(d<c)a=-1;else a=d>c&1}else a=1;else a=-1;return a|0}function Ql(a,b){a=a|0;b=b|0;return ((k[a+12>>2]|0)-(k[a+4>>2]|0)+(k[b+12>>2]|0)-(k[b+4>>2]|0)|0)/2|0|0}function Rl(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;y=r;r=r+16|0;v=y;k[v>>2]=k[12890];x=Vs(129930,v,0)|0;qu(x,173447,280,1)|0;d=Jr(a)|0;if(!d)e=0;else{e=0;f=-2147483647;do{u=f;f=k[d+8>>2]|0;e=((u|0)!=(f|0)&1)+e|0;d=k[d>>2]|0}while((d|0)!=0)}d=Jr(a)|0;if(!d)d=0;else{t=x+8|0;u=(e<<3)+-4|0;l=0;o=0;g=0;h=-2147483647;s=d;d=0;m=0;while(1){q=k[s+8>>2]|0;if((h|0)!=(q|0)){p=Qt(x,ht(k[s+20>>2]|0)|0,1)|0;qu(p,173424,304,1)|0;n=p+8|0;f=k[n>>2]|0;k[f+112>>2]=s;if(!m){k[(k[t>>2]|0)+192>>2]=p;m=p}else k[(k[l+8>>2]|0)+164>>2]=p;k[f+176>>2]=0;i=o+1|0;l=By(i<<2)|0;k[(k[n>>2]|0)+172>>2]=l;if(!d){l=p;g=p;h=q;d=p;f=m}else{g=d+8|0;k[(k[g>>2]|0)+184>>2]=0;if((d|0)==(m|0)){o=By(u)|0;k[(k[g>>2]|0)+180>>2]=o}else{o=By(e-o<<2)|0;k[(k[g>>2]|0)+180>>2]=o}h=Ls(x,d,p,0,1)|0;qu(h,173717,176,1)|0;f=k[h+8>>2]|0;j[f+170>>1]=10;k[f+156>>2]=1;f=k[g>>2]|0;d=k[f+180>>2]|0;f=k[f+184>>2]|0;if(!d)d=Cy((f<<2)+8|0)|0;else d=Ey(d,(f<<2)+8|0)|0;o=k[g>>2]|0;k[o+180>>2]=d;o=o+184|0;f=k[o>>2]|0;k[o>>2]=f+1;k[d+(f<<2)>>2]=h;f=k[g>>2]|0;k[(k[f+180>>2]|0)+(k[f+184>>2]<<2)>>2]=0;f=k[n>>2]|0;d=k[f+172>>2]|0;f=k[f+176>>2]|0;if(!d)d=Cy((f<<2)+8|0)|0;else d=Ey(d,(f<<2)+8|0)|0;g=k[n>>2]|0;k[g+172>>2]=d;g=g+176|0;l=k[g>>2]|0;k[g>>2]=l+1;k[d+(l<<2)>>2]=h;l=k[n>>2]|0;k[(k[l+172>>2]|0)+(k[l+176>>2]<<2)>>2]=0;l=p;g=p;h=q;d=p;f=m}}else{i=o;f=m}k[s+24>>2]=g;s=k[s>>2]|0;if(!s)break;else{o=i;m=f}}}q=d+8|0;k[(k[q>>2]|0)+184>>2]=0;d=By(4)|0;k[(k[q>>2]|0)+180>>2]=d;k[v>>2]=k[12890];q=Vs(129964,v,0)|0;d=Jr(a)|0;if(d)do{v=Qt(q,ht(k[d+20>>2]|0)|0,1)|0;qu(v,173424,304,1)|0;k[d+28>>2]=v;k[(k[v+8>>2]|0)+112>>2]=d;d=k[d>>2]|0}while((d|0)!=0);e=Jr(a)|0;a:do if(e){d=0;f=-2147483647;do{g=k[e+8>>2]|0;b:do if((f|0)==(g|0))if(!d)d=0;else w=29;else{d=k[e>>2]|0;if(!d)break a;while(1){if((k[d+8>>2]|0)!=(g|0)){f=g;w=29;break b}d=k[d>>2]|0;if(!d)break a}}while(0);if((w|0)==29){w=0;g=e+28|0;h=d;do{if(_b[b&127](e,h)|0)Ls(q,k[g>>2]|0,k[h+28>>2]|0,0,1)|0;h=k[h>>2]|0}while((h|0)!=0)}e=k[e>>2]|0}while((e|0)!=0)}while(0);d=Kt(q)|0;if(d)do{e=k[(k[d+8>>2]|0)+112>>2]|0;p=k[e+24>>2]|0;f=Es(q,d)|0;if(f){n=e+32|0;o=p+8|0;do{h=k[(k[(k[((k[f>>2]&3|0)==2?f:f+-32|0)+28>>2]|0)+8>>2]|0)+112>>2]|0;m=_b[c&127](n,h+32|0)|0;h=k[h+24>>2]|0;i=Ls(x,p,h,0,1)|0;qu(i,173717,176,1)|0;l=i+8|0;e=k[l>>2]|0;k[e+156>>2]=1;g=j[e+170>>1]|0;if((g&65535|0)<(m|0)){if(!(g<<16>>16)){g=k[o>>2]|0;e=k[g+180>>2]|0;g=k[g+184>>2]|0;if(!e)e=Cy((g<<2)+8|0)|0;else e=Ey(e,(g<<2)+8|0)|0;b=k[o>>2]|0;k[b+180>>2]=e;b=b+184|0;g=k[b>>2]|0;k[b>>2]=g+1;k[e+(g<<2)>>2]=i;g=k[o>>2]|0;k[(k[g+180>>2]|0)+(k[g+184>>2]<<2)>>2]=0;h=h+8|0;g=k[h>>2]|0;e=k[g+172>>2]|0;g=k[g+176>>2]|0;if(!e)e=Cy((g<<2)+8|0)|0;else e=Ey(e,(g<<2)+8|0)|0;w=k[h>>2]|0;k[w+172>>2]=e;w=w+176|0;b=k[w>>2]|0;k[w>>2]=b+1;k[e+(b<<2)>>2]=i;e=k[h>>2]|0;k[(k[e+172>>2]|0)+(k[e+176>>2]<<2)>>2]=0;e=k[l>>2]|0}j[e+170>>1]=m}f=Gs(q,f)|0}while((f|0)!=0)}d=Lt(q,d)|0}while((d|0)!=0);Ys(q)|0;r=y;return x|0}function Sl(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,l=0,m=0,n=0,o=0,p=0,q=0;p=r;r=r+16|0;o=p;k[o>>2]=k[12890];o=Vs(129930,o,0)|0;qu(o,173447,280,1)|0;e=Jr(b)|0;if(e){g=o+8|0;h=0;do{f=h;h=Qt(o,ht(k[e+20>>2]|0)|0,1)|0;qu(h,173424,304,1)|0;n=h+8|0;l=k[n>>2]|0;k[l+112>>2]=e;k[e+24>>2]=h;k[l+176>>2]=0;l=By(4)|0;m=k[n>>2]|0;k[m+172>>2]=l;k[m+184>>2]=0;m=By(4)|0;k[(k[n>>2]|0)+180>>2]=m;if(!f)k[(k[g>>2]|0)+192>>2]=h;else k[(k[f+8>>2]|0)+164>>2]=h;e=k[e>>2]|0}while((e|0)!=0)}e=Jr(b)|0;a:do if(e){b:while(1){f=k[e>>2]|0;if(!f)e=f;else{l=e+32|0;m=e+24|0;n=e+20|0;do{if(_b[c&127](e,f)|0){g=_b[d&127](l,f+32|0)|0;h=Ls(o,k[m>>2]|0,k[f+24>>2]|0,0,1)|0;qu(h,173717,176,1)|0;if((g|0)>=65536)break b;i=h+8|0;q=k[i>>2]|0;j[q+170>>1]=g;k[q+156>>2]=1;if((h|0)!=0?(Ls(a,k[n>>2]|0,k[f+20>>2]|0,0,0)|0)!=0:0)k[(k[i>>2]|0)+156>>2]=100}f=k[f>>2]|0}while((f|0)!=0);e=k[e>>2]|0}if(!e)break a}Wa(129933,129885,256,129949)}while(0);e=Jr(b)|0;if(e)do{f=k[e+24>>2]|0;g=Es(o,f)|0;if(g){l=f+8|0;do{h=k[l>>2]|0;f=k[h+180>>2]|0;h=k[h+184>>2]|0;if(!f)f=Cy((h<<2)+8|0)|0;else f=Ey(f,(h<<2)+8|0)|0;h=k[l>>2]|0;k[h+180>>2]=f;h=h+184|0;i=k[h>>2]|0;k[h>>2]=i+1;k[f+(i<<2)>>2]=g;i=k[l>>2]|0;k[(k[i+180>>2]|0)+(k[i+184>>2]<<2)>>2]=0;i=g+-32|0;h=k[(k[((k[g>>2]&3|0)==2?g:i)+28>>2]|0)+8>>2]|0;f=k[h+172>>2]|0;h=k[h+176>>2]|0;if(!f)f=Cy((h<<2)+8|0)|0;else f=Ey(f,(h<<2)+8|0)|0;k[(k[(k[((k[g>>2]&3|0)==2?g:i)+28>>2]|0)+8>>2]|0)+172>>2]=f;b=(k[(k[((k[g>>2]&3|0)==2?g:i)+28>>2]|0)+8>>2]|0)+176|0;q=k[b>>2]|0;k[b>>2]=q+1;k[(k[(k[(k[((k[g>>2]&3|0)==2?g:i)+28>>2]|0)+8>>2]|0)+172>>2]|0)+(q<<2)>>2]=g;q=k[(k[((k[g>>2]&3|0)==2?g:i)+28>>2]|0)+8>>2]|0;k[(k[q+172>>2]|0)+(k[q+176>>2]<<2)>>2]=0;g=Gs(o,g)|0}while((g|0)!=0)}e=k[e>>2]|0}while((e|0)!=0);r=p;return o|0}function Tl(a){a=a|0;var b=0,c=0,d=0,e=0;b=Kt(a)|0;if(b)do{d=b+8|0;c=k[d>>2]|0;e=k[c+172>>2]|0;if(e){vP(e);c=k[d>>2]|0}c=k[c+180>>2]|0;if(c)vP(c);b=Lt(a,b)|0}while((b|0)!=0);Ys(a)|0;return}function Ul(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return (k[b>>2]|0)-(k[c>>2]|0)|0}function Vl(a,b){a=a|0;b=b|0;return ((k[a+8>>2]|0)-(k[a>>2]|0)+(k[b+8>>2]|0)-(k[b>>2]|0)|0)/2|0|0}function Wl(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;b=r;r=r+16|0;a=b;k[a>>2]=129967;Yr(1,130045,a)|0;r=b;return 0}function Xl(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;b=r;r=r+16|0;a=b;a:do switch(c|0){case 2:{d=Cy(16)|0;e=Cy(24)|0;k[e+8>>2]=0;k[e+4>>2]=d;k[e>>2]=2;k[d>>2]=0;k[d+4>>2]=1;c=d+8|0;k[e+16>>2]=c;k[e+20>>2]=0;k[e+12>>2]=2;k[c>>2]=1;k[d+12>>2]=0;break}case 1:{d=Cy(4)|0;e=Cy(12)|0;k[e+8>>2]=0;k[e+4>>2]=d;k[e>>2]=1;k[d>>2]=0;break}default:{k[a>>2]=129967;Yr(1,130017,a)|0;a=(c|0)>0;if(!d){if(!a){e=0;break a}Gb()}else{if(!a){e=0;break a}Gb()}}}while(0);r=b;return e|0}function Yl(a){a=a|0;var b=0;if(a){b=k[a+4>>2]|0;if(b)vP(b);b=k[a+8>>2]|0;if(b)vP(b);vP(a)}return}function Zl(a){a=a|0;var b=0;if(a){b=k[a+4>>2]|0;if(b)vP(b);b=k[a+8>>2]|0;if(b)vP(b);b=k[a+16>>2]|0;if(b)vP(b);vP(a)}return}function _l(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0;n=r;r=r+16|0;m=n+8|0;j=n;i=xP(k[12699]|0,c<<2)|0;k[12699]=i;l=(c|0)>0;if(l){e=0;do{k[d+(e<<2)>>2]=2147483647;e=e+1|0}while((e|0)!=(c|0))}k[d+(a<<2)>>2]=0;g=b+(a*20|0)|0;if((k[g>>2]|0)>1){e=k[b+(a*20|0)+8>>2]|0;f=k[b+(a*20|0)+4>>2]|0;h=1;do{k[d+(k[f+(h<<2)>>2]<<2)>>2]=~~+o[e+(h<<2)>>2];h=h+1|0}while((h|0)<(k[g>>2]|0))}am(m,a,i,d,c);a:do if(!((bm(m,j,k[12699]|0,d)|0)<<24>>24))g=-2147483639;else{e=-2147483639;while(1){f=k[j>>2]|0;i=k[d+(f<<2)>>2]|0;if((i|0)==2147483647){g=e;break a}g=b+(f*20|0)|0;if((k[g>>2]|0)>1){h=b+(f*20|0)+4|0;e=b+(f*20|0)+8|0;f=1;do{cm(m,k[(k[h>>2]|0)+(f<<2)>>2]|0,~~+o[(k[e>>2]|0)+(f<<2)>>2]+i|0,k[12699]|0,d);f=f+1|0}while((f|0)<(k[g>>2]|0))}e=i+10|0;if(!((bm(m,j,k[12699]|0,d)|0)<<24>>24)){g=e;break}}}while(0);if(l){f=0;do{e=d+(f<<2)|0;if((k[e>>2]|0)==2147483647)k[e>>2]=g;f=f+1|0}while((f|0)!=(c|0))}e=k[m>>2]|0;if(e)vP(e);r=n;return}function $l(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0.0,l=0,m=0.0,n=0,p=0,q=0,s=0,t=0,u=0;u=r;r=r+16|0;t=u;s=Cy(c<<2)|0;i=(c|0)>0;if(i){e=0;do{o[d+(e<<2)>>2]=3402823466385288598117041.0e14;e=e+1|0}while((e|0)!=(c|0))}o[d+(a<<2)>>2]=0.0;g=k[b+(a*20|0)>>2]|0;if((g|0)>1){e=k[b+(a*20|0)+8>>2]|0;f=k[b+(a*20|0)+4>>2]|0;h=1;do{k[d+(k[f+(h<<2)>>2]<<2)>>2]=k[e+(h<<2)>>2];h=h+1|0}while((h|0)<(g|0))}e=c+-1|0;p=Cy(e<<2)|0;k[t>>2]=p;q=t+4|0;k[q>>2]=e;if(i){f=0;g=0;do{if((g|0)!=(a|0)){k[p+(f<<2)>>2]=g;k[s+(g<<2)>>2]=f;f=f+1|0}g=g+1|0}while((g|0)!=(c|0))}if((e|0)>-2){f=(e|0)/2|0;while(1){dm(t,f,s,d);if((f|0)>0)f=f+-1|0;else break}if(!e)f=25;else f=16}else f=16;a:do if((f|0)==16)while(1){f=k[p>>2]|0;e=k[p+(e+-1<<2)>>2]|0;k[p>>2]=e;k[s+(e<<2)>>2]=0;e=(k[q>>2]|0)+-1|0;k[q>>2]=e;dm(t,0,s,d);m=+o[d+(f<<2)>>2];if(m==3402823466385288598117041.0e14){f=26;break a}n=b+(f*20|0)|0;g=k[n>>2]|0;if((g|0)>1){l=k[b+(f*20|0)+4>>2]|0;a=k[b+(f*20|0)+8>>2]|0;e=g;c=1;do{i=k[l+(c<<2)>>2]|0;j=m+ +o[a+(c<<2)>>2];f=d+(i<<2)|0;if(!(+o[f>>2]<=j)){h=s+(i<<2)|0;e=k[h>>2]|0;o[f>>2]=j;b:do if((e|0)>0)while(1){f=(e|0)/2|0;g=k[p+(f<<2)>>2]|0;if(!(+o[d+(g<<2)>>2]>j))break b;k[p+(e<<2)>>2]=g;k[s+(g<<2)>>2]=e;if((e|0)>1)e=f;else{e=f;break}}while(0);k[p+(e<<2)>>2]=i;k[h>>2]=e;e=k[n>>2]|0}c=c+1|0}while((c|0)<(e|0));e=k[q>>2]|0}if(!e){f=25;break}else f=16}while(0);if((f|0)==25?(p|0)!=0:0)f=26;if((f|0)==26)vP(p);vP(s);r=u;return}function am(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;if((e|0)!=1){g=Cy((e<<2)+-4|0)|0;k[a>>2]=g;f=e+-1|0;k[a+4>>2]=f;if((e|0)>0)h=4}else{k[a>>2]=0;k[a+4>>2]=e+-1;g=0;f=0;h=4}if((h|0)==4){h=0;i=0;do{if((i|0)!=(b|0)){k[g+(h<<2)>>2]=i;k[c+(i<<2)>>2]=h;h=h+1|0}i=i+1|0}while((i|0)!=(e|0))}if((f|0)>-2){f=(f|0)/2|0;while(1){em(a,f,c,d);if((f|0)>0)f=f+-1|0;else break}}return}function bm(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a+4|0;if(!(k[e>>2]|0))e=0;else{f=k[a>>2]|0;k[b>>2]=k[f>>2];b=k[f+((k[e>>2]|0)+-1<<2)>>2]|0;k[f>>2]=b;k[c+(b<<2)>>2]=0;k[e>>2]=(k[e>>2]|0)+-1;em(a,0,c,d);e=1}return e|0}function cm(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;g=e+(b<<2)|0;if((k[g>>2]|0)>(c|0)){i=d+(b<<2)|0;f=k[i>>2]|0;k[g>>2]=c;h=k[a>>2]|0;a:do if((f|0)>0)while(1){g=(f|0)/2|0;a=k[h+(g<<2)>>2]|0;if((k[e+(a<<2)>>2]|0)<=(c|0))break a;k[h+(f<<2)>>2]=a;k[d+(a<<2)>>2]=f;if((f|0)>1)f=g;else{f=g;break}}while(0);k[h+(f<<2)>>2]=b;k[i>>2]=f}return}function dm(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;h=a+4|0;while(1){f=b<<1;e=f|1;g=k[h>>2]|0;if(!((f|0)<(g|0)?(i=k[a>>2]|0,+o[d+(k[i+(f<<2)>>2]<<2)>>2]<+o[d+(k[i+(b<<2)>>2]<<2)>>2]):0))f=b;if(!((e|0)<(g|0)?(i=k[a>>2]|0,+o[d+(k[i+(e<<2)>>2]<<2)>>2]<+o[d+(k[i+(f<<2)>>2]<<2)>>2]):0))e=f;if((e|0)==(b|0))break;i=k[a>>2]|0;g=i+(e<<2)|0;f=k[g>>2]|0;i=i+(b<<2)|0;k[g>>2]=k[i>>2];k[i>>2]=f;k[c+(k[g>>2]<<2)>>2]=e;k[c+(k[i>>2]<<2)>>2]=b;b=e}return}function em(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;h=a+4|0;while(1){e=b<<1;f=e|1;g=k[h>>2]|0;if(!((e|0)<(g|0)?(i=k[a>>2]|0,(k[d+(k[i+(e<<2)>>2]<<2)>>2]|0)<(k[d+(k[i+(b<<2)>>2]<<2)>>2]|0)):0))e=b;if((f|0)<(g|0)){i=k[a>>2]|0;e=(k[d+(k[i+(f<<2)>>2]<<2)>>2]|0)<(k[d+(k[i+(e<<2)>>2]<<2)>>2]|0)?f:e}if((e|0)==(b|0))break;i=k[a>>2]|0;g=i+(e<<2)|0;f=k[g>>2]|0;i=i+(b<<2)|0;k[g>>2]=k[i>>2];k[i>>2]=f;k[c+(k[g>>2]<<2)>>2]=e;k[c+(k[i>>2]<<2)>>2]=b;b=e}return}function fm(){Sn(50800,48);k[12703]=0;return}function gm(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0,g=0.0;f=Tn(50800)|0;k[f+32>>2]=a;k[f+36>>2]=b;qo(a);qo(b);k[f+24>>2]=0;k[f+28>>2]=0;g=+p[a>>3];e=+p[b>>3]-g;d=+p[a+8>>3];c=+p[b+8>>3]-d;d=g*e+d*c+(e*e+c*c)*.5;a=f+16|0;p[a>>3]=d;if((e>0.0?e:-e)>(c>0.0?c:-c)){p[f>>3]=1.0;p[f+8>>3]=c/e;c=e}else{p[f+8>>3]=1.0;p[f>>3]=e/c}p[a>>3]=d/c;k[f+40>>2]=k[12703];k[12703]=(k[12703]|0)+1;return f|0}function hm(a){a=a|0;var b=0,c=0,d=0.0,e=0.0,f=0.0,g=0.0,h=0.0,i=0.0,j=0.0,l=0.0,m=0;l=+p[a>>3];a:do if(l==1.0){if(!(+p[a+8>>3]>=0.0)){c=k[a+28>>2]|0;b=k[a+24>>2]|0;if(!b)m=9;else m=5}else{c=k[a+24>>2]|0;b=k[a+28>>2]|0;if(!b)m=9;else m=5}do if((m|0)==5){d=+p[b+8>>3];if(d>+p[4193])break a;e=+p[4194];if(!(d>=e)){f=e;i=+p[a+16>>3]-e*+p[a+8>>3];g=e;break}else{f=e;i=+p[b>>3];g=d;break}}else if((m|0)==9){g=+p[4194];f=g;i=+p[a+16>>3]-g*+p[a+8>>3]}while(0);do if(c){d=+p[c+8>>3];if(d<f)break a;e=+p[4193];if(!(d<=e)){f=+p[a+16>>3]-e*+p[a+8>>3];d=e;break}else{f=+p[c>>3];break}}else{d=+p[4193];f=+p[a+16>>3]-d*+p[a+8>>3]}while(0);h=+p[4195];b=i>h;c=f>h;j=+p[4196];if(!(b&c|i<j&f<j)){if(b){e=h;g=(+p[a+16>>3]-h)/+p[a+8>>3]}else e=i;if(e<j){e=j;g=(+p[a+16>>3]-j)/+p[a+8>>3]}if(c){f=h;d=(+p[a+16>>3]-h)/+p[a+8>>3]}if(f<j){f=j;d=(+p[a+16>>3]-j)/+p[a+8>>3];m=46}else m=46}}else{c=k[a+28>>2]|0;b=k[a+24>>2]|0;do if(b){d=+p[b>>3];if(d>+p[4195])break a;e=+p[4196];if(!(d>=e)){f=e;j=e;g=+p[a+16>>3]-l*e;break}else{f=e;j=d;g=+p[b+8>>3];break}}else{g=+p[4196];f=g;j=g;g=+p[a+16>>3]-l*g}while(0);do if(c){d=+p[c>>3];if(d<f)break a;e=+p[4195];if(!(d<=e)){f=e;i=+p[a+16>>3]-e*l;break}else{f=d;i=+p[c+8>>3];break}}else{i=+p[4195];f=i;i=+p[a+16>>3]-i*l}while(0);h=+p[4193];b=g>h;c=i>h;d=+p[4194];if(!(b&c|g<d&i<d)){if(b){e=(+p[a+16>>3]-h)/l;g=h}else e=j;if(g<d){e=(+p[a+16>>3]-d)/l;g=d}if(c)f=(+p[a+16>>3]-h)/l;else h=i;if(h<d){f=(+p[a+16>>3]-d)/l;m=46}else{d=h;m=46}}}while(0);if((m|0)==46){m=a+32|0;Om(k[m>>2]|0,e,g);Om(k[m>>2]|0,f,d);a=a+36|0;Om(k[a>>2]|0,e,g);Om(k[a>>2]|0,f,d)}return}function im(a,b,c){a=a|0;b=b|0;c=c|0;k[a+24+(b<<2)>>2]=c;qo(c);if(k[a+24+(1-b<<2)>>2]|0){hm(a);po(k[a+32>>2]|0);po(k[a+36>>2]|0);Un(a,50800)}return}function jm(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0;s=r;r=r+16|0;q=s;o=b<<2;g=Cy(ha(o,c)|0)|0;f=k[d>>2]|0;o=Cy(o)|0;p=k[a+8>>2]|0;if(f){vP(k[f>>2]|0);vP(f)}n=Cy(c<<2)|0;k[d>>2]=n;if((c|0)>0){f=0;do{m=g+((ha(f,b)|0)<<2)|0;k[n+(f<<2)>>2]=m;f=f+1|0}while((f|0)!=(c|0))}m=(e|0)!=0;if(m)Vm(a,b);d=(aN()|0)%(b|0)|0;zl(q,b);f=k[n>>2]|0;if(m)_l(d,a,b,f);else yl(d,a,b,f,q);l=(b|0)>0;if(l){e=k[n>>2]|0;h=0;i=0;f=d;while(1){d=k[e+(h<<2)>>2]|0;k[o+(h<<2)>>2]=d;g=(d|0)>(i|0);f=g?h:f;h=h+1|0;if((h|0)==(b|0))break;else i=g?d:i}}else f=d;if((c|0)>1){j=1;do{d=n+(j<<2)|0;g=k[d>>2]|0;if(m)_l(f,a,b,g);else yl(f,a,b,g,q);if(l){e=k[d>>2]|0;h=0;i=0;while(1){g=o+(h<<2)|0;t=k[g>>2]|0;d=k[e+(h<<2)>>2]|0;d=(t|0)<(d|0)?t:d;k[g>>2]=d;g=(d|0)>(i|0);f=g?h:f;h=h+1|0;if((h|0)==(b|0))break;else i=g?d:i}}j=j+1|0}while((j|0)!=(c|0))}vP(o);if(m)Wm(a,b,p);r=s;return}function km(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0,g=0,h=0,i=0.0,j=0,l=0;if((c|0)>0){h=(b|0)>0;i=+(b|0);j=0;do{if(h){e=k[a+(j<<2)>>2]|0;f=0;d=0.0;do{d=d+ +(k[e+(f<<2)>>2]|0);f=f+1|0}while((f|0)!=(b|0));if(h){e=~~(d/i);f=k[a+(j<<2)>>2]|0;g=0;do{l=f+(g<<2)|0;k[l>>2]=(k[l>>2]|0)-e;g=g+1|0}while((g|0)!=(b|0))}}j=j+1|0}while((j|0)!=(c|0))}return}function lm(){var a=0;a=~~+X(+(+((k[12704]|0)+4|0)));k[12705]=a;return}function mm(a,b){a=a|0;b=b|0;var c=0.0,d=0.0;d=+p[a>>3]-+p[b>>3];c=+p[a+8>>3]-+p[b+8>>3];return +(d*d+c*c)}function nm(a,b,c){a=a|0;b=b|0;c=c|0;p[a>>3]=+p[b>>3]-+p[c>>3];p[a+8>>3]=+p[b+8>>3]-+p[c+8>>3];return}function om(a,b,c){a=a|0;b=b|0;c=c|0;p[a>>3]=+p[b>>3]+ +p[c>>3];p[a+8>>3]=+p[b+8>>3]+ +p[c+8>>3];return}function pm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0;e=+p[b+8>>3];d=+p[b>>3];return +((+p[a+8>>3]-e)*(+p[c>>3]-d)-(+p[c+8>>3]-e)*(+p[a>>3]-d))}function qm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0;e=+p[b+8>>3];d=+p[b>>3];return (+p[a+8>>3]-e)*(+p[c>>3]-d)-(+p[c+8>>3]-e)*(+p[a>>3]-d)>0.0|0}function rm(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0.0,g=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0.0,n=0.0,o=0.0,q=0.0;l=+p[a>>3];m=+p[d+8>>3];n=+p[c+8>>3];o=l*(m-n);q=+p[b>>3];k=+p[d>>3];j=+p[b+8>>3];h=+p[a+8>>3];i=j-h;f=+p[c>>3];g=f*(h-j)+(o+q*(n-m)+k*i);if(g==0.0)d=0;else{m=(k*(n-h)+(o+f*(h-m)))/g;o=-(f*i+(l*(n-j)+q*(h-n)))/g;p[e>>3]=l+(q-l)*m;p[e+8>>3]=h+m*i;d=o<=1.0&(m>=0.0&m<=1.0&o>=0.0)&1}return d|0}function sm(a,b,c){a=a|0;b=b|0;c=+c;var d=0,e=0,f=0,g=0.0;k[a+20>>2]=b;qo(b);e=a+24|0;p[e>>3]=+p[b+8>>3]+c;d=zm(a)|0;d=(k[12706]|0)+(d*40|0)+32|0;f=k[d>>2]|0;a:do if(f){g=+p[e>>3];do{c=+p[f+24>>3];if(!(g>c)){if(!(g==c))break a;if(!(+p[b>>3]>+p[k[f+20>>2]>>3]))break a}d=f+32|0;f=k[d>>2]|0}while((f|0)!=0)}while(0);k[a+32>>2]=k[d>>2];k[d>>2]=a;k[12707]=(k[12707]|0)+1;return}function tm(a){a=a|0;var b=0,c=0,d=0;d=a+20|0;if(k[d>>2]|0){c=zm(a)|0;c=(k[12706]|0)+(c*40|0)|0;do{b=c+32|0;c=k[b>>2]|0}while((c|0)!=(a|0));k[b>>2]=k[a+32>>2];k[12707]=(k[12707]|0)+-1;po(k[d>>2]|0);k[d>>2]=0}return}function um(){return (k[12707]|0)==0|0}function vm(a){a=a|0;var b=0,c=0,d=0,e=0.0;c=k[12708]|0;d=k[12706]|0;b=k[d+(c*40|0)+32>>2]|0;if(!b){b=c;while(1){c=b+1|0;b=k[d+(c*40|0)+32>>2]|0;if(!b)b=c;else break}k[12708]=c}e=+p[b+24>>3];p[a>>3]=+p[k[b+20>>2]>>3];p[a+8>>3]=e;return}function wm(){var a=0,b=0;b=(k[12706]|0)+((k[12708]|0)*40|0)+32|0;a=k[b>>2]|0;k[b>>2]=k[a+32>>2];k[12707]=(k[12707]|0)+-1;return a|0}function xm(){vP(k[12706]|0);k[12706]=0;return}function ym(){var a=0,b=0,c=0;k[12707]=0;k[12708]=0;b=k[12705]|0;c=b<<2;k[12709]=c;a=k[12706]|0;if(!a){a=Cy(b*160|0)|0;k[12706]=a;c=k[12709]|0}if((c|0)>0?(k[a+32>>2]=0,(c|0)>1):0){a=1;do{k[(k[12706]|0)+(a*40|0)+32>>2]=0;a=a+1|0}while((a|0)<(c|0))}return}function zm(a){a=a|0;var b=0.0,c=0,d=0.0;c=k[12709]|0;d=+(c|0);b=(+p[a+24>>3]-+p[4201])/+p[4204]*d;do if(!(b<0.0))if(!(b>=d)){a=~~b;break}else{a=c+-1|0;break}else a=0;while(0);if((a|0)<(k[12708]|0))k[12708]=a;return a|0}function Am(){Sn(50848,40);vP(k[12715]|0);k[12715]=0;return}function Bm(){var a=0,b=0,c=0;Sn(50848,40);b=k[12705]|0;c=b<<1;k[12716]=c;a=k[12715]|0;if(!a){a=Cy(b<<3)|0;k[12715]=a;c=k[12716]|0}if((c|0)>0?(k[a>>2]=0,(c|0)>1):0){a=1;do{k[(k[12715]|0)+(a<<2)>>2]=0;a=a+1|0}while((a|0)<(c|0))}c=Tn(50848)|0;k[c+8>>2]=0;i[c+16>>0]=0;k[c+32>>2]=0;k[c+20>>2]=0;k[c+12>>2]=0;k[12710]=c;c=Tn(50848)|0;k[c+8>>2]=0;i[c+16>>0]=0;k[c+32>>2]=0;k[c+20>>2]=0;k[c+12>>2]=0;k[12711]=c;k[k[12710]>>2]=0;k[(k[12710]|0)+4>>2]=k[12711];k[k[12711]>>2]=k[12710];k[(k[12711]|0)+4>>2]=0;k[k[12715]>>2]=k[12710];k[(k[12715]|0)+((k[12716]|0)+-1<<2)>>2]=k[12711];return}function Cm(a,b){a=a|0;b=b|0;var c=0;c=Tn(50848)|0;k[c+8>>2]=a;i[c+16>>0]=b;k[c+32>>2]=0;k[c+20>>2]=0;k[c+12>>2]=0;return c|0}function Dm(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0.0,f=0,g=0,h=0.0,j=0.0,l=0.0,m=0.0,n=0,o=0.0,q=0.0;f=k[a+8>>2]|0;g=k[b+8>>2]|0;do if((!((f|0)==0|(g|0)==0)?(c=k[f+36>>2]|0,n=k[g+36>>2]|0,(c|0)!=(n|0)):0)?(h=+p[f>>3],d=+p[g+8>>3],e=+p[f+8>>3],j=+p[g>>3],l=h*d-e*j,!(l>-1.0e-10&l<1.0e-10)):0){o=+p[f+16>>3];q=+p[g+16>>3];m=(d*o-e*q)/l;h=(h*q-j*o)/l;d=+p[c+8>>3];e=+p[n+8>>3];do if(!(d<e)){if(d==e?+p[c>>3]<+p[n>>3]:0)break;c=n;a=b}while(0);a=i[a+16>>0]|0;if(!(m>=+p[c>>3])){if(a<<24>>24==1){a=0;break}}else if(!(a<<24>>24)){a=0;break}a=mo()|0;k[a+20>>2]=0;p[a>>3]=m;p[a+8>>3]=h}else a=0;while(0);return a|0}function Em(a,b){a=a|0;b=b|0;var c=0.0,d=0,e=0,f=0.0,g=0.0,h=0.0,j=0.0,l=0,m=0,n=0.0,o=0;m=k[a+8>>2]|0;e=k[m+36>>2]|0;j=+p[b>>3];n=+p[e>>3];l=j>n;o=i[a+16>>0]|0;if(l)if(!(o<<24>>24))a=1;else d=4;else if(o<<24>>24==1)a=0;else d=4;if((d|0)==4){c=+p[m>>3];do if(c==1.0){c=+p[b+8>>3];f=c-+p[e+8>>3];g=j-n;h=+p[m+8>>3];b=h<0.0;if(!(b&1&(l&1^1)|l&h>=0.0&1)){a=b^j+c*h>+p[m+16>>3];if(!a){a=a&1;break}}else{a=f>=h*g;if(a){a=a&1;break}}n=n-+p[k[m+32>>2]>>3];a=(g*g-f*f)*h<f*n*(h*h+(g*2.0/n+1.0))&1;if(b)a=a^1}else{g=+p[m+16>>3]-c*j;h=+p[b+8>>3]-g;j=j-n;n=g-+p[e+8>>3];a=h*h>j*j+n*n&1}while(0);a=o<<24>>24==0?a:(a|0)==0&1}return a|0}function Fm(a,b){a=a|0;b=b|0;k[b>>2]=a;a=a+4|0;k[b+4>>2]=k[a>>2];k[k[a>>2]>>2]=b;k[a>>2]=b;return}function Gm(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;f=k[12716]|0;b=~~((+p[a>>3]-+p[4199])/+p[4203]*+(f|0));b=(b|0)<0?0:b;f=(b|0)<(f|0)?b:f+-1|0;b=Mm(f)|0;if(!b){b=Mm(f+-1|0)|0;a:do if(!b){c=1;do{b=Mm(c+f|0)|0;if(b)break a;c=c+1|0;b=Mm(f-c|0)|0}while((b|0)==0)}else c=1;while(0);k[12717]=(k[12717]|0)+c}k[12718]=(k[12718]|0)+1;d=k[12710]|0;c=k[12711]|0;b:do if((b|0)==(d|0))e=9;else{if((b|0)!=(c|0)?(Em(b,a)|0)!=0:0){e=9;break}do{b=k[b>>2]|0;if((b|0)==(d|0)){b=d;break b}}while((Em(b,a)|0)==0)}while(0);if((e|0)==9){while(1){b=k[b+4>>2]|0;if((b|0)==(c|0))break;if(!(Em(b,a)|0))break;else e=9}b=k[b>>2]|0}if((f|0)>0?(f|0)<((k[12716]|0)+-1|0):0){c=(k[12715]|0)+(f<<2)|0;d=k[c>>2]|0;if(d){e=d+12|0;k[e>>2]=(k[e>>2]|0)+-1}k[c>>2]=b;f=(k[(k[12715]|0)+(f<<2)>>2]|0)+12|0;k[f>>2]=(k[f>>2]|0)+1}return b|0}function Hm(a){a=a|0;var b=0,c=0;b=a+4|0;c=k[a>>2]|0;k[c+4>>2]=k[b>>2];k[k[b>>2]>>2]=c;k[a+8>>2]=-2;return}function Im(a){a=a|0;return k[a+4>>2]|0}function Jm(a){a=a|0;return k[a>>2]|0}function Km(a){a=a|0;var b=0;b=k[a+8>>2]|0;if(!b)b=51072;else b=(i[a+16>>0]|0)==0?b+32|0:b+36|0;return k[b>>2]|0}function Lm(a){a=a|0;var b=0;b=k[a+8>>2]|0;if(!b)b=51072;else b=(i[a+16>>0]|0)==0?b+36|0:b+32|0;return k[b>>2]|0}function Mm(a){a=a|0;var b=0,c=0;if((a|0)>-1&(k[12716]|0)>(a|0)?(c=(k[12715]|0)+(a<<2)|0,b=k[c>>2]|0,(b|0)!=0):0){if((k[b+8>>2]|0)==(-2|0)){k[c>>2]=0;c=b+12|0;a=(k[c>>2]|0)+-1|0;k[c>>2]=a;if(!a){Un(b,50848);b=0}else b=0}}else b=0;return b|0}function Nm(){Sn(50880,24);return}function Om(a,b,c){a=a|0;b=+b;c=+c;var d=0,e=0,f=0,g=0,h=0;h=r;r=r+32|0;g=h;d=(k[12719]|0)+((k[a+16>>2]|0)*96|0)+88|0;e=k[d>>2]|0;p[g+8>>3]=b;p[g+16>>3]=c;f=Pm(a,g,e)|0;do if(f){if((f|0)<0){g=Tn(50880)|0;p[g+8>>3]=b;p[g+16>>3]=c;k[g>>2]=e;k[d>>2]=g;break}while(1){d=k[e>>2]|0;f=Pm(a,g,d)|0;if((f|0)>0)e=d;else break}if(f){g=Tn(50880)|0;p[g+8>>3]=b;p[g+16>>3]=c;k[e>>2]=g;k[g>>2]=d}}while(0);r=h;return}function Pm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,g=0.0,h=0.0,i=0.0,j=0.0;do if(c){d=+p[b+8>>3];h=+p[c+8>>3];e=+p[b+16>>3];f=+p[c+16>>3];if(!(d==h&e==f)){j=+p[a>>3];i=d-j;d=+p[a+8>>3];g=e-d;h=h-j;d=f-d;if(!(i>=0.0)){if(h>=0.0){b=1;break}e=d/h;d=g/i;if(d<e){b=-1;break}if(d>e){b=1;break}b=i>h?-1:1;break}if(!(h<0.0)){b=h>0.0;if(!(i>0.0)){if(b){b=!(g<=0.0)?1:-1;break}if(g<d){b=!(d<=0.0)?-1:1;break}else{b=!(g<=0.0)?1:-1;break}}else{if(!b){b=d>0.0?-1:1;break}e=d/h;d=g/i;if(d<e){b=-1;break}if(d>e){b=1;break}b=i<h?-1:1;break}}else b=-1}else b=0}else b=-1;while(0);return b|0}function Qm(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=k[a+(c*20|0)>>2]|0;if((e|0)>1){a=k[a+(c*20|0)+4>>2]|0;c=1;b=0;do{b=((k[d+(k[a+(c<<2)>>2]<<2)>>2]|0)>0&1)+b|0;c=c+1|0}while((c|0)<(e|0))}else b=0;return b|0}function Rm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=a+(b*20|0)|0;if((k[d>>2]|0)>1){a=k[a+(b*20|0)+4>>2]|0;b=1;do{k[c+(k[a+(b<<2)>>2]<<2)>>2]=1;b=b+1|0}while((b|0)<(k[d>>2]|0))}return}function Sm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=a+(b*20|0)|0;if((k[d>>2]|0)>1){a=k[a+(b*20|0)+4>>2]|0;b=1;do{k[c+(k[a+(b<<2)>>2]<<2)>>2]=0;b=b+1|0}while((b|0)<(k[d>>2]|0))}return}function Tm(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;g=r;r=r+16|0;f=g;if(!(k[a+8>>2]|0)){c=b<<2;d=Cy(ha(c,b)|0)|0;c=Cy(c)|0;if((b|0)>0){e=0;do{h=d+((ha(e,b)|0)<<2)|0;k[c+(e<<2)>>2]=h;e=e+1|0}while((e|0)!=(b|0));zl(f,b);d=0;do{yl(d,a,b,k[c+(d<<2)>>2]|0,f);d=d+1|0}while((d|0)!=(b|0))}else zl(f,b);Al(f)}else c=_m(a,b)|0;r=g;return c|0}function Um(a,b){a=a|0;b=b|0;var c=0,d=0;d=k[a+8>>2]|0;Vm(a,b);c=_m(a,b)|0;Wm(a,b,d);return c|0}function Vm(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,p=0;p=Cy(b<<2)|0;e=(b|0)>0;if(e){d=0;c=0;do{c=(k[a+(d*20|0)>>2]|0)+c|0;d=d+1|0}while((d|0)!=(b|0));c=Cy(c<<2)|0;if(e){IP(p|0,0,b<<2|0)|0;n=0;m=c;while(1){k[a+(n*20|0)+8>>2]=m;l=a+(n*20|0)|0;c=k[l>>2]|0;if((c|0)>1){d=k[a+(n*20|0)+4>>2]|0;e=1;do{k[p+(k[d+(e<<2)>>2]<<2)>>2]=1;e=e+1|0;c=k[l>>2]|0}while((e|0)<(c|0));if((c|0)>=2){g=k[a+(n*20|0)+4>>2]|0;h=c+-2|0;j=1;do{d=k[g+(j<<2)>>2]|0;i=k[a+(d*20|0)>>2]|0;if((i|0)>1){e=k[a+(d*20|0)+4>>2]|0;f=1;d=0;do{d=((k[p+(k[e+(f<<2)>>2]<<2)>>2]|0)>0&1)+d|0;f=f+1|0}while((f|0)!=(i|0))}else d=0;o[m+(j<<2)>>2]=+(h+i-(d<<1)|0);j=j+1|0}while((j|0)!=(c|0));if((c|0)>1){d=k[a+(n*20|0)+4>>2]|0;e=1;do{k[p+(k[d+(e<<2)>>2]<<2)>>2]=0;e=e+1|0;c=k[l>>2]|0}while((e|0)<(c|0))}}}n=n+1|0;if((n|0)==(b|0))break;else m=m+(c<<2)|0}}}else Cy(0)|0;vP(p);return}function Wm(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=a+8|0;vP(k[e>>2]|0);k[e>>2]=0;if((c|0)!=0&(b|0)>0){e=0;while(1){k[a+(e*20|0)+8>>2]=c;d=e+1|0;if((d|0)==(b|0))break;else{c=c+(k[a+(e*20|0)>>2]<<2)|0;e=d}}}return}function Xm(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0,g=0.0,h=0;if((b|0)>0){f=0;e=0.0;do{h=k[a+(f<<2)>>2]|0;g=+p[h+(c<<3)>>3]-+p[h+(d<<3)>>3];e=e+g*g;f=f+1|0}while((f|0)!=(b|0))}else e=0.0;return +(+X(+e))}function Ym(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;if((d|0)>(c|0)){k[12723]=a;dO(b+(c<<2)|0,1-c+d|0,4,78)}return}function Zm(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0.0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0.0;m=d+1|0;do{if((c|0)>=(d|0))break;i=aN()|0;e=c+1|0;i=b+(((((aN()|0)<<16|i)>>>0)%((m-c|0)>>>0)|0)+c<<2)|0;j=k[i>>2]|0;l=b+(c<<2)|0;k[i>>2]=k[l>>2];k[l>>2]=j;f=+p[a+(j<<3)>>3];if((e|0)<(d|0)){g=d;do{a:do if((e|0)<(g|0))do{if(!(+p[a+(k[b+(e<<2)>>2]<<3)>>3]<=f))break a;e=e+1|0}while((e|0)<(g|0));while(0);b:do if((e|0)<(g|0)){while(1){h=b+(g<<2)|0;i=k[h>>2]|0;if(!(+p[a+(i<<3)>>3]>f))break;g=g+-1|0;if((e|0)>=(g|0))break b}o=b+(e<<2)|0;n=k[o>>2]|0;k[o>>2]=i;k[h>>2]=n;e=e+1|0;g=g+-1|0}while(0)}while((e|0)<(g|0))}o=((+p[a+(k[b+(e<<2)>>2]<<3)>>3]>f)<<31>>31)+e|0;h=b+(o<<2)|0;k[l>>2]=k[h>>2];k[h>>2]=j;h=o+-1|0;Zm(a,b,c,h);i=c;c=o+1|0;Zm(a,b,c,d);if((h|0)>(i|0)){f=+p[a+(k[l>>2]<<3)>>3];g=i;e=1;do{g=g+1|0;q=f;f=+p[a+(k[b+(g<<2)>>2]<<3)>>3];e=q>f?0:e}while((g|0)<(h|0)&(e|0)!=0);if(!e)Zm(a,b,i,h)}if((c|0)>=(d|0))break;f=+p[a+(k[b+(c<<2)>>2]<<3)>>3];g=c;e=1;do{g=g+1|0;q=f;f=+p[a+(k[b+(g<<2)>>2]<<3)>>3];e=q>f?0:e}while((g|0)<(d|0)&(e|0)!=0)}while((e|0)==0);return}function _m(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;f=b<<2;c=Cy(ha(f,b)|0)|0;f=Cy(f)|0;d=(b|0)>0;if(d){e=0;do{g=c+((ha(e,b)|0)<<2)|0;k[f+(e<<2)>>2]=g;e=e+1|0}while((e|0)!=(b|0));if(d){c=0;do{_l(c,a,b,k[f+(c<<2)>>2]|0);c=c+1|0}while((c|0)!=(b|0))}}return f|0}function $m(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0;e=k[12723]|0;d=+o[e+(k[a>>2]<<2)>>2];c=+o[e+(k[b>>2]<<2)>>2];return (d<c?-1:d>c&1)|0}function an(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0.0,h=0,i=0.0,j=0,m=0,n=0.0,o=0,q=0.0,s=0,t=0,u=0,v=0,y=0,z=0,A=0.0,B=0.0,C=0.0,D=0.0,E=0.0,F=0,G=0,H=0,I=0,J=0,K=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0.0,Y=0.0,Z=0.0,_=0.0,$=0.0,aa=0.0,ba=0.0,ca=0,da=0,ea=0,fa=0,ga=0,ha=0,ia=0,ja=0,ka=0,la=0;la=r;r=r+96|0;T=la+56|0;U=la+88|0;fa=la+48|0;ea=la+32|0;ia=4;ja=uP(40)|0;k[ja>>2]=0;da=la+16|0;ga=la+8|0;ha=la;ca=la+72|0;w=0;V=ra(21,b*40|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ja|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;do if((d|0)!=1){s=(b|0)>0;if(s){c=0;h=0;do{h=(k[(k[a+(c<<2)>>2]|0)+4>>2]|0)+h|0;c=c+1|0}while((c|0)!=(b|0));w=0;o=ra(21,h*24|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ja|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){S=0;e=0;Q=s;R=V;c=L;h=0;break}if(s){m=0;d=0;while(1){f=V+(m*40|0)|0;k[f>>2]=o+(d*24|0);j=a+(m<<2)|0;c=k[j>>2]|0;if((k[c+4>>2]|0)>0){q=1797693134862315708145274.0e284;n=-1797693134862315708145274.0e284;i=1797693134862315708145274.0e284;g=-1797693134862315708145274.0e284;e=0;do{S=k[c>>2]|0;D=+p[S+(e<<4)>>3];E=+p[S+(e<<4)+8>>3];q=q<D?q:D;i=i<E?i:E;g=g>D?g:D;n=n>E?n:E;p[o+(d*24|0)>>3]=D;p[o+(d*24|0)+8>>3]=E;k[o+(d*24|0)+16>>2]=f;k[o+(d*24|0)+20>>2]=0;d=d+1|0;e=e+1|0;c=k[j>>2]|0}while((e|0)<(k[c+4>>2]|0));c=d}else{q=1797693134862315708145274.0e284;n=-1797693134862315708145274.0e284;i=1797693134862315708145274.0e284;g=-1797693134862315708145274.0e284;c=d}k[V+(m*40|0)+4>>2]=o+((c+-1|0)*24|0);p[V+(m*40|0)+8>>3]=q;p[V+(m*40|0)+16>>3]=i;p[V+(m*40|0)+24>>3]=g;p[V+(m*40|0)+32>>3]=n;m=m+1|0;if((m|0)==(b|0)){f=o;e=o;break}else d=c}}else{f=o;e=o}}else{w=0;e=ra(21,0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ja|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){S=0;e=0;Q=s;R=V;c=L;h=0;break}f=e;h=0}ja=DP(50896,1,ja|0,ia|0)|0;ia=L;w=0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ja|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){S=f;Q=s;R=V;c=L}else{S=f;Q=s;R=V;c=0}}else{S=0;e=0;Q=0;R=0;c=L;h=0}while(0);a:while(1){if(c){w=0;na(95,V|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ja|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue}w=0;na(95,S|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ja|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue}else{ka=16;break}}w=0;P=ra(21,h<<2|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ja|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue}if((h|0)>0){c=0;do{k[P+(c<<2)>>2]=e+(c*24|0);c=c+1|0}while((c|0)!=(h|0));w=0;Ja(26,P|0,h|0,4,79);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ja|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue}K=ca+8|0;M=ca+4|0;d=0;m=0;f=0;O=0;b:while(1){N=P+(O<<2)|0;J=k[N>>2]|0;c=k[J+16>>2]|0;if((J|0)==(k[c>>2]|0))j=k[c+4>>2]|0;else j=J+-24|0;I=J+8|0;c=j;G=d;H=0;F=j;while(1){g=+p[J>>3]-+p[c>>3];if(!(g!=0.0)){g=+p[I>>3]-+p[c+8>>3];if(g==0.0)d=G;else ka=28}else ka=28;do if((ka|0)==28){ka=0;if(g>0.0){j=F+20|0;c=k[j>>2]|0;if(!c){ka=78;break b}do if((m|0)!=1){if((c|0)==(G|0)){d=k[G+4>>2]|0;k[d+8>>2]=0;o=f;break}if((c|0)==(f|0)){o=k[f+8>>2]|0;k[o+4>>2]=0;d=G;break}else{d=c+4|0;o=k[c+8>>2]|0;k[o+4>>2]=k[d>>2];k[(k[d>>2]|0)+8>>2]=o;d=G;o=f;break}}else{d=0;o=0}while(0);w=0;na(95,c|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){f=FP(k[c>>2]|0,ja|0,ia|0)|0;if(!f)Za(c|0,x|0);L=x}else f=-1;if((f|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue a}k[j>>2]=0;m=m+-1|0;f=o;break}if((m|0)>0){s=F+8|0;t=F+16|0;u=F+24|0;v=0;y=G;while(1){z=k[y>>2]|0;w=0;Fa(54,z|0,F|0,ca|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ja|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue a}c=k[K>>2]|0;c:do if((c|0)<=0){do if((c|0)<0){w=0;Fa(54,F|0,z|0,ca|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ja|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue a}c=k[K>>2]|0;if((c|0)>0)break c;if((c|0)<0)c=3;else{c=k[ca>>2]|0;w=0;c=ta(30,F|0,z|0,((c|0)>-1?c:0-c|0)|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){j=FP(k[d>>2]|0,ja|0,ia|0)|0;if(!j)Za(d|0,x|0);L=x}else j=-1;if((j|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue a}}w=0;c=sa(4,z|0,F|0,ga|0,ha|0,c|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){j=FP(k[d>>2]|0,ja|0,ia|0)|0;if(!j)Za(d|0,x|0);L=x}else j=-1;if((j|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue a}if(c)break;break c}else{c=k[ca>>2]|0;if((c|0)==(k[M>>2]|0)){w=0;o=ta(30,z|0,F|0,0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ja|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue a}w=0;c=ta(30,z|0,F|0,1)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){j=FP(k[d>>2]|0,ja|0,ia|0)|0;if(!j)Za(d|0,x|0);L=x}else j=-1;if((j|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue a}c=((o|0)>(c|0)?o:c)<<1}else{w=0;c=ta(30,z|0,F|0,((c|0)>-1?c:0-c|0)|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){j=FP(k[d>>2]|0,ja|0,ia|0)|0;if(!j)Za(d|0,x|0);L=x}else j=-1;if((j|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue a}}w=0;c=sa(4,z|0,F|0,ga|0,ha|0,c|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){j=FP(k[d>>2]|0,ja|0,ia|0)|0;if(!j)Za(d|0,x|0);L=x}else j=-1;if((j|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue a}if(c)break;break c}while(0);C=+p[ga>>3];D=+p[ha>>3];E=+p[z>>3];c=k[z+16>>2]|0;if((k[c+4>>2]|0)==(z|0))c=k[c>>2]|0;else c=z+24|0;B=+p[c>>3];n=+p[c+8>>3];q=+p[F>>3];A=+p[s>>3];c=k[t>>2]|0;if((k[c+4>>2]|0)==(F|0))c=k[c>>2]|0;else c=u;i=+p[c>>3];g=+p[c+8>>3];if(E!=B&q!=i){ka=61;break b}do if(E==B){if(E==C?+p[z+8>>3]==D:0)break;if(!(B==C&n==D)){ka=61;break b}}while(0);do if(q==i){if(q==C&A==D)break;if(!(i==C&g==D)){ka=61;break b}}while(0)}while(0);v=v+1|0;if((v|0)>=(m|0))break;else y=k[y+4>>2]|0}}w=0;j=ra(21,12)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ja|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue a}if(!m){k[j+8>>2]=0;d=j}else{k[f+4>>2]=j;k[j+8>>2]=f;d=G}k[j>>2]=F;k[j+4>>2]=0;k[F+20>>2]=j;m=m+1|0;f=j}while(0);j=k[N>>2]|0;c=k[j+16>>2]|0;if((j|0)==(k[c+4>>2]|0))c=k[c>>2]|0;else c=j+24|0;H=H+1|0;if((H|0)>=2)break;else{G=d;F=j}}O=O+1|0;if((O|0)>=(h|0)){c=0;break}}if((ka|0)==78){ka=0;w=0;ta(25,1,130091,fa|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ja|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue}w=0;pa(20,50896,1);c=w;w=0;if((c|0)!=0&(x|0)!=0){P=FP(k[c>>2]|0,ja|0,ia|0)|0;if(!P)Za(c|0,x|0);L=x};K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue}do if((ka|0)==61){ka=0;if((l[137280]|0)<=1){d=G;c=1;break}c=k[24528]|0;w=0;p[ea>>3]=C;p[ea+8>>3]=D;ta(31,c|0,130063,ea|0)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ja|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue a}w=0;pa(19,1,z|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ja|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue a}w=0;pa(19,2,F|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ja|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue a}d=G;c=1}while(0);if((m|0)>0){o=0;j=d;while(1){d=j;j=k[j+4>>2]|0;w=0;na(95,d|0);d=w;w=0;if((d|0)!=0&(x|0)!=0){f=FP(k[d>>2]|0,ja|0,ia|0)|0;if(!f)Za(d|0,x|0);L=x}else f=-1;if((f|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue a}o=o+1|0;if((o|0)==(m|0))break}}w=0;na(95,P|0);d=w;w=0;if((d|0)!=0&(x|0)!=0){f=FP(k[d>>2]|0,ja|0,ia|0)|0;if(!f)Za(d|0,x|0);L=x}else f=-1;if((f|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue}if(!c)ka=102}else{w=0;Ja(26,P|0,h|0,4,79);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ja|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue}w=0;na(95,P|0);c=w;w=0;if((c|0)!=0&(x|0)!=0){d=FP(k[c>>2]|0,ja|0,ia|0)|0;if(!d)Za(c|0,x|0);L=x}else d=-1;if((d|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue}ka=102}if((ka|0)==102){ka=0;d:do if(Q?(W=k[a>>2]|0,P=k[W>>2]|0,k[da>>2]=k[P>>2],k[da+4>>2]=k[P+4>>2],k[da+8>>2]=k[P+8>>2],k[da+12>>2]=k[P+12>>2],(b|0)>1):0){y=W;z=1;c=0;while(1){t=R+(c*40|0)+8|0;u=R+(c*40|0)+24|0;v=R+(c*40|0)+32|0;o=R+(c*40|0)+16|0;s=z;while(1){c=k[a+(s<<2)>>2]|0;i=+p[t>>3];n=+p[R+(s*40|0)+24>>3];d=!(i<=n);g=+p[R+(s*40|0)+8>>3];if((((!(d|!(i>=g))?(X=+p[o>>3],Y=+p[R+(s*40|0)+32>>3],X<=Y):0)?(Z=+p[R+(s*40|0)+16>>3],X>=Z):0)?(E=+p[u>>3],!(!(E<=n)|!(E>=g))):0)?(E=+p[v>>3],!(!(E<=Y)|!(E>=Z))):0){w=0;k[U>>2]=k[c>>2];k[U+4>>2]=k[c+4>>2];k[T>>2]=k[da>>2];k[T+4>>2]=k[da+4>>2];k[T+8>>2]=k[da+8>>2];k[T+12>>2]=k[da+12>>2];f=Aa(80,U|0,T|0)|0;j=w;w=0;if((j|0)!=0&(x|0)!=0){m=FP(k[j>>2]|0,ja|0,ia|0)|0;if(!m)Za(j|0,x|0);L=x}else m=-1;if((m|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue a}if(f){c=1;break d}}else ka=113;if(((((ka|0)==113?(ka=0,_=+p[u>>3],!(!(g>=i)|!(g<=_))):0)?($=+p[R+(s*40|0)+16>>3],aa=+p[v>>3],$<=aa):0)?(ba=+p[o>>3],!(d|!(n<=_)|!($>=ba))):0)?(E=+p[R+(s*40|0)+32>>3],!(!(E<=aa)|!(E>=ba))):0){c=k[c>>2]|0;w=0;k[U>>2]=k[y>>2];k[U+4>>2]=k[y+4>>2];k[T>>2]=k[c>>2];k[T+4>>2]=k[c+4>>2];k[T+8>>2]=k[c+8>>2];k[T+12>>2]=k[c+12>>2];c=Aa(80,U|0,T|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){f=FP(k[d>>2]|0,ja|0,ia|0)|0;if(!f)Za(d|0,x|0);L=x}else f=-1;if((f|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue a}if(c){c=1;break d}}s=s+1|0;if((s|0)>=(b|0))break}y=k[a+(z<<2)>>2]|0;c=k[y>>2]|0;k[da>>2]=k[c>>2];k[da+4>>2]=k[c+4>>2];k[da+8>>2]=k[c+8>>2];k[da+12>>2]=k[c+12>>2];c=z+1|0;if((c|0)>=(b|0)){c=0;break}else{P=z;z=c;c=P}}}else c=0;while(0)}w=0;na(95,V|0);d=w;w=0;if((d|0)!=0&(x|0)!=0){f=FP(k[d>>2]|0,ja|0,ia|0)|0;if(!f)Za(d|0,x|0);L=x}else f=-1;if((f|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P;continue}w=0;na(95,S|0);d=w;w=0;if((d|0)!=0&(x|0)!=0){f=FP(k[d>>2]|0,ja|0,ia|0)|0;if(!f)Za(d|0,x|0);L=x}else f=-1;if((f|0)==1){K=h;M=R;N=Q;O=e;P=S;c=L;h=K;R=M;Q=N;e=O;S=P}else{ka=123;break}}if((ka|0)==16)c=0;else if((ka|0)==123)c=(c|0)==0&1;vP(ja|0);r=la;return c|0}function bn(a,b){a=a|0;b=b|0;var c=0.0,d=0;d=k[a>>2]|0;a=k[b>>2]|0;c=+p[d>>3]-+p[a>>3];if(!(c!=0.0)){c=+p[d+8>>3]-+p[a+8>>3];if(c==0.0)a=0;else a=c>0.0?1:-1}else a=c>0.0?1:-1;return a|0}function cn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,g=0.0,h=0.0,i=0.0,j=0.0;g=+p[a>>3];h=+p[a+8>>3];d=k[a+16>>2]|0;if((k[d+4>>2]|0)==(a|0)){a=k[d>>2]|0;d=a}else{d=a+24|0;a=a+24|0}f=+p[d>>3]-g;e=+p[a+8>>3]-h;d=k[b+16>>2]|0;if((k[d+4>>2]|0)==(b|0)){a=k[d>>2]|0;d=a}else{d=b+24|0;a=b+24|0}i=+p[d>>3]-g;j=+p[a+8>>3]-h;h=f*(+p[b+8>>3]-h)-e*(+p[b>>3]-g);b=h==0.0?0:h>0.0?1:-1;k[c>>2]=b;h=f*j-e*i;a=h==0.0?0:h>0.0?1:-1;k[c+4>>2]=a;b=ha(a,b)|0;k[c+8>>2]=b;return}function dn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,g=0.0,h=0.0,i=0.0,j=0.0;i=+p[a>>3];j=+p[a+8>>3];d=k[a+16>>2]|0;if((k[d+4>>2]|0)==(a|0))d=k[d>>2]|0;else d=a+24|0;h=+p[d>>3];g=+p[d+8>>3];do if(c){d=k[b+16>>2]|0;if((k[d+4>>2]|0)==(b|0)){d=k[d>>2]|0;break}else{d=b+24|0;break}}else d=b;while(0);f=+p[d>>3];e=+p[d+8>>3];d=i==f;if(!(i==h))if(d|f==h)d=0;else d=(i<f?f<h:h<f)?1:-1;else{if(d)if(j==e|e==g)d=1;else d=j<e?e<g:g<e;else d=0;d=d&1}return d|0}function en(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0.0,h=0.0,i=0.0,j=0.0,l=0.0,m=0.0,n=0.0,o=0.0,q=0.0,r=0.0;a:do if((e|0)<1)f=0;else{q=+p[a>>3];r=+p[a+8>>3];f=k[a+16>>2]|0;if((k[f+4>>2]|0)==(a|0))f=k[f>>2]|0;else f=a+24|0;h=+p[f>>3];g=+p[f+8>>3];n=+p[b>>3];o=+p[b+8>>3];f=k[b+16>>2]|0;if((k[f+4>>2]|0)==(b|0))f=k[f>>2]|0;else f=b+24|0;l=+p[f>>3];m=+p[f+8>>3];switch(e|0){case 3:{if(q==h){p[c>>3]=q;p[d>>3]=m+(q-l)*((o-m)/(n-l));f=1;break a}if(n==l){p[c>>3]=n;p[d>>3]=g+(n-h)*((r-g)/(q-h));f=1;break a}else{l=(o-m)/(n-l);m=(r-g)/(q-h);o=o-n*l;q=r-q*m;r=l-m;p[c>>3]=(q-o)/r;p[d>>3]=(l*q-m*o)/r;f=1;break a}}case 2:{if((dn(a,b,0)|0)==-1)if((dn(b,a,1)|0)==-1){b=(dn(b,a,0)|0)==-1;i=n;j=o;h=b?h:q;g=b?g:r}else{i=n;j=o;h=l;g=m}else if((dn(a,b,1)|0)!=-1)if((dn(b,a,0)|0)==-1){i=q;j=r}else{f=0;break a}else{i=l;j=m;h=n;g=o}p[c>>3]=(h+i)*.5;p[d>>3]=(g+j)*.5;f=1;break a}case 1:if((q-h)*(o-r)==(r-g)*(n-q)){p[c>>3]=n;p[d>>3]=o;f=1;break a}else{p[c>>3]=l;p[d>>3]=m;f=1;break a}default:{f=1;break a}}}while(0);return f|0}function fn(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0.0,g=0.0,h=0,i=0,j=0.0,l=0.0;i=r;r=r+48|0;h=i;e=k[24528]|0;f=+p[b>>3];g=+p[b+8>>3];c=k[b+16>>2]|0;if((k[c+4>>2]|0)==(b|0)){c=k[c>>2]|0;d=c}else{d=b+24|0;c=b+24|0}l=+p[d>>3];j=+p[c+8>>3];k[h>>2]=a;p[h+8>>3]=f;p[h+16>>3]=g;p[h+24>>3]=l;p[h+32>>3]=j;FN(e,130120,h)|0;r=i;return}function gn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0.0,h=0;do if(Jq(a,c)|0){a=By(c<<3)|0;d=(c|0)>0;if(!d){vP(a);a=1;break}e=c<<3;f=0;do{IP(a|0,0,e|0)|0;p[a+(f<<3)>>3]=1.0;Kq(k[b+(f<<2)>>2]|0,a,c);f=f+1|0}while((f|0)!=(c|0));vP(a);if(d){d=0;do{if((d|0)>0){a=k[b+(d<<2)>>2]|0;e=0;do{h=a+(e<<3)|0;g=+p[h>>3];f=(k[b+(e<<2)>>2]|0)+(d<<3)|0;p[h>>3]=+p[f>>3];p[f>>3]=g;e=e+1|0}while((e|0)!=(d|0))}d=d+1|0}while((d|0)!=(c|0));a=1}else a=1}else a=0;while(0);return a|0}function hn(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0.0,h=0,i=0.0,j=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;w=b<<3;v=Cy(w)|0;w=Cy(w)|0;x=b*30|0;y=(c|0)<(b|0)?c:b;a:do if((y|0)>0){u=(b|0)==0;t=(f|0)==0|(b|0)<1;f=0;while(1){s=k[d+(f<<2)>>2]|0;r=(f|0)>0;do{if(!t){h=0;do{i=+((aN()|0)%100|0|0);p[s+(h<<3)>>3]=i;h=h+1|0}while((h|0)!=(b|0))}if(r){n=0;do{if(!u){h=k[d+(n<<2)>>2]|0;j=h;l=s;m=b;g=0.0;while(1){g=g+ +p[j>>3]*+p[l>>3];m=m+-1|0;if(!m)break;else{j=j+8|0;l=l+8|0}}l=s;j=b;while(1){p[l>>3]=+p[l>>3]-g*+p[h>>3];j=j+-1|0;if(!j)break;else{l=l+8|0;h=h+8|0}}}n=n+1|0}while((n|0)!=(f|0))}if(u)g=0.0;else{h=s;j=b;g=0.0;while(1){i=+p[h>>3];g=g+i*i;j=j+-1|0;if(!j)break;else h=h+8|0}}g=+X(+g)}while(g<1.0e-10);g=1.0/g;if(u)o=0;else{h=s;j=b;while(1){p[h>>3]=g*+p[h>>3];j=j+-1|0;if(!j){o=0;break}else h=h+8|0}}while(1){q=o+1|0;if(u)on(a,0,0,s,v);else{h=w;j=s;l=b;while(1){p[h>>3]=+p[j>>3];l=l+-1|0;if(!l)break;else{h=h+8|0;j=j+8|0}}on(a,b,b,s,v);h=s;j=v;l=b;while(1){p[h>>3]=+p[j>>3];l=l+-1|0;if(!l)break;else{h=h+8|0;j=j+8|0}}}if(r){n=0;do{if(!u){h=k[d+(n<<2)>>2]|0;j=h;l=s;m=b;g=0.0;while(1){g=g+ +p[j>>3]*+p[l>>3];m=m+-1|0;if(!m)break;else{j=j+8|0;l=l+8|0}}l=s;j=b;while(1){p[l>>3]=+p[l>>3]-g*+p[h>>3];j=j+-1|0;if(!j)break;else{l=l+8|0;h=h+8|0}}}n=n+1|0}while((n|0)!=(f|0))}if(u)g=0.0;else{h=s;j=b;g=0.0;while(1){i=+p[h>>3];g=g+i*i;j=j+-1|0;if(!j)break;else h=h+8|0}}i=+X(+g);if(!((o|0)<(x|0)&!(i<1.0e-10))){t=q;break a}g=1.0/i;if(u)g=0.0;else{h=s;j=b;while(1){p[h>>3]=g*+p[h>>3];j=j+-1|0;if(!j){h=s;j=w;l=b;g=0.0;break}else h=h+8|0}while(1){g=g+ +p[h>>3]*+p[j>>3];l=l+-1|0;if(!l)break;else{h=h+8|0;j=j+8|0}}}if(+W(+g)<.999)o=q;else{h=q;break}}p[e+(f<<3)>>3]=i*g;f=f+1|0;if((f|0)>=(y|0)){t=h;break}}}else{f=0;t=0}while(0);if((f|0)<(y|0)){q=(b|0)>0;r=(b|0)==0;s=(c|0)<(b|0)?c:b;do{o=k[d+(f<<2)>>2]|0;if(q){h=0;do{i=+((aN()|0)%100|0|0);p[o+(h<<3)>>3]=i;h=h+1|0}while((h|0)!=(b|0))}if((f|0)>0){n=0;do{if(!r){h=k[d+(n<<2)>>2]|0;j=h;l=o;m=b;g=0.0;while(1){g=g+ +p[j>>3]*+p[l>>3];m=m+-1|0;if(!m)break;else{j=j+8|0;l=l+8|0}}l=o;j=b;while(1){p[l>>3]=+p[l>>3]-g*+p[h>>3];j=j+-1|0;if(!j)break;else{l=l+8|0;h=h+8|0}}}n=n+1|0}while((n|0)!=(f|0))}if(!r){h=o;j=b;g=0.0;while(1){i=+p[h>>3];g=g+i*i;j=j+-1|0;if(!j)break;else h=h+8|0}g=1.0/+X(+g);h=o;j=b;while(1){p[h>>3]=g*+p[h>>3];j=j+-1|0;if(!j)break;else h=h+8|0}}p[e+(f<<3)>>3]=0.0;f=f+1|0}while((f|0)!=(s|0))}r=y+-1|0;if((y|0)>1){s=(b|0)==0;n=(c|0)<(b|0)?c:b;q=0;do{o=e+(q<<3)|0;j=q;q=q+1|0;if((q|0)<(y|0)){h=q;g=+p[o>>3];f=j;do{i=+p[e+(h<<3)>>3];c=g<i;f=c?h:f;g=c?i:g;h=h+1|0}while((h|0)!=(n|0));if((f|0)!=(j|0)){if(!s){j=k[d+(j<<2)>>2]|0;h=v;l=j;m=b;while(1){p[h>>3]=+p[l>>3];m=m+-1|0;if(!m)break;else{h=h+8|0;l=l+8|0}}h=k[d+(f<<2)>>2]|0;l=h;m=b;while(1){p[j>>3]=+p[l>>3];m=m+-1|0;if(!m){j=v;l=b;break}else{j=j+8|0;l=l+8|0}}while(1){p[h>>3]=+p[j>>3];l=l+-1|0;if(!l)break;else{h=h+8|0;j=j+8|0}}}p[e+(f<<3)>>3]=+p[o>>3];p[o>>3]=g}}}while((q|0)<(r|0))}vP(v);vP(w);return (t|0)<=(x|0)|0}function jn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0;c=1-b+c|0;if(!c)e=0.0;else{f=a+(b<<3)|0;a=d+(b<<3)|0;e=0.0;while(1){e=e+ +p[f>>3]*+p[a>>3];c=c+-1|0;if(!c)break;else{f=f+8|0;a=a+8|0}}}return +e}function kn(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;var f=0;c=1-b+c|0;if(c){f=a+(b<<3)|0;a=e+(b<<3)|0;while(1){p[f>>3]=+p[f>>3]+ +p[a>>3]*d;c=c+-1|0;if(!c)break;else{f=f+8|0;a=a+8|0}}}return}function ln(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0;c=1-b+c|0;if(!c)d=0.0;else{b=a+(b<<3)|0;d=0.0;while(1){e=+p[b>>3];d=d+e*e;c=c+-1|0;if(!c)break;else b=b+8|0}}return +(+X(+d))}function mn(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;var f=0;c=1-b+c|0;if(c){f=a+(b<<3)|0;a=e+(b<<3)|0;while(1){p[f>>3]=+p[a>>3]*d;c=c+-1|0;if(!c)break;else{f=f+8|0;a=a+8|0}}}return}function nn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;c=1-b+c|0;if(c){e=a+(b<<3)|0;a=d+(b<<3)|0;while(1){p[e>>3]=+p[a>>3];c=c+-1|0;if(!c)break;else{e=e+8|0;a=a+8|0}}}return}function on(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0.0,g=0,h=0,i=0,j=0;if((b|0)>0){i=(c|0)>0;j=0;do{if(i){g=k[a+(j<<2)>>2]|0;h=0;f=0.0;do{f=f+ +p[g+(h<<3)>>3]*+p[d+(h<<3)>>3];h=h+1|0}while((h|0)!=(c|0))}else f=0.0;p[e+(j<<3)>>3]=f;j=j+1|0}while((j|0)!=(b|0))}return}function pn(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0.0,j=0,l=0,m=0,n=0,q=0,r=0;g=k[f>>2]|0;if(!g){r=c<<2;g=uP(ha(r,e)|0)|0;r=uP(r)|0;k[f>>2]=r}else{r=c<<2;q=xP(k[g>>2]|0,ha(r,e)|0)|0;r=xP(g,r)|0;k[f>>2]=r;g=q}f=(c|0)>0;if(f){h=0;while(1){k[r+(h<<2)>>2]=g;h=h+1|0;if((h|0)==(c|0))break;else g=g+(e<<2)|0}if(f){h=(e|0)>0;j=(d|0)>0;n=0;do{if(h){l=k[r+(n<<2)>>2]|0;m=a+(n<<2)|0;q=0;do{if(j){g=k[m>>2]|0;f=0;i=0.0;do{i=i+ +p[g+(f<<3)>>3]*+o[(k[b+(f<<2)>>2]|0)+(q<<2)>>2];f=f+1|0}while((f|0)!=(d|0))}else i=0.0;o[l+(q<<2)>>2]=i;q=q+1|0}while((q|0)!=(e|0))}n=n+1|0}while((n|0)!=(c|0))}}return}function qn(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0.0,j=0,l=0,m=0,n=0,q=0,r=0;g=k[f>>2]|0;if(!g){g=uP(ha(c<<3,e)|0)|0;r=uP(c<<2)|0;k[f>>2]=r}else{q=xP(k[g>>2]|0,ha(c<<3,e)|0)|0;r=xP(g,c<<2)|0;k[f>>2]=r;g=q}f=(c|0)>0;if(f){h=0;while(1){k[r+(h<<2)>>2]=g;h=h+1|0;if((h|0)==(c|0))break;else g=g+(e<<3)|0}if(f){h=(e|0)>0;j=(d|0)>0;n=0;do{if(h){l=k[r+(n<<2)>>2]|0;m=a+(n<<2)|0;q=0;do{if(j){g=k[m>>2]|0;f=0;i=0.0;do{i=i+ +p[g+(f<<3)>>3]*+o[(k[b+(f<<2)>>2]|0)+(q<<2)>>2];f=f+1|0}while((f|0)!=(d|0))}else i=0.0;p[l+(q<<3)>>3]=i;q=q+1|0}while((q|0)!=(e|0))}n=n+1|0}while((n|0)!=(c|0))}}return}function rn(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,i=0,j=0,l=0,m=0,n=0,q=0,r=0,s=0;f=k[e>>2]|0;if(!f){f=uP(ha(c*20|0,d)|0)|0;s=uP(c<<2)|0;k[e>>2]=s}else{r=xP(k[f>>2]|0,ha(c*20|0,d)|0)|0;s=xP(f,c<<2)|0;k[e>>2]=s;f=r}e=(c|0)>0;if(e){g=0;while(1){k[s+(g<<2)>>2]=f;g=g+1|0;if((g|0)==(c|0))break;else f=f+(d<<2)|0}if(e){g=(d|0)>0;q=0;do{i=k[a+(q*20|0)+4>>2]|0;j=k[a+(q*20|0)+8>>2]|0;l=k[a+(q*20|0)>>2]|0;if(g){m=(l|0)>0;n=k[s+(q<<2)>>2]|0;r=0;do{if(m){f=k[b+(r<<2)>>2]|0;e=0;h=0.0;do{h=h+ +o[j+(e<<2)>>2]*+p[f+(k[i+(e<<2)>>2]<<3)>>3];e=e+1|0}while((e|0)!=(l|0))}else h=0.0;o[n+(r<<2)>>2]=h;r=r+1|0}while((r|0)!=(d|0))}q=q+1|0}while((q|0)!=(c|0))}}return}function sn(a,b){a=a|0;b=b|0;var c=0.0,d=0,e=0,f=0;f=(a|0)==0;if(!f){d=a;e=b;c=0.0;while(1){c=c+ +p[e>>3];d=d+-1|0;if(!d)break;else e=e+8|0}c=c/+(a|0);if(!f)while(1){p[b>>3]=+p[b>>3]-c;a=a+-1|0;if(!a)break;else b=b+8|0}}return}function tn(a,b){a=a|0;b=b|0;var c=0.0,d=0,e=0;if((a|0)>0){d=0;do{c=+((aN()|0)%500|0|0);p[b+(d<<3)>>3]=c;d=d+1|0}while((d|0)!=(a|0))}if(a){d=a;e=b;c=0.0;while(1){c=c+ +p[e>>3];d=d+-1|0;if(!d)break;else e=e+8|0}c=c/+(a|0);d=b;while(1){p[d>>3]=+p[d>>3]-c;a=a+-1|0;if(!a)break;else d=d+8|0}}return}function un(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0,g=0,h=0,i=0,j=0;if((b|0)>0){j=0;do{f=k[a+(j*20|0)>>2]|0;if((f|0)>0){g=k[a+(j*20|0)+8>>2]|0;h=k[a+(j*20|0)+4>>2]|0;i=0;e=0.0;do{e=e+ +o[g+(i<<2)>>2]*+p[c+(k[h+(i<<2)>>2]<<3)>>3];i=i+1|0}while((i|0)<(f|0))}else e=0.0;p[d+(j<<3)>>3]=e;j=j+1|0}while((j|0)!=(b|0))}return}function vn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0,g=0,h=0;if((b|0)>0){h=0;do{f=k[a+(h<<2)>>2]|0;g=0;e=0.0;do{e=e+ +o[f+(g<<2)>>2]*+p[c+(g<<3)>>3];g=g+1|0}while((g|0)!=(b|0));p[d+(h<<3)>>3]=e;h=h+1|0}while((h|0)!=(b|0))}return}function wn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;if((a|0)>0){e=0;do{p[d+(e<<3)>>3]=+p[b+(e<<3)>>3]-+p[c+(e<<3)>>3];e=e+1|0}while((e|0)!=(a|0))}return}function xn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;if((a|0)>0){e=0;do{p[d+(e<<3)>>3]=+p[b+(e<<3)>>3]+ +p[c+(e<<3)>>3];e=e+1|0}while((e|0)!=(a|0))}return}function yn(a,b,c,d){a=a|0;b=b|0;c=+c;d=d|0;var e=0;if((a|0)>0){e=0;do{p[d+(e<<3)>>3]=+p[b+(e<<3)>>3]*c;e=e+1|0}while((e|0)!=(a|0))}return}function zn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if((a|0)>0){d=0;do{p[c+(d<<3)>>3]=+p[b+(d<<3)>>3];d=d+1|0}while((d|0)!=(a|0))}return}function An(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0;if((a|0)>0){e=0;d=0.0;do{d=d+ +p[b+(e<<3)>>3]*+p[c+(e<<3)>>3];e=e+1|0}while((e|0)!=(a|0))}else d=0.0;return +d}function Bn(a,b){a=a|0;b=b|0;var c=0.0,d=0,e=0.0;if((a|0)>0){d=0;c=-1.e+50;do{e=+W(+(+p[b+(d<<3)>>3]));c=e>c?e:c;d=d+1|0}while((d|0)!=(a|0))}else c=-1.e+50;return +c}function Cn(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0.0,g=0,h=0,i=0;if((b|0)>0){h=(c|0)>0;i=0;do{if(h){g=0;f=0.0;do{f=f+ +p[(k[a+(g<<2)>>2]|0)+(i<<3)>>3]*+p[d+(g<<3)>>3];g=g+1|0}while((g|0)!=(c|0))}else f=0.0;p[e+(i<<3)>>3]=f;i=i+1|0}while((i|0)!=(b|0))}return}function Dn(a,b){a=a|0;b=b|0;var c=0.0,d=0,e=0,f=0;f=(a|0)==0;if(!f){d=a;e=b;c=0.0;while(1){c=c+ +o[e>>2];d=d+-1|0;if(!d)break;else e=e+4|0}c=c/+(a|0);if(!f)while(1){o[b>>2]=+o[b>>2]-c;a=a+-1|0;if(!a)break;else b=b+4|0}}return}function En(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0,g=0,h=0,i=0.0,j=0,k=0,l=0,m=0,n=0.0;if((b|0)>0){IP(d|0,0,b<<2|0)|0;j=0;f=0;l=b;while(1){i=+o[c+(j<<2)>>2];e=i*+o[a+(f<<2)>>2]+0.0;k=j;j=j+1|0;g=f+1|0;if((j|0)<(b|0)){h=j;while(1){n=+o[a+(g<<2)>>2];e=e+n*+o[c+(h<<2)>>2];m=d+(h<<2)|0;o[m>>2]=i*n+ +o[m>>2];h=h+1|0;if((h|0)==(b|0))break;else g=g+1|0}f=f+l|0}else f=g;m=d+(k<<2)|0;o[m>>2]=e+ +o[m>>2];if((j|0)==(b|0))break;else l=l+-1|0}}return}function Fn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;if((a|0)>0){e=0;do{o[d+(e<<2)>>2]=+o[b+(e<<2)>>2]-+o[c+(e<<2)>>2];e=e+1|0}while((e|0)!=(a|0))}return}function Gn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;if((a|0)>0){e=0;do{o[d+(e<<2)>>2]=+o[b+(e<<2)>>2]+ +o[c+(e<<2)>>2];e=e+1|0}while((e|0)!=(a|0))}return}function Hn(a,b,c,d){a=a|0;b=b|0;c=+c;d=d|0;var e=0,f=0;if((a|0)>0){e=0;do{f=b+(e<<2)|0;o[f>>2]=+o[f>>2]+ +o[d+(e<<2)>>2]*c;e=e+1|0}while((e|0)!=(a|0))}return}function In(a,b,c,d){a=a|0;b=b|0;c=+c;d=d|0;var e=0;if((a|0)>0){e=0;do{o[d+(e<<2)>>2]=+o[b+(e<<2)>>2]*c;e=e+1|0}while((e|0)!=(a|0))}return}function Jn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if((a|0)>0){d=0;do{k[c+(d<<2)>>2]=k[b+(d<<2)>>2];d=d+1|0}while((d|0)!=(a|0))}return}function Kn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0;if((a|0)>0){e=0;d=0.0;do{d=d+ +o[b+(e<<2)>>2]*+o[c+(e<<2)>>2];e=e+1|0}while((e|0)!=(a|0))}else d=0.0;return +d}function Ln(a,b,c){a=a|0;b=+b;c=c|0;var d=0;if((a|0)>0){d=0;do{p[c+(d<<3)>>3]=b;d=d+1|0}while((d|0)!=(a|0))}return}function Mn(a,b,c){a=a|0;b=+b;c=c|0;var d=0;if((a|0)>0){d=0;do{o[c+(d<<2)>>2]=b;d=d+1|0}while((d|0)!=(a|0))}return}function Nn(a,b){a=a|0;b=b|0;var c=0.0,d=0,e=0.0;if((a|0)>0){d=0;c=-1000000015047466219876688.0e6;do{e=+W(+(+o[b+(d<<2)>>2]));c=e>c?e:c;d=d+1|0}while((d|0)!=(a|0))}else c=-1000000015047466219876688.0e6;return +c}function On(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0;if((a|0)>0){c=0;do{d=b+(c<<2)|0;e=+o[d>>2];o[d>>2]=e*e;c=c+1|0}while((c|0)!=(a|0))}return}function Pn(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0;if((a|0)>0){e=0;do{c=b+(e<<2)|0;d=+o[c>>2];if(d!=0.0)o[c>>2]=1.0/d;e=e+1|0}while((e|0)!=(a|0))}return}function Qn(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0;if((a|0)>0){e=0;do{d=+o[b+(e<<2)>>2];if(d>=0.0){d=+X(+d);o[c+(e<<2)>>2]=d}e=e+1|0}while((e|0)!=(a|0))}return}function Rn(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0;if((a|0)>0){e=0;do{c=b+(e<<2)|0;d=+o[c>>2];if(d>0.0){d=1.0/+X(+d);o[c>>2]=d}e=e+1|0}while((e|0)!=(a|0))}return}function Sn(a,b){a=a|0;b=b|0;var c=0,d=0;k[a>>2]=0;if(b&3)if(!(4%(b>>>0)|0))b=4;else{a:do if((b|0)==4)c=4;else{d=4;c=b;while(1){while(1){if((d|0)<=(c|0))break;d=d-c|0;if((d|0)==(c|0))break a}c=c-d|0;if((d|0)==(c|0)){c=d;break}}}while(0);b=ha(4/(c>>>0)|0,b)|0}k[a+8>>2]=b;c=a+4|0;b=k[c>>2]|0;if(b)do{a=b;b=k[b>>2]|0;vP(k[a+4>>2]|0);vP(a)}while((b|0)!=0);k[c>>2]=0;return}function Tn(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0;b=k[a>>2]|0;if(!b){d=k[a+8>>2]|0;h=Cy(8)|0;e=Cy(ha(k[12705]|0,d)|0)|0;k[h+4>>2]=e;f=k[12705]|0;if((f|0)>0){c=k[a>>2]|0;g=0;while(1){b=e+(ha(g,d)|0)|0;k[b>>2]=c;g=g+1|0;if((g|0)>=(f|0))break;else c=b}k[a>>2]=b}else b=k[a>>2]|0;g=a+4|0;k[h>>2]=k[g>>2];k[g>>2]=h}k[a>>2]=k[b>>2];return b|0}function Un(a,b){a=a|0;b=b|0;k[a>>2]=k[b>>2];k[b>>2]=a;return}function Vn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0.0,i=0,j=0,l=0,m=0,n=0,q=0,r=0,s=0;s=By(b<<3)|0;q=a+8|0;e=k[q>>2]|0;r=(b|0)>0;if(r){l=(k[a+16>>2]|0)==0;m=0;do{if(!l){i=k[a+(m*20|0)>>2]|0;if((i|0)>1){f=k[a+(m*20|0)+8>>2]|0;g=k[a+(m*20|0)+16>>2]|0;h=0.0;j=1;do{h=h+ +o[f+(j<<2)>>2]*+o[g+(j<<2)>>2];j=j+1|0}while((j|0)!=(i|0))}else h=0.0;p[s+(m<<3)>>3]=h}m=m+1|0}while((m|0)!=(b|0));tn(b,c);if(r){g=0;f=0;do{f=(k[a+(g*20|0)>>2]|0)+f|0;g=g+1|0}while((g|0)!=(b|0));f=Cy(f<<2)|0;if(r){j=0;while(1){k[a+(j*20|0)+8>>2]=f;g=k[a+(j*20|0)>>2]|0;o[f>>2]=+(1-g|0);if((g|0)>1){i=1;do{o[f+(i<<2)>>2]=1.0;i=i+1|0}while((i|0)<(g|0))}j=j+1|0;if((j|0)==(b|0))break;else f=f+(g<<2)|0}}}else n=12}else{tn(b,c);n=12}if((n|0)==12)Cy(0)|0;g=(Dl(a,c,s,b,.001,d)|0)>>>31;vP(k[q>>2]|0);if(r){f=0;do{k[a+(f*20|0)+8>>2]=e;e=e+(k[a+(f*20|0)>>2]<<2)|0;f=f+1|0}while((f|0)!=(b|0))}vP(s);return g|0}function Wn(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;h=h|0;i=i|0;b=r;r=r+16|0;if(!(k[12763]|0)){k[12763]=1;Yr(1,130156,b)|0}r=b;return}function Xn(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,u=0,v=0;v=Cy(e<<2)|0;t=(e|0)>0;g=b<<3;if(t){f=0;do{u=Cy(g)|0;k[v+(f<<2)>>2]=u;f=f+1|0}while((f|0)!=(e|0))}u=Cy(e<<3)|0;s=Cy(b<<2)|0;f=Cy(ha(g,b)|0)|0;r=(b|0)>0;if(r){g=0;while(1){k[s+(g<<2)>>2]=f;g=g+1|0;if((g|0)==(b|0))break;else f=f+(b<<3)|0}if(r){j=(c|0)>0;n=0;o=1;while(1){l=k[s+(n<<2)>>2]|0;m=a+(n<<2)|0;q=0;do{if(j){f=k[m>>2]|0;g=k[a+(q<<2)>>2]|0;i=0;h=0.0;do{h=h+ +(ha(k[g+(i<<2)>>2]|0,k[f+(i<<2)>>2]|0)|0);i=i+1|0}while((i|0)!=(c|0))}else h=0.0;p[(k[s+(q<<2)>>2]|0)+(n<<3)>>3]=h;p[l+(q<<3)>>3]=h;q=q+1|0}while((q|0)!=(o|0));n=n+1|0;if((n|0)==(b|0))break;else o=o+1|0}}}hn(s,b,e,v,u,1)|0;if(t){i=(c|0)>0;n=0;do{if(i){j=k[d+(n<<2)>>2]|0;l=v+(n<<2)|0;m=0;do{if(r){f=k[l>>2]|0;g=0;h=0.0;do{h=h+ +(k[(k[a+(g<<2)>>2]|0)+(m<<2)>>2]|0)*+p[f+(g<<3)>>3];g=g+1|0}while((g|0)!=(b|0))}else h=0.0;p[j+(m<<3)>>3]=h;m=m+1|0}while((m|0)!=(c|0))}n=n+1|0}while((n|0)!=(e|0));if(t){f=0;do{vP(k[v+(f<<2)>>2]|0);f=f+1|0}while((f|0)!=(e|0))}}vP(v);vP(u);vP(k[s>>2]|0);vP(s);return}function Yn(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;e=r;r=r+32|0;f=e+20|0;i=e+16|0;h=e+12|0;g=e+8|0;k[f>>2]=d;k[h>>2]=0;k[g>>2]=0;Fq(k[a>>2]|0,c,c<<2,i);rn(k[i>>2]|0,a,c,b,h);qn(a,k[h>>2]|0,b,c,b,g);vP(k[k[h>>2]>>2]|0);vP(k[h>>2]|0);d=(hn(k[g>>2]|0,b,1,f,e,1)|0)&255;r=e;return d|0}function Zn(){k[12764]=0;vP(k[12765]|0);vP(k[12766]|0);vP(k[12767]|0);k[12765]=0;k[12766]=0;k[12767]=0;return}function _n(a){a=a|0;vP(k[a+36>>2]|0);return}function $n(a,b,c,d){a=a|0;b=b|0;c=+c;d=+d;var e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0.0,o=0.0,q=0.0,s=0.0;m=r;r=r+16|0;g=m;l=m+4|0;e=b+8|0;f=k[e>>2]|0;a:do if(!(k[f+212>>2]|0))switch(Qz(b)|0){case 1:{e=k[e>>2]|0;g=k[e+12>>2]|0;j=k[g+8>>2]|0;k[l>>2]=j;e=k[k[e+8>>2]>>2]|0;switch(i[e>>0]|0){case 98:{if(!(qO(e,145896)|0)){k[a+40>>2]=1;h=14}else h=10;break}case 112:{if((qO(e,141444)|0)==0?(co(k[g+44>>2]|0,j)|0)!=0:0){k[a+40>>2]=1;h=14}else h=10;break}default:h=10}do if((h|0)==10){if((j|0)<3?(k[g>>2]|0)!=0:0){k[a+40>>2]=2;break}k[a+40>>2]=0;h=14}while(0);if((h|0)==14?(j|0)>2:0){f=Cy(j<<4)|0;g=k[g+44>>2]|0;if((k[a+40>>2]|0)==1){n=c;p[f>>3]=n+ +p[g>>3]/72.0;c=d;p[f+8>>3]=c+ +p[g+8>>3]/72.0;p[f+16>>3]=+p[g+16>>3]/72.0-n;p[f+24>>3]=c+ +p[g+24>>3]/72.0;p[f+32>>3]=+p[g+32>>3]/72.0-n;p[f+40>>3]=+p[g+40>>3]/72.0-c;p[f+48>>3]=n+ +p[g+48>>3]/72.0;p[f+56>>3]=+p[g+56>>3]/72.0-c;h=23;break a}e=0;while(1){q=+p[g+(e<<4)>>3];o=+p[g+(e<<4)+8>>3];n=+X(+(q*q+o*o));p[f+(e<<4)>>3]=q*(c/n+1.0)/72.0;p[f+(e<<4)+8>>3]=o*(d/n+1.0)/72.0;e=e+1|0;if((e|0)>=(j|0)){h=23;break a}}}f=eo(b,l,c,d)|0;h=23;break a}case 2:{k[l>>2]=4;f=Cy(64)|0;h=k[(k[e>>2]|0)+12>>2]|0;n=+p[h+32>>3];q=+p[h+40>>3];o=-c+ +(~~+p[h+16>>3]|0)/72.0;s=-d+ +(~~+p[h+24>>3]|0)/72.0;p[f>>3]=o;p[f+8>>3]=s;n=c+ +(~~n|0)/72.0;p[f+16>>3]=n;p[f+24>>3]=s;q=d+ +(~~q|0)/72.0;p[f+32>>3]=n;p[f+40>>3]=q;p[f+48>>3]=o;p[f+56>>3]=q;k[a+40>>2]=1;h=23;break a}case 3:{k[a+40>>2]=2;f=eo(b,l,c,d)|0;h=23;break a}default:{k[g>>2]=k[k[(k[e>>2]|0)+8>>2]>>2];Yr(1,130219,g)|0;e=1;break a}}else{k[l>>2]=4;q=c+ +p[f+32>>3]*.5;s=d+ +p[f+40>>3]*.5;k[a+40>>2]=1;f=Cy(64)|0;p[f>>3]=q;p[f+8>>3]=s;o=-q;p[f+16>>3]=o;p[f+24>>3]=s;p[f+32>>3]=o;s=-s;p[f+40>>3]=s;p[f+48>>3]=q;p[f+56>>3]=s;h=23}while(0);if((h|0)==23){k[a+36>>2]=f;e=k[l>>2]|0;k[a+32>>2]=e;fo(f,e,a,a+16|0);if((e|0)>(k[12764]|0)){k[12764]=e;e=0}else e=0}r=m;return e|0}function ao(a,b,c,d){a=a|0;b=b|0;c=+c;d=+d;var e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0.0,s=0.0,t=0.0,u=0.0;o=r;r=r+16|0;f=o;n=o+4|0;m=b+8|0;e=k[m>>2]|0;a:do if(!(k[e+212>>2]|0))switch(Qz(b)|0){case 1:{j=k[(k[m>>2]|0)+12>>2]|0;l=j+8|0;h=k[l>>2]|0;k[n>>2]=h;if((h|0)>2){f=Cy(h<<4)|0;e=k[j+44>>2]|0;g=0;do{p[f+(g<<4)>>3]=+p[e+(g<<4)>>3]/72.0;p[f+(g<<4)+8>>3]=+p[e+(g<<4)+8>>3]/72.0;g=g+1|0}while((g|0)<(h|0))}else f=eo(b,n,0.0,0.0)|0;e=k[k[(k[m>>2]|0)+8>>2]>>2]|0;switch(i[e>>0]|0){case 98:{if(!(qO(e,145896)|0)){k[a+40>>2]=1;h=f;g=21;break a}break}case 112:{if((qO(e,141444)|0)==0?(co(f,k[n>>2]|0)|0)!=0:0){k[a+40>>2]=1;h=f;g=21;break a}break}default:{}}if((k[l>>2]|0)<3?(k[j>>2]|0)!=0:0){k[a+40>>2]=2;h=f;g=21;break a}k[a+40>>2]=0;h=f;g=21;break a}case 2:{k[n>>2]=4;h=Cy(64)|0;g=k[(k[m>>2]|0)+12>>2]|0;t=+p[g+32>>3];q=+p[g+40>>3];s=+p[g+16>>3]/72.0;u=+p[g+24>>3]/72.0;p[h>>3]=s;p[h+8>>3]=u;t=t/72.0;p[h+16>>3]=t;p[h+24>>3]=u;q=q/72.0;p[h+32>>3]=t;p[h+40>>3]=q;p[h+48>>3]=s;p[h+56>>3]=q;k[a+40>>2]=1;g=21;break a}case 3:{k[a+40>>2]=2;h=eo(b,n,0.0,0.0)|0;g=21;break a}default:{k[f>>2]=k[k[(k[m>>2]|0)+8>>2]>>2];Yr(1,130255,f)|0;e=1;break a}}else{k[n>>2]=4;t=+p[e+32>>3]*.5;u=+p[e+40>>3]*.5;k[a+40>>2]=1;h=Cy(64)|0;p[h>>3]=t;p[h+8>>3]=u;s=-t;p[h+16>>3]=s;p[h+24>>3]=u;p[h+32>>3]=s;u=-u;p[h+40>>3]=u;p[h+48>>3]=t;p[h+56>>3]=u;g=21}while(0);if((g|0)==21){g=k[n>>2]|0;if((c!=1.0|d!=1.0)&(g|0)>0){e=h;f=0;while(1){p[e>>3]=c*+p[e>>3];n=e+8|0;p[n>>3]=d*+p[n>>3];f=f+1|0;if((f|0)==(g|0))break;else e=e+16|0}}k[a+36>>2]=h;k[a+32>>2]=g;fo(h,g,a,a+16|0);if((g|0)>(k[12764]|0)){k[12764]=g;e=0}else e=0}r=o;return e|0}function bo(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0.0,j=0.0,l=0,m=0,n=0,o=0,q=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0.0,Q=0,R=0;O=r;r=r+176|0;J=O+160|0;A=O+144|0;z=O+128|0;y=O+112|0;C=O+32|0;D=O+16|0;E=O;N=O+96|0;M=O+80|0;I=O+64|0;H=O+48|0;k[A>>2]=k[a>>2];k[A+4>>2]=k[a+4>>2];k[A+8>>2]=k[a+8>>2];k[A+12>>2]=k[a+12>>2];k[J>>2]=k[b>>2];k[J+4>>2]=k[b+4>>2];k[J+8>>2]=k[b+8>>2];k[J+12>>2]=k[b+12>>2];om(N,A,J);e=b+16|0;k[A>>2]=k[a>>2];k[A+4>>2]=k[a+4>>2];k[A+8>>2]=k[a+8>>2];k[A+12>>2]=k[a+12>>2];k[J>>2]=k[e>>2];k[J+4>>2]=k[e+4>>2];k[J+8>>2]=k[e+8>>2];k[J+12>>2]=k[e+12>>2];om(M,A,J);k[A>>2]=k[c>>2];k[A+4>>2]=k[c+4>>2];k[A+8>>2]=k[c+8>>2];k[A+12>>2]=k[c+12>>2];k[J>>2]=k[d>>2];k[J+4>>2]=k[d+4>>2];k[J+8>>2]=k[d+8>>2];k[J+12>>2]=k[d+12>>2];om(I,A,J);f=d+16|0;k[A>>2]=k[c>>2];k[A+4>>2]=k[c+4>>2];k[A+8>>2]=k[c+8>>2];k[A+12>>2]=k[c+12>>2];k[J>>2]=k[f>>2];k[J+4>>2]=k[f+4>>2];k[J+8>>2]=k[f+8>>2];k[J+12>>2]=k[f+12>>2];om(H,A,J);do if(((+p[N>>3]<=+p[H>>3]?+p[I>>3]<=+p[M>>3]:0)?(L=N+8|0,F=H+8|0,+p[L>>3]<=+p[F>>3]):0)?(G=I+8|0,K=M+8|0,+p[G>>3]<=+p[K>>3]):0){g=k[b+40>>2]|0;if((g&1|0)!=0?(k[d+40>>2]&1|0)!=0:0){e=1;break}if((g&2|0)!=0?(k[d+40>>2]&2|0)!=0:0){j=+p[e>>3]-+p[b>>3]+ +p[f>>3]-+p[d>>3];P=+p[a>>3]-+p[c>>3];h=+p[a+8>>3]-+p[c+8>>3];e=!(P*P+h*h>j*j*.25)&1;break}if(!(k[12765]|0)){B=Cy(k[12764]<<4)|0;k[12765]=B;B=Cy(k[12764]<<4)|0;k[12766]=B}B=b+32|0;x=k[B>>2]|0;j=+p[a>>3];h=+p[a+8>>3];if((x|0)>0){e=k[b+36>>2]|0;f=k[12765]|0;g=0;while(1){p[f>>3]=j+ +p[e>>3];p[f+8>>3]=h+ +p[e+8>>3];g=g+1|0;if((g|0)==(x|0))break;else{e=e+16|0;f=f+16|0}}}w=d+32|0;v=k[w>>2]|0;j=+p[c>>3];h=+p[c+8>>3];u=k[12766]|0;if((v|0)>0){e=k[d+36>>2]|0;f=u;g=0;while(1){p[f>>3]=j+ +p[e>>3];p[f+8>>3]=h+ +p[e+8>>3];g=g+1|0;if((g|0)==(v|0))break;else{e=e+16|0;f=f+16|0}}}n=k[12765]|0;o=x+-1|0;q=v+-1|0;s=x<<1;m=v<<1;e=0;f=0;g=0;a=0;while(1){Q=n+(e<<4)|0;R=n+(((o+e|0)%(x|0)|0)<<4)|0;k[A>>2]=k[Q>>2];k[A+4>>2]=k[Q+4>>2];k[A+8>>2]=k[Q+8>>2];k[A+12>>2]=k[Q+12>>2];k[J>>2]=k[R>>2];k[J+4>>2]=k[R+4>>2];k[J+8>>2]=k[R+8>>2];k[J+12>>2]=k[R+12>>2];nm(C,A,J);l=u+(g<<4)|0;d=u+(((q+g|0)%(v|0)|0)<<4)|0;k[A>>2]=k[l>>2];k[A+4>>2]=k[l+4>>2];k[A+8>>2]=k[l+8>>2];k[A+12>>2]=k[l+12>>2];k[J>>2]=k[d>>2];k[J+4>>2]=k[d+4>>2];k[J+8>>2]=k[d+8>>2];k[J+12>>2]=k[d+12>>2];nm(D,A,J);k[z>>2]=k[8394];k[z+4>>2]=k[8395];k[z+8>>2]=k[8396];k[z+12>>2]=k[8397];k[A>>2]=k[C>>2];k[A+4>>2]=k[C+4>>2];k[A+8>>2]=k[C+8>>2];k[A+12>>2]=k[C+12>>2];k[J>>2]=k[D>>2];k[J+4>>2]=k[D+4>>2];k[J+8>>2]=k[D+8>>2];k[J+12>>2]=k[D+12>>2];h=+pm(z,A,J);k[z>>2]=k[R>>2];k[z+4>>2]=k[R+4>>2];k[z+8>>2]=k[R+8>>2];k[z+12>>2]=k[R+12>>2];k[A>>2]=k[Q>>2];k[A+4>>2]=k[Q+4>>2];k[A+8>>2]=k[Q+8>>2];k[A+12>>2]=k[Q+12>>2];k[J>>2]=k[l>>2];k[J+4>>2]=k[l+4>>2];k[J+8>>2]=k[l+8>>2];k[J+12>>2]=k[l+12>>2];b=qm(z,A,J)|0;k[z>>2]=k[d>>2];k[z+4>>2]=k[d+4>>2];k[z+8>>2]=k[d+8>>2];k[z+12>>2]=k[d+12>>2];k[A>>2]=k[l>>2];k[A+4>>2]=k[l+4>>2];k[A+8>>2]=k[l+8>>2];k[A+12>>2]=k[l+12>>2];k[J>>2]=k[Q>>2];k[J+4>>2]=k[Q+4>>2];k[J+8>>2]=k[Q+8>>2];k[J+12>>2]=k[Q+12>>2];c=qm(z,A,J)|0;k[y>>2]=k[R>>2];k[y+4>>2]=k[R+4>>2];k[y+8>>2]=k[R+8>>2];k[y+12>>2]=k[R+12>>2];k[z>>2]=k[Q>>2];k[z+4>>2]=k[Q+4>>2];k[z+8>>2]=k[Q+8>>2];k[z+12>>2]=k[Q+12>>2];k[A>>2]=k[d>>2];k[A+4>>2]=k[d+4>>2];k[A+8>>2]=k[d+8>>2];k[A+12>>2]=k[d+12>>2];k[J>>2]=k[l>>2];k[J+4>>2]=k[l+4>>2];k[J+8>>2]=k[l+8>>2];k[J+12>>2]=k[l+12>>2];if(rm(y,z,A,J,E)|0){f=34;break}d=(b|0)==0;l=(c|0)==0;do if(h!=0.0|(c|b|0)!=0)if(!(h>=0.0))if(l){e=(e+1|0)%(x|0)|0;f=f+1|0;break}else{g=(g+1|0)%(v|0)|0;a=a+1|0;break}else if(d){g=(g+1|0)%(v|0)|0;a=a+1|0;break}else{e=(e+1|0)%(x|0)|0;f=f+1|0;break}else{e=(e+1|0)%(x|0)|0;f=f+1|0}while(0);if(!((a|0)<(m|0)&((f|0)<(s|0)&((a|0)<(v|0)|(f|0)<(x|0))))){f=30;break}}do if((f|0)==30){e=k[12765]|0;i[t>>0]=i[e>>0];i[t+1>>0]=i[e+1>>0];i[t+2>>0]=i[e+2>>0];i[t+3>>0]=i[e+3>>0];i[t+4>>0]=i[e+4>>0];i[t+5>>0]=i[e+5>>0];i[t+6>>0]=i[e+6>>0];i[t+7>>0]=i[e+7>>0];j=+p[t>>3];R=e+8|0;i[t>>0]=i[R>>0];i[t+1>>0]=i[R+1>>0];i[t+2>>0]=i[R+2>>0];i[t+3>>0]=i[R+3>>0];i[t+4>>0]=i[R+4>>0];i[t+5>>0]=i[R+5>>0];i[t+6>>0]=i[R+6>>0];i[t+7>>0]=i[R+7>>0];P=+p[t>>3];if(!((j<=+p[H>>3]?!(j>=+p[I>>3]):1)|!(P<=+p[F>>3])|!(P>=+p[G>>3]))?(Q=k[12766]|0,R=k[w>>2]|0,k[J>>2]=k[e>>2],k[J+4>>2]=k[e+4>>2],k[J+8>>2]=k[e+8>>2],k[J+12>>2]=k[e+12>>2],(go(Q,R,J)|0)!=0):0){e=1;break}e=k[12766]|0;i[t>>0]=i[e>>0];i[t+1>>0]=i[e+1>>0];i[t+2>>0]=i[e+2>>0];i[t+3>>0]=i[e+3>>0];i[t+4>>0]=i[e+4>>0];i[t+5>>0]=i[e+5>>0];i[t+6>>0]=i[e+6>>0];i[t+7>>0]=i[e+7>>0];j=+p[t>>3];R=e+8|0;i[t>>0]=i[R>>0];i[t+1>>0]=i[R+1>>0];i[t+2>>0]=i[R+2>>0];i[t+3>>0]=i[R+3>>0];i[t+4>>0]=i[R+4>>0];i[t+5>>0]=i[R+5>>0];i[t+6>>0]=i[R+6>>0];i[t+7>>0]=i[R+7>>0];P=+p[t>>3];if((j<=+p[M>>3]?!(j>=+p[N>>3]):1)|!(P<=+p[K>>3])|!(P>=+p[L>>3]))e=0;else{Q=k[12765]|0;R=k[B>>2]|0;k[J>>2]=k[e>>2];k[J+4>>2]=k[e+4>>2];k[J+8>>2]=k[e+8>>2];k[J+12>>2]=k[e+12>>2];e=(go(Q,R,J)|0)!=0}}else if((f|0)==34)e=1;while(0);e=e&1}else e=0;while(0);r=O;return e|0}function co(a,b){a=a|0;b=b|0;var c=0.0,d=0.0;do if((b|0)==4){c=+p[a+8>>3];b=a+16|0;d=+p[a+24>>3];if(c==d){if(+p[a+40>>3]==+p[a+56>>3]?+p[a>>3]==+p[a+48>>3]:0)b=+p[b>>3]==+p[a+32>>3];else b=0;b=b&1;break}if((+p[a>>3]==+p[b>>3]?+p[a+32>>3]==+p[a+48>>3]:0)?c==+p[a+56>>3]:0)b=d==+p[a+40>>3];else b=0;b=b&1}else b=0;while(0);return b|0}function eo(a,b,c,d){a=a|0;b=b|0;c=+c;d=+d;var e=0,f=0.0,g=0.0,h=0,i=0,j=0.0;e=ss(a,138617)|0;if(!e)e=0;else e=bO(e)|0;h=(e|0)<3?20:e;i=Cy(h<<4)|0;if((h|0)>0){e=k[a+8>>2]|0;f=c+ +p[e+32>>3]*.5;g=+(h|0);c=d+ +p[e+40>>3]*.5;e=0;do{d=+(e|0)/g*3.141592653589793*2.0;j=f*+Z(+d);p[i+(e<<4)>>3]=j;d=+_(+d)*c;p[i+(e<<4)+8>>3]=d;e=e+1|0}while((e|0)!=(h|0))}k[b>>2]=h;return i|0}function fo(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,g=0.0,h=0.0,i=0.0,j=0,k=0.0,l=0;e=+p[a>>3];i=+p[a+8>>3];if((b|0)>1){j=1;h=e;g=e;f=i;e=i;do{l=a;a=a+16|0;k=+p[a>>3];g=k<g?k:g;i=+p[l+24>>3];e=i<e?i:e;h=k>h?k:h;f=i>f?i:f;j=j+1|0}while((j|0)!=(b|0))}else{h=e;g=e;f=i;e=i}p[c>>3]=g;p[c+8>>3]=e;p[d>>3]=h;p[d+8>>3]=f;return}function go(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0.0,g=0,h=0.0,i=0,j=0;d=k[12767]|0;if(!d){d=Cy(k[12764]<<4)|0;k[12767]=d}g=(b|0)>0;a:do if(g){f=+p[c>>3];e=+p[c+8>>3];c=0;do{p[d+(c<<4)>>3]=+p[a+(c<<4)>>3]-f;p[d+(c<<4)+8>>3]=+p[a+(c<<4)+8>>3]-e;c=c+1|0}while((c|0)!=(b|0));if(g){a=b+-1|0;e=0.0;i=0;while(1){c=(a+i|0)%(b|0)|0;f=+p[d+(i<<4)+8>>3];g=f==0.0;if(g?+p[d+(c<<4)+8>>3]==0.0:0){if(+p[d+(i<<4)>>3]*+p[d+(c<<4)>>3]<0.0){d=1;break a}}else j=11;do if((j|0)==11){j=0;h=+p[d+(c<<4)+8>>3];if(!(f>=0.0)|!(h<=0.0)?!(h>=0.0)|!(f<=0.0):0)break;f=(+p[d+(i<<4)>>3]*h-+p[d+(c<<4)>>3]*f)/(h-f);if(f==0.0){d=1;break a}if(f>0.0)if(h==0.0|g){e=e+.5;break}else{e=e+1.0;break}}while(0);i=i+1|0;if((i|0)>=(b|0)){j=19;break}}}else{e=0.0;j=19}}else{e=0.0;j=19}while(0);if((j|0)==19)d=((~~e|0)%2|0|0)==1&1;return d|0}function ho(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0;i=Cy(b<<2)|0;g=ha(b,b)|0;h=Cy(g<<2)|0;k[i>>2]=h;Mn(g,0.0,h);if((b|0)>1){c=1;do{h=(k[i>>2]|0)+((ha(c,b)|0)<<2)|0;k[i+(c<<2)>>2]=h;c=c+1|0}while((c|0)!=(b|0))}if((b|0)>0){f=0;g=b;h=0;while(1){e=k[i+(f<<2)>>2]|0;c=k[a+(h<<2)>>2]|0;k[e+(f<<2)>>2]=c;k[e+(f<<2)>>2]=c;c=f+1|0;if((c|0)!=(b|0)){d=h;do{d=d+1|0;j=k[i+(c<<2)>>2]|0;l=k[a+(d<<2)>>2]|0;k[e+(c<<2)>>2]=l;k[j+(f<<2)>>2]=l;c=c+1|0}while((c|0)!=(b|0))}h=h+g|0;f=f+1|0;if((f|0)==(b|0))break;else g=g+-1|0}}return i|0}function io(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=+h;var i=0.0,j=0,l=0.0,m=0,n=0.0,p=0,q=0,r=0.0,s=0,t=0.0,u=0,v=0,w=0,x=0.0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0;J=k[c+(e<<2)>>2]|0;M=k[a+4>>2]|0;N=k[a>>2]|0;O=k[a+48>>2]|0;P=k[a+52>>2]|0;K=k[a+56>>2]|0;if((f|0)>=1){L=(M|0)>0;if(L){j=0;c=-1;i=-1.0e9;e=0;while(1){if((j|0)<(e|0))d=e;else{c=c+1|0;if((c|0)==(K|0))e=M;else e=k[P+(c<<2)>>2]|0;if((j|0)>0)i=+o[J+(k[O+(j+-1<<2)>>2]<<2)>>2]+h;else i=-1.0e9;Ym(J,O,j,e+-1|0);d=e}e=J+(k[O+(j<<2)>>2]<<2)|0;if(+o[e>>2]<i)o[e>>2]=i;j=j+1|0;if((j|0)==(M|0))break;else e=d}}E=k[a+28>>2]|0;F=k[a+32>>2]|0;G=k[a+36>>2]|0;H=k[a+12>>2]|0;I=k[a+16>>2]|0;if(L){j=0;c=-1;e=0;while(1){if((j|0)>=(e|0)){c=c+1|0;if((c|0)==(K|0)){d=K;e=M}else{d=c;e=k[P+(c<<2)>>2]|0}}else d=c;k[I+(k[O+(j<<2)>>2]<<2)>>2]=d;j=j+1|0;if((j|0)==(M|0))break;else c=d}}B=k[a+40>>2]|0;if((f|0)>0){C=(K|0)>0;D=F+(M+-1<<2)|0;c=0;do{a:do if(L){e=1;d=0;i=-1.0e9;while(1){while(1){q=k[O+(d<<2)>>2]|0;x=+o[J+(q<<2)>>2];o[B+(q<<2)>>2]=0.0;j=d+1|0;b:do if((j|0)<(M|0)){a=k[I+(d<<2)>>2]|0;m=d;p=j;n=x;while(1){j=a;a=k[I+(p<<2)>>2]|0;n=(a|0)>(j|0)?n+h:n;j=k[O+(p<<2)>>2]|0;l=+o[J+(j<<2)>>2];if(+W(+(l-n))>1.0e-09){w=1;A=m;j=p;break b}o[B+(j<<2)>>2]=l-x;j=p+1|0;if((j|0)>=(M|0)){w=0;A=p;break}else{m=p;p=j}}}else{w=0;A=d}while(0);z=(d|0)<(j|0);if(z){s=q;a=d;while(1){p=k[N+(s<<2)>>2]|0;m=0;l=-+o[b+(s<<2)>>2];do{if((m|0)!=(s|0))l=l+ +o[p+(m<<2)>>2]*+o[J+(m<<2)>>2];m=m+1|0}while((m|0)!=(M|0));o[E+(s<<2)>>2]=l/-+o[p+(s<<2)>>2]-+o[B+(s<<2)>>2];a=a+1|0;if((a|0)==(j|0))break;s=k[O+(a<<2)>>2]|0}if(z){a=0;p=d;while(1){m=k[I+(q<<2)>>2]|0;if((m|0)==(K|0))u=j;else{u=k[P+(m<<2)>>2]|0;u=(j|0)<(u|0)?j:u}s=(p|0)<(u|0);if(s){m=p;while(1){if(+o[E+(q<<2)>>2]<x){k[H+(a<<2)>>2]=q;a=a+1|0}m=m+1|0;if((m|0)==(u|0))break;q=k[O+(m<<2)>>2]|0}if(s){q=p;do{m=k[O+(q<<2)>>2]|0;if(+o[E+(m<<2)>>2]==x){k[H+(a<<2)>>2]=m;a=a+1|0}q=q+1|0}while((q|0)!=(u|0));if(s)do{m=k[O+(p<<2)>>2]|0;if(+o[E+(m<<2)>>2]>x){k[H+(a<<2)>>2]=m;a=a+1|0}p=p+1|0}while((p|0)!=(u|0))}}if((u|0)>=(j|0))break;q=k[O+(u<<2)>>2]|0;p=u}q=(a|0)>0;if(q){n=0.0;r=0.0;u=0;while(1){s=k[H+(u<<2)>>2]|0;p=k[N+(s<<2)>>2]|0;if((u|0)>0){m=0;l=0.0;do{l=l-+o[p+(k[H+(m<<2)>>2]<<2)>>2];m=m+1|0}while((m|0)!=(u|0))}else l=0.0;l=l*2.0;m=p+(s<<2)|0;t=+o[m>>2];r=(x*l+(r*n-t*+o[E+(s<<2)>>2]))/(l+(n-t));o[F+(u<<2)>>2]=r;u=u+1|0;if((u|0)==(a|0))break;else n=n+(l-+o[m>>2])}}else q=0}else{q=0;a=0}}else{q=0;a=0}s=(a|0)==(M|0);if(s)o[D>>2]=x;y=a+-1|0;if(q){n=0.0;r=0.0;v=y;while(1){u=k[H+(v<<2)>>2]|0;p=k[N+(u<<2)>>2]|0;m=v+1|0;if((m|0)<(a|0)){l=0.0;do{l=l-+o[p+(k[H+(m<<2)>>2]<<2)>>2];m=m+1|0}while((m|0)!=(a|0))}else l=0.0;l=l*2.0;m=p+(u<<2)|0;t=+o[m>>2];r=(x*l+(r*n-t*+o[E+(u<<2)>>2]))/(l+(n-t));o[G+(v<<2)>>2]=r;if((v|0)<=0)break;else{n=n+(l-+o[m>>2]);v=v+-1|0}}}if(s)o[G>>2]=x;if(q){m=-1;q=0;r=0.0;while(1){l=+o[G+(q<<2)>>2];if((q|0)>0)n=+o[F+(q+-1<<2)>>2];else n=l;do if(l<n){p=n>x;if(l<x){l=p?x:n;n=l;break}if(!p)break;n=l}while(0);l=+(a-q|0)*+W(+(l-x))+ +(q|0)*+W(+(n-x));p=l>r;m=p?q:m;q=q+1|0;if((q|0)==(a|0))break;else r=p?l:r}if((m|0)>-1){v=z;u=y;q=A;s=j;break}}if(w?(k[I+(k[O+(j<<2)>>2]<<2)>>2]|0)>(k[I+(k[O+(A<<2)>>2]<<2)>>2]|0):0)i=+o[J+(k[H+(y<<2)>>2]<<2)>>2]+h;else i=+o[J+(k[H+(y<<2)>>2]<<2)>>2];if((j|0)<(M|0))d=j;else{d=e;break a}}r=+o[G+(m<<2)>>2];p=(m|0)>0;if(p)t=+o[F+(m+-1<<2)>>2];else t=r;do if(w){A=k[O+(s<<2)>>2]|0;l=+o[J+(A<<2)>>2];n=+o[B+(k[H+(u<<2)>>2]<<2)>>2];if((k[I+(A<<2)>>2]|0)>(k[I+(k[O+(q<<2)>>2]<<2)>>2]|0)){l=l-h-n;break}else{l=l-n;break}}else l=1.0e9;while(0);l=r<l?r:l;i=t>i?t:i;do if(l<i){j=i>x;if(l<x){l=j?x:i;n=l;break}if(j)n=l;else n=i}else n=i;while(0);if(p){j=0;do{A=k[H+(j<<2)>>2]|0;o[J+(A<<2)>>2]=n+ +o[B+(A<<2)>>2];j=j+1|0}while((j|0)!=(m|0));j=m}else j=m;if((m|0)<(a|0))do{A=k[H+(j<<2)>>2]|0;o[J+(A<<2)>>2]=l+ +o[B+(A<<2)>>2];j=j+1|0}while((j|0)!=(a|0));if(w?(k[I+(k[O+(s<<2)>>2]<<2)>>2]|0)>(k[I+(k[O+(q<<2)>>2]<<2)>>2]|0):0)i=+o[J+(k[H+(u<<2)>>2]<<2)>>2]+h;else i=+o[J+(k[H+(u<<2)>>2]<<2)>>2];if(v){j=d;do{k[O+(j<<2)>>2]=k[H+(j-d<<2)>>2];j=j+1|0}while((j|0)!=(s|0))}if(e<<24>>24!=0?+W(+(n-x))<.01:0)e=+W(+(l-x))<.01;else e=0;e=e&1;if((s|0)<(M|0))d=s;else{d=e;break}}}else d=1;while(0);Dn(M,J);if(C){e=0;do{k[g+(e<<2)>>2]=k[J+(k[O+((k[P+(e<<2)>>2]|0)+-1<<2)>>2]<<2)>>2];e=e+1|0}while((e|0)!=(K|0))}c=c+1|0}while(d<<24>>24==0&(c|0)<(f|0))}else c=0}else c=0;return c|0}function jo(a){a=a|0;vP(k[k[a>>2]>>2]|0);vP(k[a>>2]|0);vP(k[a+8>>2]|0);vP(k[a+28>>2]|0);vP(k[a+32>>2]|0);vP(k[a+36>>2]|0);vP(k[a+40>>2]|0);vP(k[a+12>>2]|0);vP(k[a+16>>2]|0);vP(k[a+20>>2]|0);vP(k[a+24>>2]|0);vP(a);return}function ko(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0;l=Cy(60)|0;k[l>>2]=0;m=l+4|0;k[m>>2]=b;k[l+48>>2]=c;k[l+52>>2]=d;k[l+56>>2]=e;i=ho(a,b)|0;k[l>>2]=i;i=b<<2;j=Cy(i)|0;k[l+8>>2]=j;b=k[m>>2]|0;if((b|0)>0){h=0;a=-1;f=0;while(1){if((h|0)>=(f|0)){a=a+1|0;if((a|0)==(e|0)){g=e;f=b}else{g=a;f=k[d+(a<<2)>>2]|0}}else g=a;k[j+(k[c+(h<<2)>>2]<<2)>>2]=g;h=h+1|0;b=k[m>>2]|0;if((h|0)>=(b|0))break;else a=g}}c=Cy(i)|0;k[l+28>>2]=c;c=Cy(i)|0;k[l+32>>2]=c;c=Cy(i)|0;k[l+36>>2]=c;c=Cy(i)|0;k[l+40>>2]=c;c=Cy(i)|0;k[l+12>>2]=c;c=Cy(i)|0;k[l+16>>2]=c;c=Cy(i)|0;k[l+20>>2]=c;c=Cy(i)|0;k[l+24>>2]=c;return l|0}function lo(){Sn(51076,24);k[12772]=0;return}function mo(){return Tn(51076)|0}function no(a,b){a=a|0;b=b|0;var c=0.0,d=0.0;d=+p[a>>3]-+p[b>>3];c=+p[a+8>>3]-+p[b+8>>3];return +(+X(+(d*d+c*c)))}function oo(a){a=a|0;k[a+16>>2]=k[12772];k[12772]=(k[12772]|0)+1;return}function po(a){a=a|0;var b=0,c=0;c=a+20|0;b=(k[c>>2]|0)+-1|0;k[c>>2]=b;if(!b)Un(a,51076);return}function qo(a){a=a|0;a=a+20|0;k[a>>2]=(k[a>>2]|0)+1;return}function ro(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;var f=0,g=0,h=0.0,i=0.0,j=0.0,l=0,m=0,n=0.0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,B=0,C=0,D=0,E=0.0;q=b<<2;C=Cy(q)|0;w=b<<3;D=Cy(w)|0;B=Tm(a,b)|0;z=(b|0)>0;if(z){f=0;do{a=k[B+(f<<2)>>2]|0;g=0;do{y=a+(g<<2)|0;k[y>>2]=k[y>>2]<<8;g=g+1|0}while((g|0)!=(b|0));f=f+1|0}while((f|0)!=(b|0))}if(!c)Wa(130288,130296,283,130310);y=Cy(w)|0;if(z){a=0;do{p[y+(a<<3)>>3]=+p[c+(a<<3)>>3];a=a+1|0}while((a|0)!=(b|0));so(y,b);f=(b|0)>1;if(f){l=1;i=0.0;h=0.0;do{a=k[B+(l<<2)>>2]|0;j=+p[c+(l<<3)>>3];g=0;do{x=k[a+(g<<2)>>2]|0;n=+W(+(j-+p[c+(g<<3)>>3]));i=i+1.0/+(x|0)*n;h=h+n*(n*(1.0/+(ha(x,x)|0)));g=g+1|0}while((g|0)!=(l|0));l=l+1|0}while((l|0)!=(b|0))}else{f=0;i=0.0;h=0.0}h=i/h;if(z){a=0;do{x=c+(a<<3)|0;p[x>>3]=h*+p[x>>3];a=a+1|0}while((a|0)!=(b|0));x=f}else x=f}else{so(y,b);h=A;x=0}m=ha(b,b)|0;u=m<<2;a=Cy(u)|0;v=Cy(q)|0;if(z){f=0;do{t=a+((ha(f,b)|0)<<2)|0;k[v+(f<<2)>>2]=t;f=f+1|0}while((f|0)!=(b|0));a=Cy(q)|0;n=+(b|0);l=0;i=0.0;do{f=k[B+(l<<2)>>2]|0;g=0;j=0.0;do{E=+(k[f+(g<<2)>>2]|0);E=E*E;i=i+E;j=j+E;g=g+1|0}while((g|0)!=(b|0));o[a+(l<<2)>>2]=j/n;l=l+1|0}while((l|0)!=(b|0));i=i/+(m|0);m=0;q=1;while(1){f=k[B+(m<<2)>>2]|0;g=a+(m<<2)|0;l=k[v+(m<<2)>>2]|0;r=0;do{E=+(k[f+(r<<2)>>2]|0);E=+o[a+(r<<2)>>2]+(+o[g>>2]-E*E)-i;o[l+(r<<2)>>2]=E;o[(k[v+(r<<2)>>2]|0)+(m<<2)>>2]=E;r=r+1|0}while((r|0)!=(q|0));m=m+1|0;if((m|0)==(b|0))break;else q=q+1|0}}else a=Cy(q)|0;vP(a);s=Cy(8)|0;t=Cy(w)|0;if(z){a=0;do{p[t+(a<<3)>>3]=+p[c+(a<<3)>>3];a=a+1|0}while((a|0)!=(b|0))}so(t,b);r=Cy(w)|0;q=Cy(w)|0;n=1.0-e;if(z){m=b+-1|0;l=(t|0)==0;a=0;while(1){if((a|0)<(b|0)){E=+((aN()|0)%100|0|0);p[d+(a<<3)>>3]=E;a=a+1|0;continue}if(!l)kn(d,0,m,-+jn(t,0,m,d),t);i=+ln(d,0,m);if(i<1.0e-10)a=0;else break}mn(d,0,m,1.0/i,d);while(1){nn(q,0,m,d);g=0;do{a=k[v+(g<<2)>>2]|0;f=0;i=0.0;do{i=i+ +o[a+(f<<2)>>2]*+p[d+(f<<3)>>3];f=f+1|0}while((f|0)!=(b|0));p[r+(g<<3)>>3]=i;g=g+1|0}while((g|0)!=(b|0));if(!l)kn(r,0,m,-+jn(r,0,m,t),t);nn(d,0,m,r);j=+ln(d,0,m);if(j<1.0e-10){f=45;break}mn(d,0,m,1.0/j,d);i=+jn(d,0,m,q);if(!(+W(+i)<n)){f=44;break}}if((f|0)==44)p[s>>3]=j*i;else if((f|0)==45){a=(b|0)<1?b:1;f=0;do{g=0;do{E=+((aN()|0)%100|0|0);p[d+(g<<3)>>3]=E;g=g+1|0}while((g|0)!=(b|0));mn(d,0,m,1.0/+ln(d,0,m),d);p[s+(f<<3)>>3]=0.0;f=f+1|0}while((f|0)!=(a|0))}vP(r);vP(q);a=0;do{E=+X(+(+W(+(+p[s>>3]))));w=d+(a<<3)|0;p[w>>3]=E*+p[w>>3];a=a+1|0}while((a|0)!=(b|0))}else{vP(r);vP(q)}vP(k[v>>2]|0);vP(v);vP(s);vP(t);g=Cy(u)|0;if(z){m=0;do{l=ha(m,b)|0;k[C+(m<<2)>>2]=g+(l<<2);a=B+(m<<2)|0;i=0.0;f=0;do{if((f|0)!=(m|0)){E=+(k[(k[a>>2]|0)+(f<<2)>>2]|0);E=-1.0/(E*E);o[g+(l+f<<2)>>2]=E;i=i-E}f=f+1|0}while((f|0)!=(b|0));o[g+(l+m<<2)>>2]=i;m=m+1|0}while((m|0)!=(b|0))}if(x){l=1;do{j=+p[c+(l<<3)>>3];f=k[B+(l<<2)>>2]|0;m=0;do{g=f+(m<<2)|0;E=+(k[g>>2]|0);i=j-+p[c+(m<<3)>>3];i=E*E-i*i;if(i>0.0)a=~~+X(+i);else a=0;k[(k[B+(m<<2)>>2]|0)+(l<<2)>>2]=a;k[g>>2]=a;m=m+1|0}while((m|0)!=(l|0));l=l+1|0}while((l|0)!=(b|0))}if(z){l=0;do{n=+p[d+(l<<3)>>3];a=D+(l<<3)|0;p[a>>3]=0.0;f=B+(l<<2)|0;g=C+(l<<2)|0;i=0.0;m=0;do{do if((m|0)!=(l|0)){j=+(k[(k[f>>2]|0)+(m<<2)>>2]|0)*+o[(k[g>>2]|0)+(m<<2)>>2];if(!(n>=+p[d+(m<<3)>>3])){i=i+j;p[a>>3]=i;break}else{i=i+-j;p[a>>3]=i;break}}while(0);m=m+1|0}while((m|0)!=(b|0));l=l+1|0}while((l|0)!=(b|0))}q=z^1;r=0;while(1){a=El(C,d,D,b,e,b,1)|0;if((a|0)<0|q){f=88;break}else{a=1;m=0}do{n=+p[d+(m<<3)>>3];f=B+(m<<2)|0;g=C+(m<<2)|0;i=0.0;l=0;do{do if((l|0)!=(m|0)){j=+(k[(k[f>>2]|0)+(l<<2)>>2]|0)*+o[(k[g>>2]|0)+(l<<2)>>2];if(!(n>=+p[d+(l<<3)>>3])){i=i+j;break}else{i=i+-j;break}}while(0);l=l+1|0}while((l|0)!=(b|0));f=D+(m<<3)|0;E=+p[f>>3];if(i!=E?+W(+(1.0-i/E))>1.0e-05:0){p[f>>3]=i;a=0}m=m+1|0}while((m|0)!=(b|0));r=r+1|0;if(!(a<<24>>24==0&(r|0)<200)){f=74;break}}if((f|0)==74)if(z){a=0;do{z=c+(a<<3)|0;p[z>>3]=+p[z>>3]/h;z=d+(a<<3)|0;p[z>>3]=+p[z>>3]/h;a=a+1|0}while((a|0)!=(b|0));a=0}else a=0;else if((f|0)==88)a=a>>>31;vP(k[B>>2]|0);vP(B);vP(k[C>>2]|0);vP(C);vP(y);vP(D);return a|0}function so(a,b){a=a|0;b=b|0;var c=0.0,d=0,e=0;e=(b|0)>0;if(e){c=0.0;d=0;do{c=c+ +p[a+(d<<3)>>3];d=d+1|0}while((d|0)!=(b|0));c=c/+(b|0);if(e){d=0;do{e=a+(d<<3)|0;p[e>>3]=+p[e>>3]-c;d=d+1|0}while((d|0)!=(b|0))}}b=b+-1|0;mn(a,0,b,1.0/+ln(a,0,b),a);return}function to(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0.0,g=0,h=0,i=0,j=0,k=0.0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;u=ha(d,d)|0;v=Cy(u<<3)|0;w=Cy(d<<3)|0;s=(d|0)>0;if(s){e=0;do{p[w+(e<<3)>>3]=+p[c+(e<<3)>>3];e=e+1|0}while((e|0)!=(d|0))}t=(u|0)==0;if(!t){e=0;do{p[v+(e<<3)>>3]=+p[a+(e<<3)>>3];e=e+1|0}while((e|0)<(u|0))}r=d+-1|0;q=(d|0)>1;a:do if(q){i=0;e=0;while(1){h=(i|0)<(d|0);if(h){f=0.0;g=i}else{l=29;break a}do{o=a+((ha(g,d)|0)+i<<3)|0;k=+W(+(+p[o>>3]));o=k<f;e=o?e:g;f=o?f:k;g=g+1|0}while((g|0)!=(d|0));o=e;if(f<1.0e-10){l=29;break a}if(h){e=ha(o,d)|0;g=ha(i,d)|0;h=i;do{m=a+(h+e<<3)|0;k=+p[m>>3];n=a+(h+g<<3)|0;p[m>>3]=+p[n>>3];p[n>>3]=k;h=h+1|0}while((h|0)!=(d|0))}n=c+(o<<3)|0;f=+p[n>>3];m=c+(i<<3)|0;p[n>>3]=+p[m>>3];p[m>>3]=f;n=i;i=i+1|0;b:do if((i|0)<(d|0)){j=ha(n,d)|0;l=a+(j+n<<3)|0;e=i;while(1){h=ha(e,d)|0;k=+p[a+(h+n<<3)>>3]/+p[l>>3];g=c+(e<<3)|0;p[g>>3]=+p[g>>3]-k*f;if(s){g=0;do{x=a+(g+h<<3)|0;p[x>>3]=+p[x>>3]-k*+p[a+(g+j<<3)>>3];g=g+1|0}while((g|0)!=(d|0))}e=e+1|0;if((e|0)==(d|0))break b;f=+p[m>>3]}}while(0);if((i|0)<(r|0))e=o;else{l=19;break}}}else l=19;while(0);if((l|0)==19){f=+p[a+(u+-1<<3)>>3];if(+W(+f)<1.0e-10)l=29;else{p[b+(r<<3)>>3]=+p[c+(r<<3)>>3]/f;if(q){j=0;do{e=d-j|0;g=e+-2|0;f=+p[c+(g<<3)>>3];h=b+(g<<3)|0;p[h>>3]=f;i=ha(g,d)|0;e=e+-1|0;do{f=f-+p[a+(e+i<<3)>>3]*+p[b+(e<<3)>>3];p[h>>3]=f;e=e+1|0}while((e|0)<(d|0));p[h>>3]=f/+p[a+(i+g<<3)>>3];j=j+1|0}while((j|0)!=(r|0))}if(s){e=0;do{p[c+(e<<3)>>3]=+p[w+(e<<3)>>3];e=e+1|0}while((e|0)!=(d|0))}if(!t){e=0;do{p[a+(e<<3)>>3]=+p[v+(e<<3)>>3];e=e+1|0}while((e|0)<(u|0))}vP(v);vP(w)}}if((l|0)==29){RN(130325)|0;vP(v);vP(w)}return}function uo(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0,f=0,g=0,h=0,j=0.0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0;s=r;r=r+16|0;n=s;fm();lo();ym();o=ac[b&3]()|0;k[12768]=o;Bm();o=n+8|0;c=0.0;d=0.0;q=ac[b&3]()|0;a:while(1){l=(q|0)==0;m=q+8|0;while(1){if(!(um()|0)){vm(n);j=+p[n>>3];d=+p[o>>3]}else j=c;if(!l){if(um()|0){c=j;break}c=+p[m>>3];if(c<d){c=j;break}if(c==d?+p[q>>3]<j:0){c=j;break}}if(um()|0)break a;h=wm()|0;a=Jm(h)|0;t=Im(h)|0;e=Im(t)|0;g=Km(h)|0;u=Lm(t)|0;f=k[h+20>>2]|0;oo(f);im(k[h+8>>2]|0,i[h+16>>0]|0,f);im(k[t+8>>2]|0,i[t+16>>0]|0,f);Hm(h);tm(t);Hm(t);t=+p[g+8>>3]>+p[u+8>>3];h=t?u:g;u=gm(h,t?g:u)|0;g=Cm(u,t&1)|0;Fm(a,g);im(u,t&1^1,f);po(f);f=Dm(a,g)|0;if(f){tm(a);sm(a,f,+no(f,h))}a=Dm(g,e)|0;if(!a){c=j;continue}sm(g,a,+no(a,h));c=j}a=Gm(q)|0;g=Im(a)|0;e=gm(Lm(a)|0,q)|0;h=Cm(e,0)|0;Fm(a,h);f=Dm(a,h)|0;if(f){tm(a);sm(a,f,+no(f,q))}e=Cm(e,1)|0;Fm(h,e);a=Dm(e,g)|0;if(a)sm(e,a,+no(a,q));q=ac[b&3]()|0}a=Im(k[12710]|0)|0;if((a|0)!=(k[12711]|0))do{hm(k[a+8>>2]|0);a=Im(a)|0}while((a|0)!=(k[12711]|0));r=s;return}function vo(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,f=0,g=0.0,h=0.0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;C=r;r=r+32|0;B=C+16|0;x=C+8|0;o=C;A=C+24|0;a:do if((Zs(a)|0)==1){a=(Kt(a)|0)+8|0;a=k[(k[a>>2]|0)+132>>2]|0;k[a>>2]=0;k[a+4>>2]=0;k[a+8>>2]=0;k[a+12>>2]=0}else{n=Zs(a)|0;n=ha(n,n)|0;c=Kt(a)|0;if(c)do{m=c+8|0;d=k[(k[m>>2]|0)+112>>2]|0;k[d+12>>2]=n;p[d+32>>3]=10.0;d=Js(a,c)|0;b:do if(!d)y=11;else{f=0;while(1){l=k[d>>2]&3;j=k[((l|0)==3?d:d+32|0)+28>>2]|0;if((j|0)==(c|0))j=k[((l|0)==2?d:d+-32|0)+28>>2]|0;if((j|0)!=(c|0))if(f){if((f|0)!=(j|0))break}else f=j;d=Ks(a,d,c)|0;if(!d){y=11;break b}}k[k[(k[m>>2]|0)+112>>2]>>2]=n}while(0);if((y|0)==11){y=0;k[k[(k[m>>2]|0)+112>>2]>>2]=0}c=Lt(a,c)|0}while((c|0)!=0);if(!b){v=(Zs(a)|0)<3;b=Kt(a)|0;if(!v){if(b)do{if(!(k[k[(k[b+8>>2]|0)+112>>2]>>2]|0))wo(a,b,0);b=Lt(a,b)|0}while((b|0)!=0);c=Kt(a)|0;if(!c)b=0;else{b=0;j=0;while(1){d=k[k[(k[c+8>>2]|0)+112>>2]>>2]|0;f=d>>>0>j>>>0;b=f?c:b;c=Lt(a,c)|0;if(!c)break;else j=f?d:j}}}}if(i[137280]|0){v=k[24528]|0;u=ht(b)|0;k[o>>2]=u;FN(v,132400,o)|0}v=b+8|0;s=k[(k[v>>2]|0)+112>>2]|0;c=s+12|0;u=k[c>>2]|0;k[c>>2]=0;k[s+16>>2]=0;s=ks(a,2,137781,0)|0;c=By(8)|0;k[c>>2]=b;c:do if(c){t=(s|0)==0;f=c;j=c;d=c;while(1){q=k[f>>2]|0;c=k[f+4>>2]|0;vP(j);if(!q)break c;d=(c|0)==0?0:d;o=q+8|0;n=(k[(k[(k[o>>2]|0)+112>>2]|0)+12>>2]|0)+1|0;f=Js(a,q)|0;if(f)do{if(!((!t?(m=ts(f,s)|0,(i[m>>0]|0)==48):0)?(qO(ts(f,s)|0,174497)|0)==0:0))y=32;do if((y|0)==32){y=0;j=k[f>>2]&3;l=k[((j|0)==3?f:f+32|0)+28>>2]|0;if((l|0)==(q|0))l=k[((j|0)==2?f:f+-32|0)+28>>2]|0;j=k[(k[l+8>>2]|0)+112>>2]|0;m=j+12|0;if(n>>>0<(k[m>>2]|0)>>>0){k[m>>2]=n;k[j+16>>2]=q;j=(k[(k[o>>2]|0)+112>>2]|0)+8|0;k[j>>2]=(k[j>>2]|0)+1;j=By(8)|0;k[j>>2]=l;if(!d){d=j;c=j;break}else{k[d+4>>2]=j;d=j;break}}}while(0);f=Ks(a,f,q)|0}while((f|0)!=0);if(!c)break;else{f=c;j=c}}}while(0);d=Kt(a)|0;do if(!d)m=0;else{c=0;while(1){f=k[(k[(k[d+8>>2]|0)+112>>2]|0)+12>>2]|0;if((f|0)==(u|0))break;c=f>>>0>c>>>0?f:c;d=Lt(a,d)|0;if(!d){w=c;y=42;break}}if((y|0)==42?(w|0)>=0:0){m=w;break}Yr(1,130341,x)|0;break a}while(0);c=Kt(a)|0;if(c)do{d=c+8|0;f=k[(k[d>>2]|0)+112>>2]|0;if((k[f+8>>2]|0)==0?(z=f+4|0,k[z>>2]=(k[z>>2]|0)+1,z=k[(k[(k[d>>2]|0)+112>>2]|0)+16>>2]|0,(z|0)!=0):0){d=z;do{y=d+8|0;x=(k[(k[y>>2]|0)+112>>2]|0)+4|0;k[x>>2]=(k[x>>2]|0)+1;d=k[(k[(k[y>>2]|0)+112>>2]|0)+16>>2]|0}while((d|0)!=0)}c=Lt(a,c)|0}while((c|0)!=0);p[(k[(k[v>>2]|0)+112>>2]|0)+24>>3]=6.283185307179586;xo(a,b);p[(k[(k[v>>2]|0)+112>>2]|0)+32>>3]=0.0;yo(a,b);l=By((m<<3)+8|0)|0;c=lB(a,ks(k[a+48>>2]|0,0,137496,0)|0,0)|0;d:do if(c)if((m|0)<1){g=0.0;c=1;e=0.0}else{h=0.0;j=1;e=0.0;while(1){g=+eO(c,A);if(!(g>0.0)){g=h;c=j;break d}g=g>.02?g:.02;e=e+g;f=j+1|0;p[l+(j<<3)>>3]=e;c=k[A>>2]|0;d=i[c>>0]|0;e:do if(d<<24>>24)do{if(!(d<<24>>24==58|(_L(d<<24>>24)|0)!=0))break e;c=c+1|0;d=i[c>>0]|0}while(d<<24>>24!=0);while(0);if((j|0)<(m|0)){h=g;j=f}else{c=f;break}}}else{g=1.0;c=1;e=0.0}while(0);if((c|0)<=(m|0))while(1){e=g+e;p[l+(c<<3)>>3]=e;if((c|0)>=(m|0))break;else c=c+1|0}if(i[137280]|0){c=k[24528]|0;QN(130397,18,1,c)|0;d=0;while(1){p[B>>3]=+p[l+(d<<3)>>3];FN(c,130416,B)|0;if((d|0)==(m|0))break;else d=d+1|0}GN(10,c)|0}c=Kt(a)|0;if(c)do{B=k[c+8>>2]|0;A=k[B+112>>2]|0;h=+p[l+(k[A+12>>2]<<3)>>3];A=A+32|0;g=h*+Z(+(+p[A>>3]));B=k[B+132>>2]|0;p[B>>3]=g;h=h*+_(+(+p[A>>3]));p[B+8>>3]=h;c=Lt(a,c)|0}while((c|0)!=0);vP(l)}while(0);r=C;return b|0}function wo(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;h=(k[k[(k[b+8>>2]|0)+112>>2]>>2]|0)+1|0;d=Js(a,b)|0;if(d)do{f=k[d>>2]&3;e=k[((f|0)==3?d:d+32|0)+28>>2]|0;if((e|0)==(b|0))e=k[((f|0)==2?d:d+-32|0)+28>>2]|0;if((e|0)!=(c|0)?(g=k[(k[e+8>>2]|0)+112>>2]|0,h>>>0<(k[g>>2]|0)>>>0):0){k[g>>2]=h;wo(a,e,b)}d=Ks(a,d,b)|0}while((d|0)!=0);return}function xo(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0.0;c=k[(k[b+8>>2]|0)+112>>2]|0;g=+p[c+24>>3]/+((k[c+4>>2]|0)>>>0);c=Js(a,b)|0;if(c)do{d=k[c>>2]&3;e=k[((d|0)==3?c:c+32|0)+28>>2]|0;if((e|0)==(b|0))e=k[((d|0)==2?c:c+-32|0)+28>>2]|0;d=k[(k[e+8>>2]|0)+112>>2]|0;if(((k[d+16>>2]|0)==(b|0)?(f=d+24|0,!(+p[f>>3]!=0.0)):0)?(p[f>>3]=g*+((k[d+4>>2]|0)>>>0),(k[d+8>>2]|0)!=0):0)xo(a,e);c=Ks(a,c,b)|0}while((c|0)!=0);return}function yo(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0,f=0,g=0,h=0.0;c=k[(k[b+8>>2]|0)+112>>2]|0;if(!(k[c+16>>2]|0))d=0.0;else d=+p[c+32>>3]-+p[c+24>>3]*.5;c=Js(a,b)|0;if(c)do{e=k[c>>2]&3;f=k[((e|0)==3?c:c+32|0)+28>>2]|0;if((f|0)==(b|0))f=k[((e|0)==2?c:c+-32|0)+28>>2]|0;e=k[(k[f+8>>2]|0)+112>>2]|0;if((k[e+16>>2]|0)==(b|0)?(g=e+32|0,!(+p[g>>3]!=10.0)):0){h=+p[e+24>>3];p[g>>3]=d+h*.5;d=d+h;if(k[e+8>>2]|0)yo(a,f)}c=Ks(a,c,b)|0}while((c|0)!=0);return}function zo(a){a=a|0;var b=0,c=0,d=0,e=0.0,f=0;b=r;r=r+32|0;d=b;c=ks(a,1,130424,0)|0;f=ks(a,0,130424,0)|0;a=Ao(a,f,c,ks(a,0,130429,0)|0)|0;c=a+16|0;e=+X(+(+p[a>>3]+.1));Go(d,0.0,0.0,e,e);k[c>>2]=k[d>>2];k[c+4>>2]=k[d+4>>2];k[c+8>>2]=k[d+8>>2];k[c+12>>2]=k[d+12>>2];k[c+16>>2]=k[d+16>>2];k[c+20>>2]=k[d+20>>2];k[c+24>>2]=k[d+24>>2];k[c+28>>2]=k[d+28>>2];Bo(a);Co(a);Do(a);r=b;return}function Ao(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0;q=By(72)|0;k[q+60>>2]=0;o=q+56|0;k[o>>2]=a;n=a+8|0;g=k[n>>2]|0;if((k[g+180>>2]|0)<1){e=0.0;i=0;g=0;j=0}else{e=0.0;i=0;l=1;h=0;m=0;while(1){j=Ao(k[(k[g+184>>2]|0)+(l<<2)>>2]|0,b,c,d)|0;h=h+1|0;e=e+ +p[j>>3];i=(i|0)==0?j:i;if(m)k[m+52>>2]=j;g=k[n>>2]|0;if((l|0)>=(k[g+180>>2]|0)){g=h;break}else{l=l+1|0;m=j}}}h=Kt(a)|0;if(!h)h=i;else{l=i;while(1){i=h+8|0;if(!(k[k[(k[i>>2]|0)+112>>2]>>2]|0)){m=By(72)|0;f=+jB(h,c,1.0,0.0);f=f==0.0?1.0e3:f*1.0e3;p[m>>3]=f;k[m+60>>2]=1;k[m+56>>2]=h;if(j)k[j+52>>2]=m;k[k[(k[i>>2]|0)+112>>2]>>2]=a;e=e+f;l=(l|0)==0?m:l;g=g+1|0;i=m}else i=j;h=Lt(a,h)|0;if(!h){h=l;break}else j=i}}k[q+64>>2]=g;if(!g){f=+jB(a,b,1.0,0.0);p[q>>3]=f==0.0?1.0e3:f*1.0e3}else{b=q+8|0;p[b>>3]=e;f=+jB(k[o>>2]|0,d,0.0,0.0);e=+p[b>>3];if(!(f==0.0)){e=f*2.0+ +X(+e);e=e*e}p[q>>3]=e}k[q+48>>2]=h;return q|0}function Bo(a){a=a|0;var b=0,c=0,d=0,e=0,f=0.0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0;q=r;r=r+176|0;g=q+144|0;n=q+64|0;j=q;e=q+32|0;o=k[a+64>>2]|0;do if(o){l=By(o<<2)|0;b=a+48|0;m=(o|0)>0;if(m){c=b;d=0;while(1){c=k[c>>2]|0;k[l+(d<<2)>>2]=c;d=d+1|0;if((d|0)==(o|0))break;else c=c+52|0}}dO(l,o,4,81);h=By(o<<3)|0;if(m){c=0;do{p[h+(c<<3)>>3]=+p[k[l+(c<<2)>>2]>>3];c=c+1|0}while((c|0)!=(o|0))}f=+p[a+8>>3];if(+p[a>>3]==f){e=a+16|0;k[g>>2]=k[e>>2];k[g+4>>2]=k[e+4>>2];k[g+8>>2]=k[e+8>>2];k[g+12>>2]=k[e+12>>2];k[g+16>>2]=k[e+16>>2];k[g+20>>2]=k[e+20>>2];k[g+24>>2]=k[e+24>>2];k[g+28>>2]=k[e+28>>2];g=Fo(o,h,g)|0}else{s=+p[a+40>>3];t=+p[a+32>>3];p[e>>3]=+p[a+16>>3];p[e+8>>3]=+p[a+24>>3];u=s-t;f=(s+t-+X(+(u*u+f*4.0)))*.5;p[e+16>>3]=t-f;p[e+24>>3]=s-f;k[g>>2]=k[e>>2];k[g+4>>2]=k[e+4>>2];k[g+8>>2]=k[e+8>>2];k[g+12>>2]=k[e+12>>2];k[g+16>>2]=k[e+16>>2];k[g+20>>2]=k[e+20>>2];k[g+24>>2]=k[e+24>>2];k[g+28>>2]=k[e+28>>2];g=Fo(o,h,g)|0}if(i[137280]|0){e=k[24528]|0;s=+p[a+24>>3];t=+p[a+32>>3];u=+p[a+40>>3];p[j>>3]=+p[a+16>>3];p[j+8>>3]=s;p[j+16>>3]=t;p[j+24>>3]=u;FN(e,130476,j)|0}if(!m){vP(l);vP(h);vP(g);break}c=k[24528]|0;e=0;do{j=(k[l+(e<<2)>>2]|0)+16|0;d=g+(e<<5)|0;k[j>>2]=k[d>>2];k[j+4>>2]=k[d+4>>2];k[j+8>>2]=k[d+8>>2];k[j+12>>2]=k[d+12>>2];k[j+16>>2]=k[d+16>>2];k[j+20>>2]=k[d+20>>2];k[j+24>>2]=k[d+24>>2];k[j+28>>2]=k[d+28>>2];if(i[137280]|0){f=+p[d>>3];t=+p[g+(e<<5)+16>>3];w=t*.5;s=+p[g+(e<<5)+8>>3];u=+p[g+(e<<5)+24>>3];v=u*.5;p[n>>3]=+p[h+(e<<3)>>3];p[n+8>>3]=f-w;p[n+16>>3]=s-v;p[n+24>>3]=f+w;p[n+32>>3]=s+v;p[n+40>>3]=t*u;p[n+48>>3]=f;p[n+56>>3]=s;p[n+64>>3]=t;p[n+72>>3]=u;FN(c,130493,n)|0}e=e+1|0}while((e|0)!=(o|0));vP(l);vP(h);vP(g);if(m){c=0;while(1){b=k[b>>2]|0;if(!(k[b+60>>2]|0))Bo(b);c=c+1|0;if((c|0)==(o|0))break;else b=b+52|0}}}while(0);r=q;return}function Co(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0.0,l=0.0,m=0.0,n=0.0;h=r;r=r+96|0;g=h+8|0;f=h;e=h+48|0;if(k[a+60>>2]|0){m=+p[a+24>>3];l=+p[a+32>>3];j=+p[a+40>>3];c=k[a+56>>2]|0;d=c+8|0;b=k[d>>2]|0;p[b+16>>3]=+p[a+16>>3];p[b+24>>3]=m;b=k[d>>2]|0;p[b+32>>3]=l/72.0;p[b+40>>3]=j/72.0;b=($t(c)|0)+8|0;ZB(c,k[(k[b>>2]|0)+116>>2]&1);b=k[13632]|0;if((b|0)!=0?(a=ts(c,b)|0,(i[a>>0]|0)==0):0){p[f>>3]=+p[(k[d>>2]|0)+80>>3]*.7;TN(e,130435,f)|0;vs(c,k[13632]|0,e)|0}BB(c);if(i[137280]|0){a=k[24528]|0;f=ht(c)|0;e=k[d>>2]|0;n=+p[e+16>>3];j=+p[e+24>>3];l=+p[e+80>>3];m=+p[e+88>>3]+ +p[e+96>>3];k[g>>2]=f;p[g+8>>3]=n;p[g+16>>3]=j;p[g+24>>3]=l;p[g+32>>3]=m;FN(a,130441,g)|0}}else{b=k[a+48>>2]|0;if(b)do{Co(b);b=k[b+52>>2]|0}while((b|0)!=0);j=+p[a+32>>3];m=+p[a+40>>3];l=+p[a+16>>3]-j*.5;n=+p[a+24>>3]-m*.5;a=k[(k[a+56>>2]|0)+8>>2]|0;p[a+16>>3]=l;p[a+24>>3]=n;p[a+32>>3]=j+l;p[a+40>>3]=m+n}r=h;return}function Do(a){a=a|0;var b=0,c=0,d=0;c=k[a+64>>2]|0;if((c|0)>0){b=a+48|0;d=0;while(1){b=k[b>>2]|0;Do(b);d=d+1|0;if((d|0)==(c|0))break;else b=b+52|0}}vP(a);return}function Eo(a,b){a=a|0;b=b|0;var c=0.0;c=+p[k[a>>2]>>3]-+p[k[b>>2]>>3];return (c<0.0?1:(c>0.0)<<31>>31)|0}function Fo(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0,g=0;g=r;r=r+32|0;f=g;if((a|0)>0){d=0;e=0.0;do{e=e+ +p[b+(d<<3)>>3];d=d+1|0}while((d|0)!=(a|0))}else e=0.0;if(e>+p[c+16>>3]*+p[c+24>>3]+.001)d=0;else{d=By(a<<5)|0;k[f>>2]=k[c>>2];k[f+4>>2]=k[c+4>>2];k[f+8>>2]=k[c+8>>2];k[f+12>>2]=k[c+12>>2];k[f+16>>2]=k[c+16>>2];k[f+20>>2]=k[c+20>>2];k[f+24>>2]=k[c+24>>2];k[f+28>>2]=k[c+28>>2];Ho(a,b,d,0,0.0,1.0,0.0,1.0,f)}r=g;return d|0}function Go(a,b,c,d,e){a=a|0;b=+b;c=+c;d=+d;e=+e;p[a>>3]=b;p[a+8>>3]=c;p[a+16>>3]=d;p[a+24>>3]=e;return}function Ho(a,b,c,d,e,f,g,h,j){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=+f;g=+g;h=+h;j=j|0;var l=0,m=0.0,n=0.0,o=0.0,q=0,s=0.0,t=0.0,u=0.0,v=0,w=0.0,x=0,y=0,z=0,A=0,B=0,C=0.0;A=r;r=r+112|0;z=A+72|0;v=A+40|0;q=A+32|0;l=A;x=j+16|0;n=+p[x>>3];y=j+24|0;t=+p[y>>3];w=n<t?n:t;do if((a|0)>=1){if(i[137280]|0){B=k[24528]|0;C=+p[j+8>>3];p[l>>3]=+p[j>>3];p[l+8>>3]=n;p[l+16>>3]=C;p[l+24>>3]=t;FN(B,130530,l)|0;k[q>>2]=d;FN(B,130576,q)|0}if(!d){g=+p[b>>3];C=w*w;w=g/C;C=C/g;k[z>>2]=k[j>>2];k[z+4>>2]=k[j+4>>2];k[z+8>>2]=k[j+8>>2];k[z+12>>2]=k[j+12>>2];k[z+16>>2]=k[j+16>>2];k[z+20>>2]=k[j+20>>2];k[z+24>>2]=k[j+24>>2];k[z+28>>2]=k[j+28>>2];Ho(a,b,c,1,g,g,g,w>C?w:C,z);break}if((a|0)>(d|0)?(s=+p[b+(d<<3)>>3],u=s<e?e:s,o=s>f?f:s,s=s+g,m=s/w,C=m/(o/m),m=u/m/m,m=C>m?C:m,m<=h):0){k[z>>2]=k[j>>2];k[z+4>>2]=k[j+4>>2];k[z+8>>2]=k[j+8>>2];k[z+12>>2]=k[j+12>>2];k[z+16>>2]=k[j+16>>2];k[z+20>>2]=k[j+20>>2];k[z+24>>2]=k[j+24>>2];k[z+28>>2]=k[j+28>>2];Ho(a,b,c,d+1|0,u,o,s,m,z);break}if(!(i[137280]|0))s=g/w;else{B=k[24528]|0;s=g/w;k[v>>2]=d;p[v+8>>3]=g;p[v+16>>3]=w;p[v+24>>3]=s;FN(B,130601,v)|0}o=+p[x>>3];l=(d|0)>0;if(w==o){if(l){l=j+8|0;m=s*.5;q=0;o=+p[j>>3]-o*.5;while(1){p[c+(q<<5)+24>>3]=s;n=+p[b+(q<<3)>>3]/s;p[c+(q<<5)+16>>3]=n;p[c+(q<<5)+8>>3]=+p[l>>3]+ +p[y>>3]*.5-m;p[c+(q<<5)>>3]=o+n*.5;q=q+1|0;if((q|0)==(d|0))break;else o=o+n}}else{m=s*.5;l=j+8|0}p[l>>3]=+p[l>>3]-m;p[y>>3]=+p[y>>3]-s}else{if(l){n=s*.5;l=0;o=+p[j+8>>3]+ +p[y>>3]*.5;while(1){p[c+(l<<5)+16>>3]=s;m=+p[b+(l<<3)>>3]/s;p[c+(l<<5)+24>>3]=m;p[c+(l<<5)>>3]=n+(+p[j>>3]-+p[x>>3]*.5);p[c+(l<<5)+8>>3]=o-m*.5;l=l+1|0;if((l|0)==(d|0))break;else o=o-m}l=j;m=+p[x>>3]}else{n=s*.5;l=j;m=o}p[l>>3]=n+ +p[l>>3];p[x>>3]=m-s}k[z>>2]=k[j>>2];k[z+4>>2]=k[j+4>>2];k[z+8>>2]=k[j+8>>2];k[z+12>>2]=k[j+12>>2];k[z+16>>2]=k[j+16>>2];k[z+20>>2]=k[j+20>>2];k[z+24>>2]=k[j+24>>2];k[z+28>>2]=k[j+28>>2];Ho(a-d|0,b+(d<<3)|0,c+(d<<5)|0,0,0.0,0.0,0.0,1.0,z)}while(0);r=A;return}function Io(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;z=r;r=r+16|0;y=z+8|0;v=z;c=Kt(a)|0;if(c){w=a+8|0;x=k[24528]|0;e=0;u=c;d=0;c=0;do{f=Es(a,u)|0;if(f)do{h=k[f>>2]&3;o=k[((h|0)==2?f:f+-32|0)+28>>2]|0;g=(j[(k[f+8>>2]|0)+168>>1]|0)==0;do if((u|0)==(o|0)){if(!g){if(!e){e=By(96)|0;t=By(((Zs(a)|0)<<5)+11520|0)|0;k[e+84>>2]=t}Xi(e,f,k[(k[w>>2]|0)+248>>2]|0)}}else if(!g){p=k[((h|0)==3?f:f+32|0)+28>>2]|0;t=o+8|0;h=k[(k[t>>2]|0)+212>>2]|0;m=p+8|0;q=k[(k[m>>2]|0)+212>>2]|0;d=By(12)|0;g=q;l=h;if(!(i[(k[t>>2]|0)+118>>0]|0))n=h;else{l=k[(k[(k[l+8>>2]|0)+140>>2]|0)+48>>2]|0;n=l;o=h}if(!(i[(k[m>>2]|0)+118>>0]|0))t=q;else{g=k[(k[(k[g+8>>2]|0)+140>>2]|0)+48>>2]|0;t=g;p=q}q=k[(k[(k[n+8>>2]|0)+140>>2]|0)+44>>2]|0;s=k[(k[(k[t+8>>2]|0)+140>>2]|0)+44>>2]|0;if((q|0)<=(s|0))if((s|0)>(q|0)){Jo(d,g,p,0,b);l=s+-1|0;h=(k[(k[g+8>>2]|0)+140>>2]|0)+48|0;if((l|0)>(q|0)){m=g;while(1){g=k[h>>2]|0;Jo(d,g,m,0,b);l=l+-1|0;h=(k[(k[g+8>>2]|0)+140>>2]|0)+48|0;if((l|0)<=(q|0))break;else m=g}}m=k[h>>2]|0;l=o}else{m=t;l=o;g=p}else{Jo(d,l,o,0,b);h=q+-1|0;g=(k[(k[l+8>>2]|0)+140>>2]|0)+48|0;if((h|0)>(s|0)){m=l;while(1){l=k[g>>2]|0;Jo(d,l,m,0,b);h=h+-1|0;g=(k[(k[l+8>>2]|0)+140>>2]|0)+48|0;if((h|0)<=(s|0))break;else m=l}}n=k[g>>2]|0;m=t;g=p}h=n;if((h|0)!=(m|0))do{Jo(d,h,0,l,b);h=m;Jo(d,h,g,0,b);l=n;n=k[(k[(k[n+8>>2]|0)+140>>2]|0)+48>>2]|0;g=m;m=k[(k[(k[h+8>>2]|0)+140>>2]|0)+48>>2]|0;h=n}while((h|0)!=(m|0));Jo(d,h,g,l,b);g=d+8|0;if(!(an(k[g>>2]|0,k[d>>2]|0)|0)){if(!(i[137280]|0)){c=1;break}QN(130738,50,1,x)|0;c=1;break}h=xH(k[g>>2]|0,k[d>>2]|0)|0;if(!h){Yr(0,130654,y)|0;c=1;break}if(f){l=f;do{t=l+8|0;s=(k[t>>2]|0)+144|0;Zi(v,l,h,0,k[g>>2]|0,k[d>>2]|0);p=v;q=k[p+4>>2]|0;k[s>>2]=k[p>>2];k[s+4>>2]=q;_i(a,l,k[g>>2]|0,k[d>>2]|0,0);l=k[(k[t>>2]|0)+172>>2]|0}while((l|0)!=0)}k[d>>2]=0}while(0);f=Gs(a,f)|0}while((f|0)!=0);u=Lt(a,u)|0}while((u|0)!=0);if(d){vP(k[d+8>>2]|0);vP(d)}if(e){vP(k[e+84>>2]|0);vP(e)}}else c=0;r=z;return c|0}function Jo(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0.0,h=0.0,j=0.0,l=0.0,m=0.0,n=0.0,q=0.0,r=0,s=0,t=0,u=0,v=0,w=0.0,x=0.0,y=0.0;f=Kt(b)|0;if(f)do{v=k[f+8>>2]|0;if(!((f|0)==(d|0)|((f|0)==(c|0)?1:(k[v+212>>2]|0)!=(b|0)))?(i[v+118>>0]|0)==0:0)Ko(a,Yi(f,e,0)|0);f=Lt(b,f)|0}while((f|0)!=0);t=b+8|0;f=k[t>>2]|0;if((k[f+180>>2]|0)>=1){u=e+8|0;v=e+4|0;s=1;while(1){b=k[(k[f+184>>2]|0)+(s<<2)>>2]|0;if(!((b|0)==(c|0)|(b|0)==(d|0))){r=By(8)|0;f=k[b+8>>2]|0;g=+p[f+16>>3];n=+p[f+24>>3];q=+p[f+32>>3];l=+p[f+40>>3];k[r+4>>2]=4;f=By(64)|0;k[r>>2]=f;h=+o[e>>2];j=+o[v>>2];if(!(i[u>>0]|0)){x=h;y=j;w=(g+q)*.5*(x+-1.0);h=(n+l)*.5*(y+-1.0);m=g*x-w;j=l*y-h;h=n*y-h;g=q*x-w}else{y=h;h=j;m=g-y;j=l+h;h=n-h;g=q+y}p[f>>3]=m;p[f+8>>3]=h;p[f+16>>3]=m;p[f+24>>3]=j;p[f+32>>3]=g;p[f+40>>3]=j;p[f+48>>3]=g;p[f+56>>3]=h;Ko(a,r);f=k[t>>2]|0}if((s|0)<(k[f+180>>2]|0))s=s+1|0;else break}}return}function Ko(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;d=a+4|0;e=k[d>>2]|0;f=a+8|0;c=k[f>>2]|0;do if((e|0)==(k[a>>2]|0))if(!c){c=Cy(400)|0;k[f>>2]=c;k[d>>2]=100;break}else{k[d>>2]=e<<1;c=Ey(c,e<<3)|0;k[f>>2]=c;break}while(0);f=k[a>>2]|0;k[a>>2]=f+1;k[c+(f<<2)>>2]=b;return}function Lo(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0;n=r;r=r+160|0;l=n+16|0;h=n+8|0;d=n;j=n+24|0;m=By(Zs(a)|0)|0;e=a+8|0;f=k[k[(k[e>>2]|0)+140>>2]>>2]|0;if(f){o=ht(a)|0;g=k[12773]|0;k[d>>2]=o;k[d+4>>2]=g;TN(j,130789,d)|0;d=Hu(a,j,1)|0;qu(d,173447,280,1)|0;g=By(56)|0;k[(k[d+8>>2]|0)+140>>2]=g;k[g>>2]=f;k[g+4>>2]=k[(k[(k[e>>2]|0)+140>>2]|0)+4>>2];e=k[f+4>>2]|0;if(!e)e=1;else while(1){if(!(i[m+(k[(k[e+8>>2]|0)+120>>2]|0)>>0]|0))Mo(a,e,d,m);e=k[f+20>>2]|0;if(!e){e=1;break}else f=f+16|0}}else{e=0;d=0}f=Kt(a)|0;if(!f)g=0;else{g=0;do{o=k[f+8>>2]|0;if((i[m+(k[o+120>>2]|0)>>0]|0)==0?(i[o+119>>0]|0)==3:0){if(!d){o=ht(a)|0;d=(k[12773]|0)+e|0;k[h>>2]=o;k[h+4>>2]=d;TN(j,130789,h)|0;d=Hu(a,j,1)|0;qu(d,173447,280,1)|0;o=By(56)|0;k[(k[d+8>>2]|0)+140>>2]=o;e=e+1|0}Mo(a,f,d,m);g=1}f=Lt(a,f)|0}while((f|0)!=0)}if(d)uw(d)|0;d=Kt(a)|0;if(d)do{if(!(i[m+(k[(k[d+8>>2]|0)+120>>2]|0)>>0]|0)){h=ht(a)|0;o=(k[12773]|0)+e|0;k[l>>2]=h;k[l+4>>2]=o;TN(j,130797,l)|0;o=Hu(a,j,1)|0;qu(o,173447,280,1)|0;h=By(56)|0;k[(k[o+8>>2]|0)+140>>2]=h;Mo(a,d,o,m);uw(o)|0;e=e+1|0}d=Lt(a,d)|0}while((d|0)!=0);vP(m);k[12773]=(k[12773]|0)+e;if(b)k[b>>2]=e;if(c)k[c>>2]=g;h=By((e<<2)+4|0)|0;d=Iu(a)|0;if(!d)d=h;else{f=h;g=d;while(1){d=f+4|0;k[f>>2]=g;e=e+-1|0;g=Ju(g)|0;if(!g)break;else f=d}}if(!e){k[d>>2]=0;r=n;return h|0}else Wa(130805,130816,134,130823);return 0}function Mo(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;i[d+(k[(k[b+8>>2]|0)+120>>2]|0)>>0]=1;Pt(c,b,1)|0;e=Js(a,b)|0;if(e)do{g=k[e>>2]&3;f=k[((g|0)==3?e:e+32|0)+28>>2]|0;if((f|0)==(b|0))f=k[((g|0)==2?e:e+-32|0)+28>>2]|0;if(!(i[d+(k[(k[f+8>>2]|0)+120>>2]|0)>>0]|0))Mo(a,f,c,d);e=Ks(a,e,b)|0}while((e|0)!=0);return}function No(a){a=a|0;var b=0,c=0,d=0;b=Cy(24)|0;k[12774]=b;c=Lr(51100,k[12815]|0)|0;k[b>>2]=c;k[b+16>>2]=0;k[b+12>>2]=0;c=Cy(16)|0;k[c+12>>2]=0;d=Cy(a*20|0)|0;k[c>>2]=d;k[c+8>>2]=d+(a*20|0);k[c+4>>2]=d;k[b+4>>2]=c;return b|0}function Oo(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=a+12|0;c=k[e>>2]|0;if((c|0)<(b|0)){d=c<<1;d=(d|0)<(b|0)?b:d;c=a+16|0;b=k[c>>2]|0;if(b)vP(b);a=Cy(d<<3)|0;k[c>>2]=a;k[e>>2]=d}return}function Po(a){a=a|0;var b=0;b=k[a>>2]|0;Tb[k[b>>2]&63](b,0,64)|0;k[a+20>>2]=k[a+16>>2];b=k[a+4>>2]|0;k[a+8>>2]=b;k[b+4>>2]=k[b>>2];return}function Qo(a){a=a|0;var b=0,c=0;Hr(k[a>>2]|0)|0;b=k[a+4>>2]|0;if(b)do{c=b;b=k[b+12>>2]|0;vP(k[c>>2]|0);vP(c)}while((b|0)!=0);vP(k[a+16>>2]|0);vP(a);return}function Ro(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;f=r;r=r+32|0;e=f;g=f+12|0;k[g>>2]=b;k[g+4>>2]=c;h=k[a>>2]|0;g=(Tb[k[h>>2]&63](h,g,1)|0)+8|0;h=k[g>>2]|0;i=a+20|0;a=k[i>>2]|0;k[i>>2]=a+8;k[a>>2]=d;k[a+4>>2]=h;k[g>>2]=a;if((l[137280]|0)>2){i=k[24528]|0;h=ht(d)|0;k[e>>2]=b;k[e+4>>2]=c;k[e+8>>2]=h;FN(i,130833,e)|0}r=f;return}function So(a,b){a=a|0;b=b|0;Sr(k[a>>2]|0,b,a)|0;return}function To(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=r;r=r+32|0;e=d;k[e>>2]=b;k[e+4>>2]=c;c=k[a>>2]|0;c=Tb[k[c>>2]&63](c,e,4)|0;r=d;return c|0}function Uo(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;f=(k[12774]|0)+8|0;a=k[f>>2]|0;c=k[a+4>>2]|0;if((c|0)==(k[a+8>>2]|0)){d=a+12|0;e=k[d>>2]|0;if(!e){c=(c-(k[a>>2]|0)|0)/20|0;a=Cy(16)|0;k[a+12>>2]=0;e=Cy(c*40|0)|0;k[a>>2]=e;k[a+8>>2]=e+((c<<1)*20|0);k[a+4>>2]=e;k[d>>2]=a}else a=e;k[f>>2]=a;c=k[a>>2]|0;k[a+4>>2]=c}k[a+4>>2]=c+20;k[c>>2]=k[b>>2];k[c+4>>2]=k[b+4>>2];k[c+8>>2]=0;return c|0}function Vo(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=k[b>>2]|0;d=k[c>>2]|0;if((a|0)==(d|0))a=(k[b+4>>2]|0)-(k[c+4>>2]|0)|0;else a=a-d|0;return a|0}function Wo(a){a=a|0;vP(k[a+8>>2]|0);vP(a);return}function Xo(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;b=k[b>>2]|0;if((b|0)>=(k[c>>2]|0)){b=b+10|0;k[c>>2]=b;a=Ey(k[d>>2]|0,ha(a<<3,b)|0)|0;k[d>>2]=a;a=Ey(k[e>>2]|0,k[c>>2]<<3)|0;k[e>>2]=a;e=Ey(k[f>>2]|0,k[c>>2]<<3)|0;k[f>>2]=e}return}function Yo(a,b,c,d,e,f,g,h,i,j,l){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;l=l|0;var m=0,n=0,o=0,q=0,r=0,s=0,t=0,u=0.0;p[j>>3]=+p[j>>3]+1.0;a:do if(a){t=k[a+16>>2]|0;m=k[a+40>>2]|0;if(m){s=(t|0)>0;do{Xo(t,e,f,g,h,i);r=(Oq(m)|0)+16|0;if((~~+p[r>>3]|0)!=(d|0)){n=(Oq(m)|0)+8|0;n=k[n>>2]|0;if(s){o=ha(k[e>>2]|0,t)|0;q=k[g>>2]|0;r=0;do{p[q+(o+r<<3)>>3]=+p[n+(r<<3)>>3];r=r+1|0}while((r|0)!=(t|0))}r=Oq(m)|0;p[(k[h>>2]|0)+(k[e>>2]<<3)>>3]=+p[r>>3];u=+Qp(c,n,t);r=k[e>>2]|0;p[(k[i>>2]|0)+(r<<3)>>3]=u;k[e>>2]=r+1}m=Pq(m)|0}while((m|0)!=0)}o=a+36|0;if(k[o>>2]|0){u=+Qp(k[a+20>>2]|0,c,t);if(!(+p[a+24>>3]<u*b)){n=1<<t;if((t|0)==31)break;else m=0;while(1){Yo(k[(k[o>>2]|0)+(m<<2)>>2]|0,b,c,d,e,f,g,h,i,j,l);m=m+1|0;if((m|0)>=(n|0))break a}}Xo(t,e,f,g,h,i);if((t|0)>0){m=k[a+32>>2]|0;n=k[e>>2]|0;r=ha(n,t)|0;o=k[g>>2]|0;q=0;do{p[o+(r+q<<3)>>3]=+p[m+(q<<3)>>3];q=q+1|0}while((q|0)!=(t|0))}else{n=k[e>>2]|0;m=k[a+32>>2]|0}p[(k[h>>2]|0)+(n<<3)>>3]=+p[a+8>>3];u=+Qp(m,c,t);h=k[e>>2]|0;p[(k[i>>2]|0)+(h<<3)>>3]=u;k[e>>2]=h+1}}while(0);return}function Zo(a,b,c,d,e,f,g,h,i,j,l){a=a|0;b=+b;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;l=l|0;var m=0;m=k[a+16>>2]|0;p[j>>3]=0.0;k[e>>2]=0;k[l>>2]=0;k[f>>2]=10;if(!(k[g>>2]|0)){m=Cy(m*80|0)|0;k[g>>2]=m}if(!(k[h>>2]|0)){m=Cy(k[f>>2]<<3)|0;k[h>>2]=m}if(!(k[i>>2]|0)){m=Cy(k[f>>2]<<3)|0;k[i>>2]=m}Yo(a,b,c,d,e,f,g,h,i,j,l);return}function _o(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=+d;e=+e;f=+f;g=g|0;h=h|0;var i=0,j=0;i=k[a>>2]|0;j=k[a+16>>2]|0;k[g>>2]=0;k[g+4>>2]=0;k[g+8>>2]=0;k[g+12>>2]=0;k[g+16>>2]=0;k[g+20>>2]=0;k[g+24>>2]=0;k[g+28>>2]=0;k[h>>2]=0;h=ha(j,i)|0;if((h|0)>0)IP(b|0,0,h<<3|0)|0;dp(a,a,c,b,d,e,f,g);ep(a,b,g);e=+(i|0);p[g>>3]=+p[g>>3]/e;j=g+8|0;p[j>>3]=+p[j>>3]/e;j=g+16|0;p[j>>3]=+p[j>>3]/e;j=g+24|0;p[j>>3]=+p[j>>3]/e;return}function $o(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0.0,i=0.0,j=0.0,k=0,l=0,m=0,n=0,o=0,q=0,r=0;o=a<<3;m=Cy(o)|0;n=Cy(o)|0;o=Cy(o)|0;if((m|0)!=0&(n|0)!=0&(o|0)!=0){l=(a|0)>0;if(l){f=0;do{p[m+(f<<3)>>3]=+p[d+(f<<3)>>3];f=f+1|0}while((f|0)!=(a|0));if(l){f=0;do{p[n+(f<<3)>>3]=+p[d+(f<<3)>>3];f=f+1|0}while((f|0)!=(a|0))}}if((b|0)>1){g=1;do{if(l){f=ha(g,a)|0;k=0;do{q=m+(k<<3)|0;j=+p[q>>3];r=d+(k+f<<3)|0;i=+p[r>>3];p[q>>3]=j<i?j:i;q=n+(k<<3)|0;i=+p[q>>3];j=+p[r>>3];p[q>>3]=i>j?i:j;k=k+1|0}while((k|0)!=(a|0))}g=g+1|0}while((g|0)!=(b|0))}i=+p[n>>3];j=+p[m>>3];h=i-j;if(l){p[o>>3]=(j+i)*.5;j=+p[n>>3]-+p[m>>3];h=h>j?h:j;if((a|0)!=1){f=1;do{p[o+(f<<3)>>3]=(+p[m+(f<<3)>>3]+ +p[n+(f<<3)>>3])*.5;j=+p[n+(f<<3)>>3]-+p[m+(f<<3)>>3];h=h>j?h:j;f=f+1|0}while((f|0)!=(a|0))}}f=ap(a,o,h==0.0?5.2e-06:h*.52,c)|0;g=(b|0)>0;if(!e){if(g){g=0;do{if(!f)f=0;else f=fp(f,d+((ha(g,a)|0)<<3)|0,1.0,g,0)|0;g=g+1|0}while((g|0)!=(b|0))}}else if(g){g=0;do{if(!f)f=0;else f=fp(f,d+((ha(g,a)|0)<<3)|0,+p[e+(g<<3)>>3],g,0)|0;g=g+1|0}while((g|0)!=(b|0))}vP(m);vP(n);vP(o)}else f=0;return f|0}function ap(a,b,c,d){a=a|0;b=b|0;c=+c;d=d|0;var e=0,f=0,g=0;e=Cy(56)|0;k[e+16>>2]=a;k[e>>2]=0;f=Cy(a<<3)|0;k[e+20>>2]=f;if((a|0)>0){g=0;do{p[f+(g<<3)>>3]=+p[b+(g<<3)>>3];g=g+1|0}while((g|0)!=(a|0))}if(c>0.0){p[e+24>>3]=c;p[e+8>>3]=0.0;k[e+32>>2]=0;k[e+36>>2]=0;k[e+40>>2]=0;k[e+44>>2]=d;k[e+48>>2]=0;return e|0}else Wa(130850,130860,405,130871);return 0}function bp(a){a=a|0;var b=0,c=0,d=0,e=0;if(a){e=k[a+16>>2]|0;vP(k[a+20>>2]|0);vP(k[a+32>>2]|0);b=k[a+48>>2]|0;if(b)vP(b);c=a+36|0;b=k[c>>2]|0;if(b){d=1<<e;if((e|0)!=31){bp(k[b>>2]|0);if((d|0)>1){b=1;do{bp(k[(k[c>>2]|0)+(b<<2)>>2]|0);b=b+1|0}while((b|0)<(d|0))}b=k[c>>2]|0}vP(b)}Mq(k[a+40>>2]|0,96);vP(a)}return}function cp(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;var f=0,g=0,h=0.0;f=ap(a,b,c,d)|0;g=k[f+20>>2]|0;if((a|0)>0){h=-c;b=e;d=0;while(1){e=g+(d<<3)|0;p[e>>3]=((b&1|0)==0?h:c)+ +p[e>>3];d=d+1|0;if((d|0)==(a|0))break;else b=(b|0)/2|0}}return f|0}function dp(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=+f;g=+g;h=h|0;var i=0,j=0,l=0.0,m=0,n=0.0,o=0,q=0.0,r=0,s=0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0;a:do if((a|0)!=0&(b|0)!=0){if((k[a>>2]|0)>0?(k[b>>2]|0)>0:0){y=k[a+16>>2]|0;r=k[a+40>>2]|0;x=b+40|0;m=k[x>>2]|0;i=a+32|0;o=b+32|0;t=+Qp(k[i>>2]|0,k[o>>2]|0,y);l=+p[a+24>>3];n=+p[b+24>>3];if(l+n<t*e){p[h>>3]=+p[h>>3]+1.0;s=k[i>>2]|0;n=+p[a+8>>3];m=a+48|0;i=k[m>>2]|0;if(!i){j=y<<3;i=Cy(j)|0;k[m>>2]=i;if((y|0)>0)IP(i|0,0,j|0)|0}r=k[o>>2]|0;l=+p[b+8>>3];o=b+48|0;j=k[o>>2]|0;if(!j){m=y<<3;j=Cy(m)|0;k[o>>2]=j;if((y|0)>0)IP(j|0,0,m|0)|0}if(!(t>0.0))Wa(131087,130860,191,131053);if((y|0)<=0)break;o=f==-1.0;e=n*l*g;q=t*t;n=1.0-f;m=0;while(1){if(o)l=q;else l=+Y(+t,+n);g=e*(+p[s+(m<<3)>>3]-+p[r+(m<<3)>>3])/l;c=i+(m<<3)|0;p[c>>3]=g+ +p[c>>3];c=j+(m<<3)|0;p[c>>3]=+p[c>>3]-g;m=m+1|0;if((m|0)==(y|0))break a}}j=(r|0)!=0;i=(m|0)!=0;w=(a|0)==(b|0);if(j&i){b=h+8|0;u=(y|0)>0;v=f==-1.0;f=1.0-f;while(1){s=(Oq(r)|0)+8|0;s=k[s>>2]|0;a=Oq(r)|0;t=+p[a>>3];a=(Oq(r)|0)+16|0;a=~~+p[a>>3];h=hp(d,a,r,y)|0;i=k[x>>2]|0;if(i)do{m=(Oq(i)|0)+8|0;m=k[m>>2]|0;j=Oq(i)|0;l=+p[j>>3];j=(Oq(i)|0)+16|0;j=~~+p[j>>3];o=hp(d,j,i,y)|0;if((a|0)==(j|0)|w&(j|0)<(a|0))i=Pq(i)|0;else{p[b>>3]=+p[b>>3]+1.0;q=+Op(c,y,a,j);if(u){n=t*l*g;e=q*q;j=0;do{if(v)l=e;else l=+Y(+q,+f);l=n*(+p[s+(j<<3)>>3]-+p[m+(j<<3)>>3])/l;z=h+(j<<3)|0;p[z>>3]=l+ +p[z>>3];z=o+(j<<3)|0;p[z>>3]=+p[z>>3]-l;j=j+1|0}while((j|0)!=(y|0))}i=Pq(i)|0}}while((i|0)!=0);r=Pq(r)|0;if(!r)break a}}if(w){r=1<<y;if((y|0)==31)break;i=a+36|0;o=0;while(1){j=k[(k[i>>2]|0)+(o<<2)>>2]|0;if((o|0)<(r|0)?(dp(j,j,c,d,e,f,g,h),s=o+1|0,(s|0)!=(r|0)):0){m=s;do{dp(j,k[(k[i>>2]|0)+(m<<2)>>2]|0,c,d,e,f,g,h);m=m+1|0}while((m|0)!=(r|0))}o=o+1|0;if((o|0)>=(r|0))break a}}if(!(j|!(l>n))){m=1<<y;if((y|0)==31)break;i=a+36|0;j=0;while(1){dp(k[(k[i>>2]|0)+(j<<2)>>2]|0,b,c,d,e,f,g,h);j=j+1|0;if((j|0)>=(m|0))break a}}if(!(i|!(n>l))){m=1<<y;if((y|0)==31)break;i=b+36|0;j=0;while(1){dp(k[(k[i>>2]|0)+(j<<2)>>2]|0,a,c,d,e,f,g,h);j=j+1|0;if((j|0)>=(m|0))break a}}if(!j){m=1<<y;if((y|0)==31)break;i=a+36|0;j=0;while(1){dp(k[(k[i>>2]|0)+(j<<2)>>2]|0,b,c,d,e,f,g,h);j=j+1|0;if((j|0)>=(m|0))break a}}if(i)Wa(174497,130860,273,131053);m=1<<y;if((y|0)==31)break;i=b+36|0;j=0;while(1){dp(k[(k[i>>2]|0)+(j<<2)>>2]|0,a,c,d,e,f,g,h);j=j+1|0;if((j|0)>=(m|0))break a}}Wa(131028,130860,175,131053)}while(0);return}function ep(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0.0,r=0;g=k[a+40>>2]|0;o=k[a+16>>2]|0;q=+p[a+8>>3];h=a+48|0;d=k[h>>2]|0;if(!d){f=o<<3;d=Cy(f)|0;k[h>>2]=d;if((o|0)>0){IP(d|0,0,f|0)|0;n=d}else n=d}else n=d;if(!(q>0.0))Wa(130973,130860,289,130981);l=c+16|0;p[l>>3]=+p[l>>3]+1.0;a:do if(!g){l=1<<o;if((o|0)!=31){g=a+36|0;h=o<<3;a=(o|0)>0;j=0;while(1){i=k[(k[g>>2]|0)+(j<<2)>>2]|0;if(i){if((k[i>>2]|0)<=0)break;f=i+48|0;d=k[f>>2]|0;if(!d){d=Cy(h)|0;k[f>>2]=d;if(a){IP(d|0,0,h|0)|0;m=20}}else if(a)m=20;if((m|0)==20){m=0;e=+p[i+8>>3]/q;f=0;do{r=d+(f<<3)|0;p[r>>3]=+p[r>>3]+e*+p[n+(f<<3)>>3];f=f+1|0}while((f|0)!=(o|0))}ep(i,b,c)}j=j+1|0;if((j|0)>=(l|0))break a}Wa(131017,130860,307,130981)}}else{h=(o|0)>0;do{d=(Oq(g)|0)+16|0;d=hp(b,~~+p[d>>3],g,o)|0;r=Oq(g)|0;e=+p[r>>3]/q;if(h){f=0;do{r=d+(f<<3)|0;p[r>>3]=+p[r>>3]+e*+p[n+(f<<3)>>3];f=f+1|0}while((f|0)!=(o|0))}g=Pq(g)|0}while((g|0)!=0)}while(0);return}function fp(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;var f=0,g=0,h=0,i=0.0,j=0.0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,u=0,v=0;v=a+16|0;t=k[v>>2]|0;u=k[a+44>>2]|0;l=k[a>>2]|0;do if(!l){k[a>>2]=1;p[a+8>>3]=c;h=Cy(t<<3)|0;k[a+32>>2]=h;f=k[v>>2]|0;if((f|0)>0){g=0;do{p[h+(g<<3)>>3]=+p[b+(g<<3)>>3];g=g+1|0}while((g|0)<(f|0))}f=gp(f,c,b,d)|0;g=a+40|0;if(!(k[g>>2]|0)){v=Lq(f)|0;k[g>>2]=v;break}else Wa(130884,130860,497,130892)}else{if((u|0)<=(e|0)){if(k[a+36>>2]|0)Wa(130958,130860,536,130892);f=l+1|0;k[a>>2]=f;s=a+8|0;p[s>>3]=+p[s>>3]+c;if((t|0)>0){g=k[a+32>>2]|0;i=+(f|0);j=+(l+2|0);f=0;do{s=g+(f<<3)|0;p[s>>3]=(+p[b+(f<<3)>>3]+ +p[s>>3]*i)/j;f=f+1|0}while((f|0)<(t|0))}f=gp(t,c,b,d)|0;g=a+40|0;h=k[g>>2]|0;if(!h)Wa(130968,130860,542,130892);else{v=Nq(h,f)|0;k[g>>2]=v;break}}r=a+8|0;p[r>>3]=+p[r>>3]+c;r=(t|0)>0;if(r){g=k[a+32>>2]|0;j=+(l|0);i=+(l+1|0);f=0;do{s=g+(f<<3)|0;p[s>>3]=(+p[b+(f<<3)>>3]+ +p[s>>3]*j)/i;f=f+1|0}while((f|0)<(t|0))}s=a+36|0;if(((k[s>>2]|0)==0?(n=1<<t,m=Cy(n<<2)|0,k[s>>2]=m,(t|0)!=31):0)?(k[m>>2]=0,(n|0)>1):0){f=1;do{k[(k[s>>2]|0)+(f<<2)>>2]=0;f=f+1|0}while((f|0)<(n|0))}o=a+20|0;h=k[o>>2]|0;if(r){f=0;g=t;do{q=g;g=g+-1|0;f=!(+p[b+(g<<3)>>3]-+p[h+(g<<3)>>3]<0.0)&1|f<<1}while((q|0)>1)}else f=0;q=1<<t;if(!((f|0)<(q|0)&(f|0)>-1))Wa(130914,130860,510,130892);g=k[(k[s>>2]|0)+(f<<2)>>2]|0;if(!g){g=cp(k[v>>2]|0,h,+p[a+24>>3]*.5,u,f)|0;k[(k[s>>2]|0)+(f<<2)>>2]=g;g=k[(k[s>>2]|0)+(f<<2)>>2]|0}e=e+1|0;d=fp(g,b,c,d,e)|0;k[(k[s>>2]|0)+(f<<2)>>2]=d;if(!(k[(k[s>>2]|0)+(f<<2)>>2]|0))Wa(130937,130860,514,130892);n=a+40|0;f=k[n>>2]|0;do if(f){l=(Oq(f)|0)+16|0;l=~~+p[l>>3];if((k[a>>2]|0)!=1)Wa(130948,130860,518,130892);m=(Oq(k[n>>2]|0)|0)+8|0;m=k[m>>2]|0;h=Oq(k[n>>2]|0)|0;i=+p[h>>3];h=k[o>>2]|0;if(r){f=0;g=t;do{t=g;g=g+-1|0;f=!(+p[m+(g<<3)>>3]-+p[h+(g<<3)>>3]<0.0)&1|f<<1}while((t|0)>1);g=f}else g=0;if(!((g|0)<(q|0)&(g|0)>-1))Wa(130914,130860,522,130892);f=k[(k[s>>2]|0)+(g<<2)>>2]|0;if(!f){f=cp(k[v>>2]|0,h,+p[a+24>>3]*.5,u,g)|0;k[(k[s>>2]|0)+(g<<2)>>2]=f;f=k[(k[s>>2]|0)+(g<<2)>>2]|0}v=fp(f,m,i,l,e)|0;k[(k[s>>2]|0)+(g<<2)>>2]=v;if(!(k[(k[s>>2]|0)+(g<<2)>>2]|0))Wa(130937,130860,527,130892);else{Mq(k[n>>2]|0,96);k[n>>2]=0;break}}while(0);k[a>>2]=(k[a>>2]|0)+1}while(0);return a|0}function gp(a,b,c,d){a=a|0;b=+b;c=c|0;d=d|0;var e=0,f=0;f=Cy(32)|0;p[f>>3]=b;e=Cy(a<<3)|0;k[f+8>>2]=e;p[f+16>>3]=+(d|0);if((a|0)>0){d=0;do{p[e+(d<<3)>>3]=+p[c+(d<<3)>>3];d=d+1|0}while((d|0)!=(a|0))}k[f+24>>2]=0;return f|0}function hp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=(Oq(c)|0)+24|0;e=k[e>>2]|0;if(!e){b=a+((ha(d,b)|0)<<3)|0;e=(Oq(c)|0)+24|0;k[e>>2]=b;e=(Oq(c)|0)+24|0;e=k[e>>2]|0}return e|0}function ip(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0.0,t=0,u=0;o=k[a+20>>2]|0;q=k[a+24>>2]|0;d=k[a+8>>2]|0;r=k[a>>2]|0;c=k[a+4>>2]|0;h=a+16|0;b=k[h>>2]|0;a:do if(!a)b=0;else{if((k[a+32>>2]|0)!=1)Wa(131096,131120,75,131135);b=lp(c,r,d,b,1)|0;k[b+8>>2]=d;n=k[b+20>>2]|0;m=k[b+24>>2]|0;if((c|0)>=0)IP(n|0,0,(c<<2)+4|0)|0;j=(r|0)>0;if(j){e=k[o>>2]|0;g=0;while(1){g=g+1|0;f=o+(g<<2)|0;d=k[f>>2]|0;if((e|0)<(d|0))do{d=n+((k[q+(e<<2)>>2]|0)+1<<2)|0;k[d>>2]=(k[d>>2]|0)+1;e=e+1|0;d=k[f>>2]|0}while((e|0)<(d|0));if((g|0)==(r|0))break;else e=d}}l=(c|0)>0;if(l){d=k[n>>2]|0;e=0;do{e=e+1|0;i=n+(e<<2)|0;d=(k[i>>2]|0)+d|0;k[i>>2]=d}while((e|0)!=(c|0))}switch(k[h>>2]|0){case 1:{a=k[a+28>>2]|0;i=k[b+28>>2]|0;if(j){e=k[o>>2]|0;h=0;while(1){g=h;h=h+1|0;f=o+(h<<2)|0;d=k[f>>2]|0;if((e|0)<(d|0))do{j=q+(e<<2)|0;k[m+(k[n+(k[j>>2]<<2)>>2]<<2)>>2]=g;s=+p[a+(e<<3)>>3];j=n+(k[j>>2]<<2)|0;d=k[j>>2]|0;k[j>>2]=d+1;p[i+(d<<3)>>3]=s;e=e+1|0;d=k[f>>2]|0}while((e|0)<(d|0));if((h|0)==(r|0))break;else e=d}}break}case 2:{a=k[a+28>>2]|0;i=k[b+28>>2]|0;if(j){e=k[o>>2]|0;h=0;while(1){g=h;h=h+1|0;f=o+(h<<2)|0;d=k[f>>2]|0;if((e|0)<(d|0))do{d=q+(e<<2)|0;k[m+(k[n+(k[d>>2]<<2)>>2]<<2)>>2]=g;u=e<<1;d=n+(k[d>>2]<<2)|0;j=k[d>>2]|0;t=j<<1;p[i+(t<<3)>>3]=+p[a+(u<<3)>>3];p[i+((t|1)<<3)>>3]=+p[a+((u|1)<<3)>>3];k[d>>2]=j+1;e=e+1|0;d=k[f>>2]|0}while((e|0)<(d|0));if((h|0)==(r|0))break;else e=d}}break}case 4:{a=k[a+28>>2]|0;i=k[b+28>>2]|0;if(j){e=k[o>>2]|0;h=0;while(1){g=h;h=h+1|0;f=o+(h<<2)|0;d=k[f>>2]|0;if((e|0)<(d|0))do{t=q+(e<<2)|0;k[m+(k[n+(k[t>>2]<<2)>>2]<<2)>>2]=g;u=k[a+(e<<2)>>2]|0;t=n+(k[t>>2]<<2)|0;d=k[t>>2]|0;k[t>>2]=d+1;k[i+(d<<2)>>2]=u;e=e+1|0;d=k[f>>2]|0}while((e|0)<(d|0));if((h|0)==(r|0))break;else e=d}}break}case 8:{if(j){e=k[o>>2]|0;h=0;while(1){g=h;h=h+1|0;f=o+(h<<2)|0;d=k[f>>2]|0;if((e|0)<(d|0))do{u=n+(k[q+(e<<2)>>2]<<2)|0;d=k[u>>2]|0;k[u>>2]=d+1;k[m+(d<<2)>>2]=g;e=e+1|0;d=k[f>>2]|0}while((e|0)<(d|0));if((h|0)==(r|0))break;else e=d}}break}case 16:{jp(b);b=0;break a}default:{jp(b);b=0;break a}}if(l)do{u=c;c=c+-1|0;k[n+(u<<2)>>2]=k[n+(c<<2)>>2]}while((u|0)>1);k[n>>2]=0}while(0);return b|0}function jp(a){a=a|0;var b=0;if(a){b=k[a+20>>2]|0;if(b)vP(b);b=k[a+24>>2]|0;if(b)vP(b);b=k[a+28>>2]|0;if(b)vP(b);vP(a)}return}function kp(a,b){a=a|0;b=b|0;if(!(mp(a,b)|0)){b=ip(a)|0;if(!b)b=0;else{a=op(a,b)|0;jp(b);b=a+36|0;k[b>>2]=k[b>>2]|3;b=a}}else b=np(a)|0;return b|0}function lp(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;switch(d|0){case 1:{f=8;break}case 2:{f=16;break}case 4:{f=4;break}case 8:{f=0;break}case 16:{f=0;break}default:f=0}e=Dp(a,b,d,f,e)|0;if((c|0)>0)e=Ep(e,c)|0;return e|0}function mp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0.0;if((k[a+32>>2]|0)!=1)Wa(131096,131120,184,131158);s=a+36|0;c=k[s>>2]|0;if((c&2|0)==0?(t=(b|0)!=0,(c&1|0)==0|t^1):0)if((k[a>>2]|0)==(k[a+4>>2]|0)?(v=ip(a)|0,(v|0)!=0):0){l=k[a+20>>2]|0;m=k[a+24>>2]|0;n=k[v+20>>2]|0;o=k[v+24>>2]|0;q=k[a>>2]|0;c=q<<2;r=Cy(c)|0;b=(q|0)>0;if(b)IP(r|0,-1,c|0)|0;a:do switch((t?8:k[a+16>>2]|0)|0){case 1:{h=k[a+28>>2]|0;i=k[v+28>>2]|0;if((q|0)>=0){c=0;while(1){if((k[l+(c<<2)>>2]|0)!=(k[n+(c<<2)>>2]|0)){c=0;break a}if((c|0)<(q|0))c=c+1|0;else break}}if(b){g=0;while(1){f=l+(g<<2)|0;c=k[f>>2]|0;a=g;g=g+1|0;b=l+(g<<2)|0;if((c|0)<(k[b>>2]|0))do{k[r+(k[m+(c<<2)>>2]<<2)>>2]=c;c=c+1|0}while((c|0)<(k[b>>2]|0));c=k[n+(a<<2)>>2]|0;e=k[n+(g<<2)>>2]|0;d=(c|0)<(e|0);if(d){b=k[f>>2]|0;a=c;do{if((k[r+(k[o+(a<<2)>>2]<<2)>>2]|0)<(b|0)){c=0;break a}a=a+1|0}while((a|0)<(e|0));if(d)do{w=+p[i+(c<<3)>>3]-+p[h+(k[r+(k[o+(c<<2)>>2]<<2)>>2]<<3)>>3];c=c+1|0;if((w>=0.0?w:-w)>1.0e-07){c=0;break a}}while((c|0)<(e|0))}if((g|0)>=(q|0)){u=60;break}}}else u=60;break}case 2:{h=k[a+28>>2]|0;i=k[v+28>>2]|0;if((q|0)>=0){c=0;while(1){if((k[l+(c<<2)>>2]|0)!=(k[n+(c<<2)>>2]|0)){c=0;break a}if((c|0)<(q|0))c=c+1|0;else break}}if(b){g=0;while(1){e=l+(g<<2)|0;c=k[e>>2]|0;a=g;g=g+1|0;b=l+(g<<2)|0;if((c|0)<(k[b>>2]|0))do{k[r+(k[m+(c<<2)>>2]<<2)>>2]=c;c=c+1|0}while((c|0)<(k[b>>2]|0));a=k[n+(a<<2)>>2]|0;f=k[n+(g<<2)>>2]|0;d=(a|0)<(f|0);if(d){c=k[e>>2]|0;b=a;do{if((k[r+(k[o+(b<<2)>>2]<<2)>>2]|0)<(c|0)){c=0;break a}b=b+1|0}while((b|0)<(f|0));if(d)do{c=a<<1;b=k[r+(k[o+(a<<2)>>2]<<2)>>2]<<1;w=+p[i+(c<<3)>>3]-+p[h+(b<<3)>>3];if((w>=0.0?w:-w)>1.0e-07){c=0;break a}w=+p[i+((c|1)<<3)>>3]-+p[h+((b|1)<<3)>>3];a=a+1|0;if((w>=0.0?w:-w)>1.0e-07){c=0;break a}}while((a|0)<(f|0))}if((g|0)>=(q|0)){u=60;break}}}else u=60;break}case 4:{i=k[a+28>>2]|0;j=k[v+28>>2]|0;if(b){b=k[l>>2]|0;h=0;while(1){g=l+(h<<2)|0;d=h;h=h+1|0;a=l+(h<<2)|0;c=k[a>>2]|0;if((b|0)<(c|0)){c=b;do{k[r+(k[m+(c<<2)>>2]<<2)>>2]=c;c=c+1|0;b=k[a>>2]|0}while((c|0)<(b|0))}else b=c;c=k[n+(d<<2)>>2]|0;f=k[n+(h<<2)>>2]|0;e=(c|0)<(f|0);if(e){a=k[g>>2]|0;d=c;do{if((k[r+(k[o+(d<<2)>>2]<<2)>>2]|0)<(a|0)){c=0;break a}d=d+1|0}while((d|0)<(f|0));if(e)do{if((k[j+(c<<2)>>2]|0)!=(k[i+(k[r+(k[o+(c<<2)>>2]<<2)>>2]<<2)>>2]|0)){c=0;break a}c=c+1|0}while((c|0)<(f|0))}if((h|0)>=(q|0)){u=60;break}}}else u=60;break}case 8:{if(b){b=k[l>>2]|0;f=0;while(1){e=l+(f<<2)|0;d=f;f=f+1|0;a=l+(f<<2)|0;c=k[a>>2]|0;if((b|0)<(c|0)){c=b;do{k[r+(k[m+(c<<2)>>2]<<2)>>2]=c;c=c+1|0;b=k[a>>2]|0}while((c|0)<(b|0))}else b=c;c=k[n+(d<<2)>>2]|0;d=k[n+(f<<2)>>2]|0;if((c|0)<(d|0)){a=k[e>>2]|0;do{if((k[r+(k[o+(c<<2)>>2]<<2)>>2]|0)<(a|0)){c=0;break a}c=c+1|0}while((c|0)<(d|0))}if((f|0)>=(q|0)){u=60;break}}}else u=60;break}default:c=0}while(0);do if((u|0)==60){c=k[s>>2]|0;if(t){k[s>>2]=c|1;c=1;break}else{k[s>>2]=c|3;c=1;break}}while(0);vP(r);jp(v)}else c=0;else c=1;return c|0}function np(a){a=a|0;var b=0,c=0,d=0;if(!a)b=0;else{d=a+8|0;b=lp(k[a>>2]|0,k[a+4>>2]|0,k[d>>2]|0,k[a+16>>2]|0,k[a+32>>2]|0)|0;c=a+20|0;GP(k[b+20>>2]|0,k[c>>2]|0,(k[a>>2]<<2)+4|0)|0;GP(k[b+24>>2]|0,k[a+24>>2]|0,k[(k[c>>2]|0)+(k[a>>2]<<2)>>2]<<2|0)|0;c=k[a+28>>2]|0;if(c)GP(k[b+28>>2]|0,c|0,ha(k[d>>2]|0,k[a+40>>2]|0)|0)|0;k[b+36>>2]=k[a+36>>2];k[b+8>>2]=k[d>>2]}return b|0}function op(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0.0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;r=k[a+20>>2]|0;t=k[a+24>>2]|0;v=k[b+20>>2]|0;w=k[b+24>>2]|0;if(!((a|0)!=0&(b|0)!=0))Wa(131184,131120,972,131191);u=k[a+32>>2]|0;if(!((u|0)==1?(u|0)==(k[b+32>>2]|0):0))Wa(131208,131120,973,131191);e=a+16|0;d=k[e>>2]|0;if((d|0)!=(k[b+16>>2]|0))Wa(131258,131120,974,131191);s=k[a>>2]|0;f=k[a+4>>2]|0;if(((s|0)==(k[b>>2]|0)?(f|0)==(k[b+4>>2]|0):0)?(c=lp(s,f,(k[b+8>>2]|0)+(k[a+8>>2]|0)|0,d,1)|0,(c|0)!=0):0){o=k[c+20>>2]|0;q=k[c+24>>2]|0;d=f<<2;u=Cy(d)|0;if((f|0)>0)IP(u|0,-1,d|0)|0;k[o>>2]=0;switch(k[e>>2]|0){case 1:{n=k[a+28>>2]|0;j=k[b+28>>2]|0;l=k[c+28>>2]|0;if((s|0)>0){m=0;d=0;do{e=k[r+(m<<2)>>2]|0;a=m;m=m+1|0;f=r+(m<<2)|0;if((e|0)<(k[f>>2]|0))do{i=t+(e<<2)|0;k[u+(k[i>>2]<<2)>>2]=d;k[q+(d<<2)>>2]=k[i>>2];p[l+(d<<3)>>3]=+p[n+(e<<3)>>3];d=d+1|0;e=e+1|0}while((e|0)<(k[f>>2]|0));f=k[v+(a<<2)>>2]|0;i=v+(m<<2)|0;e=k[i>>2]|0;if((f|0)<(e|0)){h=o+(a<<2)|0;do{a=k[w+(f<<2)>>2]|0;b=k[u+(a<<2)>>2]|0;g=+p[j+(f<<3)>>3];if((b|0)<(k[h>>2]|0)){k[q+(d<<2)>>2]=a;p[l+(d<<3)>>3]=g;e=k[i>>2]|0;d=d+1|0}else{b=l+(b<<3)|0;p[b>>3]=g+ +p[b>>3]}f=f+1|0}while((f|0)<(e|0))}k[o+(m<<2)>>2]=d}while((m|0)!=(s|0))}else d=0;break}case 2:{n=k[a+28>>2]|0;j=k[b+28>>2]|0;l=k[c+28>>2]|0;if((s|0)>0){m=0;d=0;do{e=k[r+(m<<2)>>2]|0;a=m;m=m+1|0;f=r+(m<<2)|0;if((e|0)<(k[f>>2]|0))do{h=t+(e<<2)|0;k[u+(k[h>>2]<<2)>>2]=d;k[q+(d<<2)>>2]=k[h>>2];h=e<<1;i=d<<1;p[l+(i<<3)>>3]=+p[n+(h<<3)>>3];p[l+((i|1)<<3)>>3]=+p[n+((h|1)<<3)>>3];d=d+1|0;e=e+1|0}while((e|0)<(k[f>>2]|0));f=k[v+(a<<2)>>2]|0;i=v+(m<<2)|0;e=k[i>>2]|0;if((f|0)<(e|0)){h=o+(a<<2)|0;do{a=k[w+(f<<2)>>2]|0;b=k[u+(a<<2)>>2]|0;if((b|0)<(k[h>>2]|0)){k[q+(d<<2)>>2]=a;b=f<<1;e=d<<1;p[l+(e<<3)>>3]=+p[j+(b<<3)>>3];p[l+((e|1)<<3)>>3]=+p[j+((b|1)<<3)>>3];e=k[i>>2]|0;d=d+1|0}else{a=f<<1;b=b<<1;x=l+(b<<3)|0;p[x>>3]=+p[j+(a<<3)>>3]+ +p[x>>3];b=l+((b|1)<<3)|0;p[b>>3]=+p[j+((a|1)<<3)>>3]+ +p[b>>3]}f=f+1|0}while((f|0)<(e|0))}k[o+(m<<2)>>2]=d}while((m|0)!=(s|0))}else d=0;break}case 4:{m=k[a+28>>2]|0;i=k[b+28>>2]|0;j=k[c+28>>2]|0;if((s|0)>0){l=0;d=0;do{e=k[r+(l<<2)>>2]|0;a=l;l=l+1|0;f=r+(l<<2)|0;if((e|0)<(k[f>>2]|0))do{x=t+(e<<2)|0;k[u+(k[x>>2]<<2)>>2]=d;k[q+(d<<2)>>2]=k[x>>2];k[j+(d<<2)>>2]=k[m+(e<<2)>>2];d=d+1|0;e=e+1|0}while((e|0)<(k[f>>2]|0));e=k[v+(a<<2)>>2]|0;h=v+(l<<2)|0;if((e|0)<(k[h>>2]|0)){b=o+(a<<2)|0;do{f=k[w+(e<<2)>>2]|0;a=k[u+(f<<2)>>2]|0;if((a|0)<(k[b>>2]|0)){k[q+(d<<2)>>2]=f;k[j+(d<<2)>>2]=k[i+(e<<2)>>2];d=d+1|0}else{x=j+(a<<2)|0;k[x>>2]=(k[x>>2]|0)+(k[i+(e<<2)>>2]|0)}e=e+1|0}while((e|0)<(k[h>>2]|0))}k[o+(l<<2)>>2]=d}while((l|0)!=(s|0))}else d=0;break}case 8:{if((s|0)>0){i=0;d=0;do{e=k[r+(i<<2)>>2]|0;a=i;i=i+1|0;f=r+(i<<2)|0;if((e|0)<(k[f>>2]|0))do{x=t+(e<<2)|0;k[u+(k[x>>2]<<2)>>2]=d;k[q+(d<<2)>>2]=k[x>>2];d=d+1|0;e=e+1|0}while((e|0)<(k[f>>2]|0));f=k[v+(a<<2)>>2]|0;h=v+(i<<2)|0;e=k[h>>2]|0;if((f|0)<(e|0)){b=o+(a<<2)|0;a=f;do{f=k[w+(a<<2)>>2]|0;if((k[u+(f<<2)>>2]|0)<(k[b>>2]|0)){k[q+(d<<2)>>2]=f;e=k[h>>2]|0;d=d+1|0}a=a+1|0}while((a|0)<(e|0))}k[o+(i<<2)>>2]=d}while((i|0)!=(s|0))}else d=0;break}default:d=0}k[c+8>>2]=d;if(u)vP(u)}else c=0;return c|0}function pp(a,b){a=a|0;b=b|0;if(!(mp(a,b)|0)){b=ip(a)|0;if(!b)b=0;else{a=op(a,b)|0;jp(b);b=a+36|0;k[b>>2]=k[b>>2]|3;b=qp(a)|0}}else b=qp(np(a)|0)|0;return b|0}function qp(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0;a:do if(!a)a=0;else{j=k[a+20>>2]|0;l=k[a+24>>2]|0;d=k[j>>2]|0;switch(k[a+16>>2]|0){case 1:{h=k[a+28>>2]|0;if((k[a>>2]|0)>0){i=0;b=0;while(1){f=i;i=i+1|0;g=j+(i<<2)|0;c=k[g>>2]|0;if((d|0)<(c|0))do{e=k[l+(d<<2)>>2]|0;if((e|0)!=(f|0)){k[l+(b<<2)>>2]=e;p[h+(b<<3)>>3]=+p[h+(d<<3)>>3];c=k[g>>2]|0;b=b+1|0}d=d+1|0}while((d|0)<(c|0));k[g>>2]=b;if((i|0)>=(k[a>>2]|0))break;else d=c}}else b=0;k[a+8>>2]=b;break a}case 2:{h=k[a+28>>2]|0;if((k[a>>2]|0)>0){i=0;b=0;while(1){f=i;i=i+1|0;g=j+(i<<2)|0;c=k[g>>2]|0;if((d|0)<(c|0))do{e=k[l+(d<<2)>>2]|0;if((e|0)!=(f|0)){k[l+(b<<2)>>2]=e;e=d<<1;c=b<<1;p[h+(c<<3)>>3]=+p[h+(e<<3)>>3];p[h+((c|1)<<3)>>3]=+p[h+((e|1)<<3)>>3];c=k[g>>2]|0;b=b+1|0}d=d+1|0}while((d|0)<(c|0));k[g>>2]=b;if((i|0)>=(k[a>>2]|0))break;else d=c}}else b=0;k[a+8>>2]=b;break a}case 4:{h=k[a+28>>2]|0;if((k[a>>2]|0)>0){i=0;b=0;while(1){f=i;i=i+1|0;g=j+(i<<2)|0;c=k[g>>2]|0;if((d|0)<(c|0))do{e=k[l+(d<<2)>>2]|0;if((e|0)!=(f|0)){k[l+(b<<2)>>2]=e;k[h+(b<<2)>>2]=k[h+(d<<2)>>2];c=k[g>>2]|0;b=b+1|0}d=d+1|0}while((d|0)<(c|0));k[g>>2]=b;if((i|0)>=(k[a>>2]|0))break;else d=c}}else b=0;k[a+8>>2]=b;break a}case 8:{if((k[a>>2]|0)>0){h=0;b=0;while(1){f=h;h=h+1|0;g=j+(h<<2)|0;c=k[g>>2]|0;if((d|0)<(c|0)){e=d;do{d=k[l+(e<<2)>>2]|0;if((d|0)!=(f|0)){k[l+(b<<2)>>2]=d;c=k[g>>2]|0;b=b+1|0}e=e+1|0}while((e|0)<(c|0))}k[g>>2]=b;if((h|0)>=(k[a>>2]|0))break;else d=c}}else b=0;k[a+8>>2]=b;break a}default:{a=0;break a}}}while(0);return a|0}function rp(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;f=Dp(a,b,d,e,f)|0;if((c|0)>0)f=Ep(f,c)|0;return f|0}function sp(a){a=a|0;if((k[a+32>>2]|0)==2)return Fp(k[a+8>>2]|0,k[a>>2]|0,k[a+4>>2]|0,k[a+20>>2]|0,k[a+24>>2]|0,k[a+28>>2]|0,k[a+16>>2]|0,k[a+40>>2]|0,1)|0;else Wa(131277,131120,802,131303);return 0}function tp(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;return Fp(a,b,c,d,e,f,g,h,1)|0}function up(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0;v=r;r=r+16|0;l=v;if(!d){if((k[a+32>>2]|0)!=1)Wa(131096,131120,1120,131339);if((k[a+16>>2]|0)!=1)Wa(131368,131120,1121,131339);u=k[a+28>>2]|0;q=k[a+20>>2]|0;s=k[a+24>>2]|0;t=k[a>>2]|0;o=k[a+4>>2]|0;d=k[e>>2]|0;h=(d|0)!=0;if(!b){if(!h)d=Cy(ha(g<<3,t)|0)|0;if((t|0)>0){a=(g|0)>0;b=g<<3;o=0;do{m=ha(o,g)|0;if(a)IP(d+(m<<3)|0,0,b|0)|0;h=k[q+(o<<2)>>2]|0;o=o+1|0;n=k[q+(o<<2)>>2]|0;if((h|0)<(n|0))do{if(a){i=u+(h<<3)|0;j=ha(k[s+(h<<2)>>2]|0,g)|0;l=0;do{w=d+(l+m<<3)|0;p[w>>3]=+p[w>>3]+ +p[i>>3]*+p[c+(l+j<<3)>>3];l=l+1|0}while((l|0)!=(g|0))}h=h+1|0}while((h|0)!=(n|0))}while((o|0)!=(t|0))}if(f)Gp(d,t,g)}else{if(!h)d=Cy(ha(g<<3,o)|0)|0;h=ha(o,g)|0;if((h|0)>0)IP(d|0,0,h<<3|0)|0;if((t|0)>0){b=(g|0)>0;m=k[q>>2]|0;n=0;do{h=n;n=n+1|0;i=m;m=k[q+(n<<2)>>2]|0;if((i|0)<(m|0)){a=ha(h,g)|0;do{if(b){h=u+(i<<3)|0;j=ha(k[s+(i<<2)>>2]|0,g)|0;l=0;do{w=d+(l+j<<3)|0;p[w>>3]=+p[h>>3]*+p[c+(l+a<<3)>>3]+ +p[w>>3];l=l+1|0}while((l|0)!=(g|0))}i=i+1|0}while((i|0)!=(m|0))}}while((n|0)!=(t|0))}if(f)Gp(d,o,g)}k[e>>2]=d}else{if((k[a+32>>2]|0)!=1)Wa(131096,131120,1162,131396);if((k[a+16>>2]|0)!=1)Wa(131368,131120,1163,131396);d=k[e>>2]|0;i=k[a>>2]|0;j=k[a+4>>2]|0;h=(d|0)!=0;if(!b){if(!h)d=Cy(ha(g<<3,i)|0)|0;if((g|0)>0){h=0;do{w=d+((ha(h,i)|0)<<3)|0;k[l>>2]=w;vp(a,c+((ha(h,j)|0)<<3)|0,l,0);h=h+1|0}while((h|0)!=(g|0))}if(!f)Gp(d,g,i)}else{if(!h)d=Cy(ha(g<<3,j)|0)|0;if((g|0)>0){h=0;do{w=d+((ha(h,j)|0)<<3)|0;k[l>>2]=w;vp(a,c+((ha(h,i)|0)<<3)|0,l,b);h=h+1|0}while((h|0)!=(g|0))}if(!f)Gp(d,g,j)}k[e>>2]=d}r=v;return}
function Pz(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0.0,n=0,o=0.0,q=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;C=r;r=r+80|0;A=C;i=d&2130706432;y=(d&8|0)==0?((i|0)==0?4:i):8;B=By((c<<6)+64|0)|0;z=(c|0)>0;if(z){f=c+-1|0;g=b+8|0;m=12.0;h=0;do{n=(h|0)<(f|0);x=h;h=h+1|0;v=+p[(n?b+(h<<4)|0:b)>>3]-+p[b+(x<<4)>>3];w=+p[(n?b+(h<<4)+8|0:g)>>3]-+p[b+(x<<4)+8>>3];w=+X(+(v*v+w*w))/3.0;m=m<w?m:w}while((h|0)!=(c|0));if(z){x=c+-1|0;l=(d&2113929216|0)==67108864;n=(y|0)==4;d=(i|0)==16777216;i=b+8|0;h=0;j=0;while(1){v=+p[b+(j<<4)>>3];w=+p[b+(j<<4)+8>>3];if((j|0)<(x|0)){f=j+1|0;g=b+(f<<4)+8|0;f=b+(f<<4)|0}else{g=i;f=b}u=+p[f>>3]-v;s=+p[g>>3]-w;t=m/+X(+(u*u+s*s));t=l?t/3.0:d?t*.5:t;f=h+1|0;if(n){q=t*.5;o=w+s*q;q=v+u*q}else{o=w;q=v}p[B+(h<<4)>>3]=q;p[B+(h<<4)+8>>3]=o;g=h+2|0;p[B+(f<<4)>>3]=v+u*t;p[B+(f<<4)+8>>3]=w+s*t;f=h+3|0;q=1.0-t;p[B+(g<<4)>>3]=v+u*q;p[B+(g<<4)+8>>3]=w+s*q;if(n){t=1.0-t*.5;p[B+(f<<4)>>3]=v+u*t;p[B+(f<<4)+8>>3]=w+s*t;f=h+4|0}j=j+1|0;if((j|0)==(c|0))break;else h=f}}else f=0}else f=0;x=B+(f<<4)|0;k[x>>2]=k[B>>2];k[x+4>>2]=k[B+4>>2];k[x+8>>2]=k[B+8>>2];k[x+12>>2]=k[B+12>>2];x=B+(f+1<<4)|0;d=B+16|0;k[x>>2]=k[d>>2];k[x+4>>2]=k[d+4>>2];k[x+8>>2]=k[d+8>>2];k[x+12>>2]=k[d+12>>2];x=B+(f+2<<4)|0;i=B+32|0;k[x>>2]=k[i>>2];k[x+4>>2]=k[i+4>>2];k[x+8>>2]=k[i+8>>2];k[x+12>>2]=k[i+12>>2];a:do if((y|0)<201326592){if((y|0)>=83886080){if((y|0)<134217728){if((y|0)<100663296){switch(y|0){case 83886080:break;default:break a}if((c|0)==4){c=By(192)|0;k[c>>2]=k[b>>2];k[c+4>>2]=k[b+4>>2];k[c+8>>2]=k[b+8>>2];k[c+12>>2]=k[b+12>>2];G=c+16|0;l=b+16|0;k[G>>2]=k[l>>2];k[G+4>>2]=k[l+4>>2];k[G+8>>2]=k[l+8>>2];k[G+12>>2]=k[l+12>>2];G=B+48|0;q=+p[G>>3];l=B+64|0;q=q+(+p[l>>3]-q);h=c+32|0;p[h>>3]=q;E=B+56|0;v=+p[E>>3];f=B+72|0;v=v+(+p[f>>3]-v);n=c+40|0;p[n>>3]=v;w=q+(+p[G>>3]-+p[i>>3]);F=c+48|0;p[F>>3]=w;s=v+(+p[E>>3]-+p[B+40>>3]);D=c+56|0;p[D>>3]=s;u=w+(+p[l>>3]-+p[G>>3]);G=c+64|0;p[G>>3]=u;t=s+(+p[f>>3]-+p[E>>3]);E=c+72|0;p[E>>3]=t;f=c+80|0;p[f>>3]=u+(q-w);p[c+88>>3]=t+(v-s);l=B+96|0;s=+p[l>>3];d=B+80|0;s=s+(+p[d>>3]-s);z=c+144|0;p[z>>3]=s;y=B+104|0;v=+p[y>>3];g=B+88|0;v=v+(+p[g>>3]-v);p[c+152>>3]=v;t=s+(+p[l>>3]-+p[B+112>>3]);j=c+128|0;p[j>>3]=t;w=v+(+p[y>>3]-+p[B+120>>3]);x=c+136|0;p[x>>3]=w;q=t+(+p[d>>3]-+p[l>>3]);l=c+112|0;p[l>>3]=q;u=w+(+p[g>>3]-+p[y>>3]);y=c+120|0;p[y>>3]=u;g=c+96|0;p[g>>3]=q+(s-t);d=c+104|0;p[d>>3]=u+(v-w);i=c+160|0;H=b+32|0;k[i>>2]=k[H>>2];k[i+4>>2]=k[H+4>>2];k[i+8>>2]=k[H+8>>2];k[i+12>>2]=k[H+12>>2];i=c+176|0;b=b+48|0;k[i>>2]=k[b>>2];k[i+4>>2]=k[b+4>>2];k[i+8>>2]=k[b+8>>2];k[i+12>>2]=k[b+12>>2];ID(a,c,12,e);k[A>>2]=k[h>>2];k[A+4>>2]=k[h+4>>2];k[A+8>>2]=k[h+8>>2];k[A+12>>2]=k[h+12>>2];w=+p[h>>3];w=w-(+p[F>>3]-w);h=A+16|0;p[h>>3]=w;v=+p[n>>3];v=v-(+p[D>>3]-v);i=A+24|0;p[i>>3]=v;n=A+32|0;p[n>>3]=w+(+p[G>>3]-+p[F>>3]);b=A+40|0;p[b>>3]=v+(+p[E>>3]-+p[D>>3]);e=A+48|0;k[e>>2]=k[f>>2];k[e+4>>2]=k[f+4>>2];k[e+8>>2]=k[f+8>>2];k[e+12>>2]=k[f+12>>2];LD(a,A,4);k[A>>2]=k[g>>2];k[A+4>>2]=k[g+4>>2];k[A+8>>2]=k[g+8>>2];k[A+12>>2]=k[g+12>>2];v=+p[g>>3];v=v-(+p[l>>3]-v);p[h>>3]=v;w=+p[d>>3];w=w-(+p[y>>3]-w);p[i>>3]=w;p[n>>3]=v+(+p[j>>3]-+p[l>>3]);p[b>>3]=w+(+p[x>>3]-+p[y>>3]);k[e>>2]=k[z>>2];k[e+4>>2]=k[z+4>>2];k[e+8>>2]=k[z+8>>2];k[e+12>>2]=k[z+12>>2];LD(a,A,4);vP(c);break}else Wa(141351,141362,711,141371)}if((y|0)<117440512){switch(y|0){case 100663296:break;default:break a}D=c+5|0;H=By(D<<4)|0;E=b+16|0;w=+p[E>>3];u=+p[b>>3]-w;u=u*.125+(w+u*.5);p[H>>3]=u;F=b+40|0;w=+p[F>>3];G=b+24|0;y=B+48|0;z=B+56|0;c=B+72|0;w=w+(+p[G>>3]-w)*.5+(+p[z>>3]-+p[c>>3])*3.0*.5;p[H+8>>3]=w;t=+p[E>>3];v=+p[b>>3]-t;v=t+v*.5-v*.25;p[H+16>>3]=v;p[H+24>>3]=w;p[H+32>>3]=v;t=+p[F>>3];p[H+40>>3]=t+(+p[G>>3]-t)*.5;v=v+(+p[i>>3]-+p[y>>3])*.5;p[H+48>>3]=v;t=+p[F>>3];p[H+56>>3]=t+(+p[G>>3]-t)*.5;p[H+64>>3]=v;v=+p[F>>3];v=v+(+p[G>>3]-v)*.5+(+p[z>>3]-+p[c>>3]);p[H+72>>3]=v;p[H+80>>3]=u;p[H+88>>3]=v;p[H+96>>3]=u;v=v-(+p[z>>3]-+p[c>>3])*.25;p[H+104>>3]=v;p[H+112>>3]=u+(+p[i>>3]-+p[y>>3]);p[H+120>>3]=v+(+p[z>>3]-+p[c>>3])*.5;p[H+128>>3]=+p[H>>3];p[H+136>>3]=w+(+p[z>>3]-+p[c>>3])*.25;ID(a,H,D,e);p[A>>3]=+p[E>>3];w=+p[F>>3];p[A+8>>3]=w+(+p[G>>3]-w)*.5;p[A+16>>3]=+p[b>>3];p[A+24>>3]=w+(+p[b+8>>3]-+p[b+56>>3])*.5;LD(a,A,2);vP(H);break}else{switch(y|0){case 117440512:break;default:break a}G=c+1|0;H=By(G<<4)|0;p[H>>3]=+p[d>>3];E=B+56|0;F=B+72|0;p[H+8>>3]=+p[B+24>>3]-(+p[E>>3]-+p[F>>3])*.5;p[H+16>>3]=+p[B+48>>3];w=+p[E>>3];p[H+24>>3]=w-(w-+p[F>>3])*.5;p[H+32>>3]=+p[b+32>>3];D=b+40|0;p[H+40>>3]=+p[D>>3]+(+p[E>>3]-+p[F>>3])*.5;p[H+48>>3]=+p[d>>3];p[H+56>>3]=+p[D>>3]+(+p[E>>3]-+p[F>>3])*.5;w=+p[b+8>>3];p[H+72>>3]=w-(w-+p[b+56>>3])*.5;p[H+64>>3]=+p[b>>3];ID(a,H,G,e);vP(H);break}}if((y|0)<167772160)if((y|0)<150994944){switch(y|0){case 134217728:break;default:break a}D=c+4|0;H=By(D<<4)|0;E=b+16|0;t=+p[E>>3];c=B+48|0;t=t+(+p[b>>3]-t)*.5+(+p[i>>3]-+p[c>>3])*.25;p[H>>3]=t;F=b+40|0;w=+p[F>>3];G=b+24|0;w=w+(+p[G>>3]-w)*.5;p[H+8>>3]=w;p[H+16>>3]=t;y=B+56|0;z=B+72|0;u=w+(+p[y>>3]-+p[z>>3])*.5;p[H+24>>3]=u;t=t+(+p[i>>3]-+p[c>>3])*.5;p[H+32>>3]=t;p[H+40>>3]=u;p[H+48>>3]=t;t=u+(+p[y>>3]-+p[z>>3])*.5;p[H+56>>3]=t;v=+p[E>>3];v=v+(+p[b>>3]-v)*.5-(+p[i>>3]-+p[c>>3])*3.0*.25;p[H+64>>3]=v;p[H+72>>3]=t;p[H+80>>3]=v;p[H+88>>3]=u;v=+p[E>>3];v=v+(+p[b>>3]-v)*.5-(+p[i>>3]-+p[c>>3])*.25;p[H+96>>3]=v;p[H+104>>3]=u;p[H+112>>3]=v;p[H+120>>3]=w;ID(a,H,D,e);p[A>>3]=+p[E>>3];w=+p[F>>3];p[A+8>>3]=w+(+p[G>>3]-w)*.5;p[A+16>>3]=+p[b>>3];p[A+24>>3]=w+(+p[b+8>>3]-+p[b+56>>3])*.5;LD(a,A,2);vP(H);break}else{switch(y|0){case 150994944:break;default:break a}D=c+2|0;H=By(D<<4)|0;E=b+16|0;u=+p[E>>3];c=B+48|0;u=u+(+p[b>>3]-u)*.5+(+p[i>>3]-+p[c>>3])*3.0*.25;p[H>>3]=u;F=b+40|0;w=+p[F>>3];G=b+24|0;w=w+(+p[G>>3]-w)*.5;p[H+8>>3]=w;p[H+16>>3]=u;y=B+56|0;z=B+72|0;u=w+(+p[y>>3]-+p[z>>3])*.25;p[H+24>>3]=u;v=+p[E>>3];p[H+32>>3]=v+(+p[b>>3]-v)*.5+(+p[i>>3]-+p[c>>3])*.25;v=u+(+p[y>>3]-+p[z>>3])*.5;p[H+40>>3]=v;t=+p[E>>3];p[H+48>>3]=t+(+p[b>>3]-t)*.5-(+p[i>>3]-+p[c>>3])*.25;p[H+56>>3]=v;v=+p[E>>3];v=v+(+p[b>>3]-v)*.5-(+p[i>>3]-+p[c>>3])*3.0*.25;p[H+64>>3]=v;p[H+72>>3]=u;p[H+80>>3]=v;p[H+88>>3]=w;ID(a,H,D,e);p[A>>3]=+p[E>>3];w=+p[F>>3];p[A+8>>3]=w+(+p[G>>3]-w)*.5;p[A+16>>3]=+p[b>>3];p[A+24>>3]=w+(+p[b+8>>3]-+p[b+56>>3])*.5;LD(a,A,2);vP(H);break}else if((y|0)<184549376){switch(y|0){case 167772160:break;default:break a}D=c+1|0;H=By(D<<4)|0;E=b+16|0;u=+p[E>>3];y=B+48|0;u=u+(+p[b>>3]-u)*.5+(+p[i>>3]-+p[y>>3]);p[H>>3]=u;F=b+40|0;w=+p[F>>3];G=b+24|0;z=B+56|0;c=B+72|0;w=w+(+p[G>>3]-w)*.5+(+p[z>>3]-+p[c>>3])*.25;p[H+8>>3]=w;u=u-(+p[i>>3]-+p[y>>3]);p[H+16>>3]=u;p[H+24>>3]=w+(+p[z>>3]-+p[c>>3]);p[H+32>>3]=u;u=w+(+p[z>>3]-+p[c>>3])*.5;p[H+40>>3]=u;t=+p[E>>3];v=+p[b>>3]-t;v=t+v*.5-v*.25;p[H+48>>3]=v;p[H+56>>3]=u;p[H+64>>3]=v;p[H+72>>3]=w;ID(a,H,D,e);p[A>>3]=+p[E>>3];w=+p[F>>3];p[A+8>>3]=w+(+p[G>>3]-w)*.5;p[A+16>>3]=+p[b>>3];p[A+24>>3]=w+(+p[b+8>>3]-+p[b+56>>3])*.5;LD(a,A,2);vP(H);break}else{switch(y|0){case 184549376:break;default:break a}F=c+4|0;H=By(F<<4)|0;D=b+16|0;u=+p[D>>3];v=+p[b>>3]-u;x=B+48|0;v=v*.125+(u+v*.5)+(+p[i>>3]-+p[x>>3])*.5;p[H>>3]=v;z=b+40|0;u=+p[z>>3];c=b+24|0;G=B+56|0;y=B+72|0;u=u+(+p[c>>3]-u)*.5+(+p[G>>3]-+p[y>>3])*.25;p[H+8>>3]=u;t=+p[D>>3];w=+p[b>>3]-t;w=t+w*.5-w*.125;p[H+16>>3]=w;p[H+24>>3]=u;p[H+32>>3]=w;u=u+(+p[G>>3]-+p[y>>3])*.5;p[H+40>>3]=u;w=w-(+p[i>>3]-+p[x>>3])*.5;p[H+48>>3]=w;p[H+56>>3]=u;E=H+64|0;p[E>>3]=w;w=+p[z>>3];w=w+(+p[c>>3]-w)*.5-(+p[G>>3]-+p[y>>3])*.25;p[H+72>>3]=w;u=v-(+p[i>>3]-+p[x>>3])*.5;p[H+80>>3]=u;p[H+88>>3]=w;p[H+96>>3]=u;w=w-(+p[G>>3]-+p[y>>3])*.5;p[H+104>>3]=w;y=H+112|0;p[y>>3]=v;p[H+120>>3]=w;ID(a,H,F,e);p[A>>3]=+p[D>>3];w=+p[z>>3];e=A+8|0;p[e>>3]=w+(+p[c>>3]-w)*.5;D=A+16|0;p[D>>3]=+p[E>>3];E=b+8|0;F=b+56|0;G=A+24|0;p[G>>3]=w+(+p[E>>3]-+p[F>>3])*.5;LD(a,A,2);p[A>>3]=+p[y>>3];w=+p[z>>3];p[e>>3]=w+(+p[c>>3]-w)*.5;p[D>>3]=+p[b>>3];p[G>>3]=w+(+p[E>>3]-+p[F>>3])*.5;LD(a,A,2);vP(H);break}}if((y|0)>=33554432){if((y|0)<50331648){switch(y|0){case 33554432:break;default:break a}f=c+2|0;g=By(f<<4)|0;k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];h=g+16|0;k[h>>2]=k[i>>2];k[h+4>>2]=k[i+4>>2];k[h+8>>2]=k[i+8>>2];k[h+12>>2]=k[i+12>>2];h=B+48|0;F=B+64|0;p[g+32>>3]=+p[i>>3]+(+p[h>>3]-+p[F>>3])/3.0;G=B+56|0;H=B+72|0;p[g+40>>3]=+p[B+40>>3]+(+p[G>>3]-+p[H>>3])/3.0;w=+p[h>>3];p[g+48>>3]=w+(w-+p[F>>3])/3.0;w=+p[G>>3];p[g+56>>3]=w+(w-+p[H>>3])/3.0;if((f|0)>4){d=4;do{H=g+(d<<4)|0;G=b+(d+-2<<4)|0;k[H>>2]=k[G>>2];k[H+4>>2]=k[G+4>>2];k[H+8>>2]=k[G+8>>2];k[H+12>>2]=k[G+12>>2];d=d+1|0}while((d|0)!=(f|0))}ID(a,g,f,e);vP(g);k[A>>2]=k[h>>2];k[A+4>>2]=k[h+4>>2];k[A+8>>2]=k[h+8>>2];k[A+12>>2]=k[h+12>>2];H=A+16|0;k[H>>2]=k[i>>2];k[H+4>>2]=k[i+4>>2];k[H+8>>2]=k[i+8>>2];k[H+12>>2]=k[i+12>>2];LD(a,A,2);break}if((y|0)>=67108864){switch(y|0){case 67108864:break;default:break a}if((c|0)==4){H=By(96)|0;k[H>>2]=k[b>>2];k[H+4>>2]=k[b+4>>2];k[H+8>>2]=k[b+8>>2];k[H+12>>2]=k[b+12>>2];E=H+16|0;k[E>>2]=k[i>>2];k[E+4>>2]=k[i+4>>2];k[E+8>>2]=k[i+8>>2];k[E+12>>2]=k[i+12>>2];E=H+32|0;F=B+64|0;k[E>>2]=k[F>>2];k[E+4>>2]=k[F+4>>2];k[E+8>>2]=k[F+8>>2];k[E+12>>2]=k[F+12>>2];E=H+48|0;G=b+32|0;k[E>>2]=k[G>>2];k[E+4>>2]=k[G+4>>2];k[E+8>>2]=k[G+8>>2];k[E+12>>2]=k[G+12>>2];E=H+64|0;G=B+128|0;k[E>>2]=k[G>>2];k[E+4>>2]=k[G+4>>2];k[E+8>>2]=k[G+8>>2];k[E+12>>2]=k[G+12>>2];E=H+80|0;D=B+160|0;k[E>>2]=k[D>>2];k[E+4>>2]=k[D+4>>2];k[E+8>>2]=k[D+8>>2];k[E+12>>2]=k[D+12>>2];ID(a,H,6,e);vP(H);p[A>>3]=+p[d>>3]+(+p[B+176>>3]-+p[B>>3]);p[A+8>>3]=+p[B+24>>3]+(+p[B+184>>3]-+p[B+8>>3]);H=A+16|0;k[H>>2]=k[F>>2];k[H+4>>2]=k[F+4>>2];k[H+8>>2]=k[F+8>>2];k[H+12>>2]=k[F+12>>2];LD(a,A,2);k[H>>2]=k[G>>2];k[H+4>>2]=k[G+4>>2];k[H+8>>2]=k[G+8>>2];k[H+12>>2]=k[G+12>>2];LD(a,A,2);k[H>>2]=k[B>>2];k[H+4>>2]=k[B+4>>2];k[H+8>>2]=k[B+8>>2];k[H+12>>2]=k[B+12>>2];LD(a,A,2);break}else Wa(141351,141362,688,141371)}else{switch(y|0){case 50331648:break;default:break a}g=c+3|0;h=By(g<<4)|0;k[h>>2]=k[b>>2];k[h+4>>2]=k[b+4>>2];k[h+8>>2]=k[b+8>>2];k[h+12>>2]=k[b+12>>2];w=+p[b>>3];p[h+16>>3]=w-(w-+p[d>>3])*.25;H=B+56|0;w=+p[b+8>>3]+(+p[H>>3]-+p[B+72>>3])/3.0;p[h+24>>3]=w;v=+p[b>>3];p[h+32>>3]=v-(v-+p[d>>3])*2.0;p[h+40>>3]=w;w=+p[b>>3];p[h+48>>3]=w-(w-+p[d>>3])*2.25;p[h+56>>3]=+p[H>>3];p[h+64>>3]=+p[B+48>>3];p[h+72>>3]=+p[H>>3];if((g|0)>4){f=4;do{H=h+(f<<4)|0;G=b+(f+-3<<4)|0;k[H>>2]=k[G>>2];k[H+4>>2]=k[G+4>>2];k[H+8>>2]=k[G+8>>2];k[H+12>>2]=k[G+12>>2];f=f+1|0}while((f|0)!=(g|0))}ID(a,h,g,e);vP(h);break}}if((y|0)<8){switch(y|0){case 4:break;default:break a}f=c*96|0;n=Cy(f+32|0)|0;if(z){f=n+f|0;i=c*6|0;g=n;h=1;j=0;l=0;while(1){G=l<<2;d=B+(G<<4)|0;k[g>>2]=k[d>>2];k[g+4>>2]=k[d+4>>2];k[g+8>>2]=k[d+8>>2];k[g+12>>2]=k[d+12>>2];d=n+(h<<4)|0;H=B+((G|1)<<4)|0;k[d>>2]=k[H>>2];k[d+4>>2]=k[H+4>>2];k[d+8>>2]=k[H+8>>2];k[d+12>>2]=k[H+12>>2];d=n+(j+2<<4)|0;k[d>>2]=k[H>>2];k[d+4>>2]=k[H+4>>2];k[d+8>>2]=k[H+8>>2];k[d+12>>2]=k[H+12>>2];d=n+(j+3<<4)|0;H=B+((G|2)<<4)|0;k[d>>2]=k[H>>2];k[d+4>>2]=k[H+4>>2];k[d+8>>2]=k[H+8>>2];k[d+12>>2]=k[H+12>>2];d=n+(j+4<<4)|0;k[d>>2]=k[H>>2];k[d+4>>2]=k[H+4>>2];k[d+8>>2]=k[H+8>>2];k[d+12>>2]=k[H+12>>2];d=j+6|0;H=n+(j+5<<4)|0;G=B+((G|3)<<4)|0;k[H>>2]=k[G>>2];k[H+4>>2]=k[G+4>>2];k[H+8>>2]=k[G+8>>2];k[H+12>>2]=k[G+12>>2];l=l+1|0;if((l|0)==(c|0))break;else{g=n+(d<<4)|0;h=d|1;j=d}}g=i|1}else{g=1;f=n};k[f>>2]=k[n>>2];k[f+4>>2]=k[n+4>>2];k[f+8>>2]=k[n+8>>2];k[f+12>>2]=k[n+12>>2];G=n+(g<<4)|0;H=n+16|0;k[G>>2]=k[H>>2];k[G+4>>2]=k[H+4>>2];k[G+8>>2]=k[H+8>>2];k[G+12>>2]=k[H+12>>2];KD(a,H,g,0,0,e&255);vP(n);break}if((y|0)<16777216){switch(y|0){case 8:break;default:break a}ID(a,b,c,e);if(!z)break;f=A+16|0;g=0;do{H=g*3|0;G=B+(H+2<<4)|0;k[A>>2]=k[G>>2];k[A+4>>2]=k[G+4>>2];k[A+8>>2]=k[G+8>>2];k[A+12>>2]=k[G+12>>2];H=B+(H+4<<4)|0;k[f>>2]=k[H>>2];k[f+4>>2]=k[H+4>>2];k[f+8>>2]=k[H+8>>2];k[f+12>>2]=k[H+12>>2];LD(a,A,2);g=g+1|0}while((g|0)!=(c|0))}else{switch(y|0){case 16777216:break;default:break a}f=c+1|0;g=By(f<<4)|0;if((c|0)>1){h=1;do{H=g+(h<<4)|0;G=b+(h<<4)|0;k[H>>2]=k[G>>2];k[H+4>>2]=k[G+4>>2];k[H+8>>2]=k[G+8>>2];k[H+12>>2]=k[G+12>>2];h=h+1|0}while((h|0)!=(c|0))}F=c*3|0;G=B+(F+1<<4)|0;k[g>>2]=k[G>>2];k[g+4>>2]=k[G+4>>2];k[g+8>>2]=k[G+8>>2];k[g+12>>2]=k[G+12>>2];E=g+(c<<4)|0;H=B+(F+-1<<4)|0;k[E>>2]=k[H>>2];k[E+4>>2]=k[H+4>>2];k[E+8>>2]=k[H+8>>2];k[E+12>>2]=k[H+12>>2];ID(a,g,f,e);vP(g);k[A>>2]=k[H>>2];k[A+4>>2]=k[H+4>>2];k[A+8>>2]=k[H+8>>2];k[A+12>>2]=k[H+12>>2];H=A+16|0;k[H>>2]=k[G>>2];k[H+4>>2]=k[G+4>>2];k[H+8>>2]=k[G+8>>2];k[H+12>>2]=k[G+12>>2];G=A+32|0;p[G>>3]=+p[H>>3]+(+p[A>>3]-+p[B+(F<<4)>>3]);p[A+40>>3]=+p[A+24>>3]+(+p[A+8>>3]-+p[B+(F<<4)+8>>3]);LD(a,H,2);k[H>>2]=k[G>>2];k[H+4>>2]=k[G+4>>2];k[H+8>>2]=k[G+8>>2];k[H+12>>2]=k[G+12>>2];LD(a,A,2);break}}else if((y|0)<318767104){if((y|0)<251658240){if((y|0)<218103808){switch(y|0){case 201326592:break;default:break a}H=c<<4;x=By(H)|0;y=b+16|0;w=+p[y>>3];p[x>>3]=w;F=b+40|0;v=+p[F>>3];G=b+24|0;E=B+48|0;z=B+56|0;D=B+72|0;v=v+(+p[G>>3]-v)*.5+(+p[z>>3]-+p[D>>3])*.125;p[x+8>>3]=v;u=w+(+p[i>>3]-+p[E>>3])*2.0;p[x+16>>3]=u;p[x+24>>3]=v;p[x+32>>3]=u;v=v+(+p[z>>3]-+p[D>>3])*.5;p[x+40>>3]=v;p[x+48>>3]=w;p[x+56>>3]=v;ID(a,x,c,e);vP(x);H=By(H)|0;v=+p[y>>3]+(+p[i>>3]-+p[E>>3]);p[H>>3]=v;w=+p[F>>3];w=w+(+p[G>>3]-w)*.5-(+p[z>>3]-+p[D>>3])*5.0*.125;p[H+8>>3]=w;u=v+(+p[i>>3]-+p[E>>3]);E=H+16|0;p[E>>3]=u;p[H+24>>3]=w;p[H+32>>3]=u;w=w+(+p[z>>3]-+p[D>>3])*.5;p[H+40>>3]=w;p[H+48>>3]=v;p[H+56>>3]=w;ID(a,H,c,e);p[A>>3]=+p[E>>3];w=+p[F>>3];p[A+8>>3]=w+(+p[G>>3]-w)*.5;p[A+16>>3]=+p[b>>3];p[A+24>>3]=w+(+p[b+8>>3]-+p[b+56>>3])*.5;LD(a,A,2);vP(H);break}if((y|0)<234881024){switch(y|0){case 218103808:break;default:break a}H=c<<4;z=By(H)|0;w=+p[b>>3];p[z>>3]=w;E=b+40|0;v=+p[E>>3];F=b+24|0;D=B+56|0;G=B+72|0;v=v+(+p[F>>3]-v)*.5+(+p[D>>3]-+p[G>>3])*.125;p[z+8>>3]=v;p[z+16>>3]=w;u=v+(+p[D>>3]-+p[G>>3])*.5;p[z+24>>3]=u;w=w-(+p[D>>3]-+p[G>>3])*2.0;p[z+32>>3]=w;p[z+40>>3]=u;p[z+48>>3]=w;p[z+56>>3]=v;ID(a,z,c,e);vP(z);H=By(H)|0;v=+p[b>>3]-(+p[i>>3]-+p[B+48>>3]);p[H>>3]=v;w=+p[E>>3];w=w+(+p[F>>3]-w)*.5-(+p[D>>3]-+p[G>>3])*5.0*.125;p[H+8>>3]=w;p[H+16>>3]=v;u=w+(+p[D>>3]-+p[G>>3])*.5;p[H+24>>3]=u;v=v-(+p[D>>3]-+p[G>>3]);p[H+32>>3]=v;p[H+40>>3]=u;G=H+48|0;p[G>>3]=v;p[H+56>>3]=w;ID(a,H,c,e);p[A>>3]=+p[b+16>>3];w=+p[E>>3];p[A+8>>3]=w+(+p[F>>3]-w)*.5;p[A+16>>3]=+p[G>>3];p[A+24>>3]=w+(+p[b+8>>3]-+p[b+56>>3])*.5;LD(a,A,2);vP(H);break}else{switch(y|0){case 234881024:break;default:break a}H=c<<4;D=By(H)|0;n=b+16|0;v=+p[n>>3];x=B+48|0;v=v+(+p[b>>3]-v)*.5-(+p[i>>3]-+p[x>>3])*9.0*.125;p[D>>3]=v;y=b+40|0;w=+p[y>>3];z=b+24|0;F=B+56|0;E=B+72|0;w=w+(+p[z>>3]-w)*.5+(+p[F>>3]-+p[E>>3])*.125;p[D+8>>3]=w;u=v+(+p[i>>3]-+p[x>>3]);p[D+16>>3]=u;p[D+24>>3]=w;p[D+32>>3]=u;w=w+(+p[F>>3]-+p[E>>3])*.5;p[D+40>>3]=w;p[D+48>>3]=v;p[D+56>>3]=w;ID(a,D,c,e);vP(D);D=By(H)|0;w=+p[n>>3];w=w+(+p[b>>3]-w)*.5-(+p[i>>3]-+p[x>>3])*9.0*.125;p[D>>3]=w;v=+p[y>>3];v=v+(+p[z>>3]-v)*.5-(+p[F>>3]-+p[E>>3])*5.0*.125;p[D+8>>3]=v;u=w+(+p[i>>3]-+p[x>>3]);p[D+16>>3]=u;p[D+24>>3]=v;p[D+32>>3]=u;v=v+(+p[F>>3]-+p[E>>3])*.5;p[D+40>>3]=v;p[D+48>>3]=w;p[D+56>>3]=v;ID(a,D,c,e);vP(D);D=By(H)|0;v=+p[n>>3];v=v+(+p[b>>3]-v)*.5+(+p[i>>3]-+p[x>>3])*.125;p[D>>3]=v;w=+p[y>>3];w=w+(+p[z>>3]-w)*.5-(+p[F>>3]-+p[E>>3])*5.0*.125;p[D+8>>3]=w;u=v+(+p[i>>3]-+p[x>>3]);p[D+16>>3]=u;p[D+24>>3]=w;p[D+32>>3]=u;w=w+(+p[F>>3]-+p[E>>3])*.5;p[D+40>>3]=w;p[D+48>>3]=v;p[D+56>>3]=w;ID(a,D,c,e);vP(D);H=By(H)|0;w=+p[n>>3];w=w+(+p[b>>3]-w)*.5+(+p[i>>3]-+p[x>>3])*.125;p[H>>3]=w;v=+p[y>>3];v=v+(+p[z>>3]-v)*.5+(+p[F>>3]-+p[E>>3])*.125;p[H+8>>3]=v;u=w+(+p[i>>3]-+p[x>>3]);D=H+16|0;p[D>>3]=u;p[H+24>>3]=v;p[H+32>>3]=u;v=v+(+p[F>>3]-+p[E>>3])*.5;p[H+40>>3]=v;p[H+48>>3]=w;p[H+56>>3]=v;ID(a,H,c,e);p[A>>3]=+p[D>>3];v=+p[y>>3];e=A+8|0;p[e>>3]=v+(+p[z>>3]-v)*.5;D=A+16|0;p[D>>3]=+p[b>>3];E=b+8|0;F=b+56|0;G=A+24|0;p[G>>3]=v+(+p[E>>3]-+p[F>>3])*.5;LD(a,A,2);v=+p[n>>3];p[A>>3]=v+(+p[b>>3]-v)*.5-(+p[i>>3]-+p[x>>3])*9.0*.125;w=+p[y>>3];p[e>>3]=w+(+p[z>>3]-w)*.5;p[D>>3]=v;p[G>>3]=w+(+p[E>>3]-+p[F>>3])*.5;LD(a,A,2);vP(H);break}}if((y|0)<285212672)if((y|0)<268435456){switch(y|0){case 251658240:break;default:break a}H=c<<4;G=By(H)|0;x=b+16|0;w=+p[x>>3];D=B+48|0;w=w+(+p[b>>3]-w)*.5-(+p[i>>3]-+p[D>>3]);p[G>>3]=w;y=b+40|0;v=+p[y>>3];z=b+24|0;F=B+56|0;E=B+72|0;v=v+(+p[z>>3]-v)*.5+(+p[F>>3]-+p[E>>3])*.125;p[G+8>>3]=v;u=w+(+p[i>>3]-+p[D>>3])*2.0;p[G+16>>3]=u;p[G+24>>3]=v;p[G+32>>3]=u;v=v+(+p[F>>3]-+p[E>>3])*.5;p[G+40>>3]=v;p[G+48>>3]=w;p[G+56>>3]=v;ID(a,G,c,e);vP(G);H=By(H)|0;v=+p[x>>3];v=v+(+p[b>>3]-v)*.5-(+p[i>>3]-+p[D>>3]);p[H>>3]=v;w=+p[y>>3];w=w+(+p[z>>3]-w)*.5-(+p[F>>3]-+p[E>>3])*5.0*.125;p[H+8>>3]=w;u=v+(+p[i>>3]-+p[D>>3])*2.0;D=H+16|0;p[D>>3]=u;p[H+24>>3]=w;p[H+32>>3]=u;w=w+(+p[F>>3]-+p[E>>3])*.5;p[H+40>>3]=w;p[H+48>>3]=v;p[H+56>>3]=w;ID(a,H,c,e);p[A>>3]=+p[D>>3];w=+p[y>>3];e=A+8|0;p[e>>3]=w+(+p[z>>3]-w)*.5;D=A+16|0;p[D>>3]=+p[b>>3];E=b+8|0;F=b+56|0;G=A+24|0;p[G>>3]=w+(+p[E>>3]-+p[F>>3])*.5;LD(a,A,2);p[A>>3]=+p[x>>3];w=+p[y>>3];p[e>>3]=w+(+p[z>>3]-w)*.5;p[D>>3]=+p[H>>3];p[G>>3]=w+(+p[E>>3]-+p[F>>3])*.5;LD(a,A,2);vP(H);break}else{switch(y|0){case 268435456:break;default:break a}H=By(c<<4)|0;p[H>>3]=+p[b>>3];E=B+48|0;y=B+56|0;z=B+72|0;p[H+8>>3]=+p[B+24>>3]-(+p[y>>3]-+p[z>>3])*.5;p[H+16>>3]=+p[E>>3];w=+p[y>>3];p[H+24>>3]=w-(w-+p[z>>3])*.5;p[H+32>>3]=+p[b+32>>3];x=b+40|0;p[H+40>>3]=+p[x>>3]+(+p[y>>3]-+p[z>>3])*.5;p[H+48>>3]=+p[b>>3];p[H+56>>3]=+p[x>>3]+(+p[y>>3]-+p[z>>3])*.5;ID(a,H,c,e);e=b+16|0;w=+p[e>>3]+(+p[i>>3]-+p[E>>3])*.25;p[A>>3]=w;v=+p[x>>3];c=b+24|0;v=v+(+p[c>>3]-v)*.5+(+p[y>>3]-+p[z>>3])*.125;D=A+8|0;p[D>>3]=v;F=A+16|0;p[F>>3]=w+(+p[i>>3]-+p[E>>3])*.25;G=A+24|0;p[G>>3]=v-(+p[y>>3]-+p[z>>3])*.25;LD(a,A,2);v=+p[e>>3]+(+p[i>>3]-+p[E>>3])*.25;p[A>>3]=v;w=+p[x>>3];w=w+(+p[c>>3]-w)*.5-(+p[y>>3]-+p[z>>3])*.125;p[D>>3]=w;p[F>>3]=v+(+p[i>>3]-+p[E>>3])*.25;p[G>>3]=w+(+p[y>>3]-+p[z>>3])*.25;LD(a,A,2);p[A>>3]=+p[e>>3]+(+p[i>>3]-+p[E>>3])*.25;w=+p[x>>3]+(+p[y>>3]-+p[z>>3])*3.0*.25;p[D>>3]=w;p[F>>3]=+p[b>>3]-(+p[i>>3]-+p[E>>3])*.25;p[G>>3]=w;LD(a,A,2);vP(H);break}else if((y|0)<301989888){switch(y|0){case 285212672:break;default:break a}E=By(c<<4)|0;x=b+16|0;u=+p[x>>3];D=B+48|0;u=u+(+p[b>>3]-u)*.5+(+p[i>>3]-+p[D>>3])*.5;p[E>>3]=u;y=b+40|0;t=+p[y>>3];z=b+24|0;t=t+(+p[z>>3]-t)*.5+(+p[i>>3]-+p[D>>3])*.5;p[E+8>>3]=t;p[E+16>>3]=u;u=+p[y>>3];w=(+p[i>>3]-+p[D>>3])*.5;u=u+(+p[z>>3]-u)*.5-w;p[E+24>>3]=u;v=+p[x>>3];w=v+(+p[b>>3]-v)*.5-w;p[E+32>>3]=w;p[E+40>>3]=u;p[E+48>>3]=w;p[E+56>>3]=t;ID(a,E,c,e);vP(E);t=+p[x>>3];t=t+(+p[b>>3]-t)*.5;w=t+(+p[i>>3]-+p[D>>3])*3.0*.25;p[A>>3]=w;u=+p[y>>3];u=u+(+p[z>>3]-u)*.5;v=u+(+p[i>>3]-+p[D>>3])*3.0*.25;e=A+8|0;p[e>>3]=v;E=A+16|0;p[E>>3]=w;w=(+p[i>>3]-+p[D>>3])*3.0*.25;u=u-w;H=A+24|0;p[H>>3]=u;w=t-w;p[A+32>>3]=w;p[A+40>>3]=u;p[A+48>>3]=w;p[A+56>>3]=v;F=A+64|0;k[F>>2]=k[A>>2];k[F+4>>2]=k[A+4>>2];k[F+8>>2]=k[A+8>>2];k[F+12>>2]=k[A+12>>2];LD(a,A,5);v=+p[x>>3];w=+p[b>>3];p[A>>3]=v+(w-v)*.5+(+p[i>>3]-+p[D>>3])*3.0*.25;v=+p[y>>3];p[e>>3]=v+(+p[z>>3]-v)*.5;p[E>>3]=w;F=b+8|0;G=b+56|0;p[H>>3]=v+(+p[F>>3]-+p[G>>3])*.5;LD(a,A,2);v=+p[x>>3];p[A>>3]=v;w=+p[y>>3];p[e>>3]=w+(+p[z>>3]-w)*.5;p[E>>3]=v+(+p[b>>3]-v)*.5-(+p[i>>3]-+p[D>>3])*3.0*.25;p[H>>3]=w+(+p[F>>3]-+p[G>>3])*.5;LD(a,A,2);break}else{switch(y|0){case 301989888:break;default:break a}E=c+12|0;H=By(E<<4)|0;z=b+16|0;q=+p[z>>3];l=B+48|0;q=q+(+p[b>>3]-q)*.5+(+p[i>>3]-+p[l>>3])*.25;p[H>>3]=q;c=b+40|0;t=+p[c>>3];D=b+24|0;x=B+56|0;y=B+72|0;t=t+(+p[D>>3]-t)*.5+(+p[x>>3]-+p[y>>3])*.5;n=H+8|0;p[n>>3]=t;p[H+16>>3]=q;t=t+(+p[x>>3]-+p[y>>3])*.125;G=H+24|0;p[G>>3]=t;v=q-(+p[i>>3]-+p[l>>3])*.125;F=H+32|0;p[F>>3]=v;s=t+(+p[x>>3]-+p[y>>3])*.125;p[H+40>>3]=s;p[H+48>>3]=q;u=s+(+p[x>>3]-+p[y>>3])*.125;p[H+56>>3]=u;p[H+64>>3]=q;q=u+(+p[x>>3]-+p[y>>3])*.125;p[H+72>>3]=q;p[H+80>>3]=v;p[H+88>>3]=q;v=+p[z>>3];v=v+(+p[b>>3]-v)*.5;p[H+96>>3]=v;p[H+104>>3]=u;w=v-(+p[i>>3]-+p[l>>3])*.125;p[H+112>>3]=w;p[H+120>>3]=q;w=w-(+p[i>>3]-+p[l>>3])*.125;p[H+128>>3]=w;p[H+136>>3]=q;p[H+144>>3]=w;p[H+152>>3]=u;u=w+(+p[i>>3]-+p[l>>3])*.125;p[H+160>>3]=u;p[H+168>>3]=s;p[H+176>>3]=w;p[H+184>>3]=t;p[H+192>>3]=w;w=+p[n>>3];p[H+200>>3]=w;p[H+208>>3]=u;p[H+216>>3]=w;n=H+224|0;p[n>>3]=v;p[H+232>>3]=+p[G>>3];p[H+240>>3]=+p[F>>3];p[H+248>>3]=w;ID(a,H,E,e);w=+p[n>>3];p[A>>3]=w;v=+p[c>>3];v=v+(+p[D>>3]-v)*.5;E=A+8|0;p[E>>3]=v;F=A+16|0;p[F>>3]=w;G=A+24|0;p[G>>3]=v+(+p[x>>3]-+p[y>>3])*.125;LD(a,A,2);v=+p[n>>3];p[A>>3]=v;w=+p[c>>3];w=w+(+p[D>>3]-w)*.5+(+p[x>>3]-+p[y>>3])*.25;p[E>>3]=w;p[F>>3]=v;p[G>>3]=w+(+p[x>>3]-+p[y>>3])*.125;LD(a,A,2);p[A>>3]=+p[z>>3];w=+p[c>>3];p[E>>3]=w+(+p[D>>3]-w)*.5;p[F>>3]=+p[b>>3];p[G>>3]=w+(+p[b+8>>3]-+p[b+56>>3])*.5;LD(a,A,2);vP(H);break}}else{if((y|0)<369098752){if((y|0)<335544320){switch(y|0){case 318767104:break;default:break a}E=c+4|0;H=By(E<<4)|0;z=b+16|0;v=+p[z>>3];F=B+48|0;v=v+(+p[b>>3]-v)*.5+(+p[i>>3]-+p[F>>3])*.125;p[H>>3]=v;c=b+40|0;w=+p[c>>3];D=b+24|0;x=B+56|0;y=B+72|0;w=w+(+p[D>>3]-w)*.5+(+p[x>>3]-+p[y>>3])*.5;p[H+8>>3]=w;s=v+(+p[i>>3]-+p[F>>3])*.125;p[H+16>>3]=s;u=w+(+p[x>>3]-+p[y>>3])*.125;p[H+24>>3]=u;p[H+32>>3]=s;s=u+(+p[x>>3]-+p[y>>3])*.25;p[H+40>>3]=s;p[H+48>>3]=v;t=s+(+p[x>>3]-+p[y>>3])*.125;p[H+56>>3]=t;v=v-(+p[i>>3]-+p[F>>3])*.25;p[H+64>>3]=v;p[H+72>>3]=t;t=v-(+p[i>>3]-+p[F>>3])*.125;p[H+80>>3]=t;p[H+88>>3]=s;p[H+96>>3]=t;p[H+104>>3]=u;p[H+112>>3]=v;p[H+120>>3]=w;ID(a,H,E,e);w=+p[z>>3];w=w+(+p[b>>3]-w)*.5;p[A>>3]=w;v=+p[c>>3];v=v+(+p[D>>3]-v)*.5;E=A+8|0;p[E>>3]=v;F=A+16|0;p[F>>3]=w;G=A+24|0;p[G>>3]=v+(+p[x>>3]-+p[y>>3])*.125;LD(a,A,2);v=+p[z>>3];v=v+(+p[b>>3]-v)*.5;p[A>>3]=v;w=+p[c>>3];w=w+(+p[D>>3]-w)*.5+(+p[x>>3]-+p[y>>3])*.25;p[E>>3]=w;p[F>>3]=v;p[G>>3]=w+(+p[x>>3]-+p[y>>3])*.125;LD(a,A,2);p[A>>3]=+p[z>>3];w=+p[c>>3];p[E>>3]=w+(+p[D>>3]-w)*.5;p[F>>3]=+p[b>>3];p[G>>3]=w+(+p[b+8>>3]-+p[b+56>>3])*.5;LD(a,A,2);vP(H);break}if((y|0)<352321536){switch(y|0){case 335544320:break;default:break a}G=c+12|0;H=By(G<<4)|0;c=b+16|0;q=+p[c>>3];x=B+48|0;q=q+(+p[b>>3]-q)*.5+(+p[i>>3]-+p[x>>3])*.25;p[H>>3]=q;D=b+40|0;t=+p[D>>3];E=b+24|0;l=B+56|0;n=B+72|0;t=t+(+p[E>>3]-t)*.5+(+p[l>>3]-+p[n>>3])*.5;F=H+8|0;p[F>>3]=t;p[H+16>>3]=q;t=t+(+p[l>>3]-+p[n>>3])*.125;y=H+24|0;p[y>>3]=t;v=q-(+p[i>>3]-+p[x>>3])*.125;z=H+32|0;p[z>>3]=v;s=t+(+p[l>>3]-+p[n>>3])*.125;p[H+40>>3]=s;p[H+48>>3]=q;u=s+(+p[l>>3]-+p[n>>3])*.125;p[H+56>>3]=u;p[H+64>>3]=q;q=u+(+p[l>>3]-+p[n>>3])*.125;p[H+72>>3]=q;p[H+80>>3]=v;p[H+88>>3]=q;v=+p[c>>3];v=v+(+p[b>>3]-v)*.5;p[H+96>>3]=v;p[H+104>>3]=u;w=v-(+p[i>>3]-+p[x>>3])*.125;p[H+112>>3]=w;p[H+120>>3]=q;w=w-(+p[i>>3]-+p[x>>3])*.125;p[H+128>>3]=w;p[H+136>>3]=q;p[H+144>>3]=w;p[H+152>>3]=u;u=w+(+p[i>>3]-+p[x>>3])*.125;p[H+160>>3]=u;p[H+168>>3]=s;p[H+176>>3]=w;p[H+184>>3]=t;p[H+192>>3]=w;w=+p[F>>3];p[H+200>>3]=w;p[H+208>>3]=u;p[H+216>>3]=w;F=H+224|0;p[F>>3]=v;p[H+232>>3]=+p[y>>3];p[H+240>>3]=+p[z>>3];p[H+248>>3]=w;ID(a,H,G,e);k[A>>2]=k[F>>2];k[A+4>>2]=k[F+4>>2];k[A+8>>2]=k[F+8>>2];k[A+12>>2]=k[F+12>>2];F=A+16|0;p[F>>3]=+p[A>>3];w=+p[D>>3];G=A+24|0;p[G>>3]=w+(+p[E>>3]-w)*.5;LD(a,A,2);p[A>>3]=+p[c>>3];w=+p[D>>3];p[A+8>>3]=w+(+p[E>>3]-w)*.5;p[F>>3]=+p[b>>3];p[G>>3]=w+(+p[b+8>>3]-+p[b+56>>3])*.5;LD(a,A,2);vP(H);break}else{switch(y|0){case 352321536:break;default:break a}E=c+4|0;H=By(E<<4)|0;z=b+16|0;v=+p[z>>3];G=B+48|0;v=v+(+p[b>>3]-v)*.5+(+p[i>>3]-+p[G>>3])*.125;p[H>>3]=v;c=b+40|0;w=+p[c>>3];D=b+24|0;x=B+56|0;y=B+72|0;w=w+(+p[D>>3]-w)*.5+(+p[x>>3]-+p[y>>3])*.5;F=H+8|0;p[F>>3]=w;s=v+(+p[i>>3]-+p[G>>3])*.125;p[H+16>>3]=s;u=w+(+p[x>>3]-+p[y>>3])*.125;p[H+24>>3]=u;p[H+32>>3]=s;s=u+(+p[x>>3]-+p[y>>3])*.25;p[H+40>>3]=s;p[H+48>>3]=v;t=s+(+p[x>>3]-+p[y>>3])*.125;p[H+56>>3]=t;v=v-(+p[i>>3]-+p[G>>3])*.25;p[H+64>>3]=v;p[H+72>>3]=t;t=v-(+p[i>>3]-+p[G>>3])*.125;p[H+80>>3]=t;p[H+88>>3]=s;p[H+96>>3]=t;p[H+104>>3]=u;p[H+112>>3]=v;p[H+120>>3]=w;ID(a,H,E,e);w=+p[z>>3];w=w+(+p[b>>3]-w)*.5;p[A>>3]=w;E=A+8|0;p[E>>3]=+p[F>>3];F=A+16|0;p[F>>3]=w;w=+p[c>>3];G=A+24|0;p[G>>3]=w+(+p[D>>3]-w)*.5;LD(a,A,2);p[A>>3]=+p[z>>3];w=+p[c>>3];p[E>>3]=w+(+p[D>>3]-w)*.5;p[F>>3]=+p[b>>3];p[G>>3]=w+(+p[b+8>>3]-+p[b+56>>3])*.5;LD(a,A,2);vP(H);break}}if((y|0)<402653184)if((y|0)<385875968){switch(y|0){case 369098752:break;default:break a}G=c+5|0;H=By(G<<4)|0;F=B+48|0;p[H>>3]=+p[d>>3]-(+p[i>>3]-+p[F>>3])*.5;E=B+56|0;D=B+72|0;p[H+8>>3]=+p[B+24>>3]-(+p[E>>3]-+p[D>>3])*.5;p[H+16>>3]=+p[F>>3];w=+p[E>>3];p[H+24>>3]=w-(w-+p[D>>3])*.5;p[H+32>>3]=+p[b+32>>3];c=b+40|0;p[H+40>>3]=+p[c>>3];w=+p[i>>3];p[H+48>>3]=w+(w-+p[F>>3])*.5;p[H+56>>3]=+p[c>>3];w=+p[i>>3];p[H+64>>3]=w+(w-+p[F>>3])*.5;p[H+72>>3]=+p[c>>3]+(+p[E>>3]-+p[D>>3])*.5;p[H+80>>3]=+p[d>>3]-(+p[i>>3]-+p[F>>3])*.5;p[H+88>>3]=+p[c>>3]+(+p[E>>3]-+p[D>>3])*.5;p[H+96>>3]=+p[d>>3]-(+p[i>>3]-+p[F>>3])*.5;D=b+56|0;p[H+104>>3]=+p[D>>3];E=b+8|0;w=+p[E>>3];p[H+120>>3]=w-(w-+p[D>>3])*.5;p[H+112>>3]=+p[b>>3];p[H+136>>3]=+p[E>>3];p[H+128>>3]=+p[d>>3]-(+p[i>>3]-+p[F>>3])*.5;ID(a,H,G,e);vP(H);break}else{switch(y|0){case 385875968:break;default:break a}G=c+3|0;H=By(G<<4)|0;F=B+48|0;p[H>>3]=+p[d>>3]-(+p[i>>3]-+p[F>>3])*.5;E=B+56|0;D=B+72|0;p[H+8>>3]=+p[B+24>>3]-(+p[E>>3]-+p[D>>3])*.5;p[H+16>>3]=+p[F>>3];w=+p[E>>3];p[H+24>>3]=w-(w-+p[D>>3])*.5;p[H+32>>3]=+p[b+32>>3];c=b+40|0;p[H+40>>3]=+p[c>>3]+(+p[E>>3]-+p[D>>3])*.5;p[H+48>>3]=+p[d>>3]-(+p[i>>3]-+p[F>>3])*.5;p[H+56>>3]=+p[c>>3]+(+p[E>>3]-+p[D>>3])*.5;p[H+64>>3]=+p[d>>3]-(+p[i>>3]-+p[F>>3])*.5;D=b+56|0;p[H+72>>3]=+p[D>>3];E=b+8|0;w=+p[E>>3];p[H+88>>3]=w-(w-+p[D>>3])*.5;p[H+80>>3]=+p[b>>3];p[H+104>>3]=+p[E>>3];p[H+96>>3]=+p[d>>3]-(+p[i>>3]-+p[F>>3])*.5;ID(a,H,G,e);vP(H);break}else if((y|0)<419430400){switch(y|0){case 402653184:break;default:break a}G=c+3|0;H=By(G<<4)|0;p[H>>3]=+p[b>>3];c=b+8|0;D=B+48|0;E=B+56|0;F=B+72|0;p[H+8>>3]=+p[c>>3]-(+p[E>>3]-+p[F>>3])*.5;w=+p[i>>3];p[H+16>>3]=w+(w-+p[D>>3])*.5;p[H+24>>3]=+p[c>>3]-(+p[E>>3]-+p[F>>3])*.5;w=+p[i>>3];p[H+32>>3]=w+(w-+p[D>>3])*.5;p[H+40>>3]=+p[B+40>>3];p[H+48>>3]=+p[b+16>>3];w=+p[b+24>>3];c=b+40|0;p[H+56>>3]=w-(w-+p[c>>3])*.5;w=+p[i>>3];p[H+64>>3]=w+(w-+p[D>>3])*.5;p[H+72>>3]=+p[c>>3];p[H+88>>3]=+p[c>>3]+(+p[E>>3]-+p[F>>3])*.5;w=+p[i>>3];p[H+80>>3]=w+(w-+p[D>>3])*.5;p[H+104>>3]=+p[b+56>>3]+(+p[E>>3]-+p[F>>3])*.5;p[H+96>>3]=+p[b>>3];ID(a,H,G,e);vP(H);break}else{switch(y|0){case 419430400:break;default:break a}G=c+5|0;H=By(G<<4)|0;p[H>>3]=+p[b>>3];F=b+8|0;E=B+48|0;c=B+56|0;D=B+72|0;p[H+8>>3]=+p[F>>3]-(+p[c>>3]-+p[D>>3])*.5;w=+p[i>>3];p[H+16>>3]=w+(w-+p[E>>3])*.5;p[H+24>>3]=+p[F>>3]-(+p[c>>3]-+p[D>>3])*.5;w=+p[i>>3];p[H+32>>3]=w+(w-+p[E>>3])*.5;p[H+40>>3]=+p[B+40>>3];p[H+48>>3]=+p[b+16>>3];w=+p[b+24>>3];F=b+40|0;p[H+56>>3]=w-(w-+p[F>>3])*.5;w=+p[i>>3];p[H+64>>3]=w+(w-+p[E>>3])*.5;p[H+72>>3]=+p[F>>3];p[H+88>>3]=+p[F>>3]+(+p[c>>3]-+p[D>>3])*.5;w=+p[i>>3];p[H+80>>3]=w+(w-+p[E>>3])*.5;F=b+56|0;p[H+104>>3]=+p[F>>3]+(+p[c>>3]-+p[D>>3])*.5;p[H+96>>3]=+p[d>>3]-(+p[i>>3]-+p[E>>3])*.5;p[H+112>>3]=+p[d>>3]-(+p[i>>3]-+p[E>>3])*.5;p[H+120>>3]=+p[F>>3];p[H+128>>3]=+p[b+48>>3];p[H+136>>3]=+p[F>>3];ID(a,H,G,e);vP(H);break}}while(0);vP(B);r=C;return}function Qz(a){a=a|0;a=k[(k[a+8>>2]|0)+8>>2]|0;if(a){a=k[k[a+4>>2]>>2]|0;if((a|0)!=82)if((a|0)!=85)if((a|0)==84)a=3;else a=(a|0)==87?4:0;else a=2;else a=1}else a=0;return a|0}function Rz(a){a=a|0;a=k[(k[a+8>>2]|0)+8>>2]|0;if(!a)a=0;else a=(k[k[a+4>>2]>>2]|0)==82&1;return a|0}function Sz(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;c=k[13815]|0;a:do if((c|0)!=0?(d=k[13816]|0,(d|0)>0):0){e=i[a>>0]|0;g=0;while(1){b=k[c+(g<<2)>>2]|0;f=k[b>>2]|0;if((i[f>>0]|0)==e<<24>>24?(qO(f,a)|0)==0:0)break a;g=g+1|0;if((g|0)>=(d|0)){b=0;break}}}else b=0;while(0);return b|0}function Tz(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;g=r;r=r+16|0;f=g;do if(!(wB(ss(b,141385)|0)|0))e=a;else{if((i[a>>0]|0)==101?(qO(a,141395)|0)==0:0){e=a;break}e=141400}while(0);c=i[e>>0]|0;if(c<<24>>24==99?(qO(e,141400)|0)==0:0)d=11;else d=7;a:do if((d|0)==7){a=k[13817]|0;if(!a)d=11;else{b=a;a=55268;while(1){if((i[b>>0]|0)==c<<24>>24?(qO(b,e)|0)==0:0)break a;a=a+16|0;b=k[a>>2]|0;if(!b){d=11;break}}}}while(0);b:do if((d|0)==11){a=Sz(e)|0;if(!a){c=k[13816]|0;a=c+1|0;k[13816]=a;b=k[13815]|0;if(!b)a=Cy(a<<2)|0;else a=Ey(b,a<<2)|0;k[13815]=a;a=By(16)|0;k[(k[13815]|0)+(c<<2)>>2]=a;k[a>>2]=k[13817];k[a+4>>2]=k[13818];k[a+8>>2]=k[13819];k[a+12>>2]=k[13820];b=tO(e)|0;k[a>>2]=b;do if(!(k[13596]|0)){if((i[e>>0]|0)==99?(qO(e,141400)|0)==0:0)break;k[f>>2]=k[13817];k[f+4>>2]=b;Yr(0,141407,f)|0;i[a+12>>0]=0;break b}while(0);i[a+12>>0]=1}}while(0);r=g;return a|0}function Uz(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0.0,h=0.0,j=0.0,l=0.0,m=0,n=0,o=0,q=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0.0,H=0.0,I=0;F=r;r=r+48|0;e=F;f=($t(b)|0)+48|0;f=k[(k[(k[f>>2]|0)+8>>2]|0)+116>>2]&3;m=b+8|0;E=k[m>>2]|0;D=E+16|0;i[t>>0]=i[D>>0];i[t+1>>0]=i[D+1>>0];i[t+2>>0]=i[D+2>>0];i[t+3>>0]=i[D+3>>0];i[t+4>>0]=i[D+4>>0];i[t+5>>0]=i[D+5>>0];i[t+6>>0]=i[D+6>>0];i[t+7>>0]=i[D+7>>0];g=+p[t>>3];E=E+24|0;i[t>>0]=i[E>>0];i[t+1>>0]=i[E+1>>0];i[t+2>>0]=i[E+2>>0];i[t+3>>0]=i[E+3>>0];i[t+4>>0]=i[E+4>>0];i[t+5>>0]=i[E+5>>0];i[t+6>>0]=i[E+6>>0];i[t+7>>0]=i[E+7>>0];h=+p[t>>3];switch(f|0){case 0:{j=g;g=h;break}case 2:{j=g;g=-h;break}case 1:{j=-h;break}case 3:{j=h;break}default:{j=0.0;g=0.0}}E=~~(j+(j>=0.0?.5:-.5));D=~~(g+(g>=0.0?.5:-.5));C=k[c+8>>2]|0;B=C+16|0;i[t>>0]=i[B>>0];i[t+1>>0]=i[B+1>>0];i[t+2>>0]=i[B+2>>0];i[t+3>>0]=i[B+3>>0];i[t+4>>0]=i[B+4>>0];i[t+5>>0]=i[B+5>>0];i[t+6>>0]=i[B+6>>0];i[t+7>>0]=i[B+7>>0];g=+p[t>>3];C=C+24|0;i[t>>0]=i[C>>0];i[t+1>>0]=i[C+1>>0];i[t+2>>0]=i[C+2>>0];i[t+3>>0]=i[C+3>>0];i[t+4>>0]=i[C+4>>0];i[t+5>>0]=i[C+5>>0];i[t+6>>0]=i[C+6>>0];i[t+7>>0]=i[C+7>>0];h=+p[t>>3];switch(f|0){case 0:{j=g;g=h;break}case 2:{j=g;g=-h;break}case 1:{j=-h;break}case 3:{j=h;break}default:{j=0.0;g=0.0}}B=~~(j+(j>=0.0?.5:-.5));z=~~(g+(g>=0.0?.5:-.5));C=d+33|0;c=i[C>>0]|0;A=c&255;switch(c<<24>>24){case 0:case 15:{f=0;break}default:{c=k[d+24>>2]|0;if(!c){y=($t(b)|0)+8|0;y=(k[(k[y>>2]|0)+116>>2]&1|0)==0;x=k[m>>2]|0;H=+p[x+80>>3]*.5;G=-H;j=+p[x+88>>3];h=-j;l=y?h:G;g=y?j:H;j=y?H:j;h=y?G:h}else{l=+p[c>>3];g=+p[c+16>>3];j=+p[c+24>>3];h=+p[c+8>>3]}x=~~h;y=~~((l+g)*.5);w=~~g;v=~~((h+j)*.5);u=~~j;q=~~l;s=0;o=0;n=0;m=0;c=0;while(1){if(1<<s&A){switch(s|0){case 0:{f=y;m=x;break}case 1:{f=w;m=v;break}case 2:{f=y;m=u;break}case 3:{f=q;m=v;break}default:f=n}n=f+E|0;m=m+D|0;I=n-B|0;f=m-z|0;f=(ha(I,I)|0)+(ha(f,f)|0)|0;if((c|0)==0|(f|0)<(o|0))c=k[56244+(s<<2)>>2]|0;else f=o}else f=o;s=s+1|0;if((s|0)==4)break;else o=f}f=c;c=i[C>>0]|0}}k[e+36>>2]=k[d+36>>2];Zz(b,k[d+24>>2]|0,e,f,c&255,0)|0;c=a+40|0;do{k[a>>2]=k[e>>2];a=a+4|0;e=e+4|0}while((a|0)<(c|0));r=F;return}function Vz(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;g=r;r=r+80|0;d=g+40|0;f=g;e=a+8|0;c=k[e>>2]|0;b=c+16|0;if(i[c+47>>0]|0){c=k[a>>2]&3;Uz(d,k[((c|0)==3?a:a+32|0)+28>>2]|0,k[((c|0)==2?a:a+-32|0)+28>>2]|0,b);c=d;d=b+40|0;do{k[b>>2]=k[c>>2];b=b+4|0;c=c+4|0}while((b|0)<(d|0));c=k[e>>2]|0}b=c+56|0;if(i[c+87>>0]|0){c=k[a>>2]&3;Uz(f,k[((c|0)==2?a:a+-32|0)+28>>2]|0,k[((c|0)==3?a:a+32|0)+28>>2]|0,b);c=f;d=b+40|0;do{k[b>>2]=k[c>>2];b=b+4|0;c=c+4|0}while((b|0)<(d|0))}r=g;return}function Wz(a){a=a|0;var b=0,c=0.0,d=0.0,e=0,f=0,g=0,h=0.0,j=0.0,l=0,m=0.0,n=0,o=0,q=0.0,s=0.0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0,y=0.0,z=0.0,A=0.0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0.0,K=0.0,L=0.0,M=0.0,N=0,O=0,P=0.0,Q=0.0,R=0.0,S=0,T=0,U=0,V=0,Y=0,$=0,aa=0.0;$=r;r=r+128|0;E=$+96|0;G=$+88|0;B=$+80|0;C=$+72|0;f=$+64|0;U=$+48|0;O=$+40|0;N=$+32|0;g=$+24|0;l=$+16|0;o=$+120|0;n=$+112|0;D=$;Y=By(48)|0;V=a+8|0;H=k[(k[(k[V>>2]|0)+8>>2]|0)+8>>2]|0;T=k[H>>2]|0;b=k[H+4>>2]|0;e=k[H+8>>2]|0;h=+p[H+16>>3];m=+p[H+32>>3];j=+p[H+24>>3];T=(oB(ss(a,142255)|0)|0)&255|T;H=(T|0)!=0;if(H){R=+jB(a,k[13620]|0,0.0,.01);d=+jB(a,k[13619]|0,0.0,.02);d=(R>d?R:d)*72.0;S=~~(d+(d>=0.0?.5:-.5));d=+(S|0);if((S|0)>0){c=d;s=d}else{S=k[V>>2]|0;c=+p[S+32>>3];s=+p[S+40>>3];s=(c<s?c:s)*72.0;s=+(~~(s+(s>=0.0?.5:-.5))|0);c=s}}else{S=k[V>>2]|0;s=+p[S+32>>3]*72.0;c=+p[S+40>>3]*72.0;c=+(~~(c+(c>=0.0?.5:-.5))|0);s=+(~~(s+(s>=0.0?.5:-.5))|0)}S=iB(a,k[13642]|0,b,0)|0;R=h+ +jB(a,k[13644]|0,0.0,-360.0);if(!e){P=+jB(a,k[13645]|0,0.0,-100.0);e=iB(a,k[13641]|0,4,0)|0;Q=+jB(a,k[13646]|0,0.0,-100.0)}else{Q=j;P=m}F=k[(k[V>>2]|0)+104>>2]|0;q=+p[F+24>>3];h=+p[F+32>>3];F=~~q;F=(F|0)>-1?F:0-F|0;d=+(F|0);if((F|0)>-1)if(!~~(d+.5))F=10;else F=13;else if(!~~(d+-.5))F=10;else F=13;do if((F|0)==10){b=~~h;b=(b|0)>-1?b:0-b|0;d=+(b|0);if((b|0)>-1)if(!~~(d+.5)){j=q;break}else{F=13;break}else if(!~~(d+-.5)){j=q;break}else{F=13;break}}while(0);do if((F|0)==13){b=ss(a,142240)|0;if(!b){j=q+16.0;h=h+8.0;break}p[l>>3]=0.0;p[g>>3]=0.0;k[f>>2]=g;k[f+4>>2]=l;b=UN(b,142247,f)|0;d=+p[g>>3];if(d<0.0){p[g>>3]=0.0;d=0.0}j=+p[l>>3];if(j<0.0){p[l>>3]=0.0;j=0.0}if((b|0)<=0){j=q+16.0;h=h+8.0;break}m=d*72.0;m=+(~~(m+(m>=0.0?.5:-.5))<<1|0);d=q+m;if((b|0)>1){M=j*72.0;j=d;h=h+ +(~~(M+(M>=0.0?.5:-.5))<<1|0);break}else{j=d;h=h+m;break}}while(0);q=j-+p[(k[(k[V>>2]|0)+104>>2]|0)+24>>3];l=($t(a)|0)+8|0;d=+p[k[(k[l>>2]|0)+8>>2]>>3];if(d>0.0){L=d*72.0;L=+(~~(L+(L>=0.0?.5:-.5))|0);g=~~(j/L);l=~~(h/L);M=L*+((L*+(g|0)+1.0e-05<j&1)+g|0);L=L*+((L*+(l|0)+1.0e-05<h&1)+l|0)}else{M=j;L=h}b=k[(k[V>>2]|0)+8>>2]|0;do if(!(i[b+12>>0]|0)){b=ss(a,145194)|0;if((b|0)!=0?(i[b>>0]|0)!=0:0){dw(n,$t(a)|0,b);f=k[n>>2]|0;g=k[n+4>>2]|0;if((g&f|0)==-1){f=ht(a)|0;k[B>>2]=b;k[B+4>>2]=f;Yr(0,142314,B)|0;f=0;b=0;break}else{b=($t(a)|0)+8|0;i[(k[b>>2]|0)+114>>0]=1;f=f+2|0;b=g+2|0;break}}else{f=0;b=0}}else{b=k[b>>2]|0;if((i[b>>0]|0)==99?(qO(b,141400)|0)==0:0){b=ss(a,141385)|0;dw(o,$t(a)|0,b);f=k[o>>2]|0;g=k[o+4>>2]|0;if((g&f|0)==-1){f=ht(a)|0;k[C>>2]=(b|0)!=0?b:142263;k[C+4>>2]=f;Yr(0,142269,C)|0;f=0;b=0;break}else{b=($t(a)|0)+8|0;i[(k[b>>2]|0)+114>>0]=1;f=f+2|0;b=g+2|0;break}}else{f=0;b=0}}while(0);m=+(f|0);p[U>>3]=M>m?M:m;m=+(b|0);C=U+8|0;p[C>>3]=L>m?L:m;if((e|0)<3)e=Q!=0.0|P!=0.0?120:e;b=ss(a,142355)|0;a:do if(!b)F=42;else{b=i[b>>0]|0;switch(b<<24>>24){case 98:case 116:break;default:{F=42;break a}}f=k[V>>2]|0;i[(k[f+104>>2]|0)+80>>0]=b}while(0);if((F|0)==42){f=k[V>>2]|0;i[(k[f+104>>2]|0)+80>>0]=99;b=99}if((e|0)==4?P==0.0&(Q==0.0?((~~(R+(R>=0.0?.5:-.5))|0)%90|0|0)==0:0):0)g=1;else F=45;do if((F|0)==45){f=k[(k[(k[f+8>>2]|0)+8>>2]|0)+44>>2]|0;if(f){g=k[f>>2]|0;k[E>>2]=k[U>>2];k[E+4>>2]=k[U+4>>2];k[E+8>>2]=k[U+8>>2];k[E+12>>2]=k[U+12>>2];Pb[g&31](D,E);k[U>>2]=k[D>>2];k[U+4>>2]=k[D+4>>2];k[U+8>>2]=k[D+8>>2];k[U+12>>2]=k[D+12>>2];g=0;break}d=+p[C>>3];h=d*1.4142135623730951;if(c>h&b<<24>>24==99){j=d/c;j=+X(+(1.0/(1.0-j*j)));j=j*+p[U>>3];p[U>>3]=j}else{j=+p[U>>3]*1.4142135623730951;p[U>>3]=j;p[C>>3]=h;d=h}if((e|0)>2){A=+Z(+(3.141592653589793/+(e|0)));p[U>>3]=j/A;p[C>>3]=d/A;g=0}else g=0}while(0);h=+p[C>>3];b=lB(a,k[13647]|0,173309)|0;if((i[b>>0]|0)==115?(qO(b,145890)|0)==0:0){p[U>>3]=s;p[C>>3]=c;G=Y+40|0;k[G>>2]=k[G>>2]|2048;d=s}else F=55;do if((F|0)==55){if(!((oB(b)|0)<<24>>24)){d=+p[U>>3];d=s>d?s:d;p[U>>3]=d;A=+p[C>>3];c=c>A?c:A;p[C>>3]=c;break}F=k[(k[V>>2]|0)+104>>2]|0;if(!(!(s<+p[F+24>>3])?!(c<+p[F+32>>3]):0)){E=ht(a)|0;F=ht($t(a)|0)|0;k[G>>2]=E;k[G+4>>2]=F;Yr(0,142364,G)|0}p[U>>3]=s;p[C>>3]=c;d=s}while(0);if(H){z=+p[C>>3];z=d>z?d:z;p[C>>3]=z;p[U>>3]=z;A=z}else{A=c;z=d}do if(!((oB(lB(a,k[13638]|0,173309)|0)|0)<<24>>24)){if(g){y=+p[U>>3];b=k[(k[V>>2]|0)+104>>2]|0;p[b+40>>3]=(M>y?M:y)-q;break}c=+p[C>>3];if(L<c){y=+p[U>>3]*+X(+(1.0-L*L/(c*c)));b=k[(k[V>>2]|0)+104>>2]|0;p[b+40>>3]=(M>y?M:y)-q;break}else{b=k[(k[V>>2]|0)+104>>2]|0;p[b+40>>3]=M-q;break}}else{b=k[(k[V>>2]|0)+104>>2]|0;p[b+40>>3]=M-q}while(0);B=Y+40|0;if(!(k[B>>2]&2048)){y=+p[C>>3]-h;p[b+48>>3]=L+(L<m?m-L+y:y)}b=(S|0)<1?1:S;if((e|0)<3){b=By(b<<5)|0;d=+p[U>>3]*.5;c=+p[C>>3]*.5;p[b>>3]=-d;p[b+8>>3]=-c;p[b+16>>3]=d;p[b+24>>3]=c;if((S|0)>1){e=2;f=1;while(1){d=d+4.0;c=c+4.0;p[b+(e<<4)>>3]=-d;p[b+(e<<4)+8>>3]=-c;O=e|1;p[b+(O<<4)>>3]=d;p[b+(O<<4)+8>>3]=c;f=f+1|0;if((f|0)==(S|0))break;else e=e+2|0}p[U>>3]=d*2.0;p[C>>3]=c*2.0;e=2}else e=2}else{b=By(ha(b<<4,e)|0)|0;f=k[(k[(k[(k[V>>2]|0)+8>>2]|0)+8>>2]|0)+44>>2]|0;b:do if(!f){m=6.283185307179586/+(e|0);t=m*.5;q=+_(+t);s=+MM(+W(+Q)+ +W(+P),1.0);t=Q*1.4142135623730951/+Z(+t);u=P*.5;y=(m+-3.141592653589793)*.5;RM(y,O,N);v=R/180.0*3.141592653589793;w=+p[N>>3]*.5;x=+p[O>>3]*.5;y=y+(3.141592653589793-m)*.5;f=0;d=0.0;c=0.0;while(1){y=m+y;RM(y,O,N);w=w+q*+p[N>>3];x=x+q*+p[O>>3];h=u*x+w*(s+t*x);RM(v+ +da(+x,+h),O,N);h=+MM(h,x);j=h*+p[N>>3]*+p[U>>3];h=h*+p[O>>3]*+p[C>>3];aa=+W(+j);d=aa>d?aa:d;aa=+W(+h);c=aa>c?aa:c;p[b+(f<<4)>>3]=j;p[b+(f<<4)+8>>3]=h;f=f+1|0;if(g)break;if((f|0)>=(e|0))break b}aa=-j;p[b+16>>3]=aa;p[b+24>>3]=h;p[b+32>>3]=aa;aa=-h;p[b+40>>3]=aa;p[b+48>>3]=j;p[b+56>>3]=aa}else{Pb[k[f+4>>2]&31](b,U);d=+p[U>>3]*.5;c=+p[C>>3]*.5}while(0);y=d*2.0;d=c*2.0;c=z>y?z:y;p[U>>3]=c;aa=A>d?A:d;p[C>>3]=aa;c=c/y;d=aa/d;o=(e|0)>0;if(o){f=0;do{H=b+(f<<4)|0;a=b+(f<<4)+8|0;aa=d*+p[a>>3];p[H>>3]=c*+p[H>>3];p[a>>3]=aa;f=f+1|0}while((f|0)!=(e|0))}if((S|0)>1?(I=e+-1|0,J=+p[b>>3],K=+p[b+8>>3],o):0){n=(S|0)==2;j=J;m=K;h=+da(+(K-+p[b+(I<<4)+8>>3]),+(J-+p[b+(I<<4)>>3]));g=0;do{l=g;g=g+1|0;I=(g|0)==(e|0)?0:g;K=j;j=+p[b+(I<<4)>>3];aa=m;m=+p[b+(I<<4)+8>>3];J=h;h=+da(+(m-aa),+(j-K));d=(J+3.141592653589793-h)*.5;c=4.0/+_(+d);RM(J-d,O,N);d=c*+p[O>>3];p[O>>3]=d;c=c*+p[N>>3];p[N>>3]=c;c=K+c;d=aa+d;I=e+l|0;p[b+(I<<4)>>3]=c;p[b+(I<<4)+8>>3]=d;if(!n){f=2;do{c=c+ +p[N>>3];d=d+ +p[O>>3];I=(ha(f,e)|0)+l|0;p[b+(I<<4)>>3]=c;p[b+(I<<4)+8>>3]=d;f=f+1|0}while((f|0)!=(S|0))}}while((g|0)!=(e|0));if(o){f=ha(e,S+-1|0)|0;c=+p[U>>3];d=+p[C>>3];g=0;do{O=g+f|0;aa=+p[b+(O<<4)+8>>3];K=+W(+(+p[b+(O<<4)>>3]))*2.0;c=K>c?K:c;p[U>>3]=c;aa=+W(+aa)*2.0;d=aa>d?aa:d;p[C>>3]=d;g=g+1|0}while((g|0)!=(e|0))}}}k[Y>>2]=T;k[Y+4>>2]=S;k[Y+8>>2]=e;p[Y+16>>3]=R;p[Y+32>>3]=P;p[Y+24>>3]=Q;k[Y+44>>2]=b;c=+p[U>>3];if(!(k[B>>2]&2048)){b=k[V>>2]|0;p[b+32>>3]=c/72.0;p[b+40>>3]=+p[C>>3]/72.0}else{b=k[V>>2]|0;p[b+32>>3]=(M>c?M:c)/72.0;aa=+p[C>>3];p[b+40>>3]=(L>aa?L:aa)/72.0}k[b+12>>2]=Y;r=$;return}function Xz(a){a=a|0;var b=0,c=0,d=0.0,e=0,f=0,g=0.0,h=0,i=0,j=0,l=0,m=0,n=0.0;m=r;r=r+80|0;l=m+56|0;e=m+32|0;j=m+40|0;i=m+16|0;c=($t(a)|0)+8|0;c=(k[(k[c>>2]|0)+116>>2]|0)>>>2&1^1;h=a+8|0;f=k[k[(k[h>>2]|0)+104>>2]>>2]|0;k[14116]=f;f=uO(f)|0;f=By((f|0)>1?f+1|0:2)|0;b=xA(a,c,1,f)|0;if(!b){k[e>>2]=k[k[(k[h>>2]|0)+104>>2]>>2];Yr(1,142216,e)|0;k[14116]=142237;b=xA(a,c,1,f)|0}vP(f);yA(m,a,b);c=k[h>>2]|0;g=+p[c+32>>3]*72.0;g=+(~~(g+(g>=0.0?.5:-.5))|0);p[i>>3]=g;d=+p[c+40>>3]*72.0;d=+(~~(d+(d>=0.0?.5:-.5))|0);c=i+8|0;p[c>>3]=d;if(!((oB(lB(a,k[13647]|0,173309)|0)|0)<<24>>24)){n=+p[b>>3];g=n>g?n:g;p[i>>3]=g;f=b+8|0;n=+p[f>>3];d=n>d?n:d;p[c>>3]=d;c=f}else c=b+8|0;a=(oB(lB(a,k[13638]|0,173309)|0)|0)&255;k[l>>2]=k[i>>2];k[l+4>>2]=k[i+4>>2];k[l+8>>2]=k[i+8>>2];k[l+12>>2]=k[i+12>>2];zA(b,l,a);p[j>>3]=g*-.5;p[j+8>>3]=d*.5;k[l>>2]=k[j>>2];k[l+4>>2]=k[j+4>>2];k[l+8>>2]=k[j+8>>2];k[l+12>>2]=k[j+12>>2];AA(b,l,15);l=k[h>>2]|0;p[l+32>>3]=+p[b>>3]/72.0;p[l+40>>3]=(+p[c>>3]+1.0)/72.0;k[l+12>>2]=b;r=m;return}function Yz(a){a=a|0;var b=0.0,c=0,d=0.0,e=0,f=0,g=0,h=0,i=0.0,j=0;g=By(48)|0;h=a+8|0;c=k[(k[(k[(k[h>>2]|0)+8>>2]|0)+8>>2]|0)+4>>2]|0;b=+jB(a,k[13620]|0,1797693134862315708145274.0e284,0.0);d=+jB(a,k[13619]|0,1797693134862315708145274.0e284,0.0);b=b<d?b:d;if(d==1797693134862315708145274.0e284&b==1797693134862315708145274.0e284){f=k[h>>2]|0;p[f+40>>3]=.05;p[f+32>>3]=.05;b=3.6}else{b=b>0.0?(b>.0003?b:.0003):b;f=k[h>>2]|0;p[f+40>>3]=b;p[f+32>>3]=b;b=b*72.0}e=iB(a,k[13642]|0,c,0)|0;f=By((e|0)<1?32:e<<5)|0;d=b*.5;i=-d;p[f>>3]=i;p[f+8>>3]=i;p[f+16>>3]=d;p[f+24>>3]=d;if((e|0)>1){b=d;c=2;a=1;while(1){b=b+4.0;d=d+4.0;p[f+(c<<4)>>3]=-b;p[f+(c<<4)+8>>3]=-d;j=c|1;p[f+(j<<4)>>3]=b;p[f+(j<<4)+8>>3]=d;a=a+1|0;if((a|0)==(e|0))break;else c=c+2|0}b=b*2.0}k[g>>2]=1;k[g+4>>2]=e;k[g+8>>2]=2;j=g+16|0;k[j>>2]=0;k[j+4>>2]=0;k[j+8>>2]=0;k[j+12>>2]=0;k[j+16>>2]=0;k[j+20>>2]=0;k[g+44>>2]=f;i=b/72.0;j=k[h>>2]|0;p[j+32>>3]=i;p[j+40>>3]=i;k[j+12>>2]=g;return}function Zz(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0.0,h=0.0,j=0,l=0,m=0,n=0,o=0,q=0.0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0.0,z=0.0,A=0.0,B=0,C=0,D=0,E=0,F=0;F=r;r=r+176|0;C=F+160|0;D=F+144|0;l=F+128|0;m=F+112|0;n=F+96|0;o=F+80|0;s=F+64|0;u=F+48|0;v=F+32|0;w=F+16|0;B=F;if(!b){j=($t(a)|0)+8|0;j=(k[(k[j>>2]|0)+116>>2]&1|0)==0;E=k[a+8>>2]|0;g=+p[E+80>>3]*.5;A=+p[E+88>>3];y=j?A:g;A=j?g:A;g=0.0;h=0.0;x=-y;z=A;A=-A;j=0}else{x=+p[b>>3];A=+p[b+8>>3];y=+p[b+16>>3];z=+p[b+24>>3];g=(x+y)*.5;h=(A+z)*.5;j=1}E=D+8|0;p[E>>3]=h;p[D>>3]=g;q=(y>z?y:z)*4.0;a:do if((d|0)!=0?(t=i[d>>0]|0,t<<24>>24!=0):0){d=d+1|0;switch(t<<24>>24|0){case 99:{m=1;n=0;d=0;l=0;e=0;g=0.0;break a}case 101:{if(i[d>>0]|0){m=1;n=0;d=0;l=1;e=0;g=0.0;break a}if(!f)p[D>>3]=y;else{_z(l,f,h,q);k[D>>2]=k[l>>2];k[D+4>>2]=k[l+4>>2];k[D+8>>2]=k[l+8>>2];k[D+12>>2]=k[l+12>>2]}m=0;n=1;j=1;d=0;l=0;e=e&2;g=0.0;break a}case 115:{p[E>>3]=A;switch(i[d>>0]|0){case 0:{if(!f)p[D>>3]=g;else{_z(m,f,-q,g);k[D>>2]=k[m>>2];k[D+4>>2]=k[m+4>>2];k[D+8>>2]=k[m+8>>2];k[D+12>>2]=k[m+12>>2]}m=0;n=1;j=1;d=0;l=0;e=e&1;g=-1.5707963267948966;break a}case 101:{if(!f)p[D>>3]=y;else{_z(n,f,-q,q);k[D>>2]=k[n>>2];k[D+4>>2]=k[n+4>>2];k[D+8>>2]=k[n+8>>2];k[D+12>>2]=k[n+12>>2]}m=0;n=1;j=1;d=0;l=0;e=e&3;g=-.7853981633974483;break a}case 119:{if(!f)p[D>>3]=x;else{A=-q;_z(o,f,A,A);k[D>>2]=k[o>>2];k[D+4>>2]=k[o+4>>2];k[D+8>>2]=k[o+8>>2];k[D+12>>2]=k[o+12>>2]}m=0;n=1;j=1;d=0;l=0;e=e&9;g=-2.356194490192345;break a}default:{p[E>>3]=h;m=1;n=0;d=0;l=1;e=0;g=0.0;break a}}}case 119:{if(i[d>>0]|0){m=1;n=0;d=0;l=1;e=0;g=0.0;break a}if(!f)p[D>>3]=x;else{_z(s,f,h,-q);k[D>>2]=k[s>>2];k[D+4>>2]=k[s+4>>2];k[D+8>>2]=k[s+8>>2];k[D+12>>2]=k[s+12>>2]}m=0;n=1;j=1;d=0;l=0;e=e&8;g=3.141592653589793;break a}case 110:{p[E>>3]=z;switch(i[d>>0]|0){case 0:{if(!f)p[D>>3]=g;else{_z(u,f,q,g);k[D>>2]=k[u>>2];k[D+4>>2]=k[u+4>>2];k[D+8>>2]=k[u+8>>2];k[D+12>>2]=k[u+12>>2]}m=0;n=1;j=1;d=0;l=0;e=e&4;g=1.5707963267948966;break a}case 101:{if(!f)p[D>>3]=y;else{_z(v,f,q,q);k[D>>2]=k[v>>2];k[D+4>>2]=k[v+4>>2];k[D+8>>2]=k[v+8>>2];k[D+12>>2]=k[v+12>>2]}m=0;n=1;j=1;d=0;l=0;e=e&6;g=.7853981633974483;break a}case 119:{if(!f)p[D>>3]=x;else{_z(w,f,q,-q);k[D>>2]=k[w>>2];k[D+4>>2]=k[w+4>>2];k[D+8>>2]=k[w+8>>2];k[D+12>>2]=k[w+12>>2]}m=0;n=1;j=1;d=0;l=0;e=e&12;g=2.356194490192345;break a}default:{p[E>>3]=h;m=1;n=0;d=0;l=1;e=0;g=0.0;break a}}}case 95:{m=1;n=0;d=1;l=0;g=0.0;break a}default:{m=1;n=0;d=0;l=1;e=0;g=0.0;break a}}}else{m=1;n=0;d=0;l=0;e=0;g=0.0}while(0);f=($t(a)|0)+8|0;f=(k[(k[f>>2]|0)+116>>2]&3)*90|0;k[C>>2]=k[D>>2];k[C+4>>2]=k[D+4>>2];k[C+8>>2]=k[D+8>>2];k[C+12>>2]=k[D+12>>2];ey(B,C,f);k[D>>2]=k[B>>2];k[D+4>>2]=k[B+4>>2];k[D+8>>2]=k[B+8>>2];k[D+12>>2]=k[B+12>>2];if(!(d<<24>>24)){C=($t(a)|0)+8|0;b:do switch(k[(k[C>>2]|0)+116>>2]&3|0){case 3:switch(e|0){case 4:{e=2;break b}case 1:{e=8;break b}case 8:{e=1;break b}case 2:{e=4;break b}default:break b}case 2:switch(e|0){case 4:{e=1;break b}case 1:{e=4;break b}default:break b}case 1:switch(e|0){case 4:{e=2;break b}case 1:{e=8;break b}case 8:{e=4;break b}case 2:{e=1;break b}default:break b}default:{}}while(0);i[c+33>>0]=e}else i[c+33>>0]=e;k[c+24>>2]=b;A=+p[D>>3];p[c>>3]=+(~~(A+(A>=0.0?.5:-.5))|0);A=+p[E>>3];p[c+8>>3]=+(~~(A+(A>=0.0?.5:-.5))|0);a=($t(a)|0)+8|0;switch(k[(k[a>>2]|0)+116>>2]&3|0){case 3:{if(!(g==3.141592653589793))if(!(g==2.356194490192345))if(!(g==1.5707963267948966))if(!(g==0.0))if(!(g==-.7853981633974483)){if(g==-1.5707963267948966)g=3.141592653589793}else g=2.356194490192345;else g=1.5707963267948966;else g=0.0;else g=-.7853981633974483;else g=-1.5707963267948966;break}case 2:{g=-g;break}case 1:{g=g+-1.5707963267948966;break}default:{}}p[c+16>>3]=g;h=+p[D>>3];g=+p[E>>3];if(h==0.0&g==0.0)e=-128;else{A=+da(+g,+h)+4.71238898038469;e=~~((!(A>=6.283185307179586)?A:A+-6.283185307179586)*256.0/6.283185307179586)&255}i[c+32>>0]=e;i[c+29>>0]=n;i[c+28>>0]=j;i[c+30>>0]=m;i[c+31>>0]=d;r=F;return l|0}function _z(a,b,c,d){a=a|0;b=b|0;c=+c;d=+d;var e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0;n=r;r=r+128|0;h=n+112|0;m=n+32|0;e=n+96|0;g=n+16|0;i=n;j=k[b>>2]|0;l=($t(j)|0)+8|0;l=k[(k[l>>2]|0)+116>>2]&3;p[e>>3]=d;p[e+8>>3]=c;f=(l|0)!=0;if(f){k[h>>2]=k[e>>2];k[h+4>>2]=k[e+4>>2];k[h+8>>2]=k[e+8>>2];k[h+12>>2]=k[e+12>>2];ey(g,h,l*90|0);k[e>>2]=k[g>>2];k[e+4>>2]=k[g+4>>2];k[e+8>>2]=k[g+8>>2];k[e+12>>2]=k[g+12>>2]}g=m+16|0;k[m>>2]=0;k[m+4>>2]=0;k[m+8>>2]=0;k[m+12>>2]=0;k[g>>2]=k[m>>2];k[g+4>>2]=k[m+4>>2];k[g+8>>2]=k[m+8>>2];k[g+12>>2]=k[m+12>>2];g=m+48|0;o=m+32|0;k[o>>2]=k[e>>2];k[o+4>>2]=k[e+4>>2];k[o+8>>2]=k[e+8>>2];k[o+12>>2]=k[e+12>>2];k[g>>2]=k[e>>2];k[g+4>>2]=k[e+4>>2];k[g+8>>2]=k[e+8>>2];k[g+12>>2]=k[e+12>>2];BA(b,k[(k[(k[(k[j+8>>2]|0)+8>>2]|0)+4>>2]|0)+12>>2]|0,m,1);if(f){k[h>>2]=k[m>>2];k[h+4>>2]=k[m+4>>2];k[h+8>>2]=k[m+8>>2];k[h+12>>2]=k[m+12>>2];fy(i,h,l*90|0);k[m>>2]=k[i>>2];k[m+4>>2]=k[i+4>>2];k[m+8>>2]=k[i+8>>2];k[m+12>>2]=k[i+12>>2]};k[a>>2]=k[m>>2];k[a+4>>2]=k[m+4>>2];k[a+8>>2]=k[m+8>>2];k[a+12>>2]=k[m+12>>2];r=n;return}function $z(a,b){a=a|0;b=b|0;var c=0.0,d=0.0;d=+p[b>>3]/1.902113032590307;c=+p[b+8>>3]/1.1180339887498947;c=(d>c?d:c)*.9510565162951535*.8090169943749475/.29389262614623657;p[a>>3]=c*2.0*.9510565162951535;p[a+8>>3]=c*1.8090169943749475;return}function aA(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0,g=0.0,h=0,i=0.0,j=0,k=0,l=0.0;d=+p[b>>3];j=b+8|0;e=+p[j>>3];c=e/d;if(!(c>.9510565162951536))if(c<.9510565162951536){i=d;e=d*.9510565162951536}else i=d;else i=e/.9510565162951536;g=i/1.902113032590307;d=g*.9510565162951535*.30901699437494745/.7694208842938134;f=g*.19098300562505266*.5;h=0;c=.3141592653589793;while(1){l=g*+Z(+c);p[a+(h<<4)>>3]=l;l=g*+_(+c)-f;p[a+(h<<4)+8>>3]=l;c=c+.6283185307179586;l=d*+Z(+c);k=h|1;p[a+(k<<4)>>3]=l;l=d*+_(+c)-f;p[a+(k<<4)+8>>3]=l;h=h+2|0;if((h|0)>=10)break;else c=c+.6283185307179586}p[b>>3]=i;p[j>>3]=e;return}function bA(a){a=a|0;a=k[(k[a+8>>2]|0)+12>>2]|0;if(a){vP(k[a+44>>2]|0);vP(a)}return}function cA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0;o=r;r=r+80|0;n=o+56|0;j=o+40|0;e=o;m=o+72|0;f=o+64|0;if(!(i[c>>0]|0)){e=36584;f=a+40|0;do{k[a>>2]=k[e>>2];a=a+4|0;e=e+4|0}while((a|0)<(f|0))}else{g=(d|0)==0?142064:d;k[m>>2]=15;h=b+8|0;d=k[h>>2]|0;do if(i[(k[d+104>>2]|0)+82>>0]|0){d=_E(b,c,m)|0;if(!d){d=k[h>>2]|0;l=8;break}if(Zz(b,d,e,g,k[m>>2]|0,0)|0){n=ht(b)|0;k[j>>2]=n;k[j+4>>2]=c;k[j+8>>2]=g;Yr(0,142066,j)|0}}else l=8;while(0);if((l|0)==8){if((k[(k[d+8>>2]|0)+8>>2]|0)==34072)f=0;else{k[f>>2]=b;k[f+4>>2]=0}if(Zz(b,0,e,c,k[m>>2]|0,f)|0){m=ht(b)|0;k[n>>2]=m;k[n+4>>2]=c;Yr(0,142127,n)|0}}f=a+40|0;do{k[a>>2]=k[e>>2];a=a+4|0;e=e+4|0}while((a|0)<(f|0))}r=o;return}function dA(a,b){a=a|0;b=b|0;var c=0.0,d=0,e=0.0,f=0,g=0,h=0.0,i=0.0,j=0,l=0,m=0.0,n=0.0,o=0.0,q=0.0;j=r;r=r+32|0;l=j+16|0;g=j;d=k[a+4>>2]|0;a=k[a>>2]|0;f=($t(a)|0)+8|0;f=(k[(k[f>>2]|0)+116>>2]&3)*90|0;k[l>>2]=k[b>>2];k[l+4>>2]=k[b+4>>2];k[l+8>>2]=k[b+8>>2];k[l+12>>2]=k[b+12>>2];fy(g,l,f);h=+p[g>>3];i=+p[g+8>>3];a:do if(!d){if((a|0)==(k[14099]|0))a=k[14100]|0;else{g=k[(k[a+8>>2]|0)+12>>2]|0;k[14101]=g;k[14102]=k[g+44>>2];l=k[g+8>>2]|0;k[14100]=l;g=ha((k[g+4>>2]|0)+-1|0,l)|0;k[14103]=(g|0)<0?0:g;k[14099]=a;a=l}if((a|0)>0){b=k[14103]|0;d=k[14102]|0;c=+p[4571];e=+p[4572];f=0;g=0;while(1){l=b+f|0;m=+p[d+(l<<4)>>3];q=+p[d+(l<<4)+8>>3];l=((f+4|0)%(a|0)|0)+b|0;o=-(+p[d+(l<<4)+8>>3]-q);n=+p[d+(l<<4)>>3]-m;m=q*n+m*o;g=((i*n+h*o-m>=0.0^c*o+n*e-m>=0.0)&1)+g|0;f=f+2|0;if((g|0)==2){a=0;break a}if((f|0)>=(a|0)){a=1;break}}}else a=1}else{c=+p[d+24>>3];if(+p[d>>3]<=h?!(+p[d+8>>3]<=i?!(h<=+p[d+16>>3]):1):0)a=i<=c&1;else a=0}while(0);r=j;return a|0}function eA(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;c=k[a+8>>2]|0;if((i[(k[c+104>>2]|0)+82>>0]|0)!=0?(i[c+145>>0]|0)!=0:0)e=$E(a,b,0,d,e)|0;else e=0;return e|0}function fA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0.0,g=0,h=0,m=0,n=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0.0,G=0.0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0;R=r;r=r+48|0;K=R+24|0;J=R+16|0;E=R+8|0;D=R;Q=R+32|0;g=R+28|0;O=k[a+16>>2]|0;P=O+208|0;c=k[P>>2]|0;if((c|0)==0?(j[O+260>>1]&1)==0:0)N=0;else if(!(k[a+152>>2]&4)){yD(a,c,k[O+228>>2]|0,k[O+244>>2]|0,k[O+212>>2]|0);N=1}else N=1;L=b+8|0;c=k[L>>2]|0;q=k[c+12>>2]|0;I=k[q+44>>2]|0;M=k[q+8>>2]|0;q=k[q+4>>2]|0;if((k[14097]|0)<(M|0)){c=M+5|0;k[14097]=c;d=k[14098]|0;if(!d)c=Cy(c<<4)|0;else c=Ey(d,c<<4)|0;k[14098]=c;c=k[L>>2]|0}H=(k[c+104>>2]|0)+56|0;c=c+16|0;k[H>>2]=k[c>>2];k[H+4>>2]=k[c+4>>2];k[H+8>>2]=k[c+8>>2];k[H+12>>2]=k[c+12>>2];H=k[L>>2]|0;F=+p[H+32>>3]*72.0;F=(+p[H+88>>3]+ +p[H+96>>3])/+(~~(F+(F>=0.0?.5:-.5))|0);G=+p[H+40>>3]*72.0;G=+p[H+80>>3]/+(~~(G+(G>=0.0?.5:-.5))|0);H=gA(a,b)|0;k[Q>>2]=0;c=l[(k[L>>2]|0)+117>>0]|0;do if(!(c&1)){if(c&2){B=mB(b,k[13626]|0,141964)|0;DD(a,B);ED(a,mB(b,k[13627]|0,141972)|0);d=0;c=1;break}if(c&8){B=mB(b,k[13630]|0,141980)|0;DD(a,B);ED(a,mB(b,k[13631]|0,141988)|0);d=0;c=1;break}if(c&4){B=mB(b,k[13628]|0,141996)|0;DD(a,B);ED(a,mB(b,k[13629]|0,142004)|0);d=0;c=1;break}do if(!(H&1))if(!(H&576)){d=0;c=0}else{d=hA(b,170825)|0;c=1}else{d=hA(b,170825)|0;if(!((Bx(d,Q,g)|0)<<24>>24)){ED(a,d);c=1;break}ED(a,k[Q>>2]|0);c=k[Q+4>>2]|0;e=iB(b,k[13655]|0,0,0)|0;f=+o[g>>2];if(!c)FD(a,173315,e,f);else FD(a,c,e,f);c=(H&2)>>>1|2}while(0);B=mB(b,k[13622]|0,176676)|0;B=(i[B>>0]|0)!=0?B:173315;DD(a,B)}else{B=mB(b,k[13624]|0,141948)|0;DD(a,B);ED(a,mB(b,k[13625]|0,141956)|0);d=0;c=1}while(0);e=k[(k[L>>2]|0)+8>>2]|0;if(i[e+12>>0]|0){e=k[e>>2]|0;if((i[e>>0]|0)==99){e=(qO(e,141400)|0)==0;C=31}else{e=1;C=33}}else{e=1;C=31}if((C|0)==31){e=e^1;if((q|0)!=0|c<<24>>24==0|e)C=33;else{DD(a,173828);e=0;q=1;C=34}}if((C|0)==33)if((q|0)>0)C=34;else{s=e;q=0}if((C|0)==34){u=(M|0)>0;v=(M|0)<3;w=(H&512|0)!=0;x=(H&8|0)==0;y=(H&64|0)==0;z=(H&1024|0)==0;A=(H&2130706444|0)==0;t=0;while(1){if(u){h=ha(t,M)|0;n=k[L>>2]|0;g=k[14098]|0;m=n+16|0;n=n+24|0;s=0;do{S=s+h|0;f=+p[I+(S<<4)+8>>3];p[g+(s<<4)>>3]=F*+p[I+(S<<4)>>3]+ +p[m>>3];p[g+(s<<4)+8>>3]=G*f+ +p[n>>3];s=s+1|0}while((s|0)!=(M|0))}do if(v){if(w&(t|0)==0?(oO(d,58)|0)!=0:0)if((tx(a,k[14098]|0,d)|0)>1){c=ht(b)|0;k[D>>2]=c;Yr(3,142012,D)|0;c=0}else c=0;HD(a,k[14098]|0,M,c&255);if(!x)iA(a,b)}else{if(!y){if((t|0)==0?(ux(a,k[14098]|0,d,1)|0)>1:0){S=ht(b)|0;k[E>>2]=S;Yr(3,142012,E)|0}ID(a,k[14098]|0,M,0);break}if(!z){DD(a,173828);ID(a,k[14098]|0,M,c&255);DD(a,B);LD(a,(k[14098]|0)+32|0,2);break}g=k[14098]|0;c=c&255;if(A){ID(a,g,M,c);break}else{Pz(a,g,M,H,c);break}}while(0);t=t+1|0;if((t|0)==(q|0)){s=e;c=0;break}else c=0}}e=k[(k[L>>2]|0)+8>>2]|0;if(!(i[e+12>>0]|0)){e=ss(b,145194)|0;if((e|0)!=0?(i[e>>0]|0)!=0:0){n=e;C=63}}else{e=k[e>>2]|0;if((i[e>>0]|0)==99?(qO(e,141400)|0)==0:0){e=ss(b,141385)|0;if((e|0)!=0?(i[e>>0]|0)!=0:0){n=e;C=63}}else{n=e;C=63}}if((C|0)==63){if((M|0)>0){h=k[L>>2]|0;e=k[14098]|0;g=h+16|0;h=h+24|0;m=0;do{f=+p[I+(m<<4)+8>>3];p[e+(m<<4)>>3]=F*+p[I+(m<<4)>>3]+ +p[g>>3];p[e+(m<<4)+8>>3]=G*f+ +p[h>>3];m=m+1|0}while((m|0)!=(M|0))}e=c&255;do if(!(s|c<<24>>24==0)){if((M|0)<3){if((H&512|0)!=0&(q|0)==0?(oO(d,58)|0)!=0:0)if((tx(a,k[14098]|0,d)|0)>1){c=ht(b)|0;k[J>>2]=c;Yr(3,142012,J)|0;c=0}else c=0;HD(a,k[14098]|0,M,c&255);if(!(H&8))break;iA(a,b);break}if(!(H&64)){d=k[14098]|0;if(!(H&12)){ID(a,d,M,e);break}else{Pz(a,d,M,H,e);break}}else{if((ux(a,k[14098]|0,d,1)|0)>1){S=ht(b)|0;k[K>>2]=S;Yr(3,142012,K)|0}ID(a,k[14098]|0,M,0);break}}while(0);S=k[14098]|0;ND(a,n,S,M,c,lB(b,k[13648]|0,173309)|0)}vP(k[Q>>2]|0);ty(a,10,k[(k[L>>2]|0)+104>>2]|0);if(N){if(k[a+152>>2]&4)yD(a,k[P>>2]|0,k[O+228>>2]|0,k[O+244>>2]|0,k[O+212>>2]|0);zD(a)}r=R;return}function gA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=r;r=r+16|0;e=f;c=jA(b,e)|0;if(c)GD(a,c);c=k[13654]|0;if(((c|0)!=0?(d=ts(b,c)|0,(d|0)!=0):0)?(i[d>>0]|0)!=0:0)OD(a,+jB(b,k[13654]|0,1.0,0.0));r=f;return k[e>>2]|0}function hA(a,b){a=a|0;b=b|0;var c=0;c=mB(a,k[13623]|0,176676)|0;if(!(i[c>>0]|0)){a=mB(a,k[13622]|0,176676)|0;return ((i[a>>0]|0)==0?b:a)|0}else return c|0;return 0}function iA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,f=0,g=0.0,h=0.0,j=0.0;c=r;r=r+32|0;d=c;f=k[b+8>>2]|0;e=+p[f+80>>3]*.75*.5;g=+p[f+96>>3]*.6614;b=f+16|0;i[t>>0]=i[b>>0];i[t+1>>0]=i[b+1>>0];i[t+2>>0]=i[b+2>>0];i[t+3>>0]=i[b+3>>0];i[t+4>>0]=i[b+4>>0];i[t+5>>0]=i[b+5>>0];i[t+6>>0]=i[b+6>>0];i[t+7>>0]=i[b+7>>0];h=+p[t>>3];f=f+24|0;i[t>>0]=i[f>>0];i[t+1>>0]=i[f+1>>0];i[t+2>>0]=i[f+2>>0];i[t+3>>0]=i[f+3>>0];i[t+4>>0]=i[f+4>>0];i[t+5>>0]=i[f+5>>0];i[t+6>>0]=i[f+6>>0];i[t+7>>0]=i[f+7>>0];h=g+h;j=e+ +p[t>>3];p[d>>3]=h;f=d+8|0;p[f>>3]=j;b=d+24|0;p[b>>3]=j;p[d+16>>3]=h-g*2.0;LD(a,d,2);e=+p[f>>3]-e*2.0;p[f>>3]=e;p[b>>3]=e;LD(a,d,2);r=c;return}function jA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0.0;c=mB(a,k[13639]|0,176676)|0;a:do if(i[c>>0]|0){e=Cx(c)|0;c=k[e>>2]|0;if(!c)c=0;else{h=a+8|0;f=c;c=0;g=e;while(1){b:do switch(i[f>>0]|0){case 102:{if(!(qO(f,146944)|0)){c=c|1;d=g+4|0}else m=32;break}case 114:{if(!(qO(f,142024)|0)){d=g;do{n=d;d=d+4|0;f=k[d>>2]|0;k[n>>2]=f}while((f|0)!=0);c=c|4;d=g;break b}if(!(qO(f,142042)|0)){d=g;do{f=d;d=d+4|0;n=k[d>>2]|0;k[f>>2]=n}while((n|0)!=0);c=c|3;d=g}else m=32;break}case 100:{if(!(qO(f,142032)|0)){d=g;do{f=d;d=d+4|0;n=k[d>>2]|0;k[f>>2]=n}while((n|0)!=0);c=c|8;d=g}else m=32;break}case 105:{if(!(qO(f,170360)|0)){c=c|32;d=g+4|0}else m=32;break}case 115:{if((((((qO(f,142049)|0)==0?(j=k[(k[(k[h>>2]|0)+8>>2]|0)+8>>2]|0,(j|0)!=0):0)?(k[j+8>>2]|0)==4:0)?(o=+p[j+16>>3],((~~(o+(o>=0.0?.5:-.5))|0)%90|0|0)==0):0)?+p[j+24>>3]==0.0:0)?+p[j+32>>3]==0.0:0){d=g;do{f=d;d=d+4|0;n=k[d>>2]|0;k[f>>2]=n}while((n|0)!=0);c=c|64;d=g}else m=32;break}case 119:{if(((qO(f,142057)|0)==0?(l=k[(k[(k[h>>2]|0)+8>>2]|0)+8>>2]|0,(l|0)!=0):0)?(k[l+8>>2]|0)<3:0){d=g;do{f=d;d=d+4|0;n=k[d>>2]|0;k[f>>2]=n}while((n|0)!=0);c=c|512;d=g}else m=32;break}default:m=32}while(0);if((m|0)==32){m=0;d=g+4|0}f=k[d>>2]|0;if(!f)break a;else g=d}}}else{c=0;e=0}while(0);d=k[(k[(k[a+8>>2]|0)+8>>2]|0)+8>>2]|0;if(d)c=k[d+40>>2]|c;k[b>>2]=c;return e|0}function kA(a,b){a=a|0;b=b|0;var c=0.0,d=0,e=0.0,f=0.0,g=0,h=0,i=0;d=r;r=r+32|0;i=d+16|0;g=d;a=k[a>>2]|0;h=($t(a)|0)+8|0;h=(k[(k[h>>2]|0)+116>>2]&3)*90|0;k[i>>2]=k[b>>2];k[i+4>>2]=k[b+4>>2];k[i+8>>2]=k[b+8>>2];k[i+12>>2]=k[b+12>>2];fy(g,i,h);c=+p[g>>3];f=+p[g+8>>3];a=k[a+8>>2]|0;e=+p[a+80>>3]*.5;if(!(!(f>=-e)|!(f<=e))?c>=-+p[a+88>>3]:0)a=c<=+p[a+96>>3]&1;else a=0;r=d;return a|0}function lA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,l=0,m=0,n=0.0;l=r;r=r+32|0;i=l;f=k[a+16>>2]|0;g=f+208|0;d=k[g>>2]|0;if(!d)h=(j[f+260>>1]&1)!=0;else h=1;e=b+8|0;b=k[e>>2]|0;c=k[b+12>>2]|0;if(c){if(h?(k[a+152>>2]&4|0)==0:0){yD(a,d,k[f+228>>2]|0,k[f+244>>2]|0,k[f+212>>2]|0);b=k[e>>2]|0}d=k[a+36>>2]|0;n=+p[b+24>>3]+ +(k[c+8>>2]|0);m=k[c>>2]|0;p[i>>3]=+p[b+16>>3]+ +(k[c+4>>2]|0);p[i+8>>3]=n;k[i+16>>2]=m;FN(d,142158,i)|0;d=k[e>>2]|0;i=(k[d+104>>2]|0)+56|0;d=d+16|0;k[i>>2]=k[d>>2];k[i+4>>2]=k[d+4>>2];k[i+8>>2]=k[d+8>>2];k[i+12>>2]=k[d+12>>2];ty(a,10,k[(k[e>>2]|0)+104>>2]|0);if(h){if(k[a+152>>2]&4)yD(a,k[g>>2]|0,k[f+228>>2]|0,k[f+244>>2]|0,k[f+212>>2]|0);zD(a)}}r=l;return}function mA(a){a=a|0;tA(k[(k[a+8>>2]|0)+12>>2]|0);return}function nA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,m=0;m=r;r=r+64|0;j=m+56|0;h=m+40|0;e=m;if(!(i[c>>0]|0)){e=36584;d=a+40|0;do{k[a>>2]=k[e>>2];a=a+4|0;e=e+4|0}while((a|0)<(d|0))}else{d=(d|0)==0?142064:d;f=k[(k[b+8>>2]|0)+12>>2]|0;g=sA(f,c)|0;if(!g){if(Zz(b,f+16|0,e,c,15,0)|0){h=ht(b)|0;k[j>>2]=h;k[j+4>>2]=c;Yr(0,142127,j)|0}}else if(Zz(b,g+16|0,e,d,l[g+65>>0]|0,0)|0){j=ht(b)|0;k[h>>2]=j;k[h+4>>2]=c;k[h+8>>2]=d;Yr(0,142066,h)|0}d=a+40|0;do{k[a>>2]=k[e>>2];a=a+4|0;e=e+4|0}while((a|0)<(d|0))}r=m;return}function oA(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0,f=0,g=0,h=0.0,i=0,j=0,l=0.0;i=r;r=r+32|0;j=i+16|0;g=i;e=k[a+4>>2]|0;a=k[a>>2]|0;f=($t(a)|0)+8|0;f=(k[(k[f>>2]|0)+116>>2]&3)*90|0;k[j>>2]=k[b>>2];k[j+4>>2]=k[b+4>>2];k[j+8>>2]=k[b+8>>2];k[j+12>>2]=k[b+12>>2];fy(g,j,f);k[b>>2]=k[g>>2];k[b+4>>2]=k[g+4>>2];k[b+8>>2]=k[g+8>>2];k[b+12>>2]=k[g+12>>2];if(!e){e=k[(k[a+8>>2]|0)+12>>2]|0;f=e+16|0;a=e+24|0;g=e+32|0;e=e+40|0}else{f=e;a=e+8|0;g=e+16|0;e=e+24|0}d=+p[a>>3];c=+p[e>>3];l=+p[b>>3];if((+p[f>>3]<=l?l<=+p[g>>3]:0)?(h=+p[b+8>>3],d<=h):0)a=h<=c&1;else a=0;r=i;return a|0}function pA(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0.0,g=0.0,h=0,j=0,l=0.0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0.0;u=r;r=r+80|0;s=u+64|0;q=u+32|0;t=u;a:do if(i[b+28>>0]|0){l=+p[b>>3];o=a+8|0;b=k[(k[o>>2]|0)+12>>2]|0;m=b+48|0;if((k[m>>2]|0)>0){n=b+56|0;b=0;while(1){h=($t(a)|0)+8|0;h=(k[(k[h>>2]|0)+116>>2]&1|0)==0;j=k[(k[n>>2]|0)+(b<<2)>>2]|0;g=+(~~+p[(h?j+16|0:j+24|0)>>3]|0);if(g<=l?(f=+(~~+p[(h?j+32|0:j+40|0)>>3]|0),l<=f):0)break;b=b+1|0;if((b|0)>=(k[m>>2]|0))break a}a=($t(a)|0)+8|0;if(!(k[(k[a>>2]|0)+116>>2]&1)){a=k[o>>2]|0;v=+p[a+16>>3];p[d>>3]=g+v;g=+p[a+24>>3];l=+p[a+80>>3];p[d+8>>3]=g-l*.5;p[d+16>>3]=f+v;f=l}else{n=(k[(k[n>>2]|0)+(b<<2)>>2]|0)+16|0;a=(k[o>>2]|0)+16|0;k[q>>2]=k[n>>2];k[q+4>>2]=k[n+4>>2];k[q+8>>2]=k[n+8>>2];k[q+12>>2]=k[n+12>>2];k[q+16>>2]=k[n+16>>2];k[q+20>>2]=k[n+20>>2];k[q+24>>2]=k[n+24>>2];k[q+28>>2]=k[n+28>>2];k[s>>2]=k[a>>2];k[s+4>>2]=k[a+4>>2];k[s+8>>2]=k[a+8>>2];k[s+12>>2]=k[a+12>>2];gy(t,q,s);k[d>>2]=k[t>>2];k[d+4>>2]=k[t+4>>2];k[d+8>>2]=k[t+8>>2];k[d+12>>2]=k[t+12>>2];k[d+16>>2]=k[t+16>>2];k[d+20>>2]=k[t+20>>2];k[d+24>>2]=k[t+24>>2];k[d+28>>2]=k[t+28>>2];a=k[o>>2]|0;f=+p[a+80>>3];g=+p[a+24>>3]}p[d+24>>3]=g+f*.5;k[e>>2]=1}}else c=0;while(0);r=u;return c|0}function qA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,f=0,g=0,h=0,l=0,m=0,n=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0.0;x=r;r=r+144|0;s=x+96|0;q=x;n=x+32|0;t=x+136|0;g=x+128|0;u=k[a+16>>2]|0;v=u+208|0;if(!(k[v>>2]|0))w=(j[u+260>>1]&1)!=0;else w=1;h=b+8|0;m=k[h>>2]|0;l=k[m+12>>2]|0;f=l+16|0;k[q>>2]=k[f>>2];k[q+4>>2]=k[f+4>>2];k[q+8>>2]=k[f+8>>2];k[q+12>>2]=k[f+12>>2];k[q+16>>2]=k[f+16>>2];k[q+20>>2]=k[f+20>>2];k[q+24>>2]=k[f+24>>2];k[q+28>>2]=k[f+28>>2];y=+p[m+16>>3];p[q>>3]=y+ +p[q>>3];e=+p[m+24>>3];m=q+8|0;p[m>>3]=e+ +p[m>>3];m=q+16|0;p[m>>3]=y+ +p[m>>3];f=q+24|0;p[f>>3]=e+ +p[f>>3];if(w?(k[a+152>>2]&4|0)==0:0)yD(a,k[v>>2]|0,k[u+228>>2]|0,k[u+244>>2]|0,k[u+212>>2]|0);c=gA(a,b)|0;f=mB(b,k[13622]|0,176676)|0;DD(a,(i[f>>0]|0)!=0?f:173315);k[t>>2]=0;do if(!(c&1))f=0;else{d=hA(b,170825)|0;if(!((Bx(d,t,g)|0)<<24>>24)){ED(a,d);f=1;break}ED(a,k[t>>2]|0);d=k[t+4>>2]|0;f=iB(b,k[13655]|0,0,0)|0;e=+o[g>>2];if(!d)FD(a,173315,f,e);else FD(a,d,f,e);f=c>>>1&1|2}while(0);d=k[k[(k[h>>2]|0)+8>>2]>>2]|0;if((i[d>>0]|0)==77){h=(qO(d,141935)|0)==0;c=h?c|4:c}if(!(c&2130706444)){k[s>>2]=k[q>>2];k[s+4>>2]=k[q+4>>2];k[s+8>>2]=k[q+8>>2];k[s+12>>2]=k[q+12>>2];k[s+16>>2]=k[q+16>>2];k[s+20>>2]=k[q+20>>2];k[s+24>>2]=k[q+24>>2];k[s+28>>2]=k[q+28>>2];JD(a,s,f)}else{k[n>>2]=k[q>>2];k[n+4>>2]=k[q+4>>2];k[n+8>>2]=k[q+8>>2];k[n+12>>2]=k[q+12>>2];s=n+32|0;k[s>>2]=k[m>>2];k[s+4>>2]=k[m+4>>2];k[s+8>>2]=k[m+8>>2];k[s+12>>2]=k[m+12>>2];p[n+16>>3]=+p[s>>3];p[n+24>>3]=+p[n+8>>3];p[n+48>>3]=+p[n>>3];p[n+56>>3]=+p[n+40>>3];Pz(a,n,4,c,f)}rA(a,b,l);c=k[t>>2]|0;if(c)vP(c);if(w){if(k[a+152>>2]&4)yD(a,k[v>>2]|0,k[u+228>>2]|0,k[u+244>>2]|0,k[u+212>>2]|0);zD(a)}r=x;return}function rA(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0.0,g=0.0,h=0.0,j=0.0,l=0,m=0,n=0,o=0,q=0.0,s=0.0,u=0,v=0,w=0,x=0,y=0;y=r;r=r+32|0;x=y;d=c+52|0;e=k[d>>2]|0;if(!e)d=b+8|0;else{w=c+32|0;i[t>>0]=i[w>>0];i[t+1>>0]=i[w+1>>0];i[t+2>>0]=i[w+2>>0];i[t+3>>0]=i[w+3>>0];i[t+4>>0]=i[w+4>>0];i[t+5>>0]=i[w+5>>0];i[t+6>>0]=i[w+6>>0];i[t+7>>0]=i[w+7>>0];h=+p[t>>3];w=c+40|0;i[t>>0]=i[w>>0];i[t+1>>0]=i[w+1>>0];i[t+2>>0]=i[w+2>>0];i[t+3>>0]=i[w+3>>0];i[t+4>>0]=i[w+4>>0];i[t+5>>0]=i[w+5>>0];i[t+6>>0]=i[w+6>>0];i[t+7>>0]=i[w+7>>0];s=+p[t>>3];w=c+16|0;i[t>>0]=i[w>>0];i[t+1>>0]=i[w+1>>0];i[t+2>>0]=i[w+2>>0];i[t+3>>0]=i[w+3>>0];i[t+4>>0]=i[w+4>>0];i[t+5>>0]=i[w+5>>0];i[t+6>>0]=i[w+6>>0];i[t+7>>0]=i[w+7>>0];j=+p[t>>3];w=c+24|0;i[t>>0]=i[w>>0];i[t+1>>0]=i[w+1>>0];i[t+2>>0]=i[w+2>>0];i[t+3>>0]=i[w+3>>0];i[t+4>>0]=i[w+4>>0];i[t+5>>0]=i[w+5>>0];i[t+6>>0]=i[w+6>>0];i[t+7>>0]=i[w+7>>0];s=(s+ +p[t>>3])*.5;w=b+8|0;v=k[w>>2]|0;u=v+16|0;i[t>>0]=i[u>>0];i[t+1>>0]=i[u+1>>0];i[t+2>>0]=i[u+2>>0];i[t+3>>0]=i[u+3>>0];i[t+4>>0]=i[u+4>>0];i[t+5>>0]=i[u+5>>0];i[t+6>>0]=i[u+6>>0];i[t+7>>0]=i[u+7>>0];q=+p[t>>3];v=v+24|0;i[t>>0]=i[v>>0];i[t+1>>0]=i[v+1>>0];i[t+2>>0]=i[v+2>>0];i[t+3>>0]=i[v+3>>0];i[t+4>>0]=i[v+4>>0];i[t+5>>0]=i[v+5>>0];i[t+6>>0]=i[v+6>>0];i[t+7>>0]=i[v+7>>0];s=s+ +p[t>>3];p[e+56>>3]=(h+j)*.5+q;p[e+64>>3]=s;ty(a,10,k[d>>2]|0);d=mB(b,k[13622]|0,176676)|0;DD(a,(i[d>>0]|0)!=0?d:173315);d=w}u=k[d>>2]|0;q=+p[u+16>>3];s=+p[u+24>>3];u=c+48|0;if((k[u>>2]|0)>0){v=c+64|0;w=x+16|0;c=c+56|0;l=x+24|0;m=x+8|0;n=x+16|0;o=0;do{if((o|0)>0){d=(k[c>>2]|0)+(o<<2)|0;e=k[d>>2]|0;if(!(i[v>>0]|0)){e=e+32|0;k[w>>2]=k[e>>2];k[w+4>>2]=k[e+4>>2];k[w+8>>2]=k[e+8>>2];k[w+12>>2]=k[e+12>>2];f=+p[(k[d>>2]|0)+16>>3];p[x>>3]=f;j=+p[l>>3];p[m>>3]=j;g=j;h=+p[n>>3]}else{e=e+16|0;k[x>>2]=k[e>>2];k[x+4>>2]=k[e+4>>2];k[x+8>>2]=k[e+8>>2];k[x+12>>2]=k[e+12>>2];h=+p[x>>3];p[n>>3]=h;j=+p[(k[d>>2]|0)+40>>3];p[l>>3]=j;f=h;g=+p[m>>3]}p[x>>3]=q+f;p[m>>3]=s+g;p[n>>3]=q+h;p[l>>3]=s+j;LD(a,x,2)}rA(a,b,k[(k[c>>2]|0)+(o<<2)>>2]|0);o=o+1|0}while((o|0)<(k[u>>2]|0))}r=y;return}function sA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=k[a+60>>2]|0;if(!(((c|0)!=0?(i[c>>0]|0)==(i[b>>0]|0):0)?(qO(c,b)|0)==0:0))d=4;a:do if((d|0)==4){e=k[a+48>>2]|0;if((e|0)>0){c=k[a+56>>2]|0;d=0;while(1){a=sA(k[c+(d<<2)>>2]|0,b)|0;d=d+1|0;if(a)break a;if((d|0)>=(e|0)){a=0;break}}}else a=0}while(0);return a|0}function tA(a){a=a|0;var b=0,c=0,d=0;b=a+48|0;c=a+56|0;if((k[b>>2]|0)>0){d=0;do{tA(k[(k[c>>2]|0)+(d<<2)>>2]|0);d=d+1|0}while((d|0)<(k[b>>2]|0))}vP(k[a+60>>2]|0);sy(k[a+52>>2]|0);vP(k[c>>2]|0);vP(a);return}function uA(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0,g=0,h=0,i=0;f=r;r=r+32|0;i=f+16|0;g=f;a=k[a>>2]|0;h=($t(a)|0)+8|0;h=(k[(k[h>>2]|0)+116>>2]&3)*90|0;k[i>>2]=k[b>>2];k[i+4>>2]=k[b+4>>2];k[i+8>>2]=k[b+8>>2];k[i+12>>2]=k[b+12>>2];fy(g,i,h);e=+p[g>>3];d=+p[g+8>>3];if((a|0)==(k[14109]|0))c=+p[4578];else{h=k[(k[a+8>>2]|0)+12>>2]|0;i=(k[h+4>>2]<<1)+-2|0;c=+p[(k[h+44>>2]|0)+(((i|0)<0?1:i|1)<<4)>>3];p[4578]=c;k[14109]=a}if(!(+W(+e)>c)?!(+W(+d)>c):0)a=+MM(e,d)<=c&1;else a=0;r=f;return a|0}function vA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0;w=r;r=r+16|0;e=w;u=k[a+16>>2]|0;v=u+208|0;c=k[v>>2]|0;if((c|0)==0?(j[u+260>>1]&1)==0:0)o=0;else if(!(k[a+152>>2]&4)){yD(a,c,k[u+228>>2]|0,k[u+244>>2]|0,k[u+212>>2]|0);o=1}else o=1;q=b+8|0;f=k[(k[q>>2]|0)+12>>2]|0;s=k[f+44>>2]|0;t=k[f+8>>2]|0;f=k[f+4>>2]|0;if((k[14104]|0)<(t|0)){c=t+2|0;k[14104]=c;d=k[14105]|0;if(!d)c=Cy(c<<4)|0;else c=Ey(d,c<<4)|0;k[14105]=c}jA(b,e)|0;if(!(k[e>>2]&32))GD(a,56428);else GD(a,56424);c=l[(k[q>>2]|0)+117>>0]|0;do if(!(c&1)){if(c&2){DD(a,mB(b,k[13626]|0,141964)|0);c=mB(b,k[13627]|0,141972)|0;ED(a,c);break}if(c&8){DD(a,mB(b,k[13630]|0,141980)|0);c=mB(b,k[13631]|0,141988)|0;ED(a,c);break}if(!(c&4)){c=hA(b,173315)|0;ED(a,c);n=mB(b,k[13622]|0,176676)|0;DD(a,(i[n>>0]|0)!=0?n:173315);break}else{DD(a,mB(b,k[13628]|0,141996)|0);c=mB(b,k[13629]|0,142004)|0;ED(a,c);break}}else{DD(a,mB(b,k[13624]|0,141948)|0);c=mB(b,k[13625]|0,141956)|0;ED(a,c)}while(0);if(!f)if(!(i[c>>0]|0)){f=1;g=26}else{DD(a,c);f=1;g=26}else if((f|0)>0)g=26;if((g|0)==26){h=(t|0)>0;m=1;n=0;while(1){if(h){d=ha(n,t)|0;b=k[q>>2]|0;c=k[14105]|0;e=b+16|0;b=b+24|0;g=0;do{y=g+d|0;x=+p[s+(y<<4)+8>>3];p[c+(g<<4)>>3]=+p[s+(y<<4)>>3]+ +p[e>>3];p[c+(g<<4)+8>>3]=x+ +p[b>>3];g=g+1|0}while((g|0)!=(t|0))}else c=k[14105]|0;HD(a,c,t,m);n=n+1|0;if((n|0)==(f|0))break;else m=0}}if(o){if(k[a+152>>2]&4)yD(a,k[v>>2]|0,k[u+228>>2]|0,k[u+244>>2]|0,k[u+212>>2]|0);zD(a)}r=w;return}function wA(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0,g=0.0,h=0,j=0.0,l=0,m=0,n=0.0,o=0,q=0.0,s=0,u=0.0,v=0.0,w=0,x=0.0,y=0.0,z=0,A=0;w=r;r=r+64|0;m=w+48|0;s=w+32|0;h=w;f=k[a+4>>2]|0;l=k[a>>2]|0;o=($t(l)|0)+8|0;o=(k[(k[o>>2]|0)+116>>2]&3)*90|0;k[m>>2]=k[b>>2];k[m+4>>2]=k[b+4>>2];k[m+8>>2]=k[b+8>>2];k[m+12>>2]=k[b+12>>2];fy(s,m,o);n=+p[s>>3];q=+p[s+8>>3];do if(!f){if((l|0)==(k[14110]|0)){c=+p[4579];d=+p[4580];e=+p[4581]}else{a=l+8|0;b=k[(k[a>>2]|0)+12>>2]|0;k[14111]=b;k[14112]=k[b+44>>2];k[14113]=k[b+8>>2];do if(k[b+40>>2]&2048){DB(h,b);g=+p[h+16>>3]-+p[h>>3];e=+p[h+24>>3]-+p[h+8>>3];s=($t(l)|0)+8|0;if(!(k[(k[s>>2]|0)+116>>2]&1)){p[4583]=g;p[4582]=e;d=g;c=e;j=e;e=g;break}else{p[4582]=g;p[4583]=e;d=e;c=g;j=e;e=g;break}}else{s=($t(l)|0)+8|0;a=k[a>>2]|0;c=+p[a+88>>3]+ +p[a+96>>3];if(!(k[(k[s>>2]|0)+116>>2]&1)){p[4583]=c;u=+p[a+80>>3];p[4582]=u;d=c;c=u}else{p[4582]=c;d=+p[a+80>>3];p[4583]=d}e=+p[a+32>>3]*72.0;j=+p[a+40>>3]*72.0;j=+(~~(j+(j>=0.0?.5:-.5))|0);e=+(~~(e+(e>=0.0?.5:-.5))|0)}while(0);if(d==0.0){p[4583]=1.0;d=1.0}if(c==0.0){p[4582]=1.0;c=1.0}u=e/d;p[4579]=u;d=j/c;p[4580]=d;e=e*.5;p[4581]=e;p[4584]=j*.5;s=ha((k[(k[14111]|0)+4>>2]|0)+-1|0,k[14113]|0)|0;k[14114]=(s|0)<0?0:s;k[14110]=l;c=u}u=n*c;q=q*d;if(!(+W(+u)>e)?(n=+W(+q),v=+p[4584],!(n>v)):0){s=k[14113]|0;if((s|0)<3){a=+MM(u/e,q/v)<1.0&1;break}a=(k[14115]|0)%(s|0)|0;b=(a+1|0)%(s|0)|0;l=k[14114]|0;o=l+a|0;m=k[14112]|0;c=+p[m+(o<<4)>>3];d=+p[m+(o<<4)+8>>3];o=l+b|0;e=+p[m+(o<<4)>>3];g=+p[m+(o<<4)+8>>3];y=-(g-d);x=e-c;v=d*x+c*y;j=+p[4585];n=+p[4586];if(!(q*x+u*y-v>=0.0^j*y+x*n-v>=0.0)){x=-(n-g);v=j-e;y=g*v+e*x;o=q*v+u*x-y>=0.0^d*v+c*x-y>=0.0;if(!o?(x=-(d-n),v=c-j,y=n*v+j*x,!(q*v+u*x-y>=0.0^g*v+e*x-y>=0.0)):0){a=1;break}else{h=a;f=1}while(1){if(o){a=(h+-1+s|0)%(s|0)|0;b=h}else{a=b;b=(b+1|0)%(s|0)|0}h=l+a|0;z=l+b|0;A=m+(z<<4)|0;i[t>>0]=i[A>>0];i[t+1>>0]=i[A+1>>0];i[t+2>>0]=i[A+2>>0];i[t+3>>0]=i[A+3>>0];i[t+4>>0]=i[A+4>>0];i[t+5>>0]=i[A+5>>0];i[t+6>>0]=i[A+6>>0];i[t+7>>0]=i[A+7>>0];x=+p[t>>3];z=m+(z<<4)+8|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];v=+p[t>>3];z=m+(h<<4)|0;i[t>>0]=i[z>>0];i[t+1>>0]=i[z+1>>0];i[t+2>>0]=i[z+2>>0];i[t+3>>0]=i[z+3>>0];i[t+4>>0]=i[z+4>>0];i[t+5>>0]=i[z+5>>0];i[t+6>>0]=i[z+6>>0];i[t+7>>0]=i[z+7>>0];y=+p[t>>3];h=m+(h<<4)+8|0;i[t>>0]=i[h>>0];i[t+1>>0]=i[h+1>>0];i[t+2>>0]=i[h+2>>0];i[t+3>>0]=i[h+3>>0];i[t+4>>0]=i[h+4>>0];i[t+5>>0]=i[h+5>>0];i[t+6>>0]=i[h+6>>0];i[t+7>>0]=i[h+7>>0];g=+p[t>>3];v=-(v-g);x=x-y;y=g*x+y*v;f=f+1|0;if(q*x+u*v-y>=0.0^j*v+x*n-y>=0.0){b=32;break}if((f|0)>=(s|0)){b=33;break}else h=a}if((b|0)==32){k[14115]=a;a=0;break}else if((b|0)==33){k[14115]=a;a=1;break}}else a=0}else a=0}else{c=+p[f+24>>3];if(+p[f>>3]<=n?!(+p[f+8>>3]<=q?!(n<=+p[f+16>>3]):1):0)a=q<=c&1;else a=0}while(0);r=w;return a|0}function xA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;e=By(72)|0;m=k[(k[a+8>>2]|0)+104>>2]|0;l=0;f=1;h=k[14116]|0;a:while(1){g=i[h>>0]|0;switch(g<<24>>24){case 0:break a;case 92:{h=h+1|0;g=i[h>>0]|0;switch(g<<24>>24){case 124:case 125:case 123:case 92:{j=l;break}default:C=4}break}default:C=4}if((C|0)==4){C=0;switch(g<<24>>24){case 123:{j=l+1|0;break}case 125:{j=l+-1|0;break}default:{j=l;f=((l|0)==0&g<<24>>24==124&1)+f|0}}if((j|0)<0)break}l=j;h=h+1|0}w=By(f<<2)|0;z=e+56|0;k[z>>2]=w;i[e+64>>0]=b;w=(b|0)==0&1;x=m+82|0;y=d+1|0;t=(c|0)!=0;u=m+16|0;v=m+4|0;r=m+8|0;f=0;h=0;b=0;c=d;m=0;j=0;l=0;g=d;s=0;b:while(1){o=h;while(1){h=0;c:while(1){d:while(1){q=h;e:while(1){n=j;f:while(1){if(s){C=82;break b}h=k[14116]|0;j=i[h>>0]|0;if(!(j<<24>>24>31|j<<24>>24==0))do{h=h+1|0;k[14116]=h;j=i[h>>0]|0}while(!(j<<24>>24>31|j<<24>>24==0));switch(j<<24>>24|0){case 0:case 124:case 125:{h=q;break c}case 92:{C=57;break d}case 60:break e;case 62:break f;case 123:break;default:break d}h=h+1|0;k[14116]=h;if(n){f=q;C=35;break b}if(!(i[h>>0]|0)){f=q;C=35;break b}n=xA(a,w,0,d)|0;k[(k[z>>2]|0)+(f<<2)>>2]=n;if(!n){f=q;C=38;break b}else{f=f+1|0;n=4}}if(i[x>>0]|0)break d;if(!(n&16)){f=q;C=27;break b}if(l>>>0>y>>>0?(A=l+-1|0,(A|0)!=(b|0)):0)h=(i[A>>0]|0)==32?A:l;else h=l;i[h>>0]=0;q=tO(d)|0;k[14116]=(k[14116]|0)+1;j=n&-17;l=h}if(n&6){f=q;C=21;break b}if(i[x>>0]|0)break;k[14116]=h+1;b=d;j=n|18;l=d;h=q}g:do if((C|0)==57){C=0;j=h+1|0;switch(i[j>>0]|0){case 0:break g;case 62:case 60:case 124:case 125:case 123:{k[14116]=j;h=j;break g}case 32:{C=59;break}default:{}}if((C|0)==59?(C=0,(i[x>>0]|0)==0):0){k[14116]=j;h=j;m=1;break}i[g>>0]=92;h=(k[14116]|0)+1|0;k[14116]=h;n=n|9;g=g+1|0}while(0);if((n&4|0)!=0?(i[h>>0]|0)!=32:0){f=q;C=64;break b}if(!(n&24))n=(i[h>>0]|0)==32?n:n|9;if(!(n&8)){if(n&16){h=i[h>>0]|0;j=(m|0)!=0;if(!(j|h<<24>>24!=32))if((l|0)!=(d|0))if((i[l+-1>>0]|0)==32)h=l;else C=78;else h=d;else C=78;if((C|0)==78){C=0;i[l>>0]=h;h=l+1|0}b=j?h+-1|0:b;l=h}}else{h=i[h>>0]|0;j=(m|0)!=0;if(!((!(j|h<<24>>24!=32)?(i[g+-1>>0]|0)==32:0)?(i[x>>0]|0)==0:0)){i[g>>0]=h;g=g+1|0}c=j?g+-1|0:c}h=(k[14116]|0)+1|0;k[14116]=h;if((i[h>>0]|0)<0)j=g;else{j=n;h=q;continue}while(1){k[14116]=h+1;g=j+1|0;i[j>>0]=i[h>>0]|0;h=k[14116]|0;if((i[h>>0]|0)<0)j=g;else{j=n;h=q;continue c}}}if(!((n&16|0)==0&(t|j<<24>>24!=0))){f=h;C=41;break b}if(!(n&4)){o=By(72)|0;k[(k[z>>2]|0)+(f<<2)>>2]=o;f=f+1|0}if(h)k[o+60>>2]=h;if(!(n&5)){i[g>>0]=32;j=n|1;g=g+1|0}else j=n;if(!(j&1))n=g;else{if(g>>>0>y>>>0?(B=g+-1|0,(B|0)!=(c|0)):0)g=(i[B>>0]|0)==32?B:g;i[g>>0]=0;c=tO(d)|0;c=qy(a,c,(i[x>>0]|0)!=0?2:0,+p[u>>3],k[v>>2]|0,k[r>>2]|0)|0;k[o+52>>2]=c;i[o+64>>0]=1;c=d;n=d}g=k[14116]|0;switch(i[g>>0]|0){case 0:{h=o;g=n;s=1;continue b}case 125:{C=55;break b}default:{}}k[14116]=g+1;j=0;g=n}}if((C|0)==21){tA(e);if(!f)e=0;else{vP(f);e=0}}else if((C|0)==27){tA(e);if(!f)e=0;else{vP(f);e=0}}else if((C|0)==35){tA(e);if(!f)e=0;else{vP(f);e=0}}else if((C|0)==38){tA(e);if(!f)e=0;else{vP(f);e=0}}else if((C|0)==41){tA(e);if(!f)e=0;else{vP(f);e=0}}else if((C|0)==55){k[14116]=g+1;k[e+48>>2]=f}else if((C|0)==64){tA(e);if(!f)e=0;else{vP(f);e=0}}else if((C|0)==82)k[e+48>>2]=f;return e|0}function yA(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0,g=0,h=0,j=0,l=0.0,m=0.0,n=0,o=0,q=0;q=r;r=r+48|0;j=q+32|0;g=q+24|0;h=q+16|0;o=q;f=k[c+52>>2]|0;do if(!f){f=c+48|0;if((k[f>>2]|0)>0){g=c+56|0;h=o+8|0;j=c+64|0;e=0.0;d=0.0;n=0;do{yA(o,b,k[(k[g>>2]|0)+(n<<2)>>2]|0);l=+p[o>>3];m=+p[h>>3];if(!(i[j>>0]|0)){e=e>l?e:l;d=d+m}else{e=e+l;d=d>m?d:m}n=n+1|0}while((n|0)<(k[f>>2]|0))}else{e=0.0;d=0.0}}else{e=+p[f+24>>3];d=+p[f+32>>3];if(e>0.0|d>0.0){f=ss(b,142240)|0;if(!f){e=e+16.0;d=d+8.0;break}k[j>>2]=g;k[j+4>>2]=h;if((UN(f,142247,j)|0)>0){l=+p[g>>3]*72.0;m=+p[h>>3]*72.0;e=e+ +(~~(l+(l>=0.0?.5:-.5))<<1|0);d=d+ +(~~(m+(m>=0.0?.5:-.5))<<1|0);break}else{e=e+16.0;d=d+8.0;break}}}while(0);p[c>>3]=e;p[c+8>>3]=d;p[a>>3]=e;p[a+8>>3]=d;r=q;return}function zA(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0.0,g=0,h=0,j=0,l=0,m=0.0,n=0,o=0.0,q=0.0,s=0,t=0,u=0;u=r;r=r+32|0;t=u+16|0;s=u;m=+p[b>>3];d=m-+p[a>>3];q=+p[b+8>>3];f=q-+p[a+8>>3];k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];b=k[a+52>>2]|0;if(!((c|0)!=0|(b|0)==0)){l=b+40|0;p[l>>3]=d+ +p[l>>3];l=b+48|0;p[l>>3]=f+ +p[l>>3]}l=a+48|0;b=k[l>>2]|0;a:do if((b|0)!=0?(n=a+64|0,e=i[n>>0]|0,o=(e<<24>>24==0?f:d)/+(b|0),(b|0)>0):0){h=a+56|0;j=s+8|0;b=0;while(1){a=k[(k[h>>2]|0)+(b<<2)>>2]|0;g=b+1|0;b=~~(o*+(g|0))-~~(o*+(b|0))|0;if(!(e<<24>>24)){f=+(b|0)+ +p[a+8>>3];d=m}else{f=q;d=+(b|0)+ +p[a>>3]}p[s>>3]=d;p[j>>3]=f;k[t>>2]=k[s>>2];k[t+4>>2]=k[s+4>>2];k[t+8>>2]=k[s+8>>2];k[t+12>>2]=k[s+12>>2];zA(a,t,c);if((g|0)>=(k[l>>2]|0))break a;e=i[n>>0]|0;b=g}}while(0);r=u;return}function AA(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0.0,s=0.0,t=0.0;o=r;r=r+16|0;n=o;i[a+65>>0]=c;s=+p[b>>3];m=b+8|0;q=+p[m>>3];t=q-+p[a+8>>3];p[a+16>>3]=s;p[a+24>>3]=t;p[a+32>>3]=s+ +p[a>>3];p[a+40>>3]=q;g=k[a+48>>2]|0;h=g+-1|0;if((g|0)>=1){j=(c|0)==0;l=a+56|0;e=a+64|0;f=0;do{do if(!j){a=(f|0)==0;d=(f|0)==(h|0);if(!(i[e>>0]|0))if(a){a=d?15:14;break}else{a=d?11:10;break}else if(a){a=d?15:13;break}else{a=d?7:5;break}}else a=0;while(0);d=k[(k[l>>2]|0)+(f<<2)>>2]|0;k[n>>2]=k[b>>2];k[n+4>>2]=k[b+4>>2];k[n+8>>2]=k[b+8>>2];k[n+12>>2]=k[b+12>>2];AA(d,n,a&c);if(!(i[e>>0]|0))p[m>>3]=+p[m>>3]-+p[(k[(k[l>>2]|0)+(f<<2)>>2]|0)+8>>3];else p[b>>3]=+p[b>>3]+ +p[k[(k[l>>2]|0)+(f<<2)>>2]>>3];f=f+1|0}while((f|0)!=(g|0))}r=o;return}function BA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,g=0.0,h=0,i=0.0,j=0.0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;F=r;r=r+192|0;C=F+176|0;E=F+112|0;D=F+48|0;B=F+32|0;A=F+24|0;z=F+16|0;y=F;if(!(d<<24>>24)){h=c+48|0;k[B>>2]=k[h>>2];k[B+4>>2]=k[h+4>>2];k[B+8>>2]=k[h+8>>2];k[B+12>>2]=k[h+12>>2];h=B;u=z;v=E;w=A;x=0}else{k[B>>2]=k[c>>2];k[B+4>>2]=k[c+4>>2];k[B+8>>2]=k[c+8>>2];k[B+12>>2]=k[c+12>>2];h=B;u=A;v=0;w=z;x=E}p[A>>3]=0.0;p[z>>3]=1.0;l=B+8|0;m=D+16|0;n=E+16|0;o=D+32|0;q=E+32|0;s=D+48|0;t=E+48|0;f=1.0;g=0.0;j=+p[B>>3];d=0;while(1){i=+p[l>>3];e=(f+g)*.5;uB(y,c,3,e,v,x);k[h>>2]=k[y>>2];k[h+4>>2]=k[y+4>>2];k[h+8>>2]=k[y+8>>2];k[h+12>>2]=k[y+12>>2];k[C>>2]=k[B>>2];k[C+4>>2]=k[B+4>>2];k[C+8>>2]=k[B+8>>2];k[C+12>>2]=k[B+12>>2];if(!((_b[b&127](a,C)|0)<<24>>24)){k[D>>2]=k[E>>2];k[D+4>>2]=k[E+4>>2];k[D+8>>2]=k[E+8>>2];k[D+12>>2]=k[E+12>>2];k[m>>2]=k[n>>2];k[m+4>>2]=k[n+4>>2];k[m+8>>2]=k[n+8>>2];k[m+12>>2]=k[n+12>>2];k[o>>2]=k[q>>2];k[o+4>>2]=k[q+4>>2];k[o+8>>2]=k[q+8>>2];k[o+12>>2]=k[q+12>>2];k[s>>2]=k[t>>2];k[s+4>>2]=k[t+4>>2];k[s+8>>2]=k[t+8>>2];k[s+12>>2]=k[t+12>>2];p[w>>3]=e;d=1}else p[u>>3]=e;e=+p[B>>3];j=j-e;if(!((j>=0.0?j:-j)>.5)?(j=i-+p[l>>3],!((j>=0.0?j:-j)>.5)):0)break;f=+p[z>>3];g=+p[A>>3];j=e}if(!(d<<24>>24)){k[c>>2]=k[E>>2];k[c+4>>2]=k[E+4>>2];k[c+8>>2]=k[E+8>>2];k[c+12>>2]=k[E+12>>2];D=c+16|0;C=E+16|0;k[D>>2]=k[C>>2];k[D+4>>2]=k[C+4>>2];k[D+8>>2]=k[C+8>>2];k[D+12>>2]=k[C+12>>2];D=c+32|0;C=E+32|0;k[D>>2]=k[C>>2];k[D+4>>2]=k[C+4>>2];k[D+8>>2]=k[C+8>>2];k[D+12>>2]=k[C+12>>2];c=c+48|0;E=E+48|0;k[c>>2]=k[E>>2];k[c+4>>2]=k[E+4>>2];k[c+8>>2]=k[E+8>>2];k[c+12>>2]=k[E+12>>2]}else{k[c>>2]=k[D>>2];k[c+4>>2]=k[D+4>>2];k[c+8>>2]=k[D+8>>2];k[c+12>>2]=k[D+12>>2];E=c+16|0;C=D+16|0;k[E>>2]=k[C>>2];k[E+4>>2]=k[C+4>>2];k[E+8>>2]=k[C+8>>2];k[E+12>>2]=k[C+12>>2];E=c+32|0;C=D+32|0;k[E>>2]=k[C>>2];k[E+4>>2]=k[C+4>>2];k[E+8>>2]=k[C+8>>2];k[E+12>>2]=k[C+12>>2];c=c+48|0;E=D+48|0;k[c>>2]=k[E>>2];k[c+4>>2]=k[E+4>>2];k[c+8>>2]=k[E+8>>2];k[c+12>>2]=k[E+12>>2]}r=F;return}function CA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0.0;j=r;r=r+48|0;h=j+16|0;g=j;i=j+32|0;c=a+8|0;d=k[c>>2]|0;e=k[d+8>>2]|0;if((e|0)!=0?(f=k[(k[e+4>>2]|0)+12>>2]|0,(f|0)!=0):0){k[i>>2]=a;k[i+4>>2]=0;l=+p[d+96>>3];p[g>>3]=+p[b>>3]-+p[d+16>>3];p[g+8>>3]=+p[b+8>>3]-+p[d+24>>3];k[h>>2]=k[g>>2];k[h+4>>2]=k[g+4>>2];k[h+8>>2]=k[g+8>>2];k[h+12>>2]=k[g+12>>2];h=_b[f&127](i,h)|0;p[(k[c>>2]|0)+96>>3]=l;PA(i,a,b,h)}r=j;return}function DA(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=a+8|0;a=k[c>>2]|0;if(i[a+112>>0]|0)do{c=(k[a+116>>2]|0)+8|0;a=k[c>>2]|0}while((i[a+112>>0]|0)!=0);a=k[a+8>>2]|0;if(!a){a=By(40)|0;k[(k[c>>2]|0)+8>>2]=a}d=k[a>>2]|0;a=k[a+4>>2]|0;if(!d)a=Cy((a*48|0)+48|0)|0;else a=Ey(d,(a*48|0)+48|0)|0;d=k[(k[c>>2]|0)+8>>2]|0;k[d>>2]=a;d=d+4|0;c=k[d>>2]|0;k[d>>2]=c+1;d=a+(c*48|0)|0;e=By(b<<4)|0;k[d>>2]=e;k[a+(c*48|0)+4>>2]=b;a=a+(c*48|0)+8|0;c=a+40|0;do{k[a>>2]=0;a=a+4|0}while((a|0)<(c|0));return d|0}function EA(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0.0,H=0.0;F=r;r=r+96|0;E=F+16|0;B=F+80|0;w=F;x=F+88|0;A=a+32|0;l=k[((k[a>>2]&3|0)==3?a:A)+28>>2]|0;C=$t(l)|0;D=DA(a,d)|0;f=k[a+8>>2]|0;if(!(i[f+112>>0]|0))g=a;else do{g=k[f+116>>2]|0;f=k[g+8>>2]|0}while((i[f+112>>0]|0)!=0);z=e+8|0;if((i[z>>0]|0)==0?(h=k[l+8>>2]|0,j=k[b+8>>2]|0,(k[h+232>>2]|0)==(k[j+232>>2]|0)):0){m=(k[h+236>>2]|0)>(k[j+236>>2]|0);y=m?l:b;l=m?b:l}else y=b;h=i[f+46>>0]|0;j=i[f+86>>0]|0;if((l|0)==(k[((k[g>>2]&3|0)==3?g:g+32|0)+28>>2]|0)){m=j&255;h=h&255;g=f+80|0;f=f+40|0}else{m=h&255;h=j&255;g=f+40|0;f=f+80|0}b=k[g>>2]|0;f=k[f>>2]|0;if(((h|0)!=0?(o=l+8|0,n=k[(k[o>>2]|0)+8>>2]|0,(n|0)!=0):0)?(k[(k[n+4>>2]|0)+12>>2]|0)!=0:0){k[x>>2]=l;k[x+4>>2]=f;f=d+-4|0;h=w+8|0;g=0;while(1){if((g|0)>=(f|0))break;j=g+3|0;n=k[o>>2]|0;p[w>>3]=+p[c+(j<<4)>>3]-+p[n+16>>3];p[h>>3]=+p[c+(j<<4)+8>>3]-+p[n+24>>3];n=k[(k[(k[n+8>>2]|0)+4>>2]|0)+12>>2]|0;k[E>>2]=k[w>>2];k[E+4>>2]=k[w+4>>2];k[E+8>>2]=k[w+8>>2];k[E+12>>2]=k[w+12>>2];if(!((_b[n&127](x,E)|0)<<24>>24))break;else g=j}PA(x,l,c+(g<<4)|0,1)}else g=0;if(((m|0)!=0?(v=y+8|0,t=k[v>>2]|0,q=k[t+8>>2]|0,(q|0)!=0):0)?(s=k[(k[q+4>>2]|0)+12>>2]|0,(s|0)!=0):0){k[x>>2]=y;k[x+4>>2]=b;j=d+-4|0;a:do if((d|0)>4?(u=w+8|0,p[w>>3]=+p[c+(j<<4)>>3]-+p[t+16>>3],p[u>>3]=+p[c+(j<<4)+8>>3]-+p[t+24>>3],k[E>>2]=k[w>>2],k[E+4>>2]=k[w+4>>2],k[E+8>>2]=k[w+8>>2],k[E+12>>2]=k[w+12>>2],(_b[s&127](x,E)|0)<<24>>24!=0):0){h=j;while(1){f=h+-3|0;if((h|0)<=3)break a;t=k[v>>2]|0;d=k[(k[(k[t+8>>2]|0)+4>>2]|0)+12>>2]|0;p[w>>3]=+p[c+(f<<4)>>3]-+p[t+16>>3];p[u>>3]=+p[c+(f<<4)+8>>3]-+p[t+24>>3];k[E>>2]=k[w>>2];k[E+4>>2]=k[w+4>>2];k[E+8>>2]=k[w+8>>2];k[E+12>>2]=k[w+12>>2];if(!((_b[d&127](x,E)|0)<<24>>24))break;else h=f}}else f=j;while(0);PA(x,y,c+(f<<4)|0,0)}else{j=d+-4|0;f=j}while(1){if((g|0)>=(j|0)){j=g;break}h=g+3|0;H=+p[c+(g<<4)>>3]-+p[c+(h<<4)>>3];G=+p[c+(g<<4)+8>>3]-+p[c+(h<<4)+8>>3];if(H*H+G*G<1.0e-06)g=h;else{j=g;break}}b:do if((f|0)>0)while(1){x=f+3|0;G=+p[c+(f<<4)>>3]-+p[c+(x<<4)>>3];H=+p[c+(f<<4)+8>>3]-+p[c+(x<<4)+8>>3];if(!(G*G+H*H<1.0e-06)){q=f;break b}g=f+-3|0;if((f|0)>3)f=g;else{q=g;break}}else q=f;while(0);g=a;while(1){f=k[(k[g+8>>2]|0)+116>>2]|0;if(!f){h=g;break}else g=f}if(!(i[z>>0]|0))g=(Rb[k[e>>2]&63](h)|0)&255;else g=0;Yw(h,E,B);f=e+4|0;if((Rb[k[f>>2]&63](y)|0)<<24>>24)k[B>>2]=0;if((Rb[k[f>>2]&63](k[((k[a>>2]&3|0)==3?a:A)+28>>2]|0)|0)<<24>>24)k[E>>2]=0;if(g){a=k[E>>2]|0;k[E>>2]=k[B>>2];k[B>>2]=a}if(!(i[e+9>>0]|0)){f=k[E>>2]|0;if(!f)g=j;else g=$w(h,c,j,q,D,f)|0;f=k[B>>2]|0;if(f)q=_w(h,c,g,q,D,f)|0}else{f=k[B>>2]|0;g=k[E>>2]|0;if(!(g|f))g=j;else{ax(h,c,j,q,D,g,f);g=j}}l=q+4|0;c:do if((g|0)<(l|0)){b=q+3|0;m=E+16|0;n=E+32|0;o=E+48|0;f=C+8|0;j=g;while(1){C=(k[D>>2]|0)+(j-g<<4)|0;h=c+(j<<4)|0;k[C>>2]=k[h>>2];k[C+4>>2]=k[h+4>>2];k[C+8>>2]=k[h+8>>2];k[C+12>>2]=k[h+12>>2];k[E>>2]=k[h>>2];k[E+4>>2]=k[h+4>>2];k[E+8>>2]=k[h+8>>2];k[E+12>>2]=k[h+12>>2];h=j+1|0;if((j|0)>=(b|0))break;B=(k[D>>2]|0)+(h-g<<4)|0;C=c+(h<<4)|0;k[B>>2]=k[C>>2];k[B+4>>2]=k[C+4>>2];k[B+8>>2]=k[C+8>>2];k[B+12>>2]=k[C+12>>2];k[m>>2]=k[C>>2];k[m+4>>2]=k[C+4>>2];k[m+8>>2]=k[C+8>>2];k[m+12>>2]=k[C+12>>2];C=j+2|0;B=(k[D>>2]|0)+(C-g<<4)|0;C=c+(C<<4)|0;k[B>>2]=k[C>>2];k[B+4>>2]=k[C+4>>2];k[B+8>>2]=k[C+8>>2];k[B+12>>2]=k[C+12>>2];k[n>>2]=k[C>>2];k[n+4>>2]=k[C+4>>2];k[n+8>>2]=k[C+8>>2];k[n+12>>2]=k[C+12>>2];j=j+3|0;C=c+(j<<4)|0;k[o>>2]=k[C>>2];k[o+4>>2]=k[C+4>>2];k[o+8>>2]=k[C+8>>2];k[o+12>>2]=k[C+12>>2];wx((k[f>>2]|0)+16|0,E);if((j|0)>=(l|0))break c}}while(0);k[D+4>>2]=4-g+q;r=F;return}function FA(a,b){a=a|0;b=b|0;var c=0,d=0;if(+p[b>>3]<+p[b+16>>3]?+p[b+8>>3]<+p[b+24>>3]:0){d=a+80|0;c=k[d>>2]|0;k[d>>2]=c+1;a=(k[a+84>>2]|0)+(c<<5)|0;k[a>>2]=k[b>>2];k[a+4>>2]=k[b+4>>2];k[a+8>>2]=k[b+8>>2];k[a+12>>2]=k[b+12>>2];k[a+16>>2]=k[b+16>>2];k[a+20>>2]=k[b+20>>2];k[a+24>>2]=k[b+24>>2];k[a+28>>2]=k[b+28>>2]}return}function GA(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0.0,g=0,h=0,j=0.0,l=0.0,m=0.0,n=0.0,o=0,q=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0;z=r;r=r+48|0;o=z;h=k[b>>2]&3;q=b+32|0;y=k[((h|0)==3?b:q)+28>>2]|0;w=b+8|0;v=k[w>>2]|0;g=v+16|0;if(i[v+47>>0]|0){Uz(o,y,k[((h|0)==2?b:b+-32|0)+28>>2]|0,g);h=o;o=g+40|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(o|0))}s=y+8|0;h=k[s>>2]|0;g=k[h+8>>2]|0;if(!g)o=0;else o=k[(k[g+4>>2]|0)+16>>2]|0;v=k[w>>2]|0;g=v+16|0;i[t>>0]=i[g>>0];i[t+1>>0]=i[g+1>>0];i[t+2>>0]=i[g+2>>0];i[t+3>>0]=i[g+3>>0];i[t+4>>0]=i[g+4>>0];i[t+5>>0]=i[g+5>>0];i[t+6>>0]=i[g+6>>0];i[t+7>>0]=i[g+7>>0];l=+p[t>>3];v=v+24|0;i[t>>0]=i[v>>0];i[t+1>>0]=i[v+1>>0];i[t+2>>0]=i[v+2>>0];i[t+3>>0]=i[v+3>>0];i[t+4>>0]=i[v+4>>0];i[t+5>>0]=i[v+5>>0];i[t+6>>0]=i[v+6>>0];i[t+7>>0]=i[v+7>>0];n=+p[t>>3];v=h+16|0;i[t>>0]=i[v>>0];i[t+1>>0]=i[v+1>>0];i[t+2>>0]=i[v+2>>0];i[t+3>>0]=i[v+3>>0];i[t+4>>0]=i[v+4>>0];i[t+5>>0]=i[v+5>>0];i[t+6>>0]=i[v+6>>0];i[t+7>>0]=i[v+7>>0];m=+p[t>>3];v=h+24|0;i[t>>0]=i[v>>0];i[t+1>>0]=i[v+1>>0];i[t+2>>0]=i[v+2>>0];i[t+3>>0]=i[v+3>>0];i[t+4>>0]=i[v+4>>0];i[t+5>>0]=i[v+5>>0];i[t+6>>0]=i[v+6>>0];i[t+7>>0]=i[v+7>>0];n=n+ +p[t>>3];p[a>>3]=l+m;v=a+8|0;p[v>>3]=n;do if(!(e<<24>>24)){g=k[w>>2]|0;if(!(i[g+45>>0]|0)){i[a+29>>0]=0;break}else{p[a+16>>3]=+p[g+32>>3];i[a+29>>0]=1;break}}else{n=+QA(k[((k[b>>2]&3|0)==3?b:q)+28>>2]|0);p[a+16>>3]=n;i[a+29>>0]=1}while(0);k[a+80>>2]=0;k[a+88>>2]=b;e=d+32|0;k[e>>2]=k[a>>2];k[e+4>>2]=k[a+4>>2];k[e+8>>2]=k[a+8>>2];k[e+12>>2]=k[a+12>>2];a:do switch(c|0){case 1:{h=k[s>>2]|0;if((i[h+156>>0]|0)==0?(e=i[(k[w>>2]|0)+49>>0]|0,u=e&255,e<<24>>24!=0):0){l=+p[d>>3];f=+p[d+8>>3];m=+p[d+16>>3];j=+p[d+24>>3];do if(!(u&4)){if(u&1){k[d+48>>2]=1;n=+p[v>>3];p[d+56>>3]=l;p[d+64>>3]=f;p[d+72>>3]=m;p[d+80>>3]=j>n?j:n;k[d+52>>2]=1;p[v>>3]=+p[v>>3]+-1.0;break}g=d+48|0;if(!(u&8)){k[g>>2]=2;l=+p[h+24>>3]-+p[h+80>>3]*.5;n=+p[v>>3];p[d+56>>3]=+p[a>>3];p[d+64>>3]=l;p[d+72>>3]=m;p[d+80>>3]=n;k[d+52>>2]=1;p[a>>3]=+p[a>>3]+1.0;break}else{k[g>>2]=8;m=+p[a>>3];j=+p[h+24>>3]-+p[h+80>>3]*.5;n=+p[v>>3];p[d+56>>3]=l;p[d+64>>3]=j;p[d+72>>3]=m;p[d+80>>3]=n;k[d+52>>2]=1;p[a>>3]=+p[a>>3]+-1.0;break}}else{k[d+48>>2]=4;if(+p[a>>3]<+p[h+16>>3]){A=l+-1.0;f=+p[v>>3];n=+p[h+24>>3]+ +p[h+80>>3]*.5;a=($t(y)|0)+8|0;n=n+ +((k[(k[a>>2]|0)+252>>2]|0)/2|0|0);a=k[s>>2]|0;j=+p[a+16>>3]-+p[a+88>>3];l=+p[a+24>>3]-+p[a+80>>3]*.5;p[d+56>>3]=A;p[d+64>>3]=f;p[d+72>>3]=m;m=A}else{f=+p[v>>3];j=m+1.0;n=+p[h+24>>3]+ +p[h+80>>3]*.5;a=($t(y)|0)+8|0;n=n+ +((k[(k[a>>2]|0)+252>>2]|0)/2|0|0);a=k[s>>2]|0;m=+p[a+16>>3]+ +p[a+96>>3]+0.0;A=+p[a+24>>3]-+p[a+80>>3]*.5;p[d+56>>3]=l;p[d+64>>3]=f;p[d+72>>3]=j;l=A}p[d+80>>3]=n;p[d+88>>3]=m;p[d+96>>3]=l;p[d+104>>3]=j;p[d+112>>3]=f;p[v>>3]=+p[v>>3]+1.0;k[d+52>>2]=2}while(0);g=k[w>>2]|0;if(i[g+112>>0]|0)do{b=k[g+116>>2]|0;g=k[b+8>>2]|0}while((i[g+112>>0]|0)!=0);if((y|0)==(k[((k[b>>2]&3|0)==3?b:b+32|0)+28>>2]|0)){i[g+46>>0]=0;break a}else{i[g+86>>0]=0;break a}}else{h=1;x=52}break}case 2:{u=i[(k[w>>2]|0)+49>>0]|0;h=u&255;if(!(u<<24>>24))x=51;else{m=+p[d>>3];f=+p[d+8>>3];j=+p[d+16>>3];l=+p[d+24>>3];do if(!(h&4)){if(h&1){if((k[d+48>>2]|0)==4){g=k[s>>2]|0;l=+p[g+24>>3]-+p[g+80>>3]*.5;j=j+1.0;m=+p[a>>3];g=($t(y)|0)+8|0;f=l-+((k[(k[g>>2]|0)+252>>2]|0)/2|0|0);g=k[s>>2]|0;n=+p[g+16>>3]+ +p[g+96>>3]+0.0;A=+p[g+24>>3]+ +p[g+80>>3]*.5;p[d+56>>3]=m;p[d+88>>3]=n;p[d+96>>3]=l;p[d+104>>3]=j;p[d+112>>3]=A;g=2}else{A=+p[v>>3];p[d+56>>3]=m;g=1;l=l>A?l:A}p[d+64>>3]=f;p[d+72>>3]=j;p[d+80>>3]=l;k[d+52>>2]=g;p[v>>3]=+p[v>>3]+-1.0;break}n=+p[a>>3];if(!(h&8)){c=k[s>>2]|0;f=+p[c+24>>3];l=+p[c+80>>3]*.5;if((k[d+48>>2]|0)==4){m=f+l;f=+p[v>>3]}else{m=+p[v>>3]+1.0;f=f-l}p[d+56>>3]=n;p[d+64>>3]=f;p[d+72>>3]=j;p[d+80>>3]=m;k[d+52>>2]=1;p[a>>3]=+p[a>>3]+1.0;break}else{c=k[s>>2]|0;f=+p[c+24>>3];j=+p[c+80>>3]*.5;if((k[d+48>>2]|0)==4){l=f+j;f=+p[v>>3]+-1.0}else{l=+p[v>>3]+1.0;f=f-j}p[d+56>>3]=m;p[d+64>>3]=f;p[d+72>>3]=n+1.0;p[d+80>>3]=l;k[d+52>>2]=1;p[a>>3]=+p[a>>3]+-1.0;break}}else{A=+p[v>>3];p[d+56>>3]=m;p[d+64>>3]=f<A?f:A;p[d+72>>3]=j;p[d+80>>3]=l;k[d+52>>2]=1;p[v>>3]=+p[v>>3]+1.0}while(0);g=k[w>>2]|0;if(i[g+112>>0]|0)do{b=k[g+116>>2]|0;g=k[b+8>>2]|0}while((i[g+112>>0]|0)!=0);if((y|0)==(k[((k[b>>2]&3|0)==3?b:b+32|0)+28>>2]|0))i[g+46>>0]=0;else i[g+86>>0]=0;k[d+48>>2]=h}break}default:x=51}while(0);if((x|0)==51){h=k[d+48>>2]|0;x=52}b:do if((x|0)==52){if(o){g=d+56|0;b=d+52|0;h=Sb[o&63](y,(k[w>>2]|0)+16|0,h,g,b)|0;if(h){k[d+48>>2]=h;break}}else{b=d+52|0;g=d+56|0};k[g>>2]=k[d>>2];k[g+4>>2]=k[d+4>>2];k[g+8>>2]=k[d+8>>2];k[g+12>>2]=k[d+12>>2];k[g+16>>2]=k[d+16>>2];k[g+20>>2]=k[d+20>>2];k[g+24>>2]=k[d+24>>2];k[g+28>>2]=k[d+28>>2];k[b>>2]=1;switch(c|0){case 8:{Wa(174497,142412,569,142422);break}case 2:{f=+p[v>>3];if((k[d+48>>2]|0)==4){p[d+64>>3]=f;break b}else{p[d+80>>3]=f;break b}}case 1:{A=+p[v>>3];p[d+80>>3]=A;k[d+48>>2]=1;p[v>>3]=A+-1.0;break b}default:break b}}while(0);r=z;return}function HA(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0.0,g=0,h=0,j=0.0,l=0.0,m=0.0,n=0,o=0.0,q=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0.0;A=r;r=r+48|0;n=A;h=k[b>>2]&3;q=b+-32|0;z=k[((h|0)==2?b:q)+28>>2]|0;x=b+8|0;w=k[x>>2]|0;g=w+56|0;if(i[w+87>>0]|0){Uz(n,z,k[((h|0)==3?b:b+32|0)+28>>2]|0,g);h=n;n=g+40|0;do{k[g>>2]=k[h>>2];g=g+4|0;h=h+4|0}while((g|0)<(n|0))}s=z+8|0;h=k[s>>2]|0;g=k[h+8>>2]|0;if(!g)n=0;else n=k[(k[g+4>>2]|0)+16>>2]|0;u=a+40|0;w=k[x>>2]|0;g=w+56|0;i[t>>0]=i[g>>0];i[t+1>>0]=i[g+1>>0];i[t+2>>0]=i[g+2>>0];i[t+3>>0]=i[g+3>>0];i[t+4>>0]=i[g+4>>0];i[t+5>>0]=i[g+5>>0];i[t+6>>0]=i[g+6>>0];i[t+7>>0]=i[g+7>>0];l=+p[t>>3];w=w+64|0;i[t>>0]=i[w>>0];i[t+1>>0]=i[w+1>>0];i[t+2>>0]=i[w+2>>0];i[t+3>>0]=i[w+3>>0];i[t+4>>0]=i[w+4>>0];i[t+5>>0]=i[w+5>>0];i[t+6>>0]=i[w+6>>0];i[t+7>>0]=i[w+7>>0];o=+p[t>>3];w=h+16|0;i[t>>0]=i[w>>0];i[t+1>>0]=i[w+1>>0];i[t+2>>0]=i[w+2>>0];i[t+3>>0]=i[w+3>>0];i[t+4>>0]=i[w+4>>0];i[t+5>>0]=i[w+5>>0];i[t+6>>0]=i[w+6>>0];i[t+7>>0]=i[w+7>>0];m=+p[t>>3];w=h+24|0;i[t>>0]=i[w>>0];i[t+1>>0]=i[w+1>>0];i[t+2>>0]=i[w+2>>0];i[t+3>>0]=i[w+3>>0];i[t+4>>0]=i[w+4>>0];i[t+5>>0]=i[w+5>>0];i[t+6>>0]=i[w+6>>0];i[t+7>>0]=i[w+7>>0];o=o+ +p[t>>3];p[a+40>>3]=l+m;w=a+48|0;p[w>>3]=o;do if(!(e<<24>>24)){g=k[x>>2]|0;if(!(i[g+85>>0]|0)){i[a+69>>0]=0;break}else{p[a+56>>3]=+p[g+72>>3];i[a+69>>0]=1;break}}else{o=+QA(k[((k[b>>2]&3|0)==2?b:q)+28>>2]|0)+3.141592653589793;p[a+56>>3]=o;if(o<6.283185307179586){i[a+69>>0]=1;break}else Wa(142432,142412,606,142456)}while(0);e=d+32|0;k[e>>2]=k[u>>2];k[e+4>>2]=k[u+4>>2];k[e+8>>2]=k[u+8>>2];k[e+12>>2]=k[u+12>>2];switch(c|0){case 1:{h=k[s>>2]|0;if((i[h+156>>0]|0)==0?(a=i[(k[x>>2]|0)+89>>0]|0,v=a&255,a<<24>>24!=0):0){j=+p[d>>3];f=+p[d+8>>3];l=+p[d+16>>3];do if(!(v&4)){if(!(v&1)){g=d+48|0;if(!(v&8)){k[g>>2]=2;o=+p[h+24>>3]+ +p[h+80>>3]*.5;m=+p[w>>3];p[d+56>>3]=+p[u>>3];p[d+64>>3]=m;p[d+72>>3]=l;p[d+80>>3]=o;k[d+52>>2]=1;p[u>>3]=+p[u>>3]+1.0;break}else{k[g>>2]=8;m=+p[u>>3];o=+p[h+24>>3]+ +p[h+80>>3]*.5;l=+p[w>>3];p[d+56>>3]=j;p[d+64>>3]=l;p[d+72>>3]=m;p[d+80>>3]=o;k[d+52>>2]=1;p[u>>3]=+p[u>>3]+-1.0;break}}k[d+48>>2]=1;if(+p[u>>3]<+p[h+16>>3]){o=j+-1.0;m=+p[w>>3];B=+p[h+24>>3]-+p[h+80>>3]*.5;u=($t(z)|0)+8|0;B=B-+((k[(k[u>>2]|0)+252>>2]|0)/2|0|0);u=k[s>>2]|0;j=+p[u+16>>3]-+p[u+88>>3];f=+p[u+24>>3]+ +p[u+80>>3]*.5;p[d+56>>3]=o;p[d+64>>3]=B;p[d+72>>3]=l;l=o}else{m=+p[w>>3];B=l+1.0;o=+p[h+24>>3]-+p[h+80>>3]*.5;u=($t(z)|0)+8|0;o=o-+((k[(k[u>>2]|0)+252>>2]|0)/2|0|0);u=k[s>>2]|0;l=+p[u+16>>3]+ +p[u+96>>3]+0.0;f=+p[u+24>>3]+ +p[u+80>>3]*.5;p[d+56>>3]=j;p[d+64>>3]=o;p[d+72>>3]=B;j=B}p[d+80>>3]=m;p[d+88>>3]=l;p[d+96>>3]=m;p[d+104>>3]=j;p[d+112>>3]=f;k[d+52>>2]=2;p[w>>3]=+p[w>>3]+-1.0}else{B=+p[d+24>>3];k[d+48>>2]=4;o=+p[w>>3];p[d+56>>3]=j;p[d+64>>3]=f<o?f:o;p[d+72>>3]=l;p[d+80>>3]=B;k[d+52>>2]=1;p[w>>3]=+p[w>>3]+1.0}while(0);g=k[x>>2]|0;if(i[g+112>>0]|0)do{b=k[g+116>>2]|0;g=k[b+8>>2]|0}while((i[g+112>>0]|0)!=0);if((z|0)==(k[((k[b>>2]&3|0)==2?b:b+-32|0)+28>>2]|0))i[g+86>>0]=0;else i[g+46>>0]=0;k[d+48>>2]=v}else{h=4;y=55}break}case 2:{v=i[(k[x>>2]|0)+89>>0]|0;h=v&255;if(!(v<<24>>24))y=54;else{m=+p[d>>3];f=+p[d+8>>3];j=+p[d+16>>3];l=+p[d+24>>3];do if(!(h&4)){if(h&1){if((k[d+48>>2]|0)==4){m=m+-1.0;g=k[s>>2]|0;l=+p[g+24>>3]-+p[g+80>>3]*.5;j=+p[u>>3];g=($t(z)|0)+8|0;f=l-+((k[(k[g>>2]|0)+252>>2]|0)/2|0|0);g=k[s>>2]|0;o=+p[g+16>>3]-+p[g+88>>3]+-2.0;B=+p[g+24>>3]+ +p[g+80>>3]*.5;p[d+56>>3]=m;p[d+88>>3]=m;p[d+96>>3]=l;p[d+104>>3]=o;p[d+112>>3]=B;g=2}else{B=+p[a+8>>3];p[d+56>>3]=m;g=1;l=l>B?l:B}p[d+64>>3]=f;p[d+72>>3]=j;p[d+80>>3]=l;k[d+52>>2]=g;p[w>>3]=+p[w>>3]+-1.0;break}o=+p[u>>3];if(!(h&8)){v=k[s>>2]|0;f=+p[v+24>>3];l=+p[v+80>>3]*.5;if((k[d+48>>2]|0)==4){m=+p[w>>3]+-1.0;f=f+l}else{m=f-l;f=+p[w>>3]}p[d+56>>3]=o+-1.0;p[d+64>>3]=m;p[d+72>>3]=j;p[d+80>>3]=f;k[d+52>>2]=1;p[u>>3]=+p[u>>3]+1.0;break}else{v=k[s>>2]|0;f=+p[v+24>>3];j=+p[v+80>>3]*.5;if((k[d+48>>2]|0)==4){l=+p[w>>3]+-1.0;f=f+j}else{l=f-j;f=+p[w>>3]+1.0}p[d+56>>3]=m;p[d+64>>3]=l;p[d+72>>3]=o+1.0;p[d+80>>3]=f;k[d+52>>2]=1;p[u>>3]=+p[u>>3]+-1.0;break}}else{B=+p[w>>3];p[d+56>>3]=m;p[d+64>>3]=f<B?f:B;p[d+72>>3]=j;p[d+80>>3]=l;k[d+52>>2]=1;p[w>>3]=+p[w>>3]+1.0}while(0);g=k[x>>2]|0;if(i[g+112>>0]|0)do{b=k[g+116>>2]|0;g=k[b+8>>2]|0}while((i[g+112>>0]|0)!=0);if((z|0)==(k[((k[b>>2]&3|0)==2?b:b+-32|0)+28>>2]|0))i[g+86>>0]=0;else i[g+46>>0]=0;k[d+48>>2]=h}break}default:y=54}if((y|0)==54){h=k[d+48>>2]|0;y=55}a:do if((y|0)==55){if(n){g=d+56|0;b=d+52|0;h=Sb[n&63](z,(k[x>>2]|0)+56|0,h,g,b)|0;if(h){k[d+48>>2]=h;break}}else{b=d+52|0;g=d+56|0};k[g>>2]=k[d>>2];k[g+4>>2]=k[d+4>>2];k[g+8>>2]=k[d+8>>2];k[g+12>>2]=k[d+12>>2];k[g+16>>2]=k[d+16>>2];k[g+20>>2]=k[d+20>>2];k[g+24>>2]=k[d+24>>2];k[g+28>>2]=k[d+28>>2];k[b>>2]=1;switch(c|0){case 8:{Wa(174497,142412,765,142456);break}case 2:{f=+p[w>>3];if((k[d+48>>2]|0)==4){p[d+64>>3]=f;break a}else{p[d+80>>3]=f;break a}}case 1:{B=+p[w>>3];p[d+64>>3]=B;k[d+48>>2]=4;p[w>>3]=B+1.0;break a}default:break a}}while(0);r=A;return}function IA(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;b=k[a+8>>2]|0;f=k[b+96>>2]|0;if((i[b+44>>0]|0)==0?(i[b+84>>0]|0)==0:0)g=6;else{c=i[b+49>>0]|0;d=c&255;if(((d&8|0)==0?(e=i[b+89>>0]|0,(e&8)==0):0)?((d&5|0)==0?1:c<<24>>24!=e<<24>>24):0)g=6;else b=0}if((g|0)==6)if(!f)b=18;else{b=($t(k[((k[a>>2]&3|0)==2?a:a+-32|0)+28>>2]|0)|0)+8|0;b=~~(+p[((k[(k[b>>2]|0)+116>>2]&1|0)==0?f+24|0:f+32|0)>>3]+18.0)}return b|0}function JA(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=+f;g=g|0;var h=0,j=0,m=0.0,n=0.0,o=0.0,q=0.0,s=0.0,t=0.0,u=0,v=0.0,w=0,x=0,y=0,z=0,A=0,B=0.0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0.0,R=0.0,S=0.0,T=0,U=0,V=0,W=0;V=r;r=r+16e3|0;U=V;u=k[b+(c<<2)>>2]|0;j=k[u+8>>2]|0;if((i[j+44>>0]|0)==0?(i[j+84>>0]|0)==0:0)T=6;else T=3;do if((T|0)==3){a=i[j+49>>0]|0;h=a&255;if(!(h&8)){K=i[j+89>>0]|0;if((K&8)==0?((h&5|0)==0?1:a<<24>>24!=K<<24>>24):0){T=6;break}if(!(i[j+89>>0]&8)){if(h&4){SA(b,c,d,e,f,g);break}if(!(h&1))Wa(174497,142412,1231,142464);m=e*.5/+(d|0);K=(k[((k[u>>2]&3|0)==3?u:u+32|0)+28>>2]|0)+8|0;J=k[K>>2]|0;O=+p[J+16>>3];L=+p[J+24>>3];h=k[u+8>>2]|0;M=O+ +p[h+16>>3];N=L+ +p[h+24>>3];O=O+ +p[h+56>>3];P=L+ +p[h+64>>3];a=!(M>=O)?-1:1;s=+p[J+80>>3]*.5;t=(N+s-L)*3.0;q=(P+s-L)*3.0;a:do if((d|0)>0){w=(RA(l[h+49>>0]|0,l[h+89>>0]|0)|0)==67;v=(m>2.0?m:2.0)*+((w?0-a|0:a)|0);w=U+8|0;x=U+16|0;y=U+24|0;z=U+32|0;A=U+40|0;B=(M+O)*.5;C=U+48|0;D=U+56|0;E=U+64|0;F=U+72|0;G=U+80|0;H=U+88|0;I=U+96|0;J=U+104|0;o=0.0;n=s;q=s<q?s:q;j=0;m=s<t?s:t;while(1){h=c+1|0;n=n+f;m=m+f;q=q+f;o=v+o;p[U>>3]=M;p[w>>3]=N;e=M+o;p[x>>3]=e;p[y>>3]=N-m/3.0;S=L-n;p[z>>3]=e;p[A>>3]=S;p[C>>3]=B;p[D>>3]=S;e=O-o;p[E>>3]=e;p[F>>3]=S;p[G>>3]=e;p[H>>3]=P-q/3.0;p[I>>3]=O;p[J>>3]=P;a=u+8|0;if((k[(k[a>>2]|0)+96>>2]|0)!=0?(W=($t(k[((k[u>>2]&3|0)==3?u:u+32|0)+28>>2]|0)|0)+8|0,c=k[(k[a>>2]|0)+96>>2]|0,Q=+p[((k[(k[W>>2]|0)+116>>2]&1|0)==0?c+32|0:c+24|0)>>3],a=k[K>>2]|0,p[c+64>>3]=+p[a+24>>3]-n-Q*.5,p[c+56>>3]=+p[a+16>>3],i[c+81>>0]=1,Q>f):0)n=n+(Q-f);EA(u,k[((k[u>>2]&3|0)==2?u:u+-32|0)+28>>2]|0,U,7,g);a=j+1|0;if((a|0)==(d|0))break a;c=h;u=k[b+(h<<2)>>2]|0;j=a}}while(0);break}}if((a&2)==0?(i[j+89>>0]&2)==0:0){m=f*.5/+(d|0);m=m>2.0?m:2.0;K=(k[((k[u>>2]&3|0)==3?u:u+32|0)+28>>2]|0)+8|0;J=k[K>>2]|0;L=+p[J+16>>3];P=+p[J+24>>3];W=k[u+8>>2]|0;M=L+ +p[W+16>>3];N=P+ +p[W+24>>3];O=L+ +p[W+56>>3];P=P+ +p[W+64>>3];a=!(N>=P)?-1:1;t=+p[J+88>>3];switch(RA(l[W+49>>0]|0,l[W+89>>0]|0)|0){case 67:case 12:{if(N==P)a=0-a|0;break}default:{}}q=(M+t-L)*3.0;n=(O+t-L)*3.0;b:do if((d|0)>0){v=m*+(a|0);w=U+8|0;x=U+16|0;y=U+24|0;z=U+32|0;A=U+40|0;B=(N+P)*.5;C=U+48|0;D=U+56|0;E=U+64|0;F=U+72|0;G=U+80|0;H=U+88|0;I=U+96|0;J=U+104|0;m=t;o=0.0;s=t<n?t:n;j=0;n=t<q?t:q;while(1){h=c+1|0;m=m+e;n=n+e;q=s+e;o=v+o;p[U>>3]=M;p[w>>3]=N;R=N+o;p[x>>3]=M-n/3.0;p[y>>3]=R;f=L-m;p[z>>3]=f;p[A>>3]=R;p[C>>3]=f;p[D>>3]=B;R=P-o;p[E>>3]=f;p[F>>3]=R;p[G>>3]=O-q/3.0;p[H>>3]=R;p[I>>3]=O;p[J>>3]=P;a=u+8|0;if((k[(k[a>>2]|0)+96>>2]|0)!=0?(c=($t(k[((k[u>>2]&3|0)==3?u:u+32|0)+28>>2]|0)|0)+8|0,W=k[(k[a>>2]|0)+96>>2]|0,S=+p[((k[(k[c>>2]|0)+116>>2]&1|0)==0?W+24|0:W+32|0)>>3],c=k[K>>2]|0,p[W+56>>3]=+p[c+16>>3]-m-S*.5,p[W+64>>3]=+p[c+24>>3],i[W+81>>0]=1,S>e):0)m=m+(S-e);EA(u,k[((k[u>>2]&3|0)==2?u:u+-32|0)+28>>2]|0,U,7,g);a=j+1|0;if((a|0)==(d|0))break b;c=h;u=k[b+(h<<2)>>2]|0;s=q;j=a}}while(0);break}SA(b,c,d,e,f,g)}while(0);if((T|0)==6){m=f*.5/+(d|0);m=m>2.0?m:2.0;K=(k[((k[u>>2]&3|0)==3?u:u+32|0)+28>>2]|0)+8|0;T=k[K>>2]|0;L=+p[T+16>>3];P=+p[T+24>>3];W=k[u+8>>2]|0;M=L+ +p[W+16>>3];N=P+ +p[W+24>>3];O=L+ +p[W+56>>3];P=P+ +p[W+64>>3];a=!(N>=P)?-1:1;t=+p[T+96>>3];switch(RA(l[W+49>>0]|0,l[W+89>>0]|0)|0){case 65:case 32:{if(N==P)a=0-a|0;break}default:{}}n=L+t;q=(n-M)*3.0;n=(n-O)*3.0;c:do if((d|0)>0){v=m*+(a|0);w=U+8|0;x=U+16|0;y=U+24|0;z=U+32|0;A=U+40|0;B=(N+P)*.5;C=U+48|0;D=U+56|0;E=U+64|0;F=U+72|0;G=U+80|0;H=U+88|0;I=U+96|0;J=U+104|0;m=t;o=0.0;s=t<n?t:n;j=0;n=t<q?t:q;while(1){h=c+1|0;m=m+e;n=n+e;q=s+e;o=v+o;p[U>>3]=M;p[w>>3]=N;S=N+o;p[x>>3]=M+n/3.0;p[y>>3]=S;f=L+m;p[z>>3]=f;p[A>>3]=S;p[C>>3]=f;p[D>>3]=B;S=P-o;p[E>>3]=f;p[F>>3]=S;p[G>>3]=O+q/3.0;p[H>>3]=S;p[I>>3]=O;p[J>>3]=P;a=u+8|0;if((k[(k[a>>2]|0)+96>>2]|0)!=0?(T=($t(k[((k[u>>2]&3|0)==3?u:u+32|0)+28>>2]|0)|0)+8|0,W=k[(k[a>>2]|0)+96>>2]|0,R=+p[((k[(k[T>>2]|0)+116>>2]&1|0)==0?W+24|0:W+32|0)>>3],T=k[K>>2]|0,p[W+56>>3]=R*.5+(m+ +p[T+16>>3]),p[W+64>>3]=+p[T+24>>3],i[W+81>>0]=1,R>e):0)m=m+(R-e);EA(u,k[((k[u>>2]&3|0)==2?u:u+-32|0)+28>>2]|0,U,7,g);a=j+1|0;if((a|0)==(d|0))break c;c=h;u=k[b+(h<<2)>>2]|0;s=q;j=a}}while(0)}r=V;return}function KA(a){a=a|0;var b=0,c=0;if((k[13692]|0)!=0|(k[13691]|0)!=0){b=a+8|0;c=k[(k[b>>2]|0)+100>>2]|0;if(((c|0)!=0?(i[c+81>>0]|0)==0:0)?(LA(a,1)|0)!=0:0){c=$t(k[((k[a>>2]&3|0)==3?a:a+32|0)+28>>2]|0)|0;EB(c,k[(k[b>>2]|0)+100>>2]|0)}c=k[(k[b>>2]|0)+104>>2]|0;if(((c|0)!=0?(i[c+81>>0]|0)==0:0)?(LA(a,0)|0)!=0:0){c=$t(k[((k[a>>2]&3|0)==3?a:a+32|0)+28>>2]|0)|0;EB(c,k[(k[b>>2]|0)+104>>2]|0)}}return}function LA(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0.0,f=0.0,g=0,h=0.0,j=0,l=0,m=0,n=0,o=0,q=0;o=r;r=r+96|0;m=o+32|0;j=o+16|0;n=o;g=a+8|0;do if((i[(k[g>>2]|0)+112>>0]|0)!=6){c=k[13692]|0;if(!((c|0)!=0?(l=ts(a,c)|0,(i[l>>0]|0)!=0):0)){c=k[13691]|0;if(!c){c=0;break}l=ts(a,c)|0;if(!(i[l>>0]|0)){c=0;break}}c=b<<24>>24==0;l=k[g>>2]|0;l=k[(c?l+104|0:l+100|0)>>2]|0;b=OA(a)|0;if(b){do if(c){c=k[b>>2]|0;if(!(k[c+8>>2]|0)){n=k[c>>2]|0;h=+p[n>>3];e=+p[n+8>>3];k[m>>2]=k[n>>2];k[m+4>>2]=k[n+4>>2];k[m+8>>2]=k[n+8>>2];k[m+12>>2]=k[n+12>>2];n=m+16|0;g=(k[c>>2]|0)+16|0;k[n>>2]=k[g>>2];k[n+4>>2]=k[g+4>>2];k[n+8>>2]=k[g+8>>2];k[n+12>>2]=k[g+12>>2];n=m+32|0;g=(k[c>>2]|0)+32|0;k[n>>2]=k[g>>2];k[n+4>>2]=k[g+4>>2];k[n+8>>2]=k[g+8>>2];k[n+12>>2]=k[g+12>>2];n=m+48|0;g=(k[c>>2]|0)+48|0;k[n>>2]=k[g>>2];k[n+4>>2]=k[g+4>>2];k[n+8>>2]=k[g+8>>2];k[n+12>>2]=k[g+12>>2];uB(j,m,3,.1,0,0);f=+p[j>>3];d=+p[j+8>>3];break}else{n=k[c>>2]|0;h=+p[c+16>>3];e=+p[c+24>>3];f=+p[n>>3];d=+p[n+8>>3];break}}else{g=(k[b+4>>2]|0)+-1|0;b=k[b>>2]|0;c=b+(g*48|0)|0;if(!(k[b+(g*48|0)+12>>2]|0)){g=b+(g*48|0)+4|0;j=k[g>>2]|0;q=j+-1|0;b=k[c>>2]|0;h=+p[b+(q<<4)>>3];e=+p[b+(q<<4)+8>>3];j=b+(j+-4<<4)|0;k[m>>2]=k[j>>2];k[m+4>>2]=k[j+4>>2];k[m+8>>2]=k[j+8>>2];k[m+12>>2]=k[j+12>>2];j=m+16|0;b=(k[c>>2]|0)+((k[g>>2]|0)+-3<<4)|0;k[j>>2]=k[b>>2];k[j+4>>2]=k[b+4>>2];k[j+8>>2]=k[b+8>>2];k[j+12>>2]=k[b+12>>2];j=m+32|0;b=(k[c>>2]|0)+((k[g>>2]|0)+-2<<4)|0;k[j>>2]=k[b>>2];k[j+4>>2]=k[b+4>>2];k[j+8>>2]=k[b+8>>2];k[j+12>>2]=k[b+12>>2];j=m+48|0;g=(k[c>>2]|0)+((k[g>>2]|0)+-1<<4)|0;k[j>>2]=k[g>>2];k[j+4>>2]=k[g+4>>2];k[j+8>>2]=k[g+8>>2];k[j+12>>2]=k[g+12>>2];uB(n,m,3,.9,0,0);f=+p[n>>3];d=+p[n+8>>3];break}else{q=(k[b+(g*48|0)+4>>2]|0)+-1|0;n=k[c>>2]|0;h=+p[b+(g*48|0)+32>>3];e=+p[b+(g*48|0)+40>>3];f=+p[n+(q<<4)>>3];d=+p[n+(q<<4)+8>>3];break}}while(0);f=+da(+(d-e),+(f-h));f=f+ +jB(a,k[13692]|0,-25.0,-180.0)/180.0*3.141592653589793;d=+jB(a,k[13691]|0,1.0,0.0)*10.0;h=h+d*+Z(+f);p[l+56>>3]=h;h=e+d*+_(+f);p[l+64>>3]=h;i[l+81>>0]=1;c=1}else c=0}else c=0;while(0);r=o;return c|0}function MA(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,g=0.0,h=0.0,i=0.0,j=0,l=0,n=0,o=0,q=0,s=0,t=0,u=0.0,v=0.0,w=0,x=0,y=0.0;w=r;r=r+48|0;q=w+32|0;o=w+16|0;n=w;l=k[(k[c+8>>2]|0)+8>>2]|0;s=k[l>>2]|0;t=k[s>>2]|0;c=(k[s+8>>2]|0)==0;f=+p[(c?t:s+16|0)>>3];g=+p[(c?t+8|0:s+24|0)>>3];t=k[l+4>>2]|0;c=t+-1|0;if(!(k[s+(c*48|0)+12>>2]|0)){x=k[s+(c*48|0)>>2]|0;c=(k[s+(c*48|0)+4>>2]|0)+-1|0;j=x+(c<<4)+8|0;c=x+(c<<4)|0}else{j=s+(c*48|0)+40|0;c=s+(c*48|0)+32|0}e=+p[c>>3];d=+p[j>>3];h=f-e;i=g-d;a:do if(h*h+i*i<1.0e-06){v=f;u=g}else{switch((m[(k[b+8>>2]|0)+136>>1]|0)&14|0){case 4:case 10:{p[o>>3]=(f+e)*.5;p[o+8>>3]=(g+d)*.5;k[q>>2]=k[o>>2];k[q+4>>2]=k[o+4>>2];k[q+8>>2]=k[o+8>>2];k[q+12>>2]=k[o+12>>2];zB(n,l,q);v=+p[n>>3];u=+p[n+8>>3];break a}default:{}}b:do if((t|0)>0){d=0.0;o=0;do{l=k[s+(o*48|0)>>2]|0;n=k[s+(o*48|0)+4>>2]|0;if((n|0)>3){c=0;j=3;while(1){h=+p[l+(c<<4)>>3]-+p[l+(j<<4)>>3];i=+p[l+(c<<4)+8>>3]-+p[l+(j<<4)+8>>3];d=d+ +X(+(h*h+i*i));j=j+3|0;if((j|0)>=(n|0))break;else c=c+3|0}}o=o+1|0}while((o|0)!=(t|0));d=d*.5;o=0;c:while(1){l=k[s+(o*48|0)>>2]|0;n=k[s+(o*48|0)+4>>2]|0;if((n|0)>3){c=0;j=3;while(1){h=+p[l+(c<<4)>>3];i=+p[l+(c<<4)+8>>3];f=+p[l+(j<<4)>>3];g=+p[l+(j<<4)+8>>3];y=h-f;e=i-g;e=+X(+(y*y+e*e));if(e>=d)break c;d=d-e;j=j+3|0;if((j|0)>=(n|0))break;else c=c+3|0}}o=o+1|0;if((o|0)>=(t|0))break b}u=e-d;v=(d*f+h*u)/e;u=(d*g+i*u)/e;break a}while(0);Wa(174815,142412,1316,142477)}while(0);p[a>>3]=v;p[a+8>>3]=u;r=w;return}function NA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;KA(b);return}function OA(a){a=a|0;var b=0,c=0,d=0,e=0;e=r;r=r+16|0;d=e;c=k[a+8>>2]|0;b=k[c+8>>2]|0;a:do if(!b){while(1){if(!(i[c+112>>0]|0))break;c=k[(k[c+116>>2]|0)+8>>2]|0;b=k[c+8>>2]|0;if(b)break a}c=ht(k[((k[a>>2]&3|0)==3?a:a+32|0)+28>>2]|0)|0;b=ht(k[((k[a>>2]&3|0)==2?a:a+-32|0)+28>>2]|0)|0;k[d>>2]=c;k[d+4>>2]=b;Yr(1,142494,d)|0;b=0}while(0);r=e;return b|0}function PA(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0.0,j=0,l=0;l=r;r=r+64|0;j=l;b=b+8|0;e=k[b>>2]|0;i=+p[e+96>>3];f=e+16|0;g=e+24|0;h=0;do{p[j+(h<<4)>>3]=+p[c+(h<<4)>>3]-+p[f>>3];p[j+(h<<4)+8>>3]=+p[c+(h<<4)+8>>3]-+p[g>>3];h=h+1|0}while((h|0)!=4);BA(a,k[(k[(k[e+8>>2]|0)+4>>2]|0)+12>>2]|0,j,d);b=k[b>>2]|0;e=b+16|0;f=b+24|0;g=0;do{p[c+(g<<4)>>3]=+p[j+(g<<4)>>3]+ +p[e>>3];p[c+(g<<4)+8>>3]=+p[j+(g<<4)+8>>3]+ +p[f>>3];g=g+1|0}while((g|0)!=4);p[b+96>>3]=i;r=l;return}function QA(a){a=a|0;var b=0.0,c=0.0,d=0,e=0,f=0.0,g=0,h=0.0,i=0,j=0,l=0.0,m=0.0;i=k[a+8>>2]|0;e=k[i+172>>2]|0;j=k[e>>2]|0;if(!j){h=0.0;b=0.0}else{d=j;a=0;b=0.0;do{b=b+ +p[(k[(k[((k[d>>2]&3|0)==3?d:d+32|0)+28>>2]|0)+8>>2]|0)+16>>3];a=a+1|0;d=k[e+(a<<2)>>2]|0}while((d|0)!=0);h=+(a|0)}e=k[i+180>>2]|0;g=k[e>>2]|0;if(!g){f=0.0;c=0.0}else{d=g;a=0;c=0.0;do{c=c+ +p[(k[(k[((k[d>>2]&3|0)==2?d:d+-32|0)+28>>2]|0)+8>>2]|0)+16>>3];a=a+1|0;d=k[e+(a<<2)>>2]|0}while((d|0)!=0);f=+(a|0)}l=+p[i+16>>3];m=+p[i+24>>3];h=+da(+(m-+p[(k[(k[((k[j>>2]&3|0)==3?j:j+32|0)+28>>2]|0)+8>>2]|0)+24>>3]),+(l-b/h));return +((h+ +da(+(+p[(k[(k[((k[g>>2]&3|0)==2?g:g+-32|0)+28>>2]|0)+8>>2]|0)+24>>3]-m),+(c/f-l)))*.5)}function RA(a,b){a=a|0;b=b|0;var c=0;if((b|0)!=12)if((b|0)!=4)if((b|0)!=6)if((b|0)!=2)if((b|0)!=3)if((b|0)!=1)if((b|0)==9)c=6;else c=(b|0)==8?7:-1;else c=5;else c=4;else c=3;else c=2;else c=1;else c=0;if((a|0)!=12)if((a|0)!=4)if((a|0)!=6)if((a|0)!=2)if((a|0)!=3)if((a|0)!=1)if((a|0)==9)b=6;else b=(a|0)==8?7:-1;else b=5;else b=4;else b=3;else b=2;else b=1;else b=0;if((b|c|0)<0)b=0;else b=k[56468+(b<<5)+(c<<2)>>2]|0;return b|0}function SA(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=+e;f=f|0;var g=0,h=0.0,j=0.0,m=0,n=0.0,o=0.0,q=0,s=0.0,t=0,u=0.0,v=0,w=0,x=0,y=0,z=0,A=0.0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0.0,L=0.0,M=0.0,N=0.0,O=0.0,P=0.0,Q=0,R=0,S=0;R=r;r=r+16e3|0;Q=R;m=k[a+(b<<2)>>2]|0;j=d*.5/+(c|0);j=j>2.0?j:2.0;J=(k[((k[m>>2]&3|0)==3?m:m+32|0)+28>>2]|0)+8|0;g=k[J>>2]|0;d=+p[g+16>>3];K=+p[g+24>>3];I=k[m+8>>2]|0;L=d+ +p[I+16>>3];M=K+ +p[I+24>>3];N=d+ +p[I+56>>3];O=K+ +p[I+64>>3];h=!(L>=N)?-1.0:1.0;s=+p[g+80>>3]*.5;switch(RA(l[I+49>>0]|0,l[I+89>>0]|0)|0){case 15:{d=h*(j+(+p[g+96>>3]-(N-d)));break}case 38:{d=h*(j+(+p[g+88>>3]-(d-N)));break}case 41:{d=h*(j+(+p[g+96>>3]-(L-d)));break}case 48:{d=h*(j+(+p[g+96>>3]-(L-d)));break}case 58:case 57:case 51:case 47:case 37:case 14:{d=h*((+p[g+88>>3]-(d-L)+(+p[g+96>>3]-(N-d)))/3.0);break}case 73:{d=h*(j+(+p[g+88>>3]-(d-L)));break}case 83:{d=h*(+p[g+88>>3]-(d-L));break}case 84:{d=h*(j+(+p[g+88>>3]-(d-L)+(+p[g+96>>3]-(N-d)))*.5);break}case 85:case 75:case 74:{d=h*(j*2.0+(+p[g+88>>3]-(d-L)+(+p[g+96>>3]-(N-d)))*.5);break}default:d=0.0}n=K+s;o=(n-M)*3.0;n=(n-O)*3.0;a:do if((c|0)>0){u=j*h;v=Q+8|0;w=Q+16|0;x=Q+24|0;y=Q+32|0;z=Q+40|0;A=(L+N)*.5;B=Q+48|0;C=Q+56|0;D=Q+64|0;E=Q+72|0;F=Q+80|0;G=Q+88|0;H=Q+96|0;I=Q+104|0;j=d;h=s;n=s<n?s:n;t=0;d=s<o?s:o;while(1){q=b+1|0;h=h+e;d=d+e;n=n+e;j=u+j;p[Q>>3]=L;p[v>>3]=M;s=L+j;p[w>>3]=s;p[x>>3]=M+d/3.0;o=K+h;p[y>>3]=s;p[z>>3]=o;p[B>>3]=A;p[C>>3]=o;s=N-j;p[D>>3]=s;p[E>>3]=o;p[F>>3]=s;p[G>>3]=O+n/3.0;p[H>>3]=N;p[I>>3]=O;g=m+8|0;if((k[(k[g>>2]|0)+96>>2]|0)!=0?(S=($t(k[((k[m>>2]&3|0)==3?m:m+32|0)+28>>2]|0)|0)+8|0,b=k[(k[g>>2]|0)+96>>2]|0,P=+p[((k[(k[S>>2]|0)+116>>2]&1|0)==0?b+32|0:b+24|0)>>3],g=k[J>>2]|0,p[b+64>>3]=P*.5+(h+ +p[g+24>>3]),p[b+56>>3]=+p[g+16>>3],i[b+81>>0]=1,P>e):0)h=h+(P-e);EA(m,k[((k[m>>2]&3|0)==2?m:m+-32|0)+28>>2]|0,Q,7,f);g=t+1|0;if((g|0)==(c|0))break a;b=q;m=k[a+(q<<2)>>2]|0;t=g}}while(0);r=R;return}function TA(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;var f=0.0,g=0.0,h=0.0,j=0.0,l=0.0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0.0,D=0.0,E=0.0,F=0.0,G=0.0,H=0.0,I=0,J=0,K=0,L=0,M=0;L=r;r=r+112|0;z=L+96|0;y=L+80|0;x=L+16|0;v=L;K=By(12)|0;A=K+4|0;k[A>>2]=0;B=K+8|0;k[B>>2]=2e3;w=By(128e3)|0;k[K>>2]=w;w=k[a+4>>2]|0;t=k[a>>2]|0;k[z>>2]=k[t>>2];k[z+4>>2]=k[t+4>>2];k[z+8>>2]=k[t+8>>2];k[z+12>>2]=k[t+12>>2];UA(K,z,0.0);u=x+48|0;k[u>>2]=k[t>>2];k[u+4>>2]=k[t+4>>2];k[u+8>>2]=k[t+8>>2];k[u+12>>2]=k[t+12>>2];if((w|0)>3){m=x+8|0;n=y+8|0;o=x+16|0;q=x+32|0;s=3;a=0;f=0.0;while(1){k[x>>2]=k[u>>2];k[x+4>>2]=k[u+4>>2];k[x+8>>2]=k[u+8>>2];k[x+12>>2]=k[u+12>>2];J=t+(a+1<<4)|0;k[o>>2]=k[J>>2];k[o+4>>2]=k[J+4>>2];k[o+8>>2]=k[J+8>>2];k[o+12>>2]=k[J+12>>2];J=t+(a+2<<4)|0;k[q>>2]=k[J>>2];k[q+4>>2]=k[J+4>>2];k[q+8>>2]=k[J+8>>2];k[q+12>>2]=k[J+12>>2];a=t+(a+3<<4)|0;k[u>>2]=k[a>>2];k[u+4>>2]=k[a+4>>2];k[u+8>>2]=k[a+8>>2];k[u+12>>2]=k[a+12>>2];g=+p[x>>3];h=+p[m>>3];a=1;do{uB(v,x,3,+(a|0)/20.0,0,0);k[y>>2]=k[v>>2];k[y+4>>2]=k[v+4>>2];k[y+8>>2]=k[v+8>>2];k[y+12>>2]=k[v+12>>2];G=g;g=+p[y>>3];G=G-g;H=h;h=+p[n>>3];H=H-h;f=f+ +X(+(G*G+H*H));k[z>>2]=k[y>>2];k[z+4>>2]=k[y+4>>2];k[z+8>>2]=k[y+8>>2];k[z+12>>2]=k[y+12>>2];UA(K,z,f);a=a+1|0}while((a|0)!=21);a=s+3|0;if((a|0)<(w|0)){J=s;s=a;a=J}else break}}a=k[A>>2]|0;if((k[B>>2]|0)>(a|0)){J=Ey(k[K>>2]|0,a<<6)|0;k[K>>2]=J}I=k[A>>2]|0;J=k[K>>2]|0;x=I+-1|0;G=+p[J+(x<<6)+16>>3];B=(I|0)>0;if(B){H=+(I|0);y=(e|0)==2;z=(d|0)!=0;A=0;do{f=+(A+-1|0);if(!((A|0)>0&!(f>=H)))f=f-H*+V(+(f/H));a=~~f;m=A;A=A+1|0;f=+(A|0);if(f>=H)f=f-H*+V(+(f/H));M=~~f;n=J+(m<<6)|0;g=+p[n>>3];o=J+(m<<6)+8|0;f=+p[o>>3];q=J+(m<<6)+16|0;F=+p[q>>3];s=J+(m<<6)+24|0;t=J+(m<<6)+32|0;u=J+(m<<6)+40|0;v=J+(m<<6)+48|0;w=J+(m<<6)+56|0;h=+p[J+(M<<6)+8>>3]-f;j=+p[J+(M<<6)>>3]-g;if(!(j==0.0&h==0.0)){h=+da(+h,+j);if(!(h>=0.0))C=h+6.283185307179586;else C=h}else C=0.0;j=+p[J+(a<<6)+8>>3]-f;h=+p[J+(a<<6)>>3]-g;if(!(h==0.0&j==0.0)){h=+da(+j,+h);if(!(h>=0.0))h=h+6.283185307179586}else h=0.0;E=+Yb[b&7](F,G,c);do if(!m){h=C+1.5707963267948966;if(y){a=0;l=h;D=h;j=E;g=g-E*+Z(+C);f=f-E*+_(+C)}else{a=0;l=h;D=h;j=E}}else{if((m|0)==(x|0)){j=h+-1.5707963267948966;if(!y){a=0;l=j;D=j;j=E;break}a=0;l=j;D=j;j=E;g=g-E*+Z(+h);f=f-E*+_(+h);break}l=C-h;l=1.5707963267948966-(l<0.0?l+6.283185307179586:l)*.5;j=+Z(+l);j=j==0.0?0.0:E/j;D=C+1.5707963267948966;C=D+l;if(z|j>E*10.0){l=h+-1.5707963267948966;if(!(!(l<0.0)&!(l>=6.283185307179586)))l=l-+V(+(l/6.283185307179586))*6.283185307179586;if(!(D<0.0)&!(D>=6.283185307179586)){a=1;j=E}else{a=1;D=D-+V(+(D/6.283185307179586))*6.283185307179586;j=E}}else{a=0;l=C;D=C}}while(0);p[n>>3]=g;p[o>>3]=f;p[q>>3]=F;i[s>>0]=108;p[t>>3]=l;p[u>>3]=j;k[v>>2]=a;p[w>>3]=D}while((A|0)!=(I|0));m=By(12)|0;if(B){a=0;do{g=+p[J+(a<<6)>>3];f=+p[J+(a<<6)+8>>3];l=+p[J+(a<<6)+32>>3];j=+p[J+(a<<6)+40>>3];M=k[J+(a<<6)+48>>2]|0;h=+p[J+(a<<6)+56>>3];VA(m,g+j*+Z(+l),f+j*+_(+l));if(M)WA(g,f,j,1,l,h,d,m);a=a+1|0}while((a|0)!=(I|0))}}else{m=By(12)|0;l=0.0;j=0.0;g=0.0;f=0.0}n=(e|0)==1;h=l+3.141592653589793;if(n){XA(m,g,f,j,l,h);h=l}else VA(m,g+j*+Z(+h),f+j*+_(+h));a=I+-2|0;if((a|0)>-1)while(1){g=+p[J+(a<<6)>>3];f=+p[J+(a<<6)+8>>3];l=+p[J+(a<<6)+40>>3];M=k[J+(a<<6)+48>>2]|0;h=+p[J+(a<<6)+32>>3]+3.141592653589793;j=+p[J+(a<<6)+56>>3]+3.141592653589793;VA(m,g+l*+Z(+j),f+l*+_(+j));if(M)WA(g,f,l,0,h,j,d,m);if((a|0)>0)a=a+-1|0;else{j=l;break}}if(n)XA(m,g,f,j,h,h+3.141592653589793);vP(k[K>>2]|0);vP(K);r=L;return m|0}function UA(a,b,c){a=a|0;b=b|0;c=+c;var d=0,e=0,f=0,g=0;g=a+4|0;d=k[g>>2]|0;e=a+8|0;f=k[e>>2]|0;if((d|0)<(f|0))e=k[a>>2]|0;else{k[e>>2]=f<<1;e=Ey(k[a>>2]|0,f<<7)|0;k[a>>2]=e;d=k[g>>2]|0}p[e+(d<<6)>>3]=+p[b>>3];p[e+(d<<6)+8>>3]=+p[b+8>>3];k[g>>2]=d+1;p[e+(d<<6)+16>>3]=c;return}function VA(a,b,c){a=a|0;b=+b;c=+c;var d=0,e=0,f=0;e=k[a>>2]|0;d=a+4|0;if((e|0)<(k[d>>2]|0)){f=k[a+8>>2]|0;d=e}else{k[d>>2]=2e3;d=a+8|0;f=Ey(k[d>>2]|0,32e3)|0;k[d>>2]=f;d=k[a>>2]|0}k[a>>2]=d+1;p[f+(d<<4)>>3]=b;p[f+(d<<4)+8>>3]=c;return}function WA(a,b,c,d,e,f,g,h){a=+a;b=+b;c=+c;d=d|0;e=+e;f=+f;g=g|0;h=h|0;var i=0.0;d=(d|0)==0;i=d?e:f;do if((g|0)==1){e=(d?f:e)-i;e=!(e<=1.7453292519943296e-03)?e:e+6.283185307179586;if(e<3.141592653589793){XA(h,a,b,c,i+e,i);break}else{VA(h,+Z(+i)*c+a,+_(+i)*c+a);break}}else VA(h,+Z(+i)*c+a,+_(+i)*c+a);while(0);return}function XA(a,b,c,d,e,f){a=a|0;b=+b;c=+c;d=+d;e=+e;f=+f;var g=0,h=0.0;VA(a,+Z(+e)*d+b,+_(+e)*d+c);if(!(d==0.0)){if(f>e)do f=f+-6.283185307179586;while(f>e);f=e-f;if(f>6.283185307179586)do f=f+-6.283185307179586;while(f>6.283185307179586);f=f/19.0;g=1;do{h=e-f*+(g|0);VA(a,+Z(+h)*d+b,+_(+h)*d+c);g=g+1|0}while((g|0)!=20)}return}function YA(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0.0,h=0,j=0.0,l=0,m=0,n=0,o=0,q=0,s=0;s=r;r=r+16|0;q=s+8|0;o=s;m=s+12|0;k[m>>2]=0;h=c+4|0;n=k[h>>2]|0;if(!n)Wa(142556,142567,202,142578);d=k[n>>2]|0;if(!d)Wa(142592,142567,205,142578);f=n+8|0;if(!(k[f>>2]|0)){e=k[14181]|0;if((e|0)!=0?(mO(e,d)|0)==0:0)d=k[14190]|0;else{k[14181]=d;d=cO(56724,56764,35,36,95)|0;k[14190]=d}k[f>>2]=d}if(!(i[137280]|0))l=0;else{l=(zx(k[n>>2]|0)|0)==0;l=l?0:m}if(!((zE(b,c,l)|0)<<24>>24)){h=k[h>>2]|0;d=k[h>>2]|0;j=+p[h+16>>3];h=c+32|0;p[h>>3]=0.0;p[c+40>>3]=j*1.2;p[c+16>>3]=0.0;p[c+24>>3]=j*.1;k[c+8>>2]=0;k[c+12>>2]=0;if(vO(d,142603,4)|0)if((vO(d,142608,5)|0)!=0?(vO(d,142614,9)|0)!=0:0){f=36696;d=142624}else{f=40792;d=142660}else{f=38744;d=142641}if(l)k[l>>2]=d;e=k[c>>2]|0;if(e){d=i[e>>0]|0;if(!(d<<24>>24))g=0.0;else{g=0.0;do{e=e+1|0;g=g+ +p[f+((d&255)<<3)>>3];p[h>>3]=g;d=i[e>>0]|0}while(d<<24>>24!=0)}p[h>>3]=j*g}}do if(l){e=k[m>>2]|0;f=k[24528]|0;d=k[n>>2]|0;if(!e){k[q>>2]=d;FN(f,142709,q)|0;break}else{k[o>>2]=d;k[o+4>>2]=e;FN(f,142677,o)|0;break}}while(0);q=c+32|0;k[a>>2]=k[q>>2];k[a+4>>2]=k[q+4>>2];k[a+8>>2]=k[q+8>>2];k[a+12>>2]=k[q+12>>2];r=s;return}function ZA(a){a=a|0;var b=0;b=a+108|0;k[b>>2]=0;k[a+112>>2]=32;k[a+116>>2]=-1;k[a+120>>2]=40;k[a+124>>2]=60;k[a+128>>2]=55;k[a+132>>2]=0;k[a+136>>2]=0;k[a+140>>2]=0;b=Lr(b,k[12815]|0)|0;k[a+144>>2]=b;return b|0}function _A(a,b){a=a|0;b=b|0;return mO(k[a>>2]|0,k[b>>2]|0)|0}function $A(a,b,c){a=a|0;b=b|0;c=c|0;a=wP(1,32)|0;c=k[b>>2]|0;if(c){c=tO(c)|0;k[a>>2]=c}c=k[b+4>>2]|0;if(c){c=tO(c)|0;k[a+4>>2]=c}k[a+24>>2]=k[b+24>>2]&127;p[a+16>>3]=+p[b+16>>3];k[a+8>>2]=k[b+8>>2];return a|0}function aB(a,b,c){a=a|0;b=b|0;c=c|0;c=k[b>>2]|0;if(c)vP(c);c=k[b+4>>2]|0;if(c)vP(c);vP(b);return}function bB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,g=0,h=0;d=k[b>>2]|0;a=k[c>>2]|0;g=(a|0)==0;if(!d)if(g)h=5;else d=-1;else if(!g){d=qO(d,a)|0;if(!d)h=5}else d=1;do if((h|0)==5){g=k[b+4>>2]|0;d=k[c+4>>2]|0;a=(d|0)==0;if(!g){if(!a){d=-1;break}}else{if(a){d=1;break}d=qO(g,d)|0;if(d)break}d=k[b+24>>2]&127;a=k[c+24>>2]&127;if((d|0)!=(a|0)){d=d-a|0;break}f=+p[b+16>>3];e=+p[c+16>>3];if(f<e)d=-1;else d=f>e&1}while(0);return d|0}function cB(){$a(58024)|0;return}function dB(){var a=0,b=0;b=r;r=r+16|0;a=b;$a(a|0)|0;r=b;return +(+((k[a+4>>2]|0)+(k[a>>2]|0)-(k[14506]|0)-(k[14507]|0)|0)/60.0)}function eB(a){a=a|0;var b=0,c=0;b=By(16)|0;a=(a|0)<2?2:a;c=By(a<<2)|0;k[b>>2]=c;k[b+12>>2]=c;k[b+8>>2]=c;k[b+4>>2]=c+(a<<2);return b|0}function fB(a){a=a|0;vP(k[a>>2]|0);vP(a);return}function gB(a,b){a=a|0;b=b|0;var c=0,d=0;c=a+12|0;d=k[c>>2]|0;k[c>>2]=d+4;k[d>>2]=b;if((k[c>>2]|0)>>>0>=(k[a+4>>2]|0)>>>0)k[c>>2]=k[a>>2];return}function hB(a){a=a|0;var b=0,c=0,d=0;c=a+8|0;b=k[c>>2]|0;if((b|0)!=(k[a+12>>2]|0)){d=b+4|0;k[c>>2]=d;b=k[b>>2]|0;if(d>>>0>=(k[a+4>>2]|0)>>>0)k[c>>2]=k[a>>2]}else b=0;return b|0}function iB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;h=r;r=r+16|0;g=h;if((((b|0)!=0?(e=ts(a,b)|0,(e|0)!=0):0)?(i[e>>0]|0)!=0:0)?(f=gO(e,g,10)|0,(e|0)!=(k[g>>2]|0)):0)c=(f|0)<(d|0)?d:f;r=h;return c|0}function jB(a,b,c,d){a=a|0;b=b|0;c=+c;d=+d;var e=0,f=0.0,g=0,h=0;h=r;r=r+16|0;g=h;if((((a|0)!=0&(b|0)!=0?(e=ts(a,b)|0,(e|0)!=0):0)?(i[e>>0]|0)!=0:0)?(f=+eO(e,g),(e|0)!=(k[g>>2]|0)):0)c=f<d?d:f;r=h;return +c}function kB(a){a=a|0;var b=0.0;b=+p[4239];if(!(b>0.0)){b=+jB(a,ks(a,0,143536,0)|0,-1.0,0.0);b=b==0.0?72.0:b}return +b}function lB(a,b,c){a=a|0;b=b|0;c=c|0;if((a|0)!=0&(b|0)!=0)c=ts(a,b)|0;return c|0}function mB(a,b,c){a=a|0;b=b|0;c=c|0;if((a|0)!=0&(b|0)!=0)b=ts(a,b)|0;else b=c;if(!((b|0)!=0?(i[b>>0]|0)!=0:0))b=c;return b|0}function nB(a,b,c){a=a|0;b=b|0;c=c|0;if(!b)b=c&255;else b=yB(ts(a,b)|0,0)|0;return b|0}function oB(a){a=a|0;return yB(a,0)|0}function pB(a){a=a|0;var b=0,c=0,d=0;b=k[a+8>>2]|0;d=b+220|0;c=k[d>>2]|0;if((c|0)!=(a|0)&(c|0)!=0)do{a=k[(k[(k[d>>2]|0)+8>>2]|0)+220>>2]|0;if(!a)a=c;else{k[d>>2]=a;a=k[b+220>>2]|0}b=k[a+8>>2]|0;d=b+220|0;c=k[d>>2]|0}while((c|0)!=(a|0)&(c|0)!=0);return a|0}function qB(a,b){a=a|0;b=b|0;var c=0,d=0;do if((a|0)!=(b|0)){c=k[a+8>>2]|0;d=c+220|0;if(!(k[d>>2]|0)){k[d>>2]=a;k[c+216>>2]=1}else a=pB(a)|0;d=k[b+8>>2]|0;c=d+220|0;if(!(k[c>>2]|0)){k[c>>2]=b;k[d+216>>2]=1}else{d=pB(b)|0;b=d;d=k[d+8>>2]|0}c=k[a+8>>2]|0;if((k[c+120>>2]|0)>(k[d+120>>2]|0)){k[c+220>>2]=b;a=d+216|0;k[a>>2]=(k[a>>2]|0)+(k[c+216>>2]|0);break}else{k[d+220>>2]=a;b=c+216|0;k[b>>2]=(k[b>>2]|0)+(k[d+216>>2]|0);b=a;break}}else b=a;while(0);return b|0}function rB(a){a=a|0;a=k[a+8>>2]|0;k[a+216>>2]=1;k[a+220>>2]=0;i[a+159>>0]=0;return}function sB(a,b){a=a|0;b=b|0;if((pB(a)|0)==(a|0)){a=k[a+8>>2]|0;k[a+220>>2]=b;b=(k[b+8>>2]|0)+216|0;k[b>>2]=(k[b>>2]|0)+(k[a+216>>2]|0);return}else Wa(143555,143547,195,143571)}function tB(a,b){a=a|0;b=b|0;var c=0.0;b=k[(k[b+8>>2]|0)+132>>2]|0;c=+p[b+8>>3]*72.0;p[a>>3]=+p[b>>3]*72.0;p[a+8>>3]=c;return}function uB(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;f=f|0;var g=0,h=0.0,i=0.0,j=0.0,l=0,m=0,n=0,o=0,q=0,s=0,t=0.0;q=r;r=r+576|0;o=q;n=(c|0)<0;if(!n){g=0;while(1){m=o+(g<<4)|0;l=b+(g<<4)|0;k[m>>2]=k[l>>2];k[m+4>>2]=k[l+4>>2];k[m+8>>2]=k[l+8>>2];k[m+12>>2]=k[l+12>>2];if((g|0)==(c|0))break;else g=g+1|0}if((c|0)>=1){i=1.0-d;g=1;l=c;while(1){if((g|0)<=(c|0)){b=g+-1|0;h=+p[o+(b*96|0)+8>>3];j=+p[o+(b*96|0)>>3];m=0;do{s=m;m=m+1|0;t=j;j=+p[o+(b*96|0)+(m<<4)>>3];p[o+(g*96|0)+(s<<4)>>3]=i*t+j*d;t=h;h=+p[o+(b*96|0)+(m<<4)+8>>3];p[o+(g*96|0)+(s<<4)+8>>3]=i*t+h*d}while((m|0)!=(l|0))}if((g|0)==(c|0))break;else{g=g+1|0;l=l+-1|0}}}}if(!((e|0)==0|n)){b=0;while(1){s=e+(b<<4)|0;m=o+(b*96|0)|0;k[s>>2]=k[m>>2];k[s+4>>2]=k[m+4>>2];k[s+8>>2]=k[m+8>>2];k[s+12>>2]=k[m+12>>2];if((b|0)==(c|0))break;else b=b+1|0}}if(!((f|0)==0|n)){b=0;while(1){s=f+(b<<4)|0;e=o+((c-b|0)*96|0)+(b<<4)|0;k[s>>2]=k[e>>2];k[s+4>>2]=k[e+4>>2];k[s+8>>2]=k[e+8>>2];k[s+12>>2]=k[e+12>>2];if((b|0)==(c|0))break;else b=b+1|0}}s=o+(c*96|0)|0;k[a>>2]=k[s>>2];k[a+4>>2]=k[s+4>>2];k[a+8>>2]=k[s+8>>2];k[a+12>>2]=k[s+12>>2];r=q;return}function vB(a){a=a|0;var b=0,c=0,d=0,e=0;b=0;do{c=k[14510]|0;if((c-b|0)<1024){d=c+1024|0;k[14510]=d;d=Ey(k[14511]|0,d)|0;k[14511]=d;c=k[14510]|0}else d=k[14511]|0;c=CN(d+b|0,c-b|0,a)|0;if(!c){e=6;break}b=(uO(c)|0)+b|0;c=k[14511]|0}while((i[c+(b+-1)>>0]|0)!=10);if((e|0)==6)c=k[14511]|0;return ((b|0)>0?c:0)|0}function wB(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;f=r;r=r+16|0;e=f+8|0;d=f;do if((a|0)!=0?(i[a>>0]|0)!=0:0){c=k[13599]|0;if(!c){b=k[13598]|0;c=k[14513]|0;if((k[14512]|0)==(b|0))b=c;else{if(c){vP(k[c>>2]|0);vP(k[14513]|0);k[14513]=0;b=k[13598]|0}k[14512]=b;if(!b)break;if(!(i[b>>0]|0))break;b=$B(b)|0;k[14513]=b}if(!((i[a>>0]|0)!=47&(b|0)!=0))break;a=aC(b,k[14514]|0,a)|0;break}b=k[13597]|0;if((b|0)!=0?(i[b>>0]|0)!=0:0){if(!(k[14512]|0)){b=$B(b)|0;k[14513]=b;b=k[13597]|0;k[14512]=b}c=zO(a,47)|0;c=(c|0)==0?a:c+1|0;d=zO(c,92)|0;d=(d|0)==0?c:d+1|0;c=zO(d,58)|0;c=(c|0)==0?d:c+1|0;if(!((i[143582]|0)==0|(c|0)==(a|0))){k[e>>2]=a;k[e+4>>2]=b;Yr(0,143708,e)|0;i[143582]=0}a=aC(k[14513]|0,k[14514]|0,c)|0;break}if(i[143582]|0){k[d>>2]=c;Yr(0,143583,d)|0;i[143582]=0;a=0}else a=0}else a=0;while(0);r=f;return a|0}function xB(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;d=k[b>>2]|0;a:do if(!d)d=0;else{f=(a|0)==0;e=d;d=0;do{if((!f?(i[a>>0]|0)==(i[e>>0]|0):0)?(qO(a,e)|0)==0:0)break a;d=d+1|0;e=k[b+(d<<2)>>2]|0}while((e|0)!=0)}while(0);return k[c+(d<<2)>>2]|0}function yB(a,b){a=a|0;b=b|0;var c=0;if((a|0)!=0?(c=i[a>>0]|0,c<<24>>24!=0):0)if((mO(a,173309)|0)!=0?(mO(a,143861)|0)!=0:0)if((mO(a,143864)|0)!=0?(mO(a,143869)|0)!=0:0){if(((c<<24>>24)+-48|0)>>>0<10)b=(bO(a)|0)&255}else b=1;else b=0;return b|0}function zB(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,g=0.0,h=0.0,i=0.0,j=0.0,l=0,m=0.0,n=0,o=0,q=0,s=0,t=0,u=0,v=0.0,w=0,x=0,y=0,z=0,A=0.0;y=r;r=r+80|0;x=y+16|0;w=y;s=k[b+4>>2]|0;t=k[b>>2]|0;v=+p[c>>3];u=c+8|0;e=+p[u>>3];if((s|0)>0){d=1.e+38;c=-1;b=-1;q=0;do{o=k[t+(q*48|0)>>2]|0;n=k[t+(q*48|0)+4>>2]|0;if((n|0)>0){l=0;do{j=+p[o+(l<<4)>>3]-v;m=+p[o+(l<<4)+8>>3]-e;m=j*j+m*m;z=(b|0)==-1|m<d;d=z?m:d;b=z?l:b;c=z?q:c;l=l+1|0}while((l|0)!=(n|0))}q=q+1|0}while((q|0)<(s|0))}else{c=-1;b=-1}z=k[t+(c*48|0)>>2]|0;b=(((b|0)==((k[t+(c*48|0)+4>>2]|0)+-1|0))<<31>>31)+b|0;b=b-((b|0)%3|0)|0;m=+p[z+(b<<4)>>3];p[x>>3]=m;g=+p[z+(b<<4)+8>>3];p[x+8>>3]=g;t=b+1|0;p[x+16>>3]=+p[z+(t<<4)>>3];p[x+24>>3]=+p[z+(t<<4)+8>>3];t=b+2|0;p[x+32>>3]=+p[z+(t<<4)>>3];p[x+40>>3]=+p[z+(t<<4)+8>>3];b=b+3|0;d=+p[z+(b<<4)>>3];p[x+48>>3]=d;f=+p[z+(b<<4)+8>>3];p[x+56>>3]=f;m=m-v;g=g-e;g=m*m+g*g;d=d-v;f=f-e;f=d*d+f*f;uB(w,x,3,.5,0,0);e=+p[w>>3];b=w+8|0;d=+p[b>>3];a:do if(!(+W(+(g-f))<1.0)){m=+p[u>>3];j=.5;h=1.0;i=0.0;do{if(+W(+(h-i))<1.0e-05)break a;z=g<f;A=e-v;e=d-m;e=A*A+e*e;g=z?g:e;f=z?e:f;i=z?i:j;h=z?j:h;j=(i+h)*.5;uB(w,x,3,j,0,0);e=+p[w>>3];d=+p[b>>3]}while(!(+W(+(g-f))<1.0))}while(0);p[a>>3]=e;p[a+8>>3]=d;r=y;return}function AB(){return k[14515]|0}function BB(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0.0,h=0,j=0;g=+jB(a,k[13620]|0,.75,.01);h=a+8|0;p[(k[h>>2]|0)+32>>3]=g;g=+jB(a,k[13619]|0,.5,.02);p[(k[h>>2]|0)+40>>3]=g;b=k[13621]|0;f=(a|0)!=0;if(f&(b|0)!=0){b=ts(a,b)|0;if(!b)d=4;else d=3}else{b=143873;d=3}if((d|0)==3)if(!(i[b>>0]|0))d=4;if((d|0)==4)b=143873;e=Tz(b,a)|0;k[(k[h>>2]|0)+8>>2]=e;e=ts(a,k[13636]|0)|0;g=+jB(a,k[13632]|0,14.0,1.0);b=k[13633]|0;if(f&(b|0)!=0){b=ts(a,b)|0;if(!b)d=8;else d=7}else{b=143881;d=7}if((d|0)==7)if(!(i[b>>0]|0))d=8;if((d|0)==8)b=143881;c=k[13634]|0;if(f&(c|0)!=0){c=ts(a,c)|0;if(!c)d=12;else d=11}else{c=173315;d=11}if((d|0)==11)if(!(i[c>>0]|0))d=12;if((d|0)==12)c=173315;d=(Eu(e)|0)!=0;f=(Qz(a)|0)==2;d=qy(a,e,(f?4:0)|(d?2:0),g,b,c)|0;k[(k[h>>2]|0)+104>>2]=d;d=k[13637]|0;if(((d|0)!=0?(j=ts(a,d)|0,(j|0)!=0):0)?(i[j>>0]|0)!=0:0){f=(Eu(j)|0)!=0;j=qy(a,j,f?2:0,g,b,c)|0;k[(k[h>>2]|0)+108>>2]=j;j=($t(a)|0)+8|0;j=(k[j>>2]|0)+113|0;i[j>>0]=l[j>>0]|16}f=(iB(a,k[13640]|0,0,0)|0)&255;j=k[h>>2]|0;i[j+144>>0]=f;Nb[k[k[(k[j+8>>2]|0)+4>>2]>>2]&127](a);return}function CB(a){a=a|0;var b=0,c=0,d=0,e=0,f=0.0,g=0,h=0,j=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0;x=r;r=r+112|0;n=x+96|0;q=x+80|0;v=x+40|0;w=x;u=a+32|0;s=$t(k[((k[a>>2]&3|0)==3?a:u)+28>>2]|0)|0;h=n+8|0;k[h>>2]=0;o=q+8|0;k[o>>2]=0;b=k[13671]|0;if(((b|0)!=0?(d=ts(a,b)|0,(d|0)!=0):0)?(i[d>>0]|0)!=0:0){bC(a,n);e=(Eu(d)|0)!=0;f=+p[n>>3];c=k[h>>2]|0;b=k[n+12>>2]|0;e=qy(a,d,e?2:0,f,c,b)|0;g=a+8|0;d=k[g>>2]|0;k[d+96>>2]=e;e=(k[s+8>>2]|0)+113|0;i[e>>0]=l[e>>0]|1;e=k[13681]|0;if(!e)e=173309;else{e=ts(a,e)|0;d=k[g>>2]|0}g=yB(e,0)|0;i[d+114>>0]=g;g=1}else{b=0;f=0.0;c=0;g=0}d=k[13672]|0;if(((d|0)!=0?(j=ts(a,d)|0,(j|0)!=0):0)?(i[j>>0]|0)!=0:0){if(!c){bC(a,n);f=+p[n>>3];c=k[h>>2]|0;b=k[n+12>>2]|0}h=(Eu(j)|0)!=0;j=qy(a,j,h?2:0,f,c,b)|0;k[(k[a+8>>2]|0)+108>>2]=j;j=(k[s+8>>2]|0)+113|0;i[j>>0]=l[j>>0]|32}b=k[13686]|0;if(((b|0)!=0?(m=ts(a,b)|0,(m|0)!=0):0)?(i[m>>0]|0)!=0:0){cC(a,n,q);j=(Eu(m)|0)!=0;f=+p[q>>3];c=k[o>>2]|0;b=k[q+12>>2]|0;m=qy(a,m,j?2:0,f,c,b)|0;k[(k[a+8>>2]|0)+100>>2]=m;m=(k[s+8>>2]|0)+113|0;i[m>>0]=l[m>>0]|2}else{b=0;f=0.0;c=0}d=k[13687]|0;if(((d|0)!=0?(t=ts(a,d)|0,(t|0)!=0):0)?(i[t>>0]|0)!=0:0){if(!c){cC(a,n,q);f=+p[q>>3];c=k[o>>2]|0;b=k[q+12>>2]|0}q=(Eu(t)|0)!=0;t=qy(a,t,q?2:0,f,c,b)|0;k[(k[a+8>>2]|0)+104>>2]=t;t=(k[s+8>>2]|0)+113|0;i[t>>0]=l[t>>0]|4}b=ss(a,147395)|0;b=(b|0)!=0?b:176676;if(i[b>>0]|0)i[(k[(k[((k[a>>2]&3|0)==3?a:u)+28>>2]|0)+8>>2]|0)+145>>0]=1;e=a+8|0;d=(k[e>>2]|0)+16|0;c=k[((k[a>>2]&3|0)==3?a:u)+28>>2]|0;dC(v,k[(k[(k[(k[c+8>>2]|0)+8>>2]|0)+4>>2]|0)+8>>2]|0,c,b);b=v;c=d+40|0;do{k[d>>2]=k[b>>2];d=d+4|0;b=b+4|0}while((d|0)<(c|0));if((eC(a,k[13693]|0)|0)<<24>>24)i[(k[e>>2]|0)+46>>0]=0;b=ss(a,147404)|0;b=(b|0)!=0?b:176676;if(!(i[b>>0]|0))c=a+-32|0;else{c=a+-32|0;i[(k[(k[((k[a>>2]&3|0)==2?a:c)+28>>2]|0)+8>>2]|0)+145>>0]=1}d=(k[e>>2]|0)+56|0;c=k[((k[a>>2]&3|0)==2?a:c)+28>>2]|0;dC(w,k[(k[(k[(k[c+8>>2]|0)+8>>2]|0)+4>>2]|0)+8>>2]|0,c,b);b=w;c=d+40|0;do{k[d>>2]=k[b>>2];d=d+4|0;b=b+4|0}while((d|0)<(c|0));if((eC(a,k[13694]|0)|0)<<24>>24)i[(k[e>>2]|0)+86>>0]=0;r=x;return g|0}function DB(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0,g=0.0,h=0,i=0,j=0,l=0.0,m=0;j=k[b+8>>2]|0;i=k[b+4>>2]|0;h=k[b+44>>2]|0;i=ha((i|0)>1?i+-1|0:0,j)|0;c=+p[h+(i<<4)>>3];g=+p[h+(i<<4)+8>>3];if((j|0)>1){f=c;e=g;d=c;c=g;b=1;do{m=b+i|0;l=+p[h+(m<<4)>>3];f=f<l?f:l;g=+p[h+(m<<4)+8>>3];e=e<g?e:g;d=d>l?d:l;c=c>g?c:g;b=b+1|0}while((b|0)!=(j|0))}else{f=c;e=g;d=c;c=g}p[a>>3]=f;p[a+8>>3]=e;p[a+16>>3]=d;p[a+24>>3]=c;return}function EB(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0,f=0.0,g=0.0,h=0,j=0.0,l=0.0,m=0,n=0.0,o=0.0,q=0.0,r=0,s=0.0;a=k[a+8>>2]|0;r=k[a+116>>2]&1;m=a+16|0;i[t>>0]=i[m>>0];i[t+1>>0]=i[m+1>>0];i[t+2>>0]=i[m+2>>0];i[t+3>>0]=i[m+3>>0];i[t+4>>0]=i[m+4>>0];i[t+5>>0]=i[m+5>>0];i[t+6>>0]=i[m+6>>0];i[t+7>>0]=i[m+7>>0];n=+p[t>>3];h=a+24|0;i[t>>0]=i[h>>0];i[t+1>>0]=i[h+1>>0];i[t+2>>0]=i[h+2>>0];i[t+3>>0]=i[h+3>>0];i[t+4>>0]=i[h+4>>0];i[t+5>>0]=i[h+5>>0];i[t+6>>0]=i[h+6>>0];i[t+7>>0]=i[h+7>>0];j=+p[t>>3];e=a+32|0;i[t>>0]=i[e>>0];i[t+1>>0]=i[e+1>>0];i[t+2>>0]=i[e+2>>0];i[t+3>>0]=i[e+3>>0];i[t+4>>0]=i[e+4>>0];i[t+5>>0]=i[e+5>>0];i[t+6>>0]=i[e+6>>0];i[t+7>>0]=i[e+7>>0];f=+p[t>>3];a=a+40|0;i[t>>0]=i[a>>0];i[t+1>>0]=i[a+1>>0];i[t+2>>0]=i[a+2>>0];i[t+3>>0]=i[a+3>>0];i[t+4>>0]=i[a+4>>0];i[t+5>>0]=i[a+5>>0];i[t+6>>0]=i[a+6>>0];i[t+7>>0]=i[a+7>>0];c=+p[t>>3];s=+p[b+56>>3];q=+p[b+64>>3];r=(r|0)==0;d=+p[b+24>>3];l=+p[b+32>>3];g=(r?d:l)*.5;o=s-g;g=s+g;d=(r?l:d)*.5;l=q-d;d=q+d;p[m>>3]=o<n?o:n;p[h>>3]=l<j?l:j;p[e>>3]=g>f?g:f;p[a>>3]=d>c?d:c;return}function FB(a){a=a|0;var b=0.0,c=0.0,d=0,e=0.0,f=0.0,g=0,h=0.0,j=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0.0,u=0.0,v=0.0,w=0.0,x=0.0;if(!((Zs(a)|0)==0?(k[(k[a+8>>2]|0)+180>>2]|0)==0:0)){d=Kt(a)|0;s=a+8|0;if(!d){b=-2147483647.0;f=-2147483647.0;e=2147483647.0;c=2147483647.0}else{c=2147483647.0;e=2147483647.0;f=-2147483647.0;b=-2147483647.0;do{g=k[d+8>>2]|0;r=k[g+132>>2]|0;x=+p[r>>3]*72.0;w=+p[r+8>>3]*72.0;t=(+p[g+88>>3]+ +p[g+96>>3])*.5;h=+p[g+80>>3]*.5;v=x-t;u=w-h;t=x+t;h=w+h;c=c<v?c:v;e=e<u?e:u;f=f>t?f:t;b=b>h?b:h;g=k[g+108>>2]|0;if((g|0)!=0?(i[g+81>>0]|0)!=0:0){t=+p[g+56>>3];w=+p[g+64>>3];r=(k[(k[s>>2]|0)+116>>2]&1|0)==0;h=+p[g+24>>3];x=+p[g+32>>3];v=(r?h:x)*.5;u=t-v;v=t+v;c=u<c?u:c;f=v>f?v:f;h=(r?x:h)*.5;x=w-h;h=w+h;e=x<e?x:e;if(h>b)b=h}g=Es(a,d)|0;if(g){r=g;do{q=k[r+8>>2]|0;g=k[q+8>>2]|0;if(g){o=k[g+4>>2]|0;if((o|0)>0){n=k[g>>2]|0;m=0;do{l=k[n+(m*48|0)+4>>2]|0;if((l|0)>0){j=k[n+(m*48|0)>>2]|0;g=0;do{w=+p[j+(g<<4)>>3];x=+p[j+(g<<4)+8>>3];c=c<w?c:w;e=e<x?e:x;f=f>w?f:w;b=b>x?b:x;g=g+1|0}while((g|0)<(l|0))}m=m+1|0}while((m|0)<(o|0))}g=k[q+96>>2]|0;if((g|0)!=0?(i[g+81>>0]|0)!=0:0){t=+p[g+56>>3];w=+p[g+64>>3];o=(k[(k[s>>2]|0)+116>>2]&1|0)==0;h=+p[g+24>>3];x=+p[g+32>>3];v=(o?h:x)*.5;u=t-v;v=t+v;c=u<c?u:c;f=v>f?v:f;h=(o?x:h)*.5;x=w-h;h=w+h;e=x<e?x:e;if(h>b)b=h}g=k[q+100>>2]|0;if((g|0)!=0?(i[g+81>>0]|0)!=0:0){t=+p[g+56>>3];w=+p[g+64>>3];o=(k[(k[s>>2]|0)+116>>2]&1|0)==0;h=+p[g+24>>3];x=+p[g+32>>3];v=(o?h:x)*.5;u=t-v;v=t+v;c=u<c?u:c;f=v>f?v:f;h=(o?x:h)*.5;x=w-h;h=w+h;e=x<e?x:e;if(h>b)b=h}g=k[q+104>>2]|0;if((g|0)!=0?(i[g+81>>0]|0)!=0:0){t=+p[g+56>>3];w=+p[g+64>>3];o=(k[(k[s>>2]|0)+116>>2]&1|0)==0;h=+p[g+24>>3];x=+p[g+32>>3];v=(o?h:x)*.5;u=t-v;v=t+v;c=u<c?u:c;f=v>f?v:f;h=(o?x:h)*.5;x=w-h;h=w+h;e=x<e?x:e;if(h>b)b=h}g=k[q+108>>2]|0;if((g|0)!=0?(i[g+81>>0]|0)!=0:0){t=+p[g+56>>3];w=+p[g+64>>3];q=(k[(k[s>>2]|0)+116>>2]&1|0)==0;h=+p[g+24>>3];x=+p[g+32>>3];v=(q?h:x)*.5;u=t-v;v=t+v;c=u<c?u:c;f=v>f?v:f;h=(q?x:h)*.5;x=w-h;h=w+h;e=x<e?x:e;if(h>b)b=h}}r=Gs(a,r)|0}while((r|0)!=0)}d=Lt(a,d)|0}while((d|0)!=0)}l=k[s>>2]|0;j=k[l+180>>2]|0;if((j|0)>=1){g=k[l+184>>2]|0;d=1;while(1){s=k[(k[g+(d<<2)>>2]|0)+8>>2]|0;u=+p[s+16>>3];v=+p[s+24>>3];w=+p[s+32>>3];x=+p[s+40>>3];c=c<u?c:u;e=e<v?e:v;f=f>w?f:w;b=b>x?b:x;if((d|0)<(j|0))d=d+1|0;else break}}d=k[l+12>>2]|0;if((d|0)!=0?(i[d+81>>0]|0)!=0:0){t=+p[d+56>>3];w=+p[d+64>>3];s=(k[l+116>>2]&1|0)==0;h=+p[d+24>>3];x=+p[d+32>>3];v=(s?h:x)*.5;u=t-v;v=t+v;c=u<c?u:c;f=v>f?v:f;h=(s?x:h)*.5;x=w-h;h=w+h;e=x<e?x:e;if(h>b)b=h}p[l+16>>3]=c;p[l+24>>3]=e;p[l+32>>3]=f;p[l+40>>3]=b}return}function GB(a){a=a|0;if((k[a+48>>2]|0)==(a|0))a=1;else a=(vO(ht(a)|0,143893,7)|0)==0;return a&1|0}function HB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;a:do if(!e)switch(ku(b)|0){case 0:{e=ks(a,0,c,176676)|0;break a}case 1:{e=ks(a,1,c,176676)|0;break a}case 2:{e=ks(a,2,c,176676)|0;break a}default:{e=0;break a}}while(0);vs(b,e,d)|0;return e|0}function IB(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,l=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;E=r;r=r+192|0;y=E+32|0;x=E+24|0;A=E+16|0;z=E+8|0;w=E;v=E+56|0;B=E+40|0;C=Lr(58064,k[12815]|0)|0;fC(a,C);q=Lr(58100,k[12815]|0)|0;D=Hu(a,143901,1)|0;qu(D,173447,280,1)|0;$r(B,128,E+64|0);b=Kt(a)|0;if(b){u=v+4|0;do{if((i[(k[b+8>>2]|0)+118>>0]|0)==0?(p=Es(a,b)|0,(p|0)!=0):0){o=p;do{f=k[o>>2]&3;c=o+32|0;e=k[((f|0)==3?o:c)+28>>2]|0;d=o+-32|0;f=k[((f|0)==2?o:d)+28>>2]|0;do if(!(i[(k[f+8>>2]|0)+118>>0]|0)){if((wO(ht(e)|0,143893,7)|0)==0?(s=ht(e)|0,s=Tb[k[C>>2]&63](C,s,512)|0,(s|0)!=0):0)h=k[s+12>>2]|0;else h=0;if((wO(ht(f)|0,143893,7)|0)==0?(t=ht(f)|0,t=Tb[k[C>>2]&63](C,t,512)|0,(t|0)!=0):0)n=k[t+12>>2]|0;else n=0;g=(h|0)!=0;l=(n|0)!=0;if(g|l){if((h|0)==(n|0)){l=ht(e)|0;n=ht(e)|0;k[w>>2]=l;k[w+4>>2]=n;Yr(0,143916,w)|0;break}F=k[o>>2]&3;k[v>>2]=k[((F|0)==3?o:c)+28>>2];k[u>>2]=k[((F|0)==2?o:d)+28>>2];c=Tb[k[q>>2]&63](q,v,512)|0;if(c){gC(o,k[c+16>>2]|0,k[c+20>>2]|0)|0;break}if(!l)if(!(ju(h,f)|0)){iC(q,e,f,gC(o,hC(e,h,B,D)|0,f)|0);break}else{n=ht(f)|0;F=ht(h)|0;k[y>>2]=n;k[y+4>>2]=F;Yr(0,144071,y)|0;break}if(!g)if(!(ju(n,e)|0)){iC(q,e,f,gC(o,e,hC(f,n,B,D)|0)|0);break}else{l=ht(e)|0;F=ht(n)|0;k[x>>2]=l;k[x+4>>2]=F;Yr(0,144034,x)|0;break}if(ju(n,h)|0){l=ht(h)|0;F=ht(n)|0;k[z>>2]=l;k[z+4>>2]=F;Yr(0,143954,z)|0;break}if(!(ju(h,n)|0)){F=hC(e,h,B,D)|0;iC(q,e,f,gC(o,F,hC(f,n,B,D)|0)|0);break}else{n=ht(n)|0;F=ht(h)|0;k[A>>2]=n;k[A+4>>2]=F;Yr(0,143994,A)|0;break}}}while(0);o=Gs(a,o)|0}while((o|0)!=0)}b=Lt(a,b)|0}while((b|0)!=0)}ds(B);Hr(q)|0;c=Zs(D)|0;b=Kt(D)|0;if(b)do{F=b;b=Lt(D,b)|0;_t(a,F)|0}while((b|0)!=0);Ys(D)|0;if(c){F=(k[a+8>>2]|0)+136|0;j[F>>1]=m[F>>1]|1}Hr(C)|0;r=E;return c|0}function JB(a){a=a|0;var b=0;b=Lr(58064,k[12815]|0)|0;fC(a,b);return b|0}function KB(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;f=Hu(a,143901,1)|0;qu(f,173447,280,1)|0;b=Kt(a)|0;if(b)do{c=Es(a,b)|0;if(c)do{e=k[c>>2]&3;d=k[((e|0)==3?c:c+32|0)+28>>2]|0;e=k[((e|0)==2?c:c+-32|0)+28>>2]|0;if(!((i[(k[d+8>>2]|0)+118>>0]|0)==0?(i[(k[e+8>>2]|0)+118>>0]|0)==0:0)){d=jC(d,f)|0;gC(c,d,jC(e,f)|0)|0}c=Gs(a,c)|0}while((c|0)!=0);b=Lt(a,b)|0}while((b|0)!=0);b=Kt(f)|0;if(b)do{_t(a,b)|0;b=Lt(f,b)|0}while((b|0)!=0);Ys(f)|0;return}function LB(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=ks(a,b,c,0)|0;if(!e)e=ks(a,b,c,d)|0;return e|0}function MB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0;n=r;r=r+32|0;g=n;f=n+8|0;h=n+16|0;l=oO(a,59)|0;m=b+4|0;c=k[m>>2]|0;j=b+8|0;if(c>>>0>=(k[j>>2]|0)>>>0){as(b,1)|0;c=k[m>>2]|0}k[m>>2]=c+1;i[c>>0]=38;if(((l|0)!=0?(d=l-a|0,(d+-2|0)>>>0<=6):0)?(xO(h,a,d)|0,i[h+d>>0]=0,k[f>>2]=h,e=cO(f,58136,252,8,96)|0,(e|0)!=0):0){k[g>>2]=k[e+4>>2];TN(h,173421,g)|0;a=k[m>>2]|0;if(a>>>0>=(k[j>>2]|0)>>>0){as(b,1)|0;a=k[m>>2]|0}k[m>>2]=a+1;i[a>>0]=35;cs(b,h)|0;a=k[m>>2]|0;if(a>>>0>=(k[j>>2]|0)>>>0){as(b,1)|0;a=k[m>>2]|0}k[m>>2]=a+1;i[a>>0]=59;a=l+1|0}r=n;return a|0}function NB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0;o=r;r=r+1072|0;l=o+8|0;j=o;h=o+32|0;n=o+16|0;k[h>>2]=a;if((k[15038]|0)!=(b|0)){k[15038]=b;i[144108]=0}$r(n,1024,o+40|0);c=a+1|0;k[h>>2]=c;a=i[a>>0]|0;m=n+4|0;g=n+8|0;if(a<<24>>24)do{a:do if((a&255)<192){if(a<<24>>24==38){d=mC(h)|0;if(!d)a=38;else{if(d>>>0<127){a=d&255;break}a=k[m>>2]|0;c=a>>>0>=(k[g>>2]|0)>>>0;if(d>>>0<2047){if(c){as(n,1)|0;a=k[m>>2]|0}k[m>>2]=a+1;i[a>>0]=d>>>6|192;a=(d&63|128)&255;break}if(c){as(n,1)|0;a=k[m>>2]|0}k[m>>2]=a+1;i[a>>0]=d>>>12|224;a=k[m>>2]|0;if(a>>>0>=(k[g>>2]|0)>>>0){as(n,1)|0;a=k[m>>2]|0}k[m>>2]=a+1;i[a>>0]=d>>>6&63|128;a=(d&63|128)&255}}}else{if((a&255)>=224)if((a&255)>=240)if((a&255)<248)f=3;else{if(!(i[144108]|0)){f=ht(b)|0;k[j>>2]=f;Yr(0,144109,j)|0;i[144108]=1}a=lC(a,n)|0;break}else f=2;else f=1;e=0;while(1){if((i[c>>0]&-64)<<24>>24!=-128)break;d=k[m>>2]|0;if(d>>>0>=(k[g>>2]|0)>>>0){as(n,1)|0;d=k[m>>2]|0}k[m>>2]=d+1;i[d>>0]=a;a=c;c=c+1|0;k[h>>2]=c;a=i[a>>0]|0;e=e+1|0;if((e|0)>=(f|0))break a}if(!(i[144108]|0)){e=ht(b)|0;k[l>>2]=f+1;k[l+4>>2]=e;Yr(0,144230,l)|0;i[144108]=1}a=lC(a,n)|0}while(0);c=k[m>>2]|0;if(c>>>0>=(k[g>>2]|0)>>>0){as(n,1)|0;c=k[m>>2]|0}k[m>>2]=c+1;i[c>>0]=a;a=k[h>>2]|0;c=a+1|0;k[h>>2]=c;a=i[a>>0]|0}while(a<<24>>24!=0);a=k[m>>2]|0;if(a>>>0>=(k[g>>2]|0)>>>0){as(n,1)|0;a=k[m>>2]|0}i[a>>0]=0;l=k[n>>2]|0;k[m>>2]=l;m=tO(l)|0;ds(n);r=o;return m|0}function OB(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0;j=r;r=r+1056|0;f=j+16|0;h=j;$r(h,1024,j+24|0);k[f>>2]=a+1;a=i[a>>0]|0;g=h+4|0;e=h+8|0;if(a<<24>>24)do{b=a&255;if(a<<24>>24==38){a=mC(f)|0;if(!a){a=38;d=5}else d=4}else{a=b;d=4}do if((d|0)==4){d=0;if(a>>>0<127)d=5;else{b=k[g>>2]|0;c=b>>>0>=(k[e>>2]|0)>>>0;if(a>>>0<2047){if(c){as(h,1)|0;b=k[g>>2]|0}k[g>>2]=b+1;i[b>>0]=a>>>6|192;b=k[g>>2]|0;if(b>>>0>=(k[e>>2]|0)>>>0){as(h,1)|0;b=k[g>>2]|0}k[g>>2]=b+1;i[b>>0]=a&63|128;break}if(c){as(h,1)|0;b=k[g>>2]|0}k[g>>2]=b+1;i[b>>0]=a>>>12|224;b=k[g>>2]|0;if(b>>>0>=(k[e>>2]|0)>>>0){as(h,1)|0;b=k[g>>2]|0}k[g>>2]=b+1;i[b>>0]=a>>>6&63|128;b=k[g>>2]|0;if(b>>>0>=(k[e>>2]|0)>>>0){as(h,1)|0;b=k[g>>2]|0}k[g>>2]=b+1;i[b>>0]=a&63|128}}while(0);if((d|0)==5){b=k[g>>2]|0;if(b>>>0>=(k[e>>2]|0)>>>0){as(h,1)|0;b=k[g>>2]|0}k[g>>2]=b+1;i[b>>0]=a}a=k[f>>2]|0;k[f>>2]=a+1;a=i[a>>0]|0}while(a<<24>>24!=0);a=k[g>>2]|0;if(a>>>0>=(k[e>>2]|0)>>>0){as(h,1)|0;a=k[g>>2]|0}i[a>>0]=0;f=k[h>>2]|0;k[g>>2]=f;g=tO(f)|0;ds(h);r=j;return g|0}function PB(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;g=r;r=r+1040|0;f=g;$r(f,1024,g+16|0);b=i[a>>0]|0;e=f+4|0;d=f+8|0;if(b<<24>>24){c=b;while(1){b=a+1|0;if((c&255)<127){a=k[e>>2]|0;if(a>>>0>=(k[d>>2]|0)>>>0){as(f,1)|0;a=k[e>>2]|0}k[e>>2]=a+1;i[a>>0]=c}else{c=((l[b>>0]|0)&63|(c&255)<<6)&255;b=k[e>>2]|0;if(b>>>0>=(k[d>>2]|0)>>>0){as(f,1)|0;b=k[e>>2]|0}k[e>>2]=b+1;i[b>>0]=c;b=a+2|0}c=i[b>>0]|0;if(!(c<<24>>24))break;else a=b}}b=k[e>>2]|0;if(b>>>0>=(k[d>>2]|0)>>>0){as(f,1)|0;b=k[e>>2]|0}i[b>>0]=0;d=k[f>>2]|0;k[e>>2]=d;e=tO(d)|0;ds(f);r=g;return e|0}function QB(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0.0,f=0.0,g=0.0,h=0,j=0,l=0,m=0,n=0.0;m=r;r=r+48|0;l=m+16|0;h=m+32|0;j=m;d=+p[b+16>>3];c=k[a+8>>2]|0;if(((d>=+p[c+48>>3]?(g=+p[b>>3],+p[c+64>>3]>=g):0)?(e=+p[b+24>>3],e>=+p[c+56>>3]):0)?(f=+p[b+8>>3],+p[c+72>>3]>=f):0){b=c+16|0;i[t>>0]=i[b>>0];i[t+1>>0]=i[b+1>>0];i[t+2>>0]=i[b+2>>0];i[t+3>>0]=i[b+3>>0];i[t+4>>0]=i[b+4>>0];i[t+5>>0]=i[b+5>>0];i[t+6>>0]=i[b+6>>0];i[t+7>>0]=i[b+7>>0];n=+p[t>>3];b=c+24|0;i[t>>0]=i[b>>0];i[t+1>>0]=i[b+1>>0];i[t+2>>0]=i[b+2>>0];i[t+3>>0]=i[b+3>>0];i[t+4>>0]=i[b+4>>0];i[t+5>>0]=i[b+5>>0];i[t+6>>0]=i[b+6>>0];i[t+7>>0]=i[b+7>>0];f=+p[t>>3]-(e+f)*.5;p[j>>3]=n-(g+d)*.5;p[j+8>>3]=f;k[h>>2]=a;k[h+4>>2]=0;c=k[(k[(k[c+8>>2]|0)+4>>2]|0)+12>>2]|0;k[l>>2]=k[j>>2];k[l+4>>2]=k[j+4>>2];k[l+8>>2]=k[j+8>>2];k[l+12>>2]=k[j+12>>2];c=_b[c&127](h,l)|0}else c=0;r=m;return c|0}function RB(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0.0,g=0.0,h=0;f=+p[a+24>>3]*.5;g=+p[a+32>>3]*.5;h=a+56|0;i[t>>0]=i[h>>0];i[t+1>>0]=i[h+1>>0];i[t+2>>0]=i[h+2>>0];i[t+3>>0]=i[h+3>>0];i[t+4>>0]=i[h+4>>0];i[t+5>>0]=i[h+5>>0];i[t+6>>0]=i[h+6>>0];i[t+7>>0]=i[h+7>>0];e=+p[t>>3];a=a+64|0;i[t>>0]=i[a>>0];i[t+1>>0]=i[a+1>>0];i[t+2>>0]=i[a+2>>0];i[t+3>>0]=i[a+3>>0];i[t+4>>0]=i[a+4>>0];i[t+5>>0]=i[a+5>>0];i[t+6>>0]=i[a+6>>0];i[t+7>>0]=i[a+7>>0];c=+p[t>>3];d=c-g;c=g+c;if((+p[b+16>>3]>=e-f?f+e>=+p[b>>3]:0)?+p[b+24>>3]>=d:0)a=c>=+p[b+8>>3]&1;else a=0;return a|0}function SB(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0.0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0.0,D=0.0,E=0,F=0.0,G=0.0,H=0.0;E=r;r=r+176|0;y=E+144|0;s=E+128|0;q=E+112|0;z=E+96|0;A=E+80|0;x=E+48|0;u=E;v=a+8|0;a=k[v>>2]|0;o=k[a+8>>2]|0;do if((((((o|0)!=0?(n=o+16|0,i[t>>0]=i[n>>0],i[t+1>>0]=i[n+1>>0],i[t+2>>0]=i[n+2>>0],i[t+3>>0]=i[n+3>>0],i[t+4>>0]=i[n+4>>0],i[t+5>>0]=i[n+5>>0],i[t+6>>0]=i[n+6>>0],i[t+7>>0]=i[n+7>>0],e=+p[t>>3],n=o+24|0,i[t>>0]=i[n>>0],i[t+1>>0]=i[n+1>>0],i[t+2>>0]=i[n+2>>0],i[t+3>>0]=i[n+3>>0],i[t+4>>0]=i[n+4>>0],i[t+5>>0]=i[n+5>>0],i[t+6>>0]=i[n+6>>0],i[t+7>>0]=i[n+7>>0],F=+p[t>>3],n=o+32|0,i[t>>0]=i[n>>0],i[t+1>>0]=i[n+1>>0],i[t+2>>0]=i[n+2>>0],i[t+3>>0]=i[n+3>>0],i[t+4>>0]=i[n+4>>0],i[t+5>>0]=i[n+5>>0],i[t+6>>0]=i[n+6>>0],i[t+7>>0]=i[n+7>>0],d=+p[t>>3],F>=+p[b>>3]):0)?(n=o+8|0,i[t>>0]=i[n>>0],i[t+1>>0]=i[n+1>>0],i[t+2>>0]=i[n+2>>0],i[t+3>>0]=i[n+3>>0],i[t+4>>0]=i[n+4>>0],i[t+5>>0]=i[n+5>>0],i[t+6>>0]=i[n+6>>0],i[t+7>>0]=i[n+7>>0],+p[b+16>>3]>=+p[t>>3]):0)?d>=+p[b+8>>3]:0)?+p[b+24>>3]>=e:0)?(w=o+4|0,(k[w>>2]|0)>0):0){g=u+4|0;h=u+8|0;j=u+12|0;l=u+32|0;m=u+16|0;n=0;a:while(1){c=(k[o>>2]|0)+(n*48|0)|0;k[x>>2]=k[b>>2];k[x+4>>2]=k[b+4>>2];k[x+8>>2]=k[b+8>>2];k[x+12>>2]=k[b+12>>2];k[x+16>>2]=k[b+16>>2];k[x+20>>2]=k[b+20>>2];k[x+24>>2]=k[b+24>>2];k[x+28>>2]=k[b+28>>2];a=u;f=a+48|0;do{i[a>>0]=i[c>>0]|0;a=a+1|0;c=c+1|0}while((a|0)<(f|0));a=k[g>>2]|0;if(!a){c=9;break}c=k[u>>2]|0;k[A>>2]=k[c>>2];k[A+4>>2]=k[c+4>>2];k[A+8>>2]=k[c+8>>2];k[A+12>>2]=k[c+12>>2];b:do if((a|0)>1){f=c+16|0;k[z>>2]=k[f>>2];k[z+4>>2]=k[f+4>>2];k[z+8>>2]=k[f+8>>2];k[z+12>>2]=k[f+12>>2];k[q>>2]=k[f>>2];k[q+4>>2]=k[f+4>>2];k[q+8>>2]=k[f+8>>2];k[q+12>>2]=k[f+12>>2];k[s>>2]=k[A>>2];k[s+4>>2]=k[A+4>>2];k[s+8>>2]=k[A+8>>2];k[s+12>>2]=k[A+12>>2];k[y>>2]=k[x>>2];k[y+4>>2]=k[x+4>>2];k[y+8>>2]=k[x+8>>2];k[y+12>>2]=k[x+12>>2];k[y+16>>2]=k[x+16>>2];k[y+20>>2]=k[x+20>>2];k[y+24>>2]=k[x+24>>2];k[y+28>>2]=k[x+28>>2];if((cy(q,s,y)|0)==-1)a=1;else{c=18;break a}while(1){k[A>>2]=k[z>>2];k[A+4>>2]=k[z+4>>2];k[A+8>>2]=k[z+8>>2];k[A+12>>2]=k[z+12>>2];a=a+1|0;if((a|0)>=(k[g>>2]|0))break b;f=(k[u>>2]|0)+(a<<4)|0;k[z>>2]=k[f>>2];k[z+4>>2]=k[f+4>>2];k[z+8>>2]=k[f+8>>2];k[z+12>>2]=k[f+12>>2];k[q>>2]=k[f>>2];k[q+4>>2]=k[f+4>>2];k[q+8>>2]=k[f+8>>2];k[q+12>>2]=k[f+12>>2];k[s>>2]=k[A>>2];k[s+4>>2]=k[A+4>>2];k[s+8>>2]=k[A+8>>2];k[s+12>>2]=k[A+12>>2];k[y>>2]=k[x>>2];k[y+4>>2]=k[x+4>>2];k[y+8>>2]=k[x+8>>2];k[y+12>>2]=k[x+12>>2];k[y+16>>2]=k[x+16>>2];k[y+20>>2]=k[x+20>>2];k[y+24>>2]=k[x+24>>2];k[y+28>>2]=k[x+28>>2];if((cy(q,s,y)|0)!=-1){c=18;break a}}}while(0);a=k[h>>2]|0;if((a|0)!=0?(f=k[u>>2]|0,k[q>>2]=k[m>>2],k[q+4>>2]=k[m+4>>2],k[q+8>>2]=k[m+8>>2],k[q+12>>2]=k[m+12>>2],k[s>>2]=k[f>>2],k[s+4>>2]=k[f+4>>2],k[s+8>>2]=k[f+8>>2],k[s+12>>2]=k[f+12>>2],k[y>>2]=k[x>>2],k[y+4>>2]=k[x+4>>2],k[y+8>>2]=k[x+8>>2],k[y+12>>2]=k[x+12>>2],k[y+16>>2]=k[x+16>>2],k[y+20>>2]=k[x+20>>2],k[y+24>>2]=k[x+24>>2],k[y+28>>2]=k[x+28>>2],(nC(q,s,a,y)|0)<<24>>24!=0):0){c=18;break}a=k[j>>2]|0;if((a|0)!=0?(f=(k[u>>2]|0)+((k[g>>2]|0)+-1<<4)|0,k[q>>2]=k[l>>2],k[q+4>>2]=k[l+4>>2],k[q+8>>2]=k[l+8>>2],k[q+12>>2]=k[l+12>>2],k[s>>2]=k[f>>2],k[s+4>>2]=k[f+4>>2],k[s+8>>2]=k[f+8>>2],k[s+12>>2]=k[f+12>>2],k[y>>2]=k[x>>2],k[y+4>>2]=k[x+4>>2],k[y+8>>2]=k[x+8>>2],k[y+12>>2]=k[x+12>>2],k[y+16>>2]=k[x+16>>2],k[y+20>>2]=k[x+20>>2],k[y+24>>2]=k[x+24>>2],k[y+28>>2]=k[x+28>>2],(nC(q,s,a,y)|0)<<24>>24!=0):0){c=18;break}n=n+1|0;if((n|0)>=(k[w>>2]|0)){c=20;break}}if((c|0)==9)Wa(144339,143547,1629,144347);else if((c|0)==18){B=1;break}else if((c|0)==20){a=k[v>>2]|0;c=21;break}}else c=21;while(0);do if((c|0)==21){a=k[a+96>>2]|0;if(((a|0)!=0?(e=+p[b>>3],H=+p[b+16>>3],F=+p[b+24>>3],G=+p[a+24>>3]*.5,C=+p[a+32>>3]*.5,B=a+56|0,i[t>>0]=i[B>>0],i[t+1>>0]=i[B+1>>0],i[t+2>>0]=i[B+2>>0],i[t+3>>0]=i[B+3>>0],i[t+4>>0]=i[B+4>>0],i[t+5>>0]=i[B+5>>0],i[t+6>>0]=i[B+6>>0],i[t+7>>0]=i[B+7>>0],d=+p[t>>3],B=a+64|0,i[t>>0]=i[B>>0],i[t+1>>0]=i[B+1>>0],i[t+2>>0]=i[B+2>>0],i[t+3>>0]=i[B+3>>0],i[t+4>>0]=i[B+4>>0],i[t+5>>0]=i[B+5>>0],i[t+6>>0]=i[B+6>>0],i[t+7>>0]=i[B+7>>0],D=+p[t>>3],!(!(H>=d-G)|!(G+d>=e)|!(F>=D-C))):0)?C+D>=+p[b+8>>3]:0){B=1;break}B=0}while(0);r=E;return B|0}function TB(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=r;r=r+16|0;d=e;a:do if((a|0)!=0?(c=i[a>>0]|0,c<<24>>24!=0):0){do switch(c<<24>>24|0){case 48:{b=2;break a}case 57:case 56:case 55:case 54:case 53:case 52:case 51:case 50:case 49:{b=10;break a}case 67:case 99:{c=a+1|0;if(!(mO(c,144362)|0)){b=4;break a}if(!(mO(c,144368)|0)){b=12;break a}break}case 70:case 102:{if(!(mO(a+1|0,144376)|0)){b=2;break a}break}case 76:case 108:{if(!(mO(a+1|0,144381)|0)){b=2;break a}break}case 78:case 110:{c=a+1|0;if(!(mO(c,144385)|0)){b=0;break a}if(!(mO(c,144389)|0)){b=2;break a}break}case 79:case 111:{if(!(mO(a+1|0,144391)|0)){b=8;break a}break}case 80:case 112:{if(!(mO(a+1|0,144396)|0)){b=6;break a}break}case 83:case 115:{if(!(mO(a+1|0,144404)|0)){b=10;break a}break}case 84:case 116:{if(!(mO(a+1|0,144410)|0)){b=10;break a}break}case 89:case 121:{if(!(mO(a+1|0,144414)|0)){b=10;break a}break}default:{}}while(0);k[d>>2]=a;Yr(0,144417,d)|0}while(0);r=e;return b|0}function UB(a,b){a=a|0;b=b|0;var c=0;c=ss(a,144458)|0;if(c)if(!(i[c>>0]|0))b=0;else b=TB(c,b)|0;a=(k[a+8>>2]|0)+136|0;j[a>>1]=m[a>>1]|b;return}function VB(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=+d;e=e|0;var f=0.0,g=0.0,h=0.0,i=0.0,j=0.0,k=0.0,l=0.0,m=0,n=0;m=e&1;n=e&2;if((c|0)!=2){f=+p[a>>3];i=+p[a+8>>3];if((c|0)<2){l=f;h=i;g=i}else{j=f;e=1;g=i;h=i;while(1){k=+p[a+(e<<4)>>3];l=+p[a+(e<<4)+8>>3];i=k<f?k:f;g=l<g?l:g;f=k>j?k:j;h=l>h?l:h;e=e+1|0;if((e|0)==(c|0)){l=f;f=i;break}else{j=f;f=i}}}}else{j=+p[a>>3];f=+p[a+16>>3]-j;k=+p[a+8>>3];g=+p[a+24>>3]-k;l=j+f;h=k+g;f=j-f;g=k-g}k=f+(l-f)*.5;j=g+(h-g)*.5;if(!m){h=h-j;i=d;f=+_(+i);i=+Z(+i);if(!n){g=-j-(j-g)*f;f=h*f-j}else{f=h*f;g=j+f;f=j-f}p[b+8>>3]=f;p[b+24>>3]=g;d=(l-k)*i;p[b>>3]=k-d;p[b+16>>3]=k+d}else{l=k-f;d=j-g;d=+X(+(l*l+d*d));p[b+8>>3]=(n|0)==0?-j:j;p[b>>3]=k;p[b+16>>3]=d*.25;p[b+24>>3]=d}return}function WB(a){a=a|0;var b=0,c=0;c=a+8|0;a=k[c>>2]|0;b=k[a+8>>2]|0;if(b){if((k[b+4>>2]|0)>0){a=b;b=0;do{vP(k[(k[a>>2]|0)+(b*48|0)>>2]|0);b=b+1|0;a=k[(k[c>>2]|0)+8>>2]|0}while((b|0)<(k[a+4>>2]|0))}else a=b;vP(k[a>>2]|0);vP(k[(k[c>>2]|0)+8>>2]|0);a=k[c>>2]|0}k[a+8>>2]=0;return}function XB(a){a=a|0;var b=0;b=a+8|0;vP(k[(k[b>>2]|0)+144>>2]|0);WB(a);sy(k[(k[b>>2]|0)+96>>2]|0);sy(k[(k[b>>2]|0)+108>>2]|0);sy(k[(k[b>>2]|0)+100>>2]|0);sy(k[(k[b>>2]|0)+104>>2]|0);ru(a,173717)|0;return}function YB(a){a=a|0;var b=0,c=0,d=0;d=a+8|0;b=k[d>>2]|0;c=k[b+132>>2]|0;if(c){vP(c);b=k[d>>2]|0}c=k[b+8>>2]|0;if(c){Nb[k[(k[c+4>>2]|0)+4>>2]&127](a);b=k[d>>2]|0}sy(k[b+104>>2]|0);sy(k[(k[d>>2]|0)+108>>2]|0);ru(a,173424)|0;return}function ZB(a,b){a=a|0;b=b|0;var c=0.0;a=k[a+8>>2]|0;if(!(b<<24>>24)){c=+p[a+32>>3]*72.0*.5;p[a+88>>3]=c;p[a+80>>3]=+p[a+40>>3]*72.0}else{c=+p[a+40>>3]*72.0*.5;p[a+88>>3]=c;p[a+80>>3]=+p[a+32>>3]*72.0}p[a+96>>3]=c;return}function _B(a,b){a=a|0;b=b|0;a=Tb[k[a>>2]&63](a,b,512)|0;if(!a)a=0;else a=k[a+12>>2]|0;return a|0}function $B(a){a=a|0;var b=0,c=0,d=0,e=0;e=0;d=CO(tO(a)|0,145961)|0;c=0;a=0;while(1){if(!c)c=Cy((e<<2)+8|0)|0;else c=Ey(c,(e<<2)+8|0)|0;b=e+1|0;k[c+(e<<2)>>2]=d;e=uO(d)|0;a=a>>>0>e>>>0?a:e;d=CO(0,145961)|0;if(!d)break;else e=b}k[c+(b<<2)>>2]=0;k[14514]=a;return c|0}function aC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;g=r;r=r+32|0;f=g+16|0;e=g;d=k[15040]|0;b=xP(d,b+2+(uO(c)|0)|0)|0;k[15040]=b;d=k[a>>2]|0;a:do if(!d)b=0;else{k[e>>2]=d;k[e+4>>2]=145959;k[e+8>>2]=c;TN(b,145952,e)|0;if(GO(k[15040]|0,4)|0)do{a=a+4|0;b=k[a>>2]|0;if(!b){b=0;break a}e=k[15040]|0;k[f>>2]=b;k[f+4>>2]=145959;k[f+8>>2]=c;TN(e,145952,f)|0}while((GO(k[15040]|0,4)|0)!=0);b=k[15040]|0}while(0);r=g;return b|0}function bC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0.0;f=+jB(a,k[13668]|0,14.0,1.0);p[b>>3]=f;c=k[13669]|0;e=(a|0)!=0;if(e&(c|0)!=0){c=ts(a,c)|0;if(!c)d=4;else d=3}else{c=143881;d=3}if((d|0)==3)if(!(i[c>>0]|0))d=4;if((d|0)==4)c=143881;k[b+8>>2]=c;c=k[13670]|0;if(e&(c|0)!=0){c=ts(a,c)|0;if(!c)d=8;else d=7}else{c=173315;d=7}if((d|0)==7)if(!(i[c>>0]|0))d=8;if((d|0)==8)c=173315;k[b+12>>2]=c;return}function cC(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0.0;d=b+8|0;if(!(k[d>>2]|0))bC(a,b);h=+jB(a,k[13688]|0,+p[b>>3],1.0);p[c>>3]=h;e=k[13689]|0;f=k[d>>2]|0;g=(a|0)!=0;if(g&(e|0)!=0)d=ts(a,e)|0;else d=f;if(!((d|0)!=0?(i[d>>0]|0)!=0:0))d=f;k[c+8>>2]=d;d=k[13690]|0;e=k[b+12>>2]|0;if(g&(d|0)!=0)d=ts(a,d)|0;else d=e;if(!((d|0)!=0?(i[d>>0]|0)!=0:0))d=e;k[c+12>>2]=d;return}function dC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;j=r;r=r+128|0;h=j+80|0;e=j+40|0;f=j;if((d|0)!=0?(g=oO(d,58)|0,(g|0)!=0):0){i[g>>0]=0;hc[b&31](e,c,d,g+1|0);b=h;c=b+36|0;do{k[b>>2]=k[e>>2];b=b+4|0;e=e+4|0}while((b|0)<(c|0));i[g>>0]=58}else{hc[b&31](f,c,d,0);b=h;e=f;c=b+36|0;do{k[b>>2]=k[e>>2];b=b+4|0;e=e+4|0}while((b|0)<(c|0))}b=a;e=h;c=b+36|0;do{k[b>>2]=k[e>>2];b=b+4|0;e=e+4|0}while((b|0)<(c|0));k[a+36>>2]=d;r=j;return}function eC(a,b){a=a|0;b=b|0;var c=0;if(((b|0)!=0?(c=ts(a,b)|0,(c|0)!=0):0)?(i[c>>0]|0)!=0:0)c=(yB(c,0)|0)<<24>>24==0&1;else c=0;return c|0}function fC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;g=r;r=r+16|0;f=g;e=a+8|0;a=k[e>>2]|0;if((k[a+180>>2]|0)>=1){d=1;while(1){c=k[(k[a+184>>2]|0)+(d<<2)>>2]|0;a=ht(c)|0;if(!(Tb[k[b>>2]&63](b,a,512)|0)){h=By(16)|0;k[h+8>>2]=a;k[h+12>>2]=c;Tb[k[b>>2]&63](b,h,1)|0}else{k[f>>2]=a;Yr(0,145900,f)|0}fC(c,b);a=k[e>>2]|0;if((d|0)>=(k[a+180>>2]|0))break;else d=d+1|0}}r=g;return}function gC(a,b,c){a=a|0;b=b|0;c=c|0;b=Ls($t(b)|0,b,c,0,1)|0;qu(b,173717,176,1)|0;xs(a,b)|0;return b|0}function hC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;j=r;r=r+112|0;e=j;h=j+4|0;cs(c,145881)|0;g=k[15039]|0;k[15039]=g+1;k[e>>2]=g;TN(h,173421,e)|0;cs(c,h)|0;h=c+4|0;e=k[h>>2]|0;g=c+8|0;if(e>>>0>=(k[g>>2]|0)>>>0){as(c,1)|0;e=k[h>>2]|0}k[h>>2]=e+1;i[e>>0]=58;cs(c,ht(b)|0)|0;f=au(b)|0;e=k[h>>2]|0;if(e>>>0>=(k[g>>2]|0)>>>0){as(c,1)|0;e=k[h>>2]|0}i[e>>0]=0;c=k[c>>2]|0;k[h>>2]=c;c=Qt(f,c,1)|0;qu(c,173424,304,1)|0;i[(k[c+8>>2]|0)+118>>0]=1;Pt(b,c,1)|0;Pt(d,a,1)|0;a=$t(c)|0;a=HB(a,c,145884,176676,k[13636]|0)|0;k[13636]=a;a=$t(c)|0;a=HB(a,c,177219,170360,k[13639]|0)|0;k[13639]=a;a=$t(c)|0;a=HB(a,c,145890,145896,k[13621]|0)|0;k[13621]=a;r=j;return c|0}function iC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0;e=r;r=r+32|0;f=e;m=f+8|0;k[m>>2]=b;l=f+12|0;k[l>>2]=c;n=k[d>>2]&3;h=d+32|0;i=f+16|0;k[i>>2]=k[((n|0)==3?d:h)+28>>2];j=d+-32|0;g=f+20|0;k[g>>2]=k[((n|0)==2?d:j)+28>>2];Tb[k[a>>2]&63](a,f,1)|0;k[m>>2]=c;k[l>>2]=b;b=k[d>>2]&3;k[i>>2]=k[((b|0)==2?d:j)+28>>2];k[g>>2]=k[((b|0)==3?d:h)+28>>2];Tb[k[a>>2]&63](a,f,1)|0;r=e;return}function jC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=$t(a)|0;if(i[(k[a+8>>2]|0)+118>>0]|0){Pt(b,a,1)|0;a=oO(ht(a)|0,58)|0;if(!a)Wa(147051,143547,1225,145876);b=a+1|0;a=Qt(d,b,0)|0;if(!a){a=Qt(d,b,1)|0;qu(a,173424,304,1)|0;b=ls(d,1,0)|0;if(b)do{e=ts(a,b)|0;c=k[b+12>>2]|0;if((e|0)!=(c|0))vs(a,b,c)|0;b=ls(d,1,b)|0}while((b|0)!=0)}}return a|0}function kC(a,b){a=a|0;b=b|0;return qO(k[a>>2]|0,k[b>>2]|0)|0}function lC(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0;j=r;r=r+16|0;h=j;i[h>>0]=a;i[h+1>>0]=0;h=OB(h)|0;a=uO(h)|0;if((a|0)>1){e=b+4|0;f=b+8|0;g=a+-1|0;d=h;while(1){a=a+-1|0;c=k[e>>2]|0;if(c>>>0>=(k[f>>2]|0)>>>0){as(b,1)|0;c=k[e>>2]|0}l=i[d>>0]|0;k[e>>2]=c+1;i[c>>0]=l;if((a|0)<=1)break;else d=d+1|0}a=h+g|0}else a=h;l=i[a>>0]|0;vP(h);r=j;return l|0}function mC(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0;j=r;r=r+32|0;h=j;g=j+8|0;b=k[a>>2]|0;a:do if((i[b>>0]|0)==35){c=i[b+1>>0]|0;b:do if((c&-33)<<24>>24!=88){d=c&255;if((c+-48&255)<10){e=1;c=0;do{c=(c*10|0)+-48+d|0;e=e+1|0;if((e|0)>=8)break b;h=i[b+e>>0]|0;d=h&255}while((h+-48&255)<10)}else{e=1;c=0}}else{f=2;c=0;while(1){e=i[b+f>>0]|0;d=e&255;do if((e+-65&255)<6)d=d+-55|0;else{if((e+-97&255)<6){d=d+-87|0;break}if((e+-48&255)>=10){e=f;break b}d=d+-48|0}while(0);c=d+(c<<4)|0;e=f+1|0;if((e|0)<8)f=e;else break}}while(0);if((d|0)==59)b=b+(e+1)|0;else c=0}else{k[h>>2]=g;d=i[b>>0]|0;c:do switch(d<<24>>24){case 0:{c=0;break a}case 59:{f=1;c=g;break}default:{c=g+1|0;i[g>>0]=d;d=i[b+1>>0]|0;switch(d<<24>>24){case 0:{c=0;break a}case 59:{f=2;break c}default:{}}e=g+2|0;i[c>>0]=d;d=i[b+2>>0]|0;switch(d<<24>>24){case 0:{c=0;break a}case 59:{f=3;c=e;break c}default:{}}c=g+3|0;i[e>>0]=d;d=i[b+3>>0]|0;switch(d<<24>>24){case 0:{c=0;break a}case 59:{f=4;break c}default:{}}e=g+4|0;i[c>>0]=d;d=i[b+4>>0]|0;switch(d<<24>>24){case 0:{c=0;break a}case 59:{f=5;c=e;break c}default:{}}c=g+5|0;i[e>>0]=d;d=i[b+5>>0]|0;switch(d<<24>>24){case 0:{c=0;break a}case 59:{f=6;break c}default:{}}e=g+6|0;i[c>>0]=d;c=i[b+6>>0]|0;switch(c<<24>>24){case 0:{c=0;break a}case 59:{f=7;c=e;break c}default:{}}d=g+7|0;i[e>>0]=c;c=i[b+7>>0]|0;switch(c<<24>>24){case 0:{c=0;break a}case 59:{f=8;c=d;break c}default:{}}i[d>>0]=c;c=0;break a}}while(0);i[c>>0]=0;c=cO(h,58136,252,8,96)|0;if(!c)c=0;else{c=k[c+4>>2]|0;b=b+f|0}}while(0);k[a>>2]=b;r=j;return c|0}function nC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0.0;j=r;r=r+160|0;i=j+144|0;h=j+128|0;l=j+96|0;e=j+64|0;f=j+32|0;g=j;m=+p[d+16>>3];k[h>>2]=k[a>>2];k[h+4>>2]=k[a+4>>2];k[h+8>>2]=k[a+8>>2];k[h+12>>2]=k[a+12>>2];k[i>>2]=k[b>>2];k[i+4>>2]=k[b+4>>2];k[i+8>>2]=k[b+8>>2];k[i+12>>2]=k[b+12>>2];bx(l,h,i,1.0,c);if(((m>=+p[l>>3]?(k[h>>2]=k[a>>2],k[h+4>>2]=k[a+4>>2],k[h+8>>2]=k[a+8>>2],k[h+12>>2]=k[a+12>>2],k[i>>2]=k[b>>2],k[i+4>>2]=k[b+4>>2],k[i+8>>2]=k[b+8>>2],k[i+12>>2]=k[b+12>>2],bx(e,h,i,1.0,c),+p[e+16>>3]>=+p[d>>3]):0)?(m=+p[d+24>>3],k[h>>2]=k[a>>2],k[h+4>>2]=k[a+4>>2],k[h+8>>2]=k[a+8>>2],k[h+12>>2]=k[a+12>>2],k[i>>2]=k[b>>2],k[i+4>>2]=k[b+4>>2],k[i+8>>2]=k[b+8>>2],k[i+12>>2]=k[b+12>>2],bx(f,h,i,1.0,c),m>=+p[f+8>>3]):0)?(k[h>>2]=k[a>>2],k[h+4>>2]=k[a+4>>2],k[h+8>>2]=k[a+8>>2],k[h+12>>2]=k[a+12>>2],k[i>>2]=k[b>>2],k[i+4>>2]=k[b+4>>2],k[i+8>>2]=k[b+8>>2],k[i+12>>2]=k[b+12>>2],bx(g,h,i,1.0,c),+p[g+24>>3]>=+p[d+8>>3]):0)e=1;else e=0;r=j;return e|0}function oC(a,b,c){a=a|0;b=b|0;c=c|0;c=By(24)|0;k[c+8>>2]=k[b+8>>2];k[c+12>>2]=k[b+12>>2];k[c+16>>2]=k[b+16>>2];k[c+20>>2]=k[b+20>>2];return c|0}function pC(a,b,c){a=a|0;b=b|0;c=c|0;vP(b);return}function qC(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=k[b>>2]|0;d=k[c>>2]|0;if(a>>>0>=d>>>0)if(a>>>0<=d>>>0){d=k[b+4>>2]|0;a=k[c+4>>2]|0;if(d>>>0<a>>>0)a=-1;else a=d>>>0>a>>>0&1}else a=1;else a=-1;return a|0}function rC(a,b,c){a=a|0;b=b|0;c=c|0;vP(b);return}
function vp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0;if((k[a+32>>2]|0)!=1)Wa(131096,131120,1221,131425);f=k[a+16>>2]|0;switch(f|0){case 4:case 1:break;default:Wa(131454,131120,1222,131425)}m=k[a+20>>2]|0;l=k[a+24>>2]|0;n=k[a>>2]|0;i=k[a+4>>2]|0;h=k[c>>2]|0;a:do switch(f|0){case 1:{j=k[a+28>>2]|0;f=(d|0)!=0;a=(h|0)!=0;if(!b){if(!f){if(!a)h=Cy(n<<3)|0;if((n|0)<=0){g=h;break a}g=k[m>>2]|0;d=0;while(1){a=h+(d<<3)|0;p[a>>3]=0.0;d=d+1|0;f=g;g=k[m+(d<<2)>>2]|0;if((f|0)<(g|0)){e=0.0;do{e=+p[j+(f<<3)>>3]+e;p[a>>3]=e;f=f+1|0}while((f|0)<(g|0))}if((d|0)==(n|0)){g=h;break a}}}if(!a)h=Cy(i<<3)|0;if((i|0)>0)IP(h|0,0,i<<3|0)|0;if((n|0)<=0){g=h;break a}a=k[m>>2]|0;g=0;while(1){g=g+1|0;f=a;a=k[m+(g<<2)>>2]|0;if((f|0)<(a|0))do{b=h+(k[l+(f<<2)>>2]<<3)|0;p[b>>3]=+p[j+(f<<3)>>3]+ +p[b>>3];f=f+1|0}while((f|0)<(a|0));if((g|0)==(n|0)){g=h;break a}}}if(!f){if(!a)h=Cy(n<<3)|0;if((n|0)<=0){g=h;break a}g=k[m>>2]|0;d=0;while(1){a=h+(d<<3)|0;p[a>>3]=0.0;d=d+1|0;f=g;g=k[m+(d<<2)>>2]|0;if((f|0)<(g|0)){e=0.0;do{e=e+ +p[j+(f<<3)>>3]*+p[b+(k[l+(f<<2)>>2]<<3)>>3];p[a>>3]=e;f=f+1|0}while((f|0)<(g|0))}if((d|0)==(n|0)){g=h;break a}}}if(!a)h=Cy(i<<3)|0;if((i|0)>0)IP(h|0,0,i<<3|0)|0;if((n|0)>0){d=k[m>>2]|0;i=0;do{f=i;i=i+1|0;a=d;d=k[m+(i<<2)>>2]|0;if((a|0)<(d|0)){g=b+(f<<3)|0;f=a;do{a=h+(k[l+(f<<2)>>2]<<3)|0;p[a>>3]=+p[j+(f<<3)>>3]*+p[g>>3]+ +p[a>>3];f=f+1|0}while((f|0)<(d|0))}}while((i|0)!=(n|0));g=h}else g=h;break}case 4:{j=k[a+28>>2]|0;f=(d|0)!=0;a=(h|0)!=0;if(!b){if(!f){if(!a)h=Cy(n<<3)|0;if((n|0)<=0){g=h;break a}g=k[m>>2]|0;d=0;while(1){a=h+(d<<3)|0;p[a>>3]=0.0;d=d+1|0;f=g;g=k[m+(d<<2)>>2]|0;if((f|0)<(g|0)){e=0.0;do{e=e+ +(k[j+(f<<2)>>2]|0);f=f+1|0}while((f|0)<(g|0));p[a>>3]=e}if((d|0)==(n|0)){g=h;break a}}}if(!a)h=Cy(i<<3)|0;if((i|0)>0)IP(h|0,0,i<<3|0)|0;if((n|0)<=0){g=h;break a}a=k[m>>2]|0;g=0;do{g=g+1|0;f=a;a=k[m+(g<<2)>>2]|0;if((f|0)<(a|0))do{b=h+(k[l+(f<<2)>>2]<<3)|0;p[b>>3]=+(k[j+(f<<2)>>2]|0)+ +p[b>>3];f=f+1|0}while((f|0)<(a|0))}while((g|0)!=(n|0));g=h}else{if(!f){if(!a)h=Cy(n<<3)|0;if((n|0)<=0){g=h;break a}g=k[m>>2]|0;d=0;while(1){a=h+(d<<3)|0;p[a>>3]=0.0;d=d+1|0;f=g;g=k[m+(d<<2)>>2]|0;if((f|0)<(g|0)){e=0.0;do{e=e+ +(k[j+(f<<2)>>2]|0)*+p[b+(k[l+(f<<2)>>2]<<3)>>3];p[a>>3]=e;f=f+1|0}while((f|0)<(g|0))}if((d|0)==(n|0)){g=h;break a}}}if(!a)h=Cy(i<<3)|0;if((i|0)>0)IP(h|0,0,i<<3|0)|0;if((n|0)<=0){g=h;break a}d=k[m>>2]|0;i=0;do{f=i;i=i+1|0;a=d;d=k[m+(i<<2)>>2]|0;if((a|0)<(d|0)){g=b+(f<<3)|0;f=a;do{a=h+(k[l+(f<<2)>>2]<<3)|0;p[a>>3]=+(k[j+(f<<2)>>2]|0)*+p[g>>3]+ +p[a>>3];f=f+1|0}while((f|0)<(d|0))}}while((i|0)!=(n|0));g=h}break}default:Wa(174497,131120,1314,131425)}while(0);k[c>>2]=g;return}function wp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;x=k[a+20>>2]|0;z=k[a+24>>2]|0;A=k[b+20>>2]|0;B=k[b+24>>2]|0;y=k[a+32>>2]|0;if(!((y|0)==1?(y|0)==(k[b+32>>2]|0):0))Wa(131208,131120,1407,131516);y=k[a>>2]|0;if(((k[a+4>>2]|0)==(k[b>>2]|0)?(n=k[a+16>>2]|0,(n|0)==(k[b+16>>2]|0)):0)?(m=b+4|0,D=Cy(k[m>>2]<<2)|0,(D|0)!=0):0){c=k[m>>2]|0;if((c|0)>0){d=0;do{k[D+(d<<2)>>2]=-1;d=d+1|0;c=k[m>>2]|0}while((d|0)<(c|0))}u=(y|0)>0;if(u){f=k[x>>2]|0;l=0;d=0;while(1){e=l;l=l+1|0;j=x+(l<<2)|0;c=k[j>>2]|0;if((f|0)<(c|0)){i=-2-e|0;do{h=k[z+(f<<2)>>2]|0;e=k[A+(h<<2)>>2]|0;h=A+(h+1<<2)|0;c=k[h>>2]|0;if((e|0)<(c|0))do{g=D+(k[B+(e<<2)>>2]<<2)|0;if((k[g>>2]|0)!=(i|0)){k[g>>2]=i;c=k[h>>2]|0;d=d+1|0}e=e+1|0}while((e|0)<(c|0));f=f+1|0;c=k[j>>2]|0}while((f|0)<(c|0))}if((l|0)==(y|0))break;else f=c}c=k[m>>2]|0}else d=0;c=lp(y,c,d,n,1)|0;a:do if(!c)c=0;else{v=k[c+20>>2]|0;w=k[c+24>>2]|0;b:do switch(n|0){case 1:{s=k[a+28>>2]|0;q=k[b+28>>2]|0;r=k[c+28>>2]|0;k[v>>2]=0;if(u){o=0;d=0;c:while(1){g=k[x+(o<<2)>>2]|0;e=o;o=o+1|0;b=x+(o<<2)|0;f=k[b>>2]|0;if((g|0)<(f|0)){a=v+(e<<2)|0;do{n=k[z+(g<<2)>>2]|0;h=k[A+(n<<2)>>2]|0;n=A+(n+1<<2)|0;e=k[n>>2]|0;if((h|0)<(e|0)){m=s+(g<<3)|0;do{f=B+(h<<2)|0;i=k[f>>2]|0;j=D+(i<<2)|0;l=k[j>>2]|0;if((l|0)<(k[a>>2]|0)){k[j>>2]=d;k[w+(d<<2)>>2]=k[f>>2];p[r+(d<<3)>>3]=+p[m>>3]*+p[q+(h<<3)>>3];e=k[n>>2]|0;d=d+1|0}else{if((k[w+(l<<2)>>2]|0)!=(i|0))break c;u=r+(l<<3)|0;p[u>>3]=+p[u>>3]+ +p[m>>3]*+p[q+(h<<3)>>3]}h=h+1|0}while((h|0)<(e|0));f=k[b>>2]|0}g=g+1|0}while((g|0)<(f|0))}k[v+(o<<2)>>2]=d;if((o|0)>=(y|0)){C=d;break b}}Wa(131538,131120,1467,131516)}else C=0;break}case 2:{t=k[a+28>>2]|0;r=k[b+28>>2]|0;s=k[c+28>>2]|0;k[v>>2]=0;if(u){q=0;d=0;d:while(1){g=k[x+(q<<2)>>2]|0;e=q;q=q+1|0;o=x+(q<<2)|0;f=k[o>>2]|0;if((g|0)<(f|0)){b=v+(e<<2)|0;do{a=k[z+(g<<2)>>2]|0;h=k[A+(a<<2)>>2]|0;a=A+(a+1<<2)|0;e=k[a>>2]|0;if((h|0)<(e|0)){n=g<<1;m=t+(n<<3)|0;n=t+((n|1)<<3)|0;do{f=B+(h<<2)|0;i=k[f>>2]|0;j=D+(i<<2)|0;l=k[j>>2]|0;if((l|0)<(k[b>>2]|0)){k[j>>2]=d;k[w+(d<<2)>>2]=k[f>>2];l=h<<1;u=r+(l<<3)|0;l=r+((l|1)<<3)|0;e=d<<1;p[s+(e<<3)>>3]=+p[m>>3]*+p[u>>3]-+p[n>>3]*+p[l>>3];p[s+((e|1)<<3)>>3]=+p[m>>3]*+p[l>>3]+ +p[n>>3]*+p[u>>3];e=k[a>>2]|0;d=d+1|0}else{if((k[w+(l<<2)>>2]|0)!=(i|0))break d;i=h<<1;j=r+(i<<3)|0;i=r+((i|1)<<3)|0;u=l<<1;l=s+(u<<3)|0;p[l>>3]=+p[l>>3]+(+p[m>>3]*+p[j>>3]-+p[n>>3]*+p[i>>3]);u=s+((u|1)<<3)|0;p[u>>3]=+p[m>>3]*+p[i>>3]+ +p[n>>3]*+p[j>>3]+ +p[u>>3]}h=h+1|0}while((h|0)<(e|0));f=k[o>>2]|0}g=g+1|0}while((g|0)<(f|0))}k[v+(q<<2)>>2]=d;if((q|0)>=(y|0)){C=d;break b}}Wa(131538,131120,1496,131516)}else C=0;break}case 4:{r=k[a+28>>2]|0;o=k[b+28>>2]|0;q=k[c+28>>2]|0;k[v>>2]=0;if(u){b=0;d=0;e:while(1){g=k[x+(b<<2)>>2]|0;e=b;b=b+1|0;a=x+(b<<2)|0;f=k[a>>2]|0;if((g|0)<(f|0)){n=v+(e<<2)|0;do{m=k[z+(g<<2)>>2]|0;e=k[A+(m<<2)>>2]|0;m=A+(m+1<<2)|0;if((e|0)<(k[m>>2]|0)){l=r+(g<<2)|0;do{f=B+(e<<2)|0;h=k[f>>2]|0;i=D+(h<<2)|0;j=k[i>>2]|0;if((j|0)<(k[n>>2]|0)){k[i>>2]=d;k[w+(d<<2)>>2]=k[f>>2];u=ha(k[o+(e<<2)>>2]|0,k[l>>2]|0)|0;k[q+(d<<2)>>2]=u;d=d+1|0}else{if((k[w+(j<<2)>>2]|0)!=(h|0))break e;t=ha(k[o+(e<<2)>>2]|0,k[l>>2]|0)|0;u=q+(j<<2)|0;k[u>>2]=(k[u>>2]|0)+t}e=e+1|0}while((e|0)<(k[m>>2]|0));f=k[a>>2]|0}g=g+1|0}while((g|0)<(f|0))}k[v+(b<<2)>>2]=d;if((b|0)>=(y|0)){C=d;break b}}Wa(131538,131120,1522,131516)}else C=0;break}case 8:{k[v>>2]=0;if(u){b=0;d=0;f:while(1){f=k[x+(b<<2)>>2]|0;e=b;b=b+1|0;a=x+(b<<2)|0;if((f|0)<(k[a>>2]|0)){n=v+(e<<2)|0;do{m=k[z+(f<<2)>>2]|0;g=k[A+(m<<2)>>2]|0;m=A+(m+1<<2)|0;e=k[m>>2]|0;if((g|0)<(e|0))do{h=B+(g<<2)|0;i=k[h>>2]|0;j=D+(i<<2)|0;l=k[j>>2]|0;if((l|0)>=(k[n>>2]|0)){if((k[w+(l<<2)>>2]|0)!=(i|0))break f}else{k[j>>2]=d;k[w+(d<<2)>>2]=k[h>>2];e=k[m>>2]|0;d=d+1|0}g=g+1|0}while((g|0)<(e|0));f=f+1|0}while((f|0)<(k[a>>2]|0))}k[v+(b<<2)>>2]=d;if((b|0)>=(y|0)){C=d;break b}}Wa(131538,131120,1542,131516)}else C=0;break}default:{jp(c);c=0;break a}}while(0);k[c+8>>2]=C}while(0);vP(D)}else c=0;return c|0}function xp(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0.0,M=0.0,N=0.0,O=0.0;C=k[a+20>>2]|0;F=k[a+24>>2]|0;G=k[b+20>>2]|0;H=k[b+24>>2]|0;I=k[c+20>>2]|0;D=k[c+24>>2]|0;E=k[a+32>>2]|0;if(!((E|0)==1?(E|0)==(k[b+32>>2]|0):0))Wa(131208,131120,1573,131563);E=k[a>>2]|0;if(((((k[a+4>>2]|0)==(k[b>>2]|0)?(k[b+4>>2]|0)==(k[c>>2]|0):0)?(r=k[a+16>>2]|0,(r|0)==(k[b+16>>2]|0)):0)?(r|0)==(k[c+16>>2]|0):0)?(q=c+4|0,K=Cy(k[q>>2]<<2)|0,(K|0)!=0):0){d=k[q>>2]|0;if((d|0)>0){e=0;do{k[K+(e<<2)>>2]=-1;e=e+1|0;d=k[q>>2]|0}while((e|0)<(d|0))}z=(E|0)>0;if(z){g=k[C>>2]|0;o=0;e=0;while(1){f=o;o=o+1|0;n=C+(o<<2)|0;d=k[n>>2]|0;if((g|0)<(d|0)){m=-2-f|0;do{l=k[F+(g<<2)>>2]|0;d=k[G+(l<<2)>>2]|0;l=G+(l+1<<2)|0;if((d|0)<(k[l>>2]|0))do{j=k[H+(d<<2)>>2]|0;h=k[I+(j<<2)>>2]|0;j=I+(j+1<<2)|0;f=k[j>>2]|0;if((h|0)<(f|0))do{i=K+(k[D+(h<<2)>>2]<<2)|0;if((k[i>>2]|0)!=(m|0)){k[i>>2]=m;f=k[j>>2]|0;e=e+1|0}h=h+1|0}while((h|0)<(f|0));d=d+1|0}while((d|0)<(k[l>>2]|0));g=g+1|0;d=k[n>>2]|0}while((g|0)<(d|0))}if((o|0)==(E|0))break;else g=d}d=k[q>>2]|0}else e=0;d=lp(E,d,e,r,1)|0;a:do if(!d)d=0;else{A=k[d+20>>2]|0;B=k[d+24>>2]|0;b:do switch(r|0){case 1:{w=k[a+28>>2]|0;v=k[b+28>>2]|0;t=k[c+28>>2]|0;u=k[d+28>>2]|0;k[A>>2]=0;if(z){s=0;e=0;c:while(1){h=k[C+(s<<2)>>2]|0;f=s;s=s+1|0;c=C+(s<<2)|0;g=k[c>>2]|0;if((h|0)<(g|0)){b=A+(f<<2)|0;do{a=k[F+(h<<2)>>2]|0;i=k[G+(a<<2)>>2]|0;a=G+(a+1<<2)|0;f=k[a>>2]|0;if((i|0)<(f|0)){r=w+(h<<3)|0;do{q=k[H+(i<<2)>>2]|0;j=k[I+(q<<2)>>2]|0;q=I+(q+1<<2)|0;g=k[q>>2]|0;if((j|0)<(g|0)){o=v+(i<<3)|0;do{f=D+(j<<2)|0;l=k[f>>2]|0;m=K+(l<<2)|0;n=k[m>>2]|0;if((n|0)<(k[b>>2]|0)){k[m>>2]=e;k[B+(e<<2)>>2]=k[f>>2];p[u+(e<<3)>>3]=+p[r>>3]*+p[o>>3]*+p[t+(j<<3)>>3];g=k[q>>2]|0;e=e+1|0}else{if((k[B+(n<<2)>>2]|0)!=(l|0))break c;z=u+(n<<3)|0;p[z>>3]=+p[z>>3]+ +p[r>>3]*+p[o>>3]*+p[t+(j<<3)>>3]}j=j+1|0}while((j|0)<(g|0));f=k[a>>2]|0}i=i+1|0}while((i|0)<(f|0));g=k[c>>2]|0}h=h+1|0}while((h|0)<(g|0))}k[A+(s<<2)>>2]=e;if((s|0)>=(E|0)){J=e;break b}}Wa(131586,131120,1641,131563)}else J=0;break}case 2:{y=k[a+28>>2]|0;x=k[b+28>>2]|0;v=k[c+28>>2]|0;w=k[d+28>>2]|0;k[A>>2]=0;if(z){u=0;e=0;d:while(1){h=k[C+(u<<2)>>2]|0;f=u;u=u+1|0;t=C+(u<<2)|0;g=k[t>>2]|0;if((h|0)<(g|0)){s=A+(f<<2)|0;do{c=k[F+(h<<2)>>2]|0;i=k[G+(c<<2)>>2]|0;c=G+(c+1<<2)|0;f=k[c>>2]|0;if((i|0)<(f|0)){b=h<<1;a=y+(b<<3)|0;b=y+((b|1)<<3)|0;do{r=k[H+(i<<2)>>2]|0;j=k[I+(r<<2)>>2]|0;r=I+(r+1<<2)|0;g=k[r>>2]|0;if((j|0)<(g|0)){q=i<<1;o=x+(q<<3)|0;q=x+((q|1)<<3)|0;do{f=D+(j<<2)|0;l=k[f>>2]|0;m=K+(l<<2)|0;n=k[m>>2]|0;if((n|0)<(k[s>>2]|0)){k[m>>2]=e;k[B+(e<<2)>>2]=k[f>>2];M=+p[a>>3];N=+p[o>>3];L=+p[b>>3];O=+p[q>>3];z=j<<1;n=v+(z<<3)|0;z=v+((z|1)<<3)|0;g=e<<1;p[w+(g<<3)>>3]=+p[n>>3]*(M*N-L*O)-(N*L+M*O)*+p[z>>3];O=+p[a>>3];M=+p[q>>3];L=+p[b>>3];N=+p[o>>3];p[w+((g|1)<<3)>>3]=+p[n>>3]*(O*M+L*N)+(O*N-M*L)*+p[z>>3];g=k[r>>2]|0;e=e+1|0}else{if((k[B+(n<<2)>>2]|0)!=(l|0))break d;N=+p[a>>3];M=+p[o>>3];O=+p[b>>3];L=+p[q>>3];m=j<<1;l=v+(m<<3)|0;m=v+((m|1)<<3)|0;z=n<<1;n=w+(z<<3)|0;p[n>>3]=+p[n>>3]+(+p[l>>3]*(N*M-O*L)-(M*O+N*L)*+p[m>>3]);L=+p[a>>3];N=+p[q>>3];O=+p[b>>3];M=+p[o>>3];z=w+((z|1)<<3)|0;p[z>>3]=+p[l>>3]*(L*N+O*M)+(L*M-N*O)*+p[m>>3]+ +p[z>>3]}j=j+1|0}while((j|0)<(g|0));f=k[c>>2]|0}i=i+1|0}while((i|0)<(f|0));g=k[t>>2]|0}h=h+1|0}while((h|0)<(g|0))}k[A+(u<<2)>>2]=e;if((u|0)>=(E|0)){J=e;break b}}Wa(131586,131120,1673,131563)}else J=0;break}case 4:{v=k[a+28>>2]|0;u=k[b+28>>2]|0;s=k[c+28>>2]|0;t=k[d+28>>2]|0;k[A>>2]=0;if(z){c=0;e=0;e:while(1){h=k[C+(c<<2)>>2]|0;f=c;c=c+1|0;b=C+(c<<2)|0;g=k[b>>2]|0;if((h|0)<(g|0)){a=A+(f<<2)|0;do{r=k[F+(h<<2)>>2]|0;i=k[G+(r<<2)>>2]|0;r=G+(r+1<<2)|0;f=k[r>>2]|0;if((i|0)<(f|0)){q=v+(h<<2)|0;do{o=k[H+(i<<2)>>2]|0;g=k[I+(o<<2)>>2]|0;o=I+(o+1<<2)|0;if((g|0)<(k[o>>2]|0)){n=u+(i<<2)|0;do{f=D+(g<<2)|0;j=k[f>>2]|0;l=K+(j<<2)|0;m=k[l>>2]|0;if((m|0)<(k[a>>2]|0)){k[l>>2]=e;k[B+(e<<2)>>2]=k[f>>2];y=ha(k[n>>2]|0,k[q>>2]|0)|0;y=ha(y,k[s+(g<<2)>>2]|0)|0;z=t+(e<<2)|0;k[z>>2]=(k[z>>2]|0)+y;e=e+1|0}else{if((k[B+(m<<2)>>2]|0)!=(j|0))break e;y=ha(k[n>>2]|0,k[q>>2]|0)|0;y=ha(y,k[s+(g<<2)>>2]|0)|0;z=t+(m<<2)|0;k[z>>2]=(k[z>>2]|0)+y}g=g+1|0}while((g|0)<(k[o>>2]|0));f=k[r>>2]|0}i=i+1|0}while((i|0)<(f|0));g=k[b>>2]|0}h=h+1|0}while((h|0)<(g|0))}k[A+(c<<2)>>2]=e;if((c|0)>=(E|0)){J=e;break b}}Wa(131586,131120,1705,131563)}else J=0;break}case 8:{k[A>>2]=0;if(z){b=0;e=0;f:while(1){g=k[C+(b<<2)>>2]|0;f=b;b=b+1|0;a=C+(b<<2)|0;if((g|0)<(k[a>>2]|0)){r=A+(f<<2)|0;do{q=k[F+(g<<2)>>2]|0;f=k[G+(q<<2)>>2]|0;q=G+(q+1<<2)|0;if((f|0)<(k[q>>2]|0))do{o=k[H+(f<<2)>>2]|0;i=k[I+(o<<2)>>2]|0;o=I+(o+1<<2)|0;h=k[o>>2]|0;if((i|0)<(h|0))do{j=D+(i<<2)|0;l=k[j>>2]|0;m=K+(l<<2)|0;n=k[m>>2]|0;if((n|0)>=(k[r>>2]|0)){if((k[B+(n<<2)>>2]|0)!=(l|0))break f}else{k[m>>2]=e;k[B+(e<<2)>>2]=k[j>>2];h=k[o>>2]|0;e=e+1|0}i=i+1|0}while((i|0)<(h|0));f=f+1|0}while((f|0)<(k[q>>2]|0));g=g+1|0}while((g|0)<(k[a>>2]|0))}k[A+(b<<2)>>2]=e;if((b|0)>=(E|0)){J=e;break b}}Wa(131586,131120,1728,131563)}else J=0;break}default:{jp(d);d=0;break a}}while(0);k[d+8>>2]=J}while(0);vP(K)}else d=0;return d|0}function yp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0.0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;v=k[a+20>>2]|0;w=k[a+24>>2]|0;c=k[a+16>>2]|0;t=k[a+4>>2]|0;a:do if(b){m=t<<2;o=Cy(m)|0;if((t|0)>0)IP(o|0,-1,m|0)|0;b:do switch(c|0){case 1:{l=k[a+28>>2]|0;if((k[a>>2]|0)>0){f=k[v>>2]|0;e=f;n=0;c=0;c:while(1){d=n;n=n+1|0;m=v+(n<<2)|0;b=k[m>>2]|0;d:do if((f|0)<(b|0)){j=v+(d<<2)|0;i=e;d=f;while(1){e=w+(d<<2)|0;f=k[e>>2]|0;g=k[o+(f<<2)>>2]|0;if((g|0)<(i|0)){k[w+(c<<2)>>2]=f;p[l+(c<<3)>>3]=+p[l+(d<<3)>>3];k[o+(k[e>>2]<<2)>>2]=c;b=k[m>>2]|0;c=c+1|0}else{if((k[w+(g<<2)>>2]|0)!=(f|0))break c;u=l+(g<<3)|0;p[u>>3]=+p[l+(d<<3)>>3]+ +p[u>>3]}d=d+1|0;if((d|0)>=(b|0))break d;i=k[j>>2]|0}}while(0);k[m>>2]=c;if((n|0)>=(k[a>>2]|0)){x=o;y=c;break b}else{e=c;f=b}}Wa(131611,131120,1791,131636)}else{x=o;y=0}break}case 2:{u=k[a+28>>2]|0;switch(b|0){case 1:{if((k[a>>2]|0)<=0){x=o;y=0;break b}e=k[v>>2]|0;f=e;m=0;c=0;e:while(1){d=m;m=m+1|0;l=v+(m<<2)|0;b=k[l>>2]|0;f:do if((e|0)<(b|0)){j=v+(d<<2)|0;i=f;d=e;while(1){e=w+(d<<2)|0;f=k[e>>2]|0;g=k[o+(f<<2)>>2]|0;if((g|0)<(i|0)){k[w+(c<<2)>>2]=f;t=d<<1;b=c<<1;p[u+(b<<3)>>3]=+p[u+(t<<3)>>3];p[u+((b|1)<<3)>>3]=+p[u+((t|1)<<3)>>3];k[o+(k[e>>2]<<2)>>2]=c;b=k[l>>2]|0;c=c+1|0}else{if((k[w+(g<<2)>>2]|0)!=(f|0))break e;s=d<<1;t=g<<1;r=u+(t<<3)|0;p[r>>3]=+p[u+(s<<3)>>3]+ +p[r>>3];t=u+((t|1)<<3)|0;p[t>>3]=+p[u+((s|1)<<3)>>3]+ +p[t>>3]}d=d+1|0;if((d|0)>=(b|0))break f;i=k[j>>2]|0}}while(0);k[l>>2]=c;if((m|0)>=(k[a>>2]|0)){x=o;y=c;break b}else{f=c;e=b}}Wa(131611,131120,1814,131636);break}case 4:{if((k[a>>2]|0)<=0){x=o;y=0;break b}f=k[v>>2]|0;e=f;m=0;c=0;g:while(1){d=m;m=m+1|0;l=v+(m<<2)|0;b=k[l>>2]|0;h:do if((f|0)<(b|0)){j=v+(d<<2)|0;i=e;d=f;while(1){e=w+(d<<2)|0;f=k[e>>2]|0;g=k[o+(f<<2)>>2]|0;if((g|0)<(i|0)){k[w+(c<<2)>>2]=f;t=d<<1;b=c<<1;p[u+(b<<3)>>3]=+p[u+(t<<3)>>3];p[u+((b|1)<<3)>>3]=+p[u+((t|1)<<3)>>3];k[o+(k[e>>2]<<2)>>2]=c;b=k[l>>2]|0;c=c+1|0}else{if((k[w+(g<<2)>>2]|0)!=(f|0))break g;s=d<<1;t=g<<1;r=u+(t<<3)|0;p[r>>3]=+p[u+(s<<3)>>3]+ +p[r>>3];p[u+((t|1)<<3)>>3]=+p[u+((s|1)<<3)>>3]}d=d+1|0;if((d|0)>=(b|0))break h;i=k[j>>2]|0}}while(0);k[l>>2]=c;if((m|0)>=(k[a>>2]|0)){x=o;y=c;break b}else{e=c;f=b}}Wa(131611,131120,1834,131636);break}case 2:{b=~~+p[u+8>>3];i=k[a>>2]|0;if((i|0)>0){j=k[v>>2]|0;l=0;d=0;c=b;do{l=l+1|0;g=j;j=k[v+(l<<2)>>2]|0;if((g|0)<(j|0)){f=g+1|0;f=d+((j|0)>(f|0)?j:f)|0;e=g;while(1){s=~~+p[u+((d<<1|1)<<3)>>3];c=(c|0)>(s|0)?c:s;b=(b|0)<(s|0)?b:s;e=e+1|0;if((e|0)>=(j|0))break;else d=d+1|0}d=f-g|0}}while((l|0)<(i|0));s=b}else{c=b;s=b}vP(o);r=c-s+1|0;q=Cy(ha(r,m)|0)|0;r=ha(r,t)|0;if((r|0)>0)IP(q|0,-1,(ha(t,c+1-s|0)|0)<<2|0)|0;if((k[a>>2]|0)<=0){x=q;y=0;break b}f=k[v>>2]|0;e=f;o=0;c=0;i:while(1){d=o;o=o+1|0;n=v+(o<<2)|0;b=k[n>>2]|0;j:do if((f|0)<(b|0)){m=v+(d<<2)|0;d=f;while(1){f=k[w+(d<<2)>>2]|0;g=d<<1;h=+p[u+((g|1)<<3)>>3];i=(ha(~~h-s|0,t)|0)+f|0;j=q+(i<<2)|0;l=k[j>>2]|0;if((l|0)<(e|0)){k[w+(c<<2)>>2]=f;b=c<<1;p[u+(b<<3)>>3]=+p[u+(g<<3)>>3];p[u+((b|1)<<3)>>3]=h;k[j>>2]=c;b=k[n>>2]|0;c=c+1|0}else{if((i|0)>=(r|0)){c=58;break i}if((k[w+(l<<2)>>2]|0)!=(f|0)){c=60;break i}l=l<<1;j=u+(l<<3)|0;p[j>>3]=+p[u+(g<<3)>>3]+ +p[j>>3];p[u+((l|1)<<3)>>3]=h}d=d+1|0;if((d|0)>=(b|0))break j;e=k[m>>2]|0}}while(0);k[n>>2]=c;if((o|0)>=(k[a>>2]|0)){x=q;y=c;break b}else{e=c;f=b}}if((c|0)==58)Wa(131668,131120,1868,131636);else if((c|0)==60)Wa(131689,131120,1869,131636);break}case 3:{b=~~+p[u+8>>3];i=k[a>>2]|0;if((i|0)>0){j=k[v>>2]|0;l=0;d=0;c=b;do{l=l+1|0;g=j;j=k[v+(l<<2)>>2]|0;if((g|0)<(j|0)){f=g+1|0;f=d+((j|0)>(f|0)?j:f)|0;e=g;while(1){s=~~+p[u+(d<<1<<3)>>3];c=(c|0)>(s|0)?c:s;b=(b|0)>(s|0)?b:s;e=e+1|0;if((e|0)>=(j|0))break;else d=d+1|0}d=f-g|0}}while((l|0)<(i|0));q=b}else{c=b;q=b}vP(o);s=c-q+1|0;o=Cy(ha(s,m)|0)|0;if((ha(s,t)|0)>0)IP(o|0,-1,(ha(t,c+1-q|0)|0)<<2|0)|0;if((k[a>>2]|0)<=0){x=o;y=0;break b}f=k[v>>2]|0;e=f;n=0;c=0;k:while(1){d=n;n=n+1|0;m=v+(n<<2)|0;b=k[m>>2]|0;l:do if((f|0)<(b|0)){l=v+(d<<2)|0;d=f;while(1){f=k[w+(d<<2)>>2]|0;g=d<<1;h=+p[u+(g<<3)>>3];i=o+((ha(~~h-q|0,t)|0)+f<<2)|0;j=k[i>>2]|0;if((j|0)<(e|0)){k[w+(c<<2)>>2]=f;b=c<<1;p[u+(b<<3)>>3]=h;p[u+((b|1)<<3)>>3]=+p[u+((g|1)<<3)>>3];k[i>>2]=c;b=k[m>>2]|0;c=c+1|0}else{if((k[w+(j<<2)>>2]|0)!=(f|0))break k;s=j<<1;p[u+(s<<3)>>3]=h;s=u+((s|1)<<3)|0;p[s>>3]=+p[u+((g|1)<<3)>>3]+ +p[s>>3]}d=d+1|0;if((d|0)>=(b|0))break l;e=k[l>>2]|0}}while(0);k[m>>2]=c;if((n|0)>=(k[a>>2]|0)){x=o;y=c;break b}else{e=c;f=b}}Wa(131689,131120,1904,131636);break}default:{x=o;y=0;break b}}break}case 4:{j=k[a+28>>2]|0;if((k[a>>2]|0)>0){d=k[v>>2]|0;f=d;m=0;c=0;m:while(1){e=m;m=m+1|0;l=v+(m<<2)|0;b=k[l>>2]|0;n:do if((d|0)<(b|0)){i=v+(e<<2)|0;g=f;while(1){b=w+(d<<2)|0;e=k[b>>2]|0;f=k[o+(e<<2)>>2]|0;if((f|0)<(g|0)){k[w+(c<<2)>>2]=e;k[j+(c<<2)>>2]=k[j+(d<<2)>>2];k[o+(k[b>>2]<<2)>>2]=c;c=c+1|0}else{if((k[w+(f<<2)>>2]|0)!=(e|0))break m;u=j+(f<<2)|0;k[u>>2]=(k[u>>2]|0)+(k[j+(d<<2)>>2]|0)}d=d+1|0;b=k[l>>2]|0;if((d|0)>=(b|0))break n;g=k[i>>2]|0}}while(0);k[l>>2]=c;if((m|0)>=(k[a>>2]|0)){x=o;y=c;break b}else{f=c;d=b}}Wa(131611,131120,1928,131636)}else{x=o;y=0}break}case 8:{if((k[a>>2]|0)>0){f=k[v>>2]|0;e=f;m=0;c=0;o:while(1){d=m;m=m+1|0;l=v+(m<<2)|0;b=k[l>>2]|0;p:do if((f|0)<(b|0)){j=v+(d<<2)|0;i=e;d=f;while(1){e=w+(d<<2)|0;f=k[e>>2]|0;g=k[o+(f<<2)>>2]|0;if((g|0)>=(i|0)){if((k[w+(g<<2)>>2]|0)!=(f|0))break o}else{k[w+(c<<2)>>2]=f;k[o+(k[e>>2]<<2)>>2]=c;b=k[l>>2]|0;c=c+1|0}d=d+1|0;if((d|0)>=(b|0))break p;i=k[j>>2]|0}}while(0);k[l>>2]=c;if((m|0)>=(k[a>>2]|0)){x=o;y=c;break b}else{e=c;f=b}}Wa(131611,131120,1947,131636)}else{x=o;y=0}break}default:{a=0;break a}}while(0);k[a+8>>2]=y;vP(x)}while(0);return a|0}function zp(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0;if((k[a+32>>2]|0)!=2)Wa(131277,131120,1970,131711);if((b|0)>=1){p=a+8|0;o=k[p>>2]|0;n=a+12|0;f=o+b|0;if((f|0)<(k[n>>2]|0)){h=a+24|0;g=a+40|0;f=a+20|0}else{j=f+10|0;f=a+20|0;g=j<<2;h=Ey(k[f>>2]|0,g)|0;k[f>>2]=h;h=a+24|0;g=Ey(k[h>>2]|0,g)|0;k[h>>2]=g;g=a+40|0;i=k[g>>2]|0;do if((i|0)>0){l=a+28|0;m=k[l>>2]|0;i=ha(i,j)|0;if(!m){m=Cy(i)|0;k[l>>2]=m;break}else{m=Ey(m,i)|0;k[l>>2]=m;break}}while(0);k[n>>2]=j}m=o<<2;n=b<<2;GP((k[f>>2]|0)+m|0,c|0,n|0)|0;GP((k[h>>2]|0)+m|0,d|0,n|0)|0;f=k[g>>2]|0;if(f)GP((k[a+28>>2]|0)+(ha(f,o)|0)|0,e|0,ha(f,b)|0)|0;if((b|0)>0){h=a+4|0;g=k[a>>2]|0;i=0;do{f=k[c+(i<<2)>>2]|0;if((f|0)>=(g|0)){g=f+1|0;k[a>>2]=g}f=k[d+(i<<2)>>2]|0;if((f|0)>=(k[h>>2]|0))k[h>>2]=f+1;i=i+1|0}while((i|0)!=(b|0))}k[p>>2]=(k[p>>2]|0)+b}return a|0}function Ap(a){a=a|0;var b=0,c=0,d=0.0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0;a:do if(!a)a=0;else{j=k[a+20>>2]|0;g=k[a+24>>2]|0;switch(k[a+16>>2]|0){case 1:{e=k[a+28>>2]|0;f=k[a>>2]|0;if((f|0)>0){c=k[j>>2]|0;g=0;do{g=g+1|0;b=c;c=k[j+(g<<2)>>2]|0;d=+(c-b|0);if((c|0)>(b|0))do{i=e+(b<<3)|0;p[i>>3]=+p[i>>3]/d;b=b+1|0}while((b|0)<(c|0))}while((g|0)<(f|0))}break}case 2:{c=k[a+28>>2]|0;e=k[a>>2]|0;if((e|0)>0){f=k[j>>2]|0;h=0;do{i=h;h=h+1|0;b=f;f=k[j+(h<<2)>>2]|0;d=+(f-b|0);if((f|0)>(b|0))do{if((k[g+(b<<2)>>2]|0)!=(i|0)){l=b<<1;m=c+(l<<3)|0;p[m>>3]=+p[m>>3]/d;l=c+((l|1)<<3)|0;p[l>>3]=+p[l>>3]/d}b=b+1|0}while((b|0)<(f|0))}while((h|0)<(e|0))}break}case 4:{Wa(174497,131120,2191,131752);break}case 8:break;default:{a=0;break a}}}while(0);return a|0}function Bp(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;if((a|0)!=0?(b=a+8|0,c=k[b>>2]|0,d=k[a+4>>2]|0,(d|0)==(k[a>>2]|0)):0){e=k[a+24>>2]|0;f=k[a+20>>2]|0;a=lp(d,d,c,8,1)|0;GP(k[a+20>>2]|0,f|0,(d<<2)+4|0)|0;GP(k[a+24>>2]|0,e|0,c<<2|0)|0;k[a+8>>2]=k[b>>2];b=kp(a,1)|0;jp(a);b=qp(b)|0;d=b+8|0;c=Cy(k[d>>2]<<3)|0;k[b+28>>2]=c;d=k[d>>2]|0;if((d|0)>0){a=0;do{p[c+(a<<3)>>3]=1.0;a=a+1|0}while((a|0)<(d|0))}k[b+16>>2]=1;k[b+40>>2]=8}else b=0;return b|0}function Cp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0;p=k[a+20>>2]|0;q=k[a+24>>2]|0;w=k[a+4>>2]|0;n=k[a>>2]|0;t=w<<2;x=Cy(t)|0;u=Cy(t+4|0)|0;v=Cy(t)|0;t=Cy(t)|0;m=u+4|0;s=(w|0)>0;if(s){IP(x|0,0,w<<2|0)|0;k[m>>2]=w;IP(v|0,-1,w<<2|0)|0}else k[m>>2]=w;if((n|0)>0){e=k[p>>2]|0;o=0;a=1;do{g=p+(o<<2)|0;l=o;o=o+1|0;j=p+(o<<2)|0;f=k[j>>2]|0;if((e|0)<(f|0)){do{f=m+(k[x+(k[q+(e<<2)>>2]<<2)>>2]<<2)|0;k[f>>2]=(k[f>>2]|0)+-1;e=e+1|0;f=k[j>>2]|0}while((e|0)<(f|0));e=k[g>>2]|0}if((e|0)<(f|0)){do{h=q+(e<<2)|0;f=x+(k[h>>2]<<2)|0;i=k[f>>2]|0;g=v+(i<<2)|0;do if((k[g>>2]|0)<(l|0)){k[g>>2]=l;f=m+(i<<2)|0;if(!(k[f>>2]|0)){k[f>>2]=1;k[t+(i<<2)>>2]=i;break}else{k[t+(i<<2)>>2]=a;k[m+(a<<2)>>2]=1;k[x+(k[h>>2]<<2)>>2]=a;a=a+1|0;break}}else{i=t+(i<<2)|0;k[f>>2]=k[i>>2];i=m+(k[i>>2]<<2)|0;k[i>>2]=(k[i>>2]|0)+1}while(0);e=e+1|0;f=k[j>>2]|0}while((e|0)<(f|0));e=f}else e=f}while((o|0)!=(n|0));k[u>>2]=0;if((a|0)>0){f=u;h=a;r=19}else{f=u;g=0;e=a}}else{k[u>>2]=0;f=u;h=1;r=19}if((r|0)==19){a=0;e=0;do{e=e+1|0;r=f+(e<<2)|0;a=(k[r>>2]|0)+a|0;k[r>>2]=a}while((e|0)!=(h|0));g=1;e=h}k[c>>2]=t;if(s){a=0;do{s=f+(k[x+(a<<2)>>2]<<2)|0;c=k[s>>2]|0;k[s>>2]=c+1;k[t+(c<<2)>>2]=a;a=a+1|0}while((a|0)!=(w|0))}if(g){a=e;do{w=a;a=a+-1|0;k[f+(w<<2)>>2]=k[f+(a<<2)>>2]}while((w|0)>1)}k[f>>2]=0;k[d>>2]=u;k[b>>2]=e;vP(v);vP(x);return}function Dp(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=Cy(44)|0;k[f>>2]=a;k[f+4>>2]=b;k[f+8>>2]=0;k[f+12>>2]=0;k[f+16>>2]=c;k[f+40>>2]=d;if((e|0)==2)k[f+20>>2]=0;else{c=Cy((a<<2)+4|0)|0;k[f+20>>2]=c}k[f+24>>2]=0;k[f+28>>2]=0;k[f+32>>2]=e;k[f+36>>2]=0;return f|0}function Ep(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=k[a+32>>2]|0;e=a+28|0;k[e>>2]=0;c=b<<2;d=Cy(c)|0;if((f|0)!=2){k[a+24>>2]=d;c=k[a+40>>2]|0;if((b|0)!=0&(c|0)>0){f=Cy(ha(c,b)|0)|0;k[e>>2]=f}}else{k[a+20>>2]=d;f=Cy(c)|0;k[a+24>>2]=f;f=Cy(ha(k[a+40>>2]|0,b)|0)|0;k[e>>2]=f}k[a+12>>2]=b;return a|0}function Fp(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;var j=0,l=0,m=0,n=0,o=0,q=0;if(!((a|0)>-1&((b|0)>0&(c|0)>0)))Wa(131786,131120,842,131812);if(!((a|0)<0|((b|0)<1|(c|0)<1))){h=rp(b,c,a,g,h,1)|0;if(!h)Wa(131857,131120,846,131812);o=k[h+20>>2]|0;n=k[h+24>>2]|0;if((b|0)>=0)IP(o|0,0,(b<<2)+4|0)|0;switch(g|0){case 1:{m=k[h+28>>2]|0;l=(a|0)>0;a:do if(l){j=0;while(1){g=k[d+(j<<2)>>2]|0;if(!((g|0)>-1&(g|0)<(b|0)))break;q=k[e+(j<<2)>>2]|0;if(!((q|0)>-1&(q|0)<(c|0)))break;q=o+(g+1<<2)|0;k[q>>2]=(k[q>>2]|0)+1;j=j+1|0;if((j|0)>=(a|0))break a}Wa(174497,131120,861,131812)}while(0);g=k[o>>2]|0;j=0;do{j=j+1|0;q=o+(j<<2)|0;g=(k[q>>2]|0)+g|0;k[q>>2]=g}while((j|0)!=(b|0));if(l){g=0;do{l=o+(k[d+(g<<2)>>2]<<2)|0;q=k[l>>2]|0;p[m+(q<<3)>>3]=+p[f+(g<<3)>>3];c=k[e+(g<<2)>>2]|0;k[l>>2]=q+1;k[n+(q<<2)>>2]=c;g=g+1|0}while((g|0)!=(a|0))}do{q=b;b=b+-1|0;k[o+(q<<2)>>2]=k[o+(b<<2)>>2]}while((q|0)>1);k[o>>2]=0;break}case 2:{m=k[h+28>>2]|0;l=(a|0)>0;b:do if(l){j=0;while(1){g=k[d+(j<<2)>>2]|0;if(!((g|0)>-1&(g|0)<(b|0)))break;q=k[e+(j<<2)>>2]|0;if(!((q|0)>-1&(q|0)<(c|0)))break;q=o+(g+1<<2)|0;k[q>>2]=(k[q>>2]|0)+1;j=j+1|0;if((j|0)>=(a|0))break b}Wa(174497,131120,879,131812)}while(0);g=k[o>>2]|0;j=0;do{j=j+1|0;q=o+(j<<2)|0;g=(k[q>>2]|0)+g|0;k[q>>2]=g}while((j|0)!=(b|0));if(l){j=0;g=f;while(1){c=o+(k[d+(j<<2)>>2]<<2)|0;q=k[c>>2]|0;f=q<<1;p[m+(f<<3)>>3]=+p[g>>3];p[m+((f|1)<<3)>>3]=+p[g+8>>3];f=k[e+(j<<2)>>2]|0;k[c>>2]=q+1;k[n+(q<<2)>>2]=f;j=j+1|0;if((j|0)==(a|0))break;else g=g+16|0}}do{q=b;b=b+-1|0;k[o+(q<<2)>>2]=k[o+(b<<2)>>2]}while((q|0)>1);k[o>>2]=0;break}case 4:{m=k[h+28>>2]|0;l=(a|0)>0;c:do if(l){j=0;while(1){g=k[d+(j<<2)>>2]|0;if(!((g|0)>-1&(g|0)<(b|0)))break;q=k[e+(j<<2)>>2]|0;if(!((q|0)>-1&(q|0)<(c|0)))break;q=o+(g+1<<2)|0;k[q>>2]=(k[q>>2]|0)+1;j=j+1|0;if((j|0)>=(a|0))break c}Wa(174497,131120,898,131812)}while(0);g=k[o>>2]|0;j=0;do{j=j+1|0;q=o+(j<<2)|0;g=(k[q>>2]|0)+g|0;k[q>>2]=g}while((j|0)!=(b|0));if(l){g=0;do{l=d+(g<<2)|0;k[m+(k[o+(k[l>>2]<<2)>>2]<<2)>>2]=k[f+(g<<2)>>2];c=k[e+(g<<2)>>2]|0;l=o+(k[l>>2]<<2)|0;q=k[l>>2]|0;k[l>>2]=q+1;k[n+(q<<2)>>2]=c;g=g+1|0}while((g|0)!=(a|0))}do{q=b;b=b+-1|0;k[o+(q<<2)>>2]=k[o+(b<<2)>>2]}while((q|0)>1);k[o>>2]=0;break}case 8:{l=(a|0)>0;d:do if(l){j=0;while(1){g=k[d+(j<<2)>>2]|0;if(!((g|0)>-1&(g|0)<(b|0)))break;q=k[e+(j<<2)>>2]|0;if(!((q|0)>-1&(q|0)<(c|0)))break;q=o+(g+1<<2)|0;k[q>>2]=(k[q>>2]|0)+1;j=j+1|0;if((j|0)>=(a|0))break d}Wa(174497,131120,914,131812)}while(0);g=k[o>>2]|0;j=0;do{j=j+1|0;q=o+(j<<2)|0;g=(k[q>>2]|0)+g|0;k[q>>2]=g}while((j|0)!=(b|0));if(l){g=0;do{f=k[e+(g<<2)>>2]|0;c=o+(k[d+(g<<2)>>2]<<2)|0;q=k[c>>2]|0;k[c>>2]=q+1;k[n+(q<<2)>>2]=f;g=g+1|0}while((g|0)!=(a|0))}do{q=b;b=b+-1|0;k[o+(q<<2)>>2]=k[o+(b<<2)>>2]}while((q|0)>1);k[o>>2]=0;break}case 16:{l=(a|0)>0;e:do if(l){j=0;while(1){g=k[d+(j<<2)>>2]|0;if(!((g|0)>-1&(g|0)<(b|0)))break;q=k[e+(j<<2)>>2]|0;if(!((q|0)>-1&(q|0)<(c|0)))break;q=o+(g+1<<2)|0;k[q>>2]=(k[q>>2]|0)+1;j=j+1|0;if((j|0)>=(a|0))break e}Wa(174497,131120,929,131812)}while(0);g=k[o>>2]|0;j=0;do{j=j+1|0;q=o+(j<<2)|0;g=(k[q>>2]|0)+g|0;k[q>>2]=g}while((j|0)!=(b|0));GP(k[h+28>>2]|0,f|0,ha(k[h+40>>2]|0,a)|0)|0;if(l){g=0;do{f=k[e+(g<<2)>>2]|0;c=o+(k[d+(g<<2)>>2]<<2)|0;q=k[c>>2]|0;k[c>>2]=q+1;k[n+(q<<2)>>2]=f;g=g+1|0}while((g|0)!=(a|0))}do{q=b;b=b+-1|0;k[o+(q<<2)>>2]=k[o+(b<<2)>>2]}while((q|0)>1);k[o>>2]=0;break}default:Wa(174497,131120,943,131812)}k[h+8>>2]=a;if(i)h=yp(h,i)|0}else h=0;return h|0}function Gp(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;h=ha(b<<3,c)|0;d=Cy(h)|0;GP(d|0,a|0,h|0)|0;if((b|0)>0){e=(c|0)>0;g=0;do{if(e){f=ha(g,c)|0;h=0;do{i=a+((ha(h,b)|0)+g<<3)|0;p[i>>3]=+p[d+(h+f<<3)>>3];h=h+1|0}while((h|0)!=(c|0))}g=g+1|0}while((g|0)!=(b|0))}vP(d);return}function Hp(){return +(+(aN()|0)/2147483647.0)}function Ip(a){a=a|0;if((a|0)>1)return (aN()|0)%(a|0)|0|0;else Wa(131859,131865,58,131875);return 0}function Jp(a){a=a|0;var b=0,c=0,d=0,e=0;if((a|0)>=1){b=Cy(a<<2)|0;c=0;do{k[b+(c<<2)>>2]=c;c=c+1|0}while((c|0)!=(a|0));if((a|0)>1)do{c=Ip(a)|0;a=a+-1|0;e=b+(a<<2)|0;d=k[e>>2]|0;c=b+(c<<2)|0;k[e>>2]=k[c>>2];k[c>>2]=d}while((a|0)>1)}else b=0;return b|0}function Kp(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if((a|0)>0){d=0;do{e=c+(d<<3)|0;p[e>>3]=+p[b+(d<<3)>>3]-+p[e>>3];d=d+1|0}while((d|0)!=(a|0))}return c|0}function Lp(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0;if((a|0)>0){e=0;d=0.0;do{d=d+ +p[b+(e<<3)>>3]*+p[c+(e<<3)>>3];e=e+1|0}while((e|0)!=(a|0))}else d=0.0;return +d}function Mp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;var e=0,f=0;if((a|0)>0){e=0;do{f=c+(e<<3)|0;p[f>>3]=+p[b+(e<<3)>>3]+ +p[f>>3]*d;e=e+1|0}while((e|0)!=(a|0))}return c|0}function Np(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;var e=0,f=0;if((a|0)>0){e=0;do{f=b+(e<<3)|0;p[f>>3]=+p[f>>3]+ +p[c+(e<<3)>>3]*d;e=e+1|0}while((e|0)!=(a|0))}return b|0}function Op(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0,g=0.0;if((b|0)>0){f=ha(c,b)|0;c=ha(d,b)|0;e=0.0;d=0;do{g=+p[a+(d+f<<3)>>3]-+p[a+(d+c<<3)>>3];e=e+g*g;d=d+1|0}while((d|0)!=(b|0))}else e=0.0;g=+X(+e);return +(g>1.0e-15?g:1.0e-15)}function Pp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0,g=0.0;if((b|0)>0){f=ha(c,b)|0;c=ha(d,b)|0;e=0.0;d=0;do{g=+p[a+(d+f<<3)>>3]-+p[a+(d+c<<3)>>3];e=e+g*g;d=d+1|0}while((d|0)!=(b|0))}else e=0.0;return +(+X(+e))}function Qp(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0.0;if((c|0)>0){d=0.0;e=0;do{f=+p[a+(e<<3)>>3]-+p[b+(e<<3)>>3];d=d+f*f;e=e+1|0}while((e|0)!=(c|0))}else d=0.0;return +(+X(+d))}function Rp(a,b,c,d,e,f,g){a=+a;b=+b;c=+c;d=+d;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,k=0.0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0.0;s=r;r=r+80|0;o=s+48|0;l=s+24|0;q=s;n=(f|0)>0;if(n){m=f<<3;GP(o|0,g|0,m|0)|0;GP(l|0,g|0,m|0)|0}m=(e|0)>0;if(m){i=0;do{if(n){h=ha(i,f)|0;j=0;do{u=+p[g+(j+h<<3)>>3];t=o+(j<<3)|0;k=+p[t>>3];p[t>>3]=u<k?u:k;t=l+(j<<3)|0;k=+p[t>>3];p[t>>3]=u>k?u:k;j=j+1|0}while((j|0)!=(f|0))}i=i+1|0}while((i|0)!=(e|0))}k=+p[l>>3]-+p[o>>3];k=k!=0.0?(c-a)/k:1.0;c=+p[l+8>>3]-+p[o+8>>3];if(c!=0.0){u=(d-b)/c;k=k<u?k:u}p[q>>3]=a;p[q+8>>3]=b;p[q+16>>3]=0.0;if(m){i=0;do{if(n){h=ha(i,f)|0;j=0;do{t=g+(j+h<<3)|0;p[t>>3]=+p[q+(j<<3)>>3]+k*(+p[t>>3]-+p[o+(j<<3)>>3]);j=j+1|0}while((j|0)!=(f|0))}i=i+1|0}while((i|0)!=(e|0))}r=s;return}function Sp(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0.0;g=r;r=r+144|0;f=g;e=g+8|0;d=(Zs(a)|0)==1;c=(Kt(a)|0)+8|0;c=k[c>>2]|0;if(d){a=k[c+132>>2]|0;k[a>>2]=0;k[a+4>>2]=0;k[a+8>>2]=0;k[a+12>>2]=0}else{d=$t(k[k[c+112>>2]>>2]|0)|0;c=k[12784]|0;if((d|0)!=(c|0)){k[8413]=0;k[12784]=d;c=ks(d,0,131881,0)|0;k[12785]=c;c=ks(k[12784]|0,1,131889,0)|0;k[12786]=c;c=ks(k[12784]|0,1,131906,0)|0;k[12787]=c;c=k[12784]|0}d=ss(c,131906)|0;k[12788]=d;Vq(33640);k[8412]=1;h=+jB(k[12784]|0,k[12785]|0,1.0,0.0);p[4209]=h;k[8414]=k[12786];k[8415]=k[12787];k[8416]=k[12788];if(!((oB(ss(b,131911)|0)|0)<<24>>24))c=$q(a,33640)|0;else{c=k[8413]|0;k[8413]=c+1;k[f>>2]=c;TN(e,132437,f)|0;c=Wq(Hu(a,e,1)|0)|0;d=Kt(a)|0;if(d){e=c+8|0;do{Pt(k[e>>2]|0,d,1)|0;k[(k[(k[d+8>>2]|0)+112>>2]|0)+12>>2]=c;d=Lt(a,d)|0}while((d|0)!=0)}}dr(a,c,33640);ar(c)}r=g;return}function Tp(a,b){a=a|0;b=b|0;var c=0;c=Cy(32)|0;k[c>>2]=4;p[c+8>>3]=.75;k[c+16>>2]=1073741824;k[c+20>>2]=1;k[c+24>>2]=a;k[c+28>>2]=b;return c|0}function Up(a){a=a|0;vP(a);return}function Vp(a){a=a|0;var b=0,c=0;if(!a)return;c=k[a+8>>2]|0;do if(c){if(k[a>>2]|0){jp(c);b=k[a+12>>2]|0;if(!b)break;jp(b);break}if((k[a+36>>2]|0)!=0?(jp(c),b=k[a+12>>2]|0,(b|0)!=0):0)jp(b)}while(0);jp(k[a+16>>2]|0);jp(k[a+20>>2]|0);b=k[a+24>>2]|0;if((b|0)!=0?(k[a>>2]|0)>0:0)vP(b);Vp(k[a+28>>2]|0);vP(a);return}function Wp(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var l=0,m=0,n=0.0,o=0,q=0,s=0,t=0,u=0,v=0;v=r;r=r+32|0;s=v+16|0;t=v+12|0;o=v+8|0;q=v+4|0;u=v;k[s>>2]=a;k[t>>2]=0;k[o>>2]=0;k[q>>2]=0;k[u>>2]=0;k[g>>2]=0;k[h>>2]=0;k[b>>2]=0;k[f>>2]=0;k[d>>2]=0;l=i+28|0;m=i+8|0;n=+(k[a+4>>2]|0);e=c;do{Zp(a,s,e,t,0,u,o,q,i,j);e=k[s>>2]|0;if(!e)break;c=k[e+4>>2]|0;e=k[g>>2]|0;if(!e){k[g>>2]=k[o>>2];k[h>>2]=k[q>>2]}else{a=wp(e,k[o>>2]|0)|0;jp(k[g>>2]|0);jp(k[o>>2]|0);k[g>>2]=a;a=wp(k[q>>2]|0,k[h>>2]|0)|0;jp(k[h>>2]|0);jp(k[q>>2]|0);k[h>>2]=a}e=k[b>>2]|0;if(e)jp(e);k[b>>2]=k[s>>2];e=k[d>>2]|0;if(e)jp(e);e=k[t>>2]|0;k[d>>2]=e;a=k[f>>2]|0;if(a){vP(a);e=k[t>>2]|0}k[f>>2]=k[u>>2];a=k[s>>2]|0;k[u>>2]=0;if(!(+(c|0)>n*+p[m>>3]))break}while((k[l>>2]|0)==1);r=v;return}function Xp(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;if((mp(a,0)|0)!=0?(k[a+16>>2]|0)==1:0)e=a;else e=Bp(a)|0;do if(!b)b=0;else{if((mp(b,0)|0)!=0?(k[b+16>>2]|0)==1:0)break;b=pp(b,0)|0}while(0);b=$p(_p(e,b,c)|0,d)|0;if((e|0)!=(a|0))k[b+36>>2]=1;return b|0}function Yp(a){a=a|0;var b=0;while(1){b=k[a+28>>2]|0;if(!b)break;else a=b}return a|0}function Zp(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;var l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0.0,v=0,w=0,x=0.0,y=0,z=0.0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0;U=r;r=r+16|0;K=U+8|0;N=U+4|0;O=U;k[b>>2]=0;k[d>>2]=0;k[g>>2]=0;k[h>>2]=0;T=k[a>>2]|0;P=i+24|0;k[j>>2]=k[P>>2];l=k[P>>2]|0;switch(l|0){case 12:{k[P>>2]=3;k[j>>2]=3;Zp(a,b,c,d,e,f,g,h,i,j);if((((k[b>>2]|0)==0?(k[P>>2]=4,k[j>>2]=4,Zp(a,b,c,d,e,f,g,h,i,j),(k[b>>2]|0)==0):0)?(k[P>>2]=6,k[j>>2]=6,Zp(a,b,c,d,e,f,g,h,i,j),(k[b>>2]|0)==0):0)?(k[P>>2]=9,k[j>>2]=9,Zp(a,b,c,d,e,f,g,h,i,j),(k[b>>2]|0)==0):0){k[P>>2]=2;k[j>>2]=2;Zp(a,b,c,d,e,f,g,h,i,j)}k[P>>2]=12;break}case 9:case 10:{o=k[i+20>>2]|0;if((l|0)==9){l=a+20|0;w=k[l>>2]|0;B=a+24|0;y=k[B>>2]|0;A=k[a>>2]|0;C=Cy(A<<2)|0;j=(A|0)>0;if(j){c=0;do{k[C+(c<<2)>>2]=-100;c=c+1|0}while((c|0)!=(A|0))}if(!o)if(j){j=0;n=0;t=0;while(1){m=C+(t<<2)|0;if((k[m>>2]|0)==-100){c=n+1|0;k[m>>2]=n;o=k[w+(t<<2)>>2]|0;m=t+1|0;s=w+(m<<2)|0;n=k[s>>2]|0;if((o|0)<(n|0)){q=o;do{o=k[y+(q<<2)>>2]|0;if((t|0)!=(o|0)){k[C+(o<<2)>>2]=-1;j=j+1|0;n=k[s>>2]|0}q=q+1|0}while((q|0)<(n|0))}}else{m=t+1|0;c=n}if((m|0)==(A|0))break;else{n=c;t=m}}}else{c=0;j=0}else{v=Jp(A)|0;if(j){j=0;n=0;t=0;while(1){s=k[v+(t<<2)>>2]|0;m=C+(s<<2)|0;if((k[m>>2]|0)==-100){c=n+1|0;k[m>>2]=n;n=k[w+(s<<2)>>2]|0;q=w+(s+1<<2)|0;m=k[q>>2]|0;if((n|0)<(m|0)){o=n;do{n=k[y+(o<<2)>>2]|0;if((s|0)!=(n|0)){k[C+(n<<2)>>2]=-1;j=j+1|0;m=k[q>>2]|0}o=o+1|0}while((o|0)<(m|0))}}else c=n;t=t+1|0;if((t|0)==(A|0))break;else n=c}}else{j=0;c=0}vP(v)}m=B;D=c;c=c+j|0}else{l=a+20|0;w=k[l>>2]|0;B=a+24|0;y=k[B>>2]|0;n=k[a>>2]|0;C=Cy(n<<2)|0;k[K>>2]=0;m=(n|0)>0;if(m){c=0;do{k[C+(c<<2)>>2]=-100;c=(k[K>>2]|0)+1|0;k[K>>2]=c}while((c|0)<(n|0))}A=bq(n,(n<<1)+-2|0)|0;if(!o){k[K>>2]=0;if(m){c=0;do{S=c;c=c+1|0;dq(A,S,(k[w+(c<<2)>>2]|0)-(k[w+(S<<2)>>2]|0)|0)|0;k[K>>2]=c}while((c|0)!=(n|0))}}else{j=Jp(n)|0;if(m){c=0;do{S=k[j+(c<<2)>>2]|0;k[K>>2]=S;dq(A,S,(k[w+(S+1<<2)>>2]|0)-(k[w+(S<<2)>>2]|0)|0)|0;c=c+1|0}while((c|0)!=(n|0))}vP(j)}if(!(eq(A,K,N)|0)){j=0;c=0}else{c=0;m=0;while(1){j=m+1|0;k[C+(k[K>>2]<<2)>>2]=m;m=k[K>>2]|0;n=k[w+(m<<2)>>2]|0;if((n|0)<(k[w+(m+1<<2)>>2]|0))do{v=k[y+(n<<2)>>2]|0;if((m|0)!=(v|0)){o=C+(v<<2)|0;if((k[o>>2]|0)==-100){gq(A,v)|0;k[o>>2]=-1;o=k[w+(v<<2)>>2]|0;t=w+(v+1<<2)|0;m=k[t>>2]|0;if((o|0)<(m|0))do{q=y+(o<<2)|0;s=k[q>>2]|0;do if((v|0)!=(s|0)){if((k[C+(s<<2)>>2]|0)!=-100)break;m=fq(A,s)|0;k[N>>2]=m;dq(A,k[q>>2]|0,m+1|0)|0;m=k[t>>2]|0}while(0);o=o+1|0}while((o|0)<(m|0));m=k[K>>2]|0}c=c+1|0}n=n+1|0}while((n|0)<(k[w+(m+1<<2)>>2]|0));if(!(eq(A,K,N)|0))break;else m=j}}cq(A);m=B;D=j;c=j+c|0}B=k[l>>2]|0;A=k[m>>2]|0;if(!(k[i+28>>2]|0))if((D|0)==(T|0)?1:+(D|0)>+(T|0)*+p[i+8>>3]){m=0;n=0;l=0}else Q=304;else if((D|0)==(T|0)){m=0;n=0;l=0}else Q=304;if((Q|0)==304)if((D|0)>=(k[i>>2]|0)){n=c<<2;m=Cy(n)|0;n=Cy(n)|0;l=Cy(c<<3)|0;if((T|0)>0){c=0;y=0;while(1){j=C+(y<<2)|0;if((k[j>>2]|0)==-1){v=k[B+(y<<2)>>2]|0;j=y+1|0;w=B+(j<<2)|0;q=k[w>>2]|0;t=(v|0)<(q|0);if(t){s=v;o=0;do{o=((k[C+(k[A+(s<<2)>>2]<<2)>>2]|0)>>>31^1)+o|0;s=s+1|0}while((s|0)<(q|0));if(t){u=1.0/+(o|0);s=v;while(1){o=A+(s<<2)|0;if((k[C+(k[o>>2]<<2)>>2]|0)>-1){k[m+(c<<2)>>2]=y;k[n+(c<<2)>>2]=k[C+(k[o>>2]<<2)>>2];p[l+(c<<3)>>3]=u;o=k[w>>2]|0;c=c+1|0}else o=q;s=s+1|0;if((s|0)>=(o|0))break;else q=o}}}}else{k[m+(c<<2)>>2]=y;k[n+(c<<2)>>2]=k[j>>2];p[l+(c<<3)>>3]=1.0;j=y+1|0;c=c+1|0}if((j|0)==(T|0))break;else y=j}}else c=0;T=tp(c,T,D,m,n,l,1,8)|0;k[g>>2]=T;T=ip(T)|0;k[h>>2]=T;g=xp(T,a,k[g>>2]|0)|0;k[b>>2]=g;if(g){vp(k[h>>2]|0,e,f,0);e=k[b>>2]|0;f=e+36|0;k[f>>2]=k[f>>2]|3;e=qp(e)|0;k[b>>2]=e;k[d>>2]=0}}else{m=0;n=0;l=0}if(!C){j=0;c=0;Q=322}else{vP(C);j=0;c=0;Q=322}break}case 5:{Q=216;break}case 1:{E=i+20|0;j=k[E>>2]|0;F=a+20|0;A=k[F>>2]|0;G=a+24|0;B=k[G>>2]|0;C=k[a>>2]|0;m=a+4|0;c=k[m>>2]|0;l=Cy(C<<2)|0;o=(C|0)>0;if(o){n=0;do{k[l+(n<<2)>>2]=n;n=n+1|0}while((n|0)!=(C|0))}if(!j){if(o){n=k[A>>2]|0;w=0;while(1){v=w;w=w+1|0;s=A+(w<<2)|0;j=k[s>>2]|0;if((n|0)<(j|0)){t=l+(v<<2)|0;do{o=B+(n<<2)|0;q=k[o>>2]|0;if(((v|0)!=(q|0)?(y=l+(q<<2)|0,(k[y>>2]|0)==(q|0)):0)?(k[t>>2]|0)==(v|0):0){k[y>>2]=v;k[t>>2]=k[o>>2];c=c+-1|0;j=k[s>>2]|0}n=n+1|0}while((n|0)<(j|0))}if((w|0)==(C|0))break;else n=j}}}else{y=Jp(C)|0;if(o){w=0;do{s=k[y+(w<<2)>>2]|0;n=k[A+(s<<2)>>2]|0;t=A+(s+1<<2)|0;j=k[t>>2]|0;if((n|0)<(j|0)){v=l+(s<<2)|0;do{o=B+(n<<2)|0;q=k[o>>2]|0;if(((s|0)!=(q|0)?(D=l+(q<<2)|0,(k[D>>2]|0)==(q|0)):0)?(k[v>>2]|0)==(s|0):0){k[D>>2]=s;k[v>>2]=k[o>>2];c=c+-1|0;j=k[t>>2]|0}n=n+1|0}while((n|0)<(j|0))}w=w+1|0}while((w|0)!=(C|0))}vP(y)}j=k[P>>2]|0;if((j|0)==2){c=E;j=F;l=G;Q=185}else Q=215;break}case 2:{c=i+20|0;j=a+20|0;l=a+24|0;m=a+4|0;Q=185;break}case 3:{m=k[i+20>>2]|0;E=k[a+20>>2]|0;G=k[a+24>>2]|0;H=k[a>>2]|0;I=H<<2;j=Cy(I)|0;c=Cy(I+4|0)|0;I=Cy(I)|0;n=(H|0)>0;if(n){l=0;do{k[I+(l<<2)>>2]=l;l=l+1|0}while((l|0)!=(H|0))}k[c>>2]=0;D=k[a+28>>2]|0;if(!m)if(n){l=0;w=0;m=0;do{n=w;w=w+1|0;do if((k[I+(n<<2)>>2]|0)!=-1?(A=k[E+(n<<2)>>2]|0,((k[E+(w<<2)>>2]|0)-A|0)==1):0){v=k[G+(A<<2)>>2]|0;k[I+(v<<2)>>2]=-1;q=m+1|0;k[j+(m<<2)>>2]=v;n=k[E+(v<<2)>>2]|0;t=E+(v+1<<2)|0;m=k[t>>2]|0;if((n|0)<(m|0)){o=m;m=q;do{q=G+(n<<2)|0;s=k[q>>2]|0;if((v|0)!=(s|0)?((k[E+(s+1<<2)>>2]|0)-(k[E+(s<<2)>>2]|0)|0)==1:0){k[I+(s<<2)>>2]=-1;k[j+(m<<2)>>2]=k[q>>2];o=k[t>>2]|0;m=m+1|0}n=n+1|0}while((n|0)<(o|0))}else m=q;n=k[c+(l<<2)>>2]|0;if((m-n|0)<5){l=l+1|0;k[c+(l<<2)>>2]=m;break}n=n+1|0;l=l+1|0;k[c+(l<<2)>>2]=n;if((n|0)<(m|0)){o=n;do{S=n+3|0;n=(m|0)<(S|0)?m:S;l=l+1|0;k[c+(l<<2)>>2]=n;o=o+1|0}while((o|0)<(m|0)&(n|0)<(m|0))}}while(0)}while((w|0)!=(H|0));u=0.0;A=0;t=0;while(1){y=I+(A<<2)|0;n=k[y>>2]|0;if((n|0)!=-1){q=k[E+(A<<2)>>2]|0;o=A+1|0;w=k[E+(o<<2)>>2]|0;if((q|0)<(w|0)){s=n;n=1;v=q;while(1){q=k[G+(v<<2)>>2]|0;if((A|0)!=(q|0)?(k[I+(q<<2)>>2]|0)!=-1:0)if((s|0)!=-1){x=+p[D+(v<<3)>>3];if((n|0)==0?!(x>u):0){n=0;q=t}else{u=x;n=0}}else{s=-1;q=t}else q=t;v=v+1|0;if((v|0)==(w|0))break;else t=q}if(!n){k[I+(q<<2)>>2]=-1;k[y>>2]=-1;k[j+(m<<2)>>2]=A;S=m+2|0;k[j+(m+1<<2)>>2]=q;l=l+1|0;k[c+(l<<2)>>2]=S;n=q;m=S}else n=q}else n=t}else{o=A+1|0;n=t}if((o|0)==(H|0)){n=0;break}else{A=o;t=n}}do{if((k[I+(n<<2)>>2]|0)==(n|0)){S=m+1|0;k[j+(m<<2)>>2]=n;l=l+1|0;k[c+(l<<2)>>2]=S;m=S}n=n+1|0}while((n|0)!=(H|0))}else l=0;else{A=Jp(H)|0;if(n){l=0;w=0;m=0;do{n=k[A+(w<<2)>>2]|0;do if((k[I+(n<<2)>>2]|0)!=-1?(B=k[E+(n<<2)>>2]|0,((k[E+(n+1<<2)>>2]|0)-B|0)==1):0){v=k[G+(B<<2)>>2]|0;k[I+(v<<2)>>2]=-1;q=m+1|0;k[j+(m<<2)>>2]=v;n=k[E+(v<<2)>>2]|0;t=E+(v+1<<2)|0;m=k[t>>2]|0;if((n|0)<(m|0)){o=m;m=q;do{q=G+(n<<2)|0;s=k[q>>2]|0;if((v|0)!=(s|0)?((k[E+(s+1<<2)>>2]|0)-(k[E+(s<<2)>>2]|0)|0)==1:0){k[I+(s<<2)>>2]=-1;k[j+(m<<2)>>2]=k[q>>2];o=k[t>>2]|0;m=m+1|0}n=n+1|0}while((n|0)<(o|0))}else m=q;n=k[c+(l<<2)>>2]|0;if((m-n|0)<5){l=l+1|0;k[c+(l<<2)>>2]=m;break}n=n+1|0;l=l+1|0;k[c+(l<<2)>>2]=n;if((n|0)<(m|0)){o=n;do{S=n+3|0;n=(m|0)<(S|0)?m:S;l=l+1|0;k[c+(l<<2)>>2]=n;o=o+1|0}while((o|0)<(m|0)&(n|0)<(m|0))}}while(0);w=w+1|0}while((w|0)!=(H|0));u=0.0;y=0;s=0;while(1){v=k[A+(y<<2)>>2]|0;w=I+(v<<2)|0;n=k[w>>2]|0;if((n|0)!=-1?(C=k[E+(v<<2)>>2]|0,F=k[E+(v+1<<2)>>2]|0,(C|0)<(F|0)):0){o=1;t=C;while(1){q=k[G+(t<<2)>>2]|0;if((v|0)!=(q|0)?(k[I+(q<<2)>>2]|0)!=-1:0)if((n|0)!=-1){x=+p[D+(t<<3)>>3];if((o|0)==0?!(x>u):0){o=0;q=s}else{u=x;o=0}}else{n=-1;q=s}else q=s;t=t+1|0;if((t|0)==(F|0)){n=q;break}else s=q}if(!o){k[I+(n<<2)>>2]=-1;k[w>>2]=-1;k[j+(m<<2)>>2]=v;S=m+2|0;k[j+(m+1<<2)>>2]=n;l=l+1|0;k[c+(l<<2)>>2]=S;m=S}}else n=s;y=y+1|0;if((y|0)==(H|0)){n=0;break}else s=n}do{if((k[I+(n<<2)>>2]|0)==(n|0)){S=m+1|0;k[j+(m<<2)>>2]=n;l=l+1|0;k[c+(l<<2)>>2]=S;m=S}n=n+1|0}while((n|0)!=(H|0))}else l=0;vP(A)}vP(I);A=l;Q=150;break}case 4:{A=k[i+20>>2]|0;k[N>>2]=0;k[O>>2]=0;D=k[a+20>>2]|0;E=k[a+24>>2]|0;F=k[a>>2]|0;H=F<<2;j=Cy(H)|0;c=Cy(H+4|0)|0;H=Cy(H)|0;B=(F|0)>0;if(B){l=0;do{k[H+(l<<2)>>2]=l;l=l+1|0}while((l|0)!=(F|0))}Cp(a,K,N,O);k[c>>2]=0;C=k[a+28>>2]|0;y=k[O>>2]|0;l=k[N>>2]|0;m=0;o=0;n=0;a:while(1){v=k[K>>2]|0;while(1){if((o|0)>=(v|0))break a;t=o+1|0;w=y+(t<<2)|0;q=k[w>>2]|0;s=k[y+(o<<2)>>2]|0;if((q-s|0)<2)o=t;else break}o=k[c+(m<<2)>>2]|0;if((q|0)>(s|0)){q=n;while(1){S=l+(s<<2)|0;k[H+(k[S>>2]<<2)>>2]=-1;n=q+1|0;k[j+(q<<2)>>2]=k[S>>2];if((n-o|0)>3){m=m+1|0;k[c+(m<<2)>>2]=n;o=n}s=s+1|0;if((s|0)>=(k[w>>2]|0))break;else q=n}}if((n|0)<=(o|0)){o=t;continue}m=m+1|0;k[c+(m<<2)>>2]=n;o=t}if(!A){if(B){u=0.0;B=0;v=0;while(1){A=H+(B<<2)|0;o=k[A>>2]|0;if((o|0)!=-1){s=k[D+(B<<2)>>2]|0;q=B+1|0;y=k[D+(q<<2)>>2]|0;if((s|0)<(y|0)){t=o;o=1;w=s;while(1){s=k[E+(w<<2)>>2]|0;if((B|0)!=(s|0)?(k[H+(s<<2)>>2]|0)!=-1:0)if((t|0)!=-1){x=+p[C+(w<<3)>>3];if((o|0)==0?!(x>u):0){o=0;s=v}else{u=x;o=0}}else{t=-1;s=v}else s=v;w=w+1|0;if((w|0)==(y|0))break;else v=s}if(!o){k[H+(s<<2)>>2]=-1;k[A>>2]=-1;k[j+(n<<2)>>2]=B;S=n+2|0;k[j+(n+1<<2)>>2]=s;m=m+1|0;k[c+(m<<2)>>2]=S;o=s;n=S}else o=s}else o=v}else{q=B+1|0;o=v}if((q|0)==(F|0)){o=0;break}else{B=q;v=o}}do{if((k[H+(o<<2)>>2]|0)==(o|0)){S=n+1|0;k[j+(n<<2)>>2]=o;m=m+1|0;k[c+(m<<2)>>2]=S;n=S}o=o+1|0}while((o|0)!=(F|0))}}else{A=Jp(F)|0;if(B){l=m;u=0.0;y=0;s=0;while(1){v=k[A+(y<<2)>>2]|0;w=H+(v<<2)|0;m=k[w>>2]|0;if((m|0)!=-1?(G=k[D+(v<<2)>>2]|0,J=k[D+(v+1<<2)>>2]|0,(G|0)<(J|0)):0){o=1;t=G;while(1){q=k[E+(t<<2)>>2]|0;if((v|0)!=(q|0)?(k[H+(q<<2)>>2]|0)!=-1:0)if((m|0)!=-1){x=+p[C+(t<<3)>>3];if((o|0)==0?!(x>u):0){o=0;q=s}else{u=x;o=0}}else{m=-1;q=s}else q=s;t=t+1|0;if((t|0)==(J|0)){m=q;break}else s=q}if(!o){k[H+(m<<2)>>2]=-1;k[w>>2]=-1;k[j+(n<<2)>>2]=v;S=n+2|0;k[j+(n+1<<2)>>2]=m;l=l+1|0;k[c+(l<<2)>>2]=S;n=S}}else m=s;y=y+1|0;if((y|0)==(F|0)){m=0;break}else s=m}do{if((k[H+(m<<2)>>2]|0)==(m|0)){S=n+1|0;k[j+(n<<2)>>2]=m;l=l+1|0;k[c+(l<<2)>>2]=S;n=S}m=m+1|0}while((m|0)!=(F|0))}else l=m;vP(A);m=l;l=k[N>>2]|0}vP(l);vP(k[O>>2]|0);vP(H);A=m;Q=150;break}case 6:{A=k[a+20>>2]|0;B=k[a+24>>2]|0;D=k[a>>2]|0;G=D<<2;j=Cy(G)|0;c=Cy(G+4|0)|0;G=Cy(G)|0;C=Cy(D<<4)|0;m=(D|0)>0;if(m){l=0;do{k[G+(l<<2)>>2]=l;l=l+1|0}while((l|0)!=(D|0))}k[c>>2]=0;y=k[a+28>>2]|0;F=Jp(D)|0;if(m){l=0;w=0;m=0;do{n=k[F+(w<<2)>>2]|0;do if((k[G+(n<<2)>>2]|0)!=-1?(E=k[A+(n<<2)>>2]|0,((k[A+(n+1<<2)>>2]|0)-E|0)==1):0){v=k[B+(E<<2)>>2]|0;k[G+(v<<2)>>2]=-1;q=m+1|0;k[j+(m<<2)>>2]=v;n=k[A+(v<<2)>>2]|0;t=A+(v+1<<2)|0;m=k[t>>2]|0;if((n|0)<(m|0)){o=m;m=q;do{q=B+(n<<2)|0;s=k[q>>2]|0;if((v|0)!=(s|0)?((k[A+(s+1<<2)>>2]|0)-(k[A+(s<<2)>>2]|0)|0)==1:0){k[G+(s<<2)>>2]=-1;k[j+(m<<2)>>2]=k[q>>2];o=k[t>>2]|0;m=m+1|0}n=n+1|0}while((n|0)<(o|0))}else m=q;n=k[c+(l<<2)>>2]|0;if((m-n|0)<5){l=l+1|0;k[c+(l<<2)>>2]=m;break}n=n+1|0;l=l+1|0;k[c+(l<<2)>>2]=n;if((n|0)<(m|0)){o=n;do{S=n+3|0;n=(m|0)<(S|0)?m:S;l=l+1|0;k[c+(l<<2)>>2]=n;o=o+1|0}while((o|0)<(m|0)&(n|0)<(m|0))}}while(0);w=w+1|0}while((w|0)!=(D|0));w=0;do{t=k[F+(w<<2)>>2]|0;v=G+(t<<2)|0;n=k[v>>2]|0;if((n|0)!=-1?(H=k[A+(t<<2)>>2]|0,I=k[A+(t+1<<2)>>2]|0,(H|0)<(I|0)):0){s=H;q=0;while(1){o=k[B+(s<<2)>>2]|0;if((t|0)!=(o|0)?(k[G+(o<<2)>>2]|0)!=-1:0)if((n|0)==-1){n=-1;o=q}else{S=q<<1;p[C+(S<<3)>>3]=+(o|0);p[C+((S|1)<<3)>>3]=+p[y+(s<<3)>>3];o=q+1|0}else o=q;s=s+1|0;if((s|0)==(I|0)){n=o;break}else q=o}if((n|0)>0){dO(C,n,16,82);n=(n|0)<3?~n:-4;o=~n;q=0;s=m;while(1){S=~~+p[C+(q<<1<<3)>>3];k[G+(S<<2)>>2]=-1;k[j+(s<<2)>>2]=S;q=q+1|0;if((q|0)==(o|0))break;else s=s+1|0}S=m+-1-n|0;k[v>>2]=-1;m=S+1|0;k[j+(S<<2)>>2]=t;l=l+1|0;k[c+(l<<2)>>2]=m}}w=w+1|0}while((w|0)!=(D|0));n=0;do{if((k[G+(n<<2)>>2]|0)==(n|0)){S=m+1|0;k[j+(m<<2)>>2]=n;l=l+1|0;k[c+(l<<2)>>2]=S;m=S}n=n+1|0}while((n|0)!=(D|0))}else l=0;vP(F);vP(G);A=l;Q=150;break}default:{}}do if((Q|0)==150){if(!(k[i+28>>2]|0)){if((A|0)==(T|0)?1:+(A|0)>+(T|0)*+p[i+8>>3]){Q=328;break}}else if((A|0)==(T|0)){Q=328;break}if((A|0)>=(k[i>>2]|0)){n=T<<2;m=Cy(n)|0;n=Cy(n)|0;l=Cy(T<<3)|0;if((A|0)>0){o=0;s=k[c>>2]|0;y=0;while(1){w=y;y=y+1|0;v=c+(y<<2)|0;q=k[v>>2]|0;if((s|0)<(q|0))while(1){k[m+(o<<2)>>2]=k[j+(s<<2)>>2];k[n+(o<<2)>>2]=w;t=o+1|0;p[l+(o<<3)>>3]=1.0;s=s+1|0;q=k[v>>2]|0;if((s|0)>=(q|0)){o=t;break}else o=t}if((y|0)==(A|0))break;else s=q}}else o=0;T=tp(o,T,A,m,n,l,1,8)|0;k[g>>2]=T;T=ip(T)|0;k[h>>2]=T;k[d>>2]=0;d=xp(k[h>>2]|0,a,k[g>>2]|0)|0;k[b>>2]=d;if(!d)Q=322;else{vp(k[h>>2]|0,e,f,0);Q=Ap(k[h>>2]|0)|0;k[h>>2]=Q;Q=k[b>>2]|0;e=Q+36|0;k[e>>2]=k[e>>2]|3;Q=qp(Q)|0;k[b>>2]=Q;Q=322}}else Q=328}else if((Q|0)==185){n=k[c>>2]|0;B=k[j>>2]|0;y=k[l>>2]|0;A=k[a>>2]|0;c=k[m>>2]|0;l=Cy(A<<2)|0;m=(A|0)>0;if(m){j=0;do{k[l+(j<<2)>>2]=j;j=j+1|0}while((j|0)!=(A|0))}w=k[a+28>>2]|0;if(!n){if(m){u=0.0;v=0;j=0;do{n=k[B+(v<<2)>>2]|0;t=v;v=v+1|0;q=k[B+(v<<2)>>2]|0;if((n|0)<(q|0)){s=l+(t<<2)|0;m=1;do{o=k[y+(n<<2)>>2]|0;if(((t|0)!=(o|0)?(k[l+(o<<2)>>2]|0)==(o|0):0)?(k[s>>2]|0)==(t|0):0){x=+p[w+(n<<3)>>3];if((m|0)==0?!(x>u):0)m=0;else{u=x;m=0;j=o}}n=n+1|0}while((n|0)!=(q|0));if(!m){k[l+(j<<2)>>2]=t;k[s>>2]=j;c=c+-1|0}}}while((v|0)!=(A|0))}}else{v=Jp(A)|0;if(m){u=0.0;t=0;j=0;do{q=k[v+(t<<2)>>2]|0;s=l+(q<<2)|0;if((k[s>>2]|0)==(q|0)?(L=k[B+(q<<2)>>2]|0,M=k[B+(q+1<<2)>>2]|0,(L|0)<(M|0)):0){m=1;o=L;do{n=k[y+(o<<2)>>2]|0;if((q|0)!=(n|0)?(k[l+(n<<2)>>2]|0)==(n|0):0){x=+p[w+(o<<3)>>3];if((m|0)==0?!(x>u):0)m=0;else{u=x;m=0;j=n}}o=o+1|0}while((o|0)!=(M|0));if(!m){k[l+(j<<2)>>2]=q;k[s>>2]=j;c=c+-1|0}}t=t+1|0}while((t|0)!=(A|0))}vP(v)}j=k[P>>2]|0;Q=215}while(0);if((Q|0)==215)if((j|0)==5)Q=216;else{v=l;Q=246}b:do if((Q|0)==216){l=k[i+20>>2]|0;y=k[a+20>>2]|0;A=k[a+24>>2]|0;B=k[a>>2]|0;c=k[a+4>>2]|0;v=Cy(B<<2)|0;m=(B|0)>0;if(m){j=0;do{k[v+(j<<2)>>2]=j;j=j+1|0}while((j|0)!=(B|0))}w=k[a+28>>2]|0;if(!l){if(m){u=0.0;t=0;j=0}else{Q=246;break}while(1){m=k[y+(t<<2)>>2]|0;s=t;t=t+1|0;o=k[y+(t<<2)>>2]|0;if((o|0)>(m|0)){q=v+(s<<2)|0;z=+(o-m|0);l=1;do{n=k[A+(m<<2)>>2]|0;if(((s|0)!=(n|0)?(k[v+(n<<2)>>2]|0)==(n|0):0)?(k[q>>2]|0)==(s|0):0){x=+p[w+(m<<3)>>3]/z/+((k[y+(n+1<<2)>>2]|0)-(k[y+(n<<2)>>2]|0)|0);if((l|0)==0?!(x>u):0)l=0;else{u=x;l=0;j=n}}m=m+1|0}while((m|0)!=(o|0));if(!l){k[v+(j<<2)>>2]=s;k[q>>2]=j;c=c+-1|0}}if((t|0)==(B|0)){Q=246;break b}}}t=Jp(B)|0;if(m){u=0.0;s=0;j=0;do{o=k[t+(s<<2)>>2]|0;q=v+(o<<2)|0;if((k[q>>2]|0)==(o|0)?(R=k[y+(o<<2)>>2]|0,S=k[y+(o+1<<2)>>2]|0,(S|0)>(R|0)):0){z=+(S-R|0);l=1;n=R;do{m=k[A+(n<<2)>>2]|0;if((o|0)!=(m|0)?(k[v+(m<<2)>>2]|0)==(m|0):0){x=+p[w+(n<<3)>>3]/z/+((k[y+(m+1<<2)>>2]|0)-(k[y+(m<<2)>>2]|0)|0);if((l|0)==0?!(x>u):0)l=0;else{u=x;l=0;j=m}}n=n+1|0}while((n|0)!=(S|0));if(!l){k[v+(j<<2)>>2]=o;k[q>>2]=j;c=c+-1|0}}s=s+1|0}while((s|0)!=(B|0))}vP(t);Q=246}while(0);if((Q|0)==246){if(!(k[i+28>>2]|0))if((c|0)==(T|0)?1:+(c|0)>+(T|0)*+p[i+8>>3]){m=0;n=0;l=0}else Q=249;else if((c|0)==(T|0)){m=0;n=0;l=0}else Q=249;if((Q|0)==249)if((c|0)>=(k[i>>2]|0)){n=T<<2;m=Cy(n)|0;n=Cy(n)|0;l=Cy(T<<3)|0;if((T|0)>0){s=0;t=0;c=0;while(1){q=v+(t<<2)|0;o=k[q>>2]|0;if((o|0)>-1){k[m+(s<<2)>>2]=t;k[n+(s<<2)>>2]=c;j=s+1|0;p[l+(s<<3)>>3]=1.0;if((o|0)!=(t|0)){k[m+(j<<2)>>2]=k[q>>2];k[n+(j<<2)>>2]=c;p[l+(j<<3)>>3]=1.0;k[v+(k[q>>2]<<2)>>2]=-1;j=s+2|0}k[q>>2]=-1;c=c+1|0}else j=s;t=t+1|0;if((t|0)==(T|0))break;else s=j}}else{j=0;c=0}T=tp(j,T,c,m,n,l,1,8)|0;k[g>>2]=T;T=ip(T)|0;k[h>>2]=T;g=xp(T,a,k[g>>2]|0)|0;k[b>>2]=g;if(g){vp(k[h>>2]|0,e,f,0);e=Ap(k[h>>2]|0)|0;k[h>>2]=e;e=k[b>>2]|0;f=e+36|0;k[f>>2]=k[f>>2]|3;e=qp(e)|0;k[b>>2]=e;k[d>>2]=0}}else{m=0;n=0;l=0}if(!v){j=0;c=0;Q=322}else{vP(v);j=0;c=0;Q=322}}if((Q|0)==322){if(m)vP(m);if(n)vP(n);if(!l)Q=328;else{vP(l);Q=328}}if((Q|0)==328){if(j)vP(j);if(c)vP(c)}r=U;return}function _p(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if(!a)a=0;else{d=Cy(44)|0;k[d>>2]=0;k[d+4>>2]=k[a+4>>2];k[d+8>>2]=a;k[d+12>>2]=b;k[d+16>>2]=0;k[d+20>>2]=0;k[d+24>>2]=c;k[d+28>>2]=0;k[d+32>>2]=0;k[d+36>>2]=0;a=d}return a|0}function $p(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;j=r;r=r+32|0;i=j+20|0;h=j+16|0;d=j+12|0;e=j+8|0;f=j+4|0;g=j;k[h>>2]=0;if((k[a>>2]|0)<((k[b+16>>2]|0)+-1|0)?(Wp(k[a+8>>2]|0,f,k[a+12>>2]|0,g,0,h,d,e,b,i),c=k[f>>2]|0,(c|0)!=0):0){g=k[g>>2]|0;h=_p(c,g,k[h>>2]|0)|0;k[a+28>>2]=h;k[h+40>>2]=k[i>>2];k[h>>2]=(k[a>>2]|0)+1;k[h+4>>2]=k[c>>2];k[h+8>>2]=c;k[h+12>>2]=g;k[h+16>>2]=k[d>>2];k[a+20>>2]=k[e>>2];k[h+32>>2]=a;$p(h,b)|0}r=j;return a|0}function aq(a,b){a=a|0;b=b|0;var c=0.0,d=0.0;d=+p[a+8>>3];c=+p[b+8>>3];return (d>c?-1:d<c&1)|0}function bq(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;g=Cy(28)|0;k[g>>2]=0;k[g+4>>2]=a;k[g+8>>2]=b;k[g+12>>2]=-1;d=b+1|0;c=Cy(d<<2)|0;e=g+16|0;k[e>>2]=c;if((b|0)>-1?(k[c>>2]=0,(b|0)>0):0){c=1;do{k[(k[e>>2]|0)+(c<<2)>>2]=0;c=c+1|0}while((c|0)<(d|0))}f=a+1|0;b=f<<2;c=Cy(b)|0;d=g+20|0;k[d>>2]=c;e=(a|0)>-1;if(e){k[c>>2]=0;if((a|0)>0){c=1;do{k[(k[d>>2]|0)+(c<<2)>>2]=0;c=c+1|0}while((c|0)<(f|0))}b=Cy(b)|0;k[g+24>>2]=b;if(e){c=0;do{k[b+(c<<2)>>2]=-999;c=c+1|0}while((c|0)<(f|0))}}else{a=Cy(b)|0;k[g+24>>2]=a}return g|0}function cq(a){a=a|0;var b=0,c=0,d=0;if(a){c=a+16|0;b=k[c>>2]|0;if(b){d=a+8|0;if((k[d>>2]|0)>-1){Rq(k[b>>2]|0,95);if((k[d>>2]|0)>0){b=0;do{b=b+1|0;Rq(k[(k[c>>2]|0)+(b<<2)>>2]|0,95)}while((b|0)<(k[d>>2]|0))}b=k[c>>2]|0}vP(b)}b=k[a+20>>2]|0;if(b)vP(b);vP(k[a+24>>2]|0);vP(a)}return}function dq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;if(!a)Wa(175237,131920,69,131936);d=a+8|0;h=a+20|0;g=a+24|0;i=a+16|0;a:do if((k[d>>2]|0)>=(c|0)){while(1){e=(k[h>>2]|0)+(b<<2)|0;f=k[e>>2]|0;if(!f)break;j=k[(k[g>>2]|0)+(b<<2)>>2]|0;k[e>>2]=0;k[a>>2]=(k[a>>2]|0)+-1;Uq(f,95,(k[i>>2]|0)+(j<<2)|0);if((k[d>>2]|0)<(c|0))break a}k[a>>2]=(k[a>>2]|0)+1;d=a+12|0;if((k[d>>2]|0)<(c|0))k[d>>2]=c;k[(k[g>>2]|0)+(b<<2)>>2]=c;d=Cy(4)|0;k[d>>2]=b;e=k[(k[i>>2]|0)+(c<<2)>>2]|0;if(!e){j=Qq(d)|0;k[(k[h>>2]|0)+(b<<2)>>2]=j;k[(k[i>>2]|0)+(c<<2)>>2]=j}else{j=Sq(e,d)|0;k[(k[h>>2]|0)+(b<<2)>>2]=j;k[(k[i>>2]|0)+(c<<2)>>2]=j}return a|0}while(0);Wa(131955,131920,70,131936);return 0}function eq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;if((a|0)!=0?(k[a>>2]|0)>=1:0){f=a+12|0;d=k[f>>2]|0;k[c>>2]=d;k[a>>2]=(k[a>>2]|0)+-1;e=a+16|0;c=k[(k[e>>2]|0)+(d<<2)>>2]|0;g=Tq(c)|0;k[b>>2]=k[g>>2];Uq(c,95,(k[e>>2]|0)+(d<<2)|0);e=k[e>>2]|0;if(!(k[e+(d<<2)>>2]|0)){a:do if((d|0)>-1){c=d;while(1){d=c+-1|0;if((c|0)<=0)break a;if(!(k[e+(d<<2)>>2]|0))c=d;else break}}while(0);k[f>>2]=d}d=k[b>>2]|0;k[(k[a+20>>2]|0)+(d<<2)>>2]=0;k[(k[a+24>>2]|0)+(d<<2)>>2]=-999;d=1}else d=0;return d|0}function fq(a,b){a=a|0;b=b|0;return k[(k[a+24>>2]|0)+(b<<2)>>2]|0}function gq(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;if((a|0)!=0?(d=k[a>>2]|0,(d|0)>=1):0){g=a+24|0;c=k[(k[g>>2]|0)+(b<<2)>>2]|0;k[a>>2]=d+-1;f=a+20|0;d=a+16|0;Uq(k[(k[f>>2]|0)+(b<<2)>>2]|0,95,(k[d>>2]|0)+(c<<2)|0);a=a+12|0;if((c|0)==(k[a>>2]|0)?(e=k[d>>2]|0,(k[e+(c<<2)>>2]|0)==0):0){a:do if((c|0)>-1){d=c;while(1){c=d+-1|0;if((d|0)<=0)break a;if(!(k[e+(c<<2)>>2]|0))d=c;else break}}while(0);k[a>>2]=c}k[(k[f>>2]|0)+(b<<2)>>2]=0;k[(k[g>>2]|0)+(b<<2)>>2]=-999;c=1}else c=0;return c|0}function hq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0.0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,u=0.0;if(!(mp(a,0)|0))Wa(131972,132008,262,132023);r=np(a)|0;s=k[r+20>>2]|0;t=k[r+24>>2]|0;e=r+16|0;a=r+28|0;if((k[e>>2]|0)==1)q=k[a>>2]|0;else{vP(k[a>>2]|0);k[e>>2]=1;q=Cy(k[r+8>>2]<<3)|0;k[a>>2]=q}m=Cy(k[r>>2]<<2)|0;if((k[r>>2]|0)>0){e=0;do{k[m+(e<<2)>>2]=-1;e=e+1|0;a=k[r>>2]|0}while((e|0)<(a|0));if((a|0)>0){a=k[s>>2]|0;l=0;a:while(1){j=l;l=l+1|0;h=s+(l<<2)|0;i=s+(j<<2)|0;f=+((k[h>>2]|0)-a|0);k[m+(j<<2)>>2]=j;e=k[i>>2]|0;a=k[h>>2]|0;if((e|0)<(a|0)){do{g=k[t+(e<<2)>>2]|0;if((j|0)!=(g|0)){k[m+(g<<2)>>2]=j;a=k[h>>2]|0}e=e+1|0}while((e|0)<(a|0));e=k[i>>2]|0;h=a}else h=a;if((e|0)<(h|0))do{a=k[t+(e<<2)>>2]|0;if((j|0)!=(a|0)){g=k[s+(a+1<<2)>>2]|0;a=k[s+(a<<2)>>2]|0;d=f+ +(g-a|0);if((g|0)>(a|0))do{d=(k[m+(k[t+(a<<2)>>2]<<2)>>2]|0)==(j|0)?d+-1.0:d;a=a+1|0}while((a|0)<(g|0));p[q+(e<<3)>>3]=d;if(!(d>0.0)){o=23;break a}}e=e+1|0}while((e|0)<(h|0));a=k[r>>2]|0;if((l|0)>=(a|0)){n=a;break}else a=h}if((o|0)==23)Wa(132045,132008,292,132023);if((n|0)>0){g=k[s>>2]|0;l=0;a=0;f=0.0;d=0.0;do{j=l;l=l+1|0;i=s+(l<<2)|0;e=k[i>>2]|0;if((g|0)<(e|0)){h=g;do{g=k[t+(h<<2)>>2]|0;if((j|0)!=(g|0)){f=f+ +Pp(c,b,j,g);e=k[i>>2]|0;a=a+1|0;d=d+ +p[q+(h<<3)>>3]}h=h+1|0}while((h|0)<(e|0));g=e}else g=e;e=k[r>>2]|0}while((l|0)<(e|0));i=e;u=+(a|0);d=f/u/(d/u);if((i|0)>0){g=0;do{a=k[s+(g<<2)>>2]|0;h=g;g=g+1|0;e=k[s+(g<<2)>>2]|0;if((a|0)<(e|0))do{if((h|0)!=(k[t+(a<<2)>>2]|0)){c=q+(a<<3)|0;p[c>>3]=d*+p[c>>3]}a=a+1|0}while((a|0)<(e|0))}while((g|0)<(i|0))}}}}return r|0}function iq(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;var f=0,g=0.0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0.0,r=0.0,s=0.0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0.0,T=0.0;K=k[a>>2]|0;L=k[a+20>>2]|0;M=k[a+24>>2]|0;if(!(mp(a,0)|0))Wa(131972,132008,335,132053);Q=hq(a,b,d)|0;f=Cy(56)|0;R=f+32|0;p[R>>3]=1.0;k[f+20>>2]=0;k[f+24>>2]=0;p[f+40>>3]=.01;h=~~+X(+(+(k[a>>2]|0)));k[f+48>>2]=h;h=K<<3;J=Cy(h)|0;k[f+12>>2]=J;v=(K|0)>0;if(v){a=0;do{p[J+(a<<3)>>3]=c;a=a+1|0}while((a|0)!=(K|0))}P=Cy(K<<2)|0;O=Cy(h)|0;if(v){h=k[L>>2]|0;m=0;while(1){n=O+(m<<3)|0;p[n>>3]=0.0;o=m+1|0;l=L+(o<<2)|0;a=k[l>>2]|0;if((h|0)<(a|0)){c=0.0;j=a;a=0}else{u=13;break}while(1){i=k[M+(h<<2)>>2]|0;if((m|0)==(i|0))i=j;else{c=+Pp(d,b,m,i);c=c+ +p[n>>3];p[n>>3]=c;i=k[l>>2]|0;a=a+1|0}h=h+1|0;if((h|0)>=(i|0)){h=i;break}else j=i}if((a|0)<=0){u=13;break}p[n>>3]=c/+(a|0);if((o|0)<(K|0))m=o;else break}if((u|0)==13)Wa(132085,132008,360,132053);if(v){IP(P|0,-1,K<<2|0)|0;u=0;a=0;do{k[P+(u<<2)>>2]=u;l=L+(u<<2)|0;i=k[l>>2]|0;o=u;u=u+1|0;n=L+(u<<2)|0;h=k[n>>2]|0;if((i|0)<(h|0)){do{j=P+(k[M+(i<<2)>>2]<<2)|0;if((k[j>>2]|0)!=(o|0)){k[j>>2]=o;h=k[n>>2]|0;a=a+1|0}i=i+1|0}while((i|0)<(h|0));i=k[l>>2]|0}if((i|0)<(h|0))do{m=k[M+(i<<2)>>2]|0;j=k[L+(m<<2)>>2]|0;m=L+(m+1<<2)|0;h=k[m>>2]|0;if((j|0)<(h|0))do{l=P+(k[M+(j<<2)>>2]<<2)|0;if((k[l>>2]|0)!=(o|0)){k[l>>2]=o;h=k[m>>2]|0;a=a+1|0}j=j+1|0}while((j|0)<(h|0));i=i+1|0}while((i|0)<(k[n>>2]|0))}while((u|0)!=(K|0))}else a=0}else a=0;h=a+K|0;I=lp(K,K,h,1,1)|0;H=f+4|0;k[H>>2]=I;h=lp(K,K,h,1,1)|0;I=f+8|0;k[I>>2]=h;a=k[H>>2]|0;if((h|0)==0|(a|0)==0){jq(f);f=0}else{E=k[a+20>>2]|0;F=k[a+24>>2]|0;C=k[a+28>>2]|0;G=k[h+28>>2]|0;D=k[h+20>>2]|0;B=k[h+24>>2]|0;k[D>>2]=0;k[E>>2]=0;do if(v){z=0;a=0;c=0.0;r=0.0;a:while(1){w=z+K|0;k[P+(z<<2)>>2]=w;n=L+(z<<2)|0;i=k[n>>2]|0;y=z;z=z+1|0;x=L+(z<<2)|0;h=k[x>>2]|0;if((i|0)<(h|0)){m=O+(y<<3)|0;s=0.0;q=0.0;do{l=k[M+(i<<2)>>2]|0;j=P+(l<<2)|0;if((k[j>>2]|0)!=(w|0)){k[j>>2]=w;k[F+(a<<2)>>2]=l;switch(e|0){case 0:{t=1.0;break}case 1:{t=(+p[m>>3]+ +p[O+(l<<3)>>3])*.5;break}case 2:{t=+Y(+(+Op(d,b,y,l)),.4);break}default:{u=37;break a}}T=-1.0/(t*t);p[C+(a<<3)>>3]=T;k[B+(a<<2)>>2]=l;S=t*T;h=G+(a<<3)|0;p[h>>3]=S;r=r+S*+Pp(d,b,y,l);S=+p[h>>3];h=k[x>>2]|0;s=s+S;q=q+T;a=a+1|0;c=c+t*S}i=i+1|0}while((i|0)<(h|0));i=k[n>>2]|0}else{s=0.0;q=0.0}if((i|0)<(h|0)){v=O+(y<<3)|0;do{n=k[M+(i<<2)>>2]|0;j=k[L+(n<<2)>>2]|0;o=L+(n+1<<2)|0;h=k[o>>2]|0;if((j|0)<(h|0)){u=O+(n<<3)|0;m=j;do{l=M+(m<<2)|0;j=P+(k[l>>2]<<2)|0;if((k[j>>2]|0)!=(w|0)){k[j>>2]=w;switch(e|0){case 0:{t=2.0;break}case 1:{t=(+p[v>>3]+ +p[u>>3]*2.0+ +p[O+(k[l>>2]<<3)>>3])*.5;break}case 2:{t=+Y(+(+Op(d,b,y,k[l>>2]|0)),.4);break}default:{u=49;break a}}k[F+(a<<2)>>2]=k[l>>2];S=-1.0/(t*t);p[C+(a<<3)>>3]=S;k[B+(a<<2)>>2]=k[l>>2];T=t*S;h=G+(a<<3)|0;p[h>>3]=T;r=r+T*+Pp(d,b,k[l>>2]|0,n);T=+p[h>>3];h=k[o>>2]|0;s=s+T;q=q+S;a=a+1|0;c=c+t*T}m=m+1|0}while((m|0)<(h|0))}i=i+1|0}while((i|0)<(k[x>>2]|0))}k[F+(a<<2)>>2]=y;h=J+(y<<3)|0;T=-(q*+p[h>>3]);p[h>>3]=T;p[C+(a<<3)>>3]=T-q;k[B+(a<<2)>>2]=y;p[G+(a<<3)>>3]=-s;h=a+1|0;k[E+(z<<2)>>2]=h;k[D+(z<<2)>>2]=h;if((z|0)>=(K|0)){g=r;u=54;break}else a=h}if((u|0)==37){QN(132092,29,1,k[24528]|0)|0;Wa(174497,132008,420,132053)}else if((u|0)==49){QN(132092,29,1,k[24528]|0)|0;Wa(174497,132008,462,132053)}else if((u|0)==54){g=g/c;if((a|0)>-1)a=0;else{N=h;break}do{d=G+(a<<3)|0;p[d>>3]=g*+p[d>>3];a=a+1|0}while((a|0)!=(h|0));N=h}}else{g=A;N=0}while(0);p[R>>3]=g;k[(k[H>>2]|0)+8>>2]=N;k[(k[I>>2]|0)+8>>2]=N;vP(P);vP(O);jp(Q)}return f|0}function jq(a){a=a|0;var b=0;if(a){b=k[a+4>>2]|0;if(b)jp(b);b=k[a+8>>2]|0;if(b)jp(b);b=k[a+12>>2]|0;if(b)vP(b);b=k[a+20>>2]|0;if(b)Nb[k[a+16>>2]&127](b);vP(a)}return}function kq(a,b,c,d,e,f){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0.0,j=0,l=0,m=0.0,n=0.0,o=0.0,q=0.0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0.0,J=0.0,K=0,L=0.0;H=k[a>>2]|0;if((mp(a,0)|0)!=0?(k[a+16>>2]|0)==1:0){j=ha(H,b)|0;h=(j|0)>0;if(h){g=0;i=0.0;do{q=+p[d+(g<<3)>>3];i=i+q*q;g=g+1|0}while((g|0)!=(j|0));if(!(i!=0.0|h^1)){g=0;do{q=+Hp()*72.0;p[d+(g<<3)>>3]=q;g=g+1|0}while((g|0)!=(j|0))}}C=k[a+20>>2]|0;D=k[a+24>>2]|0;E=k[a+28>>2]|0;g=Cy(56)|0;G=g+32|0;p[G>>3]=1.0;k[g+20>>2]=0;k[g+24>>2]=0;k[g>>2]=a;p[g+40>>3]=.01;F=~~+X(+(+(k[a>>2]|0)));k[g+48>>2]=F;F=Cy(H<<3)|0;k[g+12>>2]=F;l=(H|0)>0;if(l){h=0;do{p[F+(h<<3)>>3]=c;h=h+1|0}while((h|0)!=(H|0))}j=(k[a+8>>2]|0)+H|0;B=lp(H,H,j,1,1)|0;A=g+4|0;k[A>>2]=B;j=lp(H,H,j,1,1)|0;B=g+8|0;k[B>>2]=j;h=k[A>>2]|0;if(!((j|0)==0|(h|0)==0)){v=k[h+20>>2]|0;w=k[h+24>>2]|0;x=k[j+20>>2]|0;y=k[j+24>>2]|0;u=k[h+28>>2]|0;z=k[j+28>>2]|0;k[x>>2]=0;k[v>>2]=0;a:do if(l){t=0;h=0;c=0.0;i=0.0;b:while(1){a=k[C+(t<<2)>>2]|0;s=t;t=t+1|0;r=C+(t<<2)|0;j=k[r>>2]|0;if((a|0)<(j|0)){n=0.0;q=0.0;while(1){l=k[D+(a<<2)>>2]|0;if((l|0)==(s|0))m=q;else{k[w+(h<<2)>>2]=l;o=+p[E+(a<<3)>>3];c:do switch(e|0){case 2:{m=o*o;if(m==0.0){p[u+(h<<3)>>3]=-1.0e5;m=-1.0e5;break c}else{m=-1.0/m;p[u+(h<<3)>>3]=m;break c}}case 1:if(o*o==0.0){p[u+(h<<3)>>3]=-1.0e5;m=-1.0e5;break c}else{m=-1.0/o;p[u+(h<<3)>>3]=m;break c}case 0:{p[u+(h<<3)>>3]=-1.0;m=-1.0;break}default:break b}while(0);k[y+(h<<2)>>2]=l;L=o*m;j=z+(h<<3)|0;p[j>>3]=L;i=i+L*+Pp(d,b,s,l);L=+p[j>>3];j=k[r>>2]|0;n=n+L;m=q+m;h=h+1|0;c=c+o*L}a=a+1|0;if((a|0)>=(j|0))break;else q=m}}else{n=0.0;m=0.0}k[w+(h<<2)>>2]=s;r=F+(s<<3)|0;L=-(m*+p[r>>3]);p[r>>3]=L;p[u+(h<<3)>>3]=L-m;k[y+(h<<2)>>2]=s;p[z+(h<<3)>>3]=-n;h=h+1|0;k[v+(t<<2)>>2]=h;k[x+(t<<2)>>2]=h;if((t|0)>=(H|0)){K=h;I=c;J=i;break a}}Wa(174497,132008,593,132189)}else{K=0;I=0.0;J=0.0}while(0);i=(f|0)==0?1.0:J/I;if(i==0.0)g=0;else{if((K|0)>0){h=0;do{d=z+(h<<3)|0;p[d>>3]=i*+p[d>>3];h=h+1|0}while((h|0)!=(K|0))}p[G>>3]=i;k[(k[A>>2]|0)+8>>2]=K;k[(k[B>>2]|0)+8>>2]=K}}else{jq(g);g=0}return g|0}Wa(132122,132008,527,132189);return 0}function lq(a){a=a|0;jq(a);return}function mq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;return +(+nq(a,b,c,d,e))}function nq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;var f=0,g=0.0,h=0,i=0.0,j=0,l=0.0,m=0,n=0,o=0,q=0.0,s=0,t=0,u=0.0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0.0,F=0,G=0.0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,Y=0,Z=0;Z=r;r=r+16|0;U=Z+4|0;Y=Z;F=k[a+4>>2]|0;f=k[a+8>>2]|0;k[U>>2]=0;k[Y>>2]=0;Q=k[a+12>>2]|0;R=np(f)|0;S=k[F>>2]|0;T=ha(S,b)|0;n=T<<3;V=Cy(n)|0;W=(V|0)==0;if(!W?(N=ha(b<<3,S)|0,GP(V|0,c|0,N|0)|0,P=Cy(n)|0,k[Y>>2]=P,(P|0)!=0):0){O=k[f+20>>2]|0;P=k[f+24>>2]|0;J=k[f+28>>2]|0;K=k[R+28>>2]|0;L=k[F+28>>2]|0;M=a+24|0;a:do switch(k[M>>2]|0){case 1:{H=k[a+20>>2]|0;f=k[H+8>>2]|0;A=k[H+12>>2]|0;B=k[H+16>>2]|0;D=k[H+32>>2]|0;C=k[D+20>>2]|0;D=k[D+24>>2]|0;o=H+20|0;h=k[o>>2]|0;s=H+24|0;j=k[s>>2]|0;t=H+28|0;m=k[t>>2]|0;u=+p[H>>3];if((f&-3|0)==1){if(!h){if((j|0)!=0|(m|0)!=0)Wa(132226,132008,694,132243);if((A|0)>0){h=0;f=0;do{H=k[B+(h<<2)>>2]|0;G=+((k[C+(H+1<<2)>>2]|0)-(k[C+(H<<2)>>2]|0)|0)+1.0;f=~~(G*G)+f|0;h=h+1|0}while((h|0)!=(A|0))}else f=0;x=f<<2;y=Cy(x)|0;k[o>>2]=y;x=Cy(x)|0;k[s>>2]=x;m=Cy(f<<3)|0;k[t>>2]=m}else{y=h;x=j}if((A|0)>0){w=0;f=0;do{t=k[B+(w<<2)>>2]|0;v=C+(t<<2)|0;j=k[v>>2]|0;h=k[D+(j<<2)>>2]|0;j=k[D+(j+1<<2)>>2]|0;if((h|0)!=(j|0)){G=+Op(c,b,h,j);G=G*G;s=C+(t+1<<2)|0;q=+((k[s>>2]|0)-(k[v>>2]|0)|0);k[y+(f<<2)>>2]=t;k[x+(f<<2)>>2]=t;p[m+(f<<3)>>3]=u/G;l=u/(G*q);q=u/(G*(q*q));j=k[v>>2]|0;f=f+1|0;h=k[s>>2]|0;if((j|0)<(h|0)){i=-l;do{k[y+(f<<2)>>2]=t;k[x+(f<<2)>>2]=k[D+(j<<2)>>2];p[m+(f<<3)>>3]=i;j=j+1|0;f=f+1|0;h=k[s>>2]|0}while((j|0)<(h|0));j=k[v>>2]|0}if((j|0)<(h|0)){i=-l;do{o=k[D+(j<<2)>>2]|0;k[y+(f<<2)>>2]=o;k[x+(f<<2)>>2]=t;p[m+(f<<3)>>3]=i;n=k[v>>2]|0;f=f+1|0;h=k[s>>2]|0;if((n|0)<(h|0))do{h=k[D+(n<<2)>>2]|0;k[y+(f<<2)>>2]=o;k[x+(f<<2)>>2]=h;p[m+(f<<3)>>3]=q;n=n+1|0;f=f+1|0;h=k[s>>2]|0}while((n|0)<(h|0));j=j+1|0}while((j|0)<(h|0))}}w=w+1|0}while((w|0)!=(A|0))}else f=0;f=tp(f,S,S,y,x,m,1,8)|0;h=0}else{switch(f|0){case 2:case 4:break;default:{h=0;H=0;i=0.0;G=0.0;break a}}do if(!h)if((j|0)!=0|(m|0)!=0)Wa(132226,132008,736,132243);else{y=A<<2;x=Cy(y)|0;k[o>>2]=x;y=Cy(y)|0;k[s>>2]=y;z=Cy(A<<3)|0;k[t>>2]=z;break}else{x=h;y=j;z=m}while(0);h=Cy(N)|0;if((T|0)>0)IP(h|0,0,n|0)|0;if((A|0)>0){v=(b|0)>0;w=0;do{t=k[B+(w<<2)>>2]|0;f=C+(t<<2)|0;j=k[f>>2]|0;i=+Op(c,b,k[D+(j<<2)>>2]|0,k[D+(j+1<<2)>>2]|0);k[x+(w<<2)>>2]=t;k[y+(w<<2)>>2]=t;i=u/i;p[z+(w<<3)>>3]=i;w=w+1|0;f=k[f>>2]|0;j=k[C+(t+1<<2)>>2]|0;if((j|0)>(f|0)){m=ha(t,b)|0;o=f;do{if(v){n=ha(k[D+(o<<2)>>2]|0,b)|0;s=0;do{H=h+(s+m<<3)|0;p[H>>3]=+p[c+(s+n<<3)>>3]+ +p[H>>3];s=s+1|0}while((s|0)!=(b|0))}o=o+1|0}while((o|0)!=(j|0))}if(v){i=i/+(j-f|0);f=ha(t,b)|0;j=0;do{H=h+(j+f<<3)|0;p[H>>3]=i*+p[H>>3];j=j+1|0}while((j|0)!=(b|0))}}while((w|0)!=(A|0));f=A}else f=0;f=tp(f,S,S,x,y,z,1,8)|0}if(!f){H=0;i=0.0;G=0.0}else{H=f;F=op(F,f)|0;i=0.0;G=0.0}break}case 2:{D=k[a+20>>2]|0;h=0;H=0;i=+p[D+8>>3];G=+p[D>>3];break}default:{h=0;H=0;i=0.0;G=0.0}}while(0);b:do if((d|0)>0&e<1.0){D=a+40|0;A=a+48|0;B=(S|0)>0;C=(b|0)>0;E=G*i;x=b<<3;z=(Q|0)==0|B^1;y=1;i=1.0;c:while(1){if((k[M>>2]|0)==4){if(B){f=k[Y>>2]|0;j=0;do{if(C)IP(f+((ha(j,b)|0)<<3)|0,0,x|0)|0;j=j+1|0}while((j|0)!=(S|0))}}else{if(B){j=k[O>>2]|0;v=0;while(1){w=v+1|0;t=O+(w<<2)|0;f=k[t>>2]|0;if((j|0)<(f|0)){n=f;l=0.0;f=-1}else break c;while(1){s=P+(j<<2)|0;m=k[s>>2]|0;if((v|0)==(m|0)){m=n;f=j}else{q=+Pp(c,b,v,m);o=J+(j<<3)|0;u=+p[o>>3];if(u==0.0){p[K+(j<<3)>>3]=0.0;q=0.0}else{if(q==0.0){q=u/+p[L+(j<<3)>>3];if(C){n=0;do{u=q*((+Hp()+.0001)*.0001);m=k[s>>2]|0;a=c+((ha(m,b)|0)+n<<3)|0;p[a>>3]=+p[a>>3]+u;n=n+1|0}while((n|0)!=(b|0))}else m=k[s>>2]|0;q=+Pp(c,b,v,m);u=+p[o>>3]}q=u/q;p[K+(j<<3)>>3]=q}m=k[t>>2]|0;l=l+q}j=j+1|0;if((j|0)>=(m|0)){j=m;break}else n=m}if((f|0)<=-1)break c;p[K+(f<<3)>>3]=-l;if((w|0)<(S|0))v=w;else break}}up(R,0,c,0,Y,0,b)}if(!z){f=k[Y>>2]|0;n=0;do{if(C){j=Q+(n<<3)|0;m=ha(n,b)|0;o=0;do{w=o+m|0;a=f+(w<<3)|0;p[a>>3]=+p[j>>3]*+p[V+(w<<3)>>3]+ +p[a>>3];o=o+1|0}while((o|0)!=(b|0))}n=n+1|0}while((n|0)!=(S|0))}d:do switch(k[M>>2]|0){case 1:{if(B){f=k[Y>>2]|0;m=0;do{if(C){j=ha(m,b)|0;n=0;do{a=n+j|0;I=f+(a<<3)|0;p[I>>3]=+p[h+(a<<3)>>3]+ +p[I>>3];n=n+1|0}while((n|0)!=(b|0))}m=m+1|0}while((m|0)!=(S|0))}f=k[Y>>2]|0;l=+p[D>>3];j=k[A>>2]|0;I=99;break}case 2:{f=k[Y>>2]|0;if(B){n=0;do{o=n;n=n+1|0;if((n|0)<(S|0)){j=ha(o,b)|0;s=n;do{l=+Op(c,b,o,s);if(C){m=ha(s,b)|0;t=0;do{w=t+j|0;a=t+m|0;u=E*((+p[c+(w<<3)>>3]-+p[c+(a<<3)>>3])/l);w=f+(w<<3)|0;p[w>>3]=+p[w>>3]+u;a=f+(a<<3)|0;p[a>>3]=+p[a>>3]-u;t=t+1|0}while((t|0)!=(b|0))}s=s+1|0}while((s|0)!=(S|0))}}while((n|0)!=(S|0));f=k[Y>>2]|0;l=+p[D>>3];j=k[A>>2]|0;if((k[M>>2]|0)!=2){I=99;break d}}else{f=k[Y>>2]|0;l=+p[D>>3];j=k[A>>2]|0}w=uq(F,G)|0;a=xq(F,G)|0;+Aq(w,a,k[F>>2]|0,b,c,f,l,j,U);break}default:{f=k[Y>>2]|0;l=+p[D>>3];j=k[A>>2]|0;I=99}}while(0);if((I|0)==99){I=0;+Cq(F,b,c,f,l,j,0,U)}if(k[U>>2]|0){g=i;break b}m=k[Y>>2]|0;if(B){n=0;i=0.0;do{if(C){f=ha(n,b)|0;l=0.0;j=0;do{a=j+f|0;u=+p[m+(a<<3)>>3]-+p[c+(a<<3)>>3];l=l+u*u;j=j+1|0}while((j|0)!=(b|0))}else l=0.0;i=i+ +X(+l);n=n+1|0}while((n|0)!=(S|0))}else i=0.0;i=i/+X(+(+Lp(T,c,c)));GP(c|0,k[Y>>2]|0,N|0)|0;if((y|0)<(d|0)&i>e)y=y+1|0;else{g=i;break b}}Wa(132265,132008,897,132276)}else g=1.0;while(0);jp(R);if(H){jp(H);jp(F)}}else{jp(R);h=0;g=1.0}if(!W)vP(V);f=k[Y>>2]|0;if(f)vP(f);if(h)vP(h);r=Z;return +g}function oq(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=d|0;e=e|0;var f=0,g=0,h=0,i=0.0,j=0,l=0.0,m=0.0,n=0.0,o=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0.0,A=0.0,B=0,C=0,D=0,E=0.0,F=0.0;C=k[a>>2]|0;t=k[a+20>>2]|0;u=k[a+24>>2]|0;if(!(mp(a,0)|0))Wa(131972,132008,1036,132310);v=C<<3;D=Cy(v)|0;w=(C|0)>0;a:do if(w){g=k[t>>2]|0;q=0;while(1){r=D+(q<<3)|0;p[r>>3]=0.0;s=q+1|0;o=t+(s<<2)|0;f=k[o>>2]|0;if((g|0)<(f|0)){i=0.0;j=f;f=0}else break;while(1){h=k[u+(g<<2)>>2]|0;if((q|0)==(h|0))h=j;else{i=+Pp(d,b,q,h);i=i+ +p[r>>3];p[r>>3]=i;h=k[o>>2]|0;f=f+1|0}g=g+1|0;if((g|0)>=(h|0)){g=h;break}else j=h}if((f|0)<=0)break;p[r>>3]=i/+(f|0);if((s|0)<(C|0))q=s;else break a}Wa(132085,132008,1048,132310)}while(0);f=Cy(56)|0;y=f+32|0;p[y>>3]=1.0;k[f+20>>2]=0;k[f+24>>2]=0;p[f+40>>3]=.01;x=~~+X(+(+(k[a>>2]|0)));k[f+48>>2]=x;x=Cy(v)|0;k[f+12>>2]=x;do if(w){g=0;do{p[x+(g<<3)>>3]=c;g=g+1|0}while((g|0)!=(C|0));if((C|0)>2)if(!e){g=Eq(C,b,d)|0;break}else{g=Dq(C,b,d)|0;break}else B=18}else B=18;while(0);if((B|0)==18)g=np(a)|0;h=op(a,g)|0;a=f+4|0;k[a>>2]=h;jp(g);h=np(k[a>>2]|0)|0;k[f+8>>2]=h;g=k[a>>2]|0;if((h|0)==0|(g|0)==0){jq(f);f=0}else{v=k[g+20>>2]|0;u=k[g+24>>2]|0;t=k[g+28>>2]|0;e=k[h+28>>2]|0;b:do if(w){j=k[v>>2]|0;g=0;c=0.0;l=0.0;while(1){s=g+1|0;r=v+(s<<2)|0;h=k[r>>2]|0;if((j|0)<(h|0)){n=0.0;m=0.0;q=j;o=-1}else{B=24;break}while(1){j=k[u+(q<<2)>>2]|0;if((j|0)==(g|0))j=q;else{E=+Y(+(+Op(d,b,g,j)),.6);F=1.0/(E*E);p[t+(q<<3)>>3]=F;i=E*F;h=e+(q<<3)|0;p[h>>3]=i;l=l+i*+Pp(d,b,g,j);i=+p[h>>3];h=k[r>>2]|0;n=n+i;m=m+F;j=o;c=c+E*i}q=q+1|0;if((q|0)>=(h|0))break;else o=j}w=x+(g<<3)|0;i=-(m*+p[w>>3]);p[w>>3]=i;if((j|0)<=-1)break;p[t+(j<<3)>>3]=i-m;p[e+(j<<3)>>3]=-n;if((s|0)<(C|0)){j=h;g=s}else{z=c;A=l;break b}}if((B|0)==24){B=x+(g<<3)|0;p[B>>3]=-(+p[B>>3]*0.0)}Wa(132331,132008,1114,132310)}else{z=0.0;A=0.0}while(0);i=A/z;g=k[v+(C<<2)>>2]|0;if((g|0)>0){h=0;do{C=e+(h<<3)|0;p[C>>3]=i*+p[C>>3];h=h+1|0}while((h|0)<(g|0))}p[y>>3]=i;vP(D)}return f|0}function pq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0.0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0;x=k[a>>2]|0;A=k[a+20>>2]|0;B=k[a+24>>2]|0;if(!(mp(a,0)|0))Wa(131972,132008,1151,132342);C=hq(a,b,d)|0;w=k[C+28>>2]|0;a=Cy(8)|0;y=Cy(x<<2)|0;z=Cy(x<<3)|0;q=(x|0)>0;if(q){f=k[A>>2]|0;l=0;while(1){m=z+(l<<3)|0;p[m>>3]=0.0;n=l+1|0;i=A+(n<<2)|0;e=k[i>>2]|0;if((f|0)<(e|0)){j=0.0;h=e;e=0}else{o=11;break}while(1){g=k[B+(f<<2)>>2]|0;if((l|0)==(g|0))g=h;else{j=+Pp(d,b,l,g);j=j+ +p[m>>3];p[m>>3]=j;g=k[i>>2]|0;e=e+1|0}f=f+1|0;if((f|0)>=(g|0)){f=g;break}else h=g}if((e|0)<=0){o=11;break}p[m>>3]=j/+(e|0);if((n|0)<(x|0))l=n;else break}if((o|0)==11)Wa(132085,132008,1169,132342);if(q){IP(y|0,-1,x<<2|0)|0;b=0;e=0;do{k[y+(b<<2)>>2]=b;i=A+(b<<2)|0;g=k[i>>2]|0;n=b;b=b+1|0;m=A+(b<<2)|0;f=k[m>>2]|0;if((g|0)<(f|0)){do{h=y+(k[B+(g<<2)>>2]<<2)|0;if((k[h>>2]|0)!=(n|0)){k[h>>2]=n;f=k[m>>2]|0;e=e+1|0}g=g+1|0}while((g|0)<(f|0));g=k[i>>2]|0}if((g|0)<(f|0))do{l=k[B+(g<<2)>>2]|0;h=k[A+(l<<2)>>2]|0;l=A+(l+1<<2)|0;f=k[l>>2]|0;if((h|0)<(f|0))do{i=y+(k[B+(h<<2)>>2]<<2)|0;if((k[i>>2]|0)!=(n|0)){k[i>>2]=n;f=k[l>>2]|0;e=e+1|0}h=h+1|0}while((h|0)<(f|0));g=g+1|0}while((g|0)<(k[m>>2]|0))}while((b|0)!=(x|0))}else e=0}else e=0;v=lp(x,x,e,1,1)|0;k[a>>2]=v;if(!v){qq(a);a=0}else{s=k[v+20>>2]|0;t=k[v+24>>2]|0;u=k[v+28>>2]|0;k[s>>2]=0;if(q){r=0;e=0;do{o=r+x|0;k[y+(r<<2)>>2]=o;m=A+(r<<2)|0;g=k[m>>2]|0;n=r;r=r+1|0;q=A+(r<<2)|0;f=k[q>>2]|0;if((g|0)<(f|0)){l=z+(n<<3)|0;do{h=k[B+(g<<2)>>2]|0;i=y+(h<<2)|0;if((k[i>>2]|0)!=(o|0)){k[i>>2]=o;k[t+(e<<2)>>2]=h;f=u+(e<<3)|0;p[f>>3]=(+p[l>>3]+ +p[z+(h<<3)>>3])*.5;p[f>>3]=+p[w+(g<<3)>>3];f=k[q>>2]|0;e=e+1|0}g=g+1|0}while((g|0)<(f|0));g=k[m>>2]|0}if((g|0)<(f|0)){d=z+(n<<3)|0;do{f=k[B+(g<<2)>>2]|0;i=k[A+(f<<2)>>2]|0;b=A+(f+1<<2)|0;h=k[b>>2]|0;if((i|0)<(h|0)){m=z+(f<<3)|0;n=w+(g<<3)|0;do{f=B+(i<<2)|0;l=y+(k[f>>2]<<2)|0;if((k[l>>2]|0)!=(o|0)){k[l>>2]=o;k[t+(e<<2)>>2]=k[f>>2];h=u+(e<<3)|0;p[h>>3]=(+p[d>>3]+ +p[m>>3]*2.0+ +p[z+(k[f>>2]<<3)>>3])*.5;p[h>>3]=+p[n>>3]+ +p[w+(i<<3)>>3];h=k[b>>2]|0;e=e+1|0}i=i+1|0}while((i|0)<(h|0))}g=g+1|0}while((g|0)<(k[q>>2]|0))}k[s+(r<<2)>>2]=e}while((r|0)!=(x|0))}else e=0;k[v+8>>2]=e;A=Mk()|0;B=a+4|0;k[B>>2]=A;GP(A|0,c|0,168)|0;c=k[B>>2]|0;k[c+16>>2]=0;k[c+40>>2]=1;B=c+96|0;p[B>>3]=+p[B>>3]*.5;k[c+80>>2]=20;vP(y);vP(z);jp(C)}return a|0}function qq(a){a=a|0;var b=0;if(a){b=k[a>>2]|0;if(b)jp(b);b=k[a+4>>2]|0;if(b)Nk(b)}return}function rq(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0;f=r;r=r+16|0;g=f;k[g>>2]=0;Wk(d,b,k[a>>2]|0,k[a+4>>2]|0,c,e,g);if(!(k[g>>2]|0)){r=f;return}else Wa(132361,132008,1264,132367)}function sq(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0;k[f>>2]=0;switch(k[c+120>>2]|0){case 4:{f=pq(b,a,c,e)|0;rq(f,b,d,a,e);qq(f);break}case 5:{c=oq(b,a,0.0,e,1)|0;g=5;break}case 6:{c=oq(b,a,0.0,e,0)|0;g=5;break}case 1:{c=0;g=8;break}case 2:{c=1;g=8;break}case 3:{c=2;g=8;break}default:{}}if((g|0)==5){+nq(c,a,e,50,.001);jq(c)}else if((g|0)==8){g=iq(b,a,.05,e,c)|0;+nq(g,a,e,50,.001);jq(g)}return}function tq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0,g=0.0,h=0,i=0,j=0;j=r;r=r+16|0;f=j;k[f>>2]=c;h=k[a>>2]|0;c=k[h+8>>2]|0;g=+p[h>>3];h=k[c>>2]|0;vp(c,b,f,0);c=(h|0)>0;if(c){a=0;d=0.0;do{d=d+ +p[b+(a<<3)>>3];a=a+1|0}while((a|0)!=(h|0));if(c){e=+(h|0);a=k[f>>2]|0;c=0;do{f=a+(c<<3)|0;p[f>>3]=+p[f>>3]+g*(e*+p[b+(c<<3)>>3]-d);c=c+1|0}while((c|0)!=(h|0))}else i=3}else i=3;if((i|0)==3)a=k[f>>2]|0;r=j;return a|0}function uq(a,b){a=a|0;b=+b;var c=0,d=0;c=Cy(8)|0;d=Cy(16)|0;k[c>>2]=d;p[d>>3]=b;k[d+8>>2]=a;k[c+4>>2]=32;return c|0}function vq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=r;r=r+16|0;d=e;k[d>>2]=c;vp(k[a>>2]|0,b,d,0);r=e;return k[d>>2]|0}function wq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;a=k[a>>2]|0;d=~~+p[a>>3];if((d|0)>0){e=0;do{f=e;e=e+1|0;p[c+(f<<3)>>3]=+p[b+(f<<3)>>3]*+p[a+(e<<3)>>3]}while((e|0)!=(d|0))}return c|0}function xq(a,b){a=a|0;b=+b;var c=0,d=0,e=0,f=0,g=0,h=0.0,i=0,j=0,l=0,m=0,n=0.0,o=0,q=0.0;l=k[a>>2]|0;m=k[a+20>>2]|0;o=k[a+24>>2]|0;i=k[a+28>>2]|0;j=Cy(8)|0;g=Cy((l<<3)+8|0)|0;k[j>>2]=g;p[g>>3]=+(l|0);g=g+8|0;if((l|0)>0){q=+(l+-1|0);h=1.0/q;b=q*b;d=k[m>>2]|0;e=0;do{c=g+(e<<3)|0;p[c>>3]=h;f=e;e=e+1|0;a=d;d=k[m+(e<<2)>>2]|0;if((a|0)<(d|0))do{if((f|0)==(k[o+(a<<2)>>2]|0)?(n=+p[i+(a<<3)>>3],(n>=0.0?n:-n)>0.0):0)p[c>>3]=1.0/(b+n);a=a+1|0}while((a|0)<(d|0))}while((e|0)!=(l|0))}k[j+4>>2]=33;return j|0}function yq(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0.0,j=0,l=0,m=0;g=k[a>>2]|0;h=k[a+20>>2]|0;j=k[a+24>>2]|0;l=k[a+28>>2]|0;m=Cy(8)|0;b=Cy((k[a>>2]<<3)+8|0)|0;k[m>>2]=b;p[b>>3]=+(g|0);b=b+8|0;if((g|0)>0){d=k[h>>2]|0;e=0;do{c=b+(e<<3)|0;p[c>>3]=1.0;f=e;e=e+1|0;a=d;d=k[h+(e<<2)>>2]|0;if((a|0)<(d|0))do{if((f|0)==(k[j+(a<<2)>>2]|0)?(i=+p[l+(a<<3)>>3],(i>=0.0?i:-i)>0.0):0)p[c>>3]=1.0/i;a=a+1|0}while((a|0)<(d|0))}while((e|0)!=(g|0))}k[m+4>>2]=33;return m|0}function zq(a){a=a|0;var b=0;b=k[a>>2]|0;if(b)vP(b);vP(a);return}function Aq(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;h=h|0;i=i|0;var j=0.0,l=0.0,m=0,n=0,o=0,q=0,r=0.0,s=0,t=0,u=0,v=0,w=0.0,x=0,y=0,z=0,A=0,B=0.0,C=0,D=0,E=0,F=0;x=c<<3;E=Cy(x)|0;F=Cy(x)|0;if((d|0)>0){y=(c|0)>0;z=a+4|0;A=b+4|0;B=+(c|0);C=(h|0)>0;D=0;j=0.0;do{if(y){i=0;do{v=(ha(i,d)|0)+D|0;p[E+(i<<3)>>3]=+p[e+(v<<3)>>3];p[F+(i<<3)>>3]=+p[f+(v<<3)>>3];i=i+1|0}while((i|0)!=(c|0))}u=k[z>>2]|0;v=k[A>>2]|0;i=Cy(x)|0;m=Cy(x)|0;n=Cy(x)|0;o=Cy(x)|0;m=Kp(c,F,Tb[u&63](a,E,m)|0)|0;l=+X(+(+Lp(c,m,m)))/B;w=l*g;if(C&l>w){s=E;t=1;q=0;r=1.0;while(1){i=Tb[v&63](b,m,i)|0;l=r;r=+Lp(c,m,i);if((q|0)>0)n=Mp(c,i,n,r/l)|0;else GP(n|0,i|0,x|0)|0;o=Tb[u&63](a,n,o)|0;l=r/+Lp(c,n,o);s=Np(c,s,n,l)|0;m=Np(c,m,o,-l)|0;l=+X(+(+Lp(c,m,m)))/B;if(!((t|0)<(h|0)&l>w))break;else{q=t;t=t+1|0}}}vP(i);vP(m);vP(n);vP(o);j=j+l;if(y){i=0;do{v=f+((ha(i,d)|0)+D<<3)|0;p[v>>3]=+p[E+(i<<3)>>3];i=i+1|0}while((i|0)!=(c|0))}D=D+1|0}while((D|0)!=(d|0))}else j=0.0;vP(E);vP(F);return +j}function Bq(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0.0,h=0.0,i=0.0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0;E=r;r=r+16|0;D=E;w=k[a+4>>2]|0;x=w<<3;y=Cy(x)|0;z=Cy(x)|0;A=Cy(x)|0;B=k[a+20>>2]|0;C=k[a+24>>2]|0;q=k[a+28>>2]|0;if((b|0)>0){s=(w|0)>0;t=(e|0)>0;u=k[24528]|0;v=0;do{if(s){f=0;do{o=(ha(f,b)|0)+v|0;p[y+(f<<3)>>3]=+p[c+(o<<3)>>3];p[A+(f<<3)>>3]=+p[d+(o<<3)>>3];f=f+1|0}while((f|0)!=(w|0))}if(t){o=0;do{if(s){m=0;do{j=k[B+(m<<2)>>2]|0;n=m;m=m+1|0;l=k[B+(m<<2)>>2]|0;if((l|0)>(j|0)){h=0.0;a=j;g=0.0;do{f=k[C+(a<<2)>>2]|0;i=+p[q+(a<<3)>>3];if((f|0)==(n|0))h=i;else g=g+i*+p[y+(f<<3)>>3];a=a+1|0}while((a|0)<(l|0));if(g==0.0)F=13}else{h=0.0;g=0.0;F=13}if((F|0)==13){F=0;k[D>>2]=l-j;FN(u,132389,D)|0}p[z+(n<<3)>>3]=(+p[A+(n<<3)>>3]-g)/h}while((m|0)!=(w|0))}GP(y|0,z|0,x|0)|0;o=o+1|0}while((o|0)!=(e|0))}if(s){f=0;do{o=d+((ha(f,b)|0)+v<<3)|0;p[o>>3]=+p[y+(f<<3)>>3];f=f+1|0}while((f|0)!=(w|0))}v=v+1|0}while((v|0)!=(b|0))}vP(y);vP(z);vP(A);r=E;return d|0}function Cq(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=f|0;g=g|0;h=h|0;var i=0;i=k[a>>2]|0;k[h>>2]=0;switch(g|0){case 0:{g=Cy(8)|0;k[g>>2]=a;k[g+4>>2]=34;h=yq(a)|0;e=+Aq(g,h,i,b,c,d,e,f,0);if(g)vP(g);zq(h);break}case 1:{Bq(a,b,c,d,f,0)|0;e=0.0;break}default:e=0.0}return +e}function Dq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0;o=r;r=r+32|0;n=o;i=o+20|0;j=o+16|0;l=o+12|0;m=o+8|0;p[n>>3]=1.0;g=a<<3;f=Cy(g)|0;g=Cy(g)|0;k[i>>2]=0;h=(a|0)>0;if(h){b=(a|0)>1;d=0;do{p[f+(d<<3)>>3]=+p[c+(d<<1<<3)>>3];p[g+(d<<3)>>3]=+p[c+((d<<1|1)<<3)>>3];d=d+1|0}while((d|0)<(a|0));k[i>>2]=b?a:1;if((a|0)>2)c=Wl(f,g,a,m)|0;else e=6}else e=6;if((e|0)==6){k[m>>2]=0;c=0}b=lp(a,a,1,1,2)|0;k[i>>2]=0;if((k[m>>2]|0)>0){d=0;do{e=d<<1;k[j>>2]=k[c+(e<<2)>>2];k[l>>2]=k[c+((e|1)<<2)>>2];zp(b,1,j,l,n)|0;d=(k[i>>2]|0)+1|0;k[i>>2]=d}while((d|0)<(k[m>>2]|0))}if((a|0)==2){k[j>>2]=0;k[l>>2]=1;zp(b,1,j,l,n)|0}k[i>>2]=0;if(h)do{zp(b,1,i,i,n)|0;m=(k[i>>2]|0)+1|0;k[i>>2]=m}while((m|0)<(a|0));n=sp(b)|0;jp(b);a=kp(n,0)|0;jp(n);vP(c);vP(f);vP(g);r=o;return a|0}function Eq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0;l=r;r=r+16|0;i=l+8|0;j=l;p[j>>3]=1.0;g=a<<3;f=Cy(g)|0;g=Cy(g)|0;k[i>>2]=0;h=(a|0)>0;if(h){d=(a|0)>1;e=0;do{m=c+((ha(e,b)|0)<<3)|0;p[f+(e<<3)>>3]=+p[m>>3];m=c+((ha(e,b)|0)+1<<3)|0;p[g+(e<<3)>>3]=+p[m>>3];e=e+1|0}while((e|0)<(a|0));k[i>>2]=d?a:1}b=Xl(f,g,a,0)|0;c=lp(a,a,1,1,2)|0;k[i>>2]=0;if(h){d=0;do{if((k[b+(d*12|0)>>2]|0)>1){e=1;do{zp(c,1,i,(k[b+(d*12|0)+4>>2]|0)+(e<<2)|0,j)|0;e=e+1|0;d=k[i>>2]|0}while((e|0)<(k[b+(d*12|0)>>2]|0))}d=d+1|0;k[i>>2]=d}while((d|0)<(a|0));k[i>>2]=0;if(h)do{zp(c,1,i,i,j)|0;m=(k[i>>2]|0)+1|0;k[i>>2]=m}while((m|0)<(a|0))}else k[i>>2]=0;m=kp(sp(c)|0,0)|0;jp(c);vP(f);vP(g);Yl(b);r=l;return m|0}function Fq(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,q=0,s=0.0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;I=r;r=r+48|0;z=I+16|0;A=I+32|0;y=I;e=Cy(c<<4)|0;B=b<<2;C=Cy(B)|0;D=Cy(B)|0;E=Cy(B)|0;F=Cy(B)|0;G=(b|0)>0;if(G){f=0;do{k[E+(f<<2)>>2]=f;f=f+1|0}while((f|0)!=(b|0));f=b+-1|0;Zm(a,E,0,f);g=0;do{k[F+(k[E+(g<<2)>>2]<<2)>>2]=g;g=g+1|0}while((g|0)!=(b|0));t=f}else{t=b+-1|0;Zm(a,E,0,t)}q=A+4|0;k[q>>2]=t;k[A+8>>2]=t;g=Cy(t<<4)|0;k[A>>2]=g;h=(b|0)>1;if(h){f=0;do{l=k[E+(f<<2)>>2]|0;n=f;f=f+1|0;m=k[E+(f<<2)>>2]|0;s=+p[a+(m<<3)>>3]-+p[a+(l<<3)>>3];k[g+(n<<4)>>2]=l;k[g+(n<<4)+4>>2]=m;p[g+(n<<4)+8>>3]=s}while((f|0)!=(t|0))}if((t|0)>-2){f=(t|0)/2|0;while(1){Gq(A,f);if((f|0)>0)f=f+-1|0;else break}}if(h){f=1;do{k[C+(k[E+(f<<2)>>2]<<2)>>2]=k[E+(f+-1<<2)>>2];f=f+1|0}while((f|0)!=(b|0));f=0;do{n=f;f=f+1|0;k[D+(k[E+(n<<2)>>2]<<2)>>2]=k[E+(f<<2)>>2]}while((f|0)!=(t|0))}if((c|0)>0){m=y+4|0;n=y+8|0;a:do if(!t)f=0;else{g=t;h=0;f=c;while(1){J=k[A>>2]|0;j=k[J>>2]|0;l=k[J+4>>2]|0;s=+p[J+8>>3];i=g+-1|0;g=J+(i<<4)|0;k[J>>2]=k[g>>2];k[J+4>>2]=k[g+4>>2];k[J+8>>2]=k[g+8>>2];k[J+12>>2]=k[g+12>>2];k[q>>2]=i;Gq(A,0);if((h|0)<(f|0))i=f;else{e=xP(e,f<<5)|0;i=f<<1}f=h+1|0;k[e+(h<<4)>>2]=j;k[e+(h<<4)+4>>2]=l;p[e+(h<<4)+8>>3]=s;g=k[F+(j<<2)>>2]|0;h=k[F+(l<<2)>>2]|0;if((g|0)>0?(u=k[E+(g+-1<<2)>>2]|0,v=D+(u<<2)|0,(k[F+(k[v>>2]<<2)>>2]|0)<(h|0)):0){k[y>>2]=u;k[m>>2]=l;p[n>>3]=+p[a+(l<<3)>>3]-+p[a+(u<<3)>>3];k[z>>2]=k[y>>2];k[z+4>>2]=k[y+4>>2];k[z+8>>2]=k[y+8>>2];k[z+12>>2]=k[y+12>>2];Hq(A,z);k[v>>2]=l;k[C+(l<<2)>>2]=u}if((h|0)<(t|0)?(w=k[E+(h+1<<2)>>2]|0,x=C+(w<<2)|0,(k[F+(k[x>>2]<<2)>>2]|0)>(g|0)):0){k[y>>2]=j;k[m>>2]=w;p[n>>3]=+p[a+(w<<3)>>3]-+p[a+(j<<3)>>3];k[z>>2]=k[y>>2];k[z+4>>2]=k[y+4>>2];k[z+8>>2]=k[y+8>>2];k[z+12>>2]=k[y+12>>2];Hq(A,z);k[x>>2]=j;k[D+(j<<2)>>2]=w}if((f|0)>=(c|0))break a;g=k[q>>2]|0;if(!g)break;else{h=f;f=i}}}while(0);g=k[A>>2]|0;j=f;q=e}else{j=0;q=e}vP(C);vP(D);vP(E);vP(F);vP(g);i=Cy(B)|0;h=(j<<1)+b|0;f=h<<2;g=Cy(f)|0;f=Cy(f)|0;if(G){e=0;do{k[i+(e<<2)>>2]=1;e=e+1|0}while((e|0)!=(b|0))}if((j|0)>0){e=0;do{J=k[q+(e<<4)+4>>2]|0;F=i+(k[q+(e<<4)>>2]<<2)|0;k[F>>2]=(k[F>>2]|0)+1;J=i+(J<<2)|0;k[J>>2]=(k[J>>2]|0)+1;e=e+1|0}while((e|0)!=(j|0))}if((h|0)>0){e=0;do{o[f+(e<<2)>>2]=1.0;e=e+1|0}while((e|0)!=(h|0))}n=Cy(b*20|0)|0;k[d>>2]=n;if(G){h=0;while(1){k[n+(h*20|0)>>2]=1;k[n+(h*20|0)+8>>2]=f;k[n+(h*20|0)+4>>2]=g;k[g>>2]=h;o[f>>2]=0.0;e=k[i+(h<<2)>>2]|0;h=h+1|0;if((h|0)==(b|0))break;else{g=g+(e<<2)|0;f=f+(e<<2)|0}}}vP(i);if(j){m=n+8|0;e=j;do{e=e+-1|0;f=k[q+(e<<4)>>2]|0;g=k[q+(e<<4)+4>>2]|0;h=n+(f*20|0)|0;i=k[h>>2]|0;j=k[n+(f*20|0)+4>>2]|0;b:do if((i|0)>0){l=0;while(1){if((k[j+(l<<2)>>2]|0)==(g|0))break b;l=l+1|0;if((l|0)>=(i|0)){H=41;break}}}else H=41;while(0);if((H|0)==41?(H=0,k[h>>2]=i+1,k[j+(i<<2)>>2]=g,b=n+(g*20|0)|0,J=k[b>>2]|0,k[b>>2]=J+1,k[(k[n+(g*20|0)+4>>2]|0)+(J<<2)>>2]=f,(k[m>>2]|0)!=0):0){J=k[n+(f*20|0)+8>>2]|0;o[J>>2]=+o[J>>2]+-1.0;J=k[n+(g*20|0)+8>>2]|0;o[J>>2]=+o[J>>2]+-1.0}}while((e|0)!=0)}vP(q);r=I;return}function Gq(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,f=0.0,g=0,h=0,i=0,j=0,l=0;j=r;r=r+16|0;h=j;g=a+4|0;while(1){d=b<<1;c=d|1;if((d|0)<(k[g>>2]|0)){l=k[a>>2]|0;e=+p[l+(d<<4)+8>>3];f=+p[l+(b<<4)+8>>3];if(!(e<f))if(!(e==f?((aN()|0)&1|0)!=0:0))i=6}else i=6;if((i|0)==6){i=0;d=b}do if((c|0)<(k[g>>2]|0)){l=k[a>>2]|0;e=+p[l+(c<<4)+8>>3];f=+p[l+(d<<4)+8>>3];if(!(e<f)){if(!(e==f)){c=d;break}if(!((aN()|0)&1)){c=d;break}}}else c=d;while(0);if((c|0)==(b|0))break;d=k[a>>2]|0;l=d+(c<<4)|0;k[h>>2]=k[l>>2];k[h+4>>2]=k[l+4>>2];k[h+8>>2]=k[l+8>>2];k[h+12>>2]=k[l+12>>2];d=d+(b<<4)|0;k[l>>2]=k[d>>2];k[l+4>>2]=k[d+4>>2];k[l+8>>2]=k[d+8>>2];k[l+12>>2]=k[d+12>>2];l=(k[a>>2]|0)+(b<<4)|0;k[l>>2]=k[h>>2];k[l+4>>2]=k[h+4>>2];k[l+8>>2]=k[h+8>>2];k[l+12>>2]=k[h+12>>2];b=c}r=j;return}function Hq(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0.0,f=0,g=0,h=0,i=0,j=0,l=0;l=r;r=r+16|0;j=l;g=a+4|0;h=k[g>>2]|0;c=a+8|0;if((h|0)==(k[c>>2]|0)){k[c>>2]=h<<1;c=xP(k[a>>2]|0,h<<5)|0;k[a>>2]=c;i=a;f=k[g>>2]|0}else{i=a;f=h;c=k[a>>2]|0}k[g>>2]=f+1;g=c+(h<<4)|0;k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];a:do if((h|0)>0){f=h;do{c=k[i>>2]|0;d=+p[c+(f<<4)+8>>3];a=f;f=(f|0)/2|0;e=+p[c+(f<<4)+8>>3];if(!(d<e)){if(!(d==e))break a;if(!((aN()|0)&1))break a;c=k[i>>2]|0}b=c+(a<<4)|0;k[j>>2]=k[b>>2];k[j+4>>2]=k[b+4>>2];k[j+8>>2]=k[b+8>>2];k[j+12>>2]=k[b+12>>2];h=c+(f<<4)|0;k[b>>2]=k[h>>2];k[b+4>>2]=k[h+4>>2];k[b+8>>2]=k[h+8>>2];k[b+12>>2]=k[h+12>>2];b=(k[i>>2]|0)+(f<<4)|0;k[b>>2]=k[j>>2];k[b+4>>2]=k[j+4>>2];k[b+8>>2]=k[j+8>>2];k[b+12>>2]=k[j+12>>2]}while((a|0)>1)}while(0);r=l;return}function Iq(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=+c;d=+d;e=e|0;f=f|0;g=g|0;h=h|0;var i=0.0,j=0,l=0,m=0,n=0;m=(e|0)!=0;if(!m){e=Cy(b<<3)|0;if(!(Vn(a,b,e,b)|0))n=3;else{a=1;n=15}}else n=3;if((n|0)==3){l=By(b<<2)|0;k[f>>2]=l;if((b|0)>0){a=0;do{k[l+(a<<2)>>2]=a;a=a+1|0}while((a|0)!=(b|0))}j=b+-1|0;Zm(e,l,0,j);i=+p[e+(k[l>>2]<<3)>>3];d=(+p[e+(k[l+(j<<2)>>2]<<3)>>3]-i)*d/+(j|0);c=d<c?c:d;j=(b|0)>1;if(j){f=1;a=0;do{d=i;i=+p[e+(k[l+(f<<2)>>2]<<3)>>3];a=(i-d>c&1)+a|0;f=f+1|0}while((f|0)!=(b|0));k[h>>2]=a;if(a){h=Cy(a<<2)|0;k[g>>2]=h;if(j){a=0;f=1;do{if(+p[e+(k[l+(f<<2)>>2]<<3)>>3]-+p[e+(k[l+(f+-1<<2)>>2]<<3)>>3]>c){k[h+(a<<2)>>2]=f;a=a+1|0}f=f+1|0}while((f|0)!=(b|0))}}else n=9}else{k[h>>2]=0;n=9}if((n|0)==9){l=Cy(4)|0;k[g>>2]=l;k[l>>2]=b}if(m)a=0;else{a=0;n=15}}if((n|0)==15)vP(e);return a|0}function Jq(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0.0,g=0,h=0,i=0,j=0,l=0.0,m=0,n=0,o=0,q=0,r=0;c=k[12789]|0;if(c)wj(c);c=vj(b,b,0.0)|0;k[12789]=c;c=k[12790]|0;if(c)vP(c);c=By(b<<2)|0;k[12790]=c;c=k[12791]|0;if(c)vP(c);o=By(b<<3)|0;k[12791]=o;a:do if((b|0)>0){h=k[12790]|0;i=k[12789]|0;c=0;do{d=k[a+(c<<2)>>2]|0;e=k[i+(c<<2)>>2]|0;f=0.0;g=0;do{l=+p[d+(g<<3)>>3];p[e+(g<<3)>>3]=l;l=+W(+l);f=f<l?l:f;g=g+1|0}while((g|0)!=(b|0));if(!(f!=0.0)){q=17;break}p[o+(c<<3)>>3]=1.0/f;k[h+(c<<2)>>2]=c;c=c+1|0}while((c|0)<(b|0));if((q|0)==17){p[o+(c<<3)>>3]=0.0;c=0;break}c=b+-1|0;if((b|0)>1){e=k[12790]|0;d=k[12789]|0;i=0;g=0;while(1){if((i|0)<(b|0)){f=0.0;h=i}else{c=0;break a}do{n=k[e+(h<<2)>>2]|0;l=+W(+(+p[(k[d+(n<<2)>>2]|0)+(i<<3)>>3]));l=l*+p[o+(n<<3)>>3];n=f<l;g=n?h:g;f=n?l:f;h=h+1|0}while((h|0)!=(b|0));n=g;if(f==0.0){c=0;break a}g=e+(i<<2)|0;if((n|0)!=(i|0)){j=k[g>>2]|0;m=e+(n<<2)|0;k[g>>2]=k[m>>2];k[m>>2]=j}j=k[d+(k[g>>2]<<2)>>2]|0;l=+p[j+(i<<3)>>3];m=i;g=i+1|0;if((g|0)<(b|0)){i=g;do{h=k[d+(k[e+(i<<2)>>2]<<2)>>2]|0;a=h+(m<<3)|0;f=+p[a>>3]/l;p[a>>3]=f;if(f!=0.0){a=g;do{r=h+(a<<3)|0;p[r>>3]=+p[r>>3]-f*+p[j+(a<<3)>>3];a=a+1|0}while((a|0)!=(b|0))}i=i+1|0}while((i|0)!=(b|0))}if((g|0)<(c|0)){i=g;g=n}else{q=28;break}}}else q=12}else{c=b+-1|0;q=12}while(0);if((q|0)==12){e=k[12790]|0;d=k[12789]|0;q=28}if((q|0)==28)c=+p[(k[d+(k[e+(c<<2)>>2]<<2)>>2]|0)+(c<<3)>>3]!=0.0&1;return c|0}function Kq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0,g=0,h=0,i=0,j=0,l=0;g=(c|0)>0;if(g){h=k[12790]|0;i=k[12789]|0;l=0;do{j=k[h+(l<<2)>>2]|0;if((l|0)>0){e=k[i+(j<<2)>>2]|0;d=0.0;f=0;do{d=d+ +p[e+(f<<3)>>3]*+p[a+(f<<3)>>3];f=f+1|0}while((f|0)!=(l|0))}else d=0.0;p[a+(l<<3)>>3]=+p[b+(j<<3)>>3]-d;l=l+1|0}while((l|0)!=(c|0));if(g){g=k[12790]|0;h=k[12789]|0;i=c;do{j=i;i=i+-1|0;f=k[h+(k[g+(i<<2)>>2]<<2)>>2]|0;if((j|0)<(c|0)){d=0.0;e=j;do{d=d+ +p[f+(e<<3)>>3]*+p[a+(e<<3)>>3];e=e+1|0}while((e|0)!=(c|0))}else d=0.0;l=a+(i<<3)|0;p[l>>3]=(+p[l>>3]-d)/+p[f+(i<<3)>>3]}while((j|0)>1)}}return}function Lq(a){a=a|0;var b=0;b=Cy(8)|0;k[b>>2]=a;k[b+4>>2]=0;return b|0}function Mq(a,b){a=a|0;b=b|0;var c=0,d=0;if(a)do{c=a;a=k[a+4>>2]|0;d=k[c>>2]|0;if(d)Nb[b&127](d);vP(c)}while((a|0)!=0);return}function Nq(a,b){a=a|0;b=b|0;var c=0;c=Cy(8)|0;k[c>>2]=b;k[c+4>>2]=a;return c|0}function Oq(a){a=a|0;return k[a>>2]|0}function Pq(a){a=a|0;return k[a+4>>2]|0}function Qq(a){a=a|0;var b=0;b=Cy(12)|0;k[b>>2]=a;k[b+4>>2]=0;k[b+8>>2]=0;return b|0}function Rq(a,b){a=a|0;b=b|0;var c=0,d=0;if(a)do{c=a;a=k[a+4>>2]|0;d=k[c>>2]|0;if(d)Nb[b&127](d);vP(c)}while((a|0)!=0);return}function Sq(a,b){a=a|0;b=b|0;var c=0;c=Cy(12)|0;k[c>>2]=b;b=c+4|0;k[b>>2]=0;k[c+8>>2]=0;if(a){k[b>>2]=a;k[a+8>>2]=c}return c|0}function Tq(a){a=a|0;return k[a>>2]|0}function Uq(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;do if(a){d=k[a+4>>2]|0;e=k[a+8>>2]|0;f=k[a>>2]|0;if(f)Nb[b&127](f);vP(a);if(d)k[d+8>>2]=e;if(!e){k[c>>2]=d;break}else{k[e+4>>2]=d;break}}while(0);return}function Vq(a){a=a|0;k[a>>2]=0;k[a+4>>2]=0;return}function Wq(a){a=a|0;var b=0;b=By(64)|0;k[b+36>>2]=0;k[b+40>>2]=0;k[b+8>>2]=a;return b|0}function Xq(a){a=a|0;if(a){ir(k[a+32>>2]|0);vP(a)}return}function Yq(a){a=a|0;return Zs(k[a+8>>2]|0)|0}function Zq(a,b){a=a|0;b=b|0;var c=0,d=0;k[b+4>>2]=0;c=a+4|0;d=k[c>>2]|0;if(!d)k[a>>2]=b;else k[d+4>>2]=b;k[c>>2]=b;return}function _q(a,b){a=a|0;b=b|0;var c=0;c=k[a>>2]|0;if(!c){k[a>>2]=b;k[a+4>>2]=b}else{k[b+4>>2]=c;k[a>>2]=b}return}function $q(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0;m=r;r=r+16|0;h=m;g=m+8|0;d=k[b+24>>2]|0;if((d|0)!=0?(e=Qt(a,d,0)|0,(e|0)!=0):0)c=e;else f=3;a:do if((f|0)==3){d=b+20|0;if((k[d>>2]|0)!=0?(c=Kt(a)|0,(c|0)!=0):0)do{if((nB(k[k[(k[c+8>>2]|0)+112>>2]>>2]|0,k[d>>2]|0,0)|0)<<24>>24)break a;c=Lt(a,c)|0}while((c|0)!=0);c=Kt(a)|0}while(0);if(i[137280]|0){l=k[24528]|0;j=ht(c)|0;k[h>>2]=j;FN(l,132400,h)|0}k[g+4>>2]=0;k[g>>2]=0;br(a,c,b,1,g);l=k[b>>2]|0;c=k[l+4>>2]|0;if(c)do{j=k[c+8>>2]|0;e=Kt(j)|0;d=k[(k[e+8>>2]|0)+112>>2]|0;f=k[d+16+4>>2]|0;d=k[d+8>>2]|0;a=Lt(j,e)|0;if(a)do{h=k[(k[a+8>>2]|0)+112>>2]|0;g=k[h+16+4>>2]|0;if((g|0)<(f|0)){e=a;f=g;d=k[h+8>>2]|0}a=Lt(j,a)|0}while((a|0)!=0);h=k[(k[d+8>>2]|0)+112>>2]|0;j=h+4|0;k[j>>2]=k[j>>2]|8;k[c>>2]=e;j=c;c=k[c+4>>2]|0;Zq((k[h+12>>2]|0)+36|0,j)}while((c|0)!=0);Vq(b);r=m;return l|0}function ar(a){a=a|0;var b=0,c=0;b=k[a+36>>2]|0;if(b)do{c=b;b=k[b+4>>2]|0;ar(c)}while((b|0)!=0);Xq(a);return}function br(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0;o=c+8|0;n=k[o>>2]|0;k[o>>2]=n+1;o=b+8|0;f=k[(k[o>>2]|0)+112>>2]|0;k[f+16+4>>2]=n;k[f+24>>2]=n;f=Js(a,b)|0;a:do if(f){m=e+4|0;n=(d|0)==0;b:while(1){g=k[f>>2]&3;h=k[((g|0)==2?f:f+-32|0)+28>>2]|0;if((h|0)==(b|0)){h=k[((g|0)==3?f:f+32|0)+28>>2]|0;g=k[(k[f+8>>2]|0)+120>>2]|0;if(!(k[g>>2]|0))k[g>>2]=-1}else{g=k[(k[f+8>>2]|0)+120>>2]|0;if(!(k[g>>2]|0))k[g>>2]=1}i=h+8|0;j=k[(k[i>>2]|0)+112>>2]|0;l=k[j+16+4>>2]|0;do if(!l){k[j+8>>2]=b;k[g+4>>2]=k[e>>2];k[e>>2]=f;k[m>>2]=(k[m>>2]|0)+1;br(a,h,c,0,e);l=k[(k[o>>2]|0)+112>>2]|0;h=l+24|0;g=k[h>>2]|0;j=(k[(k[i>>2]|0)+112>>2]|0)+24|0;i=k[j>>2]|0;k[h>>2]=(g|0)<(i|0)?g:i;if((k[j>>2]|0)>=(k[l+16+4>>2]|0)){g=0;do{j=k[e>>2]|0;if(!j){f=13;break b}h=k[m>>2]|0;if((h|0)<=0){f=12;break b}l=k[(k[j+8>>2]|0)+120>>2]|0;k[e>>2]=k[l+4>>2];k[m>>2]=h+-1;i=k[j>>2]&3;i=k[((k[l>>2]|0)==1?((i|0)==2?j:j+-32|0):(i|0)==3?j:j+32|0)+28>>2]|0;h=i+8|0;if(!(k[(k[(k[h>>2]|0)+112>>2]|0)+12>>2]|0)){if(!g)g=cr(a,c)|0;Pt(k[g+8>>2]|0,i,1)|0;k[(k[(k[h>>2]|0)+112>>2]|0)+12>>2]=g}}while((j|0)!=(f|0));if(g){if((k[(k[(k[o>>2]|0)+112>>2]|0)+12>>2]|0)==0?(Yq(g)|0)>1:0){Pt(k[g+8>>2]|0,b,1)|0;k[(k[(k[o>>2]|0)+112>>2]|0)+12>>2]=g}if(!n?(k[(k[(k[o>>2]|0)+112>>2]|0)+12>>2]|0)==(g|0):0){_q(c,g);break}Zq(c,g)}}}else{g=k[(k[o>>2]|0)+112>>2]|0;if((k[g+8>>2]|0)!=(h|0)){j=g+24|0;i=k[j>>2]|0;k[j>>2]=(i|0)<(l|0)?i:l}}while(0);f=Ks(a,f,b)|0;if(!f)break a}if((f|0)==12)Wa(132411,132421,61,132433);else if((f|0)==13)Wa(174497,132421,65,132433)}while(0);if((d|0)!=0?(k[(k[(k[o>>2]|0)+112>>2]|0)+12>>2]|0)==0:0){d=cr(a,c)|0;Pt(k[d+8>>2]|0,b,1)|0;k[(k[(k[o>>2]|0)+112>>2]|0)+12>>2]=d;_q(c,d)}return}function cr(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=r;r=r+144|0;e=c;d=c+8|0;f=b+12|0;b=k[f>>2]|0;k[f>>2]=b+1;k[e>>2]=b;TN(d,132437,e)|0;b=Hu(a,d,1)|0;qu(b,173447,280,1)|0;b=Wq(b)|0;r=c;return b|0}function dr(a,b,c){a=a|0;b=b|0;c=c|0;er(a,b,+p[c+32>>3]);return}function er(a,b,c){a=a|0;b=b|0;c=+c;var d=0.0,e=0,f=0,g=0.0,h=0.0,i=0,j=0.0,l=0,m=0,n=0,o=0.0,q=0.0,r=0.0,s=0,t=0.0,u=0,v=0.0,w=0,x=0.0,y=0.0,z=0.0,A=0.0,B=0,C=0.0,D=0,E=0,F=0,G=0,H=0.0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0.0,W=0.0;i=b+36|0;e=k[i>>2]|0;if(!e)f=0;else{f=0;do{er(a,e,c);f=f+1|0;e=k[e+4>>2]|0}while((e|0)!=0)}e=pr(a,b,c)|0;k[b+32>>2]=e;R=nr(e)|0;if((f|0)>0){P=By(f*56|0)|0;a=k[i>>2]|0;O=b+16|0;g=+p[O>>3];w=k[b>>2]|0;o=6.283185307179586/+(R|0);e=k[e>>2]|0;a:do if(!e){j=-1.0;h=-1.0;d=0.0}else{N=(a|0)==0;j=g+c;u=0;d=0.0;i=0;do{s=k[e>>2]|0;if(k[(k[(k[s+8>>2]|0)+112>>2]|0)+4>>2]&8){k[P+(i*56|0)>>2]=s;p[P+(i*56|0)+8>>3]=o*+(u|0);if(N){l=0;h=0.0;d=0.0}else{n=a;l=0;h=0.0;d=0.0;do{m=k[n>>2]|0;if(!m)m=0;else m=k[(k[(k[m+8>>2]|0)+112>>2]|0)+8>>2]|0;if((m|0)==(s|0)){H=+p[n+16>>3];l=l+1|0;h=h+(H*2.0+c);d=d<H?H:d}n=k[n+4>>2]|0}while((n|0)!=0)}p[P+(i*56|0)+32>>3]=h;k[P+(i*56|0)+48>>2]=l;p[P+(i*56|0)+16>>3]=j+d;p[P+(i*56|0)+24>>3]=d;i=i+1|0}u=u+1|0;e=k[e+4>>2]|0}while((e|0)!=0);m=i;switch(m|0){case 1:{p[P+40>>3]=1.0;m=1;break}case 2:{H=+p[P+64>>3]-+p[P+8>>3];fr(P,P+56|0,H>3.141592653589793?6.283185307179586-H:H);m=2;break}default:{if((m|0)<=0){j=-1.0;h=-1.0;break a}l=P+8|0;n=P+((m*56|0)+-56)|0;h=+p[l>>3];e=1;i=P;do{L=i;i=i+56|0;M=L+64|0;fr(L,i,+p[M>>3]-h);e=e+1|0;h=+p[M>>3]}while((e|0)!=(m|0));fr(n,P,+p[l>>3]-h+6.283185307179586)}}L=(R|0)==1;M=(R|0)>1;K=w+8|0;h=-1.0;j=-1.0;J=0;do{I=P+(J*56|0)|0;o=+p[P+(J*56|0)+40>>3]*+p[P+(J*56|0)+16>>3];if(L){H=+p[P+(J*56|0)+32>>3];q=H/6.283185307179586;q=o>q?o:q;o=q*6.283185307179586-H;if(o>0.0){r=o/+(k[P+(J*56|0)+48>>2]|0)+c;t=0.0}else{r=c;t=0.0}}else{r=c;t=+p[P+(J*56|0)+8>>3]-+p[P+(J*56|0)+32>>3]/(o*2.0);q=o}o=q+ +p[P+(J*56|0)+24>>3];g=o>g?o:g;o=r/q;F=P+(J*56|0)+48|0;G=((k[F>>2]|0)+1|0)/2|0;if(N)o=0.0;else{H=o*.5;C=L?o:H;D=P+(J*56|0)+8|0;E=a;B=0;o=0.0;while(1){e=k[E>>2]|0;if(!e)e=0;else e=k[(k[(k[e+8>>2]|0)+112>>2]|0)+8>>2]|0;if((e|0)==(k[I>>2]|0)?(Q=E+32|0,(nr(k[Q>>2]|0)|0)>=1):0){u=E+16|0;A=+p[u>>3]/q;do if(!L)if((k[F>>2]|0)==1){z=+p[D>>3];break}else{z=t+(H+A);break}else{if(t!=0.0)t=(k[F>>2]|0)==2?3.141592653589793:t+A;z=t;h=h<0.0?t:h;j=t}while(0);x=q*+Z(+z);y=q*+_(+z);l=k[E+8>>2]|0;r=+p[E+48>>3];do if(!(r>=0.0)){if((nr(k[Q>>2]|0)|0)==2){r=z+-1.5707963267948966;break}n=k[E>>2]|0;s=n+8|0;i=k[(k[s>>2]|0)+132>>2]|0;r=x+ +p[i>>3];t=y+ +p[i+8>>3];i=Kt(l)|0;if(!i)e=n;else{e=n;t=r*r+t*t;while(1){do if((i|0)==(n|0))r=t;else{U=k[(k[i+8>>2]|0)+132>>2]|0;v=x+ +p[U>>3];r=y+ +p[U+8>>3];r=v*v+r*r;if(!(r<t)){r=t;break}e=i}while(0);i=Lt(l,i)|0;if(!i)break;else t=r}}if((n|0)==(e|0))r=0.0;else{v=+p[E+24>>3];t=+p[u>>3]-v;e=k[s>>2]|0;i=k[e+132>>2]|0;r=+p[i>>3];if(r>-t?(k[E+56>>2]&1|0)!=0:0){V=+X(+(x*x+y*y));W=+da(+(+p[i+8>>3]),+(t+r));r=+Z(+W);r=z+(1.5707963267948966-W-+ba(+(r*((t-v/r)/V))));break}r=3.141592653589793-+da(+(+p[i+8>>3]),+r);r=z+(r-+p[(k[e+112>>2]|0)+24>>3]);if(!(r>6.283185307179586))break;r=r+-6.283185307179586}}else{r=z+(3.141592653589793-r);r=r<0.0?r+6.283185307179586:r}while(0);gr(E,x,y,r);W=C+A+z;U=B+1|0;t=W;e=U;o=(U|0)==(G|0)?W:o}else e=B;E=k[E+4>>2]|0;if(!E)break;else B=e}}if(M?(k[I>>2]|0)==(w|0):0)p[(k[(k[K>>2]|0)+112>>2]|0)+24>>3]=o;J=J+1|0}while((J|0)!=(m|0))}while(0);vP(P);if((f|0)==1){W=c*.5+d;gr(b,-W,0.0,0.0);p[O>>3]=W+ +p[O>>3];U=b+56|0;k[U>>2]=k[U>>2]|1}else p[O>>3]=g;d=(h+j)*.5+-3.141592653589793}else d=3.141592653589793;if((((R|0)==1?(S=k[b>>2]|0,(S|0)!=0):0)?(k[(k[(k[S+8>>2]|0)+112>>2]|0)+8>>2]|0)!=0:0)?(T=b+48|0,p[T>>3]=d,d<0.0):0)p[T>>3]=d+6.283185307179586;return}function fr(a,b,c){a=a|0;b=b|0;c=+c;var d=0.0,e=0.0;e=+p[b+16>>3];d=+p[a+16>>3];c=(+p[a+32>>3]*e+ +p[b+32>>3]*d)/(e*(c*2.0*d));c=c<1.0?1.0:c;a=a+40|0;if(c>+p[a>>3])p[a>>3]=c;a=b+40|0;if(c>+p[a>>3])p[a>>3]=c;return}function gr(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;var e=0,f=0.0,g=0.0,h=0,i=0,j=0.0,l=0,m=0,n=0.0,o=0.0;l=k[a+8>>2]|0;e=Kt(l)|0;if(e){m=d!=0.0;do{i=k[(k[e+8>>2]|0)+132>>2]|0;g=+p[i>>3];h=i+8|0;f=+p[h>>3];if(m){o=+Z(+d);n=+_(+d);j=g*o-f*n;f=f*o+g*n}else j=g;p[i>>3]=j+b;p[h>>3]=f+c;e=Lt(l,e)|0}while((e|0)!=0)}e=k[a+36>>2]|0;if(e)do{gr(e,b,c,d);e=k[e+4>>2]|0}while((e|0)!=0);return}function hr(){return By(12)|0}function ir(a){a=a|0;var b=0,c=0;if(a){b=k[a>>2]|0;if(b)do{c=b;b=k[b+4>>2]|0;vP(c)}while((b|0)!=0);vP(a)}return}function jr(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=By(12)|0;k[e>>2]=c;c=a+8|0;k[c>>2]=(k[c>>2]|0)+1;c=a+4|0;d=k[c>>2]|0;if((b|0)==0|(d|0)==(b|0)){if(!d)k[a>>2]=e;else k[d+4>>2]=e;k[e+8>>2]=d;k[e+4>>2]=0;k[c>>2]=e}else{d=b+4|0;a=k[d>>2]|0;k[d>>2]=e;k[e+8>>2]=b;k[a+8>>2]=e;k[e+4>>2]=a}return}function kr(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=k[a>>2]|0;if((c|0)!=(b|0)){e=b+8|0;d=k[e>>2]|0;k[a>>2]=b;k[e>>2]=0;b=a+4|0;a=k[b>>2]|0;k[a+4>>2]=c;k[c+8>>2]=a;k[b>>2]=d;k[d+4>>2]=0}return}function lr(a){a=a|0;var b=0,c=0,d=0;d=By(12)|0;a=k[a>>2]|0;if(a){b=d+4|0;c=0;while(1){jr(d,c,k[a>>2]|0);a=k[a+4>>2]|0;if(!a)break;else c=k[b>>2]|0}}return d|0}function mr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=k[a>>2]|0;a:do if(e){while(1){if((k[e>>2]|0)==(b|0)){i=e;break}e=k[e+4>>2]|0;if(!e)break a}g=i+8|0;e=k[g>>2]|0;h=i+4|0;b=k[h>>2]|0;if(!e)k[a>>2]=b;else k[e+4>>2]=b;if(!b)k[a+4>>2]=e;else k[b+8>>2]=e;f=k[a>>2]|0;b:do if(f){e=0;b=f;while(1){if((k[b>>2]|0)==(c|0))break;e=k[b+4>>2]|0;if(!e)break b;else{j=b;b=e;e=j}}if(!d)if((b|0)==(f|0)){k[a>>2]=i;k[h>>2]=f;k[g>>2]=0;k[f+8>>2]=i;break}else{k[e+4>>2]=i;k[g>>2]=e;k[h>>2]=b;k[b+8>>2]=i;break}else{e=a+4|0;if((b|0)==(k[e>>2]|0)){k[e>>2]=i;k[h>>2]=0;k[g>>2]=b;k[b+4>>2]=i;break}else{k[g>>2]=b;j=b+4|0;k[h>>2]=k[j>>2];k[(k[j>>2]|0)+8>>2]=i;k[j>>2]=i;break}}}while(0);return}while(0);Wa(132447,132454,217,132465)}function nr(a){a=a|0;return k[a+8>>2]|0}function or(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=k[b>>2]|0;d=c;if(c)do{f=c+4|0;e=c;c=k[f>>2]|0;e=e+8|0;k[f>>2]=k[e>>2];k[e>>2]=c}while((c|0)!=0);c=b+4|0;f=k[c>>2]|0;k[c>>2]=d;k[b>>2]=f;c=f;if(f){f=a+4|0;e=k[f>>2]|0;k[e+4>>2]=c;k[c+8>>2]=e;k[f>>2]=d;f=a+8|0;k[f>>2]=(k[f>>2]|0)+(k[b+8>>2]|0)}vP(b);return}function pr(a,b,c){a=a|0;b=b|0;c=+c;var d=0,e=0,f=0.0,g=0,h=0,i=0,j=0,l=0,m=0.0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0.0,I=0.0;G=r;r=r+160|0;h=G+16|0;z=G+8|0;g=G;y=G+24|0;D=k[b+8>>2]|0;d=Kt(D)|0;if(d)do{e=Es(a,d)|0;if(e)do{if((k[(k[(k[(k[((k[e>>2]&3|0)==2?e:e+-32|0)+28>>2]|0)+8>>2]|0)+112>>2]|0)+12>>2]|0)==(b|0))Os(D,e,1)|0;e=Gs(a,e)|0}while((e|0)!=0);d=Lt(D,d)|0}while((d|0)!=0);E=k[12792]|0;k[12792]=E+1;k[g>>2]=E;TN(y,132480,g)|0;E=Hu(D,y,1)|0;qu(E,173447,280,1)|0;x=k[12792]|0;k[12792]=x+1;k[h>>2]=x;TN(y,132480,h)|0;k[h>>2]=k[D+12>>2];x=Vs(y,h,0)|0;d=Kt(D)|0;if(d)do{Pt(E,d,1)|0;w=Qt(x,ht(d)|0,1)|0;qu(w,173424,304,1)|0;k[(k[(k[d+8>>2]|0)+112>>2]|0)+16>>2]=w;d=Lt(D,d)|0}while((d|0)!=0);d=Kt(D)|0;if(d)do{a=k[(k[(k[d+8>>2]|0)+112>>2]|0)+16>>2]|0;e=Es(D,d)|0;if(e){g=a+8|0;do{Os(E,e,1)|0;w=k[(k[(k[(k[((k[e>>2]&3|0)==2?e:e+-32|0)+28>>2]|0)+8>>2]|0)+112>>2]|0)+16>>2]|0;v=Ls(x,a,w,0,1)|0;qu(v,173717,176,1)|0;k[(k[v+8>>2]|0)+116>>2]=e;v=(k[g>>2]|0)+236|0;k[v>>2]=(k[v>>2]|0)+1;w=(k[w+8>>2]|0)+236|0;k[w>>2]=(k[w>>2]|0)+1;e=Gs(D,e)|0}while((e|0)!=0)}d=Lt(D,d)|0}while((d|0)!=0);e=Zs(x)|0;w=sr()|0;d=Kt(x)|0;if(d)do{ur(w,d);d=Lt(x,d)|0}while((d|0)!=0);if((e|0)>3){t=e+-3|0;v=0;do{u=wr(w)|0;d=Js(x,u)|0;if(d)do{a=k[d>>2]&3;e=k[((a|0)==2?d:d+-32|0)+28>>2]|0;if((u|0)==(e|0))e=k[((a|0)==3?d:d+32|0)+28>>2]|0;vr(w,e);d=Ks(x,d,u)|0}while((d|0)!=0);o=k[(k[u+8>>2]|0)+236>>2]|0;s=o<<2;q=Cy(s)|0;s=Cy(s)|0;d=Js(x,u)|0;if(!d){d=0;g=0}else{e=0;l=0;n=0;while(1){a=k[d>>2]&3;g=k[((a|0)==2?d:d+-32|0)+28>>2]|0;if((g|0)==(u|0))g=k[((a|0)==3?d:d+32|0)+28>>2]|0;a=Js(x,u)|0;if(a){j=a;a=0;do{do if((j|0)!=(d|0)){h=k[j>>2]&3;i=k[((h|0)==2?j:j+-32|0)+28>>2]|0;if((i|0)==(u|0))i=k[((h|0)==3?j:j+32|0)+28>>2]|0;h=Ls(x,g,i,0,0)|0;if(h)if(g>>>0<i>>>0){e=e+1|0;a=h+8|0;h=k[(k[a>>2]|0)+116>>2]|0;if(!h){a=1;break}_t(E,h)|0;k[(k[a>>2]|0)+116>>2]=0;a=1}else a=1}while(0);j=Ks(x,j,u)|0}while((j|0)!=0);if(!a)F=36;else{k[q+(l<<2)>>2]=g;a=l+1|0;g=n}}else F=36;if((F|0)==36){F=0;k[s+(n<<2)>>2]=g;a=l;g=n+1|0}d=Ks(x,d,u)|0;if(!d){d=e;break}else{l=a;n=g}}}d=o+-1-d|0;a:do if((d|0)>0){if((d|0)>=(g|0)){if((d|0)!=(g|0))break;d=k[q>>2]|0;if((g|0)<=0)break;e=d+8|0;a=0;while(1){o=k[s+(a<<2)>>2]|0;qu(Ls(x,d,o,0,1)|0,173717,176,1)|0;n=(k[e>>2]|0)+236|0;k[n>>2]=(k[n>>2]|0)+1;o=(k[o+8>>2]|0)+236|0;k[o>>2]=(k[o>>2]|0)+1;a=a+1|0;if((a|0)==(g|0))break a}}if((g|0)>0){a=0;do{e=a|1;if((e|0)>=(g|0))break;n=k[s+(a<<2)>>2]|0;o=k[s+(e<<2)>>2]|0;qu(Ls(x,n,o,0,1)|0,173717,176,1)|0;n=(k[n+8>>2]|0)+236|0;k[n>>2]=(k[n>>2]|0)+1;o=(k[o+8>>2]|0)+236|0;k[o>>2]=(k[o>>2]|0)+1;d=d+-1|0;a=a+2|0}while((a|0)<(g|0));if((d|0)>0)e=2;else break}else e=2;while(1){n=k[s>>2]|0;o=k[s+(e<<2)>>2]|0;qu(Ls(x,n,o,0,1)|0,173717,176,1)|0;n=(k[n+8>>2]|0)+236|0;k[n>>2]=(k[n>>2]|0)+1;o=(k[o+8>>2]|0)+236|0;k[o>>2]=(k[o>>2]|0)+1;if((d|0)>1){d=d+-1|0;e=e+1|0}else break}}while(0);vP(s);vP(q);d=Js(x,u)|0;if(d)do{a=k[d>>2]&3;e=k[((a|0)==2?d:d+-32|0)+28>>2]|0;if((u|0)==(e|0))e=k[((a|0)==3?d:d+32|0)+28>>2]|0;s=(k[e+8>>2]|0)+236|0;k[s>>2]=(k[s>>2]|0)+-1;ur(w,e);d=Ks(x,d,u)|0}while((d|0)!=0);_t(x,u)|0;v=v+1|0}while((v|0)!=(t|0))}Ys(x)|0;tr(w);t=k[12793]|0;k[12793]=t+1;k[z>>2]=t;TN(y,132490,z)|0;t=Hu(E,y,1)|0;qu(t,173447,280,1)|0;d=Kt(E)|0;if(d)do{Pt(t,d,1)|0;z=k[(k[d+8>>2]|0)+112>>2]|0;k[z+16+12>>2]=0;k[z+32>>2]=0;z=z+4|0;k[z>>2]=k[z>>2]&-2;d=Lt(E,d)|0}while((d|0)!=0);d=Kt(E)|0;if(d)do{e=k[(k[d+8>>2]|0)+112>>2]|0;if(!(k[e+4>>2]&1)){k[e+16>>2]=0;qr(E,d,t)}d=Lt(E,d)|0}while((d|0)!=0);if((Zs(t)|0)!=1){d=Kt(t)|0;if(d)do{a=Js(t,d)|0;b:do if(a){e=0;while(1){a=Ks(t,a,d)|0;if(!a)break;else e=e+1|0}if((e|0)==0?(A=k[(k[(k[d+8>>2]|0)+112>>2]|0)+16>>2]|0,(A|0)!=0):0){e=A;s=0;a=0;while(1){while(1){g=a;a=a+1|0;h=k[(k[e+8>>2]|0)+112>>2]|0;e=h+16|0;i=e+12|0;j=k[i>>2]|0;if(j){q=e;break}k[e+4>>2]=d;k[i>>2]=a;e=k[e>>2]|0;if(!e)break b}if((j|0)>(g|0))break;o=e+4|0;g=k[o>>2]|0;l=g;if((g|0)==(s|0))g=s;else{n=h+32|0;e=h+24|0;if((k[n>>2]|0)!=0?(k[e>>2]|0)==(s|0):0)g=s;k[e>>2]=l;k[n>>2]=j}k[o>>2]=d;k[i>>2]=a;e=k[q>>2]|0;if(!e)break b;else s=g}e=h+32|0;if((k[e>>2]|0)<=(g|0)){k[h+24>>2]=d;k[e>>2]=a}}}while(0);d=Lt(t,d)|0}while((d|0)!=0);d=Kt(t)|0;if(!d)h=0;else{e=0;h=0;while(1){a=k[(k[d+8>>2]|0)+112>>2]|0;a=(k[a+32>>2]|0)+(k[a+16+12>>2]|0)|0;g=(a|0)>(h|0);e=g?d:e;d=Lt(t,d)|0;if(!d){h=e;break}else h=g?a:h}}e=hr()|0;a=h+8|0;d=k[(k[(k[a>>2]|0)+112>>2]|0)+16+4>>2]|0;if((d|0)!=(h|0))do{jr(e,0,d);A=k[(k[d+8>>2]|0)+112>>2]|0;z=A+4|0;k[z>>2]=k[z>>2]|16;d=k[A+16>>2]|0}while((d|0)!=(h|0));jr(e,0,h);A=k[(k[a>>2]|0)+112>>2]|0;z=A+4|0;k[z>>2]=k[z>>2]|16;if(k[A+32>>2]|0){g=hr()|0;d=k[(k[(k[a>>2]|0)+112>>2]|0)+24>>2]|0;if((d|0)!=(h|0))do{jr(g,0,d);A=k[(k[d+8>>2]|0)+112>>2]|0;z=A+4|0;k[z>>2]=k[z>>2]|16;d=k[A+16>>2]|0}while((d|0)!=(h|0));or(e,g)}}else{e=hr()|0;A=Kt(t)|0;jr(e,0,A);A=(k[(k[A+8>>2]|0)+112>>2]|0)+4|0;k[A>>2]=k[A>>2]|16}d=Kt(D)|0;if(d){i=e+4|0;do{if(!(k[(k[(k[d+8>>2]|0)+112>>2]|0)+4>>2]&16)){h=hr()|0;a=Es(D,d)|0;if(a)do{A=a+-32|0;jr(h,0,k[((k[a>>2]&3|0)==2?a:A)+28>>2]|0);A=(k[(k[(k[((k[a>>2]&3|0)==2?a:A)+28>>2]|0)+8>>2]|0)+112>>2]|0)+4|0;k[A>>2]=k[A>>2]|32;a=Gs(D,a)|0}while((a|0)!=0);a=Hs(D,d)|0;if(a)do{A=a+32|0;jr(h,0,k[((k[a>>2]&3|0)==3?a:A)+28>>2]|0);A=(k[(k[(k[((k[a>>2]&3|0)==3?a:A)+28>>2]|0)+8>>2]|0)+112>>2]|0)+4|0;k[A>>2]=k[A>>2]|32;a=Is(D,a)|0}while((a|0)!=0);c:do if((nr(h)|0)>1?(B=k[e>>2]|0,(B|0)!=0):0){a=B;while(1){g=a+4|0;if((k[(k[(k[(k[a>>2]|0)+8>>2]|0)+112>>2]|0)+4>>2]&32|0)!=0?(k[(k[(k[(k[k[((a|0)==(k[i>>2]|0)?e:g)>>2]>>2]|0)+8>>2]|0)+112>>2]|0)+4>>2]&32|0)!=0:0)break;a=k[g>>2]|0;if(!a){F=101;break c}}jr(e,a,d)}else F=101;while(0);d:do if((F|0)==101){F=0;e:do if((nr(h)|0)>0?(C=k[e>>2]|0,(C|0)!=0):0){a=C;while(1){if(k[(k[(k[(k[a>>2]|0)+8>>2]|0)+112>>2]|0)+4>>2]&32)break;a=k[a+4>>2]|0;if(!a)break e}jr(e,a,d);break d}while(0);jr(e,0,d)}while(0);a=k[h>>2]|0;if(a)do{A=(k[(k[(k[a>>2]|0)+8>>2]|0)+112>>2]|0)+4|0;k[A>>2]=k[A>>2]&-33;a=k[a+4>>2]|0}while((a|0)!=0);ir(h)}d=Lt(D,d)|0}while((d|0)!=0)}d=rr(e,D)|0;f:do if(!d)i=e;else{n=0;while(1){g=Kt(D)|0;if(!g)a=d;else{a=d;do{h=Js(D,g)|0;if(h)do{i=k[h>>2]&3;j=k[((i|0)==3?h:h+32|0)+28>>2]|0;if((j|0)==(g|0))j=k[((i|0)==2?h:h+-32|0)+28>>2]|0;i=lr(e)|0;mr(e,g,j,0);l=rr(e,D)|0;if((l|0)<(a|0)){ir(i);if(!l){i=e;break f}}else{ir(e);e=i;l=a}i=lr(e)|0;mr(e,g,j,1);a=rr(e,D)|0;if((a|0)<(l|0)){ir(i);if(!a){i=e;break f}}else{ir(e);e=i;a=l}h=Ks(D,h,g)|0}while((h|0)!=0);g=Lt(D,g)|0}while((g|0)!=0)}n=n+1|0;if(!((n|0)<10&((a|0)!=0&(d|0)!=(a|0)))){i=e;break}else d=a}}while(0);g=nr(i)|0;a=k[i>>2]|0;e=(a|0)==0;if(e)m=0.0;else{d=a;f=0.0;do{D=k[(k[k[(k[(k[d>>2]|0)+8>>2]|0)+112>>2]>>2]|0)+8>>2]|0;m=+p[D+32>>3];f=m>f?m:f;m=+p[D+40>>3];f=m>f?m:f;d=k[d+4>>2]|0}while((d|0)!=0);m=f}h=(g|0)==1;if(h)c=0.0;else c=+(g|0)*(m+c)/6.283185307179586;if(!e){d=a;while(1){if(k[(k[(k[(k[d>>2]|0)+8>>2]|0)+112>>2]|0)+4>>2]&8){F=131;break}d=k[d+4>>2]|0;if(!d){d=a;break}}if((F|0)==131){kr(i,d);d=k[i>>2]|0}if(d){f=6.283185307179586/+(g|0);e=0;while(1){F=k[(k[d>>2]|0)+8>>2]|0;D=k[F+112>>2]|0;k[D+16>>2]=e;p[D+24>>3]=0.0;H=+(e|0)*f;I=c*+Z(+H);F=k[F+132>>2]|0;p[F>>3]=I;H=c*+_(+H);p[F+8>>3]=H;d=k[d+4>>2]|0;if(!d)break;else e=e+1|0}}}I=h?m*.5:c;p[b+16>>3]=I;p[b+24>>3]=I;p[b+48>>3]=-1.0;Ys(E)|0;r=G;return i|0}function qr(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;d=(k[(k[b+8>>2]|0)+112>>2]|0)+4|0;k[d>>2]=k[d>>2]|1;d=Js(a,b)|0;if(d)do{e=k[d>>2]&3;f=k[((e|0)==2?d:d+-32|0)+28>>2]|0;if((f|0)==(b|0))f=k[((e|0)==3?d:d+32|0)+28>>2]|0;e=f+8|0;if(!(k[(k[(k[e>>2]|0)+112>>2]|0)+4>>2]&1)){Os(c,d,1)|0;k[(k[(k[e>>2]|0)+112>>2]|0)+16>>2]=b;qr(a,f,c)}d=Ks(a,d,b)|0}while((d|0)!=0);return}function rr(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0;l=Ar()|0;c=Kt(b)|0;if(c)do{d=Es(b,c)|0;if(d)do{k[k[(k[d+8>>2]|0)+120>>2]>>2]=0;d=Gs(b,d)|0}while((d|0)!=0);c=Lt(b,c)|0}while((c|0)!=0);d=k[a>>2]|0;if(!d)c=0;else{c=0;i=1;while(1){h=k[d>>2]|0;a=Js(b,h)|0;if(a)do{g=a+8|0;if((k[k[(k[g>>2]|0)+120>>2]>>2]|0)>0){e=Tb[k[l>>2]&63](l,0,128)|0;if(e)do{f=k[e+8>>2]|0;if((k[k[(k[f+8>>2]|0)+120>>2]>>2]|0)>(k[k[(k[g>>2]|0)+120>>2]>>2]|0)?(j=k[f>>2]&3,(k[((j|0)==2?f:f+-32|0)+28>>2]|0)!=(h|0)):0)c=((k[((j|0)==3?f:f+32|0)+28>>2]|0)!=(h|0)&1)+c|0;e=Tb[k[l>>2]&63](l,e,8)|0}while((e|0)!=0);Dr(l,a)}a=Ks(b,a,h)|0}while((a|0)!=0);a=Js(b,h)|0;if(a)do{e=k[(k[a+8>>2]|0)+120>>2]|0;if(!(k[e>>2]|0)){k[e>>2]=i;Cr(l,a)}a=Ks(b,a,h)|0}while((a|0)!=0);d=k[d+4>>2]|0;if(!d)break;else i=i+1|0}}Br(l);return c|0}function sr(){return Lr(51176,k[12815]|0)|0}function tr(a){a=a|0;Hr(a)|0;return}function ur(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=r;r=r+16|0;e=c;d=b+8|0;k[e+8>>2]=k[(k[d>>2]|0)+236>>2];a=(Tb[k[a>>2]&63](a,e,1)|0)+12|0;k[(k[d>>2]|0)+164>>2]=k[a>>2];k[a>>2]=b;r=c;return}function vr(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;g=r;r=r+16|0;e=g;d=b+8|0;k[e+8>>2]=k[(k[d>>2]|0)+236>>2];e=Tb[k[a>>2]&63](a,e,4)|0;if(!e)Wa(132499,132502,107,132512);f=e+12|0;c=k[f>>2]|0;if((c|0)==(b|0)){b=k[(k[d>>2]|0)+164>>2]|0;k[f>>2]=b;if(!b)Tb[k[a>>2]&63](a,e,2)|0}else{do{e=(k[c+8>>2]|0)+164|0;c=k[e>>2]|0;d=(c|0)!=0}while(d&(c|0)!=(b|0));if(d)k[e>>2]=k[(k[c+8>>2]|0)+164>>2]}r=g;return}function wr(a){a=a|0;var b=0,c=0,d=0,e=0;c=Tb[k[a>>2]&63](a,0,128)|0;if(c){e=c+12|0;b=k[e>>2]|0;d=k[(k[b+8>>2]|0)+164>>2]|0;k[e>>2]=d;if(!d)Tb[k[a>>2]&63](a,c,2)|0}else b=0;return b|0}function xr(a,b,c){a=a|0;b=b|0;c=c|0;c=Cy(16)|0;k[c+12>>2]=0;k[c+8>>2]=k[b+8>>2];return c|0}function yr(a,b,c){a=a|0;b=b|0;c=c|0;vP(b);return}function zr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;b=k[b>>2]|0;c=k[c>>2]|0;return ((b|0)<(c|0)?-1:(b|0)>(c|0)&1)|0}function Ar(){return Lr(51212,k[12815]|0)|0}function Br(a){a=a|0;Hr(a)|0;return}function Cr(a,b){a=a|0;b=b|0;var c=0,d=0;c=r;r=r+16|0;d=c;k[d+8>>2]=b;Tb[k[a>>2]&63](a,d,1)|0;r=c;return}function Dr(a,b){a=a|0;b=b|0;var c=0,d=0;c=r;r=r+16|0;d=c;k[d+8>>2]=b;Tb[k[a>>2]&63](a,d,2)|0;r=c;return}function Er(a,b,c){a=a|0;b=b|0;c=c|0;c=Cy(12)|0;k[c+8>>2]=k[b+8>>2];return c|0}function Fr(a,b,c){a=a|0;b=b|0;c=c|0;vP(b);return}function Gr(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;b=k[b>>2]|0;c=k[c>>2]|0;return (b>>>0>c>>>0?1:(b>>>0<c>>>0)<<31>>31)|0}function Hr(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;do if((a|0)!=0?(k[a+24>>2]|0)<=0:0){g=k[a+4>>2]|0;f=g+32|0;b=k[f>>2]|0;if(b){b=cc[b&127](a,2,0,g)|0;if((b|0)<0){b=-1;break}}else b=0;if(k[a+28>>2]|0)Qr(a,0)|0;e=(b|0)==0;if(e){Tb[k[k[a+16>>2]>>2]&63](a,0,64)|0;if((Nr(a)|0)>0){b=-1;break}c=a+8|0;b=k[c>>2]|0;if((k[b+12>>2]|0)>0){d=a+12|0;cc[k[d>>2]&127](a,k[b+8>>2]|0,0,g)|0;b=k[c>>2]|0}else d=a+12|0;cc[k[d>>2]&127](a,b,0,g)|0}b=k[a+20>>2]|0;if(b){if(e&(b|0)==1)cc[k[a+12>>2]&127](a,a,0,g)|0}else vP(a);b=k[f>>2]|0;if(!b)b=0;else{cc[b&127](a,6,0,g)|0;b=0}}else b=-1;while(0);return b|0}function Ir(a){a=a|0;var b=0,c=0,d=0,e=0;d=a+8|0;b=k[d>>2]|0;c=k[b>>2]|0;do if(!(c&12)){if(!(c&3)){a=b+8|0;b=k[a>>2]|0;k[a>>2]=0;break}b=Jr(a)|0;e=k[d>>2]|0;c=k[e+8>>2]|0;e=k[e+12>>2]|0;a=c+(e<<2)|0;if((e|0)>0){e=c+4|0;IP(c|0,0,(a>>>0>e>>>0?a:e)+~c+4&-4|0)|0}}else b=k[b+4>>2]|0;while(0);e=k[d>>2]|0;k[e>>2]=k[e>>2]&-4097;k[e+16>>2]=0;k[e+4>>2]=0;return b|0}function Jr(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;f=a+8|0;b=k[f>>2]|0;a=k[b>>2]|0;if(!(a&4096)){do if(!(a&3)){if(a&112){a=k[b+8>>2]|0;break}a=k[b+4>>2]|0;if(!a)a=0;else{b=k[a+4>>2]|0;if(!b){c=k[a>>2]|0;if(!c)break;else{b=a;a=c}}else while(1){k[a+4>>2]=k[b>>2];k[b>>2]=a;c=k[b+4>>2]|0;if(!c)break;else{a=b;b=c}}c=b;do{d=k[a+4>>2]|0;if(!d)c=a;else{while(1){k[a+4>>2]=k[d>>2];k[d>>2]=a;a=k[d+4>>2]|0;if(!a){a=d;break}else{e=d;d=a;a=e}}k[c>>2]=a;c=a}a=k[c>>2]|0}while((a|0)!=0);a=b}}else{c=k[b+8>>2]|0;d=k[b+12>>2]|0;e=c+(d<<2)|0;if((d|0)>0){b=0;a=0;do{d=k[c>>2]|0;if(d){if(!b){b=d;a=d}else k[b>>2]=d;while(1){d=k[b>>2]|0;if(!d)break;else b=d}k[c>>2]=b}c=c+4|0}while(c>>>0<e>>>0)}else a=0}while(0);f=k[f>>2]|0;k[f+4>>2]=a;k[f>>2]=k[f>>2]|4096}else a=k[b+4>>2]|0;return a|0}function Kr(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;r=a+8|0;if(k[k[r>>2]>>2]&4096)Mr(a,0)|0;q=k[a+4>>2]|0;m=k[q>>2]|0;n=k[q+4>>2]|0;p=q+8|0;t=k[p>>2]|0;l=k[q+20>>2]|0;o=a+20|0;g=k[o>>2]&-32769;k[o>>2]=g;a:do if(!b){if(c&384){b=k[r>>2]|0;d=k[b+8>>2]|0;if(!d){d=0;break}if(c&256){d=k[d+4>>2]|0;k[b+4>>2]=d;if(!d){d=0;break}}else k[b+4>>2]=d;if((t|0)<0){d=k[d+8>>2]|0;break}else{d=d+(0-t)|0;break}}if(c&4098){d=k[r>>2]|0;if(k[d>>2]&144){d=0;break}d=k[d+8>>2]|0;if(!d){d=0;break}else{f=d;s=88;break}}if(!(c&64))d=0;else{h=q+16|0;d=k[h>>2]|0;b:do if((d|0)!=0|(t|0)<0?(f=k[(k[r>>2]|0)+8>>2]|0,(f|0)!=0):0){i=a+12|0;j=(t|0)<0;g=0-t|0;while(1){b=k[f>>2]|0;if(d){if(j)e=k[f+8>>2]|0;else e=f+g|0;dc[d&127](a,e,q)}if((k[p>>2]|0)<0)cc[k[i>>2]&127](a,f,0,q)|0;if(!b)break b;d=k[h>>2]|0;f=b}}while(0);d=k[r>>2]|0;k[d+4>>2]=0;k[d+8>>2]=0;k[(k[r>>2]|0)+16>>2]=0;d=0}}else{if(c&2049){e=q+12|0;d=k[e>>2]|0;f=(c&1|0)==0;if(!(f|(d|0)==0)){d=Tb[d&63](a,b,q)|0;if(!d){d=0;break}else b=d}do if((t|0)>-1)f=b+t|0;else{d=cc[k[a+12>>2]&127](a,0,12,q)|0;if(d){k[d+8>>2]=b;f=d;break}if(!(k[e>>2]|0)){d=0;break a}d=k[q+16>>2]|0;if(f|(d|0)==0){d=0;break a}dc[d&127](a,b,q);d=0;break a}while(0);e=k[r>>2]|0;d=k[e>>2]|0;do if(!(d&128)){if(!(d&16))if(!(d&32)){s=54;break}else{s=50;break}b=k[e+4>>2]|0;d=(b|0)!=0;if(!(c&8192)){if(!d){s=50;break}if((b|0)==(k[e+8>>2]|0)){s=50;break}a=b+4|0;q=k[a>>2]|0;k[f+4>>2]=q;k[q>>2]=f;k[f>>2]=b;k[a>>2]=f;break}else{if(!d){s=54;break}d=k[b>>2]|0;if(!d){s=54;break}k[f>>2]=d;k[d+4>>2]=f;k[f+4>>2]=b;k[b>>2]=f;break}}else if(!(c&8192))s=50;else s=54;while(0);if((s|0)==50){d=k[e+8>>2]|0;k[f>>2]=d;if(!d)k[f+4>>2]=f;else{a=d+4|0;k[f+4>>2]=k[a>>2];k[a>>2]=f}k[(k[r>>2]|0)+8>>2]=f}else if((s|0)==54){d=e+8|0;b=k[d>>2]|0;if(!b){k[d>>2]=f;k[f+4>>2]=f}else{a=b+4|0;k[k[a>>2]>>2]=f;k[f+4>>2]=k[a>>2];k[a>>2]=f}k[f>>2]=0}d=k[r>>2]|0;b=d+16|0;e=k[b>>2]|0;if((e|0)>-1)k[b>>2]=e+1;k[d+4>>2]=f;if((t|0)<0){d=k[f+8>>2]|0;break}else{d=f+(0-t)|0;break}}f=k[r>>2]|0;do if(!(c&512)){d=k[f+4>>2]|0;if(d){if((t|0)<0)e=k[d+8>>2]|0;else e=d+(0-t)|0;if((e|0)==(b|0)){b=g;break}}b=b+m|0;if((n|0)<0){b=k[b>>2]|0;s=71}else s=71}else s=71;while(0);if((s|0)==71){d=k[f+8>>2]|0;if(!d){d=0;break}f=(t|0)<0;g=(n|0)<0;h=(l|0)==0;i=(n|0)<1;j=0-t|0;while(1){if(f)e=k[d+8>>2]|0;else e=d+j|0;e=e+m|0;if(g)e=k[e>>2]|0;do if(h)if(i){e=qO(b,e)|0;break}else{e=iO(b,e,n)|0;break}else e=cc[l&127](a,b,e,q)|0;while(0);if(!e)break;d=k[d>>2]|0;if(!d){d=0;break a}}if(!d){d=0;break}b=k[o>>2]|0}k[o>>2]=b|32768;if(!(c&4098)){do if(!(c&8)){b=k[r>>2]|0;if(!(c&16)){k[b+4>>2]=d;break}if((d|0)==(k[b+8>>2]|0)){k[b+4>>2]=0;d=0;break a}else{d=d+4|0;s=112;break}}else{b=k[r>>2]|0;s=112}while(0);if((s|0)==112){d=k[d>>2]|0;k[b+4>>2]=d;if(!d){d=0;break}}if((t|0)<0){d=k[d+8>>2]|0;break}else{d=d+(0-t)|0;break}}else{f=d;s=88}}while(0);if((s|0)==88){d=k[f>>2]|0;if(d){k[d+4>>2]=k[f+4>>2];d=k[f>>2]|0}b=(k[r>>2]|0)+8|0;e=k[b>>2]|0;if((f|0)==(e|0)){k[b>>2]=d;d=k[(k[r>>2]|0)+8>>2]|0;if(d)k[d+4>>2]=k[f+4>>2]}else{b=f+4|0;k[k[b>>2]>>2]=d;d=e+4|0;if((f|0)==(k[d>>2]|0))k[d>>2]=k[b>>2]}d=k[r>>2]|0;b=d+4|0;if((f|0)==(k[b>>2]|0))e=k[f>>2]|0;else e=0;k[b>>2]=e;s=d+16|0;k[s>>2]=(k[s>>2]|0)+-1;if((t|0)<0)d=k[f+8>>2]|0;else d=f+(0-t)|0;b=k[q+16>>2]|0;if(!((c&2|0)==0|(b|0)==0))dc[b&127](a,d,q);if((k[p>>2]|0)<0)cc[k[a+12>>2]&127](a,f,0,q)|0}return d|0}function Lr(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;h=r;r=r+16|0;e=h;a:do if((a|0)!=0&(b|0)!=0?(c=uP(40)|0,(c|0)!=0):0){k[c>>2]=0;k[c+16>>2]=0;k[c+4>>2]=0;Tr(c,a,0)|0;d=c+20|0;g=a+32|0;k[d>>2]=0;k[d+4>>2]=0;k[d+8>>2]=0;k[d+12>>2]=0;k[d+16>>2]=0;d=k[g>>2]|0;do if(d){k[e>>2]=0;d=cc[d&127](c,1,e,a)|0;if((d|0)>=0)if((d|0)>0){d=k[e>>2]|0;if(d)if(!(k[b+4>>2]&k[d>>2])){f=12;break}else break;d=a+28|0;if(!(k[d>>2]|0))f=12;else{vP(c);c=cc[k[d>>2]&127](0,0,40,a)|0;if(!c){c=0;break a}k[c>>2]=0;k[c+16>>2]=0;k[c+4>>2]=0;Tr(c,a,0)|0;k[c+20>>2]=1;k[c+24>>2]=0;k[c+32>>2]=0;k[c+28>>2]=0;f=11}}else f=11;else f=12}else f=11;while(0);if((f|0)==11){d=cc[k[c+12>>2]&127](c,0,28,a)|0;k[e>>2]=d;if(!d)f=12;else{k[d>>2]=k[b+4>>2];k[d+4>>2]=0;k[(k[e>>2]|0)+8>>2]=0;d=k[e>>2]|0;e=d+12|0;k[e>>2]=0;k[e+4>>2]=0;k[e+8>>2]=0;k[e+12>>2]=0}}if((f|0)==12){vP(c);c=0;break}k[c+8>>2]=d;k[c>>2]=k[b>>2];k[c+16>>2]=b;d=k[g>>2]|0;if(d)cc[d&127](c,5,c,a)|0}else c=0;while(0);r=h;return c|0}function Mr(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0;e=k[k[a+16>>2]>>2]|0;f=a+8|0;i=k[f>>2]|0;g=k[i>>2]|0;c=g&4096;if(!b)if(!c)b=-1;else{b=k[i+4>>2]|0;d=c;h=5}else if(!(k[i+16>>2]|0)){d=0;h=5}else b=-1;a:do if((h|0)==5){k[i>>2]=g&-4097;if(!(g&3)){c=i+4|0;if(!(g&12)){k[c>>2]=0;k[i+8>>2]=b}else k[c>>2]=b;if(d){b=0;break}k[(k[f>>2]|0)+16>>2]=-1;b=0;break}k[i+4>>2]=0;if(!d){k[i+16>>2]=0;if(!b){b=0;break}while(1){i=b;b=k[b>>2]|0;Tb[e&63](a,i,32)|0;if(!b){b=0;break a}}}c=k[i+8>>2]|0;i=k[i+12>>2]|0;e=c+(i<<2)|0;if((i|0)>0){d=c;do{c=k[d>>2]|0;if(c){k[d>>2]=b;b=k[c>>2]|0;k[c>>2]=0}d=d+4|0}while(d>>>0<e>>>0);b=0}else b=0}while(0);return b|0}function Nr(a){a=a|0;var b=0,c=0,d=0;b=a+8|0;c=k[b>>2]|0;if(k[c>>2]&4096){Mr(a,0)|0;c=k[b>>2]|0}d=c+16|0;b=k[d>>2]|0;do if((b|0)<0){a=k[c>>2]|0;if(a&12){b=Or(k[c+4>>2]|0)|0;k[d>>2]=b;break}if(a&112){c=k[c+8>>2]|0;if(!c)b=0;else{b=0;do{b=b+1|0;c=k[c>>2]|0}while((c|0)!=0)}k[d>>2]=b}}while(0);return b|0}function Or(a){a=a|0;var b=0;if(!a)return 0;else{b=Or(k[a+4>>2]|0)|0;return b+1+(Or(k[a>>2]|0)|0)|0}return 0}function Pr(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;G=r;r=r+128|0;z=G;q=G+8|0;F=a+8|0;d=k[F>>2]|0;if(k[d>>2]&4096){Mr(a,0)|0;d=k[F>>2]|0}D=k[a+4>>2]|0;B=k[D>>2]|0;C=k[D+4>>2]|0;v=D+8|0;E=k[v>>2]|0;A=k[D+20>>2]|0;t=a+20|0;k[t>>2]=k[t>>2]&-32769;e=k[d+4>>2]|0;a:do if(!b)if((c&448|0)==0|(e|0)==0)d=0;else{if(!(c&64)){if(!(c&256)){d=k[e+4>>2]|0;if(!d)d=e;else while(1){k[e+4>>2]=k[d>>2];k[d>>2]=e;e=k[d+4>>2]|0;if(!e)break;else{a=d;d=e;e=a}}}else{d=k[e>>2]|0;if(!d)d=e;else while(1){a=d+4|0;k[e>>2]=k[a>>2];k[a>>2]=e;e=k[d>>2]|0;if(!e)break;else{a=d;d=e;e=a}}}k[(k[F>>2]|0)+4>>2]=d;if((E|0)<0){d=k[d+8>>2]|0;break}else{d=d+(0-E)|0;break}}b=D+16|0;if((k[b>>2]|0)!=0|(E|0)<0){i=a+12|0;j=(E|0)<0;h=0-E|0;while(1){d=e+4|0;f=k[d>>2]|0;if(f){k[d>>2]=k[f>>2];k[f>>2]=e;e=f;continue}g=e;e=k[e>>2]|0;d=k[b>>2]|0;if(d){if(j)f=k[g+8>>2]|0;else f=g+h|0;dc[d&127](a,f,D)}if((k[v>>2]|0)<0)cc[k[i>>2]&127](a,g,0,D)|0;if(!e)break}d=k[F>>2]|0}k[d+16>>2]=0;k[d+4>>2]=0;d=0}else{y=a+16|0;u=(c&4098|0)==0;b:do if(!(u|(k[(k[y>>2]|0)+4>>2]|0)!=8)){j=(C|0)<0;d=b+B|0;if(j)d=k[d>>2]|0;f=Tb[k[a>>2]&63](a,b,4)|0;if(f){h=(A|0)==0;i=(C|0)<1;while(1){g=f+B|0;if(j)g=k[g>>2]|0;do if(h)if(i){g=qO(d,g)|0;break}else{g=iO(d,g,C)|0;break}else g=cc[A&127](a,d,g,D)|0;while(0);if(g){w=44;break b}if((f|0)==(b|0))break;f=Tb[k[a>>2]&63](a,f,8)|0;if(!f){w=44;break b}}g=k[(k[F>>2]|0)+4>>2]|0;k[z>>2]=k[g+4>>2];k[z+4>>2]=k[g>>2];e=z;w=182}else w=44}else w=44;while(0);c:do if((w|0)==44){do if(!(c&2565)){if(c&32){if((E|0)<0)f=k[b+8>>2]|0;else f=b+(0-E)|0;d=f+B|0;if((C|0)<0)d=k[d>>2]|0;if(!e){h=z;d=b;e=z;w=200;break}else{s=d;d=b;w=63;break}}if(e){if((E|0)<0)d=k[e+8>>2]|0;else d=e+(0-E)|0;if((d|0)!=(b|0)){d=b+B|0;if((C|0)<0){f=b;s=k[d>>2]|0;d=0;w=63}else{f=b;s=d;d=0;w=63}}else{f=b;h=z;d=0;i=z;g=e;w=141}}else{f=b;h=z;d=0;e=z;w=200}}else{if(!(c&512)){d=b+B|0;if((C|0)<0)d=k[d>>2]|0}else d=b;if(!e){f=b;h=z;d=0;e=z;w=200}else{f=b;s=d;d=0;w=63}}while(0);d:do if((w|0)==63){if(((k[(k[y>>2]|0)+4>>2]|0)==4?(p=k[(k[F>>2]|0)+24>>2]|0,!((c&516|0)==0|(p|0)==0)):0)?(o=(p|0)>0,o):0){m=(E|0)<0;h=(C|0)<0;i=(A|0)==0;j=(C|0)<1;n=0-E|0;b=0;l=e;do{if(m)g=k[l+8>>2]|0;else g=l+n|0;g=g+B|0;if(h)g=k[g>>2]|0;do if(i)if(j){g=qO(s,g)|0;break}else{g=iO(s,g,C)|0;break}else g=cc[A&127](a,s,g,D)|0;while(0);if(!g){d=l;w=81;break}k[q+(b<<2)>>2]=g;l=k[((g|0)<0?l+4|0:l)>>2]|0;b=b+1|0;if(!l){d=0;break a}}while((b|0)<(p|0));if((w|0)==81)if(m){d=k[d+8>>2]|0;break a}else{d=d+n|0;break a}if(o){h=z;b=0;j=z;while(1){do if((k[q+(b<<2)>>2]|0)<0){g=e+4|0;i=k[g>>2]|0;if((k[q+((b|1)<<2)>>2]|0)<0){k[g>>2]=k[i>>2];k[i>>2]=e;k[j+4>>2]=i;e=i;g=i+4|0;break}else{k[h>>2]=i;k[j+4>>2]=e;h=i;g=i;break}}else{g=k[e>>2]|0;if((k[q+((b|1)<<2)>>2]|0)>0){o=g+4|0;k[e>>2]=k[o>>2];k[o>>2]=e;k[h>>2]=g;h=g;e=j;break}else{k[j+4>>2]=g;k[h>>2]=e;h=e;e=g;g=g+4|0;break}}while(0);i=k[g>>2]|0;b=b+2|0;if((b|0)>=(p|0)){g=e;e=i;break}else{j=e;e=i}}}else{h=z;g=z}}else{h=z;g=z}m=(E|0)<0;n=(C|0)<0;o=(A|0)!=0;p=(C|0)<1;q=0-E|0;e:while(1){while(1){if(m)i=k[e+8>>2]|0;else i=e+q|0;i=i+B|0;if(n)i=k[i>>2]|0;do if(!o)if(p){i=qO(s,i)|0;break}else{i=iO(s,i,C)|0;break}else i=cc[A&127](a,s,i,D)|0;while(0);if(!i)break e;if((i|0)>=0){i=e;break}b=e+4|0;l=k[b>>2]|0;if(!l){w=121;break e}if(m)i=k[l+8>>2]|0;else i=l+q|0;i=i+B|0;if(n)i=k[i>>2]|0;do if(!o)if(p){j=qO(s,i)|0;break}else{j=iO(s,i,C)|0;break}else j=cc[A&127](a,s,i,D)|0;while(0);if((j|0)>=0){b=l;i=g;g=e;w=118;break}k[b>>2]=k[l>>2];k[l>>2]=e;k[g+4>>2]=l;e=k[l+4>>2]|0;if(!e){e=l;w=200;break d}else g=l}if((w|0)==118){w=0;if(!j){e=b;w=119;break}k[h>>2]=b;k[i+4>>2]=g;e=k[b>>2]|0;if(!e){h=b;e=g;w=200;break d}else{h=b;continue}}j=k[i>>2]|0;if(!j){e=g;g=i;w=139;break}if(m)e=k[j+8>>2]|0;else e=j+q|0;e=e+B|0;if(n)e=k[e>>2]|0;do if(!o)if(p){e=qO(s,e)|0;break}else{e=iO(s,e,C)|0;break}else e=cc[A&127](a,s,e,D)|0;while(0);if((e|0)>0){e=j+4|0;k[i>>2]=k[e>>2];k[e>>2]=i;k[h>>2]=j;e=k[j>>2]|0;if(!e){h=j;e=g;w=200;break d}else{h=j;continue}}if(!e){e=j;w=137;break}k[g+4>>2]=j;k[h>>2]=i;e=k[j+4>>2]|0;if(!e){h=i;e=j;w=200;break d}else{h=i;g=j}}if((w|0)==119)k[i+4>>2]=g;else if((w|0)==121){k[g+4>>2]=e;w=200;break}else if((w|0)==137){k[h>>2]=i;h=i}else if((w|0)==139){k[h>>2]=g;h=g;w=200;break}if(!e){e=g;w=200}else{i=g;g=e;w=141}}while(0);do if((w|0)==141){k[t>>2]=k[t>>2]|32768;e=g+4|0;k[h>>2]=k[e>>2];k[i+4>>2]=k[g>>2];if(!(c&516)){if(c&8){k[e>>2]=k[z>>2];k[g>>2]=0;k[z>>2]=g;e=i;w=169;break}if(c&16){w=z+4|0;k[g>>2]=k[w>>2];k[e>>2]=0;k[w>>2]=g;e=i;w=177;break}if(!u){e=i;w=182;break c}if(c&2049){if(k[(k[y>>2]|0)+4>>2]&4){d=g;break}k[e>>2]=0;e=z+4|0;k[g>>2]=k[e>>2];k[e>>2]=g;e=i;d=g;w=207;break}if(!(c&32)){d=0;break a}if(!(k[(k[y>>2]|0)+4>>2]&4)){k[d+4>>2]=0;x=z+4|0;k[d>>2]=k[x>>2];k[x>>2]=d;d=(k[F>>2]|0)+16|0;k[d>>2]=(k[d>>2]|0)+1;d=g;break}e=k[D+16>>2]|0;if(e)dc[e&127](a,f,D);if((k[v>>2]|0)<0){cc[k[a+12>>2]&127](a,d,0,D)|0;d=g}else d=g}else d=g}else if((w|0)==200){k[e+4>>2]=0;k[h>>2]=0;if(!(c&8))if(!(c&16)){if(c&516)break c;if(!(c&2049)){if(!(c&32)){f=0;break c}x=(k[F>>2]|0)+16|0;k[x>>2]=(k[x>>2]|0)+1}else{d=0;w=207}}else w=177;else w=169}while(0);if((w|0)==169){h=z+4|0;g=k[h>>2]|0;if(!g)break;d=k[g+4>>2]|0;if(!d){e=k[g>>2]|0;d=g}else{e=g;while(1){k[e+4>>2]=k[d>>2];k[d>>2]=e;f=k[d+4>>2]|0;if(!f)break;else{e=d;d=f}}}k[h>>2]=e}else if((w|0)==177){d=k[z>>2]|0;if(!d)break;e=k[d>>2]|0;if(e)while(1){x=e+4|0;k[d>>2]=k[x>>2];k[x>>2]=d;d=k[e>>2]|0;if(!d){d=e;break}else{x=e;e=d;d=x}}k[z>>2]=k[d+4>>2]}else if((w|0)==207){h=D+12|0;g=k[h>>2]|0;i=(c&1|0)==0;if(!(i|(g|0)==0))f=Tb[g&63](a,f,D)|0;do if(f){if((E|0)>-1){d=f+E|0;w=217;break}d=cc[k[a+12>>2]&127](a,0,12,D)|0;if(d){k[d+8>>2]=f;break}if((k[h>>2]|0)!=0?(x=k[D+16>>2]|0,!(i|(x|0)==0)):0){dc[x&127](a,f,D);w=217}else w=217}else w=217;while(0);if((w|0)==217)if(!d)break;e=(k[F>>2]|0)+16|0;f=k[e>>2]|0;if((f|0)>-1)k[e>>2]=f+1}f=k[z>>2]|0;k[d+4>>2]=f;k[d>>2]=k[z+4>>2];g=f;f:do if(!((c&516|0)==0?1:(k[(k[y>>2]|0)+4>>2]&8|0)==0)){n=(E|0)<0;if(n)e=k[d+8>>2]|0;else e=d+(0-E)|0;o=(C|0)<0;e=e+B|0;if(o)e=k[e>>2]|0;if(f){b=(A|0)==0;l=(C|0)<1;m=0-E|0;j=d+4|0;while(1){f=k[g>>2]|0;if(!f){i=g;h=g}else while(1){c=f+4|0;k[g>>2]=k[c>>2];k[c>>2]=g;g=k[f>>2]|0;if(!g){i=f;h=f;break}else{c=f;f=g;g=c}}k[j>>2]=h;if(n)f=k[h+8>>2]|0;else f=h+m|0;f=f+B|0;if(o)f=k[f>>2]|0;do if(b)if(l){f=qO(e,f)|0;break}else{f=iO(e,f,C)|0;break}else f=cc[A&127](a,e,f,D)|0;while(0);if(f)break f;k[d+4>>2]=k[h>>2];k[i>>2]=d;j=h+4|0;g=k[j>>2]|0;if(!g){d=h;break}else d=h}}}while(0);k[(k[F>>2]|0)+4>>2]=d;if((E|0)<0){d=k[d+8>>2]|0;break a}else{d=d+(0-E)|0;break a}}while(0);if((w|0)==182){if((E|0)<0)f=k[g+8>>2]|0;else f=g+(0-E)|0;d=k[D+16>>2]|0;if(!((c&2|0)==0|(d|0)==0))dc[d&127](a,f,D);if((k[v>>2]|0)<0)cc[k[a+12>>2]&127](a,g,0,D)|0;a=(k[F>>2]|0)+16|0;E=k[a>>2]|0;k[a>>2]=(E|0)<1?-1:E+-1|0}do{d=e+4|0;e=k[d>>2]|0}while((e|0)!=0);k[d>>2]=k[z>>2];k[(k[F>>2]|0)+4>>2]=k[z+4>>2];d=(c&2|0)!=0?f:0}while(0);r=G;return d|0}function Qr(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;if(k[k[a+8>>2]>>2]&4096)Mr(a,0)|0;e=(b|0)!=0;a:do if(e){if(k[k[b+8>>2]>>2]&4096)Mr(b,0)|0;if((k[b+16>>2]|0)==(k[a+16>>2]|0)){c=b;while(1){if((c|0)==(a|0)){c=0;break a}c=k[c+28>>2]|0;if(!c){d=9;break}}}else c=0}else d=9;while(0);do if((d|0)==9){d=a+28|0;c=k[d>>2]|0;if(c){f=c+24|0;k[f>>2]=(k[f>>2]|0)+-1}k[a+32>>2]=0;k[d>>2]=0;if(e){k[d>>2]=b;k[a>>2]=35;c=b+24|0;k[c>>2]=(k[c>>2]|0)+1;c=b;break}else{k[a>>2]=k[k[a+16>>2]>>2];break}}while(0);return c|0}function Rr(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0;a:do if(!(c&99)){if(!(c&516)){g=k[a+16>>2]|0;d=k[g+4>>2]|0;if((c&384|0)!=0&(d&12|0)==0){e=a;h=6}else{if(d&12){if(!(c&408)){d=0;break}n=(c&136|0)!=0;o=(c&272|0)!=0;f=a;l=0;m=0;e=0;while(1){d=Tb[k[g>>2]&63](f,b,c)|0;do if(!d){d=l;h=m}else{g=k[f+4>>2]|0;i=k[g+4>>2]|0;j=k[g+20>>2]|0;h=d+(k[g>>2]|0)|0;if((i|0)<0)h=k[h>>2]|0;if(l){do if(!j)if((i|0)<1){g=qO(h,m)|0;break}else{g=iO(h,m,i)|0;break}else g=cc[j&127](f,h,m,g)|0;while(0);if(!(n&(g|0)<0|o&(g|0)>0)){d=l;h=m;break}}e=f}while(0);f=k[f+28>>2]|0;if(!f)break;g=k[f+16>>2]|0;l=d;m=h}k[a+32>>2]=e;break}if(!(c&24)){d=0;break}j=a+32|0;e=k[j>>2]|0;if(e){d=k[(k[e+4>>2]|0)+8>>2]|0;f=k[(k[e+8>>2]|0)+4>>2]|0;if((d|0)<0)d=k[f+8>>2]|0;else d=f+(0-d)|0;if((d|0)==(b|0))d=b;else h=32}else h=32;if((h|0)==32){d=Tb[k[g>>2]&63](a,b,4)|0;b:do if(!d){d=a;while(1){e=k[d+28>>2]|0;if(!e)break;d=Tb[k[k[e+16>>2]>>2]&63](e,b,4)|0;if(!d)d=e;else break b}k[j>>2]=0;d=0;break a}else e=a;while(0);k[j>>2]=e}i=(c&8|0)==0;d=Tb[k[k[e+16>>2]>>2]&63](e,d,c)|0;while(1){if(d){g=(e|0)==(a|0);h=e+16|0;do{if(g)break a;else f=a;while(1){if(Tb[k[k[f+16>>2]>>2]&63](f,d,4)|0)break;f=k[f+28>>2]|0;if((f|0)==(e|0))break a}d=Tb[k[k[h>>2]>>2]&63](e,d,c)|0}while((d|0)!=0)}e=k[e+28>>2]|0;k[j>>2]=e;if(!e){d=0;break a}d=k[k[e+16>>2]>>2]|0;if(i){d=Tb[d&63](e,0,256)|0;continue}else{d=Tb[d&63](e,0,128)|0;continue}}}}else if(!a){e=0;d=0}else{e=a;h=6}c:do if((h|0)==6)while(1){d=Tb[k[k[e+16>>2]>>2]&63](e,b,c)|0;if(d)break c;e=k[e+28>>2]|0;if(!e){e=0;d=0;break}else h=6}while(0);k[a+32>>2]=e}else d=Tb[k[k[a+16>>2]>>2]&63](a,b,c)|0;while(0);return d|0}function Sr(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;e=a+32|0;f=Tb[k[a>>2]&63](a,0,128)|0;do{if(!f){d=0;break}g=k[e>>2]|0;d=f;f=Tb[k[a>>2]&63](a,f,8)|0;d=Tb[b&63]((g|0)==0?a:g,d,c)|0}while((d|0)>=0);return d|0}function Tr(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0;e=a+4|0;d=k[e>>2]|0;a:do if(d){if(b){n=k[k[a+16>>2]>>2]|0;g=a+8|0;if(k[k[g>>2]>>2]&4096)Mr(a,0)|0;f=k[d+32>>2]|0;if((f|0)!=0?(cc[f&127](a,3,b,d)|0)<0:0){d=0;break}k[e>>2]=b;e=k[b+28>>2]|0;k[a+12>>2]=(e|0)==0?50:e;e=k[k[g>>2]>>2]|0;if(!(e&112)){do if(!(e&2))if(!(e&3))if(!(c&1))break;else break a;else if((c&3|0)==3)break a;else break;else if(c&2)break a;while(0);f=Jr(a)|0;e=k[g>>2]|0;m=k[e>>2]|0;k[e>>2]=m&-4097;k[e+4>>2]=0;k[e+16>>2]=0;if((m&3|0)!=0?(h=k[e+8>>2]|0,m=k[e+12>>2]|0,i=h+(m<<2)|0,(m|0)>0):0){m=h+4|0;IP(h|0,0,(i>>>0>m>>>0?i:m)+~h+4&-4|0)|0}if(f){c=(c&2|0)==0;j=b+8|0;l=b+4|0;m=b+24|0;h=f;do{i=h;h=k[h>>2]|0;if(c){e=k[j>>2]|0;if((e|0)<0)e=k[i+8>>2]|0;else e=i+(0-e)|0;g=k[l>>2]|0;e=e+(k[b>>2]|0)|0;if((g|0)<0)e=k[e>>2]|0;f=k[m>>2]|0;if(!f)e=Vr(0,e,g)|0;else e=Tb[f&63](a,e,b)|0;k[i+4>>2]=e}Tb[n&63](a,i,32)|0}while((h|0)!=0)}}}}else{k[e>>2]=b;d=k[b+28>>2]|0;k[a+12>>2]=(d|0)==0?50:d;d=b}while(0);return d|0}function Ur(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=(c|0)==0;do if(!b)if(d)d=0;else d=uP(c)|0;else if(d){vP(b);d=0;break}else{d=xP(b,c)|0;break}while(0);return d|0}function Vr(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;d=b;if((c|0)>=1){e=c+-1|0;f=b+e|0;if((e|0)>0){e=b+2|0;e=(f>>>0>e>>>0?f:e)+~d+2&-2;d=b;do{a=ha(((l[d>>0]|0)<<8)+a+(l[d+1>>0]|0)|0,17109811)|0;d=d+2|0}while(d>>>0<f>>>0);b=b+e|0}if(b>>>0<=f>>>0)a=ha(((l[b>>0]|0)<<8)+a|0,17109811)|0}else{c=i[b>>0]|0;if(c<<24>>24)do{f=i[b+1>>0]|0;a=ha(((c&255)<<8)+a+(f&255)|0,17109811)|0;b=b+(f<<24>>24!=0?2:1)|0;c=i[b>>0]|0}while(c<<24>>24!=0);c=b-d|0}return ha(a+c|0,17109811)|0}function Wr(a){a=a|0;var b=0;b=k[12824]|0;k[12824]=a;return b|0}function Xr(a){a=a|0;var b=0;b=k[12825]|0;k[12825]=a;return b|0}function Yr(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=r;r=r+16|0;e=d;k[e>>2]=c;c=_r(a,b,e)|0;r=d;return c|0}function Zr(a,b){a=a|0;b=b|0;var c=0,d=0;c=r;r=r+16|0;d=c;k[d>>2]=b;_r(1,a,d)|0;r=c;return}function _r(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;g=r;r=r+16|0;e=g;f=(a|0)==3;d=f?k[12829]|0:(a|0)==2?1:a;k[12829]=d;h=k[12828]|0;k[12828]=h>>>0>d>>>0?h:d;do if(d>>>0>=(k[12825]|0)>>>0){d=k[12824]|0;if(!d){d=k[24528]|0;if(!f){k[e>>2]=(a|0)==1?132562:132568;FN(d,132576,e)|0}XN(d,b,c)|0;d=0;break}if((k[12830]|0)==0?(h=uP(k[12831]|0)|0,k[12830]=h,(h|0)==0):0){QN(132526,35,1,k[24528]|0)|0;d=0;break}if(!f){Rb[d&63]((a|0)==1?132562:132568)|0;Rb[k[51296>>2]&63](134141)|0}while(1){d=ZN(k[12830]|0,k[12831]|0,b,c)|0;a=k[12831]|0;if((d|0)>-1&(d|0)<(a|0)){a=9;break}f=a<<1;h=d+1|0;h=(f|0)>(h|0)?f:h;k[12831]=h;if(!(xP(k[12830]|0,h)|0)){a=11;break}}if((a|0)==9){Rb[k[51296>>2]&63](k[12830]|0)|0;d=0;break}else if((a|0)==11){QN(132526,35,1,k[24528]|0)|0;d=0;break}}else{d=k[12826]|0;if(!d){d=VN()|0;k[12826]=d;if(!d){d=1;break}}if(!f){d=ON(d)|0;k[12827]=d;d=k[12826]|0}XN(d,b,c)|0;d=0}while(0);r=g;return d|0}function $r(a,b,c){a=a|0;b=b|0;c=c|0;if(!c){c=(b|0)==0?1024:b;k[a+12>>2]=1;b=c;c=uP(c)|0}else k[a+12>>2]=0;k[a>>2]=c;k[a+8>>2]=c+b;k[a+4>>2]=c;i[c>>0]=0;return}function as(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;g=a+8|0;e=k[a>>2]|0;d=e;f=(k[g>>2]|0)-d|0;c=f<<1;f=f+b|0;c=(f|0)>(c|0)?f:c;f=a+4|0;d=(k[f>>2]|0)-d|0;b=a+12|0;if(!(k[b>>2]|0)){h=uP(c)|0;GP(h|0,e|0,d|0)|0;k[b>>2]=1;b=h}else b=xP(e,c)|0;k[a>>2]=b;k[f>>2]=b+d;k[g>>2]=b+c;return 0}function bs(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=a+4|0;d=k[e>>2]|0;if((d+c|0)>>>0>(k[a+8>>2]|0)>>>0){as(a,c)|0;d=k[e>>2]|0}GP(d|0,b|0,c|0)|0;k[e>>2]=(k[e>>2]|0)+c;return c|0}function cs(a,b){a=a|0;b=b|0;return bs(a,b,uO(b)|0)|0}function ds(a){a=a|0;if(k[a+12>>2]|0)vP(k[a>>2]|0);return}function es(a){a=a|0;var b=0,c=0;b=a+4|0;c=k[b>>2]|0;if(c>>>0>(k[a>>2]|0)>>>0){k[b>>2]=c+-1;b=l[c>>0]|0}else b=-1;return b|0}function fs(a,b){a=a|0;b=b|0;var c=0,d=0;c=pu(a,132581,0)|0;if((b|0)!=0&(c|0)==0){d=au(a)|0;kv(d,d,97,0,1)|0;c=Kt(d)|0;if(c)do{os(a,c);b=Es(d,c)|0;if(b)do{qs(a,b);b=Gs(d,b)|0}while((b|0)!=0);c=Lt(d,c)|0}while((c|0)!=0);c=pu(a,132581,0)|0}return c|0}function gs(a,b){a=a|0;b=b|0;var c=0,d=0;d=r;r=r+16|0;c=d;a=pu(a,132581,0)|0;a:do if(!a)a=0;else switch(b|0){case 0:{a=k[a+16>>2]|0;break a}case 1:{a=k[a+8>>2]|0;break a}case 2:case 3:{a=k[a+12>>2]|0;break a}default:{k[c>>2]=b;Yr(1,132594,c)|0;a=0;break a}}while(0);r=d;return a|0}function hs(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;f=Et(a,24)|0;i[f+20>>0]=e;b=Bu(a,b)|0;k[f+8>>2]=b;c=Bu(a,c)|0;k[f+12>>2]=c;k[f+16>>2]=d;return f|0}function is(a,b){a=a|0;b=b|0;var c=0,d=0;d=r;r=r+32|0;c=d;a=pu(a,k[12841]|0,0)|0;if(!a)a=0;else{a=k[a+8>>2]|0;k[c+8>>2]=b;a=Tb[k[a>>2]&63](a,c,4)|0}r=d;return a|0}function js(a){a=a|0;return pu(a,k[12841]|0,0)|0}function ks(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0;j=r;r=r+32|0;f=j;if(!a){a=k[12842]|0;if(!a){k[f>>2]=k[12843];i=Vs(0,f,0)|0;k[12842]=i}else i=a}else i=a;if(!d){a=gs(i,b)|0;if(!a)a=0;else{k[f+8>>2]=c;a=Tb[k[a>>2]&63](a,f,4)|0}}else{g=au(i)|0;fs(i,1)|0;e=gs(i,b)|0;l=Qr(e,0)|0;k[f+8>>2]=c;a=Tb[k[e>>2]&63](e,f,4)|0;Qr(e,l)|0;a:do if(!a){k[f+8>>2]=c;a=Tb[k[e>>2]&63](e,f,4)|0;if(a){a=hs(i,c,d,k[a+16>>2]|0,b)|0;Tb[k[e>>2]&63](e,a,1)|0;h=17;break}l=gs(g,b)|0;a=hs(i,c,d,Nr(l)|0,b)|0;Tb[k[l>>2]&63](l,a,1)|0;switch(b|0){case 0:{kv(g,g,55,a,1)|0;h=17;break a}case 1:{e=Kt(g)|0;if(!e)break a;do{ys(i,e,a);e=Lt(g,e)|0}while((e|0)!=0);h=17;break}case 2:case 3:{e=Kt(g)|0;if(!e)break a;do{f=Es(g,e)|0;if(f)do{ys(i,f,a);f=Gs(g,f)|0}while((f|0)!=0);e=Lt(g,e)|0}while((e|0)!=0);h=17;break}default:break a}}else{h=a+12|0;Du(i,k[h>>2]|0)|0;l=Bu(i,d)|0;k[h>>2]=l;h=17}while(0);if((h|0)==17)if((b|0)==0&(a|0)!=0)vs(i,a,d)|0;du(i,i,a)}r=j;return a|0}function ls(a,b,c){a=a|0;b=b|0;c=c|0;a=gs(a,b)|0;do if(a){b=k[a>>2]|0;if(!c){a=Tb[b&63](a,0,128)|0;break}else{a=Tb[b&63](a,c,8)|0;break}}else a=0;while(0);return a|0}function ms(a){a=a|0;var b=0,c=0,d=0,e=0;c=a+12|0;i[c>>0]=i[c>>0]|64;c=qu(a,132581,20,0)|0;b=Pu(a,51328,k[12819]|0)|0;d=c+8|0;k[d>>2]=b;b=Pu(a,51328,k[12819]|0)|0;e=c+12|0;k[e>>2]=b;b=Pu(a,51328,k[12819]|0)|0;c=c+16|0;k[c>>2]=b;b=Ku(a)|0;if(!b){b=k[12842]|0;if(!((b|0)==0|(b|0)==(a|0))){b=pu(b,132581,0)|0;zs(k[b+8>>2]|0,k[d>>2]|0,a,1);zs(k[b+12>>2]|0,k[e>>2]|0,a,2);zs(k[b+16>>2]|0,k[c>>2]|0,a,0)}}else{b=pu(b,132581,0)|0;Qr(k[d>>2]|0,k[b+8>>2]|0)|0;Qr(k[e>>2]|0,k[b+12>>2]|0)|0;Qr(k[c>>2]|0,k[b+16>>2]|0)|0}e=Ku(a)|0;As((e|0)==0?a:e,a);return}function ns(a){a=a|0;var b=0;k[12896]=a;b=pu(a,k[12841]|0,0)|0;if(b){Bs(a,b);ru(a,k[b>>2]|0)|0}b=pu(a,132581,0)|0;if(b)if(((Ru(a,k[b+8>>2]|0)|0)==0?(Ru(a,k[b+12>>2]|0)|0)==0:0)?(Ru(a,k[b+16>>2]|0)|0)==0:0){ru(a,k[b>>2]|0)|0;b=0}else b=1;else b=0;return b|0}function os(a,b){a=a|0;b=b|0;var c=0;c=pu(b,k[12841]|0,0)|0;if(!((c|0)!=0?(k[c+8>>2]|0)!=0:0))As(a,b);return}function ps(a){a=a|0;var b=0;b=pu(a,k[12841]|0,0)|0;if(b){Bs(a,b);ru(a,k[12841]|0)|0}return}function qs(a,b){a=a|0;b=b|0;var c=0;c=pu(b,k[12841]|0,0)|0;if(!((c|0)!=0?(k[c+8>>2]|0)!=0:0))As(a,b);return}function rs(a){a=a|0;var b=0;b=pu(a,k[12841]|0,0)|0;if(b){Bs(a,b);ru(a,k[12841]|0)|0}return}function ss(a,b){a=a|0;b=b|0;b=is(a,b)|0;if(!b)b=0;else{a=pu(a,k[12841]|0,0)|0;b=k[(k[a+12>>2]|0)+(k[b+16>>2]<<2)>>2]|0}return b|0}function ts(a,b){a=a|0;b=b|0;a=pu(a,k[12841]|0,0)|0;return k[(k[a+12>>2]|0)+(k[b+16>>2]<<2)>>2]|0}function us(a,b,c){a=a|0;b=b|0;c=c|0;b=is(a,b)|0;if(!b)b=-1;else{vs(a,b,c)|0;b=0}return b|0}function vs(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0;i=r;r=r+32|0;d=i;e=$t(a)|0;g=pu(a,k[12841]|0,0)|0;h=b+16|0;g=g+12|0;Du(e,k[(k[g>>2]|0)+(k[h>>2]<<2)>>2]|0)|0;f=Bu(e,c)|0;k[(k[g>>2]|0)+(k[h>>2]<<2)>>2]=f;do if(!(k[a>>2]&3)){f=(pu(e,132581,0)|0)+16|0;f=k[f>>2]|0;g=b+8|0;l=k[g>>2]|0;j=Qr(f,0)|0;k[d+8>>2]=l;d=Tb[k[f>>2]&63](f,d,4)|0;Qr(f,j)|0;if(!d){l=hs(e,k[g>>2]|0,c,k[h>>2]|0,k[a>>2]&3)|0;Tb[k[f>>2]&63](f,l,1)|0;break}else{l=d+12|0;Du(e,k[l>>2]|0)|0;j=Bu(e,c)|0;k[l>>2]=j;break}}while(0);du(e,a,b);r=i;return 0}function ws(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=$t(a)|0;e=ks(e,k[a>>2]&3,b,0)|0;if(!e){e=$t(a)|0;e=ks(e,k[a>>2]&3,b,d)|0}vs(a,e,c)|0;return 0}function xs(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;e=$t(a)|0;c=k[a>>2]|0;a:do if(((k[b>>2]^c)&3|0)==0?(d=ls(e,c&3,0)|0,(d|0)!=0):0){c=d;while(1){d=is(b,k[c+8>>2]|0)|0;if(!d){c=1;break a}f=pu(a,k[12841]|0,0)|0;f=k[(k[f+12>>2]|0)+(k[c+16>>2]<<2)>>2]|0;vs(b,d,f)|0;if(Eu(f)|0){f=pu(b,k[12841]|0,0)|0;Fu(k[(k[f+12>>2]|0)+(k[d+16>>2]<<2)>>2]|0)}c=ls(e,k[a>>2]&3,c)|0;if(!c){c=0;break}}}else c=1;while(0);return c|0}function ys(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;b=pu(b,k[12841]|0,0)|0;e=c+16|0;d=k[e>>2]|0;if((d|0)>3){f=k[a+52>>2]|0;b=b+12|0;d=d<<2;d=cc[k[(k[f>>2]|0)+8>>2]&127](k[f+12>>2]|0,k[b>>2]|0,d,d+4|0)|0;k[b>>2]=d}else b=b+12|0;f=Bu(a,k[c+12>>2]|0)|0;k[(k[b>>2]|0)+(k[e>>2]<<2)>>2]=f;return}function zs(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=Tb[k[a>>2]&63](a,0,128)|0;if(e)do{f=hs(c,k[e+8>>2]|0,k[e+12>>2]|0,k[e+16>>2]|0,d)|0;i[f+22>>0]=i[e+22>>0]|0;i[f+21>>0]=i[e+21>>0]|0;Tb[k[b>>2]&63](b,f,1)|0;e=Tb[k[a>>2]&63](a,e,8)|0}while((e|0)!=0);return}function As(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;d=qu(b,k[12841]|0,16,0)|0;g=gs(a,k[b>>2]&3)|0;e=d+8|0;if((k[e>>2]|0)==0?(c=au(a)|0,c=gs(c,k[b>>2]&3)|0,k[e>>2]=c,c=Ds(b)|0,f=$t(b)|0,c=Et(f,(c|0)<4?16:c<<2)|0,f=d+12|0,k[f>>2]=c,c=Tb[k[g>>2]&63](g,0,128)|0,(c|0)!=0):0)do{a=$t(b)|0;a=Bu(a,k[c+12>>2]|0)|0;k[(k[f>>2]|0)+(k[c+16>>2]<<2)>>2]=a;c=Tb[k[g>>2]&63](g,c,8)|0}while((c|0)!=0);return}function Bs(a,b){a=a|0;b=b|0;var c=0,d=0;d=$t(a)|0;c=Ds(a)|0;a=b+12|0;if((c|0)>0){b=0;do{Du(d,k[(k[a>>2]|0)+(b<<2)>>2]|0)|0;b=b+1|0}while((b|0)!=(c|0))}Ft(d,k[a>>2]|0);return}function Cs(a,b,c){a=a|0;b=b|0;c=c|0;Du(k[12896]|0,k[b+8>>2]|0)|0;Du(k[12896]|0,k[b+12>>2]|0)|0;Ft(k[12896]|0,b);return}function Ds(a){a=a|0;var b=0;b=au($t(a)|0)|0;a=gs(b,k[a>>2]&3)|0;if(!a)a=0;else a=Nr(a)|0;return a|0}function Es(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=r;r=r+48|0;c=e;if((k[b+12>>2]|0)!=(a|0)){k[c+16>>2]=b;b=k[a+28>>2]|0;b=Tb[k[b>>2]&63](b,c,4)|0;if(!b)b=0;else d=4}else{b=b+16|0;d=4}if((d|0)==4){a=a+32|0;d=b+32|0;Mr(k[a>>2]|0,k[d>>2]|0)|0;b=k[a>>2]|0;b=Tb[k[b>>2]&63](b,0,128)|0;a=Ir(k[a>>2]|0)|0;k[d>>2]=a}r=e;return b|0}function Fs(a,b){a=a|0;b=b|0;var c=0,d=0;d=r;r=r+48|0;c=d;if((k[b+12>>2]|0)==(a|0))a=b+16|0;else{k[c+16>>2]=b;a=k[a+28>>2]|0;a=Tb[k[a>>2]&63](a,c,4)|0}r=d;return a|0}function Gs(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=r;r=r+48|0;d=f;c=k[((k[b>>2]&3|0)==3?b:b+32|0)+28>>2]|0;if((k[c+12>>2]|0)!=(a|0)){k[d+16>>2]=c;c=k[a+28>>2]|0;c=Tb[k[c>>2]&63](c,d,4)|0;if(!c)c=0;else e=4}else{c=c+16|0;e=4}if((e|0)==4){a=a+32|0;e=c+32|0;Mr(k[a>>2]|0,k[e>>2]|0)|0;c=k[a>>2]|0;c=Tb[k[c>>2]&63](c,b,8)|0;a=Ir(k[a>>2]|0)|0;k[e>>2]=a}r=f;return c|0}function Hs(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=r;r=r+48|0;c=e;if((k[b+12>>2]|0)!=(a|0)){k[c+16>>2]=b;b=k[a+28>>2]|0;b=Tb[k[b>>2]&63](b,c,4)|0;if(!b)b=0;else d=4}else{b=b+16|0;d=4}if((d|0)==4){a=a+32|0;d=b+28|0;Mr(k[a>>2]|0,k[d>>2]|0)|0;b=k[a>>2]|0;b=Tb[k[b>>2]&63](b,0,128)|0;a=Ir(k[a>>2]|0)|0;k[d>>2]=a}r=e;return b|0}function Is(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=r;r=r+48|0;d=f;c=k[((k[b>>2]&3|0)==2?b:b+-32|0)+28>>2]|0;if((k[c+12>>2]|0)!=(a|0)){k[d+16>>2]=c;c=k[a+28>>2]|0;c=Tb[k[c>>2]&63](c,d,4)|0;if(!c)c=0;else e=4}else{c=c+16|0;e=4}if((e|0)==4){a=a+32|0;e=c+28|0;Mr(k[a>>2]|0,k[e>>2]|0)|0;c=k[a>>2]|0;c=Tb[k[c>>2]&63](c,b,8)|0;a=Ir(k[a>>2]|0)|0;k[e>>2]=a}r=f;return c|0}function Js(a,b){a=a|0;b=b|0;var c=0;c=Es(a,b)|0;if(!c)c=Hs(a,b)|0;return c|0}function Ks(a,b,c){a=a|0;b=b|0;c=c|0;a:do if((k[b>>2]&3|0)==2){b=Gs(a,b)|0;if(!b){b=0;do{if(!b)b=Hs(a,c)|0;else b=Is(a,b)|0;if(!b){b=0;break a}}while((k[b+28>>2]|0)==(c|0))}}else do{b=Is(a,b)|0;if(!b){b=0;break a}}while((k[b+28>>2]|0)==(c|0));while(0);return b|0}function Ls(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0;m=r;r=r+32|0;i=m+16|0;j=m+8|0;h=m;do if(!(et(a,2,d,j,0)|0)){f=(e|0)==0;if(d)if(f){f=0;break}else{l=16;break}if(!f?(ct(a)|0)==0:0){l=16;break}l=h;k[l>>2]=0;k[l+4>>2]=0;k[h>>2]=0;k[h+4>>2]=0;l=7}else{l=h;k[l>>2]=0;k[l+4>>2]=0;k[h+4>>2]=k[j>>2];k[h>>2]=2;l=7}while(0);do if((l|0)==7){k[i>>2]=k[h>>2];k[i+4>>2]=k[h+4>>2];f=Rs(a,b,c,i)|0;if(!f){if((bt(a)|0)!=0?(k[i>>2]=k[h>>2],k[i+4>>2]=k[h+4>>2],g=Rs(a,c,b,i)|0,(g|0)!=0):0){f=g;break}if(!e)f=0;else{f=au(a)|0;k[i>>2]=k[h>>2];k[i+4>>2]=k[h+4>>2];f=Rs(f,b,c,i)|0;if(!f){if(!(bt(a)|0)){l=16;break}f=au(a)|0;k[i>>2]=k[h>>2];k[i+4>>2]=k[h+4>>2];f=Rs(f,c,b,i)|0;if(!f){l=16;break}}Ts(a,f)}}}while(0);if((l|0)==16)if((Ss(a,b,c)|0)!=0?(et(a,2,d,j,1)|0)!=0:0){f=Us(a,b,c,k[j>>2]|0)|0;it(a,2,f)}else f=0;r=m;return f|0}function Ms(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0;i=r;r=r+48|0;h=i;f=(k[b>>2]&3|0)==3;g=f?b+-32|0:b;f=f?b:b+32|0;c=k[f+28>>2]|0;e=k[g+28>>2]|0;if((k[c+12>>2]|0)==(a|0))c=c+16|0;else{k[h+16>>2]=c;c=k[a+28>>2]|0;c=Tb[k[c>>2]&63](c,h,4)|0}b=a+32|0;j=k[b>>2]|0;d=c+32|0;Mr(j,k[d>>2]|0)|0;Tb[k[j>>2]&63](j,g,2)|0;j=Ir(j)|0;k[d>>2]=j;d=a+36|0;j=k[d>>2]|0;c=c+24|0;Mr(j,k[c>>2]|0)|0;Tb[k[j>>2]&63](j,g,2)|0;g=Ir(j)|0;k[c>>2]=g;if((k[e+12>>2]|0)==(a|0))c=e+16|0;else{k[h+16>>2]=e;c=k[a+28>>2]|0;c=Tb[k[c>>2]&63](c,h,4)|0}j=k[b>>2]|0;a=c+28|0;Mr(j,k[a>>2]|0)|0;Tb[k[j>>2]&63](j,f,2)|0;j=Ir(j)|0;k[a>>2]=j;a=k[d>>2]|0;j=c+20|0;Mr(a,k[j>>2]|0)|0;Tb[k[a>>2]&63](a,f,2)|0;a=Ir(a)|0;k[j>>2]=a;r=i;return}function Ns(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;c=r;r=r+16|0;d=c;b=(k[b>>2]&3|0)==2?b:b+-32|0;e=k[b>>2]&3;f=k[((e|0)==3?b:b+32|0)+28>>2]|0;e=k[((e|0)==2?b:b+-32|0)+28>>2]|0;k[d>>2]=k[b>>2];k[d+4>>2]=k[b+4>>2];if(Rs(a,f,e,d)|0){if((au(a)|0)==(a|0)){if(i[a+12>>0]&64)rs(b);fu(a,b);uu(b);gt(a,2,k[b+4>>2]|0)}if(!(kv(a,b,56,0,0)|0))if((au(a)|0)==(a|0)){Ft(a,b);b=0}else b=0;else b=-1}else b=-1;r=c;return b|0}function Os(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;g=r;r=r+16|0;d=g;f=Pt(a,k[((k[b>>2]&3|0)==3?b:b+32|0)+28>>2]|0,c)|0;e=Pt(a,k[((k[b>>2]&3|0)==2?b:b+-32|0)+28>>2]|0,c)|0;do if((f|0)!=0&(e|0)!=0){k[d>>2]=k[b>>2];k[d+4>>2]=k[b+4>>2];d=Rs(a,f,e,d)|0;e=(d|0)==0;if(!((c|0)!=0&e)){if(e){d=0;break}}else{Ts(a,b);d=b}e=k[d>>2]&3;if((e|0)!=(k[b>>2]&3|0))d=(e|0)==3?d+-32|0:d+32|0}else d=0;while(0);r=g;return d|0}function Ps(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;e=k[(k[b+28>>2]|0)+4>>2]|0;d=k[(k[c+28>>2]|0)+4>>2]|0;a=e-d|0;if((e|0)==(d|0))if((k[b>>2]&3|0)!=0?(k[c>>2]&3|0)!=0:0)a=(k[b+4>>2]|0)-(k[c+4>>2]|0)|0;else a=0;return ((a|0)==0?0:a>>31|1)|0}function Qs(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=k[b+28>>2]|0;d=k[c+28>>2]|0;if((a|0)==(d|0))a=((k[b>>2]|0)>>>4)-((k[c>>2]|0)>>>4)|0;else a=((k[a>>2]|0)>>>4)-((k[d>>2]|0)>>>4)|0;return ((a|0)==0?0:a>>31|1)|0}function Rs(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;g=r;r=r+80|0;e=g+32|0;f=g;do if((b|0)==0|(c|0)==0)c=0;else{i=d;h=k[i+4>>2]|0;d=f;k[d>>2]=k[i>>2];k[d+4>>2]=h;k[f+28>>2]=b;if((k[c+12>>2]|0)!=(a|0)){k[e+16>>2]=c;c=k[a+28>>2]|0;c=Tb[k[c>>2]&63](c,e,4)|0;if(!c){c=0;break}}else c=c+16|0;h=a+36|0;i=c+20|0;Mr(k[h>>2]|0,k[i>>2]|0)|0;c=k[h>>2]|0;c=Tb[k[c>>2]&63](c,f,4)|0;h=Ir(k[h>>2]|0)|0;k[i>>2]=h}while(0);r=g;return c|0}function Ss(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;g=r;r=r+16|0;e=g+8|0;d=g;if(ct(a)|0)if(!((b|0)==(c|0)&(i[a+12>>0]&4)!=0)?(h=d,k[h>>2]=0,k[h+4>>2]=0,k[d>>2]=0,k[e>>2]=k[d>>2],k[e+4>>2]=k[d+4>>2],(Rs(a,b,c,e)|0)==0):0)f=4;else a=0;else f=4;if((f|0)==4)a=1;r=g;return a|0}function Ts(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0;s=r;r=r+48|0;f=s;p=k[b>>2]&3;o=(p|0)==2?b:b+-32|0;p=(p|0)==3?b:b+32|0;q=k[p+28>>2]|0;g=k[o+28>>2]|0;a:do if(a){h=q+12|0;i=q+16|0;j=g+12|0;l=g+16|0;m=f+16|0;n=f+16|0;do{k[f>>2]=k[b>>2];k[f+4>>2]=k[b+4>>2];if(Rs(a,q,g,f)|0)break a;if((k[h>>2]|0)==(a|0))c=i;else{k[n>>2]=q;c=k[a+28>>2]|0;c=Tb[k[c>>2]&63](c,f,4)|0}d=a+32|0;t=k[d>>2]|0;e=c+32|0;Mr(t,k[e>>2]|0)|0;Tb[k[t>>2]&63](t,o,1)|0;t=Ir(t)|0;k[e>>2]=t;e=a+36|0;t=k[e>>2]|0;c=c+24|0;Mr(t,k[c>>2]|0)|0;Tb[k[t>>2]&63](t,o,1)|0;t=Ir(t)|0;k[c>>2]=t;if((k[j>>2]|0)==(a|0))c=l;else{k[m>>2]=g;c=k[a+28>>2]|0;c=Tb[k[c>>2]&63](c,f,4)|0}d=k[d>>2]|0;t=c+28|0;Mr(d,k[t>>2]|0)|0;Tb[k[d>>2]&63](d,p,1)|0;d=Ir(d)|0;k[t>>2]=d;e=k[e>>2]|0;t=c+20|0;Mr(e,k[t>>2]|0)|0;Tb[k[e>>2]&63](e,p,1)|0;e=Ir(e)|0;k[t>>2]=e;a=Ku(a)|0}while((a|0)!=0)}while(0);r=s;return}function Us(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0;Pt(a,b,1)|0;Pt(a,c,1)|0;e=Et(a,64)|0;f=e+32|0;j=Xs(a,2)|0;g=k[f>>2]|0;h=k[e>>2]|0;k[e+4>>2]=d;k[e+36>>2]=d;d=j<<4;k[e>>2]=h&12|d|2;k[f>>2]=g&12|d|3;k[e+60>>2]=b;k[e+28>>2]=c;Ts(a,e);if(i[a+12>>0]&64){qu(e,k[12841]|0,16,0)|0;qs(a,e)}bu(a,e);return e|0}function Vs(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0;l=r;r=r+16|0;j=l;d=(c|0)!=0;if(d){e=k[c>>2]|0;e=(e|0)==0?51716:e}else e=51716;f=Rb[k[e>>2]&63](c)|0;g=e+4|0;h=_b[k[g>>2]&127](f,68)|0;k[h>>2]=e;k[h+12>>2]=f;if(d){d=k[c+4>>2]|0;k[h+4>>2]=(d|0)==0?51588:d;d=k[c+8>>2]|0;d=(d|0)==0?51692:d}else{k[h+4>>2]=51588;d=51692}k[h+8>>2]=d;i[h+40>>0]=1;d=_b[k[g>>2]&127](f,56)|0;k[d>>2]=k[d>>2]&-4;g=d+52|0;k[g>>2]=h;f=d+12|0;b=k[b>>2]|0;k[f>>2]=b;i[f>>0]=b&255|8;k[d+48>>2]=d;b=_b[k[k[h+4>>2]>>2]&127](d,c)|0;k[(k[g>>2]|0)+16>>2]=b;if(et(d,0,a,j,1)|0)k[d+4>>2]=k[j>>2];a=Ws(d)|0;it(a,0,a);r=l;return a|0}function Ws(a){a=a|0;var b=0,c=0,d=0;b=Pu(a,51772,k[12819]|0)|0;k[a+24>>2]=b;b=Pu(a,51736,k[12819]|0)|0;k[a+28>>2]=b;b=(au(a)|0)==(a|0);b=Pu(a,b?51376:51412,k[12819]|0)|0;k[a+32>>2]=b;b=(au(a)|0)==(a|0);b=Pu(a,b?51448:51484,k[12819]|0)|0;k[a+36>>2]=b;b=Pu(a,51520,k[12819]|0)|0;k[a+40>>2]=b;b=Ku(a)|0;if(!((b|0)!=0?(d=(k[b+52>>2]|0)+24|0,c=(k[d>>2]|0)+1|0,k[d>>2]=c,k[a>>2]=k[a>>2]&15|c<<4,c=k[b+40>>2]|0,Tb[k[c>>2]&63](c,a,1)|0,(i[b+12>>0]&64)==0):0))ms(a);bu(a,a);return a|0}function Xs(a,b){a=a|0;b=b|0;a=(k[a+52>>2]|0)+24+(b<<2)|0;b=(k[a>>2]|0)+1|0;k[a>>2]=b;return b|0}function Ys(a){a=a|0;var b=0,c=0,d=0,e=0;d=Ku(a)|0;e=(d|0)==0;if(e?(b=a+52|0,(k[(k[k[b>>2]>>2]|0)+16>>2]|0)!=0):0){fu(a,a);gt(a,0,k[a+4>>2]|0);b=k[b>>2]|0;Nb[k[(k[b>>2]|0)+16>>2]&127](k[b+12>>2]|0);b=0}else c=4;do if((c|0)==4){b=Iu(a)|0;if(b)do{c=b;b=Ju(b)|0;Ys(c)|0}while((b|0)!=0);b=Kt(a)|0;if(b)do{c=b;b=Lt(a,b)|0;St(a,c)|0}while((b|0)!=0);vt(a);fu(a,a);if(((((Ru(a,k[a+28>>2]|0)|0)==0?(Ru(a,k[a+24>>2]|0)|0)==0:0)?(Ru(a,k[a+36>>2]|0)|0)==0:0)?(Ru(a,k[a+32>>2]|0)|0)==0:0)?(Ru(a,k[a+40>>2]|0)|0)==0:0){if((i[a+12>>0]&64)!=0?(ns(a)|0)!=0:0){b=-1;break}uu(a);gt(a,0,k[a+4>>2]|0);if(!e){Lu(d,a)|0;Ft(d,a);b=0;break}d=a+52|0;b=k[d>>2]|0;c=k[b+36>>2]|0;if(c)do{iu(a,k[c>>2]|0)|0;b=k[d>>2]|0;c=k[b+36>>2]|0}while((c|0)!=0);Nb[k[(k[b+4>>2]|0)+20>>2]&127](k[b+16>>2]|0);if(!(zu(a)|0)){b=k[d>>2]|0;e=k[b+12>>2]|0;d=(k[b>>2]|0)+12|0;Pb[k[d>>2]&31](e,a);Pb[k[d>>2]&31](e,b);b=0}else b=-1}else b=-1}while(0);return b|0}function Zs(a){a=a|0;return Nr(k[a+28>>2]|0)|0}function _s(a){a=a|0;var b=0,c=0;b=Kt(a)|0;if(!b)b=0;else{c=b;b=0;do{b=($s(a,c,0,1)|0)+b|0;c=Lt(a,c)|0}while((c|0)!=0)}return b|0}function $s(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=Fs(a,b)|0;if(e){if(!d)b=0;else{f=k[a+32>>2]|0;d=e+32|0;Mr(f,k[d>>2]|0)|0;b=Nr(f)|0;f=Ir(f)|0;k[d>>2]=f}if(c){a=k[a+32>>2]|0;c=e+28|0;Mr(a,k[c>>2]|0)|0;f=Nr(a)|0;a=Ir(a)|0;k[c>>2]=a;b=f+b|0}}else b=0;return b|0}function at(a){a=a|0;return i[a+12>>0]&1|0}function bt(a){a=a|0;return (i[a+12>>0]&1^1)&255|0}function ct(a){a=a|0;return (l[a+12>>0]|0)>>>1&1|0}function dt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=k[b+4>>2]|0;b=k[c+4>>2]|0;if((a|0)==(b|0))b=0;else b=a-b>>31|1;return b|0}function et(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;g=(c|0)!=0;do if(g){if((i[c>>0]|0)!=37?(f=k[a+52>>2]|0,f=Sb[k[(k[f+4>>2]|0)+4>>2]&63](k[f+16>>2]|0,b,c,d,e)|0,(f|0)!=0):0)break;f=qt(a,b,c,d)|0;if(!f)h=5}else h=5;while(0);if((h|0)==5)if(e){f=k[a+52>>2]|0;f=Sb[k[(k[f+4>>2]|0)+4>>2]&63](k[f+16>>2]|0,b,0,d,e)|0;if(g&(f|0)!=0)rt(a,b,c,k[d>>2]|0)}else f=0;return f|0}function ft(a,b,c){a=a|0;b=b|0;c=c|0;a=k[a+52>>2]|0;return Tb[k[(k[a+4>>2]|0)+8>>2]&63](k[a+16>>2]|0,b,c)|0}function gt(a,b,c){a=a|0;b=b|0;c=c|0;tt(a,b,c)|0;a=k[a+52>>2]|0;dc[k[(k[a+4>>2]|0)+12>>2]&127](k[a+16>>2]|0,b,c);return}function ht(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;g=r;r=r+16|0;f=g;c=$t(a)|0;e=a+4|0;d=st(c,k[a>>2]&3,k[e>>2]|0)|0;do if(!d){d=k[c+52>>2]|0;c=k[(k[d+4>>2]|0)+16>>2]|0;if((c|0)!=0?(b=Tb[c&63](k[d+16>>2]|0,k[a>>2]&3,k[e>>2]|0)|0,(b|0)!=0):0)break;if((k[a>>2]&3|0)==2)b=0;else{b=k[e>>2]|0;k[f>>2]=37;k[f+4>>2]=b;TN(132633,132665,f)|0;b=132633}}else b=d;while(0);r=g;return b|0}function it(a,b,c){a=a|0;b=b|0;c=c|0;a=k[a+52>>2]|0;dc[k[(k[a+4>>2]|0)+24>>2]&127](k[a+16>>2]|0,b,c);return}function jt(a,b){a=a|0;b=b|0;return a|0}function kt(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;if(!c){k[d>>2]=k[12904];k[12904]=(k[12904]|0)+2}else{if(!e)e=Au(a,c)|0;else e=Bu(a,c)|0;k[d>>2]=e}return 1}function lt(a,b,c){a=a|0;b=b|0;c=c|0;return 0}function mt(a,b,c){a=a|0;b=b|0;c=c|0;if(!(c&1))Du(a,c)|0;return}function nt(a,b,c){a=a|0;b=b|0;c=c|0;return ((c&1|0)==0?c:0)|0}function ot(a){a=a|0;return}function pt(a,b,c){a=a|0;b=b|0;c=c|0;return}function qt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;h=r;r=r+32|0;g=h;b=k[(k[a+52>>2]|0)+44+(((b|0)==3?2:b)<<2)>>2]|0;if(((b|0)!=0?(f=Au(a,c)|0,(f|0)!=0):0)?(k[g+20>>2]=f,e=Tb[k[b>>2]&63](b,g,4)|0,(e|0)!=0):0){k[d>>2]=k[e+16>>2];b=1}else b=0;r=h;return b|0}function rt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;f=Et(a,24)|0;k[f+16>>2]=d;c=Bu(a,c)|0;k[f+20>>2]=c;c=(b|0)==3?2:b;e=a+52|0;d=k[e>>2]|0;b=k[d+44+(c<<2)>>2]|0;if(!b){b=Pu(a,51620,k[12819]|0)|0;k[(k[e>>2]|0)+44+(c<<2)>>2]=b;d=k[e>>2]|0}d=k[d+56+(c<<2)>>2]|0;if(!d){d=Pu(a,51656,k[12819]|0)|0;k[(k[e>>2]|0)+56+(c<<2)>>2]=d}Tb[k[b>>2]&63](b,f,1)|0;Tb[k[d>>2]&63](d,f,1)|0;return}function st(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;f=r;r=r+32|0;e=f;a=k[(k[a+52>>2]|0)+56+(((b|0)==3?2:b)<<2)>>2]|0;if((a|0)!=0?(k[e+16>>2]=c,d=Tb[k[a>>2]&63](a,e,4)|0,(d|0)!=0):0)a=k[d+20>>2]|0;else a=0;r=f;return a|0}function tt(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;h=r;r=r+32|0;g=h;b=(b|0)==3?2:b;d=a+52|0;e=k[(k[d>>2]|0)+56+(b<<2)>>2]|0;if((e|0)!=0?(k[g+16>>2]=c,f=Tb[k[e>>2]&63](e,g,4)|0,(f|0)!=0):0){g=k[(k[d>>2]|0)+44+(b<<2)>>2]|0;Tb[k[g>>2]&63](g,f,2)|0;b=k[(k[d>>2]|0)+56+(b<<2)>>2]|0;Tb[k[b>>2]&63](b,f,2)|0;Du(a,k[f+20>>2]|0)|0;Ft(a,f);b=1}else b=0;r=h;return b|0}function ut(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0;k[12896]=a;d=k[a+52>>2]|0;g=0;do{e=d+44+(g<<2)|0;b=k[e>>2]|0;if((b|0)!=0?(f=Tb[k[b>>2]&63](b,0,128)|0,(f|0)!=0):0){b=f;do{h=k[e>>2]|0;c=b;b=Tb[k[h>>2]&63](h,b,8)|0;if((i[k[c+20>>2]>>0]|0)==37)tt(a,g,k[c+16>>2]|0)|0}while((b|0)!=0)}g=g+1|0}while((g|0)!=3);return}function vt(a){a=a|0;k[12896]=a;a=a+52|0;wt((k[a>>2]|0)+44|0);wt((k[a>>2]|0)+56|0);return}function wt(a){a=a|0;var b=0,c=0;b=k[a>>2]|0;if(b){Hr(b)|0;k[a>>2]=0}b=a+4|0;c=k[b>>2]|0;if(c){Hr(c)|0;k[b>>2]=0}b=a+8|0;c=k[b>>2]|0;if(c){Hr(c)|0;k[b>>2]=0}return}function xt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return (k[b+16>>2]|0)-(k[c+16>>2]|0)|0}function yt(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return (k[b+20>>2]|0)-(k[c+20>>2]|0)|0}function zt(a){a=a|0;var b=0,c=0,d=0;b=r;r=r+32|0;d=b+12|0;c=b;k[12927]=k[12924];k[12928]=k[12925];k[d>>2]=a;a=uO(a)|0;k[d+4>>2]=a;k[d+8>>2]=0;k[c>>2]=51716;k[c+4>>2]=51588;k[c+8>>2]=51704;a=rv(d,c)|0;r=b;return a|0}function At(a,b,c){a=a|0;b=b|0;c=c|0;if(!(CN(b,c,a)|0))b=0;else b=uO(b)|0;return b|0}function Bt(a,b){a=a|0;b=b|0;return HN(b,a)|0}function Ct(a){a=a|0;return AN(a)|0}function Dt(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;if((c|0)!=0?(f=a+8|0,d=k[f>>2]|0,(d|0)<(k[a+4>>2]|0)):0){g=k[a>>2]|0;e=i[g+d>>0]|0;a=0;d=g+(d+1)|0;while(1){i[b>>0]=e;a=a+1|0;if(!(e<<24>>24!=10&(a|0)<(c|0)))break;e=i[d>>0]|0;if(!(e<<24>>24))break;else{b=b+1|0;d=d+1|0}}k[f>>2]=(k[f>>2]|0)+a}else a=0;return a|0}function Et(a,b){a=a|0;b=b|0;var c=0;c=r;r=r+16|0;a=k[a+52>>2]|0;a=_b[k[(k[a>>2]|0)+4>>2]&127](k[a+12>>2]|0,b)|0;if(!a)Yr(1,132671,c)|0;r=c;return a|0}function Ft(a,b){a=a|0;b=b|0;if(b){a=k[a+52>>2]|0;Pb[k[(k[a>>2]|0)+12>>2]&31](k[a+12>>2]|0,b)}return}function Gt(a){a=a|0;return 0}function Ht(a,b){a=a|0;b=b|0;a=uP(b)|0;IP(a|0,0,b|0)|0;return a|0}function It(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=xP(b,d)|0;if(d>>>0>c>>>0)IP(a+c|0,0,d-c|0)|0;return a|0}function Jt(a,b){a=a|0;b=b|0;vP(b);return}function Kt(a){a=a|0;a=k[a+24>>2]|0;a=Tb[k[a>>2]&63](a,0,128)|0;if(!a)a=0;else a=k[a+16>>2]|0;return a|0}function Lt(a,b){a=a|0;b=b|0;var c=0;b=Fs(a,b)|0;if((b|0)!=0?(c=k[a+24>>2]|0,c=Tb[k[c>>2]&63](c,b,8)|0,(c|0)!=0):0)b=k[c+16>>2]|0;else b=0;return b|0}function Mt(a){a=a|0;a=k[a+24>>2]|0;a=Tb[k[a>>2]&63](a,0,256)|0;if(!a)a=0;else a=k[a+16>>2]|0;return a|0}function Nt(a,b){a=a|0;b=b|0;var c=0;b=Fs(a,b)|0;if((b|0)!=0?(c=k[a+24>>2]|0,c=Tb[k[c>>2]&63](c,b,16)|0,(c|0)!=0):0)b=k[c+16>>2]|0;else b=0;return b|0}function Ot(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;k[12953]=b;k[12969]=51808;e=k[a+28>>2]|0;e=Tb[k[e>>2]&63](e,51860,4)|0;if(!e)e=0;else e=k[e+16>>2]|0;do if((c|0)!=0&(e|0)==0){e=au(a)|0;if(((e|0)!=(a|0)?(k[12953]=b,k[12969]=51808,f=k[e+28>>2]|0,f=Tb[k[f>>2]&63](f,51860,4)|0,(f|0)!=0):0)?(d=k[f+16>>2]|0,(d|0)!=0):0){Pt(a,d,1)|0;break}if(!(ft(a,1,b)|0))d=0;else{d=Vt(a,b,Xs(a,1)|0)|0;Wt(a,d);Xt(a,d)}}else d=e;while(0);return d|0}function Pt(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=au(a)|0;if((d|0)==(k[b+12>>2]|0)){k[12953]=k[b+4>>2];k[12969]=51808;d=k[a+28>>2]|0;d=Tb[k[d>>2]&63](d,51860,4)|0;if(!d)d=0;else d=k[d+16>>2]|0;if((c|0)!=0&(d|0)==0){d=Ku(a)|0;if(!d)d=0;else{b=Pt(d,b,c)|0;Yt(a,b);return b|0}}}else d=0;return d|0}
function Ti(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0.0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0;x=r;r=r+112|0;o=x+88|0;l=x+80|0;j=x+72|0;f=x+64|0;e=x+56|0;u=x+48|0;s=x+32|0;q=x+8|0;n=x;t=x+108|0;v=x+104|0;d=ss(a,128143)|0;do if(!d)if((b|0)==1){k[13603]=200;break}else{w=(Zs(a)|0)*100|0;k[13603]=w;break}else{w=bO(d)|0;k[13603]=w}while(0);w=xj(a,b)|0;do if(!((w|0)<2|(k[13603]|0)<0)){if(!b){switch(c|0){case 2:{d=Ui(a,w,t,0,2,0)|0;e=Um(d,w)|0;if((w|0)>0){f=k[(k[a+8>>2]|0)+160>>2]|0;j=0;do{g=k[e+(j<<2)>>2]|0;h=k[f+(j<<2)>>2]|0;l=0;do{p[h+(l<<3)>>3]=+(k[g+(l<<2)>>2]|0);l=l+1|0}while((l|0)!=(w|0));j=j+1|0}while((j|0)!=(w|0))}vP(k[e>>2]|0);vP(e);Zl(d);break}case 1:{if(!(Cl(a,w)|0)){v=ht(a)|0;k[e>>2]=v;Yr(0,125422,e)|0;Yr(3,129700,f)|0;Yr(3,125474,j)|0;Yr(3,125546,l)|0;Oj(a,w)}break}default:{Oj(a,w);if((c|0)==3?(g=Kt(a)|0,(g|0)!=0):0){h=a+8|0;do{d=Es(a,g)|0;if(d)do{f=k[d>>2]&3;e=(k[k[((f|0)==3?d:d+32|0)+28>>2]>>2]|0)>>>4;f=(k[k[((f|0)==2?d:d+-32|0)+28>>2]>>2]|0)>>>4;if((e|0)!=(f|0)){m=+p[(k[d+8>>2]|0)+136>>3];v=k[(k[h>>2]|0)+160>>2]|0;p[(k[v+(f<<2)>>2]|0)+(e<<3)>>3]=m;p[(k[v+(e<<2)>>2]|0)+(f<<3)>>3]=m}d=Gs(a,d)|0}while((d|0)!=0);g=Lt(a,g)|0}while((g|0)!=0)}}}Dj(a,w);Ej(a,w);if(i[137280]|0){v=k[24528]|0;u=k[13603]|0;m=+p[4240];k[o>>2]=c;k[o+4>>2]=u;p[o+8>>3]=m;FN(v,125584,o)|0;cB()}Fj(a,w);break}f=k[13604]|0;o=(b|0)==2;e=Ni(a,w,o?0:2)|0;d=iB(a,ks(a,0,125235,0)|0,2,0)|0;if((d|0)==0|(d|0)>2){k[n>>2]=125235;Yr(0,125244,n)|0;d=2}g=(e|0)==0;j=g?d|4:d;n=Cy(f<<2)|0;d=Cy(ha(w<<3,f)|0)|0;k[n>>2]=d;e=k[13604]|0;if(((e|0)>1?(k[n+4>>2]=d+(w<<3),(e|0)>2):0)?(k[n+8>>2]=d+(w<<1<<3),(e|0)!=3):0){d=3;do{l=(k[n>>2]|0)+((ha(d,w)|0)<<3)|0;k[n+(d<<2)>>2]=l;d=d+1|0}while((d|0)!=(e|0))}if(i[137280]|0){l=k[24528]|0;f=k[13603]|0;m=+p[4240];k[q>>2]=c;k[q+4>>2]=g&1;k[q+8>>2]=j&3;k[q+12>>2]=f;p[q+16>>3]=m;FN(l,125290,q)|0;QN(125347,15,1,l)|0;cB();QN(125363,13,1,l)|0}l=Ui(a,w,t,b,c,v)|0;if(i[137280]|0){q=k[24528]|0;m=+dB();k[s>>2]=w;p[s+8>>3]=m;FN(q,125377,s)|0}if((b|0)!=1){m=+jB(a,ks(a,0,125396,0)|0,0.0,-1797693134862315708145274.0e284);if(o){d=Gl(l,w,k[t>>2]|0,n,k[v>>2]|0,k[13604]|0,j,c,k[13603]|0,m)|0;e=22}else e=24}else{d=sj(l,w,k[t>>2]|0,n,k[v>>2]|0,k[13604]|0,j,c,k[13603]|0)|0;e=22}if((e|0)==22)if((d|0)<0)Yr(3,125406,u)|0;else e=24;if((e|0)==24?(h=Kt(a)|0,(h|0)!=0):0)do{d=k[h+8>>2]|0;f=k[d+120>>2]|0;g=k[13604]|0;if((g|0)>0){d=k[d+132>>2]|0;e=0;do{p[d+(e<<3)>>3]=+p[(k[n+(e<<2)>>2]|0)+(f<<3)>>3];e=e+1|0}while((e|0)!=(g|0))}h=Lt(a,h)|0}while((h|0)!=0);Zl(l);vP(k[n>>2]|0);vP(n);vP(k[v>>2]|0)}while(0);r=x;return}function Ui(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,l=0,m=0,n=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0.0;h=_s(a)|0;K=iz()|0;if((e|0)==2){e=0;j=0}else{e=ks(a,2,128865,0)|0;j=(k[13656]|0)!=0&1}C=(d&-2|0)==2;I=Cy(b*20|0)|0;J=Cy(b<<2)|0;h=(h<<1)+b<<2;l=Cy(h)|0;H=(e|0)!=0;B=C|H;if(B)m=Cy(h)|0;else m=0;G=(j|0)!=0;if(G)j=Cy(h)|0;else j=0;if(C)e=Cy(h)|0;else e=0;h=Kt(a)|0;a:do if(!h){F=j;g=m;E=0}else{A=0;q=0;while(1){jz(K);if((k[(k[h+8>>2]|0)+120>>2]|0)!=(A|0))break;k[J+(A<<2)>>2]=h;n=l+4|0;z=I+(A*20|0)+4|0;k[z>>2]=l;s=B?m+4|0:m;y=I+(A*20|0)+8|0;k[y>>2]=B?m:0;r=G?j+4|0:j;x=I+(A*20|0)+12|0;k[x>>2]=G?j:0;m=C?e+4|0:e;k[I+(A*20|0)+16>>2]=C?e:0;j=Js(a,h)|0;if(!j){l=n;e=m;j=r;m=s;n=1}else{v=n;e=m;w=j;j=r;m=s;n=1;u=1;while(1){r=k[w>>2]&3;t=w+-32|0;l=k[((r|0)==2?w:t)+28>>2]|0;s=w+32|0;r=k[((r|0)==3?w:s)+28>>2]|0;do if((l|0)==(r|0)){l=v;r=u}else{r=k[(k[r+8>>2]|0)+120>>2]|0;l=k[(k[l+8>>2]|0)+120>>2]|0;L=(r|0)>(l|0);l=lz(K,L?l:r,L?r:l,u)|0;if((l|0)!=(u|0)){if(G){L=(k[x>>2]|0)+(l<<2)|0;o[L>>2]=+p[(k[w+8>>2]|0)+128>>3]+ +o[L>>2]}if(!H){l=v;r=u;break}l=(k[y>>2]|0)+(l<<2)|0;N=+p[(k[w+8>>2]|0)+136>>3];M=+(~~+o[l>>2]|0);o[l>>2]=N>M?N:M;l=v;r=u;break}r=k[w>>2]&3;l=k[((r|0)==3?w:s)+28>>2]|0;if((l|0)==(h|0))r=k[((r|0)==2?w:t)+28>>2]|0;else r=l;q=q+1|0;s=u+1|0;l=v+4|0;k[v>>2]=k[(k[r+8>>2]|0)+120>>2];if(G){o[j>>2]=+p[(k[w+8>>2]|0)+128>>3];j=j+4|0}if(H){r=m+4|0;o[m>>2]=+p[(k[w+8>>2]|0)+136>>3];if(C){m=r;D=27}else m=r}else if(C){o[m>>2]=1.0;m=m+4|0;D=27}b:do if((D|0)==27){D=0;r=ss(w,137799)|0;do if(r){if(wO(r,171734,4)|0)break;o[e>>2]=0.0;e=e+4|0;break b}while(0);o[e>>2]=(h|0)==(k[((k[w>>2]&3|0)==2?w:t)+28>>2]|0)?1.0:-1.0;e=e+4|0}while(0);n=n+1|0;r=s}while(0);w=Ks(a,w,h)|0;if(!w)break;else{v=l;u=r}}}k[I+(A*20|0)>>2]=n;k[k[z>>2]>>2]=A;h=Lt(a,h)|0;if(!h){F=j;g=m;E=q;break a}else A=A+1|0}Wa(125623,125638,817,125650)}while(0);if(C&(b|0)>0){e=0;do{L=k[(k[J+(e<<2)>>2]|0)+8>>2]|0;i[L+157>>0]=0;i[L+158>>0]=0;e=e+1|0}while((e|0)!=(b|0));e=0;do{if(!(i[(k[(k[J+(e<<2)>>2]|0)+8>>2]|0)+157>>0]|0))Vi(I,e,d,J);e=e+1|0}while((e|0)!=(b|0))}m=(E|0)/2|0;if((m|0)!=(_s(a)|0)){e=(m<<1)+b<<2;h=Ey(k[I+4>>2]|0,e)|0;if(H)g=Ey(k[I+8>>2]|0,e)|0;if(G)e=Ey(k[I+12>>2]|0,e)|0;else e=F;if((b|0)>0){l=0;while(1){j=k[I+(l*20|0)>>2]|0;k[I+(l*20|0)+4>>2]=h;if(H){k[I+(l*20|0)+8>>2]=g;g=g+(j<<2)|0}if(G){k[I+(l*20|0)+12>>2]=e;e=e+(j<<2)|0}l=l+1|0;if((l|0)==(b|0))break;else h=h+(j<<2)|0}}}k[c>>2]=m;if(!f)vP(J);else k[f>>2]=J;kz(K);return I|0}function Vi(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,p=0.0,q=0,r=0,s=0;r=(k[d+(b<<2)>>2]|0)+8|0;e=k[r>>2]|0;i[e+157>>0]=1;i[e+158>>0]=1;q=a+(b*20|0)|0;f=k[q>>2]|0;do if((f|0)>1){m=a+(b*20|0)+16|0;n=a+(b*20|0)+4|0;p=(c|0)==3?-1.0:1.0;e=f;l=1;a:while(1){f=(k[m>>2]|0)+(l<<2)|0;do if(!(+o[f>>2]==1.0)){j=k[(k[n>>2]|0)+(l<<2)>>2]|0;g=k[(k[d+(j<<2)>>2]|0)+8>>2]|0;if(!(i[g+158>>0]|0)){if(i[g+157>>0]|0)break;Vi(a,j,c,d);e=k[q>>2]|0;break}o[f>>2]=p;h=k[a+(j*20|0)>>2]|0;b:do if((h|0)>1){g=k[a+(j*20|0)+4>>2]|0;f=1;do{if((k[g+(f<<2)>>2]|0)==(b|0))break b;f=f+1|0}while((f|0)<(h|0))}else f=1;while(0);if((f|0)>=(h|0)){e=10;break a}o[(k[a+(j*20|0)+16>>2]|0)+(f<<2)>>2]=-1.0}while(0);l=l+1|0;if((l|0)>=(e|0)){e=15;break}}if((e|0)==10)Wa(125664,125638,719,125684);else if((e|0)==15){s=k[r>>2]|0;break}}else s=e;while(0);i[s+158>>0]=0;return}function Wi(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0.0,l=0.0,m=0,n=0,o=0,q=0;o=r;r=r+80|0;f=o+64|0;m=o+32|0;i=o;do if(!(wO(ht(a)|0,143893,7)|0)){q=ts(a,d)|0;g=m+8|0;h=m+24|0;k[f>>2]=m;k[f+4>>2]=g;k[f+8>>2]=m+16;k[f+12>>2]=h;if((UN(q,125693,f)|0)!=4){n=10;break}l=+p[g>>3];j=+p[h>>3];if(l>j){p[g>>3]=j;p[h>>3]=l};k[i>>2]=k[m>>2];k[i+4>>2]=k[m+4>>2];k[i+8>>2]=k[m+8>>2];k[i+12>>2]=k[m+12>>2];k[i+16>>2]=k[m+16>>2];k[i+20>>2]=k[m+20>>2];k[i+24>>2]=k[m+24>>2];k[i+28>>2]=k[m+28>>2];qu(a,173447,280,1)|0;h=(k[a+8>>2]|0)+16|0;k[h>>2]=k[i>>2];k[h+4>>2]=k[i+4>>2];k[h+8>>2]=k[i+8>>2];k[h+12>>2]=k[i+12>>2];k[h+16>>2]=k[i+16>>2];k[h+20>>2]=k[i+20>>2];k[h+24>>2]=k[i+24>>2];k[h+28>>2]=k[i+28>>2];h=b+8|0;g=k[h>>2]|0;q=g+180|0;f=k[q>>2]|0;i=f+1|0;k[q>>2]=i;g=k[g+184>>2]|0;if(!g)f=By((f<<2)+8|0)|0;else f=Dy(g,f+2|0,4,i)|0;k[(k[h>>2]|0)+184>>2]=f;k[f+(i<<2)>>2]=a;ly(a);Qi(a,c,d)}else n=10;while(0);if((n|0)==10?(e=Iu(a)|0,(e|0)!=0):0)do{Wi(e,b,c,d);e=Ju(e)|0}while((e|0)!=0);r=o;return}function Xi(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,l=0,m=0.0;l=r;r=r+16|0;e=l;d=b+8|0;f=j[(k[d>>2]|0)+168>>1]|0;h=f<<16>>16;if(f<<16>>16!=1&(i[137282]|0)==0){g=Cy(h<<2)|0;e=f<<16>>16>0;if(e){d=0;while(1){k[g+(d<<2)>>2]=b;d=d+1|0;if((d|0)==(h|0))break;else b=k[(k[b+8>>2]|0)+172>>2]|0}m=+(c|0);JA(a,g,0,h,m,m,50252);if(e){e=0;do{b=k[g+(e<<2)>>2]|0;d=b+8|0;if(k[(k[d>>2]|0)+96>>2]|0){c=$t(k[((k[b>>2]&3|0)==3?b:b+32|0)+28>>2]|0)|0;EB(c,k[(k[d>>2]|0)+96>>2]|0)}KA(b);e=e+1|0}while((e|0)!=(h|0))}}else{m=+(c|0);JA(a,g,0,h,m,m,50252)}vP(g)}else{k[e>>2]=b;m=+(c|0);JA(a,e,0,1,m,m,50252);if(k[(k[d>>2]|0)+96>>2]|0){h=$t(k[((k[b>>2]&3|0)==3?b:b+32|0)+28>>2]|0)|0;EB(h,k[(k[d>>2]|0)+96>>2]|0)}KA(b)}r=l;return}function Yi(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0.0,g=0.0,h=0.0,j=0.0,l=0.0,m=0.0,n=0.0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0.0,F=0.0,G=0,H=0;G=r;r=r+96|0;s=G+32|0;e=G;a:do switch(Qz(a)|0){case 3:case 1:{d=By(8)|0;t=a+8|0;a=k[t>>2]|0;q=k[a+12>>2]|0;do if(!(c<<24>>24)){a=k[q+8>>2]|0;if((a|0)>2){n=0.0;e=1;E=+o[b>>2];F=+o[b+4>>2];s=k[q+44>>2]|0;break}else{n=+_M()*.01;e=0;E=0.0;F=0.0;a=8;s=0;break}}else if(!(k[q+40>>2]&2048)){F=+p[a+88>>3];E=-F;n=+p[a+80>>3];m=n*-.5;p[s>>3]=E;p[s+8>>3]=m;p[s+16>>3]=F;p[s+24>>3]=m;n=n*.5;p[s+32>>3]=F;p[s+40>>3]=n;p[s+48>>3]=E;p[s+56>>3]=n;n=0.0;e=1;E=0.0;F=0.0;a=4;break}else{DB(e,q);E=+p[e>>3];m=+p[e+8>>3];F=+p[e+16>>3];n=+p[e+24>>3];p[s>>3]=E;p[s+8>>3]=m;p[s+16>>3]=F;p[s+24>>3]=m;p[s+32>>3]=F;p[s+40>>3]=n;p[s+48>>3]=E;p[s+56>>3]=n;n=0.0;e=1;E=0.0;F=0.0;a=4;break}while(0);k[d+4>>2]=a;D=By(a<<4)|0;k[d>>2]=D;if((a|0)>0){A=(e|0)==0;m=+(a|0);B=b+8|0;C=b+4|0;y=k[t>>2]|0;e=y+16|0;c=y+24|0;q=(a|0)==4;j=-E;l=-F;t=y+88|0;u=y+96|0;v=y+80|0;w=y+88|0;x=y+96|0;y=y+80|0;z=0;do{do if(A){g=n+ +(z|0)*6.283185307179586/m;f=+Z(+g);g=+_(+g);if(!(i[B>>0]|0)){h=f*+o[b>>2]*(+p[t>>3]+ +p[u>>3])*.5;f=+p[v>>3]*(g*+o[C>>2])*.5;break}else{h=f*(+p[w>>3]+ +p[x>>3]+ +o[b>>2])*.5;f=g*(+p[y>>3]+ +o[C>>2])*.5;break}}else{if(!(i[B>>0]|0)){h=E*+p[s+(z<<4)>>3];f=F*+p[s+(z<<4)+8>>3];break}if(!q){h=+p[s+(z<<4)>>3];g=+p[s+(z<<4)+8>>3];f=+X(+(h*h+g*g));h=h*(E/f+1.0);f=g*(F/f+1.0);break}switch(z|0){case 0:{f=E;g=F;break}case 1:{f=j;g=F;break}case 2:{f=j;g=l;break}case 3:{f=E;g=l;break}default:{f=0.0;g=0.0}}h=f+ +p[s+(z<<4)>>3];f=g+ +p[s+(z<<4)+8>>3]}while(0);H=a-z+-1|0;p[D+(H<<4)>>3]=h+ +p[e>>3];p[D+(H<<4)+8>>3]=f+ +p[c>>3];z=z+1|0}while((z|0)!=(a|0))}break}case 2:{H=a+8|0;d=k[(k[H>>2]|0)+12>>2]|0;f=+p[d+16>>3];g=+p[d+24>>3];h=+p[d+32>>3];j=+p[d+40>>3];d=By(8)|0;k[d+4>>2]=4;a=By(64)|0;k[d>>2]=a;H=k[H>>2]|0;l=+p[H+16>>3];m=+p[H+24>>3];n=+o[b>>2];if(!(i[b+8>>0]|0)){D=b+4|0;F=m+g*+o[D>>2];p[a>>3]=l+f*n;p[a+8>>3]=F;H=k[d>>2]|0;F=m+j*+o[D>>2];p[H+16>>3]=l+f*+o[b>>2];p[H+24>>3]=F;H=k[d>>2]|0;F=m+j*+o[D>>2];p[H+32>>3]=l+h*+o[b>>2];p[H+40>>3]=F;H=k[d>>2]|0;F=m+g*+o[D>>2];p[H+48>>3]=l+h*+o[b>>2];p[H+56>>3]=F;break a}else{D=b+4|0;F=m+(g-+o[D>>2]);p[a>>3]=l+(f-n);p[a+8>>3]=F;H=k[d>>2]|0;F=m+(j+ +o[D>>2]);p[H+16>>3]=l+(f-+o[b>>2]);p[H+24>>3]=F;H=k[d>>2]|0;F=m+(j+ +o[D>>2]);p[H+32>>3]=l+(h+ +o[b>>2]);p[H+40>>3]=F;H=k[d>>2]|0;F=m+(g-+o[D>>2]);p[H+48>>3]=l+(h+ +o[b>>2]);p[H+56>>3]=F;break a}}case 4:{a=a+8|0;d=By(8)|0;k[d+4>>2]=4;e=By(64)|0;k[d>>2]=e;H=k[a>>2]|0;f=+p[H+16>>3];g=+p[H+24>>3];h=-+p[H+88>>3];j=+p[H+80>>3];l=+o[b>>2];if(!(i[b+8>>0]|0)){C=b+4|0;F=g-j*+o[C>>2];p[e>>3]=f+l*h;p[e+8>>3]=F;H=k[d>>2]|0;D=k[a>>2]|0;F=g+ +p[D+80>>3]*+o[C>>2];p[H+16>>3]=f-+p[D+88>>3]*+o[b>>2];p[H+24>>3]=F;H=k[d>>2]|0;D=k[a>>2]|0;F=g+ +p[D+80>>3]*+o[C>>2];p[H+32>>3]=f+ +p[D+96>>3]*+o[b>>2];p[H+40>>3]=F;H=k[d>>2]|0;D=k[a>>2]|0;F=g-+p[D+80>>3]*+o[C>>2];p[H+48>>3]=f+ +p[D+96>>3]*+o[b>>2];p[H+56>>3]=F;break a}else{C=b+4|0;F=g+(-j-+o[C>>2]);p[e>>3]=f+(h-l);p[e+8>>3]=F;H=k[d>>2]|0;D=k[a>>2]|0;F=g+(+p[D+80>>3]+ +o[C>>2]);p[H+16>>3]=f+(-+p[D+88>>3]-+o[b>>2]);p[H+24>>3]=F;H=k[d>>2]|0;D=k[a>>2]|0;F=g+(+p[D+80>>3]+ +o[C>>2]);p[H+32>>3]=f+(+p[D+96>>3]+ +o[b>>2]);p[H+40>>3]=F;H=k[d>>2]|0;D=k[a>>2]|0;F=g+(-+p[D+80>>3]-+o[C>>2]);p[H+48>>3]=f+(+p[D+96>>3]+ +o[b>>2]);p[H+56>>3]=F;break a}}default:d=0}while(0);r=G;return d|0}function Zi(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,j=0,l=0,m=0,n=0,o=0.0,q=0.0,s=0.0,u=0,v=0,w=0;n=r;r=r+80|0;m=n+56|0;j=n+40|0;g=n+32|0;h=n+16|0;l=n;f=k[b>>2]&3;e=(k[((f|0)==3?b:b+32|0)+28>>2]|0)+8|0;v=k[e>>2]|0;u=k[b+8>>2]|0;w=u+16|0;i[t>>0]=i[w>>0];i[t+1>>0]=i[w+1>>0];i[t+2>>0]=i[w+2>>0];i[t+3>>0]=i[w+3>>0];i[t+4>>0]=i[w+4>>0];i[t+5>>0]=i[w+5>>0];i[t+6>>0]=i[w+6>>0];i[t+7>>0]=i[w+7>>0];q=+p[t>>3];w=u+24|0;i[t>>0]=i[w>>0];i[t+1>>0]=i[w+1>>0];i[t+2>>0]=i[w+2>>0];i[t+3>>0]=i[w+3>>0];i[t+4>>0]=i[w+4>>0];i[t+5>>0]=i[w+5>>0];i[t+6>>0]=i[w+6>>0];i[t+7>>0]=i[w+7>>0];s=+p[t>>3];w=v+16|0;i[t>>0]=i[w>>0];i[t+1>>0]=i[w+1>>0];i[t+2>>0]=i[w+2>>0];i[t+3>>0]=i[w+3>>0];i[t+4>>0]=i[w+4>>0];i[t+5>>0]=i[w+5>>0];i[t+6>>0]=i[w+6>>0];i[t+7>>0]=i[w+7>>0];o=+p[t>>3];v=v+24|0;i[t>>0]=i[v>>0];i[t+1>>0]=i[v+1>>0];i[t+2>>0]=i[v+2>>0];i[t+3>>0]=i[v+3>>0];i[t+4>>0]=i[v+4>>0];i[t+5>>0]=i[v+5>>0];i[t+6>>0]=i[v+6>>0];i[t+7>>0]=i[v+7>>0];s=s+ +p[t>>3];p[h>>3]=q+o;p[h+8>>3]=s;f=(k[((f|0)==2?b:b+-32|0)+28>>2]|0)+8|0;b=k[f>>2]|0;v=u+56|0;i[t>>0]=i[v>>0];i[t+1>>0]=i[v+1>>0];i[t+2>>0]=i[v+2>>0];i[t+3>>0]=i[v+3>>0];i[t+4>>0]=i[v+4>>0];i[t+5>>0]=i[v+5>>0];i[t+6>>0]=i[v+6>>0];i[t+7>>0]=i[v+7>>0];s=+p[t>>3];u=u+64|0;i[t>>0]=i[u>>0];i[t+1>>0]=i[u+1>>0];i[t+2>>0]=i[u+2>>0];i[t+3>>0]=i[u+3>>0];i[t+4>>0]=i[u+4>>0];i[t+5>>0]=i[u+5>>0];i[t+6>>0]=i[u+6>>0];i[t+7>>0]=i[u+7>>0];o=+p[t>>3];u=b+16|0;i[t>>0]=i[u>>0];i[t+1>>0]=i[u+1>>0];i[t+2>>0]=i[u+2>>0];i[t+3>>0]=i[u+3>>0];i[t+4>>0]=i[u+4>>0];i[t+5>>0]=i[u+5>>0];i[t+6>>0]=i[u+6>>0];i[t+7>>0]=i[u+7>>0];q=+p[t>>3];b=b+24|0;i[t>>0]=i[b>>0];i[t+1>>0]=i[b+1>>0];i[t+2>>0]=i[b+2>>0];i[t+3>>0]=i[b+3>>0];i[t+4>>0]=i[b+4>>0];i[t+5>>0]=i[b+5>>0];i[t+6>>0]=i[b+6>>0];i[t+7>>0]=i[b+7>>0];o=o+ +p[t>>3];p[l>>3]=s+q;p[l+8>>3]=o;if(!d){e=-1111;f=-1111}else{e=k[(k[e>>2]|0)+288>>2]|0;f=k[(k[f>>2]|0)+288>>2]|0};k[j>>2]=k[h>>2];k[j+4>>2]=k[h+4>>2];k[j+8>>2]=k[h+8>>2];k[j+12>>2]=k[h+12>>2];k[m>>2]=k[l>>2];k[m+4>>2]=k[l+4>>2];k[m+8>>2]=k[l+8>>2];k[m+12>>2]=k[l+12>>2];zH(c,j,e,m,f,g)|0;u=g;v=k[u+4>>2]|0;w=a;k[w>>2]=k[u>>2];k[w+4>>2]=v;r=n;return}function _i(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0;F=r;r=r+128|0;D=F+104|0;B=F+88|0;y=F+24|0;x=F+16|0;u=F+80|0;E=F+120|0;w=F+48|0;A=F+32|0;C=F;p=(k[b+8>>2]|0)+144|0;o=k[p>>2]|0;p=k[p+4>>2]|0;n=u;k[n>>2]=o;k[n+4>>2]=p;n=o;k[A>>2]=k[n>>2];k[A+4>>2]=k[n+4>>2];k[A+8>>2]=k[n+8>>2];k[A+12>>2]=k[n+12>>2];p=o+(p+-1<<4)|0;k[C>>2]=k[p>>2];k[C+4>>2]=k[p+4>>2];k[C+8>>2]=k[p+8>>2];k[C+12>>2]=k[p+12>>2];if(e<<24>>24)if((d|0)>0){g=0;e=-1111;f=-1111;do{if((e|0)==-1111){e=k[c+(g<<2)>>2]|0;k[B>>2]=k[e>>2];k[B+4>>2]=k[e+4>>2];k[D>>2]=k[A>>2];k[D+4>>2]=k[A+4>>2];k[D+8>>2]=k[A+8>>2];k[D+12>>2]=k[A+12>>2];e=(AH(B,D)|0)==0;e=e?-1111:g}if((f|0)==-1111){f=k[c+(g<<2)>>2]|0;k[B>>2]=k[f>>2];k[B+4>>2]=k[f+4>>2];k[D>>2]=k[C>>2];k[D+4>>2]=k[C+4>>2];k[D+8>>2]=k[C+8>>2];k[D+12>>2]=k[C+12>>2];f=(AH(B,D)|0)==0;f=f?-1111:g}g=g+1|0}while((g|0)!=(d|0));o=e;p=8}else p=9;else{o=-1111;f=-1111;p=8}if((p|0)==8)if((d|0)>0){g=0;e=0;do{if(!((g|0)==(o|0)|(g|0)==(f|0)))e=(k[(k[c+(g<<2)>>2]|0)+4>>2]|0)+e|0;g=g+1|0}while((g|0)!=(d|0));n=e;m=Cy(n<<5)|0;e=0;j=0;do{if(!((j|0)==(o|0)|(j|0)==(f|0))?(q=c+(j<<2)|0,s=k[q>>2]|0,t=k[s+4>>2]|0,(t|0)>0):0){h=t;i=s;g=0;do{G=m+(e<<5)|0;H=(k[i>>2]|0)+(g<<4)|0;g=g+1|0;k[G>>2]=k[H>>2];k[G+4>>2]=k[H+4>>2];k[G+8>>2]=k[H+8>>2];k[G+12>>2]=k[H+12>>2];G=m+(e<<5)+16|0;H=(k[k[q>>2]>>2]|0)+(((g|0)<(h|0)?g:0)<<4)|0;k[G>>2]=k[H>>2];k[G+4>>2]=k[H+4>>2];k[G+8>>2]=k[H+8>>2];k[G+12>>2]=k[H+12>>2];e=e+1|0;i=k[q>>2]|0;h=k[i+4>>2]|0}while((g|0)<(h|0))}j=j+1|0}while((j|0)!=(d|0));if((e|0)==(n|0)){z=m;v=n}else Wa(125709,125716,79,125731)}else p=9;if((p|0)==9){z=Cy(0)|0;v=0};k[w>>2]=0;k[w+4>>2]=0;k[w+8>>2]=0;k[w+12>>2]=0;k[w+16>>2]=0;k[w+20>>2]=0;k[w+24>>2]=0;k[w+28>>2]=0;k[D>>2]=k[u>>2];k[D+4>>2]=k[u+4>>2];if((BH(z,v,D,w,E)|0)<0){G=ht(k[((k[b>>2]&3|0)==3?b:b+32|0)+28>>2]|0)|0;H=ht(k[((k[b>>2]&3|0)==2?b:b+-32|0)+28>>2]|0)|0;k[x>>2]=G;k[x+4>>2]=H;Yr(1,125745,x)|0}else{if((l[137280]|0)>1){f=k[24528]|0;G=ht(k[((k[b>>2]&3|0)==3?b:b+32|0)+28>>2]|0)|0;e=b+-32|0;H=ht(k[((k[b>>2]&3|0)==2?b:e)+28>>2]|0)|0;k[y>>2]=G;k[y+4>>2]=H;FN(f,125793,y)|0;f=b}else{e=b+-32|0;f=b}EA(b,k[((k[f>>2]&3|0)==2?b:e)+28>>2]|0,k[E>>2]|0,k[E+4>>2]|0,50252);vP(z);k[B>>2]=k[A>>2];k[B+4>>2]=k[A+4>>2];k[B+8>>2]=k[A+8>>2];k[B+12>>2]=k[A+12>>2];k[D>>2]=k[C>>2];k[D+4>>2]=k[C+4>>2];k[D+8>>2]=k[C+8>>2];k[D+12>>2]=k[C+12>>2];NA(a,b,B,D)}r=F;return}function $i(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0.0,i=0,l=0.0,m=0.0,n=0.0,o=0.0,q=0.0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;D=r;r=r+96|0;B=D;C=D+76|0;d=D+64|0;nl(d,a);k[C>>2]=k[d>>2];k[C+4>>2]=k[d+4>>2];k[C+8>>2]=k[d+8>>2];d=Kt(a)|0;if(d)do{e=Es(a,d)|0;if(e)do{Vz(e);e=Gs(a,e)|0}while((e|0)!=0);d=Lt(a,d)|0}while((d|0)!=0);s=Lr(50216,k[12815]|0)|0;d=Kt(a)|0;if(d){t=B+8|0;u=B+16|0;v=B+24|0;w=B+32|0;x=B+40|0;y=B+48|0;z=B+56|0;do{e=Es(a,d)|0;if(e)do{if((k[13600]|0)>1?(A=k[e+8>>2]|0,(k[A+8>>2]|0)!=0):0){i=A+168|0;j[i>>1]=(j[i>>1]|0)+1<<16>>16}else{g=k[e>>2]&3;i=k[((g|0)==3?e:e+32|0)+28>>2]|0;g=k[((g|0)==2?e:e+-32|0)+28>>2]|0;do if(i>>>0>=g>>>0){f=e+8|0;if(i>>>0>g>>>0){E=k[f>>2]|0;f=g;g=i;o=+p[E+16>>3];q=+p[E+24>>3];l=+p[E+56>>3];h=+p[E+64>>3];break}E=k[f>>2]|0;l=+p[E+56>>3];h=+p[E+64>>3];m=+p[E+16>>3];n=+p[E+24>>3];if(!(m<l))if(!(m>l))if(n<h){f=i;g=i;o=l;q=h;l=m;h=n}else{E=n>h;f=i;g=i;o=m;q=n;l=E?l:m;h=E?h:n}else{f=i;g=i;o=m;q=n}else{f=i;g=i;o=l;q=h;l=m;h=n}}else{E=k[e+8>>2]|0;f=i;o=+p[E+56>>3];q=+p[E+64>>3];l=+p[E+16>>3];h=+p[E+24>>3]}while(0);k[t>>2]=f;p[u>>3]=l;p[v>>3]=h;k[w>>2]=g;p[x>>3]=o;p[y>>3]=q;k[z>>2]=e;f=(Tb[k[s>>2]&63](s,B,1)|0)+56|0;f=k[f>>2]|0;if((f|0)!=(e|0)){E=k[f+8>>2]|0;i=E+168|0;j[i>>1]=(j[i>>1]|0)+1<<16>>16;E=E+172|0;k[(k[e+8>>2]|0)+172>>2]=k[E>>2];k[E>>2]=e}}e=Gs(a,e)|0}while((e|0)!=0);d=Lt(a,d)|0}while((d|0)!=0)}Hr(s)|0;if(!(Tb[b&63](a,C,c)|0)){k[13605]=1;d=0}else d=1;r=D;return d|0}function aj(a,b){a=a|0;b=b|0;return $i(a,26,b)|0}function bj(a,b){a=a|0;b=b|0;var c=0;c=(m[(k[a+8>>2]|0)+136>>1]|0)&14;if(b<<24>>24)cj(a)|0;if(c)$i(a,26,c)|0;return}function cj(a){a=a|0;var b=0,c=0,d=0.0,e=0.0,f=0.0,g=0,h=0.0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0.0,v=0,w=0.0,x=0.0,y=0.0,z=0.0,A=0,B=0,C=0,D=0;C=r;r=r+32|0;B=C+16|0;A=C;a:do if((k[a+48>>2]|0)==(a|0)?(t=a+8|0,b=k[t>>2]|0,(k[(k[b+8>>2]|0)+84>>2]|0)!=0):0){s=~~+p[b+16>>3];s=(s|0)>-1?s:0-s|0;d=+(s|0);if((s|0)>-1)if(!~~(d+.5))c=6;else c=9;else if(!~~(d+-.5))c=6;else c=9;do if((c|0)==6){s=~~+p[b+24>>3];s=(s|0)>-1?s:0-s|0;d=+(s|0);if((s|0)>-1)if(!~~(d+.5)){g=b;break}else{c=9;break}else if(!~~(d+-.5)){g=b;break}else{c=9;break}}while(0);if((c|0)==9){s=b+16|0;k[A>>2]=k[s>>2];k[A+4>>2]=k[s+4>>2];k[A+8>>2]=k[s+8>>2];k[A+12>>2]=k[s+12>>2];d=+p[A>>3];e=d/72.0;s=A+8|0;f=+p[s>>3];h=f/72.0;b=Kt(a)|0;if(b)do{c=k[b+8>>2]|0;q=k[c+132>>2]|0;p[q>>3]=+p[q>>3]-e;q=q+8|0;p[q>>3]=+p[q>>3]-h;c=k[c+108>>2]|0;if((c|0)!=0?(i[c+81>>0]|0)!=0:0){q=c+56|0;p[q>>3]=+p[q>>3]-d;q=c+64|0;p[q>>3]=+p[q>>3]-f}b=Lt(a,b)|0}while((b|0)!=0);b=Kt(a)|0;if(b)do{c=Es(a,b)|0;if(c)do{q=k[c+8>>2]|0;g=k[q+8>>2]|0;if(g){d=+p[A>>3];e=+p[s>>3];o=k[g+4>>2]|0;if((o|0)>0){j=k[g>>2]|0;l=0;while(1){g=k[j+4>>2]|0;if((g|0)>0){m=0;n=k[j>>2]|0;while(1){p[n>>3]=+p[n>>3]-d;D=n+8|0;p[D>>3]=+p[D>>3]-e;m=m+1|0;if((m|0)==(g|0))break;else n=n+16|0}}if(k[j+8>>2]|0){D=j+16|0;p[D>>3]=+p[D>>3]-d;D=j+24|0;p[D>>3]=+p[D>>3]-e}if(k[j+12>>2]|0){D=j+32|0;p[D>>3]=+p[D>>3]-d;D=j+40|0;p[D>>3]=+p[D>>3]-e}l=l+1|0;if((l|0)==(o|0))break;else j=j+48|0}}g=k[q+96>>2]|0;if((g|0)!=0?(i[g+81>>0]|0)!=0:0){D=g+56|0;p[D>>3]=+p[D>>3]-d;D=g+64|0;p[D>>3]=+p[D>>3]-e}g=k[q+108>>2]|0;if((g|0)!=0?(i[g+81>>0]|0)!=0:0){D=g+56|0;p[D>>3]=+p[D>>3]-d;D=g+64|0;p[D>>3]=+p[D>>3]-e}g=k[q+100>>2]|0;if((g|0)!=0?(i[g+81>>0]|0)!=0:0){D=g+56|0;p[D>>3]=+p[D>>3]-d;D=g+64|0;p[D>>3]=+p[D>>3]-e}g=k[q+104>>2]|0;if((g|0)!=0?(i[g+81>>0]|0)!=0:0){D=g+56|0;p[D>>3]=+p[D>>3]-d;D=g+64|0;p[D>>3]=+p[D>>3]-e}}c=Gs(a,c)|0}while((c|0)!=0);b=Lt(a,b)|0}while((b|0)!=0);k[B>>2]=k[A>>2];k[B+4>>2]=k[A+4>>2];k[B+8>>2]=k[A+8>>2];k[B+12>>2]=k[A+12>>2];fj(a,B);g=k[t>>2]|0}c=(k[g+116>>2]&1|0)==0;if(!c){B=g+32|0;z=+p[B>>3];D=g+40|0;p[B>>3]=+p[D>>3];p[D>>3]=z}b=k[g+8>>2]|0;b:do switch(k[b+84>>2]|0){case 2:{d=+p[b+64>>3];if(d<=0.0){c=0;break a}e=d/+p[g+32>>3];d=+p[b+72>>3]/+p[g+40>>3];if(e<1.0|d<1.0)if(e<d){f=1.0;d=d/e;break b}else{f=e/d;d=1.0;break b}else f=e;break}case 5:{d=+p[b+64>>3];if(d<=0.0){c=0;break a}e=d/+p[g+32>>3];d=+p[b+72>>3]/+p[g+40>>3];if(!(e>1.0&d>1.0)){c=0;break a}d=e<d?e:d;f=d;break}case 1:{e=+p[b+16>>3];d=+p[g+40>>3]/+p[g+32>>3];if(d<e){f=1.0;d=e/d;break b}else{f=d/e;d=1.0;break b}}default:{c=0;break a}}while(0);z=c?d:f;y=c?f:d;if((k[13600]|0)>1?(v=Kt(a)|0,(v|0)!=0):0){w=y+-1.0;x=z+-1.0;do{b=Es(a,v)|0;if(b)do{t=k[b+8>>2]|0;c=k[t+8>>2]|0;if(c){q=k[b>>2]&3;D=k[(k[(k[((q|0)==2?b:b+-32|0)+28>>2]|0)+8>>2]|0)+132>>2]|0;e=w*+p[D>>3]*72.0;f=x*+p[D+8>>3]*72.0;q=k[(k[(k[((q|0)==3?b:b+32|0)+28>>2]|0)+8>>2]|0)+132>>2]|0;h=w*+p[q>>3]*72.0;u=x*+p[q+8>>3]*72.0;q=k[c+4>>2]|0;if((q|0)>0){s=q+-1|0;l=k[c>>2]|0;m=0;while(1){c=k[l+4>>2]|0;if((c|0)>0){g=(m|0)==(s|0);j=c+-1|0;n=0;o=k[l>>2]|0;while(1){do if(n|m){d=+p[o>>3];if(g&(n|0)==(j|0)){p[o>>3]=e+d;D=o+8|0;p[D>>3]=f+ +p[D>>3];break}else{p[o>>3]=y*d;D=o+8|0;p[D>>3]=z*+p[D>>3];break}}else{p[o>>3]=h+ +p[o>>3];D=o+8|0;p[D>>3]=u+ +p[D>>3]}while(0);n=n+1|0;if((n|0)==(c|0))break;else o=o+16|0}}if(k[l+8>>2]|0){D=l+16|0;p[D>>3]=h+ +p[D>>3];D=l+24|0;p[D>>3]=u+ +p[D>>3]}if(k[l+12>>2]|0){D=l+32|0;p[D>>3]=e+ +p[D>>3];D=l+40|0;p[D>>3]=f+ +p[D>>3]}m=m+1|0;if((m|0)==(q|0))break;else l=l+48|0}}c=k[t+96>>2]|0;if((c|0)!=0?(i[c+81>>0]|0)!=0:0){D=c+56|0;p[D>>3]=y*+p[D>>3];D=c+64|0;p[D>>3]=z*+p[D>>3]}c=k[t+100>>2]|0;if((c|0)!=0?(i[c+81>>0]|0)!=0:0){D=c+56|0;p[D>>3]=e+ +p[D>>3];D=c+64|0;p[D>>3]=f+ +p[D>>3]}c=k[t+104>>2]|0;if((c|0)!=0?(i[c+81>>0]|0)!=0:0){D=c+56|0;p[D>>3]=h+ +p[D>>3];D=c+64|0;p[D>>3]=u+ +p[D>>3]}}b=Gs(a,b)|0}while((b|0)!=0);v=Lt(a,v)|0}while((v|0)!=0)}b=Kt(a)|0;if(b)do{D=k[(k[b+8>>2]|0)+132>>2]|0;p[D>>3]=y*+p[D>>3];D=D+8|0;p[D>>3]=z*+p[D>>3];b=Lt(a,b)|0}while((b|0)!=0);gj(a,y,z);c=1}else c=0;while(0);b=Kt(a)|0;if(b)do{D=k[b+8>>2]|0;B=k[D+132>>2]|0;p[D+16>>3]=+p[B>>3]*72.0;p[D+24>>3]=+p[B+8>>3]*72.0;b=Lt(a,b)|0}while((b|0)!=0);r=C;return c|0}function dj(a){a=a|0;var b=0,c=0,d=0,e=0.0,f=0.0,g=0,h=0;g=r;r=r+16|0;c=g;FB(a);d=a+8|0;b=k[d>>2]|0;e=+p[b+16>>3]/72.0;f=+p[b+24>>3]/72.0;b=Kt(a)|0;if(b)do{h=k[(k[b+8>>2]|0)+132>>2]|0;p[h>>3]=+p[h>>3]-e;h=h+8|0;p[h>>3]=+p[h>>3]-f;b=Lt(a,b)|0}while((b|0)!=0);h=(k[d>>2]|0)+16|0;k[c>>2]=k[h>>2];k[c+4>>2]=k[h+4>>2];k[c+8>>2]=k[h+8>>2];k[c+12>>2]=k[h+12>>2];hj(a,c);bj(a,1);r=g;return}function ej(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,m=0,n=0,q=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0.0,R=0.0,S=0.0,T=0,U=0;P=r;r=r+160|0;L=P+136|0;J=P+120|0;N=P+112|0;u=P+104|0;q=P+88|0;n=P+80|0;M=P+152|0;H=P+72|0;I=P+48|0;K=P+16|0;v=P+64|0;F=P+32|0;G=P;d=(k[13600]|0)>1&1;do if((c|0)>5){s=By((Zs(a)|0)<<2)|0;e=Kt(a)|0;if(!e)f=0;else{m=(c|0)==8&1;f=0;do{g=Yi(e,b,m)|0;h=(k[e+8>>2]|0)+288|0;if(!g)k[h>>2]=-1111;else{k[h>>2]=f;k[s+(f<<2)>>2]=g;f=f+1|0}e=Lt(a,e)|0}while((e|0)!=0)}if(s){g=an(s,f)|0;e=(c|0)==8;if(g){if(e){C=1;E=f;D=s;B=0;break}C=1;E=f;D=s;B=xH(s,f)|0;break}if(e){Yr(0,125807,n)|0;C=1;E=f;g=0;D=s;B=0;break}else{Q=+o[b+4>>2];p[q>>3]=+o[b>>2];p[q+8>>3]=Q;Yr(0,125885,q)|0;C=1;E=f;g=0;D=s;B=0;break}}else{C=0;E=f;g=0;D=0;B=0}}else{C=0;E=0;g=0;D=0;B=0}while(0);if(i[137280]|0){e=k[24528]|0;if(!((c|0)==8&(g|0)!=0))if(!B)f=125994;else f=(c|0)==10?144458:125967;else f=125977;k[u>>2]=f;FN(e,126008,u)|0}A=(B|0)!=0;if(A){e=Kt(a)|0;if(e)do{f=Es(a,e)|0;if(f)do{z=(k[f+8>>2]|0)+144|0;Zi(v,f,B,1,0,0);x=v;y=k[x+4>>2]|0;k[z>>2]=k[x>>2];k[z+4>>2]=y;f=Gs(a,f)|0}while((f|0)!=0);e=Lt(a,e)|0}while((e|0)!=0)}else if((c|0)==8&(g|0)!=0){sC(a,0);d=1}e=Kt(a)|0;if(!e)d=0;else{s=(d|0)==0;u=a+48|0;v=(c|0)==10;w=k[24528]|0;x=M+4|0;y=F+8|0;z=G+8|0;d=0;do{f=Es(a,e)|0;if(f){q=e+8|0;do{m=k[((k[f>>2]&3|0)==2?f:f+-32|0)+28>>2]|0;g=f+8|0;h=k[g>>2]|0;if(!s?(k[h+8>>2]|0)!=0:0){n=k[q>>2]|0;b=h+16|0;i[t>>0]=i[b>>0];i[t+1>>0]=i[b+1>>0];i[t+2>>0]=i[b+2>>0];i[t+3>>0]=i[b+3>>0];i[t+4>>0]=i[b+4>>0];i[t+5>>0]=i[b+5>>0];i[t+6>>0]=i[b+6>>0];i[t+7>>0]=i[b+7>>0];R=+p[t>>3];b=h+24|0;i[t>>0]=i[b>>0];i[t+1>>0]=i[b+1>>0];i[t+2>>0]=i[b+2>>0];i[t+3>>0]=i[b+3>>0];i[t+4>>0]=i[b+4>>0];i[t+5>>0]=i[b+5>>0];i[t+6>>0]=i[b+6>>0];i[t+7>>0]=i[b+7>>0];S=+p[t>>3];b=n+16|0;i[t>>0]=i[b>>0];i[t+1>>0]=i[b+1>>0];i[t+2>>0]=i[b+2>>0];i[t+3>>0]=i[b+3>>0];i[t+4>>0]=i[b+4>>0];i[t+5>>0]=i[b+5>>0];i[t+6>>0]=i[b+6>>0];i[t+7>>0]=i[b+7>>0];Q=+p[t>>3];n=n+24|0;i[t>>0]=i[n>>0];i[t+1>>0]=i[n+1>>0];i[t+2>>0]=i[n+2>>0];i[t+3>>0]=i[n+3>>0];i[t+4>>0]=i[n+4>>0];i[t+5>>0]=i[n+5>>0];i[t+6>>0]=i[n+6>>0];i[t+7>>0]=i[n+7>>0];S=S+ +p[t>>3];p[F>>3]=R+Q;p[y>>3]=S;n=k[m+8>>2]|0;b=k[g>>2]|0;m=b+56|0;i[t>>0]=i[m>>0];i[t+1>>0]=i[m+1>>0];i[t+2>>0]=i[m+2>>0];i[t+3>>0]=i[m+3>>0];i[t+4>>0]=i[m+4>>0];i[t+5>>0]=i[m+5>>0];i[t+6>>0]=i[m+6>>0];i[t+7>>0]=i[m+7>>0];S=+p[t>>3];b=b+64|0;i[t>>0]=i[b>>0];i[t+1>>0]=i[b+1>>0];i[t+2>>0]=i[b+2>>0];i[t+3>>0]=i[b+3>>0];i[t+4>>0]=i[b+4>>0];i[t+5>>0]=i[b+5>>0];i[t+6>>0]=i[b+6>>0];i[t+7>>0]=i[b+7>>0];Q=+p[t>>3];b=n+16|0;i[t>>0]=i[b>>0];i[t+1>>0]=i[b+1>>0];i[t+2>>0]=i[b+2>>0];i[t+3>>0]=i[b+3>>0];i[t+4>>0]=i[b+4>>0];i[t+5>>0]=i[b+5>>0];i[t+6>>0]=i[b+6>>0];i[t+7>>0]=i[b+7>>0];R=+p[t>>3];n=n+24|0;i[t>>0]=i[n>>0];i[t+1>>0]=i[n+1>>0];i[t+2>>0]=i[n+2>>0];i[t+3>>0]=i[n+3>>0];i[t+4>>0]=i[n+4>>0];i[t+5>>0]=i[n+5>>0];i[t+6>>0]=i[n+6>>0];i[t+7>>0]=i[n+7>>0];Q=Q+ +p[t>>3];p[G>>3]=S+R;p[z>>3]=Q;k[J>>2]=k[F>>2];k[J+4>>2]=k[F+4>>2];k[J+8>>2]=k[F+8>>2];k[J+12>>2]=k[F+12>>2];k[L>>2]=k[G>>2];k[L+4>>2]=k[G+4>>2];k[L+8>>2]=k[G+8>>2];k[L+12>>2]=k[G+12>>2];NA(a,f,J,L)}else O=34;do if((O|0)==34){O=0;n=j[h+168>>1]|0;g=n<<16>>16;if(n<<16>>16){if((e|0)==(m|0)){if(!d){d=By(96)|0;n=By(((Zs(a)|0)<<5)+11520|0)|0;k[d+84>>2]=n}Xi(d,f,k[(k[(k[u>>2]|0)+8>>2]|0)+248>>2]|0);break}if(!A){Jz(a,f,c,50252);break}b=(i[137282]|0)!=0?1:g;if((b|0)>0){m=f;n=0;while(1){if(v){_i(a,m,D,E,1);g=m+8|0}else{g=m+8|0;h=(k[g>>2]|0)+144|0;T=k[h>>2]|0;h=k[h+4>>2]|0;U=H;k[U>>2]=T;k[U+4>>2]=h;U=T;k[I>>2]=k[U>>2];k[I+4>>2]=k[U+4>>2];k[I+8>>2]=k[U+8>>2];k[I+12>>2]=k[U+12>>2];h=T+(h+-1<<4)|0;k[K>>2]=k[h>>2];k[K+4>>2]=k[h+4>>2];k[K+8>>2]=k[h+8>>2];k[K+12>>2]=k[h+12>>2];k[L>>2]=k[H>>2];k[L+4>>2]=k[H+4>>2];QH(L,M);if((l[137280]|0)>1){T=ht(k[((k[m>>2]&3|0)==3?m:m+32|0)+28>>2]|0)|0;h=m+-32|0;U=ht(k[((k[m>>2]&3|0)==2?m:h)+28>>2]|0)|0;k[N>>2]=T;k[N+4>>2]=U;FN(w,126033,N)|0}else h=m+-32|0;EA(m,k[((k[m>>2]&3|0)==2?m:h)+28>>2]|0,k[M>>2]|0,k[x>>2]|0,50252);k[J>>2]=k[I>>2];k[J+4>>2]=k[I+4>>2];k[J+8>>2]=k[I+8>>2];k[J+12>>2]=k[I+12>>2];k[L>>2]=k[K>>2];k[L+4>>2]=k[K+4>>2];k[L+8>>2]=k[K+8>>2];k[L+12>>2]=k[K+12>>2];NA(a,m,J,L)}n=n+1|0;if((n|0)==(b|0))break;else m=k[(k[g>>2]|0)+172>>2]|0}}}}while(0);f=Gs(a,f)|0}while((f|0)!=0)}e=Lt(a,e)|0}while((e|0)!=0)}if(A)yH(B);if(d){vP(k[d+84>>2]|0);vP(d)}if(C){if((E|0)>0){d=0;do{vP(k[D+(d<<2)>>2]|0);d=d+1|0}while((d|0)!=(E|0))}vP(D)}r=P;return 0}function fj(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0.0,f=0,g=0,h=0,j=0;h=r;r=r+16|0;g=h;e=+p[b>>3];f=a+8|0;a=k[f>>2]|0;c=a+32|0;p[c>>3]=+p[c>>3]-e;d=+p[b+8>>3];c=a+40|0;p[c>>3]=+p[c>>3]-d;c=a+16|0;p[c>>3]=+p[c>>3]-e;c=a+24|0;p[c>>3]=+p[c>>3]-d;c=k[a+12>>2]|0;if((c|0)!=0?(i[c+81>>0]|0)!=0:0){j=c+56|0;p[j>>3]=+p[j>>3]-e;c=c+64|0;p[c>>3]=+p[c>>3]-d}if((k[a+180>>2]|0)>=1){c=1;while(1){j=k[(k[a+184>>2]|0)+(c<<2)>>2]|0;k[g>>2]=k[b>>2];k[g+4>>2]=k[b+4>>2];k[g+8>>2]=k[b+8>>2];k[g+12>>2]=k[b+12>>2];fj(j,g);a=k[f>>2]|0;if((c|0)>=(k[a+180>>2]|0))break;else c=c+1|0}}r=h;return}function gj(a,b,c){a=a|0;b=+b;c=+c;var d=0,e=0,f=0;e=a+8|0;a=k[e>>2]|0;d=a+32|0;p[d>>3]=+p[d>>3]*b;d=a+40|0;p[d>>3]=+p[d>>3]*c;d=a+16|0;p[d>>3]=+p[d>>3]*b;d=a+24|0;p[d>>3]=+p[d>>3]*c;d=k[a+12>>2]|0;if((d|0)!=0?(i[d+81>>0]|0)!=0:0){f=d+56|0;p[f>>3]=+p[f>>3]*b;d=d+64|0;p[d>>3]=+p[d>>3]*c}if((k[a+180>>2]|0)>=1){d=1;while(1){gj(k[(k[a+184>>2]|0)+(d<<2)>>2]|0,b,c);a=k[e>>2]|0;if((d|0)>=(k[a+180>>2]|0))break;else d=d+1|0}}return}function hj(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0.0,h=0.0;f=r;r=r+16|0;e=f;d=a+8|0;a=k[d>>2]|0;if((k[a+180>>2]|0)>=1){c=1;while(1){a=k[(k[a+184>>2]|0)+(c<<2)>>2]|0;k[e>>2]=k[b>>2];k[e+4>>2]=k[b+4>>2];k[e+8>>2]=k[b+8>>2];k[e+12>>2]=k[b+12>>2];hj(a,e);a=k[d>>2]|0;if((c|0)<(k[a+180>>2]|0))c=c+1|0;else break}}h=+p[b>>3];e=a+32|0;p[e>>3]=+p[e>>3]-h;g=+p[b+8>>3];b=a+40|0;p[b>>3]=+p[b>>3]-g;b=a+16|0;p[b>>3]=+p[b>>3]-h;b=a+24|0;p[b>>3]=+p[b>>3]-g;r=f;return}function ij(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;a=By(64)|0;c=a+8|0;d=b+8|0;e=c+48|0;do{k[c>>2]=k[d>>2];c=c+4|0;d=d+4|0}while((c|0)<(e|0));b=k[b+56>>2]|0;k[a+56>>2]=b;j[(k[b+8>>2]|0)+168>>1]=1;return a|0}function jj(a,b,c){a=a|0;b=b|0;c=c|0;vP(b);return}function kj(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;a=k[b>>2]|0;d=k[c>>2]|0;if(a>>>0<=d>>>0)if(a>>>0>=d>>>0){a=k[b+24>>2]|0;d=k[c+24>>2]|0;if(a>>>0<=d>>>0)if(a>>>0>=d>>>0){a=~~(+p[b+8>>3]-+p[c+8>>3]);if(!a){a=~~(+p[b+16>>3]-+p[c+16>>3]);if(!a){a=~~(+p[b+32>>3]-+p[c+32>>3]);if(!a)a=~~(+p[b+40>>3]-+p[c+40>>3])}}}else a=-1;else a=1}else a=-1;else a=1;return a|0}function lj(a){a=a|0;return 0}function mj(a){a=a|0;return 0}function nj(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0.0;if((b|0)>0){n=(c|0)>2;o=0;f=0;h=k[d>>2]|0;m=k[d+4>>2]|0;while(1){a=k[(k[e+(o<<2)>>2]|0)+8>>2]|0;j=i[a+119>>0]|0;if(!(j<<24>>24)){q=+_M();g=h+8|0;p[h>>3]=q;q=+_M();h=m+8|0;p[m>>3]=q;if(n){a=2;do{q=+_M();p[(k[d+(a<<2)>>2]|0)+(o<<3)>>3]=q;a=a+1|0}while((a|0)!=(c|0));a=h}else a=h}else{g=k[a+132>>2]|0;l=h+8|0;p[h>>3]=+p[g>>3];a=m+8|0;p[m>>3]=+p[g+8>>3];if(n){h=2;g=g+16|0;while(1){p[(k[d+(h<<2)>>2]|0)+(o<<3)>>3]=+p[g>>3];h=h+1|0;if((h|0)==(c|0))break;else g=g+8|0}}f=(j&255)>1?1:f;g=l}o=o+1|0;if((o|0)==(b|0))break;else{h=g;m=a}}}else f=0;if((c|0)>0){a=0;do{sn(b,k[d+(a<<2)>>2]|0);a=a+1|0}while((a|0)!=(c|0))}return f|0}function oj(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0.0,l=0,m=0,n=0;c=By(((ha(b+1|0,b)|0)/2|0)<<2)|0;l=vj(b,b,0.0)|0;m=vj(b,b,0.0)|0;d=(b|0)>0;if(!(k[a+8>>2]|0)){if(d){h=0;do{d=k[a+(h*20|0)>>2]|0;if((d|0)>1){e=k[a+(h*20|0)+4>>2]|0;f=k[l+(h<<2)>>2]|0;g=1;do{i=k[e+(g<<2)>>2]|0;p[(k[l+(i<<2)>>2]|0)+(h<<3)>>3]=-1.0;p[f+(i<<3)>>3]=-1.0;g=g+1|0}while((g|0)<(d|0))}h=h+1|0}while((h|0)!=(b|0))}}else if(d){i=0;do{d=k[a+(i*20|0)>>2]|0;if((d|0)>1){e=k[a+(i*20|0)+4>>2]|0;f=k[a+(i*20|0)+8>>2]|0;g=k[l+(i<<2)>>2]|0;h=1;do{n=k[e+(h<<2)>>2]|0;j=-1.0/+o[f+(h<<2)>>2];p[(k[l+(n<<2)>>2]|0)+(i<<3)>>3]=j;p[g+(n<<3)>>3]=j;h=h+1|0}while((h|0)<(d|0))}i=i+1|0}while((i|0)!=(b|0))}if(Bl(b,l,m)|0){if((b|0)>0){e=0;g=0;h=b;while(1){d=m+(g<<2)|0;f=e;i=g;while(1){if((g|0)==(i|0))j=0.0;else{n=k[d>>2]|0;j=+p[n+(g<<3)>>3]+ +p[(k[m+(i<<2)>>2]|0)+(i<<3)>>3]-+p[n+(i<<3)>>3]*2.0}o[c+(f<<2)>>2]=j;i=i+1|0;if((i|0)==(b|0))break;else f=f+1|0}g=g+1|0;if((g|0)==(b|0))break;else{e=e+h|0;h=h+-1|0}}}}else{vP(c);c=0}wj(l);wj(m);return c|0}function pj(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,q=0,s=0,t=0,u=0.0;s=r;r=r+16|0;q=s;if(k[a+8>>2]|0){c=tj(a,b)|0;if((b|0)>0){d=0.0;m=0;n=0;do{n=n+m|0;l=k[a+(m*20|0)>>2]|0;if((l|0)>1){g=k[a+(m*20|0)+4>>2]|0;h=(ha(m,b)|0)-n|0;j=a+(m*20|0)+8|0;f=1;do{e=k[g+(f<<2)>>2]|0;if((e|0)>=(m|0)){t=c+(h+e<<2)|0;u=+o[(k[j>>2]|0)+(f<<2)>>2];e=~~(+o[t>>2]-u);o[t>>2]=u;d=d+ +(((e|0)>-1?e:0-e|0)|0)}f=f+1|0}while((f|0)<(l|0))}m=m+1|0}while((m|0)!=(b|0))}else d=0.0;if(i[137280]|0){t=k[24528]|0;p[q>>3]=d;FN(t,126049,q)|0}}else c=0;r=s;return c|0}function qj(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0;l=r;r=r+16|0;e=l;c=By(((ha(b+1|0,b)|0)/2|0)<<2)|0;d=By(b<<2)|0;zl(e,b);if((b|0)>0){f=0;h=0;i=b;while(1){yl(h,a,b,d,e);g=f;j=h;while(1){o[c+(g<<2)>>2]=+(k[d+(j<<2)>>2]|0);j=j+1|0;if((j|0)==(b|0))break;else g=g+1|0}h=h+1|0;if((h|0)==(b|0))break;else{f=f+i|0;i=i+-1|0}}}vP(d);Al(e);r=l;return c|0}function rj(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0.0,i=0,j=0,l=0,m=0,n=0,p=0,q=0,r=0,s=0,t=0.0;r=a+8|0;c=k[r>>2]|0;s=(b|0)>0;if(s){e=0;d=0;do{d=(k[a+(e*20|0)>>2]|0)+d|0;e=e+1|0}while((e|0)!=(b|0));d=d<<2}else d=0;e=By(d)|0;d=b<<2;q=By(d)|0;if(s)IP(q|0,0,d|0)|0;if(!(k[r>>2]|0)){if(s){j=0;while(1){k[a+(j*20|0)+8>>2]=e;Rm(a,j,q);d=a+(j*20|0)|0;f=k[d>>2]|0;if((f|0)>=2){g=a+(j*20|0)+4|0;h=+(f+-1|0);i=1;do{p=k[(k[g>>2]|0)+(i<<2)>>2]|0;t=h+ +((k[a+(p*20|0)>>2]|0)+-1|0);t=t-+((Qm(a,j,p,q)|0)<<1|0);o[e+(i<<2)>>2]=t;i=i+1|0}while((i|0)!=(f|0))}Sm(a,j,q);j=j+1|0;if((j|0)==(b|0))break;else e=e+(k[d>>2]<<2)|0}}e=qj(a,b)|0}else{if(s){p=0;while(1){Rm(a,p,q);n=a+(p*20|0)|0;i=k[n>>2]|0;if((i|0)<2)d=a+(p*20|0)+8|0;else{j=a+(p*20|0)+4|0;l=i+-2|0;d=a+(p*20|0)+8|0;m=1;do{f=k[(k[j>>2]|0)+(m<<2)>>2]|0;g=l+(k[a+(f*20|0)>>2]|0)|0;t=+(g-((Qm(a,p,f,q)|0)<<1)|0);h=+o[(k[d>>2]|0)+(m<<2)>>2];if(t>h)h=+(g-((Qm(a,p,f,q)|0)<<1)|0);o[e+(m<<2)>>2]=h;m=m+1|0}while((m|0)!=(i|0))}Sm(a,p,q);k[d>>2]=e;p=p+1|0;if((p|0)==(b|0))break;else e=e+(k[n>>2]<<2)|0}}e=tj(a,b)|0}vP(q);vP(k[r>>2]|0);k[r>>2]=0;if(!((c|0)==0|s^1)){d=0;do{k[a+(d*20|0)+8>>2]=c;c=c+(k[a+(d*20|0)>>2]<<2)|0;d=d+1|0}while((d|0)!=(b|0))}return e|0}function sj(a,b,c,d,e,f,g,h,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;var m=0,n=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0.0,z=0.0,A=0.0,B=0,C=0,D=0,E=0,F=0,G=0,H=0.0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0;fa=r;r=r+112|0;ea=fa+56|0;da=fa+48|0;ba=fa+40|0;_=fa+32|0;Z=fa+24|0;n=fa+16|0;m=fa+8|0;c=fa;s=fa+104|0;V=fa+88|0;N=fa+84|0;Y=fa+80|0;q=g&4;aa=g&3;a:do if((j|0)<0)c=0;else{if(i[137280]|0)cB();T=(h|0)==2;b:do if(T){if(i[137280]|0)QN(129626,24,1,k[24528]|0)|0;h=rj(a,b)|0;$=14}else{switch(h|0){case 1:{h=oj(a,b)|0;if(h)break b;Yr(0,129651,c)|0;Yr(3,129700,m)|0;$=15;break b}case 3:break;default:{$=15;break b}}if(i[137280]|0)QN(129753,21,1,k[24528]|0)|0;h=pj(a,b)|0;$=14}while(0);if(($|0)==14)if(!h)$=15;do if(($|0)==15){if(i[137280]|0)QN(129775,26,1,k[24528]|0)|0;if(!(k[a+8>>2]|0)){h=qj(a,b)|0;break}else{h=tj(a,b)|0;break}}while(0);if(i[137280]|0){ca=k[24528]|0;H=+dB();p[n>>3]=H;FN(ca,129802,n)|0;QN(129814,25,1,ca)|0;cB()}ca=(b|0)>1;do if(ca&(q|0)!=0){c=T&1;R=(b|0)>50?50:b;S=Cy(R<<2)|0;M=b<<3;g=Cy(ha(R,M)|0)|0;K=(R|0)>0;if(K){m=(b|0)<50?b:50;n=0;do{$=g+((ha(n,b)|0)<<3)|0;k[S+(n<<2)>>2]=$;n=n+1|0}while((n|0)!=(m|0))}G=R<<1;G=(G|0)>50?G:50;G=(G|0)>(b|0)?b:G;k[s>>2]=0;jm(a,b,G,s,c);km(k[s>>2]|0,b,G);Xn(k[s>>2]|0,G,b,S,R);vP(k[k[s>>2]>>2]|0);vP(k[s>>2]|0);G=b<<2;P=Cy(G)|0;U=(b|0)>0;if(U)IP(P|0,-1,G|0)|0;zl(V,b);O=k[a+8>>2]|0;if(T)Vm(a,b);I=Cy(G)|0;Q=Cy(160)|0;c=Cy(b*160|0)|0;J=Cy(160)|0;g=0;do{$=c+((ha(g,b)|0)<<2)|0;k[J+(g<<2)>>2]=$;g=g+1|0}while((g|0)!=40);g=(aN()|0)%(b|0)|0;k[P+(g<<2)>>2]=0;k[Q>>2]=g;c=k[J>>2]|0;if(T)_l(g,a,b,c);else yl(g,a,b,c,V);if(U){n=k[J>>2]|0;q=0;s=0;c=g;while(1){g=k[n+(q<<2)>>2]|0;k[I+(q<<2)>>2]=g;m=(g|0)>(s|0);c=m?q:c;q=q+1|0;if((q|0)==(b|0)){t=1;break}else s=m?g:s}}else{t=1;c=g}do{k[P+(c<<2)>>2]=t;k[Q+(t<<2)>>2]=c;s=J+(t<<2)|0;g=k[s>>2]|0;if(T)_l(c,a,b,g);else yl(c,a,b,g,V);if(U){q=0;n=0;while(1){m=I+(q<<2)|0;$=k[m>>2]|0;g=k[(k[s>>2]|0)+(q<<2)>>2]|0;g=($|0)<(g|0)?$:g;k[m>>2]=g;do if((g|0)<=(n|0))if((g|0)==(n|0)){if((aN()|0)%(q+1|0)|0){g=n;break}g=k[m>>2]|0;c=q}else g=n;else c=q;while(0);q=q+1|0;if((q|0)==(b|0))break;else n=g}}t=t+1|0}while((t|0)!=40);if(U)IP(I|0,-1,G|0)|0;F=Cy(G)|0;L=Cy(b<<4)|0;if(U){D=b+-1|0;E=D<<2;m=0;s=0;c=0;B=0;C=0;while(1){g=P+(s<<2)|0;if((k[g>>2]|0)>-1){w=Cy(E)|0;t=L+(s<<4)+4|0;k[t>>2]=w;w=Cy(E)|0;k[L+(s<<4)+8>>2]=w;k[L+(s<<4)>>2]=D;i[L+(s<<4)+12>>0]=1;u=k[g>>2]|0;if((s|0)>0){g=k[t>>2]|0;n=k[J+(u<<2)>>2]|0;q=0;do{k[g+(q<<2)>>2]=q;k[w+(q<<2)>>2]=k[n+(q<<2)>>2];q=q+1|0}while((q|0)!=(s|0))}v=s+1|0;if((v|0)<(b|0)){t=k[t>>2]|0;q=k[J+(u<<2)>>2]|0;g=s;n=v;while(1){k[t+(g<<2)>>2]=n;k[w+(g<<2)>>2]=k[q+(n<<2)>>2];g=n+1|0;if((g|0)==(b|0)){t=D;s=v;n=B;g=C;break}else{$=n;n=g;g=$}}}else{t=D;s=v;n=B;g=C}}else{if((m|0)<40){n=Cy(G)|0;g=1;m=b;q=Cy(G)|0}else{g=0;n=B;q=C}i[L+(s<<4)+12>>0]=g;k[L+(s<<4)+4>>2]=n;k[L+(s<<4)+8>>2]=q;k[L+(s<<4)>>2]=40;g=0;do{k[n+(g<<2)>>2]=k[Q+(g<<2)>>2];k[q+(g<<2)>>2]=k[(k[J+(g<<2)>>2]|0)+(s<<2)>>2];g=g+1|0}while((g|0)!=40);t=40;m=m+-40|0;s=s+1|0;n=n+160|0;g=q+160|0}c=t+c|0;if((s|0)==(b|0))break;else{B=n;C=g}}}else c=0;vP(I);vP(F);if(J){vP(k[J>>2]|0);vP(J)}G=Cy(b*20|0)|0;g=c+b<<2;c=Cy(g)|0;g=Cy(g)|0;if(U){u=(aa|0)==2;t=0;while(1){k[G+(t*20|0)+4>>2]=c;k[G+(t*20|0)+8>>2]=g;m=k[L+(t<<4)>>2]|0;s=G+(t*20|0)|0;k[s>>2]=m+1;q=k[L+(t<<4)+8>>2]|0;m=(m|0)>0;do if(u){if(!m){x=0.0;break}m=k[L+(t<<4)+4>>2]|0;x=0.0;n=1;do{$=n+-1|0;k[c+(n<<2)>>2]=k[m+($<<2)>>2];H=+(k[q+($<<2)>>2]|0);H=-1.0/(H*H);o[g+(n<<2)>>2]=H;x=x-H;n=n+1|0}while((n|0)<(k[s>>2]|0))}else{if(!m){x=0.0;break}m=k[L+(t<<4)+4>>2]|0;x=0.0;n=1;do{$=n+-1|0;k[c+(n<<2)>>2]=k[m+($<<2)>>2];H=-1.0/+(k[q+($<<2)>>2]|0);o[g+(n<<2)>>2]=H;x=x-H;n=n+1|0}while((n|0)<(k[s>>2]|0))}while(0);k[c>>2]=t;o[g>>2]=x;m=k[s>>2]|0;t=t+1|0;if((t|0)==(b|0))break;else{c=c+(m<<2)|0;g=g+(m<<2)|0}}}F=Cy(f<<2)|0;m=R<<3;c=Cy(ha(m,f)|0)|0;k[F>>2]=c;if((f|0)>1){k[F+4>>2]=c+(R<<3);if((f|0)!=2){k[F+8>>2]=c+(R<<1<<3);if((f|0)==3)$=81;else{c=3;do{$=(k[F>>2]|0)+((ha(c,R)|0)<<3)|0;k[F+(c<<2)>>2]=$;c=c+1|0}while((c|0)!=(f|0));$=81}}else $=82}else $=81;if(($|0)==81)if((f|0)>0)$=82;else E=0;if(($|0)==82){c=(b|0)<50?-8-(M^-8)|0:400;g=0;do{if(K)IP(k[F+(g<<2)>>2]|0,0,c|0)|0;g=g+1|0}while((g|0)!=(f|0));do if((f|0)==2){p[k[F>>2]>>3]=1.0;c=F+4|0;if((Yn(S,R,b,k[c>>2]|0)|0)<<24>>24){c=0;break}c=k[c>>2]|0;if(K)IP(c|0,0,((b|0)<50?-8-(b<<3^-8)|0:400)|0)|0;p[c+8>>3]=1.0;c=0}else{c=0;do{p[(k[F+(c<<2)>>2]|0)+(c<<3)>>3]=1.0;c=c+1|0}while((c|0)!=(f|0));c=0}while(0);do{Cn(S,b,R,k[F+(c<<2)>>2]|0,k[d+(c<<2)>>2]|0);c=c+1|0}while((c|0)!=(f|0));E=1}k[N>>2]=0;k[Y>>2]=0;rn(G,S,b,R,N);pn(S,k[N>>2]|0,R,b,R,Y);vP(k[k[N>>2]>>2]|0);vP(k[N>>2]|0);D=Cy(M)|0;C=Cy(m)|0;g=0;x=+uj(d,L,f,b,aa);c:do{if(E){B=0;do{if(U){u=d+(B<<2)|0;w=0;do{v=D+(w<<3)|0;p[v>>3]=0.0;m=k[L+(w<<4)+8>>2]|0;n=k[G+(w*20|0)+4>>2]|0;q=k[G+(w*20|0)+8>>2]|0;s=G+(w*20|0)|0;if((k[s>>2]|0)>1){y=0.0;t=1;do{c=k[n+(t<<2)>>2]|0;z=+Xm(d,f,w,c);if(z>1.0e-30){H=-(+o[q+(t<<2)>>2]*+(k[m+(t+-1<<2)>>2]|0))/z;p[v>>3]=+p[v>>3]+H*+p[(k[u>>2]|0)+(c<<3)>>3];y=y-H}t=t+1|0}while((t|0)<(k[s>>2]|0));z=+p[v>>3]}else{z=0.0;y=0.0}p[v>>3]=z+y*+p[(k[u>>2]|0)+(w<<3)>>3];w=w+1|0}while((w|0)!=(b|0))}on(S,R,b,D,C);c=F+(B<<2)|0;if(El(k[Y>>2]|0,k[c>>2]|0,C,R,.001,R,0)|0){g=-1;break c}Cn(S,b,R,k[c>>2]|0,k[d+(B<<2)>>2]|0);B=B+1|0}while((B|0)<(f|0))}if(!(g&1)){H=+uj(d,L,f,b,aa);x=+W(+(H-x))/(H+1.0e-10);c=x<+p[4240]&1;x=H}else c=0;g=g+1|0}while((g|0)<50&c<<24>>24==0);vP(C);vP(D);if(T)Wm(a,b,O);if(U){c=0;do{if(i[L+(c<<4)+12>>0]|0){vP(k[L+(c<<4)+4>>2]|0);vP(k[L+(c<<4)+8>>2]|0)}c=c+1|0}while((c|0)!=(b|0))}vP(L);vP(k[G+4>>2]|0);vP(k[G+8>>2]|0);vP(G);vP(P);vP(Q);vP(k[F>>2]|0);vP(F);c=k[Y>>2]|0;if(c){vP(k[c>>2]|0);vP(k[Y>>2]|0)}vP(k[S>>2]|0);vP(S);Al(V);if((g|0)<0){u=0;t=0;s=0;q=0;n=0;c=-1;m=0;h=0;g=0;break}if(E)n=0;else{C=0;$=130;break}do{do if(U){c=k[d+(n<<2)>>2]|0;g=0;x=1.0;do{H=+W(+(+p[c+(g<<3)>>3]));x=H>x?H:x;g=g+1|0}while((g|0)!=(b|0));if(!U){$=124;break}c=k[d+(n<<2)>>2]|0;g=0;do{Y=c+(g<<3)|0;p[Y>>3]=+p[Y>>3]/x;g=g+1|0}while((g|0)!=(b|0));if(!U){$=124;break}g=d+(n<<2)|0;m=0;do{H=(+_M()+-.5)*1.0e-06;c=k[g>>2]|0;Y=c+(m<<3)|0;p[Y>>3]=+p[Y>>3]+H;m=m+1|0}while((m|0)!=(b|0))}else $=124;while(0);if(($|0)==124){$=0;c=k[d+(n<<2)>>2]|0}sn(b,c);n=n+1|0}while((n|0)!=(f|0));C=0;$=130}else{C=nj(0,b,f,d,e)|0;$=130}while(0);d:do if(($|0)==130){if(i[137280]|0){Y=k[24528]|0;H=+dB();p[Z>>3]=H;FN(Y,129840,Z)|0}if((b|0)==1|(j|0)==0){c=0;break a}if(i[137280]|0){Z=k[24528]|0;H=+dB();p[_>>3]=H;FN(Z,129802,_)|0;QN(126071,26,1,Z)|0;cB()}v=f<<2;P=By(v)|0;B=b<<2;w=ha(B,f)|0;n=By(w)|0;O=(f|0)>0;if(O){c=(b|0)>0;q=0;do{g=ha(q,b)|0;k[P+(q<<2)>>2]=n+(g<<2);if(c){m=k[d+(q<<2)>>2]|0;s=0;do{o[n+(g+s<<2)>>2]=+p[m+(s<<3)>>3];s=s+1|0}while((s|0)!=(b|0))}q=q+1|0}while((q|0)!=(f|0))}do if(!aa){if(!ca){K=(ha(b+1|0,b)|0)/2|0;N=0;x=0.0;break}q=b+-1|0;x=0.0;c=0;s=0;t=b;while(1){g=c+1|0;if((b-s|0)>1){m=1;while(1){x=x+ +o[h+(g<<2)>>2];m=m+1|0;if((m|0)==(t|0))break;else g=g+1|0}c=c+t|0}else c=g;s=s+1|0;if((s|0)==(q|0)){$=150;break}else t=t+-1|0}}else{x=+(b|0)*+(b+-1|0)*.5;$=150}while(0);if(($|0)==150){c=(ha(b+1|0,b)|0)/2|0;if((aa|0)==2){On(c,h);K=c;N=1}else{K=c;N=0}}Pn(K,h);J=b<<3;s=By(J)|0;IP(s|0,0,J|0)|0;if(ca){q=b+-1|0;m=0;t=0;u=b;while(1){c=m+1|0;if((b-t|0)>1){y=0.0;g=1;while(1){H=+o[h+(c<<2)>>2];y=y+H;aa=s+(g+t<<3)|0;p[aa>>3]=+p[aa>>3]-H;g=g+1|0;if((g|0)==(u|0))break;else c=c+1|0}c=m+u|0}else y=0.0;aa=s+(t<<3)|0;p[aa>>3]=+p[aa>>3]-y;t=t+1|0;if((t|0)==(q|0))break;else{m=c;u=u+-1|0}}}M=(b|0)>0;if(M){c=0;g=0;m=b;while(1){o[h+(c<<2)>>2]=+p[s+(g<<3)>>3];g=g+1|0;if((g|0)==(b|0))break;else{c=m+c|0;m=m+-1|0}}}L=By(v)|0;c=By(w)|0;k[L>>2]=c;if((f|0)>1?(k[L+4>>2]=c+(b<<2),(f|0)!=2):0){c=2;do{aa=(k[L>>2]|0)+((ha(c,b)|0)<<2)|0;k[L+(c<<2)>>2]=aa;c=c+1|0}while((c|0)!=(f|0))}g=By(B)|0;q=By(B)|0;m=By(K<<2)|0;if(i[137280]|0){aa=k[24528]|0;H=+dB();p[ba>>3]=H;FN(aa,129802,ba)|0;QN(126098,15,1,aa)|0;cB()}if((j|0)>0){I=k[24528]|0;F=(C|0)==0;G=b+-1|0;H=x+0.0;c=0;z=1797693134862315708145274.0e284;while(1){IP(s|0,0,J|0)|0;if(N)Qn(K,h,m);if(ca){t=0;D=0;E=G;while(1){C=(E|0)>1?E:1;v=b-D|0;B=v+-1|0;Mn(B,0.0,q);if(O){u=D+1|0;w=0;do{ba=P+(w<<2)|0;Mn(B,+o[(k[ba>>2]|0)+(D<<2)>>2],g);Hn(B,g,-1.0,(k[ba>>2]|0)+(u<<2)|0);On(B,g);Gn(B,g,q,q);w=w+1|0}while((w|0)!=(f|0))}Rn(B,q);w=(v|0)>1;if(w){v=0;do{u=q+(v<<2)|0;A=+o[u>>2];if(A>=3402823466385288598117041.0e14|A<0.0)o[u>>2]=0.0;v=v+1|0}while((v|0)<(B|0))}t=t+1|0;do if(N){if(!w){y=0.0;break}u=D+1|0;v=t;y=0.0;w=0;while(1){ba=m+(v<<2)|0;A=+o[q+(w<<2)>>2]*+o[ba>>2];o[ba>>2]=A;y=y+A;ba=s+(u+w<<3)|0;p[ba>>3]=+p[ba>>3]-A;w=w+1|0;if((w|0)>=(B|0))break;else v=v+1|0}t=t+C|0}else{if(!w){y=0.0;break}u=D+1|0;v=t;y=0.0;w=0;while(1){A=+o[q+(w<<2)>>2];o[m+(v<<2)>>2]=A;y=y+A;ba=s+(u+w<<3)|0;p[ba>>3]=+p[ba>>3]-A;w=w+1|0;if((w|0)>=(B|0))break;else v=v+1|0}t=t+C|0}while(0);ba=s+(D<<3)|0;p[ba>>3]=+p[ba>>3]-y;D=D+1|0;if((D|0)==(G|0))break;else E=E+-1|0}}if(M){t=0;u=0;v=b;while(1){o[m+(t<<2)>>2]=+p[s+(u<<3)>>3];u=u+1|0;if((u|0)==(b|0))break;else{t=v+t|0;v=v+-1|0}}}do if(O){t=0;do{En(m,b,k[P+(t<<2)>>2]|0,k[L+(t<<2)>>2]|0);t=t+1|0}while((t|0)!=(f|0));if(O){t=0;y=0.0}else{y=H;$=195;break}do{y=y+ +Kn(b,k[P+(t<<2)>>2]|0,k[L+(t<<2)>>2]|0);t=t+1|0}while((t|0)!=(f|0));y=x+y*2.0;if(O)t=0;else{$=195;break}do{ba=P+(t<<2)|0;En(h,b,k[ba>>2]|0,g);y=y-+Kn(b,k[ba>>2]|0,g);t=t+1|0}while((t|0)!=(f|0));A=z-y;A=(A>=0.0?A:-A)/z;z=+p[4240];if(O)v=0;else break;do{u=P+(v<<2)|0;t=k[u>>2]|0;do if(F){if((Fl(h,t,k[L+(v<<2)>>2]|0,b,.001,b)|0)<0){u=L;t=P;c=-1;break d}}else{Jn(b,t,g);if((Fl(h,g,k[L+(v<<2)>>2]|0,b,.001,b)|0)<0){u=L;t=P;c=-1;break d}if(M)t=0;else break;do{if((l[(k[(k[e+(t<<2)>>2]|0)+8>>2]|0)+119>>0]|0)<=1)k[(k[u>>2]|0)+(t<<2)>>2]=k[g+(t<<2)>>2];t=t+1|0}while((t|0)!=(b|0))}while(0);v=v+1|0}while((v|0)<(f|0))}else{y=H;$=195}while(0);if(($|0)==195){$=0;A=z-y;A=(A>=0.0?A:-A)/z;z=+p[4240]}do if((i[137280]|0)!=0&((c|0)%5|0|0)==0){p[da>>3]=y;FN(I,126398,da)|0;if((c+5|0)%50|0)break;GN(10,I)|0}while(0);c=c+1|0;if((c|0)<(j|0)&(!(y<z)&!(A<z)))z=y;else break}}else c=0;if(i[137280]|0){F=k[24528]|0;if(ca){C=b+-1|0;B=0;D=0;E=b;x=0.0;while(1){t=B+1|0;if((b-D|0)>1){w=1;while(1){u=w+D|0;if(O){y=0.0;v=0;do{e=k[P+(v<<2)>>2]|0;H=+o[e+(D<<2)>>2]-+o[e+(u<<2)>>2];y=y+H*H;v=v+1|0}while((v|0)!=(f|0))}else y=0.0;y=+X(+y);z=+o[h+(t<<2)>>2];if(N){y=1.0/+X(+z)-y;y=y*y}else{y=1.0/z-y;y=y*y}x=x+z*y;w=w+1|0;if((w|0)==(E|0))break;else t=t+1|0}t=B+E|0}D=D+1|0;if((D|0)==(C|0))break;else{B=t;E=E+-1|0}}}else x=0.0;H=+dB();p[ea>>3]=x;k[ea+8>>2]=c;p[ea+16>>3]=H;FN(F,126114,ea)|0}if(O){v=0;do{if(M){t=k[P+(v<<2)>>2]|0;u=k[d+(v<<2)>>2]|0;w=0;do{p[u+(w<<3)>>3]=+o[t+(w<<2)>>2];w=w+1|0}while((w|0)!=(b|0))}v=v+1|0}while((v|0)!=(f|0));u=L;t=P}else{u=L;t=P}}while(0);vP(n);vP(t);vP(h);if(u){vP(k[u>>2]|0);vP(u)}vP(g);vP(q);vP(s);vP(m)}while(0);r=fa;return c|0}function tj(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0;l=r;r=r+16|0;e=l;c=By(((ha(b+1|0,b)|0)/2|0)<<2)|0;d=By(b<<2)|0;zl(e,b);if((b|0)>0){f=0;h=0;i=b;while(1){$l(h,a,b,d);g=f;j=h;while(1){k[c+(g<<2)>>2]=k[d+(j<<2)>>2];j=j+1|0;if((j|0)==(b|0))break;else g=g+1|0}h=h+1|0;if((h|0)==(b|0))break;else{f=f+i|0;i=i+-1|0}}}vP(d);Al(e);r=l;return c|0}function uj(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0.0,g=0,h=0.0,i=0,j=0,l=0,m=0,n=0,o=0,q=0.0,r=0;g=(d|0)>0;if((e|0)==2)if(g){n=(c|0)>0;o=0;f=0.0;do{i=k[b+(o<<4)>>2]|0;if((i|0)>0){j=k[b+(o<<4)+4>>2]|0;l=b+(o<<4)+8|0;m=0;do{g=k[j+(m<<2)>>2]|0;if((g|0)>(o|0)){if(n){h=0.0;e=0;do{r=k[a+(e<<2)>>2]|0;q=+p[r+(o<<3)>>3]-+p[r+(g<<3)>>3];h=h+q*q;e=e+1|0}while((e|0)!=(c|0))}else h=0.0;h=+X(+h);q=+(k[(k[l>>2]|0)+(m<<2)>>2]|0);h=q-h;f=f+h*h/(q*q)}m=m+1|0}while((m|0)<(i|0))}o=o+1|0}while((o|0)!=(d|0))}else f=0.0;else if(g){n=(c|0)>0;o=0;f=0.0;do{i=k[b+(o<<4)>>2]|0;if((i|0)>0){j=k[b+(o<<4)+4>>2]|0;l=b+(o<<4)+8|0;m=0;do{g=k[j+(m<<2)>>2]|0;if((g|0)>(o|0)){if(n){h=0.0;e=0;do{r=k[a+(e<<2)>>2]|0;q=+p[r+(o<<3)>>3]-+p[r+(g<<3)>>3];h=h+q*q;e=e+1|0}while((e|0)!=(c|0))}else h=0.0;h=+X(+h);q=+(k[(k[l>>2]|0)+(m<<2)>>2]|0);h=q-h;f=f+h*h/q}m=m+1|0}while((m|0)<(i|0))}o=o+1|0}while((o|0)!=(d|0))}else f=0.0;return +f}function vj(a,b,c){a=a|0;b=b|0;c=+c;var d=0,e=0,f=0,g=0,h=0;g=By(a<<2)|0;d=By(ha(a<<3,b)|0)|0;if((a|0)>0){h=(b|0)>0;e=0;do{k[g+(e<<2)>>2]=d;if(h){f=0;do{p[d+(f<<3)>>3]=c;f=f+1|0}while((f|0)!=(b|0))}d=d+(b<<3)|0;e=e+1|0}while((e|0)!=(a|0))}return g|0}function wj(a){a=a|0;if(a){vP(k[a>>2]|0);vP(a)}return}function xj(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0.0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0;n=r;r=r+16|0;c=n;l=n+12|0;j=n+8|0;if(i[137280]|0){m=k[24528]|0;g=ht(a)|0;h=Zs(a)|0;k[c>>2]=g;k[c+4>>2]=h;FN(m,126152,c)|0}a:do if((i[137281]|0)!=0?(f=Kt(a)|0,(f|0)!=0):0){h=a+48|0;while(1){c=Lt(a,f)|0;switch(Qj(a,f,j)|0){case 0:{_t(k[h>>2]|0,f)|0;break}case 1:{_t(k[h>>2]|0,f)|0;f=k[j>>2]|0;b:while(1){c:while(1){if(!f)break b;switch(Qj(a,f,l)|0){case 0:{g=13;break c}case 1:{g=16;break c}default:f=0}}if((g|0)==13){if((c|0)==(f|0))c=Lt(a,c)|0;_t(k[h>>2]|0,f)|0;f=0;continue}else if((g|0)==16){if((c|0)==(f|0))c=Lt(a,c)|0;_t(k[h>>2]|0,f)|0;f=k[l>>2]|0;continue}}break}default:{}}if(!c)break a;else f=c}}while(0);m=Zs(a)|0;j=_s(a)|0;h=ks(a,2,128865,0)|0;if(!b){p[4240]=+(m|0)*.0001;jy(a,145055,33920);c=ss(k[a+48>>2]|0,126181)|0;if(!c)d=.99;else d=+aO(c);p[4242]=d;c=By((m<<2)+4|0)|0;f=a+8|0;k[(k[f>>2]|0)+152>>2]=c;c=Kt(a)|0;if(!c)d=0.0;else{g=0;d=0.0;while(1){k[(k[(k[f>>2]|0)+152>>2]|0)+(g<<2)>>2]=c;l=k[c+8>>2]|0;k[l+120>>2]=g;k[l+124>>2]=-1;d=d+ +Rj(a,c,h);c=Lt(a,c)|0;if(!c)break;else g=g+1|0}}}else{p[4240]=.0001;jy(a,145055,33920);c=Kt(a)|0;if(!c)d=0.0;else{f=0;d=0.0;while(1){k[(k[c+8>>2]|0)+120>>2]=f;d=d+ +Rj(a,c,h);c=Lt(a,c)|0;if(!c)break;else f=f+1|0}}}c=ss(a,126189)|0;if((c|0)!=0?(i[c>>0]|0)!=0:0){d=+p[4240];e=+aO(c);if(!(d>e))d=e}else d=d/((j|0)<1?1.0:+(j|0))*+X(+(+(m|0)))+1.0;p[4241]=d;if(!(k[13600]|b)){c=vj(m,m,d)|0;a=a+8|0;k[(k[a>>2]|0)+160>>2]=c;c=vj(m,m,1.0)|0;k[(k[a>>2]|0)+164>>2]=c;c=vj(m,k[13604]|0,1.0)|0;k[(k[a>>2]|0)+168>>2]=c;c=k[13604]|0;l=(m<<2)+4|0;b=By(l)|0;if((m|0)>0){j=c<<3;c=(c|0)>0;g=0;do{h=By(l)|0;f=b+(g<<2)|0;k[f>>2]=h;h=0;do{o=By(j)|0;k[(k[f>>2]|0)+(h<<2)>>2]=o;if(c)IP(k[(k[f>>2]|0)+(h<<2)>>2]|0,0,j|0)|0;h=h+1|0}while((h|0)!=(m|0));k[(k[f>>2]|0)+(m<<2)>>2]=0;g=g+1|0}while((g|0)!=(m|0));c=m}else c=0;k[b+(c<<2)>>2]=0;k[(k[a>>2]|0)+172>>2]=b}r=n;return m|0}function yj(a){a=a|0;return xj(a,0)|0}function zj(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;f=a+8|0;vP(k[(k[f>>2]|0)+152>>2]|0);if(!(k[13600]|0)){wj(k[(k[f>>2]|0)+160>>2]|0);wj(k[(k[f>>2]|0)+164>>2]|0);wj(k[(k[f>>2]|0)+168>>2]|0);a=k[f>>2]|0;g=k[a+172>>2]|0;if(g){a=k[g>>2]|0;if(a){d=g;e=0;do{b=k[a>>2]|0;if(b){c=0;do{vP(b);c=c+1|0;a=k[d>>2]|0;b=k[a+(c<<2)>>2]|0}while((b|0)!=0)}vP(a);e=e+1|0;d=g+(e<<2)|0;a=k[d>>2]|0}while((a|0)!=0)}vP(g);a=k[f>>2]|0}k[a+172>>2]=0}return}function Aj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0;if((k[13604]|0)>(c|0)){d=+(b|0);b=a+8|0;do{e=d*+_M();p[(k[(k[b>>2]|0)+132>>2]|0)+(c<<3)>>3]=e;c=c+1|0}while((c|0)<(k[13604]|0))}return}function Bj(a,b){a=a|0;b=b|0;Aj(a,b,2);return}function Cj(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0.0;d=+(b|0);e=d*+_M();c=a+8|0;p[k[(k[c>>2]|0)+132>>2]>>3]=e;d=d*+_M();p[(k[(k[c>>2]|0)+132>>2]|0)+8>>3]=d;if((k[13604]|0)>2)Aj(a,b,2);return}function Dj(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=r;r=r+16|0;c=e;if(i[137280]|0)QN(126201,26,1,k[24528]|0)|0;b=Ni(a,b,2)|0;if((b|0)!=1){if(!(k[12566]|b)){Yr(0,126228,c)|0;k[12566]=1}d=a+8|0;a=k[d>>2]|0;b=k[k[a+152>>2]>>2]|0;if(b){c=0;do{if(!(i[(k[b+8>>2]|0)+119>>0]|0)){Cj(b,1);a=k[d>>2]|0}c=c+1|0;b=k[(k[a+152>>2]|0)+(c<<2)>>2]|0}while((b|0)!=0)}}r=e;return}function Ej(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0.0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0.0,C=0;A=r;r=r+96|0;z=A+80|0;y=A;if(i[137280]|0){QN(126277,25,1,k[24528]|0)|0;cB()}m=a+8|0;h=k[m>>2]|0;g=k[h+164>>2]|0;h=k[h+160>>2]|0;x=(b|0)>0;if(x){j=0;do{if((j|0)>0){d=h+(j<<2)|0;e=g+(j<<2)|0;l=0;do{f=+p[(k[d>>2]|0)+(l<<3)>>3];f=1.0/(f*f);c=k[(k[m>>2]|0)+152>>2]|0;c=Ls(a,k[c+(j<<2)>>2]|0,k[c+(l<<2)>>2]|0,0,0)|0;if(c)f=f*+p[(k[c+8>>2]|0)+128>>3];p[(k[g+(l<<2)>>2]|0)+(j<<3)>>3]=f;p[(k[e>>2]|0)+(l<<3)>>3]=f;l=l+1|0}while((l|0)!=(j|0))}j=j+1|0}while((j|0)!=(b|0));if(x){d=k[13604]|0;c=(d|0)>0;d=d<<3;e=0;do{if(c)IP(k[(k[(k[m>>2]|0)+168>>2]|0)+(e<<2)>>2]|0,0,d|0)|0;e=e+1|0}while((e|0)!=(b|0))}}c=k[m>>2]|0;n=k[c+152>>2]|0;d=k[n>>2]|0;if(d){o=k[13604]|0;q=(o|0)>0;s=c+164|0;t=c+160|0;u=c+172|0;m=c+168|0;l=0;do{if(x){a=d+8|0;j=0;do{if((l|0)!=(j|0)?(v=k[(k[a>>2]|0)+132>>2]|0,w=k[(k[(k[n+(j<<2)>>2]|0)+8>>2]|0)+132>>2]|0,q):0){f=0.0;c=0;do{B=+p[v+(c<<3)>>3]-+p[w+(c<<3)>>3];p[y+(c<<3)>>3]=B;f=f+B*B;c=c+1|0}while((c|0)!=(o|0));f=+X(+f);if(q){c=(k[(k[s>>2]|0)+(l<<2)>>2]|0)+(j<<3)|0;d=(k[(k[t>>2]|0)+(l<<2)>>2]|0)+(j<<3)|0;e=k[(k[(k[u>>2]|0)+(l<<2)>>2]|0)+(j<<2)>>2]|0;g=k[(k[m>>2]|0)+(l<<2)>>2]|0;h=0;do{B=+p[y+(h<<3)>>3];B=+p[c>>3]*(B-B*+p[d>>3]/f);p[e+(h<<3)>>3]=B;C=g+(h<<3)|0;p[C>>3]=B+ +p[C>>3];h=h+1|0}while((h|0)!=(o|0))}}j=j+1|0}while((j|0)!=(b|0))}l=l+1|0;d=k[n+(l<<2)>>2]|0}while((d|0)!=0)}if(i[137280]|0){C=k[24528]|0;B=+dB();p[z>>3]=B;FN(C,126303,z)|0}r=A;return}function Fj(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0.0,j=0;g=r;r=r+32|0;f=g+24|0;e=g+8|0;d=g;h=+p[4240];p[4139]=h*h;c=Gj(a,b)|0;if(c)do{Hj(a,b,c);c=Gj(a,b)|0}while((c|0)!=0);if(!(i[137280]|0))c=a+8|0;else{j=k[24528]|0;h=+Sj(a,b);p[d>>3]=h;FN(j,126313,d)|0;c=a+8|0;b=k[(k[c>>2]|0)+156>>2]|0;d=(b|0)==(k[13603]|0)?126327:176676;h=+dB();k[e>>2]=b;k[e+4>>2]=d;p[e+8>>3]=h;FN(j,126329,e)|0}c=k[(k[c>>2]|0)+156>>2]|0;if((c|0)==(k[13603]|0)){j=ht(a)|0;k[f>>2]=c;k[f+4>>2]=j;Yr(0,126356,f)|0}r=g;return}function Gj(a,b){a=a|0;b=b|0;var c=0.0,d=0,e=0,f=0,g=0.0,h=0,j=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0.0;u=r;r=r+16|0;t=u;q=(k[12567]|0)+1|0;k[12567]=q;a=k[a+8>>2]|0;if((k[a+156>>2]|0)<(k[13603]|0)){if((b|0)>0){m=k[a+152>>2]|0;n=k[13604]|0;o=(n|0)>0;h=a+168|0;f=0;j=0;g=0.0;while(1){a=k[m+(j<<2)>>2]|0;if((l[(k[a+8>>2]|0)+119>>0]|0)<=1){if(o){d=k[(k[h>>2]|0)+(j<<2)>>2]|0;e=0;c=0.0;do{v=+p[d+(e<<3)>>3];c=c+v*v;e=e+1|0}while((e|0)!=(n|0))}else c=0.0;if(!(c>g)){a=f;c=g}}else{a=f;c=g}j=j+1|0;if((j|0)==(b|0))break;else{f=a;g=c}}}else{a=0;c=0.0}if(!(c<+p[4139])){if((i[137280]|0)!=0&((q|0)%100|0|0)==0?(s=k[24528]|0,v=+X(+c),p[t>>3]=v,FN(s,126398,t)|0,((k[12567]|0)%1e3|0|0)==0):0)GN(10,s)|0}else a=0}else a=0;r=u;return a|0}function Hj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0,g=0,h=0,i=0,j=0,l=0;l=r;r=r+16|0;j=l;h=c+8|0;i=k[(k[h>>2]|0)+120>>2]|0;e=k[12568]|0;if(!e){e=k[13604]|0;e=Cy(ha(e<<3,e)|0)|0}else{g=k[13604]|0;e=Ey(e,ha(g<<3,g)|0)|0}k[12568]=e;Jj(a,b,i,e);e=k[13604]|0;if((e|0)>0){f=k[(k[(k[a+8>>2]|0)+168>>2]|0)+(i<<2)>>2]|0;g=0;do{p[33120+(g<<3)>>3]=-+p[f+(g<<3)>>3];g=g+1|0}while((g|0)<(e|0))}to(k[12568]|0,33200,33120,e);if((k[13604]|0)>0){e=0;do{d=+p[4242];d=d+ +_M()*((1.0-d)*2.0);g=33200+(e<<3)|0;d=+p[g>>3]*d;p[g>>3]=d;g=(k[(k[h>>2]|0)+132>>2]|0)+(e<<3)|0;p[g>>3]=+p[g>>3]+d;e=e+1|0}while((e|0)<(k[13604]|0))}h=(k[a+8>>2]|0)+156|0;k[h>>2]=(k[h>>2]|0)+1;Ij(a,b,i);if(AB()|0){e=k[13604]|0;if((e|0)>0){f=0;d=0.0;do{d=d+ +W(+(+p[33200+(f<<3)>>3]));f=f+1|0}while((f|0)<(e|0))}else d=0.0;d=+X(+d);b=k[24528]|0;c=ht(c)|0;k[j>>2]=c;p[j+8>>3]=d;FN(b,126404,j)|0}r=l;return}function Ij(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0.0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0.0,y=0,z=0.0,A=0;w=r;r=r+80|0;v=w;q=a+8|0;a=k[q>>2]|0;d=k[(k[a+152>>2]|0)+(c<<2)>>2]|0;e=k[13604]|0;if((e|0)>0)IP(k[(k[a+168>>2]|0)+(c<<2)>>2]|0,0,((e|0)>1?e<<3:8)|0)|0;if((b|0)>0){l=d+8|0;m=k[13604]|0;n=(m|0)>0;o=0;do{if((o|0)!=(c|0)?(s=k[q>>2]|0,t=k[(k[l>>2]|0)+132>>2]|0,u=k[(k[(k[(k[s+152>>2]|0)+(o<<2)>>2]|0)+8>>2]|0)+132>>2]|0,n):0){f=0.0;a=0;do{x=+p[t+(a<<3)>>3]-+p[u+(a<<3)>>3];p[v+(a<<3)>>3]=x;f=f+x*x;a=a+1|0}while((a|0)!=(m|0));f=+X(+f);if(n){h=k[s+172>>2]|0;a=k[(k[h+(c<<2)>>2]|0)+(o<<2)>>2]|0;d=(k[(k[s+164>>2]|0)+(c<<2)>>2]|0)+(o<<3)|0;e=(k[(k[s+160>>2]|0)+(c<<2)>>2]|0)+(o<<3)|0;i=k[s+168>>2]|0;g=k[i+(c<<2)>>2]|0;h=k[(k[h+(o<<2)>>2]|0)+(c<<2)>>2]|0;i=k[i+(o<<2)>>2]|0;j=0;do{A=a+(j<<3)|0;x=+p[v+(j<<3)>>3];x=+p[d>>3]*(x-x*+p[e>>3]/f);p[A>>3]=x;y=g+(j<<3)|0;p[y>>3]=x+ +p[y>>3];y=h+(j<<3)|0;x=+p[y>>3];z=-+p[A>>3];p[y>>3]=z;y=i+(j<<3)|0;p[y>>3]=z-x+ +p[y>>3];j=j+1|0}while((j|0)!=(m|0))}}o=o+1|0}while((o|0)!=(b|0))}r=w;return}function Jj(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0.0,j=0,l=0.0,m=0.0,n=0.0,o=0.0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;x=r;r=r+80|0;w=x;u=a+8|0;j=k[u>>2]|0;g=k[j+164>>2]|0;h=k[j+160>>2]|0;j=k[(k[j+152>>2]|0)+(c<<2)>>2]|0;a=k[13604]|0;if((a|0)>0){e=a<<3;f=0;do{IP(d+((ha(a,f)|0)<<3)|0,0,e|0)|0;f=f+1|0}while((f|0)<(a|0))}v=k[13604]|0;if((b|0)>0){t=(v|0)>0;s=g+(c<<2)|0;q=h+(c<<2)|0;h=j+8|0;j=0;do{if((j|0)!=(c|0)){if(t){a=k[(k[h>>2]|0)+132>>2]|0;e=k[(k[(k[(k[(k[u>>2]|0)+152>>2]|0)+(j<<2)>>2]|0)+8>>2]|0)+132>>2]|0;f=0;i=0.0;do{o=+p[a+(f<<3)>>3]-+p[e+(f<<3)>>3];p[w+(f<<3)>>3]=o;i=i+o*o;f=f+1|0}while((f|0)<(v|0))}else i=0.0;n=+X(+i);n=1.0/(n*(n*n));if(t){e=(k[s>>2]|0)+(j<<3)|0;f=(k[q>>2]|0)+(j<<3)|0;g=0;do{m=+p[e>>3];l=+p[f>>3];o=+p[w+(g<<3)>>3];if((g|0)>0){a=0;do{y=d+((ha(v,a)|0)+g<<3)|0;p[y>>3]=+p[y>>3]+n*(m*l*o*+p[w+(a<<3)>>3]);a=a+1|0;m=+p[e>>3];l=+p[f>>3]}while((a|0)!=(g|0))}y=d+((ha(v,g)|0)+g<<3)|0;p[y>>3]=+p[y>>3]+m*(1.0-n*(l*(i-o*o)));g=g+1|0}while((g|0)!=(v|0))}}j=j+1|0}while((j|0)!=(b|0))}if((v|0)>1){e=1;do{a=ha(v,e)|0;f=0;do{y=d+((ha(v,f)|0)+e<<3)|0;p[d+(a+f<<3)>>3]=+p[y>>3];f=f+1|0}while((f|0)!=(e|0));e=e+1|0}while((e|0)<(v|0))}r=x;return}function Kj(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0;i=a+8|0;c=k[i>>2]|0;b=k[c+124>>2]|0;a:do if((b|0)>0?(h=b+-1|0,e=(h|0)/2|0,d=(k[12569]|0)+(e<<2)|0,g=k[d>>2]|0,f=g+8|0,!(+p[(k[f>>2]|0)+136>>3]<=+p[c+136>>3])):0){c=h;while(1){k[d>>2]=a;k[(k[i>>2]|0)+124>>2]=e;k[(k[12569]|0)+(b<<2)>>2]=g;k[(k[f>>2]|0)+124>>2]=b;if((c|0)<=1)break a;c=e+-1|0;b=(c|0)/2|0;d=(k[12569]|0)+(b<<2)|0;g=k[d>>2]|0;f=g+8|0;if(+p[(k[f>>2]|0)+136>>3]<=+p[(k[i>>2]|0)+136>>3])break;else{h=e;e=b;b=h}}}while(0);return}function Lj(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0;h=a+8|0;d=k[(k[h>>2]|0)+124>>2]|0;c=d<<1|1;b=k[12570]|0;a:do if((c|0)<(b|0))while(1){f=c+1|0;g=k[12569]|0;if((f|0)<(b|0)){e=k[g+(f<<2)>>2]|0;b=k[g+(c<<2)>>2]|0;if(+p[(k[e+8>>2]|0)+136>>3]<+p[(k[b+8>>2]|0)+136>>3]){b=e;e=f}else i=5}else{b=k[g+(c<<2)>>2]|0;i=5}if((i|0)==5){i=0;e=c}c=b+8|0;if(+p[(k[h>>2]|0)+136>>3]<=+p[(k[c>>2]|0)+136>>3])break a;k[g+(e<<2)>>2]=a;k[(k[h>>2]|0)+124>>2]=e;k[(k[12569]|0)+(d<<2)>>2]=b;k[(k[c>>2]|0)+124>>2]=d;c=e<<1|1;b=k[12570]|0;if((c|0)>=(b|0))break;else d=e}while(0);return}function Mj(a){a=a|0;var b=0,c=0;b=(k[a+8>>2]|0)+124|0;if((k[b>>2]|0)>=0)Wa(126413,126433,645,126441);c=k[12570]|0;k[12570]=c+1;k[b>>2]=c;k[(k[12569]|0)+(c<<2)>>2]=a;if((c|0)>0)Kj(a);return}function Nj(){var a=0,b=0,c=0,d=0;b=k[12570]|0;if(!b)a=0;else{d=k[12569]|0;a=k[d>>2]|0;c=b+-1|0;k[12570]=c;b=k[d+(c<<2)>>2]|0;k[d>>2]=b;k[(k[b+8>>2]|0)+124>>2]=0;if((c|0)>1)Lj(b);k[(k[a+8>>2]|0)+124>>2]=-1}return a|0}function Oj(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0;d=r;r=r+16|0;c=d;b=By((b<<2)+4|0)|0;k[12569]=b;if(i[137280]|0){QN(126455,28,1,k[24528]|0)|0;cB()}b=Kt(a)|0;if(b)do{Pj(a,b);b=Lt(a,b)|0}while((b|0)!=0);if(i[137280]|0){a=k[24528]|0;e=+dB();p[c>>3]=e;FN(a,126303,c)|0}vP(k[12569]|0);r=d;return}function Pj(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0.0,g=0,h=0,i=0,j=0;j=a+8|0;e=k[(k[j>>2]|0)+152>>2]|0;c=k[e>>2]|0;if(c){d=0;do{p[(k[c+8>>2]|0)+136>>3]=+p[4241];d=d+1|0;c=k[e+(d<<2)>>2]|0}while((c|0)!=0)}k[12571]=b;c=k[b+8>>2]|0;p[c+136>>3]=0.0;k[c+128>>2]=0;Mj(b);c=Nj()|0;if(c)do{d=k[12571]|0;if((c|0)!=(d|0)){i=k[c+8>>2]|0;f=+p[i+136>>3];h=k[(k[d+8>>2]|0)+120>>2]|0;i=k[i+120>>2]|0;g=k[(k[j>>2]|0)+160>>2]|0;p[(k[g+(i<<2)>>2]|0)+(h<<3)>>3]=f;p[(k[g+(h<<2)>>2]|0)+(i<<3)>>3]=f}d=Js(a,c)|0;if(d){i=c+8|0;do{e=k[d>>2]&3;b=k[((e|0)==3?d:d+32|0)+28>>2]|0;if((b|0)==(c|0))b=k[((e|0)==2?d:d+-32|0)+28>>2]|0;e=k[i>>2]|0;f=+p[e+136>>3]+ +p[(k[d+8>>2]|0)+136>>3];g=k[b+8>>2]|0;h=g+136|0;do if(+p[h>>3]>f){p[h>>3]=f;if((k[g+124>>2]|0)>-1){Kj(b);break}else{k[g+128>>2]=(k[e+128>>2]|0)+1;Mj(b);break}}while(0);d=Ks(a,d,c)|0}while((d|0)!=0)}c=Nj()|0}while((c|0)!=0);return}function Qj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0;e=Js(a,b)|0;a:do if(!e)d=0;else{d=0;f=0;do{g=k[e>>2]&3;i=k[((g|0)==2?e:e+-32|0)+28>>2]|0;g=k[((g|0)==3?e:e+32|0)+28>>2]|0;do if((i|0)!=(g|0)){h=(g|0)==(b|0);if((d|0)!=1){f=h?i:g;k[c>>2]=f;d=d+1|0;break}if(!((i|0)==(f|0)&h)?!((i|0)==(b|0)&(g|0)==(f|0)):0){d=2;break a}else d=1}while(0);e=Ks(a,e,b)|0}while((e|0)!=0)}while(0);return d|0}function Rj(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0,g=0,h=0.0,j=0,l=0,m=0,n=0,o=0,q=0;q=r;r=r+48|0;n=q+24|0;m=q+16|0;l=q+8|0;j=q;b=Es(a,b)|0;if(!b)d=0.0;else{f=(c|0)==0;d=0.0;do{do if(!f?(g=ts(b,c)|0,(i[g>>0]|0)!=0):0){k[l>>2]=j;if(((UN(g,137283,l)|0)>=1?(h=+p[j>>3],!(h<0.0)):0)?h!=0.0|(k[13600]|0)!=0:0){e=h;break}k[m>>2]=g;Yr(0,126484,m)|0;o=ht(a)|0;k[n>>2]=o;p[n+8>>3]=1.0;Yr(3,126502,n)|0;o=9}else o=9;while(0);if((o|0)==9){o=0;p[j>>3]=1.0;e=1.0}p[(k[b+8>>2]|0)+136>>3]=e;d=d+ +p[j>>3];b=Gs(a,b)|0}while((b|0)!=0)}r=q;return +d}function Sj(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0.0;if((b|0)>1){r=k[a+8>>2]|0;l=k[r+152>>2]|0;m=k[13604]|0;n=(m|0)>0;o=b+-1|0;q=r+164|0;r=r+160|0;c=0.0;s=0;do{a=s;s=s+1|0;if((s|0)<(b|0)){i=k[(k[q>>2]|0)+(a<<2)>>2]|0;j=k[(k[r>>2]|0)+(a<<2)>>2]|0;h=(k[l+(a<<2)>>2]|0)+8|0;g=s;do{if(n){a=k[(k[h>>2]|0)+132>>2]|0;e=k[(k[(k[l+(g<<2)>>2]|0)+8>>2]|0)+132>>2]|0;f=0;d=0.0;do{t=+p[a+(f<<3)>>3]-+p[e+(f<<3)>>3];d=d+t*t;f=f+1|0}while((f|0)!=(m|0))}else d=0.0;t=+p[j+(g<<3)>>3];c=c+ +p[i+(g<<3)>>3]*(d+t*t-t*2.0*+X(+d));g=g+1|0}while((g|0)!=(b|0))}}while((s|0)!=(o|0))}else c=0.0;return +c}function Tj(a){a=a|0;var b=0,c=0,d=0,e=0,f=0.0;UB(a,2);c=a+8|0;j[(k[c>>2]|0)+176>>1]=2;k[13604]=2;b=Zs(a)|0;d=By(b*40|0)|0;b=By((b<<2)+4|0)|0;k[(k[c>>2]|0)+152>>2]=b;b=Kt(a)|0;if(b){e=0;while(1){Ii(b);k[(k[b+8>>2]|0)+112>>2]=d+(e*40|0);k[(k[(k[c>>2]|0)+152>>2]|0)+(e<<2)>>2]=b;b=Lt(a,b)|0;if(!b)break;else e=e+1|0}}b=Kt(a)|0;if(b)do{c=Es(a,b)|0;if(c)do{qu(c,173717,176,1)|0;CB(c)|0;f=+jB(c,k[13656]|0,1.0,0.0);p[(k[c+8>>2]|0)+128>>3]=f;c=Gs(a,c)|0}while((c|0)!=0);b=Lt(a,b)|0}while((b|0)!=0);return}function Uj(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0;n=r;r=r+80|0;h=n+32|0;e=n+24|0;d=n+16|0;g=n;m=n+72|0;l=n+40|0;if(Zs(a)|0){Tj(a);ss(a,131906)|0;c=ss(a,131906)|0;if(c)if(i[c>>0]|0){b=Qt(a,c,0)|0;if(!b){k[d>>2]=c;Yr(0,126529,d)|0;Yr(3,126569,e)|0;b=0;j=1}else j=0}else{b=0;j=1}else{b=0;j=0}c=ss(a,176896)|0;if(((c|0)!=0?(i[c>>0]|0)!=0:0)?(f=g+8|0,k[h>>2]=g,k[h+4>>2]=f,(UN(c,142247,h)|0)==1):0)p[f>>3]=+p[g>>3];if(Zs(a)|0){h=rw(a,m,0)|0;if((k[m>>2]|0)==1){l=vo(a,b)|0;g=(Kt(a)|0)+8|0;vP(k[(k[g>>2]|0)+112>>2]|0);k[(k[g>>2]|0)+112>>2]=0;ll(a)|0;dj(a);b=(j|0)==0|(b|0)!=0?b:l}else{Kw(a,2,8,l)|0;k[l+12>>2]=0;if((k[m>>2]|0)>0){g=(j|0)==0;f=0;do{e=k[h+(f<<2)>>2]|0;c=(b|0)!=0;if(c?(ju(e,b)|0)!=0:0)d=b;else d=0;uw(e)|0;d=vo(e,d)|0;b=g|c?b:d;ll(e)|0;f=f+1|0}while((f|0)<(k[m>>2]|0))}g=(Kt(a)|0)+8|0;vP(k[(k[g>>2]|0)+112>>2]|0);k[(k[g>>2]|0)+112>>2]=0;Jw(k[m>>2]|0,h,a,l)|0;dj(a)}if((k[m>>2]|0)>0){c=0;do{_t(a,k[h+(c<<2)>>2]|0)|0;c=c+1|0}while((c|0)<(k[m>>2]|0))}vP(h)}if(j)us(a,131906,ht(b)|0)|0;tz(a)}r=n;return}function Vj(a){a=a|0;var b=0,c=0;b=Kt(a)|0;if(b){do{c=Es(a,b)|0;if(c)do{XB(c);c=Gs(a,c)|0}while((c|0)!=0);YB(b);b=Lt(a,b)|0}while((b|0)!=0);vP(k[(k[a+8>>2]|0)+152>>2]|0);if((au(a)|0)!=(a|0))tu(a,0,173447)}return}function Wj(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;d=ks(a,1,145890,145896)|0;k[13621]=d;UB(a,2);d=a+8|0;j[(k[d>>2]|0)+176>>1]=2;k[13604]=2;Yj(a,0);e=By((Zs(a)|0)<<2)|0;b=By(((Zs(a)|0)<<2)+4|0)|0;k[(k[d>>2]|0)+152>>2]=b;b=Kt(a)|0;if(b){f=0;do{qu(b,173424,304,1)|0;k[(k[b+8>>2]|0)+112>>2]=e+(f<<2);k[(k[(k[d>>2]|0)+152>>2]|0)+(f<<2)>>2]=b;f=f+1|0;us(b,145890,145896)|0;c=Es(a,b)|0;if(c)do{qu(c,173717,304,1)|0;c=Gs(a,c)|0}while((c|0)!=0);b=Lt(a,b)|0}while((b|0)!=0)}if(!((Zs(a)|0)==0?(k[(k[d>>2]|0)+180>>2]|0)==0:0)){zo(a);tz(a)}return}function Xj(a){a=a|0;var b=0,c=0;b=Kt(a)|0;if(b){vP(k[(k[b+8>>2]|0)+112>>2]|0);do{c=Es(a,b)|0;if(c)do{XB(c);c=Gs(a,c)|0}while((c|0)!=0);YB(b);b=Lt(a,b)|0}while((b|0)!=0);vP(k[(k[a+8>>2]|0)+152>>2]|0);if((au(a)|0)!=(a|0))tu(a,0,173447)}return}function Yj(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0;n=r;r=r+16|0;m=n;i=(b|0)==0;if(i){k[m>>2]=0;k[m+4>>2]=0;k[m+8>>2]=0;b=m}c=Iu(a)|0;if(c){g=b+8|0;h=b+4|0;do{if(!(wO(ht(c)|0,143893,7)|0)){qu(c,173447,280,1)|0;e=(k[g>>2]|0)+1|0;k[g>>2]=e;d=k[h>>2]|0;if((e|0)<(d|0)){f=k[b>>2]|0;d=e}else{f=d+10|0;k[h>>2]=f;f=Ey(k[b>>2]|0,f<<2)|0;k[b>>2]=f;d=k[g>>2]|0}k[f+(d<<2)>>2]=c;Yj(c,0)}else Yj(c,b);c=Ju(c)|0}while((c|0)!=0)}if(i?(j=k[m+8>>2]|0,l=a+8|0,k[(k[l>>2]|0)+180>>2]=j,(j|0)!=0):0){m=Ey(k[m>>2]|0,(j<<2)+4|0)|0;k[(k[l>>2]|0)+184>>2]=m}r=n;return}function Zj(a){a=a|0;var b=0,c=0,d=0;UB(a,2);d=a+8|0;j[(k[d>>2]|0)+176>>1]=2;k[13604]=2;b=Kt(a)|0;if(b)do{Ii(b);b=Lt(a,b)|0}while((b|0)!=0);b=Kt(a)|0;if(b)do{c=Es(a,b)|0;if(c)do{qu(c,173717,176,1)|0;CB(c)|0;c=Gs(a,c)|0}while((c|0)!=0);b=Lt(a,b)|0}while((b|0)!=0);$j(a,0);ak(a,0);bk(a,0);b=k[d>>2]|0;if(!(k[(k[b+8>>2]|0)+84>>2]|0)){b=(m[b+136>>1]|0)&14;if(b)aj(a,b)|0}else{b=Kt(a)|0;if(b)do{c=k[b+8>>2]|0;d=k[c+132>>2]|0;p[d>>3]=+p[c+16>>3]/72.0;p[d+8>>3]=+p[c+24>>3]/72.0;b=Lt(a,b)|0}while((b|0)!=0);bj(a,1)}tz(a);return}function _j(a){a=a|0;var b=0;b=Kt(a)|0;if(b)do{YB(b);b=Lt(a,b)|0}while((b|0)!=0);ck(a);return}function $j(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0;n=r;r=r+16|0;m=n;i=(b|0)==0;if(i){k[m>>2]=0;k[m+4>>2]=0;k[m+8>>2]=0;b=m}c=Iu(a)|0;if(c){g=b+8|0;h=b+4|0;do{if(!(wO(ht(c)|0,143893,7)|0)){qu(c,173447,280,1)|0;ly(c);e=(k[g>>2]|0)+1|0;k[g>>2]=e;d=k[h>>2]|0;if((e|0)<(d|0)){f=k[b>>2]|0;d=e}else{f=d+10|0;k[h>>2]=f;f=Ey(k[b>>2]|0,f<<2)|0;k[b>>2]=f;d=k[g>>2]|0}k[f+(d<<2)>>2]=c;$j(c,0)}else $j(c,b);c=Ju(c)|0}while((c|0)!=0)}if(i?(j=k[m+8>>2]|0,l=a+8|0,k[(k[l>>2]|0)+180>>2]=j,(j|0)!=0):0){m=Ey(k[m>>2]|0,(j<<2)+4|0)|0;k[(k[l>>2]|0)+184>>2]=m}r=n;return}function ak(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0,g=0.0,h=0,j=0,m=0,n=0,o=0,q=0.0,s=0.0,u=0,v=0,w=0,x=0,y=0.0,z=0.0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;P=r;r=r+256|0;O=P+184|0;M=P+160|0;L=P+120|0;K=P+80|0;D=P+56|0;E=P+16|0;u=P+8|0;f=P;H=P+224|0;n=k[a+48>>2]|0;if((l[137280]|0)>1){dk(b);N=k[24528]|0;J=ht(a)|0;k[f>>2]=J;FN(N,126867,f)|0}N=a+8|0;f=k[N>>2]|0;if((k[f+180>>2]|0)<1)h=0;else{m=b+1|0;j=1;h=0;while(1){J=k[(k[f+184>>2]|0)+(j<<2)>>2]|0;ak(J,m);h=(Zs(J)|0)+h|0;f=k[N>>2]|0;if((j|0)>=(k[f+180>>2]|0))break;else j=j+1|0}}F=Zs(a)|0;A=F-h|0;f=k[N>>2]|0;G=k[f+180>>2]|0;B=G+A|0;C=(B|0)==0;if(C?(k[f+12>>2]|0)==0:0){O=f+16|0;k[O>>2]=0;k[O+4>>2]=0;k[O+8>>2]=0;k[O+12>>2]=0;p[f+40>>3]=18.0;p[f+32>>3]=18.0}else{f=H+16|0;do if((Kw(a,4,4,H)|0)>>>0>=3)if((k[f>>2]|0)==4?(k[H+28>>2]&2|0)!=0:0){f=ks(n,0,135277,0)|0;j=ks(n,1,135277,0)|0;if((f|0)!=0|(j|0)!=0){J=By(B)|0;k[H+24>>2]=J;break}else{f=ht(a)|0;k[u>>2]=f;Yr(0,126658,u)|0;f=0;j=0;break}}else{f=0;j=0}else{k[f>>2]=3;f=0;j=0}while(0);I=By(B<<5)|0;J=By(B<<2)|0;m=k[N>>2]|0;if((k[m+180>>2]|0)<1)f=0;else{w=H+24|0;x=(f|0)!=0;u=1;v=0;while(1){m=k[(k[m+184>>2]|0)+(u<<2)>>2]|0;n=I+(v<<5)|0;Q=(k[m+8>>2]|0)+16|0;k[n>>2]=k[Q>>2];k[n+4>>2]=k[Q+4>>2];k[n+8>>2]=k[Q+8>>2];k[n+12>>2]=k[Q+12>>2];k[n+16>>2]=k[Q+16>>2];k[n+20>>2]=k[Q+20>>2];k[n+24>>2]=k[Q+24>>2];k[n+28>>2]=k[Q+28>>2];if(x&(k[w>>2]|0)!=0){Q=iB(m,f,0,0)|0;k[(k[w>>2]|0)+(v<<2)>>2]=Q}n=v+1|0;k[J+(v<<2)>>2]=m;m=k[N>>2]|0;if((u|0)>=(k[m+180>>2]|0)){f=n;break}else{u=u+1|0;v=n}}}if((A|0)>0?(o=Kt(a)|0,(o|0)!=0):0){u=H+24|0;v=(j|0)!=0;do{m=k[o+8>>2]|0;n=m+112|0;if(!(k[n>>2]|0)){k[n>>2]=a;y=+p[m+88>>3]+ +p[m+96>>3];z=+p[m+80>>3];Q=I+(f<<5)|0;k[Q>>2]=0;k[Q+4>>2]=0;k[Q+8>>2]=0;k[Q+12>>2]=0;p[I+(f<<5)+16>>3]=y;p[I+(f<<5)+24>>3]=z;if(v&(k[u>>2]|0)!=0){Q=iB(o,j,0,0)|0;k[(k[u>>2]|0)+(f<<2)>>2]=Q}k[J+(f<<2)>>2]=o;f=f+1|0}o=Lt(a,o)|0}while((o|0)!=0)}v=Gw(B,I,H)|0;f=k[H+24>>2]|0;if(f)vP(f);u=(B|0)>0;if(u){m=k[24528]|0;n=F+G-h|0;c=2147483647.0;e=2147483647.0;q=-2147483647.0;d=-2147483647.0;o=0;do{s=+(k[v+(o<<3)>>2]|0);z=+(k[v+(o<<3)+4>>2]|0);g=s+ +p[I+(o<<5)>>3];s=s+ +p[I+(o<<5)+16>>3];y=z+ +p[I+(o<<5)+8>>3];z=z+ +p[I+(o<<5)+24>>3];c=c<g?c:g;e=e<y?e:y;q=q>s?q:s;d=d>z?d:z;f=k[J+(o<<2)>>2]|0;j=f+8|0;if((o|0)<(k[(k[N>>2]|0)+180>>2]|0)){Q=k[j>>2]|0;p[Q+16>>3]=g;p[Q+24>>3]=y;p[Q+32>>3]=s;p[Q+40>>3]=z;if((l[137280]|0)>1){dk(b);Q=ht(f)|0;k[E>>2]=Q;p[E+8>>3]=g;p[E+16>>3]=y;p[E+24>>3]=s;p[E+32>>3]=z;FN(m,126637,E)|0}}else{Q=k[j>>2]|0;p[Q+16>>3]=(g+s)*.5;p[Q+24>>3]=(y+z)*.5;if((l[137280]|0)>1){dk(b);Q=ht(f)|0;B=k[j>>2]|0;y=+p[B+16>>3];z=+p[B+24>>3];k[D>>2]=Q;p[D+8>>3]=y;p[D+16>>3]=z;FN(m,126625,D)|0}}o=o+1|0}while((o|0)!=(n|0))}else{d=-2147483647.0;q=-2147483647.0;e=2147483647.0;c=2147483647.0}j=k[N>>2]|0;f=k[j+12>>2]|0;if(f){s=+p[f+24>>3];if(C){q=s;g=0.0;d=+p[f+32>>3];e=0.0}else g=c;c=s-(q-g);if(c>0.0){z=c*.5;g=g-z;q=q+z}}else g=c;if((b|0)>0)c=+((k[H+8>>2]|0)>>>0)*.5;else c=0.0;z=g-c;s=q+c;y=e-(c+ +p[j+56>>3]);q=d+(c+ +p[j+88>>3]);if((l[137280]|0)>1){dk(b);Q=k[24528]|0;H=ht(a)|0;k[K>>2]=H;p[K+8>>3]=z;p[K+16>>3]=y;p[K+24>>3]=s;p[K+32>>3]=q;FN(Q,126637,K)|0}if(u){n=k[24528]|0;h=F+G-h|0;m=0;do{j=k[J+(m<<2)>>2]|0;f=j+8|0;if((m|0)<(k[(k[N>>2]|0)+180>>2]|0)){Q=k[f>>2]|0;G=Q+16|0;H=Q+24|0;K=Q+32|0;Q=Q+40|0;c=+p[G>>3]-z;d=+p[H>>3]-y;e=+p[K>>3]-z;g=+p[Q>>3]-y;p[G>>3]=c;p[H>>3]=d;p[K>>3]=e;p[Q>>3]=g;if((l[137280]|0)>1){dk(b);Q=ht(j)|0;k[L>>2]=Q;p[L+8>>3]=c;p[L+16>>3]=d;p[L+24>>3]=e;p[L+32>>3]=g;FN(n,126637,L)|0}}else{Q=k[f>>2]|0;K=Q+16|0;i[t>>0]=i[K>>0];i[t+1>>0]=i[K+1>>0];i[t+2>>0]=i[K+2>>0];i[t+3>>0]=i[K+3>>0];i[t+4>>0]=i[K+4>>0];i[t+5>>0]=i[K+5>>0];i[t+6>>0]=i[K+6>>0];i[t+7>>0]=i[K+7>>0];e=+p[t>>3];Q=Q+24|0;i[t>>0]=i[Q>>0];i[t+1>>0]=i[Q+1>>0];i[t+2>>0]=i[Q+2>>0];i[t+3>>0]=i[Q+3>>0];i[t+4>>0]=i[Q+4>>0];i[t+5>>0]=i[Q+5>>0];i[t+6>>0]=i[Q+6>>0];i[t+7>>0]=i[Q+7>>0];g=+p[t>>3]-y;p[K>>3]=e-z;p[Q>>3]=g;if((l[137280]|0)>1){dk(b);Q=ht(j)|0;K=k[f>>2]|0;e=+p[K+16>>3];g=+p[K+24>>3];k[M>>2]=Q;p[M+8>>3]=e;p[M+16>>3]=g;FN(n,126625,M)|0}}m=m+1|0}while((m|0)!=(h|0))}g=s-z;e=q-y;d=z-z;c=y-y;Q=k[N>>2]|0;p[Q+16>>3]=d;p[Q+24>>3]=c;p[Q+32>>3]=g;p[Q+40>>3]=e;if((l[137280]|0)>1){dk(b);Q=k[24528]|0;a=ht(a)|0;k[O>>2]=a;p[O+8>>3]=d;p[O+16>>3]=c;p[O+24>>3]=g;p[O+32>>3]=e;FN(Q,126637,O)|0}vP(I);vP(J);vP(v)}r=P;return}function bk(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0.0,i=0.0,j=0.0,m=0.0,n=0,o=0,q=0.0,s=0.0,t=0,u=0,v=0;u=r;r=r+80|0;t=u+32|0;g=u+8|0;c=u;o=a+8|0;n=k[o>>2]|0;q=+p[n+16>>3];s=+p[n+24>>3];if((l[137280]|0)>1){dk(b);n=k[24528]|0;f=ht(a)|0;k[c>>2]=f;FN(n,126610,c)|0}n=(b|0)!=0;if(n?(d=Kt(a)|0,(d|0)!=0):0){f=k[24528]|0;do{c=d+8|0;e=k[c>>2]|0;if((k[e+112>>2]|0)==(a|0)?(v=e+16|0,p[v>>3]=q+ +p[v>>3],e=e+24|0,p[e>>3]=s+ +p[e>>3],(l[137280]|0)>1):0){dk(b);v=ht(d)|0;e=k[c>>2]|0;j=+p[e+16>>3];m=+p[e+24>>3];k[g>>2]=v;p[g+8>>3]=j;p[g+16>>3]=m;FN(f,126625,g)|0}d=Lt(a,d)|0}while((d|0)!=0)}c=k[o>>2]|0;if((k[c+180>>2]|0)>=1){a=k[24528]|0;g=b+1|0;f=1;while(1){e=k[(k[c+184>>2]|0)+(f<<2)>>2]|0;if(n){d=e+8|0;c=k[d>>2]|0;h=q+ +p[c+16>>3];i=s+ +p[c+24>>3];j=q+ +p[c+32>>3];m=s+ +p[c+40>>3];if((l[137280]|0)>1){dk(b);c=ht(e)|0;k[t>>2]=c;p[t+8>>3]=h;p[t+16>>3]=i;p[t+24>>3]=j;p[t+32>>3]=m;FN(a,126637,t)|0;c=k[d>>2]|0}p[c+16>>3]=h;p[c+24>>3]=i;p[c+32>>3]=j;p[c+40>>3]=m}bk(e,g);c=k[o>>2]|0;if((f|0)>=(k[c+180>>2]|0))break;else f=f+1|0}}r=u;return}function ck(a){a=a|0;var b=0,c=0,d=0;c=a+8|0;b=k[c>>2]|0;a=b+184|0;if((k[b+180>>2]|0)>=1){b=1;while(1){d=k[(k[a>>2]|0)+(b<<2)>>2]|0;sy(k[(k[d+8>>2]|0)+12>>2]|0);ck(d);d=k[c>>2]|0;a=d+184|0;if((b|0)<(k[d+180>>2]|0))b=b+1|0;else break}}vP(k[a>>2]|0);return}function dk(a){a=a|0;var b=0;if((a|0)>0){b=k[24528]|0;while(1){QN(126655,2,1,b)|0;if((a|0)>1)a=a+-1|0;else break}}return}function ek(a){a=a|0;var b=0,c=0,d=0,e=0.0,f=0,g=0,h=0,j=0,l=0,n=0,o=0,q=0,s=0,t=0,u=0;u=r;r=r+32|0;t=u+16|0;s=u;q=u+24|0;su(a,1,173424,304,1);IB(a)|0;b=By(((Zs(a)|0)<<2)+4|0)|0;n=a+8|0;k[(k[n>>2]|0)+152>>2]=b;b=Kt(a)|0;if(b){c=0;while(1){BB(b);j=($t(b)|0)+8|0;j=By(m[(k[j>>2]|0)+176>>1]<<3)|0;l=b+8|0;k[(k[l>>2]|0)+132>>2]=j;j=($t(b)|0)+8|0;ZB(b,k[(k[j>>2]|0)+116>>2]&1);k[(k[(k[n>>2]|0)+152>>2]|0)+(c<<2)>>2]=b;k[(k[l>>2]|0)+120>>2]=c;b=Lt(a,b)|0;if(!b)break;else c=c+1|0}}d=ks(a,2,128865,0)|0;b=Kt(a)|0;if(b)do{c=Es(a,b)|0;if(c)do{qu(c,173717,176,1)|0;e=+jB(c,k[13656]|0,1.0,0.0);l=c+8|0;p[(k[l>>2]|0)+128>>3]=e;e=+jB(c,d,+p[(k[13595]|0)+32>>3],0.0);p[(k[l>>2]|0)+136>>3]=e;CB(c)|0;c=Gs(a,c)|0}while((c|0)!=0);b=Lt(a,b)|0}while((b|0)!=0);l=ks(a,1,138535,0)|0;if((l|0)!=0?(o=ks(a,1,126741,0)|0,f=k[k[(k[n>>2]|0)+152>>2]>>2]|0,(f|0)!=0):0){h=(o|0)==0;j=k[24528]|0;g=0;do{b=ts(f,l)|0;do if(i[b>>0]|0){a=f+8|0;c=k[(k[a>>2]|0)+132>>2]|0;i[q>>0]=0;d=c+8|0;k[s>>2]=c;k[s+4>>2]=d;k[s+8>>2]=q;if((UN(b,138031,s)|0)<=1){a=ht(f)|0;k[t>>2]=a;k[t+4>>2]=b;FN(j,126745,t)|0;break}e=+p[4239];if(e>0.0){p[c>>3]=+p[c>>3]/e;p[d>>3]=+p[d>>3]/+p[4239]}b=k[a>>2]|0;i[b+119>>0]=1;if((i[q>>0]|0)!=33){if(h)break;if(!((oB(ts(f,o)|0)|0)<<24>>24))break;b=k[a>>2]|0}i[b+119>>0]=3}while(0);g=g+1|0;f=k[(k[(k[n>>2]|0)+152>>2]|0)+(g<<2)>>2]|0}while((f|0)!=0)}r=u;return}function fk(a){a=a|0;var b=0,c=0;b=Kt(a)|0;if(b)do{c=Es(a,b)|0;if(c)do{XB(c);c=Gs(a,c)|0}while((c|0)!=0);YB(b);b=Lt(a,b)|0}while((b|0)!=0);gk(a);a=a+8|0;vP(k[(k[a>>2]|0)+152>>2]|0);vP(k[(k[a>>2]|0)+140>>2]|0);return}function gk(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;f=a+8|0;e=k[f>>2]|0;b=e+184|0;if((k[e+180>>2]|0)>=1){e=1;while(1){d=k[(k[b>>2]|0)+(e<<2)>>2]|0;b=d+8|0;sy(k[(k[b>>2]|0)+12>>2]|0);c=k[(k[b>>2]|0)+140>>2]|0;if(c){vP(k[c>>2]|0);vP(k[(k[b>>2]|0)+140>>2]|0)}gk(d);d=k[f>>2]|0;b=d+184|0;if((e|0)<(k[d+180>>2]|0))e=e+1|0;else break}}vP(k[b>>2]|0);if((au(a)|0)!=(a|0))ru(a,173447)|0;return}function hk(a,b){a=a|0;b=b|0;var c=0;c=ks(a,0,126797,0)|0;k[b+4>>2]=c;c=ks(a,0,177253,0)|0;k[b+8>>2]=c;c=ks(a,0,177185,0)|0;k[b+12>>2]=c;k[b>>2]=a;k[b+16>>2]=0;a=Kw(a,2,4,b+20|0)|0;k[b+36>>2]=a;return}function ik(a){a=a|0;var b=0,c=0;UB(a,2);b=By(56)|0;c=a+8|0;k[(k[c>>2]|0)+140>>2]=b;b=(iB(a,ks(a,0,128257,0)|0,2,2)|0)&65535;b=(b&65535)<10?b:10;j[(k[c>>2]|0)+176>>1]=b;k[13604]=b&65535;lk(a,0,a);tk(a);ek(a);return}function jk(a){a=a|0;var b=0,c=0,d=0,e=0.0,f=0.0,g=0.0,h=0.0,j=0,l=0.0,m=0.0;d=r;r=r+64|0;b=d;hk(a,b);mk(a,b);b=Kt(a)|0;if(b)do{c=k[b+8>>2]|0;if(i[c+118>>0]|0){j=k[(k[(k[c+212>>2]|0)+8>>2]|0)+140>>2]|0;h=+p[j+24>>3]-+p[j+8>>3];g=+p[j+32>>3]-+p[j+16>>3];m=h*.5;l=g*.5;f=m*72.0;e=l*72.0;j=k[c+132>>2]|0;p[j>>3]=m;p[j+8>>3]=l;p[c+32>>3]=h;p[c+40>>3]=g;p[c+96>>3]=f;p[c+88>>3]=f;p[c+80>>3]=g*72.0;c=k[(k[c+12>>2]|0)+44>>2]|0;p[c>>3]=f;p[c+8>>3]=e;g=-f;p[c+16>>3]=g;p[c+24>>3]=e;p[c+32>>3]=g;e=-e;p[c+40>>3]=e;p[c+48>>3]=f;p[c+56>>3]=e}b=Lt(a,b)|0}while((b|0)!=0);nk(a,a);ok(a);r=d;return}function kk(a){a=a|0;var b=0,c=0,d=0.0,e=0,f=0,g=0,h=0.0,i=0,l=0,m=0,n=0,o=0;o=r;r=r+16|0;i=o;m=4;l=uP(40)|0;k[l>>2]=0;h=+p[4239];w=0;d=+va(1,a|0);b=w;w=0;if((b|0)!=0&(x|0)!=0){c=FP(k[b>>2]|0,l|0,m|0)|0;if(!c)Za(b|0,x|0);L=x}else c=-1;if((c|0)!=1){p[4239]=d;w=0;na(93,a|0);b=w;w=0;if((b|0)!=0&(x|0)!=0){c=FP(k[b>>2]|0,l|0,m|0)|0;if(!c)Za(b|0,x|0);L=x}else c=-1;if((c|0)!=1){l=DP(50288,1,l|0,m|0)|0;m=L;w=0;b=w;w=0;if((b|0)!=0&(x|0)!=0){c=FP(k[b>>2]|0,l|0,m|0)|0;if(!c)Za(b|0,x|0);L=x}else c=-1;if((c|0)!=1)b=0;else b=L}else b=L}else b=L;a:while(1){if(b)break;w=0;na(94,a|0);b=w;w=0;if((b|0)!=0&(x|0)!=0){c=FP(k[b>>2]|0,l|0,m|0)|0;if(!c)Za(b|0,x|0);L=x}else c=-1;if((c|0)==1){b=L;continue}w=0;ra(20,a|0)|0;b=w;w=0;if((b|0)!=0&(x|0)!=0){c=FP(k[b>>2]|0,l|0,m|0)|0;if(!c)Za(b|0,x|0);L=x}else c=-1;if((c|0)==1){b=L;continue}f=a+8|0;b=j[(k[f>>2]|0)+136>>1]|0;if(b&14){g=b&14;switch(g|0){case 2:break;case 12:{w=0;b=ta(27,a|0,28,10)|0;c=w;w=0;if((c|0)!=0&(x|0)!=0){e=FP(k[c>>2]|0,l|0,m|0)|0;if(!e)Za(c|0,x|0);L=x}else e=-1;if((e|0)==1){b=L;continue a}if(!b)n=18;else{k[13600]=2;b=j[(k[f>>2]|0)+136>>1]|0;n=13}break}default:n=13}do if((n|0)==13){n=0;if(!(b&1)){w=0;Aa(67,a|0,g|0)|0;b=w;w=0;if((b|0)!=0&(x|0)!=0){c=FP(k[b>>2]|0,l|0,m|0)|0;if(!c)Za(b|0,x|0);L=x}else c=-1;if((c|0)==1){b=L;continue a}n=18;break}else{w=0;ta(25,0,126804,i|0)|0;b=w;w=0;if((b|0)!=0&(x|0)!=0){c=FP(k[b>>2]|0,l|0,m|0)|0;if(!c)Za(b|0,x|0);L=x}else c=-1;if((c|0)==1){b=L;continue a}n=18;break}}while(0);if((n|0)==18){n=0;k[13600]=0}if((k[13605]|0)<1){w=0;Aa(67,a|0,2)|0;b=w;w=0;if((b|0)!=0&(x|0)!=0){c=FP(k[b>>2]|0,l|0,m|0)|0;if(!c)Za(b|0,x|0);L=x}else c=-1;if((c|0)==1){b=L;continue}}}w=0;pa(18,a|0,0);b=w;w=0;if((b|0)!=0&(x|0)!=0){c=FP(k[b>>2]|0,l|0,m|0)|0;if(!c)Za(b|0,x|0);L=x}else c=-1;if((c|0)==1)b=L;else{n=23;break}}if((n|0)==23)p[4239]=h;vP(l|0);r=o;return}function lk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,l=0,m=0,n=0,o=0,p=0,q=0;q=r;r=r+16|0;p=q;m=(b|0)==0;if(m){k[p>>2]=0;k[p+4>>2]=0;k[p+8>>2]=0;b=p}d=Iu(a)|0;if(d){h=c+8|0;i=b+8|0;l=b+4|0;do{if(!(wO(ht(d)|0,143893,7)|0)){qu(d,173447,280,1)|0;f=By(56)|0;g=k[d+8>>2]|0;k[g+140>>2]=f;e=k[h>>2]|0;j[g+176>>1]=j[e+176>>1]|0;k[f+44>>2]=(k[(k[e+140>>2]|0)+44>>2]|0)+1;k[f+48>>2]=c;f=(k[i>>2]|0)+1|0;k[i>>2]=f;e=k[l>>2]|0;if((f|0)<(e|0)){g=k[b>>2]|0;e=f}else{g=e+10|0;k[l>>2]=g;g=Ey(k[b>>2]|0,g<<2)|0;k[b>>2]=g;e=k[i>>2]|0}k[g+(e<<2)>>2]=d;lk(d,0,d)}else lk(d,b,c);d=Ju(d)|0}while((d|0)!=0)}if(m?(n=k[p+8>>2]|0,o=a+8|0,k[(k[o>>2]|0)+180>>2]=n,(n|0)!=0):0){c=Ey(k[p>>2]|0,(n<<2)+4|0)|0;k[(k[o>>2]|0)+184>>2]=c}r=q;return}function mk(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0.0,m=0.0,n=0,o=0,q=0,s=0,t=0,u=0.0,v=0.0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0;Q=r;r=r+288|0;x=Q+144|0;P=Q+136|0;E=Q+120|0;D=Q+104|0;B=Q+88|0;z=Q+80|0;A=Q+56|0;e=Q+48|0;c=Q+40|0;y=Q+284|0;d=Q+184|0;K=Q+180|0;J=Q+176|0;I=Q;if(i[137280]|0){O=k[24528]|0;N=ht(a)|0;k[c>>2]=N;FN(O,126867,c)|0}c=Kt(a)|0;if(c)do{k[(k[c+8>>2]|0)+164>>2]=0;c=Lt(a,c)|0}while((c|0)!=0);N=b+16|0;O=k[N>>2]|0;k[N>>2]=O+1;k[x>>2]=O;TN(d,126878,x)|0;if((l[137280]|0)>1){O=k[24528]|0;N=ht(a)|0;k[e>>2]=d;k[e+4>>2]=N;FN(O,126885,e)|0};k[x>>2]=k[12890];O=Vs(128238,x,0)|0;qu(O,173447,280,1)|0;M=By(56)|0;N=O+8|0;c=k[N>>2]|0;k[c+140>>2]=M;M=a+8|0;j[c+176>>1]=j[(k[M>>2]|0)+176>>1]|0;pk(a,O,128879);pk(a,O,129026);pk(a,O,128294);c=k[M>>2]|0;if((k[c+180>>2]|0)<1)c=0;else{q=b+4|0;s=x+8|0;t=x+16|0;w=x+24|0;d=c;o=1;e=0;while(1){f=k[(k[d+184>>2]|0)+(o<<2)>>2]|0;ly(f);g=qk(O,ht(f)|0)|0;n=g+8|0;d=k[n>>2]|0;k[d+212>>2]=f;c=e+1|0;k[d+120>>2]=e;d=k[q>>2]|0;if(!d){h=-1797693134862315708145274.0e284;m=1797693134862315708145274.0e284;u=-1797693134862315708145274.0e284;v=1797693134862315708145274.0e284}else{e=ts(f,d)|0;do if(!(i[e>>0]|0)){h=-1797693134862315708145274.0e284;u=-1797693134862315708145274.0e284;m=1797693134862315708145274.0e284;v=1797693134862315708145274.0e284}else{if((k[b>>2]|0)!=(f|0)){d=ts(Ku(f)|0,d)|0;if((d|0)==(e|0)){h=-1797693134862315708145274.0e284;u=-1797693134862315708145274.0e284;m=1797693134862315708145274.0e284;v=1797693134862315708145274.0e284;break}if(!(qO(e,d)|0)){h=-1797693134862315708145274.0e284;u=-1797693134862315708145274.0e284;m=1797693134862315708145274.0e284;v=1797693134862315708145274.0e284;break}}i[y>>0]=0;k[A>>2]=x;k[A+4>>2]=s;k[A+8>>2]=t;k[A+12>>2]=w;k[A+16>>2]=y;if((UN(e,126908,A)|0)<=3){H=ht(f)|0;k[z>>2]=H;k[z+4>>2]=e;Yr(0,126926,z)|0;h=-1797693134862315708145274.0e284;u=-1797693134862315708145274.0e284;m=1797693134862315708145274.0e284;v=1797693134862315708145274.0e284;break}h=+p[4239];if(h>0.0){p[x>>3]=+p[x>>3]/h;p[s>>3]=+p[s>>3]/h;p[t>>3]=+p[t>>3]/h;p[w>>3]=+p[w>>3]/h}d=i[y>>0]|0;do if(d<<24>>24!=33){e=(k[n>>2]|0)+119|0;if(d<<24>>24==63){i[e>>0]=2;break}else{i[e>>0]=1;break}}else i[(k[n>>2]|0)+119>>0]=3;while(0);h=+p[w>>3];u=+p[t>>3];m=+p[s>>3];v=+p[x>>3]}while(0)}d=Kt(f)|0;if(d)do{k[(k[d+8>>2]|0)+164>>2]=g;d=Lt(f,d)|0}while((d|0)!=0);d=k[n>>2]|0;if(i[d+119>>0]|0){H=k[d+132>>2]|0;p[H>>3]=(u+v)*.5;p[H+8>>3]=(h+m)*.5}d=k[M>>2]|0;if((o|0)>=(k[d+180>>2]|0))break;else{o=o+1|0;e=c}}}d=Kt(a)|0;a:do if(!d)C=c;else{g=d;while(1){d=g+8|0;e=k[d>>2]|0;if(!(k[e+164>>2]|0)){f=e+212|0;H=k[f>>2]|0;if((H|0)!=0?(H|0)!=(k[(k[(k[M>>2]|0)+140>>2]|0)+48>>2]|0):0){c=g;break}k[f>>2]=a;if(!(i[e+118>>0]|0)){e=qk(O,ht(g)|0)|0;d=k[d>>2]|0;k[d+164>>2]=e;e=k[e+8>>2]|0;k[e+120>>2]=c;p[e+32>>3]=+p[d+32>>3];p[e+40>>3]=+p[d+40>>3];p[e+88>>3]=+p[d+88>>3];p[e+96>>3]=+p[d+96>>3];p[e+80>>3]=+p[d+80>>3];k[e+8>>2]=k[d+8>>2];k[e+12>>2]=k[d+12>>2];f=i[d+119>>0]|0;if(f<<24>>24){G=k[d+132>>2]|0;H=k[e+132>>2]|0;p[H>>3]=+p[G>>3];p[H+8>>3]=+p[G+8>>3];i[e+119>>0]=f}k[(k[e+112>>2]|0)+8>>2]=g;c=c+1|0}}g=Lt(a,g)|0;if(!g){C=c;break a}}F=ht(c)|0;G=ht(a)|0;H=ht(k[(k[d>>2]|0)+212>>2]|0)|0;k[B>>2]=F;k[B+4>>2]=G;k[B+8>>2]=H;Yr(1,126969,B)|0;Za(50288,1)}while(0);c=Kt(a)|0;if(c)do{n=k[(k[c+8>>2]|0)+164>>2]|0;d=Es(a,c)|0;if(d){o=n+8|0;do{e=k[(k[(k[((k[d>>2]&3|0)==2?d:d+-32|0)+28>>2]|0)+8>>2]|0)+164>>2]|0;if((e|0)!=(n|0)){if(e>>>0>n>>>0)g=Ls(O,n,e,0,1)|0;else g=Ls(O,e,n,0,1)|0;qu(g,173717,176,1)|0;f=k[d+8>>2]|0;H=k[g+8>>2]|0;p[H+136>>3]=+p[f+136>>3];p[H+128>>3]=+p[f+128>>3];e=k[(k[e+8>>2]|0)+112>>2]|0;f=e+4|0;k[f>>2]=(k[f>>2]|0)+1;f=k[(k[o>>2]|0)+112>>2]|0;G=f+4|0;k[G>>2]=(k[G>>2]|0)+1;if(!(k[H+172>>2]|0)){k[e>>2]=(k[e>>2]|0)+1;k[f>>2]=(k[f>>2]|0)+1}rk(g,d)}d=Gs(a,d)|0}while((d|0)!=0)}c=Lt(a,c)|0}while((c|0)!=0);c=k[(k[M>>2]|0)+140>>2]|0;e=k[c>>2]|0;if(e){f=By((k[c+4>>2]<<4)+16|0)|0;d=k[N>>2]|0;k[k[d+140>>2]>>2]=f;c=k[e>>2]|0;if(!c)c=0;else{s=c;d=C;c=0;do{q=k[(k[(k[e+4>>2]|0)+8>>2]|0)+164>>2]|0;if(q){n=k[s>>2]&3;g=k[((n|0)==2?s:s+-32|0)+28>>2]|0;n=k[((n|0)==3?s:s+32|0)+28>>2]|0;o=uO(ht(a)|0)|0;H=uO(ht(g)|0)|0;H=(o+8+H+(uO(ht(n)|0)|0)|0)>999;o=ht(a)|0;if(H){F=ht(n)|0;G=ht(g)|0;H=(k[s>>2]|0)>>>4;k[D>>2]=o;k[D+4>>2]=F;k[D+8>>2]=G;k[D+12>>2]=H;TN(127038,128039,D)|0}else{F=k[(k[n+8>>2]|0)+120>>2]|0;G=k[(k[g+8>>2]|0)+120>>2]|0;H=(k[s>>2]|0)>>>4;k[E>>2]=o;k[E+4>>2]=F;k[E+8>>2]=G;k[E+12>>2]=H;TN(127038,128058,E)|0}g=qk(O,127038)|0;n=g+8|0;k[(k[n>>2]|0)+120>>2]=d;if(g>>>0>q>>>0)o=Ls(O,q,g,0,1)|0;else o=Ls(O,g,q,0,1)|0;qu(o,173717,176,1)|0;G=k[e>>2]|0;F=k[G+8>>2]|0;H=k[o+8>>2]|0;p[H+136>>3]=+p[F+136>>3];p[H+128>>3]=+p[F+128>>3];rk(o,G);G=k[(k[n>>2]|0)+112>>2]|0;H=G+4|0;k[H>>2]=(k[H>>2]|0)+1;H=k[(k[q+8>>2]|0)+112>>2]|0;F=H+4|0;k[F>>2]=(k[F>>2]|0)+1;k[G>>2]=(k[G>>2]|0)+1;k[H>>2]=(k[H>>2]|0)+1;k[f+4>>2]=g;p[f+8>>3]=+p[e+8>>3];k[f>>2]=o;d=d+1|0;f=f+16|0;c=c+1|0}e=e+16|0;s=k[e>>2]|0}while((s|0)!=0);d=k[N>>2]|0}k[(k[d+140>>2]|0)+4>>2]=c}H=Lo(O,K,J)|0;c=k[H>>2]|0;b:do if(c){G=H;c:while(1){G=G+4|0;uk(c,I);d=Kt(c)|0;if(d)do{E=d+8|0;e=k[E>>2]|0;F=k[e+212>>2]|0;e=k[e+112>>2]|0;if(!F){if(!(k[e+8>>2]|0))_t(c,d)|0}else{B=k[e+4>>2]|0;if(!B)e=F+8|0;else{C=By((B<<4)+16|0)|0;q=k[k[(k[E>>2]|0)+112>>2]>>2]|0;D=By((q*24|0)+24|0)|0;e=Js(c,d)|0;if(!e)e=0;else{f=0;do{n=k[e>>2]&3;g=k[((n|0)==2?e:e+-32|0)+28>>2]|0;if((g|0)==(d|0))g=k[((n|0)==3?e:e+32|0)+28>>2]|0;z=k[(k[g+8>>2]|0)+132>>2]|0;A=k[(k[E>>2]|0)+132>>2]|0;u=+p[z>>3]-+p[A>>3];v=+p[z+8>>3]-+p[A+8>>3];k[D+(f*24|0)>>2]=e;m=+da(+v,+u);p[D+(f*24|0)+8>>3]=m;p[D+(f*24|0)+16>>3]=u*u+v*v;f=f+1|0;e=Ks(c,e,d)|0}while((e|0)!=0);e=f}if((e|0)!=(q|0)){c=77;break c}dO(D,q,24,68);if((q|0)>1){o=q+-1|0;n=0;while(1){g=D+(n*24|0)+8|0;u=+p[g>>3];e=n+1|0;do if((e|0)<(q|0)){f=e;do{if(!(+p[D+(f*24|0)+8>>3]==u))break;f=f+1|0}while((f|0)<(q|0));if((f|0)==(e|0))break;if((f|0)==(q|0))h=3.141592653589793;else h=+p[D+(f*24|0)+8>>3];m=(h-u)/+(f-n|0);m=m>.03490658503988659?.03490658503988659:m;if((f|0)<=(n|0)){e=n;break}p[g>>3]=u+0.0;h=0.0;do{h=m+h;A=D+(e*24|0)+8|0;p[A>>3]=+p[A>>3]+h;e=e+1|0}while((e|0)!=(f|0));e=f}while(0);if((e|0)<(o|0))n=e;else break}}e=k[D>>2]|0;if(!e)e=0;else{z=D+8|0;A=D;y=e;e=0;do{o=A;A=A+24|0;f=y;y=k[A>>2]|0;x=(y|0)==0;if(x)m=+p[z>>3]+6.283185307179586;else m=+p[o+32>>3];s=k[f+8>>2]|0;q=j[s+168>>1]|0;w=q<<16>>16;g=k[f>>2]&3;n=k[((g|0)==2?f:f+-32|0)+28>>2]|0;if((n|0)==(d|0))n=k[((g|0)==3?f:f+32|0)+28>>2]|0;h=+p[o+8>>3];m=(m-h)/+(q<<16>>16);m=m>.03490658503988659?.03490658503988659:m;if(n>>>0>d>>>0){f=e;t=1}else{h=h+ +(w+-1|0)*m;m=-m;f=e+-1+w|0;t=-1}if(q<<16>>16>0){s=k[s+172>>2]|0;o=f;q=0;while(1){g=k[s>>2]|0;k[C+(o<<4)>>2]=g;n=k[g>>2]&3;f=k[((n|0)==3?g:g+32|0)+28>>2]|0;if((k[(k[f+8>>2]|0)+164>>2]|0)!=(d|0))f=k[((n|0)==2?g:g+-32|0)+28>>2]|0;k[C+(o<<4)+4>>2]=f;p[C+(o<<4)+8>>3]=h;q=q+1|0;if((q|0)==(w|0))break;else{h=m+h;s=s+4|0;o=o+t|0}}}e=w+e|0}while(!x)}if((e|0)!=(B|0)){c=106;break c}e=F+8|0;A=k[(k[e>>2]|0)+140>>2]|0;k[A>>2]=C;k[A+4>>2]=B;vP(D)}mk(F,b);D=k[(k[e>>2]|0)+140>>2]|0;u=+p[D+24>>3];F=k[E>>2]|0;p[F+32>>3]=u;v=+p[D+32>>3];p[F+40>>3]=v;u=u*72.0*.5;p[F+88>>3]=u;p[F+96>>3]=u;p[F+80>>3]=v*72.0}d=Lt(c,d)|0}while((d|0)!=0);if((Zs(c)|0)>1){if((k[b>>2]|0)==(a|0))hl(c)|0;Ak(c,I)}c=k[G>>2]|0;if(!c)break b}if((c|0)==77)Wa(128081,128090,643,128099);else if((c|0)==106)Wa(128111,128090,767,128121)}while(0);c=k[K>>2]|0;if((c|0)>1){if(!(k[J>>2]|0))d=0;else{d=By(c)|0;i[d>>0]=1;c=k[K>>2]|0}k[b+40>>2]=d;c=Fw(c,H,0,b+20|0)|0;if(d)vP(d)}else if((c|0)==1){FB(k[H>>2]|0);c=0}else c=0;e=k[K>>2]|0;s=(k[b>>2]|0)==(a|0);w=(e|0)!=0;if(w){n=k[(k[H>>2]|0)+8>>2]|0;v=+p[n+16>>3];d=~~(v+(v>=0.0?.5:-.5));v=+p[n+24>>3];f=~~(v+(v>=0.0?.5:-.5));v=+p[n+32>>3];g=~~(v+(v>=0.0?.5:-.5));v=+p[n+40>>3];n=~~(v+(v>=0.0?.5:-.5));if((e|0)>1){q=k[c>>2]|0;e=k[c+4>>2]|0;d=q+d|0;f=e+f|0;q=q+g|0;n=e+n|0;g=H+4|0;e=k[g>>2]|0;if(!e)e=0;else{o=c;do{b=o;o=o+8|0;K=k[e+8>>2]|0;h=+p[K+16>>3];m=+p[K+24>>3];u=+p[K+32>>3];v=+p[K+40>>3];K=k[o>>2]|0;b=k[b+12>>2]|0;I=~~(h+(h>=0.0?.5:-.5))+K|0;J=~~(m+(m>=0.0?.5:-.5))+b|0;K=~~(u+(u>=0.0?.5:-.5))+K|0;b=~~(v+(v>=0.0?.5:-.5))+b|0;d=(d|0)<(I|0)?d:I;f=(f|0)<(J|0)?f:J;q=(q|0)>(K|0)?q:K;n=(n|0)>(b|0)?n:b;g=g+4|0;e=k[g>>2]|0}while((e|0)!=0);e=0}}else{q=g;e=0}}else{n=k[b+12>>2]|0;q=iB(a,k[b+8>>2]|0,54,3)|0;d=0;f=0;n=iB(a,n,36,3)|0;e=1}o=k[M>>2]|0;g=k[o+12>>2]|0;if(g){v=+p[g+24>>3];e=~~(v+(v>=0.0?.5:-.5))+(d-q)|0;if((e|0)>0){e=(e|0)/2|0;d=d-e|0;q=e+q|0;e=0}else e=0}if(s|(e|0)!=0){e=o;g=0}else{g=iB(O,k[13618]|0,8,0)|0;e=k[M>>2]|0}t=g-d|0;s=~~(+p[e+56>>3]+ +(g-f|0));q=g+q+t|0;o=~~(+(n|0)+(+p[e+88>>3]+ +(s+g|0)));if(w?(L=k[H>>2]|0,(L|0)!=0):0){g=L;n=H;d=c;do{n=n+4|0;if(!d){e=t;f=s;d=0}else{e=(k[d>>2]|0)+t|0;f=(k[d+4>>2]|0)+s|0;d=d+8|0}m=+(e|0)/72.0;h=+(f|0)/72.0;e=Kt(g)|0;if(e)do{L=k[(k[e+8>>2]|0)+132>>2]|0;p[L>>3]=m+ +p[L>>3];L=L+8|0;p[L>>3]=h+ +p[L>>3];e=Lt(g,e)|0}while((e|0)!=0);g=k[n>>2]|0}while((g|0)!=0)}L=k[(k[N>>2]|0)+140>>2]|0;b=L+8|0;k[b>>2]=0;k[b+4>>2]=0;k[b+8>>2]=0;k[b+12>>2]=0;p[L+24>>3]=+(q|0)/72.0;p[L+32>>3]=+(o|0)/72.0;vP(c);c=Kt(O)|0;if(c)do{e=k[c+8>>2]|0;d=k[e+212>>2]|0;if(!d){d=k[(k[e+112>>2]|0)+8>>2]|0;if(d){b=k[e+132>>2]|0;L=k[(k[d+8>>2]|0)+132>>2]|0;p[L>>3]=+p[b>>3];p[L+8>>3]=+p[b+8>>3]}}else{b=k[e+132>>2]|0;m=+p[e+32>>3];h=+p[b>>3]-m*.5;L=k[(k[d+8>>2]|0)+140>>2]|0;p[L+8>>3]=h;v=+p[e+40>>3];u=+p[b+8>>3]-v*.5;p[L+16>>3]=u;p[L+24>>3]=h+m;p[L+32>>3]=u+v}c=Lt(O,c)|0}while((c|0)!=0);c=(k[(k[M>>2]|0)+140>>2]|0)+8|0;M=(k[(k[N>>2]|0)+140>>2]|0)+8|0;k[c>>2]=k[M>>2];k[c+4>>2]=k[M+4>>2];k[c+8>>2]=k[M+8>>2];k[c+12>>2]=k[M+12>>2];k[c+16>>2]=k[M+16>>2];k[c+20>>2]=k[M+20>>2];k[c+24>>2]=k[M+24>>2];k[c+28>>2]=k[M+28>>2];c=k[H>>2]|0;if(c){d=H;do{d=d+4|0;vP(k[(k[c+8>>2]|0)+140>>2]|0);ru(c,173447)|0;c=k[d>>2]|0}while((c|0)!=0)}c=k[(k[N>>2]|0)+140>>2]|0;d=k[c>>2]|0;if(d){vP(d);c=k[(k[N>>2]|0)+140>>2]|0}vP(c);ru(O,173447)|0;c=Kt(O)|0;if(c)do{e=c;c=Lt(O,c)|0;d=Es(O,e)|0;if(d)do{vP(k[(k[d+8>>2]|0)+172>>2]|0);ru(d,173717)|0;d=Gs(O,d)|0}while((d|0)!=0);N=e+8|0;vP(k[(k[N>>2]|0)+112>>2]|0);vP(k[(k[N>>2]|0)+132>>2]|0);ru(e,173424)|0}while((c|0)!=0);Ys(O)|0;vP(H);if(i[137280]|0){O=k[24528]|0;a=ht(a)|0;k[P>>2]=a;FN(O,128135,P)|0}r=Q;return}function nk(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0.0,g=0.0,h=0,i=0.0,j=0,l=0.0,m=0,n=0.0,o=0;e=a+8|0;c=k[e>>2]|0;h=k[c+140>>2]|0;f=+p[h+8>>3];g=+p[h+16>>3];h=(a|0)!=(b|0);if(h){c=Kt(a)|0;if(c)do{d=k[c+8>>2]|0;if((k[d+212>>2]|0)==(a|0)){d=k[d+132>>2]|0;p[d>>3]=f+ +p[d>>3];d=d+8|0;p[d>>3]=g+ +p[d>>3]}c=Lt(a,c)|0}while((c|0)!=0);c=k[e>>2]|0}if((k[c+180>>2]|0)>=1){d=1;while(1){c=k[(k[c+184>>2]|0)+(d<<2)>>2]|0;if(h){a=k[(k[c+8>>2]|0)+140>>2]|0;o=a+8|0;m=a+16|0;j=a+24|0;a=a+32|0;n=g+ +p[m>>3];l=f+ +p[j>>3];i=g+ +p[a>>3];p[o>>3]=f+ +p[o>>3];p[m>>3]=n;p[j>>3]=l;p[a>>3]=i}nk(c,b);c=k[e>>2]|0;if((d|0)>=(k[c+180>>2]|0))break;else d=d+1|0}}return}function ok(a){a=a|0;var b=0,c=0,d=0.0,e=0.0,f=0.0;c=a+8|0;a=k[c>>2]|0;b=k[a+140>>2]|0;f=+p[b+16>>3]*72.0;e=+p[b+24>>3]*72.0;d=+p[b+32>>3]*72.0;p[a+16>>3]=+p[b+8>>3]*72.0;p[a+24>>3]=f;p[a+32>>3]=e;p[a+40>>3]=d;a=k[c>>2]|0;if((k[a+180>>2]|0)>=1){b=1;while(1){ok(k[(k[a+184>>2]|0)+(b<<2)>>2]|0);a=k[c>>2]|0;if((b|0)>=(k[a+180>>2]|0))break;else b=b+1|0}}return}function pk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ks(a,0,c,0)|0;do if(d){d=ts(a,d)|0;a=ks(b,0,c,0)|0;if(!a){ks(b,0,c,d)|0;break}else{vs(b,a,d)|0;break}}while(0);return}function qk(a,b){a=a|0;b=b|0;var c=0,d=0;b=Qt(a,b,1)|0;qu(b,173424,304,1)|0;d=By(32)|0;c=b+8|0;k[(k[c>>2]|0)+112>>2]=d;a=Cy((m[(k[a+8>>2]|0)+176>>1]|0)<<3)|0;k[(k[c>>2]|0)+132>>2]=a;return b|0}function rk(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=a+8|0;d=k[e>>2]|0;a=j[d+168>>1]|0;d=k[d+172>>2]|0;if(!d){a=a<<16>>16;c=a;a=Cy((a<<2)+4|0)|0}else{a=a<<16>>16;c=a;a=Ey(d,(a<<2)+4|0)|0}k[a+(c<<2)>>2]=b;b=k[e>>2]|0;k[b+172>>2]=a;b=b+168|0;j[b>>1]=(j[b>>1]|0)+1<<16>>16;return}function sk(a,b){a=a|0;b=b|0;var c=0.0,d=0.0;c=+p[a+8>>3];d=+p[b+8>>3];if(!(c>d))if(!(c<d)){d=+p[a+16>>3];c=+p[b+16>>3];if(d>c)a=1;else a=(d<c)<<31>>31}else a=-1;else a=1;return a|0}function tk(a){a=a|0;var b=0.0,c=0.0,d=0,e=0;d=r;r=r+16|0;e=k[13595]|0;k[8320]=k[e>>2];k[8321]=k[e+4>>2];k[8323]=k[e+8>>2];k[8325]=k[e+12>>2];p[4168]=0.0;p[4163]=+p[e+16>>3];p[4164]=+p[e+24>>3];e=iB(a,ks(a,0,128143,0)|0,600,0)|0;k[8324]=e;b=+jB(a,ks(a,0,128294,0)|0,.3,0.0);p[4165]=b;e=k[13595]|0;p[e+32>>3]=b;b=+p[e+40>>3];if(b==-1.0)b=+jB(a,ks(a,0,128151,0)|0,-1.0,0.0);p[4166]=b;k[8322]=1;e=Mi(a,2,33288)|0;k[8334]=e;if(!e){Yr(0,128154,d)|0;k[8322]=2}e=(ha(k[8324]|0,k[8325]|0)|0)/100|0;k[8350]=e;c=+p[4165];p[4170]=c*c;if(k[8320]|0){b=+p[4168];if(b<=0.0){b=c*3.0;p[4168]=b}p[4169]=b*b}r=d;return}function uk(a,b){a=a|0;b=b|0;var c=0,d=0,e=0.0,f=0,g=0,h=0.0,j=0,l=0.0,m=0,n=0.0,o=0.0,q=0,r=0.0,s=0.0,t=0,u=0,v=0,w=0,x=0,y=0.0;m=a+8|0;w=k[k[(k[m>>2]|0)+140>>2]>>2]|0;e=+p[4166];if(e==-1.0){x=Zs(a)|0;h=+p[4165];e=+p[4164]*h*+X(+(+(x|0)))/5.0;p[4166]=e;x=1}else{h=+p[4165];x=0}f=k[8350]|0;g=k[8324]|0;j=g-f|0;p[b+8>>3]=e*+(j|0)/+(g|0);p[b+16>>3]=h;p[b+24>>3]=+p[4163];k[b>>2]=j;d=k[8323]|0;do if((d|0)>-1){if((d|0)<=(f|0)){k[8351]=d;k[b+32>>2]=0;break}if((d|0)<=(g|0)){k[8351]=f;k[b+32>>2]=d-f}}else{k[8351]=f;k[b+32>>2]=j}while(0);t=Zs(a)|0;t=t-(k[(k[(k[m>>2]|0)+140>>2]|0)+4>>2]|0)|0;d=Kt(a)|0;if(!d){f=0;g=0;j=0;m=0;q=0}else{b=0;g=0;j=0;m=0;q=0;while(1){f=k[d+8>>2]|0;if(!(i[f+119>>0]|0))f=b;else{f=k[f+132>>2]|0;e=+p[f>>3];h=+p[f+8>>3];if(!q){g=~~e;m=~~h;f=g;j=m}else{n=+(b|0);s=+(m|0);o=+(g|0);r=+(j|0);f=~~(e<n?e:n);g=~~(e>o?e:o);j=~~(h>r?h:r);m=~~(h<s?h:s)}q=q+1|0}d=Lt(a,d)|0;if(!d)break;else b=f}}o=+p[4165]*(+X(+(+(t|0)))+1.0)*.5*1.2;p[4172]=o;p[4171]=o;if((q|0)!=1)if((q|0)>1){r=+(f+g|0)*.5;s=+(m+j|0)*.5;n=+(g-f|0)*1.2;h=+(j-m|0)*1.2;l=o*(o*4.0);e=h*n/l;do if(!(e>=1.0)){if(e>0.0){o=+X(+e)*2.0;e=n/o;p[4171]=e;h=h/o;p[4172]=h;break}if(n>0.0){e=n*.5;p[4171]=e;h=l/n*.5;p[4172]=h;break}if(h>0.0){e=l/h*.5;p[4171]=e;h=h*.5;p[4172]=h}else{h=o;e=o}}else{e=n*.5;p[4171]=e;h=h*.5;p[4172]=h}while(0);n=+da(+h,+e);o=e/+Z(+n);p[4171]=o;e=h/+_(+n);p[4172]=e;h=o}else{h=o;e=o;r=0.0;s=0.0}else{h=o;e=o;r=+(f|0);s=+(m|0)}p[4173]=h*h;p[4174]=e*e;if((k[8334]|0)==2)d=k[8322]|0;else{d=HO()|0;d=(Cb(0)|0)^d}cN(d);a:do if(!w){d=Kt(a)|0;f=(d|0)==0;if(!q){if(f)break;while(1){o=+p[4171];o=o*(+_M()*2.0+-1.0);v=d+8|0;p[k[(k[v>>2]|0)+132>>2]>>3]=o;o=+p[4172];o=o*(+_M()*2.0+-1.0);p[(k[(k[v>>2]|0)+132>>2]|0)+8>>3]=o;d=Lt(a,d)|0;if(!d)break a}}if(!f)do{f=d+8|0;g=k[f>>2]|0;if(!(i[g+119>>0]|0)){o=+p[4171];o=o*(+_M()*2.0+-1.0);p[k[(k[f>>2]|0)+132>>2]>>3]=o;o=+p[4172];o=o*(+_M()*2.0+-1.0);p[(k[(k[f>>2]|0)+132>>2]|0)+8>>3]=o}else{v=k[g+132>>2]|0;p[v>>3]=+p[v>>3]-r;v=v+8|0;p[v>>3]=+p[v>>3]-s}d=Lt(a,d)|0}while((d|0)!=0)}else{if(k[w>>2]|0){d=w;do{b=d+8|0;o=r+ +p[4171]*+Z(+(+p[b>>3]));t=k[(k[d+4>>2]|0)+8>>2]|0;q=k[t+132>>2]|0;p[q>>3]=o;o=s+ +p[4172]*+_(+(+p[b>>3]));p[q+8>>3]=o;i[t+119>>0]=1;d=d+16|0}while((k[d>>2]|0)!=0)}d=Kt(a)|0;if(d){l=r*.1;n=s*.1;do{b=d+8|0;f=k[b>>2]|0;if(!((k[(k[f+112>>2]|0)+8>>2]|0)==0?(k[f+212>>2]|0)==0:0))v=39;do if((v|0)==39){v=0;if(i[f+119>>0]|0){t=k[f+132>>2]|0;p[t>>3]=+p[t>>3]-r;t=t+8|0;p[t>>3]=+p[t>>3]-s;break}f=Js(a,d)|0;do if(f){m=0;h=0.0;e=0.0;while(1){j=k[f>>2]&3;g=k[((j|0)==2?f:f+-32|0)+28>>2]|0;j=k[((j|0)==3?f:f+32|0)+28>>2]|0;do if((g|0)!=(j|0)?(u=k[((g|0)==(d|0)?j:g)+8>>2]|0,(i[u+119>>0]|0)!=0):0){g=k[u+132>>2]|0;if(!m){j=1;h=+p[g>>3];e=+p[g+8>>3];break}else{y=+(m|0);j=m+1|0;o=+(j|0);h=(y*h+ +p[g>>3])/o;e=(e*y+ +p[g+8>>3])/o;break}}else j=m;while(0);f=Ks(a,f,d)|0;if(!f){f=j;break}else m=j}if((f|0)>1){f=k[b>>2]|0;t=k[f+132>>2]|0;p[t>>3]=h;p[t+8>>3]=e;break}if((f|0)==1){f=k[b>>2]|0;t=k[f+132>>2]|0;p[t>>3]=l+h*.98;p[t+8>>3]=n+e*.9}else v=52}else v=52;while(0);if((v|0)==52){v=0;y=+_M()*6.283185307179586;o=+_M()*.9;h=o*+p[4171]*+Z(+y);f=k[b>>2]|0;t=k[f+132>>2]|0;p[t>>3]=h;y=o*+p[4172]*+_(+y);p[t+8>>3]=y}i[f+119>>0]=1}while(0);d=Lt(a,d)|0}while((d|0)!=0)}}while(0);if(!(k[8320]|0)){d=k[8351]|0;if((d|0)>0){j=0;do{v=k[8324]|0;e=+p[4166]*+(v-j|0)/+(v|0);if(!(e<=0.0)){d=Kt(a)|0;if(d)do{v=(k[(k[d+8>>2]|0)+112>>2]|0)+16|0;k[v>>2]=0;k[v+4>>2]=0;k[v+8>>2]=0;k[v+12>>2]=0;d=Lt(a,d)|0}while((d|0)!=0);d=Kt(a)|0;if(d)do{f=Lt(a,d)|0;if(f){g=d+8|0;do{u=k[(k[f+8>>2]|0)+132>>2]|0;v=k[(k[g>>2]|0)+132>>2]|0;o=+p[u>>3]-+p[v>>3];y=+p[u+8>>3]-+p[v+8>>3];yk(d,f,o,y,o*o+y*y);f=Lt(a,f)|0}while((f|0)!=0)}f=Es(a,d)|0;if(f)do{g=k[((k[f>>2]&3|0)==2?f:f+-32|0)+28>>2]|0;if((d|0)!=(g|0))vk(d,g,f);f=Gs(a,f)|0}while((f|0)!=0);d=Lt(a,d)|0}while((d|0)!=0);xk(a,e,w);d=k[8351]|0}j=j+1|0}while((j|0)<(d|0))}}else{m=No(Zs(a)|0)|0;Oo(m,Zs(a)|0);d=k[8351]|0;if((d|0)>0){j=0;do{v=k[8324]|0;e=+p[4166]*+(v-j|0)/+(v|0);if(!(e<=0.0)){Po(m);d=Kt(a)|0;if(d)do{v=k[d+8>>2]|0;u=(k[v+112>>2]|0)+16|0;k[u>>2]=0;k[u+4>>2]=0;k[u+8>>2]=0;k[u+12>>2]=0;v=k[v+132>>2]|0;y=+p[4168];u=~~+V(+(+p[v>>3]/y));Ro(m,u,~~+V(+(+p[v+8>>3]/y)),d);d=Lt(a,d)|0}while((d|0)!=0);d=Kt(a)|0;if(d)do{f=Es(a,d)|0;if(f)do{g=k[((k[f>>2]&3|0)==2?f:f+-32|0)+28>>2]|0;if((d|0)!=(g|0))vk(d,g,f);f=Gs(a,f)|0}while((f|0)!=0);d=Lt(a,d)|0}while((d|0)!=0);So(m,29);xk(a,e,w);d=k[8351]|0}j=j+1|0}while((j|0)<(d|0))}Qo(m)}if(s!=0.0|r!=0.0?(c=Kt(a)|0,(c|0)!=0):0)do{w=k[(k[c+8>>2]|0)+132>>2]|0;p[w>>3]=r+ +p[w>>3];w=w+8|0;p[w>>3]=s+ +p[w>>3];c=Lt(a,c)|0}while((c|0)!=0);if(x)p[4166]=-1.0;return}function vk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0.0,g=0.0,h=0.0,i=0,j=0;i=b+8|0;j=k[(k[i>>2]|0)+132>>2]|0;b=a+8|0;a=k[(k[b>>2]|0)+132>>2]|0;e=+p[j>>3]-+p[a>>3];f=+p[j+8>>3]-+p[a+8>>3];d=e*e+f*f;if(d==0.0){do{e=+(5-((aN()|0)%10|0)|0);f=+(5-((aN()|0)%10|0)|0);d=e*e+f*f}while(d==0.0);h=f}else h=f;g=+X(+d);j=k[c+8>>2]|0;d=+p[j+128>>3];f=+p[j+136>>3];if(!(k[8321]|0))d=g*d/f;else d=d*(g-f)/g;g=e*d;j=k[(k[i>>2]|0)+112>>2]|0;i=j+16|0;p[i>>3]=+p[i>>3]-g;h=h*d;j=j+24|0;p[j>>3]=+p[j>>3]-h;j=k[(k[b>>2]|0)+112>>2]|0;i=j+16|0;p[i>>3]=g+ +p[i>>3];j=j+24|0;p[j>>3]=h+ +p[j>>3];return}function wk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0.0,h=0.0,i=0,j=0,l=0,m=0;e=k[b+8>>2]|0;f=k[b>>2]|0;a=k[b+4>>2]|0;if(e){b=e;do{d=e;do{if((b|0)!=(d|0)){j=k[b>>2]|0;i=k[d>>2]|0;m=k[(k[i+8>>2]|0)+132>>2]|0;l=k[(k[j+8>>2]|0)+132>>2]|0;h=+p[m>>3]-+p[l>>3];g=+p[m+8>>3]-+p[l+8>>3];yk(j,i,h,g,h*h+g*g)}d=k[d+4>>2]|0}while((d|0)!=0);b=k[b+4>>2]|0}while((b|0)!=0)}l=f+-1|0;j=a+-1|0;zk(c,l,j,e);zk(c,l,a,e);m=a+1|0;zk(c,l,m,e);zk(c,f,j,e);zk(c,f,m,e);l=f+1|0;zk(c,l,j,e);zk(c,l,a,e);zk(c,l,m,e);return 0}function xk(a,b,c){a=a|0;b=+b;c=c|0;var d=0,e=0.0,f=0.0,g=0.0,h=0.0,j=0,l=0,m=0,n=0.0;n=b*b;d=Kt(a)|0;if(d){m=(c|0)==0;do{l=k[d+8>>2]|0;do if(!(i[l+119>>0]&2)){c=k[l+112>>2]|0;e=+p[c+16>>3];g=+p[c+24>>3];f=e*e+g*g;j=k[l+132>>2]|0;if(f<n){h=e+ +p[j>>3];f=g+ +p[j+8>>3]}else{f=b/+X(+f);h=e*f+ +p[j>>3];f=g*f+ +p[j+8>>3]}if(m){p[j>>3]=h;p[j+8>>3]=f;break}e=+X(+(h*h/+p[4173]+f*f/+p[4174]));if((k[c+8>>2]|0)==0?(k[l+212>>2]|0)==0:0){p[j>>3]=h/e;p[j+8>>3]=f/e;break}if(!(e>=1.0)){p[j>>3]=h;p[j+8>>3]=f;break}else{p[j>>3]=h*.95/e;p[j+8>>3]=f*.95/e;break}}while(0);d=Lt(a,d)|0}while((d|0)!=0)}return}function yk(a,b,c,d,e){a=a|0;b=b|0;c=+c;d=+d;e=+e;var f=0.0,g=0,h=0;if(e==0.0){do{c=+(5-((aN()|0)%10|0)|0);d=+(5-((aN()|0)%10|0)|0);e=c*c+d*d}while(e==0.0);f=c}else f=c;if(!(k[8321]|0))c=+p[4170]/e;else{c=+X(+e);c=+p[4170]/(e*c)}h=k[a+8>>2]|0;a=k[h+112>>2]|0;if(((k[a+8>>2]|0)==0?(k[h+212>>2]|0)==0:0)?(g=k[b+8>>2]|0,(k[(k[g+112>>2]|0)+8>>2]|0)==0):0)c=(k[g+212>>2]|0)==0?c*10.0:c;e=f*c;h=k[(k[b+8>>2]|0)+112>>2]|0;b=h+16|0;p[b>>3]=e+ +p[b>>3];f=d*c;h=h+24|0;p[h>>3]=f+ +p[h>>3];h=a+16|0;p[h>>3]=+p[h>>3]-e;h=a+24|0;p[h>>3]=+p[h>>3]-f;return}function zk(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,g=0.0,h=0,i=0,j=0,l=0;a=To(a,b,c)|0;if((d|0)!=0&(a|0)!=0){i=a+8|0;do{c=k[d>>2]|0;a=k[i>>2]|0;if(a){h=c+8|0;do{b=k[a>>2]|0;l=k[(k[b+8>>2]|0)+132>>2]|0;j=k[(k[h>>2]|0)+132>>2]|0;e=+p[l>>3]-+p[j>>3];f=+p[l+8>>3]-+p[j+8>>3];g=e*e+f*f;if(g<+p[4169])yk(c,b,e,f,g);a=k[a+4>>2]|0}while((a|0)!=0)}d=k[d+4>>2]|0}while((d|0)!=0)}return}function Ak(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0.0,h=0.0,j=0,l=0,m=0.0,n=0.0,q=0.0,s=0,t=0,u=0.0,v=0,w=0.0,x=0.0,y=0.0,z=0,A=0,B=0,C=0.0,D=0,E=0.0,F=0.0,G=0.0,H=0,I=0,J=0.0,K=0,L=0,M=0,N=0,O=0.0;L=r;r=r+32|0;e=L;f=L+8|0;c=ss(a,128879)|0;if(i[137280]|0)QN(128198,8,1,k[24528]|0)|0;if(!((c|0)!=0?(i[c>>0]|0)!=0:0))c=128207;d=oO(c,58)|0;do if(!d){I=c;H=0}else{if((d|0)!=(c|0)?((i[c>>0]|0)+-48|0)>>>0>=10:0){I=c;H=0;break}H=bO(c)|0;I=d+1|0;H=(H|0)<0?0:H}while(0);if(i[137280]|0){D=k[24528]|0;k[e>>2]=H;k[e+4>>2]=I;FN(D,128215,e)|0}a:do if(!H)K=56;else{l=Zs(a)|0;j=_s(a)|0;ml(f,a);k[12611]=k[f>>2];k[12612]=k[f+4>>2];k[12613]=k[f+8>>2];if(i[50452]|0){o[12611]=+o[12611]/72.0;o[12612]=+o[12612]/72.0}d=Kt(a)|0;b:do if(d){c=0;do{e=Lt(a,d)|0;if(e)do{c=(Bk(d,e)|0)+c|0;e=Lt(a,e)|0}while((e|0)!=0);d=Lt(a,d)|0}while((d|0)!=0);if(c){D=k[b>>2]|0;E=+p[b+8>>3];F=+p[b+16>>3];G=+p[b+24>>3];z=k[b+32>>2]|0;if((H|0)<=0){K=56;break a}A=G>0.0;B=E==0.0;C=+(l|0);y=+(j|0);u=+(ha(l+-1|0,l)|0);v=(z|0)>0;w=+(D|0);x=F;t=0;while(1){p[4176]=x;k[8354]=D;p[4178]=E;k[8358]=z;if(A)p[4180]=G;g=x*x;p[4181]=g;if(B){h=x*+X(+C)/5.0;p[4178]=h}else h=E;q=g*+p[4180];p[4182]=q;p[4183]=y*q*2.0/u;c:do if(v?(J=h*w/w,!(J<=0.0)):0){q=J;s=0;do{c=Kt(a)|0;if(c)do{l=(k[(k[c+8>>2]|0)+112>>2]|0)+16|0;k[l>>2]=0;k[l+4>>2]=0;k[l+8>>2]=0;k[l+12>>2]=0;c=Lt(a,c)|0}while((c|0)!=0);c=Kt(a)|0;if(!c)break b;else{l=c;c=0}do{d=Lt(a,l)|0;if(d){b=l+8|0;do{j=d+8|0;f=k[j>>2]|0;N=k[f+132>>2]|0;e=k[b>>2]|0;M=k[e+132>>2]|0;g=+p[N>>3]-+p[M>>3];m=+p[N+8>>3]-+p[M+8>>3];h=g*g+m*m;if(h==0.0){do{g=+(5-((aN()|0)%10|0)|0);m=+(5-((aN()|0)%10|0)|0);h=g*g+m*m}while(h==0.0);f=k[j>>2]|0;e=k[b>>2]|0}N=Bk(l,d)|0;n=((N|0)==0?+p[4183]:+p[4182])/h;h=g*n;M=k[f+112>>2]|0;j=M+16|0;p[j>>3]=h+ +p[j>>3];n=m*n;M=M+24|0;p[M>>3]=n+ +p[M>>3];M=k[e+112>>2]|0;j=M+16|0;p[j>>3]=+p[j>>3]-h;M=M+24|0;p[M>>3]=+p[M>>3]-n;c=N+c|0;d=Lt(a,d)|0}while((d|0)!=0)}d=Es(a,l)|0;if(d){f=l+8|0;do{e=k[((k[d>>2]&3|0)==2?d:d+-32|0)+28>>2]|0;if(!(Bk(l,e)|0)){M=k[e+8>>2]|0;j=k[M+132>>2]|0;N=k[f>>2]|0;b=k[N+132>>2]|0;m=+p[j>>3]-+p[b>>3];h=+p[j+8>>3]-+p[b+8>>3];g=+X(+(m*m+h*h));n=+Ck(l);n=n+ +Ck(e);O=g-n;n=O*O/(g*(+p[4176]+n));m=m*n;M=k[M+112>>2]|0;b=M+16|0;p[b>>3]=+p[b>>3]-m;n=h*n;M=M+24|0;p[M>>3]=+p[M>>3]-n;N=k[N+112>>2]|0;M=N+16|0;p[M>>3]=m+ +p[M>>3];N=N+24|0;p[N>>3]=n+ +p[N>>3]}d=Gs(a,d)|0}while((d|0)!=0)}l=Lt(a,l)|0}while((l|0)!=0);if(!c)break b;n=q*q;d=Kt(a)|0;if(d)do{e=k[d+8>>2]|0;do if((i[e+119>>0]|0)!=3){N=k[e+112>>2]|0;g=+p[N+16>>3];h=+p[N+24>>3];m=g*g+h*h;e=k[e+132>>2]|0;if(m<n){p[e>>3]=g+ +p[e>>3];N=e+8|0;p[N>>3]=h+ +p[N>>3];break}else{O=+X(+m);p[e>>3]=q*g/O+ +p[e>>3];N=e+8|0;p[N>>3]=q*h/O+ +p[N>>3];break}}while(0);d=Lt(a,d)|0}while((d|0)!=0);s=s+1|0;if((s|0)>=(k[8358]|0))break c;N=k[8354]|0;q=+p[4178]*+(N-s|0)/+(N|0)}while(!(q<=0.0))}while(0);t=t+1|0;if(!((t|0)<(H|0)&(c|0)!=0))break;else x=F+x}if(!c)break a;else{K=56;break a}}}while(0)}while(0);if((K|0)==56)kl(a,I)|0;r=L;return}function Bk(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0.0,f=0,g=0.0,h=0;f=k[b+8>>2]|0;h=k[f+132>>2]|0;b=k[a+8>>2]|0;a=k[b+132>>2]|0;e=+p[h>>3]-+p[a>>3];g=+p[h+8>>3]-+p[a+8>>3];g=g<0.0?-g:g;a=(i[50452]|0)==0;c=+p[b+32>>3];if(a){d=+o[12611];c=c*d*.5;d=+p[f+32>>3]*d*.5}else{d=+o[12611];c=c*.5+d;d=+p[f+32>>3]*.5+d}if(!((e<0.0?-e:e)<=c+d))b=0;else{c=+p[b+40>>3];if(a){e=+o[12612];d=c*e*.5;c=+p[f+40>>3]*e*.5}else{e=+o[12612];d=c*.5+e;c=+p[f+40>>3]*.5+e}b=g<=d+c}return b&1|0}function Ck(a){a=a|0;var b=0.0,c=0.0;a=k[a+8>>2]|0;b=+p[a+32>>3];if(!(i[50452]|0)){c=b*+o[12611]*.5;b=+p[a+40>>3]*+o[12612]*.5}else{c=b*.5+ +o[12611];b=+p[a+40>>3]*.5+ +o[12612]}return +(+X(+(c*c+b*b)))}function Dk(a){a=a|0;var b=0,c=0,d=0,e=0,f=0.0;UB(a,2);c=a+8|0;j[(k[c>>2]|0)+176>>1]=2;k[13604]=2;d=By((Zs(a)|0)<<2)|0;b=By(((Zs(a)|0)<<2)+4|0)|0;k[(k[c>>2]|0)+152>>2]=b;b=Kt(a)|0;if(b){e=0;while(1){Ii(b);k[(k[b+8>>2]|0)+112>>2]=d+(e<<2);k[(k[(k[c>>2]|0)+152>>2]|0)+(e<<2)>>2]=b;b=Lt(a,b)|0;if(!b)break;else e=e+1|0}}b=Kt(a)|0;if(b)do{c=Es(a,b)|0;if(c)do{qu(c,173717,176,1)|0;CB(c)|0;f=+jB(c,k[13656]|0,1.0,0.0);p[(k[c+8>>2]|0)+128>>3]=f;c=Gs(a,c)|0}while((c|0)!=0);b=Lt(a,b)|0}while((b|0)!=0);return}function Ek(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0;l=r;r=r+16|0;i=l+4|0;j=l;k[i>>2]=k[12892];i=Vs(128238,i,0)|0;qu(i,128246,280,1)|0;k[(k[a+8>>2]|0)+140>>2]=i;c=Kt(a)|0;if(c)do{d=c+8|0;if(!(k[k[(k[d>>2]|0)+112>>2]>>2]|0)){h=Qt(i,ht(c)|0,1)|0;qu(h,173424,304,1)|0;f=By(40)|0;g=h+8|0;k[(k[g>>2]|0)+112>>2]=f;f=By(k[13604]<<3)|0;g=k[g>>2]|0;k[g+132>>2]=f;f=k[d>>2]|0;p[g+88>>3]=+p[f+88>>3];p[g+96>>3]=+p[f+96>>3];p[g+80>>3]=+p[f+80>>3];k[k[g+112>>2]>>2]=c;k[k[(k[d>>2]|0)+112>>2]>>2]=h}c=Lt(a,c)|0}while((c|0)!=0);c=Kt(a)|0;if(c)do{d=Es(a,c)|0;if(d)do{f=k[d>>2]&3;e=k[k[(k[(k[((f|0)==3?d:d+32|0)+28>>2]|0)+8>>2]|0)+112>>2]>>2]|0;f=k[k[(k[(k[((f|0)==2?d:d+-32|0)+28>>2]|0)+8>>2]|0)+112>>2]>>2]|0;if((e|0)!=(f|0))qu(Ls(i,e,f,0,1)|0,173717,176,1)|0;d=Gs(a,d)|0}while((d|0)!=0);c=Lt(a,c)|0}while((c|0)!=0);h=rw(i,j,0)|0;if((k[j>>2]|0)>0){g=0;do{f=k[h+(g<<2)>>2]|0;c=Kt(f)|0;if(c)do{d=Es(a,k[k[(k[c+8>>2]|0)+112>>2]>>2]|0)|0;if(d)do{e=k[k[(k[(k[((k[d>>2]&3|0)==2?d:d+-32|0)+28>>2]|0)+8>>2]|0)+112>>2]>>2]|0;if((c|0)!=(e|0)){e=Ls(i,c,e,0,1)|0;qu(e,173717,176,1)|0;Os(f,e,1)|0}d=Gs(a,d)|0}while((d|0)!=0);c=Lt(f,c)|0}while((c|0)!=0);g=g+1|0}while((g|0)<(k[j>>2]|0))}c=Kt(i)|0;if(c)do{d=Es(i,c)|0;if(d)do{a=By(8)|0;k[(k[d+8>>2]|0)+120>>2]=a;d=Gs(i,d)|0}while((d|0)!=0);c=Lt(i,c)|0}while((c|0)!=0);k[b>>2]=k[j>>2];r=l;return h|0}function Fk(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0;h=r;r=r+48|0;b=h+32|0;f=h;if(Zs(a)|0){g=Ek(a,b)|0;e=k[b>>2]|0;b=k[g>>2]|0;do if((e|0)!=1){b=k[b+48>>2]|0;Kw(a,2,8,f)|0;c=(e|0)>0;if(c)d=0;else{Jw(e,g,b,f)|0;break}do{i=k[g+(d<<2)>>2]|0;Sp(i,a);ll(i)|0;d=d+1|0}while((d|0)<(e|0));Jw(e,g,b,f)|0;if(c){b=0;do{Ik(k[g+(b<<2)>>2]|0);b=b+1|0}while((b|0)<(e|0))}}else{Sp(b,a);Ik(k[g>>2]|0);ll(a)|0}while(0);vP(g)}r=h;return}function Gk(a){a=a|0;var b=0;if(Zs(a)|0){Dk(a);Fk(a);b=(Kt(a)|0)+8|0;vP(k[(k[b>>2]|0)+112>>2]|0);dj(a);tz(a)}return}function Hk(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;c=Kt(a)|0;if(c){f=a+8|0;e=k[(k[f>>2]|0)+140>>2]|0;b=Kt(e)|0;if(b)do{d=Es(e,b)|0;if(d)do{vP(k[(k[d+8>>2]|0)+120>>2]|0);d=Gs(e,d)|0}while((d|0)!=0);d=b+8|0;vP(k[(k[d>>2]|0)+112>>2]|0);vP(k[(k[d>>2]|0)+132>>2]|0);b=Lt(e,b)|0}while((b|0)!=0);Ys(e)|0;do{b=Es(a,c)|0;if(b)do{XB(b);b=Gs(a,b)|0}while((b|0)!=0);YB(c);c=Lt(a,c)|0}while((c|0)!=0);vP(k[(k[f>>2]|0)+152>>2]|0);if((au(a)|0)!=(a|0))tu(a,0,173447)}return}function Ik(a){a=a|0;var b=0,c=0,d=0;b=Kt(a)|0;if(b)do{c=k[b+8>>2]|0;d=k[c+132>>2]|0;c=k[(k[(k[k[c+112>>2]>>2]|0)+8>>2]|0)+132>>2]|0;p[c>>3]=+p[d>>3];p[c+8>>3]=+p[d+8>>3];b=Lt(a,b)|0}while((b|0)!=0);return}function Jk(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,l=0,n=0,q=0,s=0,t=0,u=0,v=0.0;u=r;r=r+128|0;q=u+56|0;g=u+48|0;d=u+16|0;l=u+24|0;t=u+116|0;n=u;f=u+104|0;s=u+72|0;UB(a,2);b=iB(a,ks(a,0,128251,0)|0,2,2)|0;e=(iB(a,ks(a,0,128257,0)|0,b,2)|0)&65535;h=(au(a)|0)+8|0;j[(k[h>>2]|0)+176>>1]=e;h=(au(a)|0)+8|0;if((m[(k[h>>2]|0)+176>>1]|0)<10){c=(au(a)|0)+8|0;c=j[(k[c>>2]|0)+176>>1]|0}else c=10;e=(au(a)|0)+8|0;j[(k[e>>2]|0)+176>>1]=c;e=c&65535;k[13604]=e;h=(au(a)|0)+8|0;j[(k[h>>2]|0)+178>>1]=(b|0)<(e|0)?b:e;b=Kt(a)|0;if(b)do{Ii(b);b=Lt(a,b)|0}while((b|0)!=0);b=Kt(a)|0;if(b)do{c=Es(a,b)|0;if(c)do{qu(c,173717,176,1)|0;CB(c)|0;c=Gs(a,c)|0}while((c|0)!=0);b=Lt(a,b)|0}while((b|0)!=0);e=(k[13604]|0)==2;c=e&1;if(Zs(a)|0){h=Mk()|0;b=h+108|0;k[q>>2]=k[b>>2];if((Mi(a,2,q)|0)!=2)Yr(0,128261,d)|0;k[b>>2]=k[q>>2];v=+jB(a,ks(a,0,128294,0)|0,-1.0,0.0);p[h+24>>3]=v;v=-+jB(a,ks(a,0,128296,0)|0,1.0001234,0.0);p[h>>3]=v;b=iB(a,ks(a,0,128311,0)|0,2147483647,0)|0;k[h+40>>2]=b;b=ks(a,0,128318,0)|0;do if(b){b=ts(a,b)|0;d=i[b>>0]|0;if((d+-48|0)>>>0<10){b=bO(b)|0;b=(b|0)<5?b:0;break}if(XL(d)|0)if(mO(b,128328)|0)if(mO(b,128337)|0)if(mO(b,171734)|0)if(!(mO(b,128348)|0))b=3;else{b=(mO(b,128359)|0)==0;b=b?4:0}else b=0;else b=1;else b=2;else b=0}else b=0;while(0);k[h+120>>2]=b;b=ks(a,0,128366,0)|0;do if(b){b=ts(a,b)|0;d=i[b>>0]|0;if((d+-48|0)>>>0<10){b=bO(b)|0;b=b>>>0<3?b:1;break}if(XL(d)|0)if((mO(b,171734)|0)!=0?(mO(b,173309)|0)!=0:0)if(((mO(b,135691)|0)!=0?(mO(b,143864)|0)!=0:0)?(mO(b,143869)|0)!=0:0){b=(mO(b,128375)|0)==0;b=b?2:1}else b=1;else b=0;else b=1}else b=1;while(0);k[h+132>>2]=b;k[h+136>>2]=0;b=(yB(ss(a,128380)|0,0)|0)&255;k[h+112>>2]=b;b=(yB(ss(a,128389)|0,1)|0)&255;k[h+128>>2]=b;v=+jB(a,ks(a,0,128404,0)|0,0.0,-1797693134862315708145274.0e284);p[h+152>>3]=v;b=iB(a,ks(a,0,128413,0)|0,0,0)|0;d=h+160|0;k[d>>2]=b;if((b|0)>4){k[g>>2]=b;Yr(0,128426,g)|0;k[d>>2]=0}il(a,l,0)|0;do if(e&(k[l>>2]|0)==18){k[h+124>>2]=k[l+8>>2];p[h+144>>3]=+p[l+16>>3];ml(f,a);if(!(i[f+8>>0]|0)){p[n>>3]=.05555555555555555;p[n+8>>3]=.05555555555555555;c=0;break}else{v=+o[f+4>>2];p[n>>3]=+o[f>>2]/72.0;p[n+8>>3]=v/72.0;c=0;break}}else k[h+124>>2]=-1;while(0);e=rw(a,t,0)|0;if((k[t>>2]|0)==1){k[q>>2]=k[n>>2];k[q+4>>2]=k[n+4>>2];k[q+8>>2]=k[n+8>>2];k[q+12>>2]=k[n+12>>2];Lk(a,h,q);if(c)jl(a,l)|0;dj(a)}else{Kw(a,2,8,s)|0;k[s+12>>2]=1;b=k[t>>2]|0;if((b|0)>0){c=(c|0)==0;d=0;do{b=k[e+(d<<2)>>2]|0;uw(b)|0;k[q>>2]=k[n>>2];k[q+4>>2]=k[n+4>>2];k[q+8>>2]=k[n+8>>2];k[q+12>>2]=k[n+12>>2];Lk(b,h,q);if(!c)jl(b,l)|0;UB(b,2);dj(b);d=d+1|0;b=k[t>>2]|0}while((d|0)<(b|0))}Jw(b,e,a,s)|0}if((k[t>>2]|0)>0){b=0;do{_t(a,k[e+(b<<2)>>2]|0)|0;b=b+1|0}while((b|0)<(k[t>>2]|0))}vP(e);Nk(h)}tz(a);r=u;return}function Kk(a){a=a|0;var b=0,c=0;b=Kt(a)|0;if(b)do{c=Es(a,b)|0;if(c)do{XB(c);c=Gs(a,c)|0}while((c|0)!=0);YB(b);b=Lt(a,b)|0}while((b|0)!=0);return}function Lk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0;u=r;r=r+48|0;e=u;s=u+32|0;m=u+28|0;l=u+24|0;t=u+20|0;q=u+16|0;k[l>>2]=0;k[t>>2]=0;k[q>>2]=0;h=b+136|0;d=k[13604]|0;if((k[h>>2]|0)==1)o=gl(a,d,q)|0;else o=gl(a,d,0)|0;do if((k[b+124>>2]|0)>-1)if((k[b+160>>2]|0)>0){k[e>>2]=k[c>>2];k[e+4>>2]=k[c+4>>2];k[e+8>>2]=k[c+8>>2];k[e+12>>2]=k[c+12>>2];n=fl(a,e,l,t)|0;break}else{k[e>>2]=k[c>>2];k[e+4>>2]=k[c+4>>2];k[e+8>>2]=k[c+8>>2];k[e+12>>2]=k[c+12>>2];n=fl(a,e,0,0)|0;break}else n=0;while(0);g=k[13604]|0;g=By(ha(g<<3,Zs(a)|0)|0)|0;if((ks(a,1,138535,0)|0)!=0?(f=Kt(a)|0,(f|0)!=0):0)do{d=k[f+8>>2]|0;c=k[d+120>>2]|0;if((i[d+119>>0]|0)!=0?(j=k[13604]|0,(j|0)>0):0){e=k[d+132>>2]|0;d=ha(j,c)|0;c=0;do{p[g+(c+d<<3)>>3]=+p[e+(c<<3)>>3];c=c+1|0}while((c|0)!=(j|0))}f=Lt(a,f)|0}while((f|0)!=0);k[s>>2]=g;switch(k[h>>2]|0){case 1:case 0:{_k(k[13604]|0,o,k[q>>2]|0,b,0,n,g,k[l>>2]|0,k[t>>2]|0,m);break}case 5:{el(k[13604]|0,o,g,m);break}case 4:{d=k[q>>2]|0;if(!d)d=Bp(o)|0;else d=pp(d,0)|0;k[q>>2]=d;bl(k[13604]|0,o,d,s,1,200,.001,m);break}default:{}}d=Kt(a)|0;if(d)do{f=k[s>>2]|0;g=k[13604]|0;c=k[d+8>>2]|0;h=ha(k[c+120>>2]|0,g)|0;if((g|0)>0){c=k[c+132>>2]|0;e=0;do{p[c+(e<<3)>>3]=+p[f+(e+h<<3)>>3];e=e+1|0}while((e|0)<(g|0))}d=Lt(a,d)|0}while((d|0)!=0);vP(n);vP(k[s>>2]|0);jp(o);d=k[q>>2]|0;if(d)jp(d);d=k[t>>2]|0;if(d)vP(d);r=u;return}function Mk(){var a=0,b=0;a=Cy(168)|0;p[a>>3]=-1.0001234;p[a+8>>3]=1.0;k[a+16>>2]=1;p[a+24>>3]=-1.0;p[a+32>>3]=.2;k[a+40>>2]=0;k[a+44>>2]=4;k[a+48>>2]=1;k[a+52>>2]=45;k[a+56>>2]=10;p[a+64>>3]=.6;p[a+72>>3]=.001;k[a+80>>2]=500;p[a+88>>3]=.9;p[a+96>>3]=.1;k[a+104>>2]=1;k[a+108>>2]=123;b=a+112|0;k[b>>2]=0;k[b+4>>2]=0;k[b+8>>2]=0;k[b+12>>2]=0;k[a+128>>2]=1;k[a+132>>2]=3;k[a+136>>2]=0;p[a+144>>3]=-4.0;p[a+152>>3]=0.0;k[a+160>>2]=0;return a|0}function Nk(a){a=a|0;vP(a);return}function Ok(a,b){a=a|0;b=+b;var c=0,d=0,e=0;d=k[a>>2]|0;p[a+8+(d<<3)>>3]=b;e=a+176|0;a:do switch(k[e>>2]|0){case 0:{c=k[a>>2]|0;if((c|0)==20){k[e>>2]=-1;k[a>>2]=19;break a}else{k[e>>2]=1;k[a>>2]=(c|0)>19?20:c+1|0;break a}}case 1:{c=k[a>>2]|0;if((c|0)<20?+p[a+8+(d+-1<<3)>>3]>b:0){k[a>>2]=c+1;break a}else{k[a>>2]=c+-1;k[e>>2]=-1;break a}}default:{c=k[a>>2]|0;if((c|0)>0?+p[a+8+(d+1<<3)>>3]>b:0){k[a>>2]=c+-1;break a}else{k[a>>2]=c+1;k[e>>2]=1;break a}}}while(0);return}function Pk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0.0,f=0,g=0.0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,r=0.0;n=k[a+20>>2]|0;o=k[a+24>>2]|0;j=k[a>>2]|0;q=k[n+(j<<2)>>2]|0;if(!q)d=1.0;else{if((j|0)>0){l=(b|0)>0;i=k[n>>2]|0;d=0.0;m=0;do{a=m;m=m+1|0;f=i;i=k[n+(m<<2)>>2]|0;if((f|0)<(i|0)){h=ha(a,b)|0;do{if(l){a=c+((ha(k[o+(f<<2)>>2]|0,b)|0)<<3)|0;g=+p[a>>3];e=0.0;a=0;do{r=+p[c+(a+h<<3)>>3]-g;e=e+r*r;a=a+1|0}while((a|0)!=(b|0))}else e=0.0;d=d+ +X(+e);f=f+1|0}while((f|0)<(i|0))}}while((m|0)<(j|0))}else d=0.0;d=d/+(q|0)}return +d}function Qk(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,g=0.0,h=0;h=ha(d,b)|0;d=ha(c,b)|0;g=+p[a+(h<<3)>>3]-+p[a+(d<<3)>>3];f=+p[a+(h+1<<3)>>3]-+p[a+(d+1<<3)>>3];do if(!((g>=0.0?g:-g)<=(f>=0.0?f:-f)*1.0e-05)){e=+ca(+(f/g));if(g>0.0){if(!(f<0.0))break;e=e+6.283185307179586;break}else{if(!(g<0.0))break;e=e+3.141592653589793;break}}else e=f>0.0?1.5707963267948966:4.71238898038469;while(0);return +e}function Rk(a,b){a=a|0;b=b|0;var c=0.0,d=0.0;d=+p[a>>3];c=+p[b>>3];return (d>c?1:(d<c)<<31>>31)|0}function Sk(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0.0,j=0,l=0.0,m=0,n=0,o=0.0,q=0,s=0.0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0.0,E=0,F=0.0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0,O=0,P=0,Q=0,R=0,S=0.0,T=0,U=0,V=0.0,W=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0.0;ba=r;r=r+80|0;_=ba+32|0;Z=ba;o=+p[c>>3];j=c+24|0;l=+p[j>>3];n=c+32|0;h=+p[n>>3];V=+p[c+72>>3];W=k[c+80>>2]|0;S=+p[c+88>>3];s=+p[c+96>>3];q=k[c+104>>2]|0;$=c+56|0;g=k[$>>2]|0;do if(!((b|0)==0|(W|0)<1)?(T=k[b+4>>2]|0,!((a|0)<1|(T|0)<1)):0){U=k[b>>2]|0;aa=Cy(184)|0;k[aa>>2]=g;k[aa+176>>2]=0;k[f>>2]=0;if((U|0)!=(T|0)){k[f>>2]=-100;vP(aa);k[$>>2]=g;break}U=kp(b,1)|0;P=k[U+20>>2]|0;Q=k[U+24>>2]|0;if((k[c+16>>2]|0)!=0?($M(k[c+108>>2]|0),m=ha(T,a)|0,(m|0)>0):0){g=0;do{M=+Hp();p[e+(g<<3)>>3]=M;g=g+1|0}while((g|0)!=(m|0))}if(l<0.0){l=+Pk(U,a,e);p[j>>3]=l}if(h<0.0){p[n>>3]=.2;h=.2}if(o>=0.0){p[c>>3]=-1.0;o=-1.0}M=+Y(+l,+(1.0-o));F=+Y(+h,+((2.0-o)/3.0))/l;G=ha(T,a<<3)|0;N=Cy(G)|0;O=Cy(G)|0;H=c+116|0;I=c+64|0;J=(T|0)>0;K=k[24528]|0;L=U+8|0;z=(q|0)==0;A=Z+8|0;B=Z+16|0;C=(a|0)>0;D=0.0;E=0;h=s;while(1){E=E+1|0;GP(N|0,e|0,G|0)|0;g=k[aa>>2]|0;if(!(k[H>>2]|0))y=$o(a,T,g,e,0)|0;else y=$o(a,T,g,e,d)|0;_o(y,O,e,+p[I>>3],o,M,Z,f);if(J){m=k[P>>2]|0;x=0;while(1){u=ha(x,a)|0;w=x;x=x+1|0;v=P+(x<<2)|0;j=k[v>>2]|0;if((m|0)<(j|0))do{q=Q+(m<<2)|0;n=k[q>>2]|0;if((n|0)!=(w|0)){s=+Pp(e,a,w,n);if(C){j=ha(k[q>>2]|0,a)|0;n=0;do{ca=n+u|0;q=O+(ca<<3)|0;p[q>>3]=+p[q>>3]-s*(F*(+p[e+(ca<<3)>>3]-+p[e+(j+n<<3)>>3]));n=n+1|0}while((n|0)!=(a|0))}j=k[v>>2]|0}m=m+1|0}while((m|0)<(j|0));if((x|0)==(T|0))break;else m=j}if(J){s=0.0;n=0;do{m=ha(n,a)|0;if(C){t=0.0;j=0;do{da=+p[O+(j+m<<3)>>3];t=t+da*da;j=j+1|0}while((j|0)!=(a|0))}else t=0.0;t=+X(+t);s=s+t;if(t>0.0){if(C){j=0;do{ca=O+(j+m<<3)|0;p[ca>>3]=+p[ca>>3]/t;j=j+1|0}while((j|0)!=(a|0));R=33}}else R=33;if((R|0)==33?(R=0,C):0){j=0;do{x=j+m|0;ca=e+(x<<3)|0;p[ca>>3]=+p[ca>>3]+h*+p[O+(x<<3)>>3];j=j+1|0}while((j|0)!=(a|0))}n=n+1|0}while((n|0)!=(T|0))}else s=0.0}else s=0.0;if(!y){if(i[137280]|0){ca=k[L>>2]|0;k[_>>2]=E;p[_+8>>3]=h;p[_+16>>3]=s;k[_+24>>2]=ca;p[_+32>>3]=l;FN(K,128460,_)|0}}else{bp(y);Ok(aa,+p[Z>>3]+ +p[A>>3]*.85+ +p[B>>3]*3.3)}do if(!z){if(s>=D){h=S*h;break}if(!(D*.95<s))h=h*.99/S}else h=S*h;while(0);if(!((E|0)<(W|0)&h>V))break;else D=s}if(k[c+112>>2]|0)$k(a,U,e);vP(aa);k[$>>2]=g;if(N)vP(N);if((U|0)!=(b|0))jp(U);if(O)vP(O)}while(0);r=ba;return}function Tk(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0.0,j=0.0,l=0,m=0,n=0,o=0.0,q=0,r=0,s=0.0,t=0,u=0,v=0,w=0.0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0.0,H=0,I=0.0,J=0.0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0.0,S=0,T=0,U=0.0,V=0;o=+p[c>>3];l=c+24|0;j=+p[l>>3];n=c+32|0;i=+p[n>>3];U=+p[c+72>>3];V=k[c+80>>2]|0;R=+p[c+88>>3];s=+p[c+96>>3];r=k[c+104>>2]|0;g=k[c+56>>2]|0;QN(128559,32,1,k[24528]|0)|0;if(!((b|0)==0|(V|0)<1)?(S=k[b>>2]|0,h=k[b+4>>2]|0,!((a|0)<1|(h|0)<1)):0){q=a<<3;T=Cy(ha(q,h)|0)|0;if((h|0)<(k[c+52>>2]|0)){N=0;O=0;P=0}else{N=Cy(184)|0;k[N>>2]=g;k[N+176>>2]=0;N=Cy(a*80|0)|0;O=Cy(80)|0;P=Cy(80)|0}k[f>>2]=0;if((S|0)==(h|0)){K=kp(b,1)|0;L=k[K+20>>2]|0;M=k[K+24>>2]|0;if((k[c+16>>2]|0)!=0?($M(k[c+108>>2]|0),m=ha(S,a)|0,(m|0)>0):0){g=0;do{J=+Hp();p[e+(g<<3)>>3]=J;g=g+1|0}while((g|0)!=(m|0))}if(j<0.0){j=+Pk(K,a,e);p[l>>3]=j}if(i<0.0){p[n>>3]=.2;i=.2}if(o>=0.0){p[c>>3]=-1.0;o=-1.0}I=1.0-o;J=+Y(+j,+I);G=+Y(+i,+((2.0-o)/3.0))/j;H=Cy(q)|0;C=ha(S,q)|0;D=Cy(C)|0;u=ha(S,a)|0;E=(u|0)>0;F=(S|0)>0;y=(r|0)==0;z=(a|0)>0;A=c+116|0;B=(d|0)!=0;t=o==-1.0;u=u<<3;v=a<<3;w=0.0;x=0;i=s;while(1){if(E)IP(T|0,0,u|0)|0;x=x+1|0;GP(D|0,e|0,C|0)|0;if(F){n=0;do{if(z)IP(H|0,0,v|0)|0;m=ha(n,a)|0;if(B&(k[A>>2]|0)!=0){f=0;do{do if((f|0)!=(n|0)){j=+Op(e,a,n,f);if(!z)break;g=d+(f<<3)|0;h=ha(f,a)|0;o=j*j;l=0;do{s=J*+p[g>>3]*(+p[e+(l+m<<3)>>3]-+p[e+(l+h<<3)>>3]);if(t){r=H+(l<<3)|0;p[r>>3]=s/o+ +p[r>>3]}else{s=s/+Y(+j,+I);r=H+(l<<3)|0;p[r>>3]=s+ +p[r>>3]}l=l+1|0}while((l|0)!=(a|0))}while(0);f=f+1|0}while((f|0)!=(S|0))}else{h=0;do{do if((h|0)!=(n|0)){j=+Op(e,a,n,h);if(!z)break;g=ha(h,a)|0;o=j*j;f=0;do{s=J*(+p[e+(f+m<<3)>>3]-+p[e+(f+g<<3)>>3]);if(t){r=H+(f<<3)|0;p[r>>3]=s/o+ +p[r>>3]}else{s=s/+Y(+j,+I);r=H+(f<<3)|0;p[r>>3]=s+ +p[r>>3]}f=f+1|0}while((f|0)!=(a|0))}while(0);h=h+1|0}while((h|0)!=(S|0))}if(z){g=ha(n,a)|0;h=0;do{r=T+(h+g<<3)|0;p[r>>3]=+p[H+(h<<3)>>3]+ +p[r>>3];h=h+1|0}while((h|0)!=(a|0))}n=n+1|0}while((n|0)!=(S|0));if(F){r=0;do{if(z)IP(H|0,0,v|0)|0;h=k[L+(r<<2)>>2]|0;q=r;r=r+1|0;m=L+(r<<2)|0;g=k[m>>2]|0;if((h|0)<(g|0)){n=ha(q,a)|0;do{l=M+(h<<2)|0;f=k[l>>2]|0;if((f|0)!=(q|0)){j=+Pp(e,a,q,f);if(z){g=ha(k[l>>2]|0,a)|0;f=0;do{l=H+(f<<3)|0;p[l>>3]=+p[l>>3]-j*(G*(+p[e+(f+n<<3)>>3]-+p[e+(g+f<<3)>>3]));f=f+1|0}while((f|0)!=(a|0))}g=k[m>>2]|0}h=h+1|0}while((h|0)<(g|0))}if(z){g=ha(q,a)|0;h=0;do{q=T+(h+g<<3)|0;p[q>>3]=+p[H+(h<<3)>>3]+ +p[q>>3];h=h+1|0}while((h|0)!=(a|0))}}while((r|0)!=(S|0));if(F){j=0.0;f=0;do{if(z){g=ha(f,a)|0;h=0;do{p[H+(h<<3)>>3]=+p[T+(h+g<<3)>>3];h=h+1|0}while((h|0)!=(a|0));if(z){o=0.0;g=0;do{s=+p[H+(g<<3)>>3];o=o+s*s;g=g+1|0}while((g|0)!=(a|0))}else o=0.0}else o=0.0;o=+X(+o);j=j+o;do if(o>0.0){if(z)g=0;else break;do{Q=H+(g<<3)|0;p[Q>>3]=+p[Q>>3]/o;g=g+1|0}while((g|0)!=(a|0));Q=66}else Q=66;while(0);do if((Q|0)==66){Q=0;if(!z)break;g=ha(f,a)|0;h=0;do{r=e+(h+g<<3)|0;p[r>>3]=+p[r>>3]+i*+p[H+(h<<3)>>3];h=h+1|0}while((h|0)!=(a|0))}while(0);f=f+1|0}while((f|0)!=(S|0))}else j=0.0}else j=0.0}else j=0.0;do if(!y){if(j>=w){i=R*i;break}if(!(w*.95<j))i=i*.99/R}else i=R*i;while(0);if(!((x|0)<(V|0)&i>U))break;else w=j}if(k[c+112>>2]|0)$k(a,K,e);if(D)vP(D);if((K|0)!=(b|0))jp(K);if(H)vP(H)}else k[f>>2]=-100;if(N)vP(N);if(O)vP(O);if(P)vP(P);vP(T)}return}function Uk(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,l=0.0,m=0.0,n=0,o=0,q=0.0,s=0,t=0.0,u=0.0,v=0,w=0.0,x=0,y=0,z=0,A=0,B=0,C=0,D=0.0,E=0,F=0,G=0,H=0,I=0,J=0.0,K=0,L=0,M=0.0,N=0,O=0,P=0.0,Q=0,R=0,S=0,T=0,U=0.0,V=0.0,W=0,Z=0,_=0.0,$=0,aa=0.0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0,ia=0,ja=0,ka=0,la=0,ma=0,na=0,oa=0;na=r;r=r+32|0;da=na+24|0;ea=na+20|0;ka=na+16|0;la=na+12|0;ma=na+8|0;ca=na;q=+p[c>>3];h=c+24|0;m=+p[h>>3];o=c+32|0;l=+p[o>>3];aa=+p[c+72>>3];ba=k[c+80>>2]|0;_=+p[c+88>>3];t=+p[c+96>>3];s=k[c+104>>2]|0;k[da>>2]=0;k[ea>>2]=10;k[ka>>2]=0;k[la>>2]=0;k[ma>>2]=0;p[ca>>3]=0.0;ga=c+56|0;j=k[ga>>2]|0;if(!((b|0)==0|(ba|0)<1)?($=k[b>>2]|0,g=k[b+4>>2]|0,!((a|0)<1|(g|0)<1)):0){if((g|0)<(k[c+52>>2]|0)){fa=0;ia=0}else{ia=Cy(184)|0;k[ia>>2]=j;k[ia+176>>2]=0;fa=k[ea>>2]|0;Z=Cy(ha(a<<3,fa)|0)|0;k[ka>>2]=Z;fa=fa<<3;Z=Cy(fa)|0;k[la>>2]=Z;fa=Cy(fa)|0;k[ma>>2]=fa;fa=1}k[f>>2]=0;a:do if(($|0)==(g|0)){i=kp(b,1)|0;W=k[i+20>>2]|0;Z=k[i+24>>2]|0;if((k[c+16>>2]|0)!=0?($M(k[c+108>>2]|0),n=ha($,a)|0,(n|0)>0):0){g=0;do{V=+Hp();p[e+(g<<3)>>3]=V;g=g+1|0}while((g|0)!=(n|0))}if(m<0.0){m=+Pk(i,a,e);p[h>>3]=m}if(l<0.0){p[o>>3]=.2;l=.2}if(q>=0.0){p[c>>3]=-1.0;q=-1.0}U=1.0-q;V=+Y(+m,+U);P=+Y(+l,+((2.0-q)/3.0))/m;Q=a<<3;h=Cy(Q)|0;Q=ha($,Q)|0;g=Cy(Q)|0;R=(fa|0)!=0;S=c+116|0;T=($|0)>0;L=(s|0)==0;M=+($|0);N=(a|0)>0;O=c+64|0;G=q==-1.0;H=(d|0)!=0;I=a<<3;J=0.0;K=0;n=0;l=t;while(1){K=K+1|0;GP(g|0,e|0,Q|0)|0;do if(R){n=k[ia>>2]|0;if(!(k[S>>2]|0)){j=n;n=$o(a,$,n,e,0)|0;break}else{j=n;n=$o(a,$,n,e,d)|0;break}}while(0);if(T){D=0.0;q=0.0;F=0;m=0.0;while(1){if(N)IP(h|0,0,I|0)|0;s=k[W+(F<<2)>>2]|0;E=F;F=F+1|0;y=W+(F<<2)|0;o=k[y>>2]|0;if((s|0)<(o|0)){z=ha(E,a)|0;do{x=Z+(s<<2)|0;v=k[x>>2]|0;if((v|0)!=(E|0)){t=+Pp(e,a,E,v);if(N){o=ha(k[x>>2]|0,a)|0;v=0;do{C=h+(v<<3)|0;p[C>>3]=+p[C>>3]-t*(P*(+p[e+(v+z<<3)>>3]-+p[e+(o+v<<3)>>3]));v=v+1|0}while((v|0)!=(a|0))}o=k[y>>2]|0}s=s+1|0}while((s|0)<(o|0))}do if(!R){y=ha(E,a)|0;if(H&(k[S>>2]|0)!=0){v=0;do{do if((v|0)!=(E|0)){t=+Op(e,a,E,v);if(!N)break;o=d+(v<<3)|0;s=ha(v,a)|0;u=t*t;x=0;do{w=V*+p[o>>3]*(+p[e+(x+y<<3)>>3]-+p[e+(x+s<<3)>>3]);if(G){C=h+(x<<3)|0;p[C>>3]=w/u+ +p[C>>3]}else{w=w/+Y(+t,+U);C=h+(x<<3)|0;p[C>>3]=w+ +p[C>>3]}x=x+1|0}while((x|0)!=(a|0))}while(0);v=v+1|0}while((v|0)!=($|0))}else{s=0;do{do if((s|0)!=(E|0)){t=+Op(e,a,E,s);if(!N)break;o=ha(s,a)|0;u=t*t;v=0;do{w=V*(+p[e+(v+y<<3)>>3]-+p[e+(v+o<<3)>>3]);if(G){C=h+(v<<3)|0;p[C>>3]=w/u+ +p[C>>3]}else{w=w/+Y(+t,+U);C=h+(v<<3)|0;p[C>>3]=w+ +p[C>>3]}v=v+1|0}while((v|0)!=(a|0))}while(0);s=s+1|0}while((s|0)!=($|0))}}else{C=ha(E,a)|0;Zo(n,+p[O>>3],e+(C<<3)|0,E,da,ea,ka,la,ma,ca,f);q=q+ +p[ca>>3];B=k[da>>2]|0;m=m+ +(B|0);if(k[f>>2]|0){ja=81;break a}if((B|0)<=0)break;o=k[ma>>2]|0;s=k[la>>2]|0;v=k[ka>>2]|0;z=0;do{t=+p[o+(z<<3)>>3];t=t>1.0e-15?t:1.0e-15;if(N){x=s+(z<<3)|0;y=ha(z,a)|0;u=t*t;A=0;do{w=V*+p[x>>3]*(+p[e+(A+C<<3)>>3]-+p[v+(A+y<<3)>>3]);if(G){oa=h+(A<<3)|0;p[oa>>3]=w/u+ +p[oa>>3]}else{w=w/+Y(+t,+U);oa=h+(A<<3)|0;p[oa>>3]=w+ +p[oa>>3]}A=A+1|0}while((A|0)!=(a|0))}z=z+1|0}while((z|0)<(B|0))}while(0);if(N){t=0.0;o=0;do{w=+p[h+(o<<3)>>3];t=t+w*w;o=o+1|0}while((o|0)!=(a|0))}else t=0.0;u=+X(+t);t=D+u;do if(u>0.0){if(N)o=0;else break;do{oa=h+(o<<3)|0;p[oa>>3]=+p[oa>>3]/u;o=o+1|0}while((o|0)!=(a|0));ja=65}else ja=65;while(0);do if((ja|0)==65){ja=0;if(!N)break;o=ha(E,a)|0;s=0;do{oa=e+(s+o<<3)|0;p[oa>>3]=+p[oa>>3]+l*+p[h+(s<<3)>>3];s=s+1|0}while((s|0)!=(a|0))}while(0);if((F|0)>=($|0))break;else D=t}}else{t=0.0;q=0.0;m=0.0}if(n){bp(n);Ok(ia,q/M+m/M*5.0)}do if(!L){if(t>=J){l=_*l;break}if(!(J*.95<t))l=l*.99/_}else l=_*l;while(0);if(!((K|0)<(ba|0)&l>aa))break;else J=t}if(!(k[c+112>>2]|0))ja=80;else{$k(a,i,e);ja=80}}else{k[f>>2]=-100;i=b;h=0;g=0;ja=80}while(0);if((ja|0)==80)if(fa)ja=81;if((ja|0)==81){vP(ia);k[ga>>2]=j}if(g)vP(g);if((i|0)!=(b|0))jp(i);if(h)vP(h);g=k[ka>>2]|0;if(g)vP(g);g=k[la>>2]|0;if(g)vP(g);g=k[ma>>2]|0;if(g)vP(g)}r=na;return}function Vk(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;h=h|0;var i=0,j=0.0,l=0,m=0.0,n=0.0,o=0,q=0,s=0.0,t=0.0,u=0,v=0,w=0,x=0,y=0,z=0.0,A=0.0,B=0,C=0,D=0.0,E=0,F=0,G=0,H=0,I=0.0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0.0,V=0,W=0,Z=0,_=0,$=0,aa=0,ba=0.0,ca=0,da=0.0,ea=0,fa=0,ga=0,ia=0,ja=0,ka=0,la=0,ma=0;la=r;r=r+64|0;y=la+24|0;o=la+8|0;ga=la+48|0;ia=la+44|0;ea=la+40|0;ja=la+36|0;ka=la+32|0;fa=la;z=+p[d>>3];x=d+32|0;A=+p[x>>3];ba=+p[d+72>>3];ca=k[d+80>>2]|0;da=+p[d+88>>3];D=+p[d+96>>3];C=k[d+104>>2]|0;k[ga>>2]=0;k[ia>>2]=10;k[ea>>2]=0;k[ja>>2]=0;k[ka>>2]=0;p[fa>>3]=0.0;if(!((b|0)==0|(ca|0)<1)?(aa=k[b>>2]|0,i=k[b+4>>2]|0,!((a|0)<1|(i|0)<1)):0){if((k[d+132>>2]|0)!=0?(i|0)>=(k[d+52>>2]|0):0){B=Cy(a*80|0)|0;k[ea>>2]=B;B=Cy(80)|0;k[ja>>2]=B;B=Cy(80)|0;k[ka>>2]=B;B=1}else B=0;k[h>>2]=0;if((aa|0)==(i|0)){_=kp(b,1)|0;if(!c){i=_;W=0}else{i=c;W=k[c+28>>2]|0}Z=k[i+24>>2]|0;V=k[i+20>>2]|0;if(g<0.0){if(!W){j=1.0;i=k[V+(aa<<2)>>2]|0}else{if((aa|0)>0){c=k[V>>2]|0;j=0.0;l=0;do{l=l+1|0;i=c;c=k[V+(l<<2)>>2]|0;if((i|0)<(c|0))do{j=j+ +p[W+(i<<3)>>3];i=i+1|0}while((i|0)!=(c|0))}while((l|0)!=(aa|0))}else j=0.0;i=k[V+(aa<<2)>>2]|0;j=j/+(i|0)}U=+(i|0);I=+(aa|0);U=U/(I*I-U)*g/+Y(+j,+(z+1.0));T=k[24528]|0;p[o>>3]=j;p[o+8>>3]=U;FN(T,128592,o)|0}else U=g;if((k[d+16>>2]|0)!=0?(QN(128614,24,1,k[24528]|0)|0,$M(k[d+108>>2]|0),q=ha(aa,a)|0,(q|0)>0):0){i=0;do{I=+Hp();p[f+(i<<3)>>3]=I;i=i+1|0}while((i|0)!=(q|0))}T=(aa|0)>0;if(T){u=(W|0)==0;v=(a|0)>0;m=1.0;c=k[V>>2]|0;w=0;g=0.0;j=0.0;while(1){q=w;w=w+1|0;o=V+(w<<2)|0;i=k[o>>2]|0;if((c|0)<(i|0)){l=i;while(1){i=k[Z+(c<<2)>>2]|0;if((i|0)==(q|0))i=l;else{n=+Op(f,a,q,i);if(u)t=m;else t=+p[W+(c<<3)>>3];m=1.0/(t*t);if(v){s=n*(t*m);m=n*(n*m);i=0;do{j=s+j;g=m+g;i=i+1|0}while((i|0)!=(a|0))}m=t;i=k[o>>2]|0}c=c+1|0;if((c|0)>=(i|0))break;else l=i}}if((w|0)==(aa|0))break;else c=i}}else{g=0.0;j=0.0}j=j/g;i=ha(aa,a)|0;if((i|0)>0){c=0;do{S=f+(c<<3)|0;p[S>>3]=j*+p[S>>3];c=c+1|0}while((c|0)!=(i|0))}S=k[24528]|0;p[y>>3]=j;FN(S,128639,y)|0;if(A<0.0)p[x>>3]=.2;if(!(z>=0.0))j=z;else{p[d>>3]=-1.0;j=-1.0}R=a<<3;Q=Cy(R)|0;R=ha(aa,R)|0;S=Cy(R)|0;O=(B|0)!=0;P=d+116|0;K=(C|0)==0;L=(a|0)>0;M=d+64|0;N=j==-1.0;A=1.0-j;E=(e|0)!=0;F=(W|0)==0;G=d+8|0;H=a<<3;I=0.0;j=1.0;J=0;i=0;g=D;a:while(1){J=J+1|0;GP(S|0,f|0,R|0)|0;do if(O)if(!(k[P>>2]|0)){i=$o(a,aa,10,f,0)|0;break}else{i=$o(a,aa,10,f,e)|0;break}while(0);if(T){z=0.0;C=0;while(1){if(L)IP(Q|0,0,H|0)|0;c=k[V+(C<<2)>>2]|0;B=C;C=C+1|0;v=V+(C<<2)|0;if((c|0)<(k[v>>2]|0)){w=ha(B,a)|0;do{u=Z+(c<<2)|0;l=k[u>>2]|0;do if((l|0)!=(B|0)){t=+Op(f,a,B,l);if(!F)j=+p[W+(c<<3)>>3];m=+p[G>>3];b:do if(m==2.0){m=1.0/(j*(j*j));if(!L)break;l=ha(k[u>>2]|0,a)|0;n=t-j;o=0;do{y=Q+(o<<3)|0;p[y>>3]=-(n*(n*(m*(+p[f+(o+w<<3)>>3]-+p[f+(l+o<<3)>>3]))))/t+ +p[y>>3];o=o+1|0}while((o|0)!=(a|0))}else{if(m==1.0){m=1.0/(j*j);if(!L)break;l=ha(k[u>>2]|0,a)|0;n=t-j;o=0;while(1){y=Q+(o<<3)|0;p[y>>3]=-(n*(m*(+p[f+(o+w<<3)>>3]-+p[f+(l+o<<3)>>3])))/t+ +p[y>>3];o=o+1|0;if((o|0)==(a|0))break b}}n=1.0/+Y(+j,+(m+1.0));if(!L)break;o=ha(k[u>>2]|0,a)|0;s=t-j;l=0;while(1){D=-(n*(+p[f+(l+w<<3)>>3]-+p[f+(o+l<<3)>>3])*+Y(+s,+m))/t;y=Q+(l<<3)|0;p[y>>3]=D+ +p[y>>3];l=l+1|0;if((l|0)==(a|0))break b;m=+p[G>>3]}}while(0);if(E&(k[P>>2]|0)!=0){if(!L)break;q=e+(c<<3)|0;l=ha(k[u>>2]|0,a)|0;m=t*t;o=0;do{n=U*+p[q>>3]*(+p[f+(o+w<<3)>>3]-+p[f+(l+o<<3)>>3]);if(N){y=Q+(o<<3)|0;p[y>>3]=+p[y>>3]-n/m}else{D=n/+Y(+t,+A);y=Q+(o<<3)|0;p[y>>3]=+p[y>>3]-D}o=o+1|0}while((o|0)!=(a|0))}else{if(!L)break;l=ha(k[u>>2]|0,a)|0;m=t*t;o=0;do{n=U*(+p[f+(o+w<<3)>>3]-+p[f+(l+o<<3)>>3]);if(N){y=Q+(o<<3)|0;p[y>>3]=+p[y>>3]-n/m}else{D=n/+Y(+t,+A);y=Q+(o<<3)|0;p[y>>3]=+p[y>>3]-D}o=o+1|0}while((o|0)!=(a|0))}}while(0);c=c+1|0}while((c|0)<(k[v>>2]|0))}do if(!O){u=ha(B,a)|0;if(E&(k[P>>2]|0)!=0){o=0;do{do if((o|0)!=(B|0)){m=+Op(f,a,B,o);if(!L)break;c=e+(o<<3)|0;l=ha(o,a)|0;n=m*m;q=0;do{s=U*+p[c>>3]*(+p[f+(q+u<<3)>>3]-+p[f+(q+l<<3)>>3]);if(N){y=Q+(q<<3)|0;p[y>>3]=s/n+ +p[y>>3]}else{D=s/+Y(+m,+A);y=Q+(q<<3)|0;p[y>>3]=D+ +p[y>>3]}q=q+1|0}while((q|0)!=(a|0))}while(0);o=o+1|0}while((o|0)!=(aa|0))}else{l=0;do{do if((l|0)!=(B|0)){m=+Op(f,a,B,l);if(!L)break;c=ha(l,a)|0;n=m*m;o=0;do{s=U*(+p[f+(o+u<<3)>>3]-+p[f+(o+c<<3)>>3]);if(N){y=Q+(o<<3)|0;p[y>>3]=s/n+ +p[y>>3]}else{D=s/+Y(+m,+A);y=Q+(o<<3)|0;p[y>>3]=D+ +p[y>>3]}o=o+1|0}while((o|0)!=(a|0))}while(0);l=l+1|0}while((l|0)!=(aa|0))}}else{c=ha(B,a)|0;Zo(i,+p[M>>3],f+(c<<3)|0,B,ga,ia,ea,ja,ka,fa,h);l=k[ga>>2]|0;if(k[h>>2]|0)break a;if((l|0)<=0)break;o=k[ka>>2]|0;q=k[ja>>2]|0;u=k[ea>>2]|0;x=0;do{m=+p[o+(x<<3)>>3];m=m>1.0e-15?m:1.0e-15;if(L){v=q+(x<<3)|0;w=ha(x,a)|0;n=m*m;y=0;do{s=U*+p[v>>3]*(+p[f+(y+c<<3)>>3]-+p[u+(y+w<<3)>>3]);if(N){ma=Q+(y<<3)|0;p[ma>>3]=s/n+ +p[ma>>3]}else{D=s/+Y(+m,+A);ma=Q+(y<<3)|0;p[ma>>3]=D+ +p[ma>>3]}y=y+1|0}while((y|0)!=(a|0))}x=x+1|0}while((x|0)<(l|0))}while(0);if(L){m=0.0;c=0;do{D=+p[Q+(c<<3)>>3];m=m+D*D;c=c+1|0}while((c|0)!=(a|0))}else m=0.0;n=+X(+m);m=z+n;do if(n>0.0){if(L)c=0;else break;do{ma=Q+(c<<3)|0;p[ma>>3]=+p[ma>>3]/n;c=c+1|0}while((c|0)!=(a|0));$=113}else $=113;while(0);do if(($|0)==113){$=0;if(!L)break;c=ha(B,a)|0;l=0;do{ma=f+(l+c<<3)|0;p[ma>>3]=+p[ma>>3]+g*+p[Q+(l<<3)>>3];l=l+1|0}while((l|0)!=(a|0))}while(0);if((C|0)>=(aa|0))break;else z=m}}else m=0.0;if(i)bp(i);do if(K)g=da*g;else{if(m>=I){g=da*g;break}if(I*.95<m)break;g=g*.99/da}while(0);if(!((J|0)<(ca|0)&g>ba)){$=126;break}else I=m}if(($|0)==126?(k[d+112>>2]|0)!=0:0)$k(a,_,f);if(S)vP(S);if((_|0)!=(b|0))jp(_);if(Q)vP(Q)}else k[h>>2]=-100;i=k[ea>>2]|0;if(i)vP(i);i=k[ja>>2]|0;if(i)vP(i);i=k[ka>>2]|0;if(i)vP(i)}r=la;return}function Wk(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0.0,j=0.0,l=0,m=0,n=0,o=0.0,q=0,s=0,t=0.0,u=0.0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0.0,D=0,E=0.0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0,N=0,O=0,P=0,Q=0.0,R=0.0,S=0,T=0,U=0,V=0,W=0,Z=0,_=0,$=0.0,aa=0,ba=0.0,ca=0,da=0,ea=0,fa=0,ga=0,ia=0,ja=0,ka=0,la=0;ka=r;r=r+32|0;fa=ka+24|0;ga=ka+20|0;da=ka+16|0;ia=ka+12|0;ja=ka+8|0;ea=ka;o=+p[d>>3];l=d+24|0;j=+p[l>>3];n=d+32|0;i=+p[n>>3];ba=+p[d+72>>3];ca=k[d+80>>2]|0;$=+p[d+88>>3];t=+p[d+96>>3];s=k[d+104>>2]|0;k[fa>>2]=0;k[ga>>2]=10;k[da>>2]=0;k[ia>>2]=0;k[ja>>2]=0;p[ea>>3]=0.0;if(!((b|0)==0|(ca|0)<1)?(aa=k[b>>2]|0,h=k[b+4>>2]|0,!((a|0)<1|(h|0)<1)):0){if((h|0)<(k[d+52>>2]|0))q=0;else{q=Cy(a*80|0)|0;k[da>>2]=q;q=Cy(80)|0;k[ia>>2]=q;q=Cy(80)|0;k[ja>>2]=q;q=1}k[g>>2]=0;if((aa|0)==(h|0)){T=kp(b,1)|0;U=k[T+20>>2]|0;V=k[T+24>>2]|0;W=k[c+20>>2]|0;Z=k[c+24>>2]|0;S=k[c+28>>2]|0;if((k[d+16>>2]|0)!=0?($M(k[d+108>>2]|0),m=ha(aa,a)|0,(m|0)>0):0){h=0;do{R=+Hp();p[f+(h<<3)>>3]=R;h=h+1|0}while((h|0)!=(m|0))}if(j<0.0){j=+Pk(T,a,f);p[l>>3]=j}if(i<0.0){p[n>>3]=.2;i=.2}if(o>=0.0){p[d>>3]=-1.0;o=-1.0}Q=1.0-o;R=+Y(+j,+Q);M=+Y(+i,+((2.0-o)/3.0))/j;O=a<<3;N=Cy(O)|0;O=ha(aa,O)|0;P=Cy(O)|0;J=(q|0)!=0;K=d+116|0;L=(aa|0)>0;G=(s|0)==0;H=(a|0)>0;I=d+64|0;A=o==-1.0;B=(e|0)!=0;C=M*.2;D=a<<3;E=0.0;F=0;h=0;i=t;a:while(1){F=F+1|0;GP(P|0,f|0,O|0)|0;do if(J)if(!(k[K>>2]|0)){h=$o(a,aa,10,f,0)|0;break}else{h=$o(a,aa,10,f,e)|0;break}while(0);if(L){j=0.0;z=0;do{if(H)IP(N|0,0,D|0)|0;l=k[U+(z<<2)>>2]|0;y=z;z=z+1|0;q=U+(z<<2)|0;c=k[q>>2]|0;if((l|0)<(c|0)){s=ha(y,a)|0;do{n=V+(l<<2)|0;m=k[n>>2]|0;if((m|0)!=(y|0)){o=+Pp(f,a,y,m);if(H){c=ha(k[n>>2]|0,a)|0;m=0;do{x=N+(m<<3)|0;p[x>>3]=+p[x>>3]-o*(M*(+p[f+(m+s<<3)>>3]-+p[f+(c+m<<3)>>3]));m=m+1|0}while((m|0)!=(a|0))}c=k[q>>2]|0}l=l+1|0}while((l|0)<(c|0))}l=k[W+(y<<2)>>2]|0;s=W+(z<<2)|0;c=k[s>>2]|0;if((l|0)<(c|0)){v=ha(y,a)|0;do{n=Z+(l<<2)|0;m=k[n>>2]|0;if((m|0)!=(y|0)){o=+Op(f,a,y,m);if(H){q=S+(l<<3)|0;c=ha(k[n>>2]|0,a)|0;m=0;do{t=+p[q>>3];u=o-t;u=u*(u*(C*(+p[f+(m+v<<3)>>3]-+p[f+(c+m<<3)>>3])))/o;x=N+(m<<3)|0;p[x>>3]=+p[x>>3]+(o<t?u:-u);m=m+1|0}while((m|0)!=(a|0))}c=k[s>>2]|0}l=l+1|0}while((l|0)<(c|0))}do if(!J){q=ha(y,a)|0;if(B&(k[K>>2]|0)!=0){m=0;do{do if((m|0)!=(y|0)){o=+Op(f,a,y,m);if(!H)break;c=e+(m<<3)|0;l=ha(m,a)|0;t=o*o;n=0;do{u=R*+p[c>>3]*(+p[f+(n+q<<3)>>3]-+p[f+(n+l<<3)>>3]);if(A){x=N+(n<<3)|0;p[x>>3]=u/t+ +p[x>>3]}else{u=u/+Y(+o,+Q);x=N+(n<<3)|0;p[x>>3]=u+ +p[x>>3]}n=n+1|0}while((n|0)!=(a|0))}while(0);m=m+1|0}while((m|0)!=(aa|0))}else{l=0;do{do if((l|0)!=(y|0)){o=+Op(f,a,y,l);if(!H)break;c=ha(l,a)|0;t=o*o;m=0;do{u=R*(+p[f+(m+q<<3)>>3]-+p[f+(m+c<<3)>>3]);if(A){x=N+(m<<3)|0;p[x>>3]=u/t+ +p[x>>3]}else{u=u/+Y(+o,+Q);x=N+(m<<3)|0;p[x>>3]=u+ +p[x>>3]}m=m+1|0}while((m|0)!=(a|0))}while(0);l=l+1|0}while((l|0)!=(aa|0))}}else{c=ha(y,a)|0;Zo(h,+p[I>>3],f+(c<<3)|0,y,fa,ga,da,ia,ja,ea,g);l=k[fa>>2]|0;if(k[g>>2]|0)break a;if((l|0)<=0)break;m=k[ja>>2]|0;n=k[ia>>2]|0;q=k[da>>2]|0;w=0;do{o=+p[m+(w<<3)>>3];o=o>1.0e-15?o:1.0e-15;if(H){s=n+(w<<3)|0;v=ha(w,a)|0;t=o*o;x=0;do{u=R*+p[s>>3]*(+p[f+(x+c<<3)>>3]-+p[q+(x+v<<3)>>3]);if(A){la=N+(x<<3)|0;p[la>>3]=u/t+ +p[la>>3]}else{u=u/+Y(+o,+Q);la=N+(x<<3)|0;p[la>>3]=u+ +p[la>>3]}x=x+1|0}while((x|0)!=(a|0))}w=w+1|0}while((w|0)<(l|0))}while(0);if(H){o=0.0;c=0;do{u=+p[N+(c<<3)>>3];o=o+u*u;c=c+1|0}while((c|0)!=(a|0))}else o=0.0;o=+X(+o);j=j+o;do if(o>0.0){if(H)c=0;else break;do{la=N+(c<<3)|0;p[la>>3]=+p[la>>3]/o;c=c+1|0}while((c|0)!=(a|0));_=73}else _=73;while(0);do if((_|0)==73){_=0;if(!H)break;c=ha(y,a)|0;l=0;do{la=f+(l+c<<3)|0;p[la>>3]=+p[la>>3]+i*+p[N+(l<<3)>>3];l=l+1|0}while((l|0)!=(a|0))}while(0)}while((z|0)<(aa|0))}else j=0.0;if(h)bp(h);do if(!G){if(j>=E){i=$*i;break}if(!(E*.95<j))i=i*.99/$}else i=$*i;while(0);if(!((F|0)<(ca|0)&i>ba)){_=86;break}else E=j}if((_|0)==86?(k[d+112>>2]|0)!=0:0)$k(a,T,f);if(P)vP(P);if((T|0)!=(b|0))jp(T);if(N)vP(N)}else k[g>>2]=-100;h=k[da>>2]|0;if(h)vP(h);h=k[ia>>2]|0;if(h)vP(h);h=k[ja>>2]|0;if(h)vP(h)}r=ka;return}function Xk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0.0,r=0,s=0;n=k[b+20>>2]|0;o=k[b+24>>2]|0;r=Cy(a<<3)|0;i=k[b>>2]|0;if((i|0)>0){j=(a|0)>0;l=a<<3;m=0;do{if(j)IP(r|0,0,l|0)|0;b=k[n+(m<<2)>>2]|0;h=m;m=m+1|0;g=k[n+(m<<2)>>2]|0;if((b|0)<(g|0)){f=b;b=0;do{d=k[o+(f<<2)>>2]|0;if((d|0)!=(h|0)){b=b+1|0;if(j){d=ha(d,a)|0;e=0;do{s=r+(e<<3)|0;p[s>>3]=+p[c+(d+e<<3)>>3]+ +p[s>>3];e=e+1|0}while((e|0)!=(a|0))}}f=f+1|0}while((f|0)<(g|0));if((b|0)>0?(q=.5/+(b|0),j):0){b=ha(h,a)|0;d=0;do{s=c+(d+b<<3)|0;p[s>>3]=+p[s>>3]*.5+q*+p[r+(d<<3)>>3];d=d+1|0}while((d|0)!=(a|0))}}}while((m|0)<(i|0))}vP(r);return}function Yk(a){a=a|0;var b=0.0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0.0;h=k[a+20>>2]|0;i=k[a+24>>2]|0;j=k[a>>2]|0;a=j+1|0;l=Cy(a<<2)|0;if((j|0)>-1?(IP(l|0,0,((a|0)>1?a<<2:4)|0)|0,(j|0)>0):0){g=0;a=0;do{d=k[h+(g<<2)>>2]|0;f=g;g=g+1|0;e=k[h+(g<<2)>>2]|0;if((d|0)<(e|0)){c=0;do{c=((f|0)!=(k[i+(d<<2)>>2]|0)&1)+c|0;d=d+1|0}while((d|0)<(e|0))}else c=0;e=l+(c<<2)|0;f=(k[e>>2]|0)+1|0;k[e>>2]=f;a=(a|0)>(f|0)?a:f}while((g|0)!=(j|0));b=+(a|0)*.8}else b=0.0;m=+(k[l+4>>2]|0);if(m>b?m>+(j|0)*.3:0)a=1;else a=0;vP(l);return a|0}function Zk(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0.0,g=0,h=0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,q=0.0,s=0.0;n=r;r=r+48|0;l=n+16|0;i=n;e=ha(b,b)|0;if(e)IP(l|0,0,((e|0)>1?e<<3:8)|0)|0;k=(b|0)>0;if(k)IP(i|0,0,b<<3|0)|0;m=(a|0)>0;if(m){g=0;do{if(k){e=ha(g,b)|0;h=0;do{j=i+(h<<3)|0;p[j>>3]=+p[c+(h+e<<3)>>3]+ +p[j>>3];h=h+1|0}while((h|0)!=(b|0))}g=g+1|0}while((g|0)!=(a|0))}if(k){d=+(a|0);e=0;do{j=i+(e<<3)|0;p[j>>3]=+p[j>>3]/d;e=e+1|0}while((e|0)!=(b|0))}if(m){g=0;do{if(k){e=ha(g,b)|0;h=0;do{j=c+(h+e<<3)|0;p[j>>3]=+p[j>>3]-+p[i+(h<<3)>>3];h=h+1|0}while((h|0)!=(b|0))}g=g+1|0}while((g|0)!=(a|0));if(m){h=0;do{if(k){e=ha(h,b)|0;i=0;do{d=+p[c+(i+e<<3)>>3];g=ha(i,b)|0;j=0;do{o=l+(j+g<<3)|0;p[o>>3]=+p[o>>3]+d*+p[c+(j+e<<3)>>3];j=j+1|0}while((j|0)!=(b|0));i=i+1|0}while((i|0)!=(b|0))}h=h+1|0}while((h|0)!=(a|0))}}d=+p[l+8>>3];if(d==0.0)d=0.0;else{q=+p[l>>3];f=+p[l+24>>3];d=-(f-q-+X(+(f*f+(d*(d*4.0)+q*q-q*2.0*f))))/(d*2.0)}f=+X(+(d*d+1.0));d=d/f;f=1.0/f;if(m){e=0;do{o=ha(e,b)|0;m=c+(o<<3)|0;q=+p[m>>3];o=c+(o+1<<3)|0;s=+p[o>>3];p[m>>3]=d*q+f*s;p[o>>3]=d*s-f*q;e=e+1|0}while((e|0)!=(a|0))}r=n;return}function _k(a,b,c,d,e,f,g,h,j,l){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;j=j|0;l=l|0;var m=0,n=0,o=0.0,q=0.0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0.0,Y=0.0;V=r;r=r+224|0;L=V+208|0;K=V+200|0;O=V+192|0;M=V+184|0;N=V+168|0;S=V;GP(S|0,d|0,168)|0;k[l>>2]=0;do if((b|0)!=0?(Q=k[b+4>>2]|0,!((a|0)<1|(Q|0)<1)):0){if((mp(b,0)|0)!=0?(k[b+16>>2]|0)==1:0){if((k[d+136>>2]|0)==1)m=qp(c)|0;else m=c;U=qp(b)|0;R=m}else u=5;do if((u|0)==5)if((k[d+136>>2]|0)==1){U=pp(b,0)|0;R=pp(c,0)|0;break}else{U=Bp(b)|0;R=c;break}while(0);T=d+160|0;m=k[T>>2]|0;if((m|0)==3){if((h|0)<=0)u=89}else if(!((h|0)>0&(m|0)==4))u=89;if((u|0)==89){O=Tp(k[d+44>>2]|0,k[d+48>>2]|0)|0;k[O+16>>2]=k[d+40>>2];P=Xp(U,R,e,O)|0;s=Yp(P)|0;if(!(k[s+32>>2]|0))m=g;else m=Cy(ha(a<<3,k[s+4>>2]|0)|0)|0;n=Yk(U)|0;if(+p[d>>3]==-1.0001234)p[d>>3]=(n|0)==0?-1.0:-1.8;y=d+136|0;z=d+24|0;M=(a|0)>0;A=d+16|0;B=d+104|0;C=d+96|0;G=a<<3;D=d+132|0;E=k[24528]|0;F=d+80|0;while(1){a:do switch(k[y>>2]|0){case 0:{switch(k[D>>2]|0){case 0:{Tk(a,k[s+8>>2]|0,d,k[s+24>>2]|0,m,l);break a}case 2:{n=s+8|0;u=102;break}case 3:{n=s+8|0;t=k[n>>2]|0;if((k[t>>2]|0)>1e4)if(!(i[137280]|0))u=102;else{k[K>>2]=1e4;FN(E,128678,K)|0;u=102}else u=103;break}default:{t=k[s+8>>2]|0;u=103}}if((u|0)==102){Sk(a,k[n>>2]|0,d,k[s+24>>2]|0,m,l);break a}else if((u|0)==103){Uk(a,t,d,k[s+24>>2]|0,m,l);break a}break}case 1:{p[C>>3]=1.0;k[B>>2]=1;x=(k[s+28>>2]|0)==0;o=x?.5:.05;k[F>>2]=x?500:100;x=(k[s+32>>2]|0)==0;n=s+8|0;t=s+12|0;u=s+24|0;Vk(a,k[n>>2]|0,k[t>>2]|0,d,k[u>>2]|0,m,o,l);if(x){k[A>>2]=0;p[C>>3]=.05;k[B>>2]=0;Vk(a,k[n>>2]|0,k[t>>2]|0,d,k[u>>2]|0,m,o*.5,l);Vk(a,k[n>>2]|0,k[t>>2]|0,d,k[u>>2]|0,m,o*.125,l);Vk(a,k[n>>2]|0,k[t>>2]|0,d,k[u>>2]|0,m,o*.03125,l)}break}default:{}}while(0);w=k[s+32>>2]|0;if(!w){u=122;break}if(k[l>>2]|0){u=108;break}u=k[s+16>>2]|0;n=k[s+40>>2]|0;if(!(k[w+32>>2]|0))x=g;else x=Cy(ha(G,k[w+4>>2]|0)|0)|0;s=k[w+8>>2]|0;t=k[w+20>>2]|0;o=+p[z>>3]*.001;k[N>>2]=x;up(u,0,m,0,N,0,a);if((n+-1|0)>>>0<6?(Xk(a,s,k[N>>2]|0),H=k[t>>2]|0,I=k[t+20>>2]|0,J=k[t+24>>2]|0,(H|0)>0):0){n=k[I>>2]|0;v=0;do{s=n+1|0;v=v+1|0;u=I+(v<<2)|0;n=k[u>>2]|0;if((s|0)<(n|0))do{if(M){n=J+(s<<2)|0;t=0;do{q=o*(+Hp()+-.5);W=(ha(k[n>>2]|0,a)|0)+t|0;W=(k[N>>2]|0)+(W<<3)|0;p[W>>3]=q+ +p[W>>3];t=t+1|0}while((t|0)!=(a|0));n=k[u>>2]|0}s=s+1|0}while((s|0)<(n|0))}while((v|0)!=(H|0))}vP(m);k[A>>2]=0;p[z>>3]=+p[z>>3]*.75;k[B>>2]=0;p[C>>3]=((k[(k[w+28>>2]|0)+40>>2]|0)+-9|0)>>>0<2?1.0:.1;s=w;m=x}if((u|0)==108)vP(m);else if((u|0)==122){sq(a,U,d,e,g,l);if(i[137280]|0){k[L>>2]=k[d+124>>2];FN(E,128741,L)|0}if((a|0)==2)Zk(Q,2,g);q=+p[d+152>>3];if(q!=0.0){if(M)IP(N|0,0,G|0)|0;t=(Q|0)>0;if(t){n=0;do{if(M){m=ha(n,a)|0;s=0;do{W=N+(s<<3)|0;p[W>>3]=+p[g+(s+m<<3)>>3]+ +p[W>>3];s=s+1|0}while((s|0)!=(a|0))}n=n+1|0}while((n|0)!=(Q|0))}if(M){o=+(Q|0);m=0;do{W=N+(m<<3)|0;p[W>>3]=+p[W>>3]/o;m=m+1|0}while((m|0)!=(a|0))}if(t){n=0;do{if(M){m=ha(n,a)|0;s=0;do{W=g+(s+m<<3)|0;p[W>>3]=+p[W>>3]-+p[N+(s<<3)>>3];s=s+1|0}while((s|0)!=(a|0))}n=n+1|0}while((n|0)!=(Q|0))}q=q*-.017453277777777776;o=+Z(+q);q=+_(+q);if(t){m=0;do{W=ha(m,a)|0;l=g+(W<<3)|0;X=+p[l>>3];W=g+(W+1<<3)|0;Y=+p[W>>3];p[l>>3]=o*X+q*Y;p[W>>3]=o*Y-q*X;m=m+1|0}while((m|0)!=(Q|0))}}Wn(a,U,g,f,k[d+124>>2]|0,+p[d+144>>3],k[T>>2]|0,h,j)}GP(d|0,S|0,168)|0;if((U|0)!=(b|0))jp(U);if(!((R|0)==0|(R|0)==(c|0)))jp(R);Up(O);Vp(P);break}J=a<<3;e=Cy(ha(J,k[U>>2]|0)|0)|0;K=U+20|0;F=k[K>>2]|0;L=U+24|0;G=k[L>>2]|0;H=Cy(k[U>>2]<<2)|0;m=k[U>>2]|0;if((m|0)>0){n=0;do{k[H+(n<<2)>>2]=1;n=n+1|0;m=k[U>>2]|0}while((n|0)<(m|0))}I=(h|0)>0;if(I){m=0;do{k[H+(k[j+(m<<2)>>2]<<2)>>2]=-1;m=m+1|0}while((m|0)!=(h|0));m=k[U>>2]|0}if((m|0)>0){t=0;s=0;do{n=H+(t<<2)|0;if((k[n>>2]|0)>0){k[n>>2]=s;m=k[U>>2]|0;s=s+1|0}t=t+1|0}while((t|0)<(m|0));if((m|0)>0){z=0;n=0;while(1){if((k[H+(z<<2)>>2]|0)>=0){u=k[F+(z<<2)>>2]|0;t=z+1|0;y=k[F+(t<<2)>>2]|0;if((u|0)<(y|0))do{v=k[G+(u<<2)>>2]|0;if((k[H+(v<<2)>>2]|0)<=-1){w=k[F+(v<<2)>>2]|0;x=k[F+(v+1<<2)>>2]|0;if((w|0)<(x|0))do{v=k[G+(w<<2)>>2]|0;if((v|0)!=(z|0))n=((k[H+(v<<2)>>2]|0)>>>31^1)+n|0;w=w+1|0}while((w|0)!=(x|0))}else n=n+1|0;u=u+1|0}while((u|0)!=(y|0))}else t=z+1|0;if((t|0)<(m|0))z=t;else break}if((n|0)>0){n=n<<2;t=Cy(n)|0;n=Cy(n)|0;m=k[U>>2]|0}else{t=0;n=0}if((m|0)>0){E=k[24528]|0;D=0;u=0;while(1){C=H+(D<<2)|0;if((k[C>>2]|0)>=0){w=k[F+(D<<2)>>2]|0;v=D+1|0;B=F+(v<<2)|0;if((w|0)<(k[B>>2]|0)){y=u;while(1){x=G+(w<<2)|0;m=k[x>>2]|0;do if((k[H+(m<<2)>>2]|0)<=-1){u=k[F+(m<<2)>>2]|0;A=F+(m+1<<2)|0;if((u|0)<(k[A>>2]|0)){z=u;x=y;while(1){y=G+(z<<2)|0;m=k[y>>2]|0;do if((m|0)==(D|0))u=x;else{if((k[H+(m<<2)>>2]|0)<=-1){u=x;break}k[t+(x<<2)>>2]=k[C>>2];u=x+1|0;k[n+(x<<2)>>2]=k[H+(k[y>>2]<<2)>>2];x=k[C>>2]|0;m=k[H+(k[y>>2]<<2)>>2]|0;if((x|0)!=68)if((m|0)==68)m=68;else break;k[O>>2]=x;k[O+4>>2]=m;FN(E,128671,O)|0}while(0);z=z+1|0;if((z|0)>=(k[A>>2]|0))break;else x=u}}else u=y}else{k[t+(y<<2)>>2]=k[C>>2];u=y+1|0;k[n+(y<<2)>>2]=k[H+(k[x>>2]<<2)>>2];y=k[C>>2]|0;m=k[H+(k[x>>2]<<2)>>2]|0;if((y|0)!=68)if((m|0)==68)m=68;else break;k[M>>2]=y;k[M+4>>2]=m;FN(E,128660,M)|0}while(0);w=w+1|0;if((w|0)>=(k[B>>2]|0))break;else y=u}m=k[U>>2]|0}}else v=D+1|0;if((v|0)<(m|0))D=v;else{m=u;break}}}else m=0}else{t=0;n=0;m=0}}else{s=0;t=0;n=0;m=0}A=tp(m,s,s,t,n,0,8,8)|0;vP(t);vP(n);vP(H);_k(a,A,0,d,0,0,e,0,0,l);z=Cy(k[U>>2]<<2)|0;m=k[U>>2]|0;if((m|0)>0){n=0;do{k[z+(n<<2)>>2]=1;n=n+1|0;m=k[U>>2]|0}while((n|0)<(m|0))}if(I){n=0;do{m=k[j+(n<<2)>>2]|0;if((m|0)>-1?(m|0)<(k[U>>2]|0):0)k[z+(m<<2)>>2]=-1;n=n+1|0}while((n|0)!=(h|0));m=k[U>>2]|0}if((m|0)>0){t=0;s=0;while(1){n=z+(t<<2)|0;if((k[n>>2]|0)>-1){k[n>>2]=s;m=k[U>>2]|0;n=s+1|0}else n=s;t=t+1|0;if((t|0)>=(m|0))break;else s=n}if((m|0)>0){u=0;do{n=k[z+(u<<2)>>2]|0;if((n|0)>=0){n=ha(n,a)|0;s=ha(u,a)|0;t=0;do{p[g+(t+s<<3)>>3]=+p[e+(t+n<<3)>>3];t=t+1|0}while((t|0)!=(a|0))}u=u+1|0}while((u|0)!=(m|0))}}if(I){w=k[K>>2]|0;x=(a|0)>0;y=0;do{v=k[j+(y<<2)>>2]|0;u=v+1|0;t=w+(u<<2)|0;m=k[t>>2]|0;n=w+(v<<2)|0;s=k[n>>2]|0;o=+(m-s|0);if(x){IP(g+((ha(v,a)|0)<<3)|0,0,J|0)|0;s=k[n>>2]|0;m=k[t>>2]|0}if((s|0)<(m|0)){t=k[(k[K>>2]|0)+(u<<2)>>2]|0;u=ha(v,a)|0;do{if(x){m=ha(k[(k[L>>2]|0)+(s<<2)>>2]|0,a)|0;n=0;do{W=g+(n+u<<3)|0;p[W>>3]=+p[g+(n+m<<3)>>3]+ +p[W>>3];n=n+1|0}while((n|0)!=(a|0))}s=s+1|0}while((s|0)<(t|0))}if(x){m=ha(v,a)|0;n=0;do{W=g+(n+m<<3)|0;p[W>>3]=+p[W>>3]/o;n=n+1|0}while((n|0)!=(a|0))}y=y+1|0}while((y|0)!=(h|0))}vP(z);Wn(a,U,g,f,k[d+124>>2]|0,+p[d+144>>3],k[T>>2]|0,h,j);jp(A);vP(e);if((U|0)!=(b|0))jp(U)}while(0);r=V;return}function $k(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0.0,i=0,j=0,l=0.0,m=0.0,n=0,o=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0.0;s=k[b>>2]|0;t=k[b+20>>2]|0;r=k[b+24>>2]|0;w=Cy(s<<2)|0;d=Cy(80)|0;b=Cy(40)|0;if((s|0)>0){IP(w|0,0,s<<2|0)|0;g=10;i=10;e=0;while(1){f=k[t+(e<<2)>>2]|0;if((((k[t+(e+1<<2)>>2]|0)-f|0)==1?(k[w+(e<<2)>>2]|0)==0:0)?(u=k[r+(f<<2)>>2]|0,v=w+(u<<2)|0,(k[v>>2]|0)==0):0){k[v>>2]=1;e=k[t+(u<<2)>>2]|0;q=t+(u+1<<2)|0;if((e|0)<(k[q>>2]|0)){n=i;h=0.0;o=e;f=0;e=0;do{j=r+(o<<2)|0;i=k[j>>2]|0;if(((k[t+(i+1<<2)>>2]|0)-(k[t+(i<<2)>>2]|0)|0)==1){k[w+(i<<2)>>2]=1;if((g|0)<=(e|0)){i=e+10|0;g=i;b=Ey(b,i<<2)|0}h=h+ +Pp(c,a,u,k[j>>2]|0);k[b+(e<<2)>>2]=k[j>>2];e=e+1|0}else{if((n|0)<=(f|0)){n=f+10|0;d=Ey(d,n<<3)|0;i=k[j>>2]|0}m=+Qk(c,a,u,i);p[d+(f<<3)>>3]=m;f=f+1|0}o=o+1|0}while((o|0)<(k[q>>2]|0));m=h/+(e|0);if((f|0)>0)dO(d,f,8,69);l=(e|0)>1?6.283185307179586/+(e+-1|0):0.0;if((e|0)>0){i=ha(u,a)|0;f=c+(i<<3)|0;i=c+(i+1<<3)|0;h=0.0;j=0;while(1){x=m*+Z(+h);q=ha(k[b+(j<<2)>>2]|0,a)|0;p[c+(q<<3)>>3]=x+ +p[f>>3];x=m*+_(+h);p[c+(q+1<<3)>>3]=x+ +p[i>>3];j=j+1|0;if((j|0)==(e|0)){f=n;break}else h=l+h}}else{f=n;e=0}}else{f=i;e=0}}else f=i;e=e+1|0;if((e|0)>=(s|0))break;else i=f}}vP(w);vP(d);vP(b);return}function al(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=+f;g=g|0;var h=0,i=0,j=0,l=0;l=(mp(b,0)|0)==0;h=(k[b+16>>2]|0)==1;if(l)if(h)h=qp(kp(b,0)|0)|0;else i=5;else if(h)h=b;else i=5;if((i|0)==5)h=Bp(b)|0;l=qp(h)|0;k[g>>2]=0;i=k[l>>2]|0;if(!c){Cy(ha(a<<3,i)|0)|0;Gb()}h=k[c>>2]|0;if(!d)j=kq(l,a,0.0,h,0,1)|0;else j=kq(l,a,0.0,h,2,1)|0;if(!j)k[g>>2]=-1;else{p[j+40>>3]=.1;k[j+24>>2]=5;+mq(j,a,k[c>>2]|0,e,f);d=ha(i,a)|0;if((d|0)>0){a=j+32|0;h=k[c>>2]|0;i=0;do{c=h+(i<<3)|0;p[c>>3]=+p[c>>3]/+p[a>>3];i=i+1|0}while((i|0)!=(d|0))}lq(j)}if((l|0)!=(b|0))jp(l);return}function bl(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=+g;h=h|0;al(a,c,d,e,f,g,h);return}function cl(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=+e;f=f|0;var g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0.0;u=k[b>>2]|0;v=k[b+20>>2]|0;w=k[b+24>>2]|0;x=k[b+28>>2]|0;if(!(mp(b,0)|0))Wa(131972,128759,37,128776);a=Cy(56)|0;j=a+20|0;k[j>>2]=0;k[a+24>>2]=2;k[a+12>>2]=0;s=Cy(16)|0;k[j>>2]=s;p[s>>3]=d;p[s+8>>3]=e;k[a+16>>2]=95;p[a+40>>3]=.01;s=~~+X(+(+(k[b>>2]|0)));k[a+48>>2]=s;s=b+8|0;j=lp(u,u,(k[s>>2]|0)+u|0,1,1)|0;t=a+4|0;k[t>>2]=j;s=lp(u,u,(k[s>>2]|0)+u|0,1,1)|0;k[a+8>>2]=s;t=k[t>>2]|0;j=k[t+28>>2]|0;l=k[s+28>>2]|0;if((s|0)==0|(t|0)==0){jq(a);a=0}else{m=k[t+20>>2]|0;n=k[t+24>>2]|0;o=k[s+20>>2]|0;q=k[s+24>>2]|0;k[o>>2]=0;k[m>>2]=0;if((u|0)>0){r=0;f=0;do{b=k[v+(r<<2)>>2]|0;i=r;r=r+1|0;h=v+(r<<2)|0;c=k[h>>2]|0;if((b|0)<(c|0)){d=0.0;e=0.0;do{g=k[w+(b<<2)>>2]|0;if((g|0)!=(i|0)){y=+p[x+(b<<3)>>3];y=y>=0.0?y:-y;y=y>.01?y:.01;k[n+(f<<2)>>2]=g;k[q+(f<<2)>>2]=g;g=j+(f<<3)|0;p[g>>3]=-1.0;p[l+(f<<3)>>3]=-y;c=k[h>>2]|0;d=d-y;e=e+ +p[g>>3];f=f+1|0}b=b+1|0}while((b|0)<(c|0))}else{d=0.0;e=0.0}k[n+(f<<2)>>2]=i;k[q+(f<<2)>>2]=i;p[j+(f<<3)>>3]=-e;p[l+(f<<3)>>3]=-d;f=f+1|0;k[m+(r<<2)>>2]=f;k[o+(r<<2)>>2]=f}while((r|0)!=(u|0))}else f=0;k[t+8>>2]=f;k[s+8>>2]=f}return a|0}function dl(a,b){a=a|0;b=+b;var c=0,d=0,e=0,f=0;if((k[a+16>>2]|0)==1)c=kp(a,0)|0;else c=Bp(a)|0;a=k[c+28>>2]|0;if(b!=1.0?(e=k[c+8>>2]|0,(e|0)>0):0){d=0;do{f=a+(d<<3)|0;p[f>>3]=+p[f>>3]*b;d=d+1|0}while((d|0)<(e|0))}return c|0}function el(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0.0;i=k[b>>2]|0;k[d>>2]=0;l=ha(i,a)|0;j=(l|0)>0;if(j){d=0;do{n=+Hp()*100.0;p[c+(d<<3)>>3]=n;d=d+1|0}while((d|0)!=(l|0))}if((i|0)>1){h=(a|0)>0;e=1;d=1;do{a:do if(h){f=ha(e,a)|0;g=0;do{n=+p[c+(g<<3)>>3]-+p[c+(g+f<<3)>>3];g=g+1|0;if((n>=0.0?n:-n)>1.0e-16){e=i;d=0;break a}}while((g|0)<(a|0))}while(0);e=e+1|0}while((e|0)<(i|0));if(d)m=11}else m=11;if((m|0)==11?($M(1),j):0){d=0;do{n=+Hp()*100.0;p[c+(d<<3)>>3]=n;d=d+1|0}while((d|0)!=(l|0))}d=dl(b,1.0)|0;if(!(mp(d,0)|0))Wa(128802,128759,164,128838);else{m=cl(0,d,0,101.0e5,100.0,0)|0;+nq(m,a,c,300,.001);jq(m);m=cl(0,d,0,101.0e3,100.0,0)|0;+nq(m,a,c,300,.001);jq(m);m=cl(0,d,0,1010.0,100.0,0)|0;+nq(m,a,c,300,.001);jq(m);m=cl(0,d,0,10.1,100.0,0)|0;+nq(m,a,c,300,.001);jq(m);Rp(0.0,0.0,490.0,700.0,k[b>>2]|0,a,c);jp(d);return}}function fl(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0.0,h=0.0,i=0,j=0,l=0;i=Cy((Zs(a)|0)<<4)|0;e=Kt(a)|0;f=(d|0)!=0;if(e){h=+p[b>>3];g=+p[b+8>>3];b=0;do{if(f)b=((wO(ht(e)|0,128853,11)|0)==0&1)+b|0;l=k[e+8>>2]|0;j=k[l+120>>2]<<1;p[i+(j<<3)>>3]=+p[l+32>>3]*.5+h;p[i+((j|1)<<3)>>3]=+p[l+40>>3]*.5+g;e=Lt(a,e)|0}while((e|0)!=0);if(f&(b|0)!=0){f=Cy(b<<2)|0;b=Kt(a)|0;if(!b)b=0;else{e=b;b=0;do{if(!(wO(ht(e)|0,128853,11)|0)){k[f+(b<<2)>>2]=k[(k[e+8>>2]|0)+120>>2];b=b+1|0}e=Lt(a,e)|0}while((e|0)!=0)}k[d>>2]=f;k[c>>2]=b}}return i|0}function gl(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0.0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;y=r;r=r+32|0;v=y+16|0;u=y+8|0;t=y;if(a){w=Zs(a)|0;x=_s(a)|0;b=Kt(a)|0;if(b){d=0;while(1){k[(k[b+8>>2]|0)+120>>2]=d;b=Lt(a,b)|0;if(!b)break;else d=d+1|0}}o=x<<2;n=Cy(o)|0;o=Cy(o)|0;b=x<<3;q=Cy(b)|0;j=ks(a,2,137781,0)|0;s=(c|0)!=0;if(s){l=ks(a,2,128865,0)|0;m=By(b)|0}else{l=0;m=0}b=Kt(a)|0;if(b){h=(j|0)==0;i=(l|0)==0;d=0;do{g=k[(k[b+8>>2]|0)+120>>2]|0;e=Es(a,b)|0;if(e)do{k[n+(d<<2)>>2]=g;k[o+(d<<2)>>2]=k[(k[(k[((k[e>>2]&3|0)==2?e:e+-32|0)+28>>2]|0)+8>>2]|0)+120>>2];if(!h?(z=ts(e,j)|0,k[u>>2]=t,(UN(z,137283,u)|0)==1):0)f=+p[t>>3];else{p[t>>3]=1.0;f=1.0}p[q+(d<<3)>>3]=f;if(!i){z=ts(e,l)|0;k[v>>2]=t;if((UN(z,137283,v)|0)==1)f=+p[t>>3];else{p[t>>3]=1.0;f=1.0}p[m+(d<<3)>>3]=f}d=d+1|0;e=Gs(a,e)|0}while((e|0)!=0);b=Lt(a,b)|0}while((b|0)!=0)}b=tp(x,w,w,n,o,q,1,8)|0;if(s){z=tp(x,w,w,n,o,m,1,8)|0;k[c>>2]=z}vP(n);vP(o);vP(q);if(m)vP(m)}else b=0;r=y;return b|0}function hl(a){a=a|0;var b=0,c=0.0,d=0,e=0,f=0.0,g=0.0,h=0.0,j=0.0,l=0,m=0,n=0,o=0.0;m=r;r=r+16|0;d=m;b=ss(a,128869)|0;a:do if((b|0)!=0?(i[b>>0]|0)!=0:0){c=+eO(b,d);if((k[d>>2]|0)==(b|0))if(!((oB(b)|0)<<24>>24)){l=9;break}else c=0.0;else{if(c>180.0)do c=c+-360.0;while(c>180.0);if(c<=-180.0)do c=c+360.0;while(c<=-180.0)}j=c/180.0*3.141592653589793;b=(Kt(a)|0)+8|0;b=k[(k[b>>2]|0)+132>>2]|0;c=+p[b>>3];f=+p[b+8>>3];b=Kt(a)|0;if(b)do{e=k[(k[b+8>>2]|0)+132>>2]|0;p[e>>3]=+p[e>>3]-c;e=e+8|0;p[e>>3]=+p[e>>3]-f;b=Lt(a,b)|0}while((b|0)!=0);b=(c!=0.0|f!=0.0)&1;d=Kt(a)|0;if(d){e=d;while(1){d=Es(a,e)|0;if(d)break;e=Lt(a,e)|0;if(!e)break a}n=k[d>>2]&3;e=k[(k[(k[((n|0)==2?d:d+-32|0)+28>>2]|0)+8>>2]|0)+132>>2]|0;d=k[(k[(k[((n|0)==3?d:d+32|0)+28>>2]|0)+8>>2]|0)+132>>2]|0;g=+p[d+8>>3];h=+p[d>>3];c=j-+da(+(+p[e+8>>3]-g),+(+p[e>>3]-h));if(c!=0.0){f=+Z(+c);c=+_(+c);b=Kt(a)|0;if(!b)b=1;else{do{e=k[(k[b+8>>2]|0)+132>>2]|0;o=+p[e>>3]-h;n=e+8|0;j=+p[n>>3]-g;p[e>>3]=h+(f*o-c*j);p[n>>3]=g+(c*o+f*j);b=Lt(a,b)|0}while((b|0)!=0);b=1}}}}else l=9;while(0);if((l|0)==9)b=0;r=m;return b|0}function il(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=ss(a,128879)|0;return ol(a,(d|0)==0?((c|0)!=0?c:176676):d,b)|0}
function ug(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0;y=r;r=r+16|0;w=y;x=(k[12383]|0)+8|0;a=k[x>>2]|0;b=j[a+236>>1]|0;if(b<<16>>16<(j[a+238>>1]|0)){e=a;a=0;v=b<<16>>16;while(1){c=k[e+196>>2]|0;if(!(i[c+(v<<6)+49>>0]|0)){s=k[c+(v<<6)+4>>2]|0;d=v+1|0;b=k[(k[(k[(k[12383]|0)+8>>2]|0)+196>>2]|0)+(d<<6)>>2]|0;if((k[12389]|0)>(b|0)){b=e;u=c}else{b=b+1|0;k[12389]=b;c=k[12390]|0;if(!c)b=Cy(b<<2)|0;else b=Ey(c,b<<2)|0;k[12390]=b;u=k[x>>2]|0;b=u;u=k[u+196>>2]|0}t=u+(d<<6)|0;if((k[t>>2]|0)>0){c=k[12390]|0;e=0;do{k[c+(e<<2)>>2]=0;e=e+1|0}while((e|0)<(k[t>>2]|0))}q=u+(v<<6)|0;c=k[q>>2]|0;if((c|0)>0){h=c;c=0;e=0;p=0;do{o=k[(k[(k[s+(p<<2)>>2]|0)+8>>2]|0)+180>>2]|0;f=k[o>>2]|0;if((e|0)>0){if(f){n=k[12390]|0;l=f;m=0;do{g=k[(k[(k[((k[l>>2]&3|0)==2?l:l+-32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0;if((g|0)<(e|0)){l=j[(k[l+8>>2]|0)+154>>1]|0;do{g=g+1|0;c=(ha(k[n+(g<<2)>>2]|0,l)|0)+c|0}while((g|0)!=(e|0))}m=m+1|0;l=k[o+(m<<2)>>2]|0}while((l|0)!=0);l=23}}else l=23;if((l|0)==23){l=0;if(f){h=k[12390]|0;g=0;do{n=k[(k[(k[((k[f>>2]&3|0)==2?f:f+-32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0;e=(n|0)>(e|0)?n:e;n=h+(n<<2)|0;k[n>>2]=(k[n>>2]|0)+(j[(k[f+8>>2]|0)+154>>1]|0);g=g+1|0;f=k[o+(g<<2)>>2]|0}while((f|0)!=0);h=k[q>>2]|0}}p=p+1|0}while((p|0)<(h|0));if((h|0)>0){g=k[u+(v<<6)+4>>2]|0;f=0;do{e=k[(k[g+(f<<2)>>2]|0)+8>>2]|0;if(i[e+145>>0]|0){s=e+180|0;k[w>>2]=k[s>>2];k[w+4>>2]=k[s+4>>2];c=(Cg(w,1)|0)+c|0}f=f+1|0}while((f|0)!=(h|0))}}else c=0;g=k[t>>2]|0;if((g|0)>0){f=k[u+(d<<6)+4>>2]|0;h=0;do{e=k[(k[f+(h<<2)>>2]|0)+8>>2]|0;if(i[e+145>>0]|0){t=e+172|0;k[w>>2]=k[t>>2];k[w+4>>2]=k[t+4>>2];c=(Cg(w,-1)|0)+c|0}h=h+1|0}while((h|0)!=(g|0))}k[u+(v<<6)+52>>2]=c;i[u+(v<<6)+49>>0]=1}else{c=k[c+(v<<6)+52>>2]|0;d=v+1|0;b=e}a=c+a|0;if((d|0)<(j[b+238>>1]|0)){e=b;v=d}else break}}else a=0;r=y;return a|0}function vg(a){a=a|0;var b=0,c=0,d=0;c=k[a>>2]&3;b=k[(k[((c|0)==2?a:a+-32|0)+28>>2]|0)+8>>2]|0;if((i[b+156>>0]|0)==1)d=2;else d=(i[b+160>>0]|0)<2&1;b=k[(k[((c|0)==3?a:a+32|0)+28>>2]|0)+8>>2]|0;if((i[b+156>>0]|0)==1)b=2;else b=(i[b+160>>0]|0)<2&1;a=(k[a+8>>2]|0)+156|0;d=ha(k[a>>2]|0,k[49564+(b*12|0)+(d<<2)>>2]|0)|0;k[a>>2]=d;return}function wg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;i=a+8|0;e=k[i>>2]|0;if((k[e+180>>2]|0)>=1){f=1;while(1){d=wg(k[(k[e+184>>2]|0)+(f<<2)>>2]|0,b,c,d)|0;e=k[i>>2]|0;if((f|0)>=(k[e+180>>2]|0))break;else f=f+1|0}}if((rf(a)|0)!=(a|0)){IP(b|0,0,c<<2|0)|0;e=Kt(a)|0;if(e)do{h=e+8|0;k[b+(k[(k[h>>2]|0)+232>>2]<<2)>>2]=1;f=Es(a,e)|0;if(f)do{c=k[(k[h>>2]|0)+232>>2]|0;g=f+-32|0;if((c|0)<(k[(k[(k[((k[f>>2]&3|0)==2?f:g)+28>>2]|0)+8>>2]|0)+232>>2]|0))do{c=c+1|0;k[b+(c<<2)>>2]=1}while((c|0)<(k[(k[(k[((k[f>>2]&3|0)==2?f:g)+28>>2]|0)+8>>2]|0)+232>>2]|0));f=Gs(a,f)|0}while((f|0)!=0);e=Lt(a,e)|0}while((e|0)!=0);e=k[i>>2]|0;f=j[e+236>>1]|0;if(f<<16>>16<=(j[e+238>>1]|0)){f=f<<16>>16;while(1){if(!(k[b+(f<<2)>>2]|0)){if(!d)d=Hu(rf(a)|0,122793,1)|0;e=Qt(d,0,1)|0;qu(e,173424,304,1)|0;h=e+8|0;c=k[h>>2]|0;k[c+232>>2]=f;p[c+96>>3]=.5;p[c+88>>3]=.5;p[c+80>>3]=1.0;k[c+216>>2]=1;k[c+176>>2]=0;c=By(20)|0;g=k[h>>2]|0;k[g+172>>2]=c;k[g+184>>2]=0;g=By(20)|0;k[(k[h>>2]|0)+180>>2]=g;Pt(a,e,1)|0;e=k[i>>2]|0}if((f|0)<(j[e+238>>1]|0))f=f+1|0;else break}}}return d|0}function xg(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;f=r;r=r+16|0;e=f+8|0;d=f;b=k[13614]|0;a:do if((b|0)!=0|(k[13643]|0)!=0){b=lB(a,b,0)|0;if(b){switch(i[b>>0]|0){case 0:break a;case 111:{if(!(qO(b,122713)|0)){Qg(a,1);break a}break}case 105:{if(!(qO(b,134770)|0)){Qg(a,0);break a}break}default:{}}k[d>>2]=b;Yr(1,122717,d)|0;break}b=Iu(a)|0;if(b)do{if(!(ph(b)|0))xg(b);b=Ju(b)|0}while((b|0)!=0);if((k[13643]|0)!=0?(c=Kt(a)|0,(c|0)!=0):0)do{b=lB(c,k[13643]|0,0)|0;b:do if(b){switch(i[b>>0]|0){case 0:break b;case 111:{if(!(qO(b,122713)|0)){Rg(a,c,1);break b}break}case 105:{if(!(qO(b,134770)|0)){Rg(a,c,0);break b}break}default:{}}d=ht(c)|0;k[e>>2]=b;k[e+4>>2]=d;Yr(1,122748,e)|0}while(0);c=Lt(a,c)|0}while((c|0)!=0)}while(0);r=f;return}function yg(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,m=0.0,n=0,o=0,q=0,s=0,t=0,u=0.0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0;N=r;r=r+32|0;L=N;if((b|0)>1){f=ug(0)|0;d=k[(k[a+8>>2]|0)+192>>2]|0;if(d)do{J=k[d+8>>2]|0;p[J+16>>3]=+(k[J+236>>2]|0);d=k[J+164>>2]|0}while((d|0)!=0);if((b|0)<3)y=5;else{e=f;d=f;f=0}}else{f=2147483647;y=5}a:do if((y|0)==5){I=a+8|0;J=k[24528]|0;e=f;d=f;H=b;while(1){f=k[13603]|0;if((H|0)<2){f=(f|0)>4?4:f;if((rf(a)|0)==(a|0))sg(a,H);if(!H)Hg(a);Ig(a);d=ug(0)|0;if((d|0)<=(e|0)){e=k[(k[I>>2]|0)+192>>2]|0;if(!e)b=d;else{do{G=k[e+8>>2]|0;p[G+16>>3]=+(k[G+236>>2]|0);e=k[G+164>>2]|0}while((e|0)!=0);b=d}}else b=e}else if((d|0)>(e|0)){Ng(a);b=e;d=e}else{b=e;d=e}b:do if((f|0)>0){e=b;G=0;b=0;while(1){if(i[137280]|0){k[L>>2]=H;k[L+4>>2]=G;k[L+8>>2]=b;k[L+12>>2]=d;k[L+16>>2]=e;FN(J,122641,L)|0}F=b+1|0;if((d|0)==0|(b|0)>=(k[12386]|0))break b;D=((G|0)%4|0|0)<2;C=D&1;b=k[I>>2]|0;d=j[b+236>>1]|0;if(!(G&1)){E=1;g=(d<<16>>16<=(j[(k[(k[12383]|0)+8>>2]|0)+236>>1]|0)&1)+(d<<16>>16)|0;d=j[b+238>>1]|0}else{g=j[b+238>>1]|0;E=-1;g=((g<<16>>16>=(j[(k[(k[12383]|0)+8>>2]|0)+238>>1]|0))<<31>>31)+(g<<16>>16)|0;d=d<<16>>16}A=E+d|0;c:do if((g|0)!=(A|0)){B=(E|0)<0;d=g;while(1){w=k[12385]|0;z=k[b+196>>2]|0;x=k[z+(d<<6)+4>>2]|0;if((k[z+(d<<6)>>2]|0)>0){t=w+4|0;v=0;while(1){s=(k[x+(v<<2)>>2]|0)+8|0;q=k[s>>2]|0;if(B){o=k[q+180>>2]|0;b=k[o>>2]|0;if(!b)y=39;else{g=0;n=0;do{h=k[b+8>>2]|0;if((j[h+154>>1]|0)>0){k[w+(g<<2)>>2]=l[h+88>>0]|k[(k[(k[((k[b>>2]&3|0)==2?b:b+-32|0)+28>>2]|0)+8>>2]|0)+236>>2]<<8;g=g+1|0}n=n+1|0;b=k[o+(n<<2)>>2]|0}while((b|0)!=0);y=38}}else{o=k[q+172>>2]|0;b=k[o>>2]|0;if(!b)y=39;else{g=0;n=0;do{h=k[b+8>>2]|0;if((j[h+154>>1]|0)>0){k[w+(g<<2)>>2]=l[h+48>>0]|k[(k[(k[((k[b>>2]&3|0)==3?b:b+32|0)+28>>2]|0)+8>>2]|0)+236>>2]<<8;g=g+1|0}n=n+1|0;b=k[o+(n<<2)>>2]|0}while((b|0)!=0);y=38}}d:do if((y|0)==38){y=0;switch(g|0){case 0:{y=39;break d}case 1:{p[q+240>>3]=+(k[w>>2]|0);break d}case 2:{p[q+240>>3]=+(((k[t>>2]|0)+(k[w>>2]|0)|0)/2|0|0);break d}default:{dO(w,g,4,60);b=(g|0)/2|0;if(g&1){p[(k[s>>2]|0)+240>>3]=+(k[w+(b<<2)>>2]|0);break d}n=k[w+(b<<2)>>2]|0;h=(k[w+(g+-1<<2)>>2]|0)-n|0;b=k[w+(b+-1<<2)>>2]|0;g=b-(k[w>>2]|0)|0;if((g|0)==(h|0)){p[(k[s>>2]|0)+240>>3]=+((b+n|0)/2|0|0);break d}else{u=+(((ha(g,n)|0)+(ha(b,h)|0)|0)/(g+h|0)|0|0);p[(k[s>>2]|0)+240>>3]=u;break d}}}}while(0);if((y|0)==39)p[q+240>>3]=-1.0;v=v+1|0;b=k[(k[I>>2]|0)+196>>2]|0;g=k[b+(d<<6)>>2]|0;if((v|0)>=(g|0)){t=b;v=g;break}}if((v|0)>0){b=0;s=0;do{q=k[(k[x+(s<<2)>>2]|0)+8>>2]|0;if((k[q+184>>2]|0)==0?(k[q+176>>2]|0)==0:0){do if((k[q+200>>2]|0)>0){o=k[q+196>>2]|0;g=k[o>>2]|0;g=k[((k[g>>2]&3|0)==3?g:g+32|0)+28>>2]|0;h=k[o+4>>2]|0;if(h){n=1;do{z=k[((k[h>>2]&3|0)==3?h:h+32|0)+28>>2]|0;g=(k[(k[z+8>>2]|0)+236>>2]|0)>(k[(k[g+8>>2]|0)+236>>2]|0)?z:g;n=n+1|0;h=k[o+(n<<2)>>2]|0}while((h|0)!=0)}m=+p[(k[g+8>>2]|0)+240>>3];if(!(m>=0.0)){g=1;break}p[q+240>>3]=m+1.0;g=0}else{if((k[q+192>>2]|0)<=0){g=1;break}o=k[q+188>>2]|0;g=k[o>>2]|0;g=k[((k[g>>2]&3|0)==2?g:g+-32|0)+28>>2]|0;h=k[o+4>>2]|0;if(h){n=1;do{z=k[((k[h>>2]&3|0)==2?h:h+-32|0)+28>>2]|0;g=(k[(k[z+8>>2]|0)+236>>2]|0)<(k[(k[g+8>>2]|0)+236>>2]|0)?z:g;n=n+1|0;h=k[o+(n<<2)>>2]|0}while((h|0)!=0)}m=+p[(k[g+8>>2]|0)+240>>3];if(!(m>0.0)){g=1;break}p[q+240>>3]=m+-1.0;g=0}while(0);b=(g|b&255)&255}s=s+1|0}while((s|0)!=(v|0));z=k[t+(d<<6)+4>>2]|0;w=(b&255|C|0)==0;b=0;x=z+(v<<2)|0;while(1){t=v;v=v+-1|0;e:do if(z>>>0<x>>>0){g=z;while(1){f:while(1){n=k[g>>2]|0;h=k[n+8>>2]|0;u=+p[h+240>>3];if(u<0.0){g=g+4|0;if(g>>>0<x>>>0)continue;else break e}s=0;while(1){q=s<<24>>24==0;while(1){g=g+4|0;if(g>>>0>=x>>>0)break e;if(q){y=70;break}o=k[g>>2]|0;if(!(k[(k[o+8>>2]|0)+212>>2]|0)){q=o;y=72;break}}if((y|0)==70){q=k[g>>2]|0;o=q}else if((y|0)==72)o=q;if(Dg(a,n,o)|0)continue f;q=k[q+8>>2]|0;m=+p[q+240>>3];if(m>=0.0)break;s=(k[q+212>>2]|0)==0?s:1}s=~~u;y=~~m;if((s|0)>(y|0)|D&(s|0)==(y|0))break}s=k[h+232>>2]|0;O=h+236|0;y=k[O>>2]|0;q=o+8|0;h=k[(k[q>>2]|0)+236>>2]|0;k[O>>2]=h;k[(k[(k[(k[(k[12383]|0)+8>>2]|0)+196>>2]|0)+(s<<6)+4>>2]|0)+(h<<2)>>2]=n;k[(k[q>>2]|0)+236>>2]=y;k[(k[(k[(k[(k[12383]|0)+8>>2]|0)+196>>2]|0)+(s<<6)+4>>2]|0)+(y<<2)>>2]=o;b=b+1|0}}while(0);if((t|0)<=1)break;else x=w?x+-4|0:x}if((b|0)!=0?(K=k[(k[(k[12383]|0)+8>>2]|0)+196>>2]|0,i[K+(d<<6)+49>>0]=0,(d|0)>0):0)i[K+(d+-1<<6)+49>>0]=0}}d=d+E|0;if((d|0)==(A|0))break c;b=k[I>>2]|0}}while(0);Bg(a,C^1);d=ug(0)|0;if((d|0)>(e|0)){g=e;b=F}else{b=k[(k[I>>2]|0)+192>>2]|0;if(b)do{O=k[b+8>>2]|0;p[O+16>>3]=+(k[O+236>>2]|0);b=k[O+164>>2]|0}while((b|0)!=0);g=d;b=+(d|0)<+(e|0)*+p[4138]?0:F}G=G+1|0;if((G|0)>=(f|0)){e=g;break}else e=g}}else e=b;while(0);H=H+1|0;if(!d){d=0;break a}if((H|0)>=3)break}}while(0);if((d|0)>(e|0))Ng(a);if((e|0)>0){Bg(a,0);K=ug(0)|0}else K=e;g:do if((c|0)!=0&(f|0)>0){I=a+8|0;d=k[I>>2]|0;J=0;h:while(1){e=j[d+238>>1]|0;if(e<<16>>16>=(j[d+236>>1]|0)){h=d;H=e<<16>>16;while(1){e=k[h+196>>2]|0;i[e+(H<<6)+48>>0]=0;b=k[e+(H<<6)>>2]|0;if((b|0)>1){F=(H|0)>0;G=H+1|0;g=e;e=h;E=0;do{q=k[g+(H<<6)+4>>2]|0;A=k[q+(E<<2)>>2]|0;E=E+1|0;B=k[q+(E<<2)>>2]|0;C=A+8|0;v=k[C>>2]|0;w=v+236|0;x=k[w>>2]|0;D=B+8|0;o=k[D>>2]|0;y=k[o+236>>2]|0;if((x|0)>=(y|0))break h;do if(!(Dg(a,A,B)|0)){if(F){h=Eg(A,B)|0;n=Eg(B,A)|0}else{h=0;n=0}if((k[g+(G<<6)>>2]|0)>0){h=(Fg(A,B)|0)+h|0;n=(Fg(B,A)|0)+n|0}if((n|0)<=(h|0)?(M=i[v+156>>0]|0,M<<24>>24!=(i[o+156>>0]|0)):0){if((b|0)>0){e=0;d=0;g=0;do{O=(i[(k[(k[q+(g<<2)>>2]|0)+8>>2]|0)+156>>0]|0)==0&1;e=(O^1)+e|0;d=O+d|0;g=g+1|0}while((g|0)!=(b|0));g=M<<24>>24==0;g=(d|0)<(e|0)?(g?A:B):g?B:A;e=0;d=0;do{d=(k[q+(e<<2)>>2]|0)==(g|0)?e:d;e=e+1|0}while((e|0)!=(b|0));n=g}else{n=M<<24>>24==0?B:A;d=0}z=(i[(k[n+8>>2]|0)+156>>0]|0)==0&1;i:do if((d|0)>0){g=d;e=0;while(1){h=g;g=g+-1|0;if((i[(k[(k[q+(g<<2)>>2]|0)+8>>2]|0)+156>>0]|0)!=(z|0)){t=e;break i}e=e+1|0;if((h|0)<=1){t=e;break}}}else t=0;while(0);e=d+1|0;j:do if((e|0)<(b|0)){g=0;while(1){if((i[(k[(k[q+(e<<2)>>2]|0)+8>>2]|0)+156>>0]|0)!=(z|0)){s=g;break j}g=g+1|0;e=e+1|0;if((e|0)>=(b|0)){s=g;break}}}else s=0;while(0);q=k[v+232>>2]|0;k[w>>2]=y;k[(k[(k[(k[(k[12383]|0)+8>>2]|0)+196>>2]|0)+(q<<6)+4>>2]|0)+(y<<2)>>2]=A;k[(k[D>>2]|0)+236>>2]=x;k[(k[(k[(k[(k[12383]|0)+8>>2]|0)+196>>2]|0)+(q<<6)+4>>2]|0)+(x<<2)>>2]=B;q=k[I>>2]|0;g=k[q+196>>2]|0;b=k[g+(H<<6)>>2]|0;if((b|0)>0){e=k[g+(H<<6)+4>>2]|0;h=0;do{d=(k[e+(h<<2)>>2]|0)==(n|0)?h:d;h=h+1|0}while((h|0)!=(b|0))}k:do if((d|0)>0){h=k[g+(H<<6)+4>>2]|0;n=d;e=0;do{o=n;n=n+-1|0;if((i[(k[(k[h+(n<<2)>>2]|0)+8>>2]|0)+156>>0]|0)!=(z|0))break k;e=e+1|0}while((o|0)>1)}else e=0;while(0);d=d+1|0;l:do if((d|0)<(b|0)){n=k[g+(H<<6)+4>>2]|0;h=d;d=0;do{if((i[(k[(k[n+(h<<2)>>2]|0)+8>>2]|0)+156>>0]|0)!=(z|0))break l;d=d+1|0;h=h+1|0}while((h|0)<(b|0))}else d=0;while(0);c=e-d|0;O=t-s|0;if((((c|0)>-1?c:0-c|0)|0)<=(((O|0)>-1?O:0-O|0)|0)){d=q;e=q;break}d=k[C>>2]|0;g=k[d+232>>2]|0;d=d+236|0;e=k[d>>2]|0;b=k[(k[D>>2]|0)+236>>2]|0;k[d>>2]=b;k[(k[(k[(k[(k[12383]|0)+8>>2]|0)+196>>2]|0)+(g<<6)+4>>2]|0)+(b<<2)>>2]=A;k[(k[D>>2]|0)+236>>2]=e;k[(k[(k[(k[(k[12383]|0)+8>>2]|0)+196>>2]|0)+(g<<6)+4>>2]|0)+(e<<2)>>2]=B;e=k[I>>2]|0;g=k[e+196>>2]|0;b=k[g+(H<<6)>>2]|0;d=e}}while(0)}while((E|0)<(b+-1|0))}else e=h;if((H|0)>(j[e+236>>1]|0)){h=e;H=H+-1|0}else break}}J=J+1|0;if((J|0)>=(f|0))break g}Wa(122387,122104,465,122705)}while(0);r=N;return K|0}function zg(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;ii(a);xg(a);Hg(a);Ig(a);c=yg(a,2,b)|0;f=a+8|0;d=k[f>>2]|0;if((k[d+180>>2]|0)>=1){e=1;while(1){c=(zg(k[(k[d+184>>2]|0)+(e<<2)>>2]|0,b)|0)+c|0;d=k[f>>2]|0;if((e|0)>=(k[d+180>>2]|0))break;else e=e+1|0}}mg(a);return c|0}function Ag(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;if(!b)Wa(122428,122104,754,122430);g=(c|0)<0;d=b;while(1){b=k[b+8>>2]|0;f=k[b+236>>2]|0;if(g){if((f|0)<=0){b=14;break}b=(k[(k[(k[(k[12383]|0)+8>>2]|0)+196>>2]|0)+(k[b+232>>2]<<6)+4>>2]|0)+(f+-1<<2)|0}else b=(k[(k[(k[(k[12383]|0)+8>>2]|0)+196>>2]|0)+(k[b+232>>2]<<6)+4>>2]|0)+(f+1<<2)|0;b=k[b>>2]|0;if(!b){b=14;break}e=k[b+8>>2]|0;if((ha((k[e+236>>2]|0)-f|0,c)|0)<=0){b=10;break}if((i[e+156>>0]|0)==0?(ju(a,b)|0)!=0:0){d=b;continue}f=(Gg(a,b)|0)==0;d=f?d:b}if((b|0)==10)Wa(122439,122104,760,122430);else if((b|0)==14)return d|0;return 0}function Bg(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;z=a+8|0;d=k[z>>2]|0;e=j[d+236>>1]|0;h=j[d+238>>1]|0;if(e<<16>>16<=h<<16>>16){f=h<<16>>16;c=k[d+196>>2]|0;g=e<<16>>16;while(1){i[c+(g<<6)+48>>0]=1;if((g|0)<(f|0))g=g+1|0;else break}}y=(b|0)!=0;a:do if(e<<16>>16<=h<<16>>16){b:while(1){c=0;x=e<<16>>16;while(1){f=k[d+196>>2]|0;e=f+(x<<6)+48|0;if(i[e>>0]|0){i[e>>0]=0;e=k[f+(x<<6)>>2]|0;c:do if((e|0)>1){u=(x|0)>0;v=x+1|0;w=x+-1|0;g=e;b=0;e=0;do{t=k[f+(x<<6)+4>>2]|0;l=k[t+(b<<2)>>2]|0;p=k[l+8>>2]|0;s=f+(v<<6)|0;r=g+-1|0;q=p;g=k[p+236>>2]|0;while(1){b=b+1|0;m=l;l=k[t+(b<<2)>>2]|0;h=l+8|0;o=q;q=k[h>>2]|0;p=g;g=k[q+236>>2]|0;if((p|0)>=(g|0))break b;if(!(Dg(a,m,l)|0)){if(u){f=Eg(m,l)|0;n=Eg(l,m)|0}else{f=0;n=0}if((k[s>>2]|0)>0){f=(Fg(m,l)|0)+f|0;n=(Fg(l,m)|0)+n|0}if((f|0)>(n|0)){d=n;break}if((f|0)==(n|0)&(y&(f|0)>0)){f=n;d=n;break}}if((b|0)>=(r|0))break c}t=k[o+232>>2]|0;k[o+236>>2]=g;k[(k[(k[(k[(k[12383]|0)+8>>2]|0)+196>>2]|0)+(t<<6)+4>>2]|0)+(g<<2)>>2]=m;k[(k[h>>2]|0)+236>>2]=p;k[(k[(k[(k[(k[12383]|0)+8>>2]|0)+196>>2]|0)+(t<<6)+4>>2]|0)+(p<<2)>>2]=l;e=f-d+e|0;g=k[(k[(k[12383]|0)+8>>2]|0)+196>>2]|0;i[g+(x<<6)+49>>0]=0;d=k[z>>2]|0;f=k[d+196>>2]|0;i[f+(x<<6)+48>>0]=1;if((j[d+236>>1]|0)<(x|0)){i[g+(w<<6)+49>>0]=0;i[f+(w<<6)+48>>0]=1}if((j[d+238>>1]|0)>(x|0)){i[g+(v<<6)+49>>0]=0;i[f+(v<<6)+48>>0]=1}g=k[f+(x<<6)>>2]|0}while((b|0)<(g+-1|0))}else e=0;while(0);c=e+c|0}e=j[d+238>>1]|0;if((x|0)<(e<<16>>16|0))x=x+1|0;else break}if((c|0)<=0)break a;c=j[d+236>>1]|0;if(c<<16>>16>e<<16>>16)break a;else e=c}Wa(122387,122104,514,122413)}while(0);return}function Cg(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0,f=0,g=0,h=0,i=0,l=0,m=0;m=(b|0)>0;l=k[a>>2]|0;b=k[l>>2]|0;a:do if(!b)b=0;else{h=b;b=0;i=0;do{i=i+1|0;c=h;h=k[l+(i<<2)>>2]|0;a=(h|0)==0;if(m){if(a)break a;g=k[(k[(k[((k[c>>2]&3|0)==2?c:c+-32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0;e=k[c+8>>2]|0;d=+p[e+16>>3];e=e+154|0;f=h;c=i;do{a=k[f+8>>2]|0;if(+((k[(k[(k[((k[f>>2]&3|0)==2?f:f+-32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0)-g|0)*(+p[a+16>>3]-d)<0.0)b=(ha(j[a+154>>1]|0,j[e>>1]|0)|0)+b|0;c=c+1|0;f=k[l+(c<<2)>>2]|0}while((f|0)!=0)}else{if(a)break a;g=k[(k[(k[((k[c>>2]&3|0)==3?c:c+32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0;e=k[c+8>>2]|0;d=+p[e+56>>3];e=e+154|0;f=h;c=i;do{a=k[f+8>>2]|0;if(+((k[(k[(k[((k[f>>2]&3|0)==3?f:f+32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0)-g|0)*(+p[a+56>>3]-d)<0.0)b=(ha(j[a+154>>1]|0,j[e>>1]|0)|0)+b|0;c=c+1|0;f=k[l+(c<<2)>>2]|0}while((f|0)!=0)}}while((h|0)!=0)}while(0);return b|0}function Dg(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0;h=k[b+8>>2]|0;e=k[h+212>>2]|0;f=k[c+8>>2]|0;g=k[f+212>>2]|0;d=(e|0)!=(g|0);do if(!(i[121904]|0))if((g|0)==0|((e|0)==0|d^1))j=9;else{if((i[h+159>>0]|0)==7?(i[h+156>>0]|0)==1:0){d=0;break}if((i[f+159>>0]|0)==7?(i[f+156>>0]|0)==1:0){d=0;break}d=1}else if(d)d=1;else j=9;while(0);if((j|0)==9){e=k[a+8>>2]|0;d=k[(k[e+196>>2]|0)+(k[h+232>>2]<<6)+56>>2]|0;if(!d)d=0;else{h=(k[e+116>>2]&1|0)==0;j=ha(k[d+4>>2]|0,k[(k[(h?b:c)+8>>2]|0)+284>>2]|0)|0;d=i[(k[d+8>>2]|0)+((k[(k[(h?c:b)+8>>2]|0)+284>>2]|0)+j)>>0]|0}}return d|0}function Eg(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,l=0,m=0;c=k[(k[b+8>>2]|0)+172>>2]|0;b=k[c>>2]|0;if(!b)b=0;else{l=k[(k[a+8>>2]|0)+172>>2]|0;h=k[l>>2]|0;i=(h|0)==0;a=b;b=0;do{g=j[(k[a+8>>2]|0)+154>>1]|0;e=k[(k[(k[((k[a>>2]&3|0)==3?a:a+32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0;if(!i){f=h;d=l;do{a=k[(k[(k[((k[f>>2]&3|0)==3?f:f+32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0;if((a|0)<=(e|0)){if((a|0)==(e|0)?+p[(k[f+8>>2]|0)+16>>3]>+p[(k[(k[c>>2]|0)+8>>2]|0)+16>>3]:0)m=8}else m=8;if((m|0)==8){m=0;b=(ha(j[(k[(k[d>>2]|0)+8>>2]|0)+154>>1]|0,g)|0)+b|0}d=d+4|0;f=k[d>>2]|0}while((f|0)!=0)}c=c+4|0;a=k[c>>2]|0}while((a|0)!=0)}return b|0}function Fg(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,l=0,m=0;c=k[(k[b+8>>2]|0)+180>>2]|0;b=k[c>>2]|0;if(!b)b=0;else{l=k[(k[a+8>>2]|0)+180>>2]|0;h=k[l>>2]|0;i=(h|0)==0;a=b;b=0;do{g=j[(k[a+8>>2]|0)+154>>1]|0;e=k[(k[(k[((k[a>>2]&3|0)==2?a:a+-32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0;if(!i){f=h;d=l;do{a=k[(k[(k[((k[f>>2]&3|0)==2?f:f+-32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0;if((a|0)<=(e|0)){if((a|0)==(e|0)?+p[(k[f+8>>2]|0)+56>>3]>+p[(k[(k[c>>2]|0)+8>>2]|0)+56>>3]:0)m=8}else m=8;if((m|0)==8){m=0;b=(ha(j[(k[(k[d>>2]|0)+8>>2]|0)+154>>1]|0,g)|0)+b|0}d=d+4|0;f=k[d>>2]|0}while((f|0)!=0)}c=c+4|0;a=k[c>>2]|0}while((a|0)!=0)}return b|0}function Gg(a,b){a=a|0;b=b|0;var c=0,d=0;b=k[b+8>>2]|0;if(((i[b+156>>0]|0)==1?(k[b+176>>2]|0)==1:0)?(k[b+184>>2]|0)==1:0){b=k[b+180>>2]|0;while(1){b=k[b>>2]|0;c=k[b+8>>2]|0;if(!(i[c+112>>0]|0))break;else b=c+116|0}if(ju(a,b)|0)b=1;else d=7}else d=7;if((d|0)==7)b=0;return b|0}function Hg(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,l=0;h=a+8|0;b=k[h>>2]|0;c=j[b+236>>1]|0;if(c<<16>>16<=(j[b+238>>1]|0)){g=c<<16>>16;while(1){c=k[b+196>>2]|0;d=k[c+(g<<6)>>2]|0;if((d|0)>0){e=0;f=0;do{l=k[(k[(k[c+(g<<6)+4>>2]|0)+(f<<2)>>2]|0)+8>>2]|0;i[l+158>>0]=0;i[l+157>>0]=0;k[l+284>>2]=f;if((e|0)==0&(k[l+192>>2]|0)>0){e=By(12)|0;k[e>>2]=d;k[e+4>>2]=d;b=By(ha(d,d)|0)|0;k[e+8>>2]=b;b=k[h>>2]|0;c=k[b+196>>2]|0;k[c+(g<<6)+56>>2]=e;d=k[c+(g<<6)>>2]|0;e=1}f=f+1|0}while((f|0)<(d|0));if((e|0)!=0&(d|0)>0){d=0;do{c=k[(k[c+(g<<6)+4>>2]|0)+(d<<2)>>2]|0;if(!(i[(k[c+8>>2]|0)+157>>0]|0)){Mg(a,c);b=k[h>>2]|0}d=d+1|0;c=k[b+196>>2]|0}while((d|0)<(k[c+(g<<6)>>2]|0))}}if((g|0)<(j[b+238>>1]|0))g=g+1|0;else break}}return}function Ig(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;p=a+8|0;b=k[p>>2]|0;if((i[b+240>>0]|0)!=0?(c=j[b+236>>1]|0,c<<16>>16<=(j[b+238>>1]|0)):0){o=c<<16>>16;c=0;a:while(1){d=k[b+196>>2]|0;f=k[d+(o<<6)>>2]|0;if(f){b=k[d+(o<<6)+4>>2]|0;n=k[(k[(k[b>>2]|0)+8>>2]|0)+236>>2]|0;if((f|0)>0){d=(f|0)>1;e=0;do{i[(k[(k[b+(e<<2)>>2]|0)+8>>2]|0)+157>>0]=0;e=e+1|0}while((e|0)<(f|0));b=d?f:1}else b=0;if(!c)c=Cy((b<<2)+4|0)|0;else c=Ey(c,(b<<2)+4|0)|0;b=k[p>>2]|0;d=k[b+196>>2]|0;e=k[d+(o<<6)>>2]|0;if((e|0)>0){f=d;m=0;d=0;do{l=k[(k[f+(o<<6)+4>>2]|0)+(((k[b+116>>2]&1|0)==0?e+~m|0:m)<<2)>>2]|0;h=l+8|0;b=k[h>>2]|0;if((k[b+200>>2]|0)>0){f=0;e=0;do{e=((Jg(a,k[(k[b+196>>2]|0)+(f<<2)>>2]|0)|0)!=0&1)+e|0;f=f+1|0;b=k[h>>2]|0}while((f|0)<(k[b+200>>2]|0));g=e}else g=0;if((k[b+192>>2]|0)>0){f=0;e=0;do{e=((Jg(a,k[(k[b+188>>2]|0)+(f<<2)>>2]|0)|0)!=0&1)+e|0;f=f+1|0;b=k[h>>2]|0}while((f|0)<(k[b+192>>2]|0))}else e=0;if(e|g){if((g|0)==0&(i[b+157>>0]|0)==0)d=(Kg(a,l,c+(d<<2)|0,o)|0)+d|0}else{k[c+(d<<2)>>2]=l;d=d+1|0}m=m+1|0;b=k[p>>2]|0;f=k[b+196>>2]|0;e=k[f+(o<<6)>>2]|0}while((e|0)>(m|0));if(d){if((k[b+116>>2]&1|0)==0?(q=c+(d+-1<<2)|0,c>>>0<q>>>0):0){b=c;d=q;do{m=k[b>>2]|0;k[b>>2]=k[d>>2];k[d>>2]=m;b=b+4|0;d=d+-4|0}while(b>>>0<d>>>0);b=k[p>>2]|0}d=k[b+196>>2]|0;if((k[d+(o<<6)>>2]|0)>0){f=0;while(1){b=k[c+(f<<2)>>2]|0;k[(k[d+(o<<6)+4>>2]|0)+(f<<2)>>2]=b;k[(k[b+8>>2]|0)+236>>2]=f+n;f=f+1|0;b=k[p>>2]|0;e=k[b+196>>2]|0;d=k[e+(o<<6)>>2]|0;if((f|0)>=(d|0))break;else d=e}if((d|0)>0){m=0;do{l=(k[(k[e+(o<<6)+4>>2]|0)+(m<<2)>>2]|0)+8|0;e=k[l>>2]|0;d=k[e+188>>2]|0;if((d|0)!=0?(r=k[d>>2]|0,(r|0)!=0):0){h=r;g=0;do{f=k[h>>2]&3;d=k[(k[(k[((f|0)==2?h:h+-32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0;f=k[(k[(k[((f|0)==3?h:h+32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0;if(!(k[b+116>>2]&1))if((d|0)<(f|0))t=35;else b=g;else if((d|0)>(f|0))t=35;else b=g;if((t|0)==35){t=0;if(Jg(a,h)|0){t=36;break a}hg(h);pg(a,h);e=k[l>>2]|0;b=g+-1|0}g=b+1|0;h=k[(k[e+188>>2]|0)+(g<<2)>>2]|0;b=k[p>>2]|0}while((h|0)!=0)}m=m+1|0;e=k[b+196>>2]|0}while((m|0)<(k[e+(o<<6)>>2]|0))}}}}i[(k[(k[(k[12383]|0)+8>>2]|0)+196>>2]|0)+(o<<6)+49>>0]=0}if((o|0)<(j[b+238>>1]|0))o=o+1|0;else{s=c;break}}if((t|0)==36)Wa(122487,122104,1292,122526);if(s)vP(s)}return}function Jg(a,b){a=a|0;b=b|0;if((k[(k[b+8>>2]|0)+156>>2]|0)!=0?(Lg(a,k[((k[b>>2]&3|0)==3?b:b+32|0)+28>>2]|0)|0)!=0:0)b=(Lg(a,k[((k[b>>2]&3|0)==2?b:b+-32|0)+28>>2]|0)|0)!=0&1;else b=0;return b|0}function Kg(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,l=0;j=b+8|0;f=k[j>>2]|0;i[f+157>>0]=1;if((k[f+192>>2]|0)>0?(e=k[k[f+188>>2]>>2]|0,(e|0)!=0):0){g=e;e=0;h=0;do{if((Jg(a,g)|0)!=0?(l=k[((k[g>>2]&3|0)==2?g:g+-32|0)+28>>2]|0,(i[(k[l+8>>2]|0)+157>>0]|0)==0):0)e=(Kg(a,l,c+(e<<2)|0,d)|0)+e|0;h=h+1|0;f=k[j>>2]|0;g=k[(k[f+188>>2]|0)+(h<<2)>>2]|0}while((g|0)!=0)}else e=0;if((k[f+232>>2]|0)==(d|0)){k[c+(e<<2)>>2]=b;return e+1|0}else Wa(122539,122104,1221,122555);return 0}function Lg(a,b){a=a|0;b=b|0;var c=0;if(!(i[(k[b+8>>2]|0)+156>>0]|0))c=(ju(a,b)|0)!=0;else c=0;return c&1|(Gg(a,b)|0)|0}function Mg(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0;m=b+8|0;n=k[m>>2]|0;o=k[(k[(k[a+8>>2]|0)+196>>2]|0)+(k[n+232>>2]<<6)+56>>2]|0;i[n+157>>0]=1;i[n+158>>0]=1;n=(rf(a)|0)+8|0;n=(k[(k[n>>2]|0)+180>>2]|0)>0;b=k[m>>2]|0;c=k[b+188>>2]|0;a:do if((c|0)!=0?(d=k[c>>2]|0,(d|0)!=0):0){j=o+4|0;l=o+8|0;b=0;b:while(1){if(n){if((ju(a,k[((k[d>>2]&3|0)==3?d:d+32|0)+28>>2]|0)|0)!=0?(ju(a,k[((k[d>>2]&3|0)==2?d:d+-32|0)+28>>2]|0)|0)!=0:0)q=7}else q=7;do if((q|0)==7){q=0;g=d+8|0;if(k[(k[g>>2]|0)+156>>2]|0){c=k[d>>2]&3;f=d+-32|0;r=k[(k[((c|0)==2?d:f)+28>>2]|0)+8>>2]|0;h=k[r+284>>2]|0;e=(h|0)<(k[o>>2]|0);if((i[r+158>>0]|0)==1){if(!e){q=10;break b}c=k[(k[(k[((c|0)==3?d:d+32|0)+28>>2]|0)+8>>2]|0)+284>>2]|0;e=k[j>>2]|0;if((c|0)>=(e|0)){q=12;break b}r=(ha(e,h)|0)+c|0;i[(k[l>>2]|0)+r>>0]=1;hg(d);b=b+-1|0;if((i[(k[g>>2]|0)+112>>0]|0)==4)break;pg(a,d);break}else{if(!e){q=16;break b}c=k[(k[(k[((c|0)==3?d:d+32|0)+28>>2]|0)+8>>2]|0)+284>>2]|0;e=k[j>>2]|0;if((c|0)>=(e|0)){q=18;break b}c=(ha(e,c)|0)+h|0;i[(k[l>>2]|0)+c>>0]=1;c=k[((k[d>>2]&3|0)==2?d:f)+28>>2]|0;if(i[(k[c+8>>2]|0)+157>>0]|0)break;Mg(a,c);break}}}while(0);b=b+1|0;c=k[m>>2]|0;d=k[(k[c+188>>2]|0)+(b<<2)>>2]|0;if(!d){p=c;break a}}if((q|0)==10)Wa(122565,122104,982,122597);else if((q|0)==12)Wa(122609,122104,983,122597);else if((q|0)==16)Wa(122565,122104,991,122597);else if((q|0)==18)Wa(122609,122104,992,122597)}else p=b;while(0);i[p+158>>0]=0;return}function Ng(a){a=a|0;var b=0,c=0,d=0;c=a+8|0;b=k[c>>2]|0;a=k[b+192>>2]|0;if(a)do{d=k[a+8>>2]|0;k[d+236>>2]=~~+p[d+16>>3];a=k[d+164>>2]|0}while((a|0)!=0);a=j[b+236>>1]|0;if(a<<16>>16<=(j[b+238>>1]|0)){a=a<<16>>16;while(1){i[(k[(k[(k[12383]|0)+8>>2]|0)+196>>2]|0)+(a<<6)+49>>0]=0;d=k[b+196>>2]|0;dO(k[d+(a<<6)+4>>2]|0,k[d+(a<<6)>>2]|0,4,61);b=k[c>>2]|0;if((a|0)>=(j[b+238>>1]|0))break;else a=a+1|0}}return}function Og(a,b){a=a|0;b=b|0;return (k[a>>2]|0)-(k[b>>2]|0)|0}function Pg(a,b){a=a|0;b=b|0;return (k[(k[(k[a>>2]|0)+8>>2]|0)+236>>2]|0)-(k[(k[(k[b>>2]|0)+8>>2]|0)+236>>2]|0)|0}function Qg(a,b){a=a|0;b=b|0;var c=0;c=Kt(a)|0;if(c)do{Rg(a,c,b);c=Lt(a,c)|0}while((c|0)!=0);return}function Rg(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0;j=k[12384]|0;f=b+8|0;d=k[f>>2]|0;a:do if(!(k[d+212>>2]|0)){h=(c|0)!=0;if(h){b=k[k[d+180>>2]>>2]|0;if(!b)break;else{e=b;c=d;d=0;b=0}do{if(!(Sg(e)|0)){k[j+(b<<2)>>2]=e;c=k[f>>2]|0;b=b+1|0}d=d+1|0;e=k[(k[c+180>>2]|0)+(d<<2)>>2]|0}while((e|0)!=0)}else{b=k[k[d+172>>2]>>2]|0;if(!b)break;else{e=b;c=d;d=0;b=0}do{if(!(Sg(e)|0)){k[j+(b<<2)>>2]=e;c=k[f>>2]|0;b=b+1|0}d=d+1|0;e=k[(k[c+172>>2]|0)+(d<<2)>>2]|0}while((e|0)!=0)}if((b|0)>=2?(k[j+(b<<2)>>2]=0,dO(j,b,4,62),g=k[j+4>>2]|0,(g|0)!=0):0){c=g;g=1;do{e=k[j+(g+-1<<2)>>2]|0;f=k[e>>2]&3;b=k[c>>2]|0;if(h){d=(b&3|0)==2?c:c+-32|0;b=(f|0)==2?e:e+-32|0}else{d=(b&3|0)==3?c:c+32|0;b=(f|0)==3?e:e+32|0}c=k[b+28>>2]|0;b=k[d+28>>2]|0;if(Wf(c,b)|0)break a;c=ag(c,b,0)|0;i[(k[c+8>>2]|0)+112>>0]=4;gg(a,c);g=g+1|0;c=k[j+(g<<2)>>2]|0}while((c|0)!=0)}}while(0);return}function Sg(a){a=a|0;var b=0;while(1){b=k[(k[a+8>>2]|0)+116>>2]|0;if(!b)break;else a=b}b=k[a>>2]&3;return (k[(k[(k[((b|0)==3?a:a+32|0)+28>>2]|0)+8>>2]|0)+212>>2]|0)!=(k[(k[(k[((b|0)==2?a:a+-32|0)+28>>2]|0)+8>>2]|0)+212>>2]|0)|0}function Tg(a,b){a=a|0;b=b|0;return ((k[k[a>>2]>>2]|0)>>>4)-((k[k[b>>2]>>2]|0)>>>4)|0}function Ug(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0.0,g=0,h=0,l=0.0,n=0.0,o=0,q=0.0,s=0,t=0.0,u=0,v=0.0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0.0;L=r;r=r+64|0;J=L+40|0;I=L+32|0;H=L+16|0;C=L;B=L+48|0;K=a+8|0;if(k[(k[K>>2]|0)+192>>2]|0){mi(a);Xg(a);if(i[137282]|0)wi(a);c=k[K>>2]|0;d=j[c+236>>1]|0;if(d<<16>>16<=(j[c+238>>1]|0)){u=d<<16>>16;while(1){o=k[c+196>>2]|0;s=k[o+(u<<6)>>2]|0;if((s|0)>0){g=k[o+(u<<6)+4>>2]|0;h=0;d=0;do{e=k[(k[g+(h<<2)>>2]|0)+8>>2]|0;k[e+236>>2]=d;if((i[e+159>>0]|0)==6)e=k[e+216>>2]|0;else e=1;d=e+d|0;h=h+1|0}while((h|0)!=(s|0));g=d}else g=0;if((g|0)>(s|0)){c=k[o+(u<<6)+4>>2]|0;if(!c)c=Cy((g<<2)+4|0)|0;else c=Ey(c,(g<<2)+4|0)|0;d=k[(k[K>>2]|0)+196>>2]|0;k[d+(u<<6)+4>>2]=c;e=k[d+(u<<6)>>2]|0;if((e|0)>0)do{A=e;e=e+-1|0;d=k[c+(e<<2)>>2]|0;k[c+(k[(k[d+8>>2]|0)+236>>2]<<2)>>2]=d;d=k[(k[K>>2]|0)+196>>2]|0;c=k[d+(u<<6)+4>>2]|0}while((A|0)>1);k[d+(u<<6)>>2]=g;k[c+(g<<2)>>2]=0;c=k[K>>2]|0}if((u|0)<(j[c+238>>1]|0))u=u+1|0;else break}}c=k[c+192>>2]|0;if(c)do{e=c+8|0;c=k[e>>2]|0;d=k[c+224>>2]|0;if(d){Yg(a,d);c=k[e>>2]|0}d=k[c+228>>2]|0;if(d){Yg(a,d);c=k[e>>2]|0}d=k[c+204>>2]|0;if(d){e=0;while(1)if(!(k[d+(e<<2)>>2]|0))break;else e=e+1|0}c=k[c+164>>2]|0}while((c|0)!=0);if(Ci(a)|0)Xg(a);c=k[K>>2]|0;d=k[c+192>>2]|0;if(d){c=d;do{h=c+8|0;g=k[h>>2]|0;c=g+172|0;d=k[c+4>>2]|0;g=g+248|0;k[g>>2]=k[c>>2];k[g+4>>2]=d;g=k[h>>2]|0;d=g+180|0;c=k[d+4>>2]|0;g=g+256|0;k[g>>2]=k[d>>2];k[g+4>>2]=c;g=k[h>>2]|0;c=k[g+180>>2]|0;d=0;while(1)if(!(k[c+(d<<2)>>2]|0))break;else d=d+1|0;e=k[g+172>>2]|0;c=0;while(1)if(!(k[e+(c<<2)>>2]|0))break;else c=c+1|0;k[g+176>>2]=0;c=By((c+d<<2)+16|0)|0;A=k[h>>2]|0;k[A+172>>2]=c;k[A+184>>2]=0;A=By(16)|0;c=k[h>>2]|0;k[c+180>>2]=A;c=k[c+164>>2]|0}while((c|0)!=0);c=k[K>>2]|0}A=k[c+196>>2]|0;z=(i[c+113>>0]&1)==0;d=k[c+248>>2]|0;k[B>>2]=d;k[B+4>>2]=z?d:5;d=j[c+236>>1]|0;if(d<<16>>16<=(j[c+238>>1]|0)){z=d<<16>>16;while(1){x=A+(z<<6)+4|0;d=k[x>>2]|0;e=k[d>>2]|0;k[(k[e+8>>2]|0)+232>>2]=0;y=A+(z<<6)|0;if((k[y>>2]|0)>0){n=+(k[B+((z&1)<<2)>>2]|0);o=0;l=0.0;while(1){w=e+8|0;c=k[w>>2]|0;f=+p[c+96>>3];p[c+240>>3]=f;if((k[c+208>>2]|0)>0){g=k[k[c+204>>2]>>2]|0;if(!g)g=0;else{h=0;d=0;do{u=k[g>>2]&3;if((k[((u|0)==3?g:g+32|0)+28>>2]|0)==(k[((u|0)==2?g:g+-32|0)+28>>2]|0)){d=(IA(g)|0)+d|0;c=k[w>>2]|0}h=h+1|0;g=k[(k[c+204>>2]|0)+(h<<2)>>2]|0}while((g|0)!=0);h=c;g=d;c=h;d=k[x>>2]|0;f=+p[h+96>>3]}f=f+ +(g|0);p[c+96>>3]=f}u=o+1|0;d=k[d+(u<<2)>>2]|0;if(d){c=d+8|0;v=n+(f+ +p[(k[c>>2]|0)+88>>3]);Vg(e,d,v,0)|0;s=~~(l+v);k[(k[c>>2]|0)+232>>2]=s;c=k[w>>2]|0;l=+(s|0)}d=k[c+112>>2]|0;if(d){g=k[c+256>>2]|0;h=k[g>>2]|0;g=k[g+4>>2]|0;c=(k[(k[(k[((k[h>>2]&3|0)==2?h:h+-32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0)>(k[(k[(k[((k[g>>2]&3|0)==2?g:g+-32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0);e=c?g:h;g=c?h:g;h=d+8|0;c=k[h>>2]|0;f=+((ha(k[(k[K>>2]|0)+248>>2]|0,m[c+170>>1]|0)|0)/2|0|0);s=k[e>>2]&3;d=k[((s|0)==2?e:e+-32|0)+28>>2]|0;e=k[((s|0)==3?e:e+32|0)+28>>2]|0;if(!(Zg(e,d)|0))Vg(d,e,+(~~(+p[(k[e+8>>2]|0)+88>>3]+(f+ +p[(k[d+8>>2]|0)+96>>3]))|0),k[c+156>>2]|0)|0;c=k[g>>2]&3;d=k[((c|0)==3?g:g+32|0)+28>>2]|0;c=k[((c|0)==2?g:g+-32|0)+28>>2]|0;if(!(Zg(c,d)|0))Vg(d,c,+(~~(+p[(k[c+8>>2]|0)+88>>3]+(f+ +p[(k[d+8>>2]|0)+96>>3]))|0),k[(k[h>>2]|0)+156>>2]|0)|0}c=k[w>>2]|0;if((k[c+192>>2]|0)>0){s=0;do{h=k[(k[c+188>>2]|0)+(s<<2)>>2]|0;g=k[h>>2]&3;e=k[((g|0)==3?h:h+32|0)+28>>2]|0;g=k[((g|0)==2?h:h+-32|0)+28>>2]|0;o=(k[(k[e+8>>2]|0)+236>>2]|0)<(k[(k[g+8>>2]|0)+236>>2]|0);d=o?e:g;e=o?g:e;f=+p[(k[d+8>>2]|0)+96>>3]+ +p[(k[e+8>>2]|0)+88>>3];h=h+8|0;g=~~(f+ +(ha(k[(k[K>>2]|0)+248>>2]|0,m[(k[h>>2]|0)+170>>1]|0)|0));o=Vf(d,e)|0;do if(!o){c=k[h>>2]|0;if(k[c+96>>2]|0)break;Vg(d,e,+(g|0),k[c+156>>2]|0)|0}else{M=+(g|0);d=k[h>>2]|0;v=+p[d+136>>3];v=f+ +(k[(k[K>>2]|0)+248>>2]|0)+ +(~~(v+(v>=0.0?.5:-.5))|0);c=~~(M>v?M:v);if((c|0)>65535){p[C>>3]=+(c|0);k[C+8>>2]=65535;Yr(1,122803,C)|0;d=k[h>>2]|0;c=65535}o=k[o+8>>2]|0;g=o+170|0;h=m[g>>1]|0;j[g>>1]=(h|0)>(c|0)?h:c;o=o+156|0;g=k[o>>2]|0;h=k[d+156>>2]|0;k[o>>2]=(g|0)>(h|0)?g:h}while(0);s=s+1|0;c=k[w>>2]|0}while((s|0)<(k[c+192>>2]|0))}if((u|0)>=(k[y>>2]|0))break;e=k[x>>2]|0;d=e;e=k[e+(u<<2)>>2]|0;o=u}c=k[K>>2]|0}if((z|0)<(j[c+238>>1]|0))z=z+1|0;else break}}d=k[c+192>>2]|0;if(d){c=d;do{g=c+8|0;c=k[g>>2]|0;d=k[c+256>>2]|0;if((d|0)!=0?(D=k[d>>2]|0,(D|0)!=0):0){d=D;e=0;do{x=fg(a)|0;c=x+8|0;i[(k[c>>2]|0)+156>>0]=2;z=d+8|0;A=k[z>>2]|0;B=~~(+p[A+56>>3]-+p[A+16>>3]);y=(B|0)>0;C=y?0:0-B|0;B=y?B:0;y=d+32|0;Vg(x,k[((k[d>>2]&3|0)==3?d:y)+28>>2]|0,+(B+1|0),k[A+156>>2]|0)|0;A=d+-32|0;Vg(x,k[((k[d>>2]&3|0)==2?d:A)+28>>2]|0,+(C+1|0),k[(k[z>>2]|0)+156>>2]|0)|0;z=k[d>>2]&3;B=(k[(k[(k[((z|0)==3?d:y)+28>>2]|0)+8>>2]|0)+232>>2]|0)-B|0;C=(k[(k[(k[((z|0)==2?d:A)+28>>2]|0)+8>>2]|0)+232>>2]|0)-C|0;k[(k[c>>2]|0)+232>>2]=((B|0)<(C|0)?B:C)+-1;e=e+1|0;c=k[g>>2]|0;d=k[(k[c+256>>2]|0)+(e<<2)>>2]|0}while((d|0)!=0)}c=k[c+164>>2]|0}while((c|0)!=0);c=k[K>>2]|0}if((k[c+180>>2]|0)>0){_g(a);$g(a);ah(a);bh(a);c=k[K>>2]|0}c=k[c+8>>2]|0;if((k[c+84>>2]|0)==3?(q=+p[c+64>>3],t=+p[c+72>>3],!(q*t<=1.0)):0){ch(a);D=k[K>>2]|0;M=(k[D+116>>2]&1|0)==0?q:t;Vg(k[D+256>>2]|0,k[D+260>>2]|0,M<65535.0?M:65535.0,1e3)|0}if(Gy(a,2,dh(a)|0)|0){c=k[K>>2]|0;e=j[c+236>>1]|0;d=j[c+238>>1]|0;a:do if(e<<16>>16<=d<<16>>16){A=e<<16>>16;b:while(1){z=k[c+196>>2]|0;w=k[z+(A<<6)>>2]|0;c:do if((w|0)>0){y=k[z+(A<<6)+4>>2]|0;x=0;do{e=k[y+(x<<2)>>2]|0;s=k[e+8>>2]|0;u=k[s+256>>2]|0;do if(u){g=k[u>>2]|0;if(!g)break;else o=0;do{h=k[g>>2]&3;if((k[(k[(k[((h|0)==2?g:g+-32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)>(A|0))break c;o=o+1|0;if((k[(k[(k[((h|0)==3?g:g+32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)>(A|0))break c;g=k[u+(o<<2)>>2]|0}while((g|0)!=0)}while(0);s=k[s+248>>2]|0;do if(s){g=k[s>>2]|0;if(!g)break;else o=0;do{h=k[g>>2]&3;if((k[(k[(k[((h|0)==3?g:g+32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)>(A|0))break c;o=o+1|0;if((k[(k[(k[((h|0)==2?g:g+-32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)>(A|0))break c;g=k[s+(o<<2)>>2]|0}while((g|0)!=0)}while(0);x=x+1|0}while((x|0)<(w|0));if(e){e=k[y>>2]|0;c=k[k[z+(((A|0)<(d<<16>>16|0)?1:-1)+A<<6)+4>>2]>>2]|0;if(!c)break b;D=fg(a)|0;d=D+8|0;i[(k[d>>2]|0)+156>>0]=2;Vg(D,e,0.0,0)|0;Vg(D,c,0.0,0)|0;D=k[(k[e+8>>2]|0)+232>>2]|0;c=k[(k[c+8>>2]|0)+232>>2]|0;k[(k[d>>2]|0)+232>>2]=(D|0)<(c|0)?D:c;c=k[K>>2]|0;d=j[c+238>>1]|0}}while(0);if((A|0)<(d<<16>>16|0))A=A+1|0;else break a}Wa(122879,122882,111,122893)}while(0);if(Gy(a,2,dh(a)|0)|0)Wa(122906,122882,134,122934)}c=k[K>>2]|0;o=k[c+196>>2]|0;d=j[c+236>>1]|0;c=j[c+238>>1]|0;if(d<<16>>16<=c<<16>>16){h=c<<16>>16;e=d<<16>>16;while(1){c=k[o+(e<<6)>>2]|0;if((c|0)>0){d=k[o+(e<<6)+4>>2]|0;g=0;do{C=k[(k[d+(g<<2)>>2]|0)+8>>2]|0;D=C+232|0;p[C+16>>3]=+(k[D>>2]|0);k[D>>2]=e;g=g+1|0}while((g|0)!=(c|0))}if((e|0)<(h|0))e=e+1|0;else break}}eh(a,a);g=k[K>>2]|0;d:do if((j[g+238>>1]|0)>0?(G=k[g+8>>2]|0,E=k[G+84>>2]|0,(E|0)!=0):0){t=+p[g+32>>3];D=~~(t-+p[g+16>>3]);v=+p[g+40>>3];c=~~(v-+p[g+24>>3]);e=(k[g+116>>2]&1|0)==0;d=e?c:D;c=e?D:c;e:do switch(E|0){case 4:{f=+p[G+48>>3];l=+p[G+56>>3];if(f<.001|l<.001)break d;q=+p[G+32>>3];n=+p[G+40>>3];q=f-q-q;f=l-n-n;l=q/t;n=f/v;if(l>=1.0&n>=1.0)break d;n=l<n?l:n;n=n>.5?n:.5;M=f*+ga(+(v*n/f))/v;f=t*(q*+ga(+(t*n/q))/t);p[G+64>>3]=f;p[G+72>>3]=v*M;F=113;break}case 2:{f=+p[G+64>>3];F=113;break}case 5:{f=+p[G+64>>3];if(f<=0.0)break d;l=f/t;f=+p[G+72>>3]/v;if(!(l>1.0&f>1.0))break d;f=l<f?l:f;n=f;break}case 1:{l=+p[G+16>>3];f=+(d|0)/+(c|0);if(f<l){n=1.0;f=l/f;break e}else{n=f/l;f=1.0;break e}}default:break d}while(0);do if((F|0)==113){if(f<=0.0)break d;l=f/+(c|0);f=+p[G+72>>3]/+(d|0);if(l<1.0|f<1.0)if(l<f){n=1.0;f=f/l;break}else{n=l/f;f=1.0;break}else n=l}while(0);l=e?f:n;f=e?n:f;c=k[g+192>>2]|0;if(c)do{G=k[c+8>>2]|0;F=G+16|0;M=f*+p[F>>3];p[F>>3]=+(~~(M+(M>=0.0?.5:-.5))|0);F=G+24|0;M=l*+p[F>>3];p[F>>3]=+(~~(M+(M>=0.0?.5:-.5))|0);c=k[G+164>>2]|0}while((c|0)!=0);fh(a,f,l)}while(0);f:do if(b){G=k[K>>2]|0;f=+p[G+32>>3]-+p[G+16>>3];l=+p[G+40>>3]-+p[G+24>>3];n=f/l;if(i[137280]|0){G=k[24528]|0;p[H>>3]=n;p[H+8>>3]=f*l/1.0e4;FN(G,122947,H)|0;H=Sh(a)|0;k[I>>2]=H;FN(G,122972,I)|0}f=+p[b>>3];do if(n>f*1.1)k[b+24>>2]=~~(f*+((k[b+20>>2]|0)-(k[b+16>>2]|0)|0)/n);else{c=b+24|0;if(!(n<=f*.8)){k[c>>2]=0;break}k[c>>2]=-1;if(!(i[137280]|0))break f;QN(122982,34,1,k[24528]|0)|0}while(0);if(i[137280]|0){I=k[24528]|0;k[J>>2]=k[b+24>>2];FN(I,123017,J)|0}}while(0);c=k[(k[K>>2]|0)+192>>2]|0;g:do if(c){do{h=c+8|0;c=k[h>>2]|0;d=k[c+180>>2]|0;e=k[d>>2]|0;if(e){g=0;do{vP(k[e+8>>2]|0);vP(e);g=g+1|0;c=k[h>>2]|0;d=k[c+180>>2]|0;e=k[d+(g<<2)>>2]|0}while((e|0)!=0)}if(d){vP(d);c=k[h>>2]|0}d=k[c+172>>2]|0;if(d){vP(d);c=k[h>>2]|0}J=c+256|0;b=k[J+4>>2]|0;c=c+180|0;k[c>>2]=k[J>>2];k[c+4>>2]=b;c=k[h>>2]|0;b=c+248|0;J=k[b+4>>2]|0;c=c+172|0;k[c>>2]=k[b>>2];k[c+4>>2]=J;c=k[(k[h>>2]|0)+164>>2]|0}while((c|0)!=0);c=k[(k[K>>2]|0)+192>>2]|0;if(c){d=0;do{h=(d|0)==0;g=d+8|0;while(1){e=k[c+8>>2]|0;d=c;c=k[e+164>>2]|0;if((i[e+156>>0]|0)!=2)break;if(h)k[(k[K>>2]|0)+192>>2]=c;else k[(k[g>>2]|0)+164>>2]=c;vP(e);vP(d);if(!c)break g}}while((c|0)!=0)}}while(0);k[(k[(k[(k[K>>2]|0)+192>>2]|0)+8>>2]|0)+168>>2]=0}r=L;return}function Vg(a,b,c,d){a=a|0;b=b|0;c=+c;d=d|0;var e=0,f=0,g=0,h=0,i=0,l=0;i=r;r=r+16|0;f=i;h=By(64)|0;l=h+32|0;k[l>>2]=k[l>>2]|3;k[h>>2]=k[h>>2]&-4|2;e=By(176)|0;g=h+8|0;k[g>>2]=e;k[((k[h>>2]&3|0)==3?h:l)+28>>2]=a;k[((k[h>>2]&3|0)==2?h:h+-32|0)+28>>2]=b;if(c>65535.0){p[f>>3]=c;k[f+8>>2]=65535;Yr(1,122803,f)|0;c=65535.0;e=k[g>>2]|0}j[e+170>>1]=~~(c+(c>=0.0?.5:-.5));k[e+156>>2]=d;Xf(h)|0;r=i;return h|0}function Wg(a,b){a=a|0;b=b|0;var c=0,d=0;c=k[a+8>>2]|0;d=i[c+84>>0]|0;a=k[b+8>>2]|0;do if(d<<24>>24==(i[a+84>>0]|0)){if(+p[c+56>>3]==+p[a+56>>3]){if(!(d<<24>>24==0?1:+p[c+64>>3]==+p[a+64>>3])){a=0;break}}else if(d<<24>>24){a=0;break}if(+p[c+16>>3]==+p[a+16>>3]?+p[c+24>>3]==+p[a+24>>3]:0){a=1;break}a=(i[c+44>>0]|0)==0}else a=0;while(0);return a&1|0}function Xg(a){a=a|0;var b=0,c=0,d=0,e=0.0,f=0.0,g=0,h=0.0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0.0;x=a+8|0;u=k[x>>2]|0;A=k[u+196>>2]|0;b=j[u+236>>1]|0;if(b<<16>>16<=(j[u+238>>1]|0)){u=b<<16>>16;while(1){m=A+(u<<6)|0;if((k[m>>2]|0)>0){n=A+(u<<6)+4|0;o=A+(u<<6)+40|0;q=A+(u<<6)+24|0;r=A+(u<<6)+32|0;s=A+(u<<6)+16|0;t=0;do{l=(k[(k[n>>2]|0)+(t<<2)>>2]|0)+8|0;b=k[l>>2]|0;e=+p[b+80>>3]*.5;d=k[b+204>>2]|0;if((d|0)!=0?(v=k[d>>2]|0,(v|0)!=0):0){g=v;c=0;do{B=k[g>>2]&3;if((k[((B|0)==3?g:g+32|0)+28>>2]|0)==(k[((B|0)==2?g:g+-32|0)+28>>2]|0)?(w=k[(k[g+8>>2]|0)+96>>2]|0,(w|0)!=0):0){h=+p[w+32>>3]*.5;e=e>h?e:h}c=c+1|0;g=k[d+(c<<2)>>2]|0}while((g|0)!=0)}if(+p[o>>3]<e){p[q>>3]=e;p[o>>3]=e}if(+p[r>>3]<e){p[s>>3]=e;p[r>>3]=e}g=k[b+212>>2]|0;if(g){if((g|0)==(a|0))d=0;else{d=iB(g,k[13618]|0,8,0)|0;b=k[l>>2]|0}c=k[b+232>>2]|0;b=k[g+8>>2]|0;if((c|0)==(j[b+236>>1]|0)){B=b+128|0;f=+p[B>>3];h=e+ +(d|0);p[B>>3]=f>h?f:h}if((c|0)==(j[b+238>>1]|0)){B=b+120|0;f=+p[B>>3];h=e+ +(d|0);p[B>>3]=f>h?f:h}}t=t+1|0}while((t|0)<(k[m>>2]|0))}if((u|0)<(j[(k[x>>2]|0)+238>>1]|0))u=u+1|0;else break}}l=kh(a)|0;g=k[x>>2]|0;B=j[g+238>>1]|0;c=B<<16>>16;p[(k[(k[k[A+(c<<6)+4>>2]>>2]|0)+8>>2]|0)+24>>3]=+p[A+(c<<6)+16>>3];b=j[g+236>>1]|0;if(B<<16>>16>b<<16>>16){d=b<<16>>16;h=+(k[g+252>>2]|0);e=0.0;do{b=c;c=c+-1|0;C=+p[A+(b<<6)+40>>3]+ +p[A+(c<<6)+32>>3]+h;f=+p[A+(b<<6)+24>>3]+ +p[A+(c<<6)+16>>3]+8.0;f=C>f?C:f;if((k[A+(c<<6)>>2]|0)>0)p[(k[(k[k[A+(c<<6)+4>>2]>>2]|0)+8>>2]|0)+24>>3]=f+ +p[(k[(k[k[A+(b<<6)+4>>2]>>2]|0)+8>>2]|0)+24>>3];e=e>f?e:f}while((c|0)>(d|0))}else e=0.0;if((l|0)!=0?(k[g+116>>2]&1|0)!=0:0){lh(a,0);g=k[x>>2]|0;if(i[g+276>>0]|0){B=j[g+238>>1]|0;c=B<<16>>16;b=j[g+236>>1]|0;if(B<<16>>16>b<<16>>16){d=b<<16>>16;b=c;f=+p[(k[(k[k[A+(c<<6)+4>>2]>>2]|0)+8>>2]|0)+24>>3];e=0.0;do{b=b+-1|0;C=f;f=+p[(k[(k[k[A+(b<<6)+4>>2]>>2]|0)+8>>2]|0)+24>>3];C=f-C;e=e>C?e:C}while((b|0)>(d|0))}else e=0.0}}if((i[g+276>>0]|0)!=0?(z=j[g+238>>1]|0,y=j[g+236>>1]|0,z<<16>>16>y<<16>>16):0){d=y<<16>>16;b=z<<16>>16;do{c=b;b=b+-1|0;if((k[A+(b<<6)>>2]|0)>0)p[(k[(k[k[A+(b<<6)+4>>2]>>2]|0)+8>>2]|0)+24>>3]=e+ +p[(k[(k[k[A+(c<<6)+4>>2]>>2]|0)+8>>2]|0)+24>>3]}while((b|0)>(d|0))}b=k[g+192>>2]|0;if(b)do{B=k[b+8>>2]|0;p[B+24>>3]=+p[(k[(k[k[A+(k[B+232>>2]<<6)+4>>2]>>2]|0)+8>>2]|0)+24>>3];b=k[B+164>>2]|0}while((b|0)!=0);return}function Yg(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0;m=r;r=r+48|0;l=m+32|0;j=m+24|0;c=m+16|0;i=m+8|0;h=m;d=b+8|0;e=k[d>>2]|0;do if((k[e+216>>2]|0)>=2){k[j>>2]=~~(+p[e+16>>3]-+p[e+88>>3]);k[j+4>>2]=~~+p[e+24>>3];k[l>>2]=k[j>>2];k[l+4>>2]=k[j+4>>2];ih(c,b,l);f=c;g=k[f+4>>2]|0;c=j;k[c>>2]=k[f>>2];k[c+4>>2]=g;c=k[d>>2]|0;if((k[c+184>>2]|0)>0){h=k[k[c+180>>2]>>2]|0;d=k[c+236>>2]|0;c=Hs(a,k[((k[h>>2]&3|0)==2?h:h+-32|0)+28>>2]|0)|0;if(!c)break;d=d+1|0;do{h=(k[c>>2]&3|0)==2?c:c+-32|0;e=h+32|0;f=k[((k[h>>2]&3|0)==3?h:e)+28>>2]|0;if((f|0)!=(b|0)?(pB(f)|0)==(b|0):0){e=k[((k[h>>2]&3|0)==3?h:e)+28>>2]|0;k[l>>2]=k[j>>2];k[l+4>>2]=k[j+4>>2];jh(i,a,e,l,d);e=i;f=k[e+4>>2]|0;g=j;k[g>>2]=k[e>>2];k[g+4>>2]=f;jg(h);g=h+-32|0;f=k[(k[((k[h>>2]&3|0)==2?h:g)+28>>2]|0)+8>>2]|0;e=k[f+172>>2]|0;f=k[f+176>>2]|0;if(!e)e=Cy((f<<2)+8|0)|0;else e=Ey(e,(f<<2)+8|0)|0;k[(k[(k[((k[h>>2]&3|0)==2?h:g)+28>>2]|0)+8>>2]|0)+172>>2]=e;e=(k[(k[((k[h>>2]&3|0)==2?h:g)+28>>2]|0)+8>>2]|0)+176|0;f=k[e>>2]|0;k[e>>2]=f+1;k[(k[(k[(k[((k[h>>2]&3|0)==2?h:g)+28>>2]|0)+8>>2]|0)+172>>2]|0)+(f<<2)>>2]=h;h=k[(k[((k[h>>2]&3|0)==2?h:g)+28>>2]|0)+8>>2]|0;k[(k[h+172>>2]|0)+(k[h+176>>2]<<2)>>2]=0;d=d+1|0}c=Is(a,c)|0}while((c|0)!=0)}else{i=k[k[c+172>>2]>>2]|0;d=k[c+236>>2]|0;c=Es(a,k[((k[i>>2]&3|0)==3?i:i+32|0)+28>>2]|0)|0;if(!c)break;d=d+1|0;do{e=c+-32|0;f=k[((k[c>>2]&3|0)==2?c:e)+28>>2]|0;if((f|0)!=(b|0)?(pB(f)|0)==(b|0):0){e=k[((k[c>>2]&3|0)==2?c:e)+28>>2]|0;k[l>>2]=k[j>>2];k[l+4>>2]=k[j+4>>2];jh(h,a,e,l,d);e=h;f=k[e+4>>2]|0;g=j;k[g>>2]=k[e>>2];k[g+4>>2]=f;jg(c);g=c+32|0;f=k[(k[((k[c>>2]&3|0)==3?c:g)+28>>2]|0)+8>>2]|0;e=k[f+180>>2]|0;f=k[f+184>>2]|0;if(!e)e=Cy((f<<2)+8|0)|0;else e=Ey(e,(f<<2)+8|0)|0;k[(k[(k[((k[c>>2]&3|0)==3?c:g)+28>>2]|0)+8>>2]|0)+180>>2]=e;f=(k[(k[((k[c>>2]&3|0)==3?c:g)+28>>2]|0)+8>>2]|0)+184|0;i=k[f>>2]|0;k[f>>2]=i+1;k[(k[(k[(k[((k[c>>2]&3|0)==3?c:g)+28>>2]|0)+8>>2]|0)+180>>2]|0)+(i<<2)>>2]=c;i=k[(k[((k[c>>2]&3|0)==3?c:g)+28>>2]|0)+8>>2]|0;k[(k[i+180>>2]|0)+(k[i+184>>2]<<2)>>2]=0;d=d+1|0}c=Gs(a,c)|0}while((c|0)!=0)}}while(0);r=m;return}function Zg(a,b){a=a|0;b=b|0;var c=0,d=0;a:do if((a|0)!=(b|0)){d=k[(k[a+8>>2]|0)+180>>2]|0;a=k[d>>2]|0;if(!a)a=0;else{c=0;while(1){c=c+1|0;if(Zg(k[((k[a>>2]&3|0)==2?a:a+-32|0)+28>>2]|0,b)|0){a=1;break a}a=k[d+(c<<2)>>2]|0;if(!a){a=0;break}}}}else a=1;while(0);return a|0}function _g(a){a=a|0;var b=0,c=0;do if((rf(a)|0)!=(a|0)){ch(a);a=a+8|0;b=k[a>>2]|0;b=Vf(k[b+256>>2]|0,k[b+260>>2]|0)|0;if(!b){c=k[a>>2]|0;Vg(k[c+256>>2]|0,k[c+260>>2]|0,1.0,128)|0;break}else{c=(k[b+8>>2]|0)+156|0;k[c>>2]=(k[c>>2]|0)+128;break}}else a=a+8|0;while(0);b=k[a>>2]|0;if((k[b+180>>2]|0)>=1){c=1;while(1){_g(k[(k[b+184>>2]|0)+(c<<2)>>2]|0);b=k[a>>2]|0;if((c|0)>=(k[b+180>>2]|0))break;else c=c+1|0}}return}function $g(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0.0,l=0,m=0,n=0;c=iB(a,k[13618]|0,8,0)|0;n=a+8|0;b=k[n>>2]|0;d=j[b+236>>1]|0;if(d<<16>>16<=(j[b+238>>1]|0)){h=+(c|0);g=d<<16>>16;while(1){b=k[b+196>>2]|0;a:do if((k[b+(g<<6)>>2]|0)!=0?(l=k[k[b+(g<<6)+4>>2]>>2]|0,(l|0)!=0):0){f=l+8|0;e=k[(k[f>>2]|0)+236>>2]|0;while(1){if((e|0)<=0)break;e=e+-1|0;c=(rf(a)|0)+8|0;c=k[(k[(k[(k[c>>2]|0)+196>>2]|0)+(g<<6)+4>>2]|0)+(e<<2)>>2]|0;b=c+8|0;d=k[b>>2]|0;if(!(i[d+156>>0]|0)){b=c;m=11;break}if(hh(a,c)|0){m=10;break}}if((m|0)==10){d=k[b>>2]|0;b=c;m=11}if((m|0)==11){m=0;Vg(b,k[(k[n>>2]|0)+256>>2]|0,h+ +p[d+96>>3],0)|0}b=(k[(k[(k[n>>2]|0)+196>>2]|0)+(g<<6)>>2]|0)+(k[(k[f>>2]|0)+236>>2]|0)|0;f=(rf(a)|0)+8|0;if((b|0)<(k[(k[(k[f>>2]|0)+196>>2]|0)+(g<<6)>>2]|0)){while(1){c=(rf(a)|0)+8|0;c=k[(k[(k[(k[c>>2]|0)+196>>2]|0)+(g<<6)+4>>2]|0)+(b<<2)>>2]|0;e=c+8|0;d=k[e>>2]|0;if(!(i[d+156>>0]|0)){b=c;break}b=b+1|0;if(hh(a,c)|0){b=e;m=16;break}f=(rf(a)|0)+8|0;if((b|0)>=(k[(k[(k[f>>2]|0)+196>>2]|0)+(g<<6)>>2]|0))break a}if((m|0)==16){m=0;d=k[b>>2]|0;b=c}Vg(k[(k[n>>2]|0)+260>>2]|0,b,h+ +p[d+88>>3],0)|0}}while(0);b=k[n>>2]|0;if((g|0)<(j[b+238>>1]|0))g=g+1|0;else break}}if((k[b+180>>2]|0)>=1){c=1;while(1){$g(k[(k[b+184>>2]|0)+(c<<2)>>2]|0);b=k[n>>2]|0;if((c|0)>=(k[b+180>>2]|0))break;else c=c+1|0}}return}function ah(a){a=a|0;var b=0,c=0.0,d=0,e=0,f=0,g=0;b=iB(a,k[13618]|0,8,0)|0;gh(a);d=a+8|0;a=k[d>>2]|0;if((k[a+180>>2]|0)>=1){c=+(b|0);b=1;while(1){e=k[(k[a+184>>2]|0)+(b<<2)>>2]|0;gh(e);f=k[d>>2]|0;g=e+8|0;Vg(k[f+256>>2]|0,k[(k[g>>2]|0)+256>>2]|0,c+ +p[f+96>>3],0)|0;f=k[d>>2]|0;Vg(k[(k[g>>2]|0)+260>>2]|0,k[f+260>>2]|0,c+ +p[f+64>>3],0)|0;ah(e);a=k[d>>2]|0;if((b|0)>=(k[a+180>>2]|0))break;else b=b+1|0}}return}function bh(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,l=0.0,m=0,n=0;d=iB(a,k[13618]|0,8,0)|0;m=a+8|0;a=k[m>>2]|0;if((k[a+180>>2]|0)>=1){c=1;while(1){gh(k[(k[a+184>>2]|0)+(c<<2)>>2]|0);a=k[m>>2]|0;b=k[a+180>>2]|0;if((c|0)<(b|0))c=c+1|0;else break}if((b|0)>=1){l=+(d|0);h=1;do{i=h;h=h+1|0;c=k[a+184>>2]|0;d=k[c+(i<<2)>>2]|0;if((i|0)<(b|0)){b=d;g=h;while(1){c=k[c+(g<<2)>>2]|0;d=(j[(k[b+8>>2]|0)+236>>1]|0)>(j[(k[c+8>>2]|0)+236>>1]|0);f=d?c:b;b=d?b:c;c=k[f+8>>2]|0;d=k[b+8>>2]|0;n=j[d+236>>1]|0;e=n<<16>>16;if((j[c+238>>1]|0)>=n<<16>>16){a=(k[(k[(k[k[(k[c+196>>2]|0)+(e<<6)+4>>2]>>2]|0)+8>>2]|0)+236>>2]|0)<(k[(k[(k[k[(k[d+196>>2]|0)+(e<<6)+4>>2]>>2]|0)+8>>2]|0)+236>>2]|0);Vg(k[(k[(a?f:b)+8>>2]|0)+260>>2]|0,k[(k[(a?b:f)+8>>2]|0)+256>>2]|0,l,0)|0;a=k[m>>2]|0}c=k[a+184>>2]|0;b=k[c+(i<<2)>>2]|0;if((g|0)>=(k[a+180>>2]|0)){a=b;break}else g=g+1|0}}else a=d;bh(a);a=k[m>>2]|0;b=k[a+180>>2]|0}while((i|0)<(b|0))}}return}function ch(a){a=a|0;var b=0,c=0,d=0,e=0.0,f=0,g=0,h=0,i=0,l=0;l=r;r=r+16|0;i=l;b=iB(a,k[13618]|0,8,0)|0;gh(a);f=a+8|0;c=k[f>>2]|0;g=k[c+256>>2]|0;h=k[c+260>>2]|0;d=j[c+236>>1]|0;if(d<<16>>16<=(j[c+238>>1]|0)){e=+(b|0);d=d<<16>>16;while(1){b=k[c+196>>2]|0;do if(k[b+(d<<6)>>2]|0){b=k[k[b+(d<<6)+4>>2]>>2]|0;if(!b){c=ht(a)|0;k[i>>2]=c;k[i+4>>2]=d;Yr(1,123039,i)|0;break}else{Vg(g,b,e+ +p[(k[b+8>>2]|0)+88>>3]+ +p[c+96>>3],0)|0;c=k[f>>2]|0;b=k[c+196>>2]|0;b=k[(k[b+(d<<6)+4>>2]|0)+((k[b+(d<<6)>>2]|0)+-1<<2)>>2]|0;Vg(b,h,e+ +p[(k[b+8>>2]|0)+96>>3]+ +p[c+64>>3],0)|0;break}}while(0);c=k[f>>2]|0;if((d|0)>=(j[c+238>>1]|0))break;else d=d+1|0}}r=l;return}function dh(a){a=a|0;var b=0,c=0.0;b=ss(a,123031)|0;if(!b)b=2147483647;else{c=+aO(b);b=~~(c*+(Zs(a)|0))}return b|0}function eh(a,b){a=a|0;b=b|0;var c=0,d=0.0,e=0,f=0.0,g=0,h=0,l=0,m=0,n=0,o=0,q=0,r=0,s=0,t=0,u=0.0,v=0.0;t=a+8|0;c=k[t>>2]|0;if((k[c+180>>2]|0)>=1){e=1;while(1){eh(k[(k[c+184>>2]|0)+(e<<2)>>2]|0,b);c=k[t>>2]|0;if((e|0)>=(k[c+180>>2]|0))break;else e=e+1|0}}o=(rf(a)|0)==(a|0);s=k[t>>2]|0;if(o){c=j[s+236>>1]|0;e=j[s+238>>1]|0;if(c<<16>>16>e<<16>>16){f=2147483647.0;d=-2147483647.0}else{n=e<<16>>16;m=k[s+196>>2]|0;f=2147483647.0;d=-2147483647.0;o=c<<16>>16;while(1){l=k[m+(o<<6)>>2]|0;if((l|0)!=0?(q=k[m+(o<<6)+4>>2]|0,r=k[q>>2]|0,(r|0)!=0):0){g=k[r+8>>2]|0;a=i[g+156>>0]|0;if((l|0)>1&a<<24>>24!=0){h=1;do{g=k[(k[q+(h<<2)>>2]|0)+8>>2]|0;h=h+1|0;a=i[g+156>>0]|0}while((h|0)<(l|0)&a<<24>>24!=0)}if(!(a<<24>>24)){u=+p[g+16>>3]-+p[g+88>>3];f=f<u?f:u;a=k[(k[q+(l+-1<<2)>>2]|0)+8>>2]|0;if(i[a+156>>0]|0){g=l+-2|0;while(1){a=k[(k[q+(g<<2)>>2]|0)+8>>2]|0;if(!(i[a+156>>0]|0))break;else g=g+-1|0}}u=+p[a+16>>3]+ +p[a+96>>3];d=d>u?d:u}}if((o|0)<(n|0))o=o+1|0;else break}}h=k[s+180>>2]|0;if((h|0)>=1){g=k[s+184>>2]|0;a=1;while(1){r=k[(k[g+(a<<2)>>2]|0)+8>>2]|0;u=+p[r+16>>3]+-8.0;f=f<u?f:u;u=+p[r+32>>3]+8.0;d=d>u?d:u;if((a|0)==(h|0))break;else a=a+1|0}}}else{e=j[s+238>>1]|0;c=j[s+236>>1]|0;f=+(k[(k[(k[s+256>>2]|0)+8>>2]|0)+232>>2]|0);d=+(k[(k[(k[s+260>>2]|0)+8>>2]|0)+232>>2]|0)}b=k[(k[b+8>>2]|0)+196>>2]|0;v=+p[(k[(k[k[b+(e<<16>>16<<6)+4>>2]>>2]|0)+8>>2]|0)+24>>3]-+p[s+120>>3];u=+p[(k[(k[k[b+(c<<16>>16<<6)+4>>2]>>2]|0)+8>>2]|0)+24>>3]+ +p[s+128>>3];p[s+16>>3]=f;p[s+24>>3]=v;b=k[t>>2]|0;p[b+32>>3]=d;p[b+40>>3]=u;return}function fh(a,b,c){a=a|0;b=+b;c=+c;var d=0,e=0;e=a+8|0;a=k[e>>2]|0;if((k[a+180>>2]|0)>=1){d=1;while(1){fh(k[(k[a+184>>2]|0)+(d<<2)>>2]|0,b,c);a=k[e>>2]|0;if((d|0)<(k[a+180>>2]|0))d=d+1|0;else break}}e=a+16|0;p[e>>3]=+p[e>>3]*b;e=a+24|0;p[e>>3]=+p[e>>3]*c;e=a+32|0;p[e>>3]=+p[e>>3]*b;e=a+40|0;p[e>>3]=+p[e>>3]*c;return}function gh(a){a=a|0;var b=0,c=0,d=0,e=0.0,f=0.0;b=a+8|0;if(!(k[(k[b>>2]|0)+256>>2]|0)){d=fg(rf(a)|0)|0;i[(k[d+8>>2]|0)+156>>0]=2;c=fg(rf(a)|0)|0;i[(k[c+8>>2]|0)+156>>0]=2;if(((k[(k[b>>2]|0)+12>>2]|0)!=0?(rf(a)|0)!=(a|0):0)?(a=(au(a)|0)+8|0,(k[(k[a>>2]|0)+116>>2]&1|0)==0):0){a=k[b>>2]|0;f=+p[a+48>>3];e=+p[a+80>>3];Vg(d,c,+(~~(f>e?f:e)|0),0)|0}a=k[b>>2]|0;k[a+256>>2]=d;k[a+260>>2]=c}return}function hh(a,b){a=a|0;b=b|0;var c=0;b=k[b+8>>2]|0;if((i[b+156>>0]|0)==1){b=k[k[b+256>>2]>>2]|0;while(1){c=k[(k[b+8>>2]|0)+116>>2]|0;if(!c)break;else b=c}if(!(ju(a,k[((k[b>>2]&3|0)==3?b:b+32|0)+28>>2]|0)|0))b=(ju(a,k[((k[b>>2]&3|0)==2?b:b+-32|0)+28>>2]|0)|0)==0&1;else b=0}else b=0;return b|0}function ih(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0.0;d=($t(b)|0)+8|0;ZB(b,k[(k[d>>2]|0)+116>>2]&1);d=k[b+8>>2]|0;p[d+24>>3]=+(k[c+4>>2]|0);e=+(k[c>>2]|0)+ +p[d+88>>3];p[d+16>>3]=e;e=e+ +p[d+96>>3];d=($t(b)|0)+8|0;k[c>>2]=~~(e+ +(k[(k[d>>2]|0)+248>>2]|0));d=c;c=k[d+4>>2]|0;b=a;k[b>>2]=k[d>>2];k[b+4>>2]=c;return}function jh(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;h=r;r=r+16|0;g=h;b=rf(b)|0;f=pB(c)|0;if((f|0)!=(c|0))dg(f,c);i=k[c+8>>2]|0;k[i+236>>2]=e;f=k[(k[f+8>>2]|0)+232>>2]|0;k[i+232>>2]=f;k[(k[(k[(k[b+8>>2]|0)+196>>2]|0)+(f<<6)+4>>2]|0)+(e<<2)>>2]=c;k[g>>2]=k[d>>2];k[g+4>>2]=k[d+4>>2];ih(a,c,g);r=h;return}function kh(a){a=a|0;var b=0.0,c=0,d=0.0,e=0,f=0,g=0,h=0.0,i=0,l=0,m=0.0;i=(rf(a)|0)+8|0;i=k[(k[i>>2]|0)+196>>2]|0;if((rf(a)|0)==(a|0))h=8.0;else h=+(iB(a,k[13618]|0,8,0)|0);l=a+8|0;c=k[l>>2]|0;d=+p[c+120>>3];b=+p[c+128>>3];if((k[c+180>>2]|0)<1)c=0;else{g=1;f=0;while(1){e=k[(k[c+184>>2]|0)+(g<<2)>>2]|0;f=kh(e)|0|f;e=k[e+8>>2]|0;c=k[l>>2]|0;if((j[e+238>>1]|0)==(j[c+238>>1]|0)){m=h+ +p[e+120>>3];d=d>m?d:m}if((j[e+236>>1]|0)==(j[c+236>>1]|0)){m=h+ +p[e+128>>3];b=b>m?b:m}if((g|0)>=(k[c+180>>2]|0)){c=f;break}else g=g+1|0}}if((rf(a)|0)!=(a|0)?(k[(k[l>>2]|0)+12>>2]|0)!=0:0){g=(au(a)|0)+8|0;if(!(k[(k[g>>2]|0)+116>>2]&1)){g=k[l>>2]|0;c=1;d=d+ +p[g+56>>3];b=b+ +p[g+88>>3]}else c=1}g=k[l>>2]|0;p[g+120>>3]=d;p[g+128>>3]=b;if((rf(a)|0)!=(a|0)){a=k[l>>2]|0;l=i+(j[a+236>>1]<<6)+24|0;m=+p[l>>3];p[l>>3]=m>b?m:b;a=i+(j[a+238>>1]<<6)+16|0;m=+p[a>>3];p[a>>3]=m>d?m:d}return c|0}function lh(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0,f=0,g=0,h=0,i=0.0,l=0,m=0,n=0.0,o=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0.0;v=(rf(a)|0)+8|0;v=k[(k[v>>2]|0)+196>>2]|0;if((rf(a)|0)==(a|0))e=0;else e=iB(a,k[13618]|0,8,0)|0;w=a+8|0;f=k[w>>2]|0;d=+p[f+120>>3];c=+p[f+128>>3];if((k[f+180>>2]|0)>=1){h=e+b|0;i=+(e|0);g=1;while(1){e=k[(k[f+184>>2]|0)+(g<<2)>>2]|0;lh(e,h);e=k[e+8>>2]|0;f=k[w>>2]|0;if((j[e+238>>1]|0)==(j[f+238>>1]|0)){x=i+ +p[e+120>>3];d=d>x?d:x}if((j[e+236>>1]|0)==(j[f+236>>1]|0)){x=i+ +p[e+128>>3];c=c>x?c:x}if((g|0)<(k[f+180>>2]|0))g=g+1|0;else break}}p[f+120>>3]=d;p[f+128>>3]=c;if(((rf(a)|0)!=(a|0)?(l=k[w>>2]|0,(k[l+12>>2]|0)!=0):0)?(x=+p[l+104>>3],n=+p[l+72>>3],n=(x>n?x:n)-(c+(d+(+p[(k[(k[k[v+(j[l+236>>1]<<6)+4>>2]>>2]|0)+8>>2]|0)+24>>3]-+p[(k[(k[k[v+(j[l+238>>1]<<6)+4>>2]>>2]|0)+8>>2]|0)+24>>3]))),n>0.0):0){r=~~n;m=(rf(a)|0)+8|0;m=k[m>>2]|0;s=k[m+196>>2]|0;t=k[w>>2]|0;h=j[t+238>>1]|0;f=h<<16>>16;l=j[t+236>>1]|0;e=l<<16>>16;o=(r+1|0)/2|0;q=t+120|0;n=+p[q>>3]+ +(o|0);d=+(b|0);g=~~(n-(+p[s+(f<<6)+16>>3]-d));if((g|0)>0){c=+(g|0);if(h<<16>>16>=l<<16>>16)while(1){if((k[s+(f<<6)>>2]|0)>0){b=(k[(k[k[s+(f<<6)+4>>2]>>2]|0)+8>>2]|0)+24|0;p[b>>3]=c+ +p[b>>3]}if((f|0)>(e|0))f=f+-1|0;else break}x=+p[t+128>>3];i=x;c=c+(+(r-o|0)+x)-(+p[s+(e<<6)+24>>3]-d)}else{c=+p[t+128>>3];i=c;c=+(r-o|0)+c-(+p[s+(e<<6)+24>>3]-d)}f=~~c;if((f|0)>0?(u=j[m+236>>1]|0,l<<16>>16>u<<16>>16):0){c=+(f|0);f=u<<16>>16;do{e=e+-1|0;if((k[s+(e<<6)>>2]|0)>0){u=(k[(k[k[s+(e<<6)+4>>2]>>2]|0)+8>>2]|0)+24|0;p[u>>3]=c+ +p[u>>3]}}while((e|0)>(f|0))}p[t+128>>3]=+(r-o|0)+i;p[q>>3]=n}if((rf(a)|0)!=(a|0)){w=k[w>>2]|0;a=v+(j[w+236>>1]<<6)+24|0;x=+p[a>>3];n=+p[w+128>>3];p[a>>3]=x>n?x:n;a=v+(j[w+238>>1]<<6)+16|0;n=+p[a>>3];x=+p[w+120>>3];p[a>>3]=n>x?n:x}return}function mh(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;g=a+8|0;d=k[g>>2]|0;j[d+236>>1]=32767;j[d+238>>1]=-1;d=Kt(a)|0;c=k[g>>2]|0;if(!d)b=0;else{b=0;do{e=c+238|0;f=k[(k[d+8>>2]|0)+232>>2]|0;if((j[e>>1]|0)<(f|0))j[e>>1]=f;c=c+236|0;if((j[c>>1]|0)>(f|0))j[c>>1]=f;if(!b)b=d;else b=(f|0)<(k[(k[b+8>>2]|0)+232>>2]|0)?d:b;d=Lt(a,d)|0;c=k[g>>2]|0}while((d|0)!=0)}k[c+264>>2]=b;return}function nh(a){a=a|0;var b=0,c=0,d=0,e=0,f=0.0;b=ss(a,123084)|0;if(!b)e=2147483647;else{f=+aO(b);e=~~(f*+(Zs(a)|0))}d=a+8|0;b=k[d>>2]|0;if((k[b+220>>2]|0)>0){c=0;do{k[b+192>>2]=k[(k[b+216>>2]|0)+(c<<2)>>2];Gy(a,(k[b+180>>2]|0)==0&1,e)|0;c=c+1|0;b=k[d>>2]|0}while((c|0)<(k[b+220>>2]|0))}return}function oh(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,l=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0.0;F=r;r=r+128|0;x=F+16|0;E=F+8|0;y=F;if(!(ss(a,123093)|0))zh(a,b);else{C=a+8|0;D=(k[C>>2]|0)+136|0;j[D>>1]=m[D>>1]|16;k[12403]=0;k[x>>2]=k[12890];D=Vs(123101,x,0)|0;qu(D,123130,280,1)|0;hu(D,49616,49600);qh(a);c=ss(a,123084)|0;if(!c)B=2147483647;else{G=+aO(c);B=~~(G*+(Zs(a)|0))}rh(a,0);k[12403]=0;c=Kt(a)|0;if(c)do{if((sh(c)|0)==(c|0)){v=th(D,ht(c)|0)|0;k[(k[c+8>>2]|0)+148>>2]=v}c=Lt(a,c)|0}while((c|0)!=0);c=Kt(a)|0;if(c)do{d=c+8|0;if(!(k[(k[d>>2]|0)+148>>2]|0)){v=(sh(c)|0)+8|0;k[(k[d>>2]|0)+148>>2]=k[(k[v>>2]|0)+148>>2]}c=Lt(a,c)|0}while((c|0)!=0);c=Kt(a)|0;if(c)do{d=k[(k[c+8>>2]|0)+148>>2]|0;f=Es(a,c)|0;if(f)do{g=k[13678]|0;if(!((((g|0)!=0?(w=ts(f,g)|0,(w|0)!=0):0)?(i[w>>0]|0)!=0:0)?(oB(w)|0)<<24>>24==0:0))z=19;do if((z|0)==19){z=0;t=f+-32|0;v=(sh(k[((k[f>>2]&3|0)==2?f:t)+28>>2]|0)|0)+8|0;v=k[(k[v>>2]|0)+148>>2]|0;if((d|0)!=(v|0)){s=k[f>>2]&3;u=f+32|0;p=k[((s|0)==3?f:u)+28>>2]|0;q=k[(k[p+8>>2]|0)+212>>2]|0;s=k[(k[(k[((s|0)==2?f:t)+28>>2]|0)+8>>2]|0)+212>>2]|0;if((q|0)!=(s|0)){h=s;g=q;a:while(1){o=k[g+8>>2]|0;n=k[o+204>>2]|0;while(1){l=k[h+8>>2]|0;if((n|0)>=(k[l+204>>2]|0))break;h=k[l+200>>2]|0;if((g|0)==(h|0))break a}g=k[o+200>>2]|0;if((g|0)==(h|0)){g=h;break}}if(!((g|0)==(q|0)|(g|0)==(s|0))){if((yB(ss(q,123146)|0,0)|0)<<24>>24==0?(yB(ss(s,123146)|0,0)|0)<<24>>24==0:0){uh(D,d,v,f);break}g=Hs(D,d)|0;b:do if(!g)z=36;else while(1){u=Es(D,k[((k[g>>2]&3|0)==3?g:g+32|0)+28>>2]|0)|0;if((u|0)!=0?(k[((k[u>>2]&3|0)==2?u:u+-32|0)+28>>2]|0)==(v|0):0)break b;g=Is(D,g)|0;if(!g){z=36;break}}while(0);if((z|0)==36){z=0;s=k[12413]|0;k[12413]=s+1;k[y>>2]=s;TN(x,123154,y)|0;s=th(D,x)|0;t=Ls(D,s,d,0,1)|0;v=Ls(D,s,v,0,1)|0;s=k[f+8>>2]|0;u=s+156|0;t=(k[t+8>>2]|0)+156|0;k[t>>2]=(k[t>>2]|0)+((k[u>>2]|0)*1e3|0);v=k[v+8>>2]|0;t=v+170|0;q=j[t>>1]|0;s=j[s+170>>1]|0;j[t>>1]=(q&65535)>(s&65535)?q:s;v=v+156|0;k[v>>2]=(k[v>>2]|0)+(k[u>>2]|0)}break}}s=sh(p)|0;g=k[f>>2]&3;if((s|0)!=(k[(k[(k[(k[(k[((g|0)==3?f:u)+28>>2]|0)+8>>2]|0)+212>>2]|0)+8>>2]|0)+212>>2]|0)?(u=sh(k[((g|0)==2?f:t)+28>>2]|0)|0,(u|0)!=(k[(k[(k[(k[(k[((k[f>>2]&3|0)==2?f:t)+28>>2]|0)+8>>2]|0)+212>>2]|0)+8>>2]|0)+208>>2]|0)):0)g=v;else{g=d;d=v}uh(D,d,g,f)}}while(0);f=Gs(a,f)|0}while((f|0)!=0);c=Lt(a,c)|0}while((c|0)!=0);vh(a,D,0,0);c=Kt(D)|0;if(c)do{z=k[c+8>>2]|0;i[z+158>>0]=0;i[z+157>>0]=0;c=Lt(D,c)|0}while((c|0)!=0);c=Kt(D)|0;if(c)do{wh(D,c);c=Lt(D,c)|0}while((c|0)!=0);c=Kt(D)|0;if(c)do{k[(k[c+8>>2]|0)+128>>2]=0;c=Lt(D,c)|0}while((c|0)!=0);c=Kt(D)|0;if(c){d=0;do{if(!(k[(k[c+8>>2]|0)+128>>2]|0)){d=d+1|0;xh(D,c,d)}c=Lt(D,c)|0}while((c|0)!=0);if((d|0)>1?(A=th(D,123163)|0,e=Kt(D)|0,(e|0)!=0):0){c=1;do{if((k[(k[e+8>>2]|0)+128>>2]|0)==(c|0)){Ls(D,A,e,0,1)|0;c=c+1|0}e=Lt(D,e)|0}while((e|0)!=0);l=d}else l=d}else l=0;c=Kt(D)|0;if(c)do{d=Es(D,c)|0;if(d){h=c+8|0;do{f=k[h>>2]|0;e=k[f+180>>2]|0;f=k[f+184>>2]|0;if(!e)e=Cy((f<<2)+8|0)|0;else e=Ey(e,(f<<2)+8|0)|0;f=k[h>>2]|0;k[f+180>>2]=e;f=f+184|0;g=k[f>>2]|0;k[f>>2]=g+1;k[e+(g<<2)>>2]=d;g=k[h>>2]|0;k[(k[g+180>>2]|0)+(k[g+184>>2]<<2)>>2]=0;g=d+-32|0;f=k[(k[((k[d>>2]&3|0)==2?d:g)+28>>2]|0)+8>>2]|0;e=k[f+172>>2]|0;f=k[f+176>>2]|0;if(!e)e=Cy((f<<2)+8|0)|0;else e=Ey(e,(f<<2)+8|0)|0;k[(k[(k[((k[d>>2]&3|0)==2?d:g)+28>>2]|0)+8>>2]|0)+172>>2]=e;z=(k[(k[((k[d>>2]&3|0)==2?d:g)+28>>2]|0)+8>>2]|0)+176|0;A=k[z>>2]|0;k[z>>2]=A+1;k[(k[(k[(k[((k[d>>2]&3|0)==2?d:g)+28>>2]|0)+8>>2]|0)+172>>2]|0)+(A<<2)>>2]=d;A=k[(k[((k[d>>2]&3|0)==2?d:g)+28>>2]|0)+8>>2]|0;k[(k[A+172>>2]|0)+(k[A+176>>2]<<2)>>2]=0;d=Gs(D,d)|0}while((d|0)!=0)}c=Lt(D,c)|0}while((c|0)!=0);if(b){Vh(D);Th(D)}c=ss(a,138393)|0;if(!c)c=-1;else c=bO(c)|0;Fy(D,1,B,c)|0;B=k[C>>2]|0;j[B+236>>1]=32767;j[B+238>>1]=-1;if((l|0)>1){c=By((l<<2)+4|0)|0;d=1;while(1){k[c+(d<<2)>>2]=32767;if((d|0)==(l|0)){n=c;break}else d=d+1|0}}else n=0;c=Kt(a)|0;if(c){l=(n|0)==0;do{f=(sh(c)|0)+8|0;f=k[(k[(k[f>>2]|0)+148>>2]|0)+8>>2]|0;g=k[f+232>>2]|0;h=k[c+8>>2]|0;k[h+232>>2]=g;d=k[C>>2]|0;e=d+238|0;if((j[e>>1]|0)<(g|0))j[e>>1]=g;d=d+236|0;if((j[d>>1]|0)>(g|0))j[d>>1]=g;if(!l){B=k[f+128>>2]|0;k[h+128>>2]=B;B=n+(B<<2)|0;b=k[B>>2]|0;k[B>>2]=(b|0)<(g|0)?b:g}c=Lt(a,c)|0}while((c|0)!=0)}g=(n|0)!=0;if(g){c=Kt(a)|0;if(!c)c=1;else{do{B=k[c+8>>2]|0;C=B+232|0;k[C>>2]=(k[C>>2]|0)-(k[n+(k[B+128>>2]<<2)>>2]|0);c=Lt(a,c)|0}while((c|0)!=0);c=1}}else{B=j[(k[C>>2]|0)+236>>1]|0;d=B<<16>>16;if(B<<16>>16>0){c=Kt(a)|0;if(c)do{B=(k[c+8>>2]|0)+232|0;k[B>>2]=(k[B>>2]|0)-d;c=Lt(a,c)|0}while((c|0)!=0);c=k[C>>2]|0;C=c+236|0;j[C>>1]=(m[C>>1]|0)-d;c=c+238|0;j[c>>1]=(m[c>>1]|0)-d;c=0}else c=0}yh(a,c);c=Kt(D)|0;if(c)do{e=c+8|0;d=k[e>>2]|0;f=k[d+172>>2]|0;if(f){vP(f);d=k[e>>2]|0}d=k[d+180>>2]|0;if(d)vP(d);c=Lt(D,c)|0}while((c|0)!=0);c=(Kt(a)|0)+8|0;vP(k[(k[c>>2]|0)+112>>2]|0);c=Kt(a)|0;if(c)do{k[(k[c+8>>2]|0)+112>>2]=0;c=Lt(a,c)|0}while((c|0)!=0);if(g)vP(n);Ys(D)|0}if(i[137280]|0){D=k[24528]|0;C=k[a+8>>2]|0;a=j[C+236>>1]|0;k[E>>2]=j[C+238>>1];k[E+4>>2]=a;FN(D,123169,E)|0}r=F;return}function ph(a){a=a|0;return (wO(ht(a)|0,143893,7)|0)==0|0}function qh(a){a=a|0;var b=0,c=0,d=0,e=0;d=a+8|0;if(i[(k[d>>2]|0)+113>>0]&1){b=Kt(a)|0;if(b)do{c=Es(a,b)|0;if(c)do{e=(k[c+8>>2]|0)+170|0;j[e>>1]=(m[e>>1]|0)<<1;c=Gs(a,c)|0}while((c|0)!=0);b=Lt(a,b)|0}while((b|0)!=0);e=(k[d>>2]|0)+252|0;k[e>>2]=((k[e>>2]|0)+1|0)/2|0}return}function rh(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;if(Kt(a)|0){do if(GB(a)|0)if(!b){k[(k[a+8>>2]|0)+204>>2]=0;d=a;break}else{d=k[a+8>>2]|0;k[d+204>>2]=(k[(k[b+8>>2]|0)+204>>2]|0)+1;k[d+200>>2]=b;Gh(b,a);Fh(b,a);d=a;break}else d=b;while(0);b=Iu(a)|0;if(b)do{rh(b,d);b=Ju(b)|0}while((b|0)!=0);if((GB(a)|0)!=0?(c=Kt(a)|0,(c|0)!=0):0)do{b=(k[c+8>>2]|0)+212|0;if(!(k[b>>2]|0))k[b>>2]=a;c=Lt(a,c)|0}while((c|0)!=0);b=ss(a,123349)|0;a:do if((b|0)!=0?(i[b>>0]|0)!=0:0){do if(!(qO(b,123359)|0))b=d+8|0;else{if(!(qO(b,123363)|0)){b=d+8|0;i[(k[b>>2]|0)+241>>0]=1;break}do if(!(qO(b,123370)|0))b=d+8|0;else{if(!(qO(b,123374)|0)){b=d+8|0;i[(k[b>>2]|0)+242>>0]=1;break}if(qO(b,123354)|0)break a;Hh(a)|0;break a}while(0);d=Hh(a)|0;d=Ih(d,k[(k[b>>2]|0)+212>>2]|0)|0;k[(k[b>>2]|0)+212>>2]=d;break a}while(0);d=Hh(a)|0;d=Ih(d,k[(k[b>>2]|0)+208>>2]|0)|0;k[(k[b>>2]|0)+208>>2]=d}while(0);if(((GB(a)|0)!=0?(e=a+8|0,f=k[e>>2]|0,g=k[f+208>>2]|0,(g|0)!=0):0)?(g|0)==(k[f+212>>2]|0):0){g=Hh(a)|0;a=k[e>>2]|0;k[a+208>>2]=g;k[a+212>>2]=g}}return}function sh(a){a=a|0;var b=0,c=0,d=0;b=a+8|0;c=(k[b>>2]|0)+152|0;d=k[c>>2]|0;if(d){if((d|0)!=(a|0)){a=sh(d)|0;k[(k[b>>2]|0)+152>>2]=a;return a|0}}else k[c>>2]=a;return a|0}function th(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;b=Qt(a,b,1)|0;c=b+8|0;k[(k[c>>2]|0)+176>>2]=0;e=By(20)|0;d=k[c>>2]|0;k[d+172>>2]=e;k[d+184>>2]=0;d=By(20)|0;e=k[c>>2]|0;k[e+180>>2]=d;d=k[12403]|0;e=e+168|0;if(!d){k[e>>2]=0;k[(k[a+8>>2]|0)+192>>2]=b}else{k[e>>2]=d;k[(k[(k[12403]|0)+8>>2]|0)+164>>2]=b}k[12403]=b;k[(k[c>>2]|0)+164>>2]=0;return b|0}function uh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;h=r;r=r+16|0;f=h;e=Ls(a,b,c,0,0)|0;if(!e){e=Ls(a,c,b,0,0)|0;if(!e){e=Ls(a,b,c,0,1)|0;if(!e){b=ht(b)|0;d=ht(c)|0;k[f>>2]=b;k[f+4>>2]=d;Yr(1,123389,f)|0}else g=4}else g=4}else g=4;if((g|0)==4){d=k[d+8>>2]|0;b=m[d+170>>1]|0;d=k[d+156>>2]|0;g=k[e+8>>2]|0;f=g+170|0;c=m[f>>1]|0;j[f>>1]=c>>>0>b>>>0?c:b;g=g+156|0;k[g>>2]=(k[g>>2]|0)+d}r=h;return}function vh(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;if((GB(a)|0)!=0?(yB(ss(a,123146)|0,0)|0)<<24>>24!=0:0){e=Kt(a)|0;if(e){f=e;do{if(!(Hs(a,f)|0)){e=(sh(f)|0)+8|0;e=k[(k[e>>2]|0)+148>>2]|0;if(!c)c=th(b,123379)|0;Ls(b,c,e,0,1)|0}if(!(Es(a,f)|0)){e=(sh(f)|0)+8|0;e=k[(k[e>>2]|0)+148>>2]|0;if(!d)d=th(b,123384)|0;Ls(b,e,d,0,1)|0}f=Lt(a,f)|0}while((f|0)!=0)}if((d|0)!=0&(c|0)!=0){e=(Ls(b,c,d,0,1)|0)+8|0;e=(k[e>>2]|0)+156|0;k[e>>2]=(k[e>>2]|0)+1e3;e=d}else e=d}else e=d;d=Iu(a)|0;if(d)do{vh(d,b,c,e);d=Ju(d)|0}while((d|0)!=0);return}function wh(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,l=0;l=b+8|0;c=k[l>>2]|0;d=c+157|0;if(!(i[d>>0]|0)){i[d>>0]=1;i[c+158>>0]=1;c=Es(a,b)|0;if(c)do{h=c;c=Gs(a,c)|0;b=k[h>>2]&3;g=h+-32|0;e=k[((b|0)==2?h:g)+28>>2]|0;d=k[e+8>>2]|0;if(!(i[d+158>>0]|0)){if(!(i[d+157>>0]|0))wh(a,e)}else{f=h+32|0;d=Ls(a,e,k[((b|0)==3?h:f)+28>>2]|0,0,0)|0;if(!d){d=k[h>>2]&3;d=Ls(a,k[((d|0)==2?h:g)+28>>2]|0,k[((d|0)==3?h:f)+28>>2]|0,0,1)|0}f=k[h+8>>2]|0;b=m[f+170>>1]|0;f=k[f+156>>2]|0;g=k[d+8>>2]|0;e=g+170|0;d=m[e>>1]|0;j[e>>1]=d>>>0>b>>>0?d:b;g=g+156|0;k[g>>2]=(k[g>>2]|0)+f;_t(a,h)|0}}while((c|0)!=0);i[(k[l>>2]|0)+158>>0]=0}return}function xh(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=(k[b+8>>2]|0)+128|0;if(!(k[d>>2]|0)){k[d>>2]=c;d=Es(a,b)|0;if(d)do{xh(a,k[((k[d>>2]&3|0)==2?d:d+-32|0)+28>>2]|0,c);d=Gs(a,d)|0}while((d|0)!=0);d=Hs(a,b)|0;if(d)do{xh(a,k[((k[d>>2]&3|0)==3?d:d+32|0)+28>>2]|0,c);d=Is(a,d)|0}while((d|0)!=0)}return}function yh(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;g=a+8|0;c=k[g>>2]|0;if((k[c+180>>2]|0)>=1){d=1;while(1){yh(k[(k[c+184>>2]|0)+(d<<2)>>2]|0,0);c=k[g>>2]|0;if((d|0)<(k[c+180>>2]|0))d=d+1|0;else break}}if((b|0)!=0|(k[c+200>>2]|0)!=0){j[c+236>>1]=32767;j[c+238>>1]=-1;d=Kt(a)|0;if(!d)c=0;else{c=0;do{f=k[(k[d+8>>2]|0)+232>>2]|0;b=k[g>>2]|0;e=b+238|0;if((j[e>>1]|0)<(f|0))j[e>>1]=f;b=b+236|0;if((j[b>>1]|0)>(f|0)){j[b>>1]=f;c=d}d=Lt(a,d)|0}while((d|0)!=0)}k[(k[g>>2]|0)+264>>2]=c}return}function zh(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,l=0,m=0,n=0,o=0,p=0,q=0;q=r;r=r+16|0;c=q;qh(a);do if(!b){Ah(a,a);bi(a);Bh(c,a);d=k[c>>2]|0;c=k[c+4>>2]|0;Ai(a,0);l=0;o=a+8|0}else{Vh(a);Th(a);Ah(a,a);bi(a);Bh(c,a);d=k[c>>2]|0;c=k[c+4>>2]|0;Ai(a,0);e=a+8|0;o=k[e>>2]|0;if((k[o+220>>2]|0)<=1?(k[o+180>>2]|0)<=0:0){l=b;o=e;break}k[b+32>>2]=1;l=0;o=e}while(0);Qh(a);g=k[o>>2]|0;if(!((k[g+228>>2]|0)==0?(k[g+224>>2]|0)==0:0))f=9;if((f|0)==9?(h=Kt(a)|0,(h|0)!=0):0){g=c&65535;f=d&65535;c=0;e=h;do{if((e|0)==(pB(e)|0)){d=e+8|0;b=k[d>>2]|0;if((k[b+184>>2]|0)==0?(m=k[(k[o>>2]|0)+228>>2]|0,!((m|0)==0|(e|0)==(m|0))):0){c=bg(e,m,0)|0;b=k[c+8>>2]|0;j[b+170>>1]=g;k[b+156>>2]=0;b=k[d>>2]|0}if((k[b+176>>2]|0)==0?(n=k[(k[o>>2]|0)+224>>2]|0,!((n|0)==0|(e|0)==(n|0))):0){c=bg(n,e,0)|0;h=k[c+8>>2]|0;j[h+170>>1]=f;k[h+156>>2]=0}}e=Lt(a,e)|0}while((e|0)!=0);if(c)Ai(a,0)}g=(l|0)==0;if(g)nh(a);else Uh(a,l);c=Kt(a)|0;d=k[o>>2]|0;do if(c){j[d+236>>1]=32767;j[d+238>>1]=-1;do{b=pB(c)|0;f=k[c+8>>2]|0;d=k[f+232>>2]|0;do if((b|0)!=(c|0)){if(!g)if(!d)d=0;else break;d=d+(k[(k[b+8>>2]|0)+232>>2]|0)|0;k[f+232>>2]=d}while(0);b=k[o>>2]|0;e=b+238|0;if((j[e>>1]|0)<(d|0))j[e>>1]=d;b=b+236|0;if((j[b>>1]|0)>(d|0))j[b>>1]=d;switch(i[f+159>>0]|0){case 6:case 0:break;default:rB(c)}c=Lt(a,c)|0}while((c|0)!=0);if((rf(a)|0)==(a|0)){if((k[13602]|0)!=100){Dh(a);break}c=k[o>>2]|0;if((k[c+180>>2]|0)>=1){d=1;while(1){Ch(k[(k[c+184>>2]|0)+(d<<2)>>2]|0);c=k[o>>2]|0;if((d|0)>=(k[c+180>>2]|0))break;else d=d+1|0}}}}else{j[d+238>>1]=0;j[d+236>>1]=0}while(0);c=k[o>>2]|0;if((k[c+220>>2]|0)>0){g=0;do{d=k[(k[c+216>>2]|0)+(g<<2)>>2]|0;k[c+192>>2]=d;if(d){c=d;do{f=c+8|0;c=k[f>>2]|0;e=c+176|0;d=k[e>>2]|0;if((d|0)>-1){b=c+172|0;c=d;while(1){k[(k[b>>2]|0)+(c<<2)>>2]=0;if((c|0)>0)c=c+-1|0;else break}c=k[f>>2]|0}k[e>>2]=0;e=c+184|0;d=k[e>>2]|0;if((d|0)>-1){b=c+180|0;c=d;while(1){k[(k[b>>2]|0)+(c<<2)>>2]=0;if((c|0)>0)c=c+-1|0;else break}c=k[f>>2]|0}k[e>>2]=0;i[c+157>>0]=0;c=k[c+164>>2]|0}while((c|0)!=0);c=k[o>>2]|0}g=g+1|0}while((g|0)<(k[c+220>>2]|0))}c=Kt(a)|0;if(c)do{d=Es(a,c)|0;if(d)do{g=d+8|0;b=k[g>>2]|0;h=k[b+172>>2]|0;if((h|0)!=0?(p=h+8|0,(d|0)==(k[(k[p>>2]|0)+116>>2]|0)):0){b=Kt(a)|0;if(b)do{e=Es(a,b)|0;if(e)do{do if((d|0)!=(e|0)){f=(k[e+8>>2]|0)+172|0;n=k[f>>2]|0;if(!((n|0)!=0&(h|0)==(n|0)))break;k[f>>2]=0}while(0);e=Gs(a,e)|0}while((e|0)!=0);b=Lt(a,b)|0}while((b|0)!=0);vP(k[p>>2]|0);vP(h);b=k[g>>2]|0}k[b+172>>2]=0;d=Gs(a,d)|0}while((d|0)!=0);c=Lt(a,c)|0}while((c|0)!=0);vP(k[(k[o>>2]|0)+216>>2]|0);a=k[o>>2]|0;k[a+216>>2]=0;k[a+220>>2]=0;r=q;return}function Ah(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0;b=Iu(b)|0;if(b){j=a+8|0;do{if(wO(ht(b)|0,143893,7)|0){c=xB(ss(b,123349)|0,49656,49680)|0;i[(k[b+8>>2]|0)+274>>0]=c;if(!c)Ah(a,b);else l=5}else{c=7;l=5}a:do if((l|0)==5){l=0;if((c|0)==7&(k[13602]|0)==100){Eh(a,b);break}g=Kt(b)|0;if(g){h=c&255;e=g+8|0;i[(k[e>>2]|0)+159>>0]=h;d=Lt(b,g)|0;if(d)do{qB(g,d)|0;i[(k[d+8>>2]|0)+159>>0]=i[(k[e>>2]|0)+159>>0]|0;d=Lt(b,d)|0}while((d|0)!=0);b:do switch(c|0){case 3:case 2:{d=k[j>>2]|0;e=d+224|0;f=k[e>>2]|0;if(!f){k[e>>2]=g;break b}else{g=qB(f,g)|0;d=k[j>>2]|0;k[d+224>>2]=g;break b}}case 5:case 4:{d=k[j>>2]|0;e=d+228|0;f=k[e>>2]|0;if(!f){k[e>>2]=g;break b}else{g=qB(f,g)|0;d=k[j>>2]|0;k[d+228>>2]=g;break b}}default:break a}while(0);switch(c|0){case 3:{i[(k[(k[d+224>>2]|0)+8>>2]|0)+159>>0]=h;break a}case 5:{i[(k[(k[d+228>>2]|0)+8>>2]|0)+159>>0]=h;break a}default:break a}}}while(0);b=Ju(b)|0}while((b|0)!=0)}return}function Bh(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;g=b+8|0;c=k[g>>2]|0;b=k[c+228>>2]|0;c=k[c+224>>2]|0;d=(c|0)==0;if(!b)if(d){k[a>>2]=0;k[a+4>>2]=0}else f=5;else if(d)f=6;else f=5;if((f|0)==5){b=pB(c)|0;c=k[g>>2]|0;k[c+224>>2]=b;b=k[c+228>>2]|0;if(!b){e=0;f=12}else f=6}do if((f|0)==6){b=pB(b)|0;c=k[g>>2]|0;k[c+228>>2]=b;if(b){d=b+8|0;b=k[d>>2]|0;e=(i[b+159>>0]|0)==5&1;b=k[k[b+180>>2]>>2]|0;if(b){while(1){f=k[((k[b>>2]&3|0)==2?b:b+-32|0)+28>>2]|0;if((f|0)!=(pB(f)|0)){f=9;break}Ph(b);b=k[k[(k[d>>2]|0)+180>>2]>>2]|0;if(!b){f=11;break}}if((f|0)==9)Wa(123272,123212,346,123304);else if((f|0)==11){c=k[g>>2]|0;f=12;break}}else f=12}else{e=0;f=12}}while(0);if((f|0)==12){b=k[c+224>>2]|0;a:do if(b){c=b+8|0;b=k[c>>2]|0;d=(i[b+159>>0]|0)==3&1;b=k[k[b+172>>2]>>2]|0;if(!b)h=d;else{while(1){g=k[((k[b>>2]&3|0)==3?b:b+32|0)+28>>2]|0;if((g|0)!=(pB(g)|0))break;Ph(b);b=k[k[(k[c>>2]|0)+172>>2]>>2]|0;if(!b){h=d;break a}}Wa(123317,123212,353,123304)}}else h=0;while(0);k[a>>2]=h;k[a+4>>2]=e}return}function Ch(a){a=a|0;var b=0,c=0,d=0;c=a+8|0;a=k[c>>2]|0;d=k[(k[(k[a+264>>2]|0)+8>>2]|0)+232>>2]|0;b=a+236|0;j[b>>1]=(m[b>>1]|0)+d;b=a+238|0;j[b>>1]=(m[b>>1]|0)+d;if((k[a+180>>2]|0)>=1){b=1;while(1){Ch(k[(k[a+184>>2]|0)+(b<<2)>>2]|0);a=k[c>>2]|0;if((b|0)>=(k[a+180>>2]|0))break;else b=b+1|0}}return}function Dh(a){a=a|0;var b=0;b=Iu(rf(a)|0)|0;if(b)do{if((i[(k[b+8>>2]|0)+274>>0]|0)==7)Eh(a,b);b=Ju(b)|0}while((b|0)!=0);return}function Eh(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=b+8|0;d=(k[c>>2]|0)+200|0;a:do if((k[d>>2]|0)==0?(k[d>>2]=a,Fh(a,b),(Kt(b)|0)!=0):0){Gh(a,b);if((k[13602]|0)!=100){mh(b);break}zh(b,0);e=k[c>>2]|0;c=k[e+192>>2]|0;if(c){d=0;do{a=k[c+8>>2]|0;if(!(k[a+232>>2]|0))d=(i[a+156>>0]|0)==0?c:d;c=k[a+164>>2]|0}while((c|0)!=0);a=d;if(a){k[e+264>>2]=a;c=Kt(b)|0;if(!c)break;while(1){d=c+8|0;if(!((c|0)==(a|0)?1:(k[(k[d>>2]|0)+216>>2]|0)<2))break;qB(c,a)|0;i[(k[d>>2]|0)+159>>0]=7;c=Lt(b,c)|0;if(!c)break a}Wa(123234,123212,242,123219)}}Wa(123197,123212,238,123219)}while(0);return}function Fh(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;c=Kt(b)|0;if(c){h=a+8|0;do{g=c;c=Lt(b,c)|0;f=g+8|0;if(!(i[(k[f>>2]|0)+159>>0]|0)){d=k[h>>2]|0;a=k[d+180>>2]|0;a:do if((a|0)>1){a=1;while(1){if(ju(k[(k[d+184>>2]|0)+(a<<2)>>2]|0,g)|0){d=a;break}e=a+1|0;d=k[h>>2]|0;a=k[d+180>>2]|0;if((e|0)>=(a|0)){d=e;break a}else a=e}a=k[(k[h>>2]|0)+180>>2]|0}else d=1;while(0);if((d|0)<(a|0))_t(b,g)|0;k[(k[f>>2]|0)+212>>2]=0}else _t(b,g)|0}while((c|0)!=0)}a=Kt(b)|0;if(a)do{c=Es(rf(b)|0,a)|0;if(c)do{if(ju(b,k[((k[c>>2]&3|0)==2?c:c+-32|0)+28>>2]|0)|0)Os(b,c,1)|0;c=Gs(rf(b)|0,c)|0}while((c|0)!=0);a=Lt(b,a)|0}while((a|0)!=0);return}function Gh(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;d=a+8|0;c=k[d>>2]|0;f=c+180|0;a=k[f>>2]|0;e=a+1|0;k[f>>2]=e;c=k[c+184>>2]|0;if(!c)a=By((a<<2)+8|0)|0;else a=Dy(c,a+2|0,4,e)|0;k[(k[d>>2]|0)+184>>2]=a;k[a+(e<<2)>>2]=b;ly(b);return}function Hh(a){a=a|0;var b=0,c=0;c=Kt(a)|0;if(c){b=sh(c)|0;c=Lt(a,c)|0;if(c)do{Ih(b,c)|0;c=Lt(a,c)|0}while((c|0)!=0)}else b=0;return b|0}function Ih(a,b){a=a|0;b=b|0;if(b){a=sh(a)|0;b=(sh(b)|0)+8|0;k[(k[b>>2]|0)+152>>2]=a}return a|0}function Jh(a,b,c){a=a|0;b=b|0;c=c|0;qu(b,123130,k[c>>2]|0,1)|0;return}function Kh(a,b,c){a=a|0;b=b|0;c=c|0;qu(b,123479,k[c+4>>2]|0,1)|0;return}function Lh(a,b,c){a=a|0;b=b|0;c=c|0;qu(b,123464,k[c+8>>2]|0,1)|0;return}function Mh(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0;o=r;r=r+240|0;m=o+120|0;n=o;j=ks(a,2,123494,0)|0;k[13682]=j;j=ks(a,2,123503,0)|0;k[13683]=j;if((j|0)!=0|(k[13682]|0)!=0?(b=Kt(a)|0,(b|0)!=0):0)do{c=Js(a,b)|0;if(c){d=0;j=0;while(1){e=k[c>>2]|0;g=e&3;f=k[((g|0)==2?c:c+-32|0)+28>>2]|0;h=c+32|0;a:do if((f|0)!=(k[((g|0)==3?c:h)+28>>2]|0)){g=k[13682]|0;do if((f|0)==(b|0)&(g|0)!=0){e=ts(c,g)|0;if(!(i[e>>0]|0)){e=k[c>>2]|0;break}else{d=Nh(m,d,b,c,e)|0;e=j;break a}}while(0);f=k[13683]|0;if(((f|0)!=0?(k[((e&3|0)==3?c:h)+28>>2]|0)==(b|0):0)?(l=ts(c,f)|0,(i[l>>0]|0)!=0):0)e=Nh(n,j,b,c,l)|0;else e=j}else e=j;while(0);c=Ks(a,c,b)|0;if(!c){f=e;break}else j=e}if((d|0)>0){e=0;do{c=m+(e*24|0)+4|0;if((k[m+(e*24|0)+8>>2]|0)>1)Oh(b,c);c=k[c>>2]|0;if(c)vP(c);e=e+1|0}while((e|0)!=(d|0))}if((f|0)>0){d=0;do{c=n+(d*24|0)+4|0;if((k[n+(d*24|0)+8>>2]|0)>1)Oh(b,c);c=k[c>>2]|0;if(c)vP(c);d=d+1|0}while((d|0)!=(f|0))}}b=Lt(a,b)|0}while((b|0)!=0);r=o;return}function Nh(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0.0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0;q=r;r=r+16|0;l=q;o=q+12|0;n=q+8|0;do if((b|0)>0){j=i[e>>0]|0;g=0;while(1){h=k[a+(g*24|0)>>2]|0;if((i[h>>0]|0)==j<<24>>24?(qO(h,e)|0)==0:0)break;g=g+1|0;if((g|0)>=(b|0)){m=10;break}}if((m|0)==10){if((b|0)<=4){m=12;break}a=ht(c)|0;k[l>>2]=5;k[l+4>>2]=a;Yr(1,123512,l)|0;break}e=a+(g*24|0)+4|0;j=k[e>>2]|0;l=a+(g*24|0)+8|0;h=k[l>>2]|0;if(!j)h=Cy((h<<2)+8|0)|0;else h=Ey(j,(h<<2)+8|0)|0;k[e>>2]=h;j=k[l>>2]|0;m=j+1|0;k[l>>2]=m;k[h+(j<<2)>>2]=d;k[(k[e>>2]|0)+(m<<2)>>2]=0;h=g;m=13}else{g=0;m=12}while(0);if((m|0)==12){t=a+(g*24|0)+8|0;k[t>>2]=0;s=By(8)|0;l=a+(g*24|0)+4|0;k[l>>2]=s;j=k[t>>2]|0;h=j+1|0;k[t>>2]=h;k[s+(j<<2)>>2]=d;k[(k[l>>2]|0)+(h<<2)>>2]=0;k[a+(g*24|0)>>2]=e;k[a+(g*24|0)+12>>2]=0;p[a+(g*24|0)+16>>3]=0.0;b=b+1|0;h=g;m=13}if((m|0)==13){Yw(d,o,n);g=(k[((k[d>>2]&3|0)==2?d:d+-32|0)+28>>2]|0)==(c|0)?k[n>>2]|0:k[o>>2]|0;if(g){s=a+(h*24|0)+12|0;t=k[s>>2]|0;k[s>>2]=t+1;if(!t)f=+Zw(d,g);else f=0.0;p[a+(h*24|0)+16>>3]=f}}r=q;return b|0}function Oh(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0.0,h=0.0,j=0,l=0.0,m=0.0,n=0,o=0.0,q=0.0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0.0;z=r;r=r+80|0;y=z+68|0;x=z+64|0;u=z;w=b+4|0;f=k[w>>2]|0;if((f|0)>0){j=k[b>>2]|0;n=a+8|0;t=k[n>>2]|0;q=+p[t+16>>3];o=+p[t+24>>3];s=0;m=0.0;l=0.0;do{d=k[j+(s<<2)>>2]|0;e=k[d>>2]&3;c=k[((e|0)==2?d:d+-32|0)+28>>2]|0;if((c|0)==(a|0))c=k[((e|0)==3?d:d+32|0)+28>>2]|0;v=k[c+8>>2]|0;A=+p[v+16>>3]-q;g=+p[v+24>>3]-o;h=+MM(A,g);m=m+A/h;l=l+g/h;s=s+1|0}while((s|0)<(f|0));v=n;c=t}else{v=a+8|0;t=k[v>>2]|0;c=t;q=+p[t+16>>3];o=+p[t+24>>3];m=0.0;l=0.0}h=+MM(m,l);g=+p[c+88>>3]+ +p[c+96>>3];A=+p[c+80>>3];t=($t(a)|0)+8|0;c=k[v>>2]|0;if(g>A+ +(k[(k[t>>2]|0)+252>>2]|0))g=+p[c+88>>3]+ +p[c+96>>3];else{g=+p[c+80>>3];c=($t(a)|0)+8|0;g=g+ +(k[(k[c>>2]|0)+252>>2]|0);c=k[v>>2]|0}A=m/h*g+ +p[c+16>>3];g=l/h*g+ +p[c+24>>3];p[u>>3]=q;t=u+8|0;p[t>>3]=o;p[u+16>>3]=(q*2.0+A)/3.0;p[u+24>>3]=(o*2.0+g)/3.0;p[u+32>>3]=(q+A*2.0)/3.0;p[u+40>>3]=(o+g*2.0)/3.0;p[u+48>>3]=A;p[u+56>>3]=g;CA(a,u);c=k[v>>2]|0;g=+p[u>>3]-+p[c+16>>3];h=+p[t>>3]-+p[c+24>>3];g=+(~~(g+(g>=0.0?.5:-.5))|0);h=+(~~(h+(h>=0.0?.5:-.5))|0);A=+p[c+88>>3];t=~~((A+g)*256.0/(A+ +p[c+96>>3]))&255;if((k[w>>2]|0)>0){s=0;do{c=k[(k[b>>2]|0)+(s<<2)>>2]|0;Yw(c,y,x);if(c)do{n=(c|0)==0;a:do if(!n){j=c;do{d=k[j>>2]|0;f=j+-32|0;if((k[((d&3|0)==2?j:f)+28>>2]|0)==(a|0)){d=k[j+8>>2]|0;p[d+56>>3]=g;p[d+64>>3]=h;p[d+72>>3]=0.0;k[d+80>>2]=0;i[d+84>>0]=1;i[d+85>>0]=0;i[d+86>>0]=0;i[d+87>>0]=0;i[d+88>>0]=t;i[d+89>>0]=0;k[d+92>>2]=0;d=k[j>>2]|0}e=j+8|0;if((k[((d&3|0)==3?j:j+32|0)+28>>2]|0)==(a|0)){u=k[e>>2]|0;p[u+16>>3]=g;p[u+24>>3]=h;p[u+32>>3]=0.0;k[u+40>>2]=0;i[u+44>>0]=1;i[u+45>>0]=0;i[u+46>>0]=0;i[u+47>>0]=0;i[u+48>>0]=t;i[u+49>>0]=0;k[u+52>>2]=0}if((i[(k[e>>2]|0)+112>>0]|0)!=1)break;d=k[(k[((k[j>>2]&3|0)==2?j:f)+28>>2]|0)+8>>2]|0;if((i[d+156>>0]|0)!=1)break;if((k[d+184>>2]|0)!=1)break;j=k[k[d+180>>2]>>2]|0}while((j|0)!=0);if(!n){j=c;do{d=k[j>>2]|0;if((k[((d&3|0)==2?j:j+-32|0)+28>>2]|0)==(a|0)){d=k[j+8>>2]|0;p[d+56>>3]=g;p[d+64>>3]=h;p[d+72>>3]=0.0;k[d+80>>2]=0;i[d+84>>0]=1;i[d+85>>0]=0;i[d+86>>0]=0;i[d+87>>0]=0;i[d+88>>0]=t;i[d+89>>0]=0;k[d+92>>2]=0;d=k[j>>2]|0}e=j+32|0;f=j+8|0;if((k[((d&3|0)==3?j:e)+28>>2]|0)==(a|0)){u=k[f>>2]|0;p[u+16>>3]=g;p[u+24>>3]=h;p[u+32>>3]=0.0;k[u+40>>2]=0;i[u+44>>0]=1;i[u+45>>0]=0;i[u+46>>0]=0;i[u+47>>0]=0;i[u+48>>0]=t;i[u+49>>0]=0;k[u+52>>2]=0}if((i[(k[f>>2]|0)+112>>0]|0)!=1)break a;d=k[(k[((k[j>>2]&3|0)==3?j:e)+28>>2]|0)+8>>2]|0;if((i[d+156>>0]|0)!=1)break a;if((k[d+176>>2]|0)!=1)break a;j=k[k[d+172>>2]>>2]|0}while((j|0)!=0)}}while(0);c=k[(k[c+8>>2]|0)+172>>2]|0}while((c|0)!=0);s=s+1|0}while((s|0)<(k[w>>2]|0));c=k[v>>2]|0}i[c+145>>0]=1;r=z;return}function Ph(a){a=a|0;var b=0,c=0,d=0;Zf(a);b=k[a>>2]&3;c=a+-32|0;d=a+32|0;b=Vf(k[((b|0)==2?a:c)+28>>2]|0,k[((b|0)==3?a:d)+28>>2]|0)|0;if(!b){b=k[a>>2]&3;bg(k[((b|0)==2?a:c)+28>>2]|0,k[((b|0)==3?a:d)+28>>2]|0,a)|0}else ig(a,b);return}function Qh(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;e=a+8|0;a=k[e>>2]|0;if((k[a+220>>2]|0)>0){d=0;do{b=k[(k[a+216>>2]|0)+(d<<2)>>2]|0;c=a+192|0;k[c>>2]=b;if(b){do{f=k[b+8>>2]|0;i[f+157>>0]=0;b=k[f+164>>2]|0}while((b|0)!=0);b=k[c>>2]|0;if(b){a=b;do{Rh(a);a=k[(k[a+8>>2]|0)+164>>2]|0}while((a|0)!=0);a=k[e>>2]|0}}d=d+1|0}while((d|0)<(k[a+220>>2]|0))}return}function Rh(a){a=a|0;var b=0,c=0,d=0,e=0;e=a+8|0;a=k[e>>2]|0;b=a+157|0;if(!(i[b>>0]|0)){i[b>>0]=1;i[a+158>>0]=1;b=k[k[a+180>>2]>>2]|0;if(b){d=0;do{a=k[((k[b>>2]&3|0)==2?b:b+-32|0)+28>>2]|0;c=k[a+8>>2]|0;if(!(i[c+158>>0]|0))if(!(i[c+157>>0]|0)){Rh(a);a=d}else a=d;else{Ph(b);a=d+-1|0}d=a+1|0;a=k[e>>2]|0;b=k[(k[a+180>>2]|0)+(d<<2)>>2]|0}while((b|0)!=0)}i[a+158>>0]=0}return}function Sh(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;c=Kt(a)|0;if(!c)b=0;else{b=0;do{d=Es(a,c)|0;if(d)do{f=k[d>>2]&3;e=k[(k[(k[((f|0)==2?d:d+-32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0;f=k[(k[(k[((f|0)==3?d:d+32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0;if((e|0)!=(f|0)){f=e-f|0;b=b+-1+((f|0)>-1?f:0-f|0)|0}d=Gs(a,d)|0}while((d|0)!=0);c=Lt(a,c)|0}while((c|0)!=0)}return b|0}function Th(a){a=a|0;var b=0,c=0,d=0,e=0;b=Kt(a)|0;if(b)do{c=k[b+8>>2]|0;e=k[c+176>>2]|0;if((e|0)>0){c=k[c+172>>2]|0;d=0;do{i[(k[(k[c+(d<<2)>>2]|0)+8>>2]|0)+112>>0]=0;d=d+1|0}while((d|0)<(e|0))}b=Lt(a,b)|0}while((b|0)!=0);return}function Uh(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0.0,h=0,j=0,l=0.0,m=0,n=0,o=0.0,q=0,s=0,t=0.0,u=0.0,v=0,w=0,x=0,y=0.0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;J=r;r=r+16|0;H=J;G=k[b+24>>2]|0;c=Cy((Zs(a)|0)*24|0)|0;k[12426]=c;k[12427]=0;c=Kt(a)|0;if(c)do{k[(k[c+8>>2]|0)+120>>2]=-1;c=Lt(a,c)|0}while((c|0)!=0);c=Kt(a)|0;if(c)do{j=c+8|0;do if(!(k[(k[j>>2]|0)+216>>2]|0)){D=By(4)|0;F=k[12427]|0;k[(k[12426]|0)+(F*24|0)>>2]=D;k[k[(k[12426]|0)+(F*24|0)>>2]>>2]=c;D=k[12426]|0;k[D+(F*24|0)+4>>2]=1;F=k[j>>2]|0;E=k[12427]|0;p[D+(E*24|0)+8>>3]=+p[F+32>>3];p[D+(E*24|0)+16>>3]=+p[F+40>>3];k[F+120>>2]=E;k[12427]=(k[12427]|0)+1}else{f=pB(c)|0;h=f+8|0;d=k[h>>2]|0;e=k[d+120>>2]|0;if((e|0)>-1){E=k[12426]|0;D=E+(e*24|0)+4|0;F=k[D>>2]|0;k[D>>2]=F+1;k[(k[E+(e*24|0)>>2]|0)+(F<<2)>>2]=c;F=k[j>>2]|0;E=k[12426]|0;D=E+(e*24|0)+8|0;p[D>>3]=+p[F+32>>3]+ +p[D>>3];E=E+(e*24|0)+16|0;y=+p[E>>3];u=+p[F+40>>3];p[E>>3]=y<u?u:y;k[F+120>>2]=e;break}e=By(k[d+216>>2]<<2)|0;d=k[12427]|0;k[(k[12426]|0)+(d*24|0)>>2]=e;k[k[(k[12426]|0)+(d*24|0)>>2]>>2]=f;e=k[12426]|0;if((f|0)==(c|0)){k[e+(d*24|0)+4>>2]=1;d=k[h>>2]|0;f=k[12427]|0;p[e+(f*24|0)+8>>3]=+p[d+32>>3];p[e+(f*24|0)+16>>3]=+p[d+40>>3];e=d;d=k[j>>2]|0}else{k[(k[e+(d*24|0)>>2]|0)+4>>2]=c;F=k[12426]|0;k[F+(d*24|0)+4>>2]=2;e=k[h>>2]|0;d=k[j>>2]|0;f=k[12427]|0;p[F+(f*24|0)+8>>3]=+p[e+32>>3]+ +p[d+32>>3];y=+p[e+40>>3];u=+p[d+40>>3];p[F+(f*24|0)+16>>3]=y<u?u:y}k[e+120>>2]=f;k[d+120>>2]=k[12427];k[12427]=(k[12427]|0)+1}while(0);c=Lt(a,c)|0}while((c|0)!=0);C=(G|0)==-1;a:do if(C|(G|0)>0){D=b+8|0;B=C^1;E=a+8|0;F=k[24528]|0;c=0;l=1797693134862315708145274.0e284;while(1){d=Kt(a)|0;if(d)do{k[(k[d+8>>2]|0)+232>>2]=0;d=Lt(a,d)|0}while((d|0)!=0);nh(a);g=+Xh(a);p[D>>3]=g;if(i[137280]|0){p[H>>3]=g;FN(F,123564,H)|0;g=+p[D>>3]}if(!(!(g<=+p[b>>3])&(!(l<=g)|B)))break;A=By((Zs(a)|0)<<2)|0;k[12428]=A;if((Zs(a)|0)>0){d=0;do{k[(k[12428]|0)+(d<<2)>>2]=d;d=d+1|0}while((d|0)<(Zs(a)|0))}Yh(a);j=k[12428]|0;dO(j,Zs(a)|0,4,63);j=k[12429]|0;h=k[12428]|0;m=k[12430]|0;e=0;while(1){if((e|0)>=(j|0)){d=0;o=0.0;break}d=k[h+(e<<2)>>2]|0;f=e+1|0;if((k[m+(d*40|0)+12>>2]|0)<2)e=f;else{I=26;break}}if((I|0)==26){I=0;if((j|0)>(f|0))o=+p[m+((k[h+(f<<2)>>2]|0)*40|0)+24>>3];else o=0.0}if((e|0)!=(j|0)){dO(k[m+(d*40|0)+4>>2]|0,k[m+(d*40|0)+12>>2]|0,4,64);e=k[12430]|0;l=+p[e+(d*40|0)+24>>3];if(!(!(o<=l*.25)?!(o>=l*3.0*.25):0))o=l*.5;A=k[e+(d*40|0)+12>>2]|0;if((A|0)>0){w=0;x=0;z=0;h=0;y=0.0;while(1){j=k[e+(d*40|0)+8>>2]|0;do if(!(k[j+(z<<2)>>2]|0)){s=k[(k[e+(d*40|0)+4>>2]|0)+(z<<2)>>2]|0;v=s+8|0;l=+p[v>>3];t=l*72.0;f=k[E>>2]|0;u=y>0.0?+(k[f+248>>2]|0):0.0;m=(w|0)!=0;if(!(m&!(y+t+u<=o))){j=m?w:1;f=m?x:s;l=y+(t+u);break}q=x+4|0;m=k[q>>2]|0;if((m|0)>0){n=s+4|0;e=k[n>>2]|0;f=m;j=0;do{if((e|0)>0){f=0;do{e=(bg(k[(k[x>>2]|0)+(j<<2)>>2]|0,k[(k[s>>2]|0)+(f<<2)>>2]|0,0)|0)+8|0;i[(k[e>>2]|0)+112>>0]=1;f=f+1|0;e=k[n>>2]|0}while((f|0)<(e|0));f=k[q>>2]|0}j=j+1|0}while((j|0)<(f|0));e=k[12430]|0;j=k[e+(d*40|0)+8>>2]|0;l=+p[v>>3];f=k[E>>2]|0}k[j+(z<<2)>>2]=1;j=e+(d*40|0)+12|0;k[j>>2]=(k[j>>2]|0)+-1;j=e+(d*40|0)+16|0;k[j>>2]=(k[j>>2]|0)+1;j=e+(d*40|0)+24|0;p[j>>3]=+p[j>>3]-(l*72.0+ +(k[f+248>>2]|0));j=w;f=x;l=y}else{j=w;f=x;h=h+1|0;l=y}while(0);z=z+1|0;if((z|0)>=(h+A|0))break;else{w=j;x=f;y=l}}}}c=c+1|0;if(!(C|(c|0)<(G|0)))break a;else l=g}I=b+20|0;k[b+16>>2]=k[I>>2];k[I>>2]=c}while(0);nh(a);Yh(a);c=k[12429]|0;if((c|0)>0){s=k[12430]|0;n=0;q=0;d=0;while(1){e=s+(q*40|0)|0;m=k[s+(q*40|0)+12>>2]|0;f=(n|0)==0;if(m)if(!f)if((m|0)>0?(k[e>>2]|0)>(d|0):0){f=k[s+(q*40|0)+4>>2]|0;j=0;do{c=k[f+(j<<2)>>2]|0;h=k[c+4>>2]|0;if((h|0)>0){c=k[c>>2]|0;e=0;do{I=(k[(k[c+(e<<2)>>2]|0)+8>>2]|0)+232|0;k[I>>2]=(k[I>>2]|0)-n;e=e+1|0}while((e|0)!=(h|0))}j=j+1|0}while((j|0)!=(m|0));c=k[12429]|0;e=n}else e=n;else e=0;else{if(f)d=k[e>>2]|0;e=n+1|0}q=q+1|0;if((q|0)>=(c|0))break;else n=e}}y=+Xh(a);p[b+8>>3]=y;r=J;return}function Vh(a){a=a|0;var b=0;b=Kt(a)|0;if(b)do{k[(k[b+8>>2]|0)+216>>2]=0;b=Lt(a,b)|0}while((b|0)!=0);return}function Wh(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=r;r=r+32|0;e=f+16|0;d=f+8|0;c=f+20|0;k[c>>2]=5;a=ss(a,135354)|0;if((a|0)!=0?(k[d>>2]=f,k[d+4>>2]=c,(UN(a,123579,d)|0)>=1):0){Yr(0,123586,e)|0;k[b+24>>2]=0;k[b+32>>2]=0}else{k[b+24>>2]=0;k[b+32>>2]=0}r=f;return 0}function Xh(a){a=a|0;var b=0.0,c=0.0,d=0,e=0,f=0,g=0.0;Yh(a);f=k[12429]|0;a=k[a+8>>2]|0;c=+(ha(k[a+252>>2]|0,f+-1|0)|0);if((f|0)>0){e=k[12430]|0;a=k[a+248>>2]|0;d=0;b=0.0;do{g=+p[e+(d*40|0)+24>>3]+ +(ha(a,k[e+(d*40|0)+16>>2]|0)|0);b=b<g?g:b;c=c+ +p[e+(d*40|0)+32>>3];d=d+1|0}while((d|0)<(f|0))}else b=0.0;return +(b/c)}function Yh(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0.0,h=0;k[12429]=0;b=k[12430]|0;if(b){if((k[12427]|0)>0){c=0;while(1){d=k[b+(c*40|0)+4>>2]|0;if(d){vP(d);b=k[12430]|0}b=k[b+(c*40|0)+8>>2]|0;if(b)vP(b);c=c+1|0;if((c|0)>=(k[12427]|0))break;b=k[12430]|0}b=k[12430]|0}vP(b)}b=By((k[12427]|0)*40|0)|0;k[12430]=b;b=k[12427]|0;if((b|0)>0){c=0;do{h=By(b<<2)|0;k[(k[12430]|0)+(c*40|0)+4>>2]=h;h=By(k[12427]<<2)|0;k[(k[12430]|0)+(c*40|0)+8>>2]=h;h=k[12430]|0;k[h+(c*40|0)>>2]=c;k[h+(c*40|0)+12>>2]=0;k[h+(c*40|0)+16>>2]=0;h=h+(c*40|0)+24|0;c=c+1|0;k[h>>2]=0;k[h+4>>2]=0;k[h+8>>2]=0;k[h+12>>2]=0;b=k[12427]|0}while((c|0)<(b|0))}b=Kt(a)|0;if(b)do{c=Es(a,b)|0;if(c)do{h=k[c>>2]&3;d=(k[(k[(k[((h|0)==3?c:c+32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)+1|0;f=c+-32|0;if((d|0)<(k[(k[(k[((h|0)==2?c:f)+28>>2]|0)+8>>2]|0)+232>>2]|0)){e=k[12430]|0;do{h=e+(d*40|0)+16|0;k[h>>2]=(k[h>>2]|0)+1;d=d+1|0}while((d|0)<(k[(k[(k[((k[c>>2]&3|0)==2?c:f)+28>>2]|0)+8>>2]|0)+232>>2]|0))}c=Gs(a,c)|0}while((c|0)!=0);b=Lt(a,b)|0}while((b|0)!=0);if((k[12427]|0)>0){e=a+8|0;h=0;do{f=k[12426]|0;a=(k[k[f+(h*24|0)>>2]>>2]|0)+8|0;b=(k[a>>2]|0)+232|0;c=k[b>>2]|0;if((c|0)>=(k[12429]|0)){k[12429]=c+1;c=k[b>>2]|0}d=k[12430]|0;b=d+(c*40|0)+24|0;g=+p[b>>3];p[b>>3]=g+(+p[f+(h*24|0)+8>>3]*72.0+(g>0.0?+(k[(k[e>>2]|0)+248>>2]|0):0.0));b=d+(c*40|0)+32|0;g=+p[f+(h*24|0)+16>>3]*72.0;if(+p[b>>3]<g)p[b>>3]=g;k[(k[d+(c*40|0)+4>>2]|0)+(k[d+(c*40|0)+12>>2]<<2)>>2]=f+(h*24|0);a=(k[12430]|0)+((k[(k[a>>2]|0)+232>>2]|0)*40|0)+12|0;k[a>>2]=(k[a>>2]|0)+1;h=h+1|0}while((h|0)<(k[12427]|0))}return}function Zh(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0;e=k[12430]|0;d=+p[e+((k[b>>2]|0)*40|0)+24>>3];c=+p[e+((k[a>>2]|0)*40|0)+24>>3];return (d>c&1)-(d<c&1)|0}function _h(a,b){a=a|0;b=b|0;a=$h(k[a>>2]|0)|0;b=$h(k[b>>2]|0)|0;return ((b|0)<(a|0)&1)-((b|0)>(a|0)&1)|0}function $h(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;e=a+4|0;if((k[e>>2]|0)>0){b=0;f=0;do{c=k[(k[a>>2]|0)+(f<<2)>>2]|0;d=$t(c)|0;c=Es(d,c)|0;if(c)do{b=b+1|0;c=Gs(d,c)|0}while((c|0)!=0);f=f+1|0}while((f|0)<(k[e>>2]|0))}else b=0;return b|0}function ai(a){a=a|0;var b=0,c=0;b=k[13678]|0;if((((b|0)!=0?(c=ts(a,b)|0,(c|0)!=0):0)?(i[c>>0]|0)!=0:0)?(oB(c)|0)<<24>>24==0:0)b=1;else b=0;return b|0}function bi(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,n=0,o=0,p=0,q=0;ji(a);b=Kt(a)|0;if(b)do{c=Es(a,b)|0;if(c)do{g=c+8|0;do if(((k[(k[g>>2]|0)+172>>2]|0)==0?(ai(c)|0)==0:0)?(l=c+32|0,n=pB(k[((k[c>>2]&3|0)==3?c:l)+28>>2]|0)|0,o=c+-32|0,p=pB(k[((k[c>>2]&3|0)==2?c:o)+28>>2]|0)|0,(n|0)!=(p|0)):0){if((k[(k[n+8>>2]|0)+212>>2]|0)==0?(k[(k[p+8>>2]|0)+212>>2]|0)==0:0){d=Vf(n,p)|0;if(!d){bg(n,p,c)|0;break}else{ig(c,d);break}}j=k[c>>2]&3;h=k[((j|0)==3?c:l)+28>>2]|0;j=k[((j|0)==2?c:o)+28>>2]|0;d=k[h+8>>2]|0;e=k[d+212>>2]|0;if(!e)f=0;else f=(k[d+232>>2]|0)-(k[(k[(k[(k[e+8>>2]|0)+264>>2]|0)+8>>2]|0)+232>>2]|0)|0;d=k[j+8>>2]|0;e=k[d+212>>2]|0;if(!e)d=0;else d=(k[d+232>>2]|0)-(k[(k[(k[(k[e+8>>2]|0)+264>>2]|0)+8>>2]|0)+232>>2]|0)|0;f=(m[(k[g>>2]|0)+170>>1]|0)+(f-d)|0;e=(f|0)>0;d=fg(a)|0;i[(k[d+8>>2]|0)+156>>0]=2;q=pB(h)|0;h=pB(j)|0;j=Vg(d,q,e?0.0:+(0-f|0),(k[(k[g>>2]|0)+156>>2]|0)*10|0)|0;h=(Vg(d,h,e?+(f|0):0.0,k[(k[g>>2]|0)+156>>2]|0)|0)+8|0;k[(k[h>>2]|0)+116>>2]=c;k[(k[j+8>>2]|0)+116>>2]=c}while(0);c=Gs(a,c)|0}while((c|0)!=0);b=Lt(a,b)|0}while((b|0)!=0);return}function ci(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,l=0,n=0.0;l=k[b>>2]&3;e=k[(k[(k[((l|0)==3?b:b+32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0;l=k[(k[(k[((l|0)==2?b:b+-32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0;l=(e|0)>(l|0)?e:l;e=k[b+8>>2]|0;b=e+172|0;if(k[b>>2]|0)Wa(123675,123697,149,123706);k[b>>2]=c;i=a+8|0;f=(d|0)==0;g=e+154|0;h=e+156|0;e=e+168|0;d=c;do{if(f)b=k[d+8>>2]|0;else{b=k[d+8>>2]|0;c=b+168|0;j[c>>1]=(m[c>>1]|0)+(m[e>>1]|0)}a=b+154|0;j[a>>1]=(m[a>>1]|0)+(m[g>>1]|0);b=b+156|0;k[b>>2]=(k[b>>2]|0)+(k[h>>2]|0);b=d+-32|0;a=k[(k[((k[d>>2]&3|0)==2?d:b)+28>>2]|0)+8>>2]|0;if((k[a+232>>2]|0)==(l|0))break;n=+((k[(k[i>>2]|0)+248>>2]|0)/2|0|0);c=a+88|0;p[c>>3]=n+ +p[c>>3];c=a+96|0;p[c>>3]=n+ +p[c>>3];d=k[k[(k[(k[((k[d>>2]&3|0)==2?d:b)+28>>2]|0)+8>>2]|0)+180>>2]>>2]|0}while((d|0)!=0);return}function di(a,b){a=a|0;b=b|0;var c=0,d=0;if(((((a|0)!=0&(b|0)!=0?(d=k[a>>2]&3,c=k[b>>2]&3,(k[((d|0)==3?a:a+32|0)+28>>2]|0)==(k[((c|0)==3?b:b+32|0)+28>>2]|0)):0)?(k[((d|0)==2?a:a+-32|0)+28>>2]|0)==(k[((c|0)==2?b:b+-32|0)+28>>2]|0):0)?(k[(k[a+8>>2]|0)+96>>2]|0)==(k[(k[b+8>>2]|0)+96>>2]|0):0)?(Wg(a,b)|0)!=0:0)c=1;else c=0;return c|0}function ei(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0;q=a+8|0;b=k[q>>2]|0;k[b+192>>2]=0;k[b+232>>2]=0;ji(a);b=k[q>>2]|0;if((k[b+180>>2]|0)>=1){c=1;while(1){ki(a,k[(k[b+184>>2]|0)+(c<<2)>>2]|0);b=k[q>>2]|0;if((c|0)>=(k[b+180>>2]|0))break;else c=c+1|0}}b=Kt(a)|0;if(b)do{c=Es(a,b)|0;if(c)do{d=k[c>>2]|0;e=(k[(k[((d&3|0)==2?c:c+-32|0)+28>>2]|0)+8>>2]|0)+160|0;f=i[e>>0]|0;if(f<<24>>24<3){i[e>>0]=f+1<<24>>24;d=k[c>>2]|0}d=(k[(k[((d&3|0)==3?c:c+32|0)+28>>2]|0)+8>>2]|0)+160|0;e=i[d>>0]|0;if(e<<24>>24<3)i[d>>0]=e+1<<24>>24;c=Gs(a,c)|0}while((c|0)!=0);b=Lt(a,b)|0}while((b|0)!=0);b=Kt(a)|0;if(b)do{if((k[(k[b+8>>2]|0)+212>>2]|0)==0?(b|0)==(pB(b)|0):0){cg(a,b);l=(k[q>>2]|0)+232|0;k[l>>2]=(k[l>>2]|0)+1}c=Es(a,b)|0;if(c){d=0;do{l=c+8|0;f=k[l>>2]|0;a:do if(!(k[f+172>>2]|0)){e=k[c>>2]|0;g=e&3;j=c+32|0;h=k[((g|0)==3?c:j)+28>>2]|0;if((i[(k[h+8>>2]|0)+159>>0]|0)!=7?(n=c+-32|0,o=k[((g|0)==2?c:n)+28>>2]|0,(i[(k[o+8>>2]|0)+159>>0]|0)!=7):0){do if(((d|0)!=0?(m=k[d>>2]&3,(h|0)==(k[((m|0)==3?d:d+32|0)+28>>2]|0)):0)?(o|0)==(k[((m|0)==2?d:d+-32|0)+28>>2]|0):0){if((k[(k[h+8>>2]|0)+232>>2]|0)==(k[(k[o+8>>2]|0)+232>>2]|0)){ig(c,d);_f(c);break a}if(!(k[f+96>>2]|0)){f=d+8|0;if(k[(k[f>>2]|0)+96>>2]|0)break;if(!(Wg(c,d)|0)){e=k[c>>2]|0;break}if(!(i[137282]|0)){ci(a,c,k[(k[f>>2]|0)+172>>2]|0,1);_f(c);break a}else{i[(k[l>>2]|0)+112>>0]=6;break a}}}while(0);h=e&3;e=k[((h|0)==3?c:j)+28>>2]|0;if((e|0)==(k[((h|0)==2?c:n)+28>>2]|0)){_f(c);d=c;break}g=pB(e)|0;h=pB(k[((k[c>>2]&3|0)==2?c:n)+28>>2]|0)|0;e=k[c>>2]&3;if((k[((e|0)==3?c:j)+28>>2]|0)!=(g|0))break;if((k[((e|0)==2?c:n)+28>>2]|0)!=(h|0))break;e=k[(k[g+8>>2]|0)+232>>2]|0;f=k[(k[h+8>>2]|0)+232>>2]|0;if((e|0)==(f|0)){gg(a,c);d=c;break}if((f|0)>(e|0)){gi(a,g,h,c);d=c;break}e=Ls(a,h,g,0,0)|0;do if(e){f=k[e>>2]&3;g=k[((f|0)==2?e:e+-32|0)+28>>2]|0;if((g|0)==(k[((k[c>>2]&3|0)==2?c:n)+28>>2]|0))break;h=e+8|0;if(!(k[(k[h>>2]|0)+172>>2]|0))gi(a,k[((f|0)==3?e:e+32|0)+28>>2]|0,g,e);if(k[(k[l>>2]|0)+96>>2]|0)break;if(k[(k[h>>2]|0)+96>>2]|0)break;if(!(Wg(c,e)|0))break;if(!(i[137282]|0)){_f(c);ci(a,c,k[(k[h>>2]|0)+172>>2]|0,1);break a}else{i[(k[l>>2]|0)+112>>0]=6;i[(k[h>>2]|0)+153>>0]=1;break a}}while(0);d=k[c>>2]&3;gi(a,k[((d|0)==2?c:n)+28>>2]|0,k[((d|0)==3?c:j)+28>>2]|0,c);d=c;break}if(di(d,c)|0){e=k[(k[d+8>>2]|0)+172>>2]|0;if(e){ci(a,c,e,0);_f(c);break}l=k[c>>2]&3;if((k[(k[(k[((l|0)==3?c:j)+28>>2]|0)+8>>2]|0)+232>>2]|0)!=(k[(k[(k[((l|0)==2?c:c+-32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0))break;ig(c,d);_f(c);break}e=fi(k[((k[c>>2]&3|0)==3?c:j)+28>>2]|0)|0;f=fi(k[((k[c>>2]&3|0)==2?c:c+-32|0)+28>>2]|0)|0;g=(k[(k[e+8>>2]|0)+232>>2]|0)>(k[(k[f+8>>2]|0)+232>>2]|0);d=g?e:f;e=g?f:e;f=e+8|0;g=d+8|0;if((k[(k[f>>2]|0)+212>>2]|0)!=(k[(k[g>>2]|0)+212>>2]|0)){h=Vf(e,d)|0;if(h){ci(a,c,h,1);d=c;break}if((k[(k[f>>2]|0)+232>>2]|0)!=(k[(k[g>>2]|0)+232>>2]|0)?(gi(a,e,d,c),p=k[(k[l>>2]|0)+172>>2]|0,(p|0)!=0):0){d=k[(k[g>>2]|0)+232>>2]|0;f=p;while(1){e=f+-32|0;if((k[(k[(k[((k[f>>2]&3|0)==2?f:e)+28>>2]|0)+8>>2]|0)+232>>2]|0)>(d|0)){d=c;break a}i[(k[f+8>>2]|0)+112>>0]=5;f=k[k[(k[(k[((k[f>>2]&3|0)==2?f:e)+28>>2]|0)+8>>2]|0)+180>>2]>>2]|0;if(!f){d=c;break}}}else d=c}else d=c}else d=c;while(0);c=Gs(a,c)|0}while((c|0)!=0)}b=Lt(a,b)|0}while((b|0)!=0);if((rf(a)|0)!=(a|0)){b=k[(k[q>>2]|0)+216>>2]|0;if(!b)b=Cy(4)|0;else b=Ey(b,4)|0;q=k[q>>2]|0;k[q+216>>2]=b;k[b>>2]=k[q+192>>2]}return}function fi(a){a=a|0;var b=0;b=k[a+8>>2]|0;if((i[b+159>>0]|0)==7)b=k[(k[(k[(k[b+212>>2]|0)+8>>2]|0)+268>>2]|0)+(k[b+232>>2]<<2)>>2]|0;else b=pB(a)|0;return b|0}function gi(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0.0,j=0.0,l=0,m=0,n=0,o=0,q=0,r=0;o=d+8|0;e=k[o>>2]|0;if(!(k[e+96>>2]|0))q=-1;else q=((k[(k[c+8>>2]|0)+232>>2]|0)+(k[(k[b+8>>2]|0)+232>>2]|0)|0)/2|0;if(k[e+172>>2]|0)Wa(123718,123697,90,123743);f=k[(k[b+8>>2]|0)+232>>2]|0;m=c+8|0;e=k[(k[m>>2]|0)+232>>2]|0;if((f|0)<(e|0)){n=a+8|0;l=b;while(1){f=f+1|0;if((f|0)<(e|0)){do if((f|0)==(q|0)){e=k[(k[o>>2]|0)+96>>2]|0;h=+p[e+24>>3];j=+p[e+32>>3];e=fg(a)|0;g=e+8|0;k[(k[g>>2]|0)+104>>2]=k[(k[o>>2]|0)+96>>2];r=(au(e)|0)+8|0;b=k[g>>2]|0;p[b+88>>3]=+(k[(k[r>>2]|0)+248>>2]|0);if(!(i[(k[o>>2]|0)+114>>0]|0)){r=(au(a)|0)+8|0;b=k[g>>2]|0;g=b+80|0;if(!(k[(k[r>>2]|0)+116>>2]&1)){p[g>>3]=j;p[b+96>>3]=h;break}else{p[g>>3]=h;p[b+96>>3]=j;break}}}else{e=fg(a)|0;j=+((k[(k[n>>2]|0)+248>>2]|0)/2|0|0);b=k[e+8>>2]|0;r=b+88|0;p[r>>3]=j+ +p[r>>3];r=b+96|0;p[r>>3]=j+ +p[r>>3]}while(0);k[b+232>>2]=f;b=e}else b=c;vg(bg(l,b,d)|0);e=k[(k[m>>2]|0)+232>>2]|0;if((f|0)>=(e|0))break;else l=b}if(k[(k[o>>2]|0)+172>>2]|0)return}Wa(123754,123697,104,123743)}function hi(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0;l=rf(a)|0;b=Kt(a)|0;if(b)do{c=Js(l,b)|0;if(c){j=0;while(1){d=c;c=Ks(l,c,b)|0;do if(!(ju(a,d)|0)){d=(k[d>>2]&3|0)==2?d:d+-32|0;m=(di(j,d)|0)==0;g=k[d>>2]&3;e=k[((g|0)==3?d:d+32|0)+28>>2]|0;f=k[(k[e+8>>2]|0)+232>>2]|0;g=k[((g|0)==2?d:d+-32|0)+28>>2]|0;h=k[(k[g+8>>2]|0)+232>>2]|0;i=(f|0)==(h|0);if(!m){k[(k[d+8>>2]|0)+172>>2]=i?j:0;e=k[(k[j+8>>2]|0)+172>>2]|0;if(!e){d=j;break}ci(a,d,e,0);$f(d);d=j;break}if(!i)if((h|0)>(f|0)){ni(e,g,d);break}else{ni(g,e,d);break}e=Wf(e,g)|0;if(!e){gg(l,d);break}if((d|0)!=(e|0)?($f(d),(k[(k[d+8>>2]|0)+172>>2]|0)==0):0){ig(d,e);d=j}else d=j}else d=j;while(0);if(!c)break;else j=d}}b=Lt(a,b)|0}while((b|0)!=0);return}function ii(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,l=0,m=0,n=0;ei(a);n=a+8|0;m=k[n>>2]|0;k[m+220>>2]=1;k[k[m+216>>2]>>2]=k[m+192>>2];qg(a);sg(a,0);m=rf(a)|0;d=k[n>>2]|0;c=j[d+236>>1]|0;b=c<<16>>16;if(c<<16>>16>0){l=m+8|0;i[(k[(k[l>>2]|0)+196>>2]|0)+(b+-1<<6)+49>>0]=0}else l=m+8|0;if(c<<16>>16>(j[d+238>>1]|0)){e=k[l>>2]|0;c=d}else{c=d;while(1){h=k[(k[(k[(k[c+268>>2]|0)+(b<<2)>>2]|0)+8>>2]|0)+236>>2]|0;oi(m,b,h,k[(k[c+196>>2]|0)+(b<<6)>>2]|0);c=k[n>>2]|0;d=k[c+196>>2]|0;e=k[l>>2]|0;if((k[d+(b<<6)>>2]|0)>0){f=0;g=h;while(1){c=k[(k[d+(b<<6)+4>>2]|0)+(f<<2)>>2]|0;k[(k[(k[e+196>>2]|0)+(b<<6)+4>>2]|0)+(g<<2)>>2]=c;e=k[c+8>>2]|0;k[e+236>>2]=g;if((i[e+156>>0]|0)==1){e=au(m)|0;k[c+12>>2]=e}eg(a,c);cg(m,c);e=k[l>>2]|0;c=e+232|0;k[c>>2]=(k[c>>2]|0)+1;f=f+1|0;c=k[n>>2]|0;d=k[c+196>>2]|0;if((f|0)>=(k[d+(b<<6)>>2]|0))break;else g=g+1|0}}g=k[e+196>>2]|0;k[d+(b<<6)+4>>2]=(k[g+(b<<6)+4>>2]|0)+(h<<2);i[g+(b<<6)+49>>0]=0;d=b+1|0;if((b|0)<(j[c+238>>1]|0))b=d;else{b=d;break}}}if((b|0)<(j[e+238>>1]|0))i[(k[e+196>>2]|0)+(b<<6)+49>>0]=0;i[c+272>>0]=1;hi(a);b=k[n>>2]|0;c=j[b+236>>1]|0;if(c<<16>>16<=(j[b+238>>1]|0)){f=c<<16>>16;while(1){d=k[(k[b+268>>2]|0)+(f<<2)>>2]|0;e=d+8|0;b=k[e>>2]|0;c=k[k[b+180>>2]>>2]|0;if(c)do{Zf(c);b=k[e>>2]|0;c=k[k[b+180>>2]>>2]|0}while((c|0)!=0);b=k[k[b+172>>2]>>2]|0;if(b)do{Zf(b);b=k[k[(k[e>>2]|0)+172>>2]>>2]|0}while((b|0)!=0);eg(rf(a)|0,d);k[(k[(k[n>>2]|0)+268>>2]|0)+(f<<2)>>2]=0;b=k[n>>2]|0;if((f|0)>=(j[b+238>>1]|0))break;else f=f+1|0}}return}function ji(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0;n=r;r=r+16|0;m=n;b=Kt(a)|0;if(b)do{d=b+8|0;c=k[d>>2]|0;if((i[c+159>>0]|0)==7){rB(b);c=k[d>>2]|0}k[c+212>>2]=0;b=Lt(a,b)|0}while((b|0)!=0);l=a+8|0;b=k[l>>2]|0;if((k[b+180>>2]|0)>=1){j=1;while(1){g=k[(k[b+184>>2]|0)+(j<<2)>>2]|0;b=Kt(g)|0;if(b){h=g+8|0;do{d=b;b=Lt(g,b)|0;c=d+8|0;if(!(i[(k[c>>2]|0)+159>>0]|0)){sB(d,k[(k[h>>2]|0)+264>>2]|0);c=k[c>>2]|0;k[c+212>>2]=g;i[c+159>>0]=7;c=Es(g,d)|0;if(c)do{d=k[(k[c+8>>2]|0)+172>>2]|0;a:do if(d)do{e=d+-32|0;f=k[(k[((k[d>>2]&3|0)==2?d:e)+28>>2]|0)+8>>2]|0;if((i[f+156>>0]|0)!=1)break a;k[f+212>>2]=g;d=k[k[(k[(k[((k[d>>2]&3|0)==2?d:e)+28>>2]|0)+8>>2]|0)+180>>2]>>2]|0}while((d|0)!=0);while(0);c=Gs(g,c)|0}while((c|0)!=0)}else{e=ht(d)|0;f=ht(a)|0;k[m>>2]=e;k[m+4>>2]=f;Yr(0,123779,m)|0;_t(g,d)|0}}while((b|0)!=0)}b=k[l>>2]|0;if((j|0)>=(k[b+180>>2]|0))break;else j=j+1|0}}r=n;return}function ki(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,l=0;l=b+8|0;c=By((j[(k[l>>2]|0)+238>>1]<<2)+8|0)|0;h=k[l>>2]|0;k[h+268>>2]=c;c=j[h+236>>1]|0;if(c<<16>>16<=(j[h+238>>1]|0)){e=0;d=c<<16>>16;while(1){c=e;e=fg(a)|0;k[(k[(k[l>>2]|0)+268>>2]|0)+(d<<2)>>2]=e;h=k[e+8>>2]|0;k[h+232>>2]=d;i[h+159>>0]=7;k[h+212>>2]=b;if(c){h=(bg(c,e,0)|0)+8|0;h=(k[h>>2]|0)+154|0;j[h>>1]=(j[h>>1]|0)*1e3}if((d|0)>=(j[(k[l>>2]|0)+238>>1]|0))break;else d=d+1|0}}c=Kt(b)|0;if(c)do{h=(k[(k[(k[l>>2]|0)+268>>2]|0)+(k[(k[c+8>>2]|0)+232>>2]<<2)>>2]|0)+8|0;d=(k[h>>2]|0)+216|0;k[d>>2]=(k[d>>2]|0)+1;d=Es(b,c)|0;if(d)do{g=k[d>>2]&3;a=k[(k[(k[((g|0)==3?d:d+32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0;f=d+-32|0;if((a|0)<(k[(k[(k[((g|0)==2?d:f)+28>>2]|0)+8>>2]|0)+232>>2]|0)){e=(k[(k[k[(k[h>>2]|0)+180>>2]>>2]|0)+8>>2]|0)+168|0;g=j[e>>1]|0;do{g=g+1<<16>>16;j[e>>1]=g;a=a+1|0}while((a|0)<(k[(k[(k[((k[d>>2]&3|0)==2?d:f)+28>>2]|0)+8>>2]|0)+232>>2]|0))}d=Gs(b,d)|0}while((d|0)!=0);c=Lt(b,c)|0}while((c|0)!=0);d=k[l>>2]|0;a=j[d+236>>1]|0;c=j[d+238>>1]|0;if(a<<16>>16<=c<<16>>16){f=c<<16>>16;e=k[d+268>>2]|0;a=a<<16>>16;while(1){c=(k[(k[e+(a<<2)>>2]|0)+8>>2]|0)+216|0;d=k[c>>2]|0;if((d|0)>1)k[c>>2]=d+-1;if((a|0)<(f|0))a=a+1|0;else break}}return}function li(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0;g=(k[(k[b+8>>2]|0)+212>>2]|0)+8|0;b=k[g>>2]|0;h=c+1|0;if((i[b+273>>0]|0)!=(h|0)){f=j[b+236>>1]|0;e=j[b+238>>1]|0;if(f<<16>>16<=e<<16>>16){f=f<<16>>16;while(1){rg(a,k[(k[b+268>>2]|0)+(f<<2)>>2]|0);b=k[g>>2]|0;e=j[b+238>>1]|0;if((f|0)<(e<<16>>16|0))f=f+1|0;else break}f=j[b+236>>1]|0}if(f<<16>>16<=e<<16>>16){e=f<<16>>16;while(1){tg(d,k[(k[b+268>>2]|0)+(e<<2)>>2]|0,c);b=k[g>>2]|0;if((e|0)<(j[b+238>>1]|0))e=e+1|0;else break}}i[b+273>>0]=h}return}function mi(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;b=Kt(a)|0;if(b)do{k[(k[b+8>>2]|0)+212>>2]=0;c=Es(a,b)|0;if(c)do{d=k[(k[c+8>>2]|0)+172>>2]|0;a:do if(d)do{e=d+-32|0;f=k[(k[((k[d>>2]&3|0)==2?d:e)+28>>2]|0)+8>>2]|0;if((i[f+156>>0]|0)!=1)break a;k[f+212>>2]=0;d=k[k[(k[(k[((k[d>>2]&3|0)==2?d:e)+28>>2]|0)+8>>2]|0)+180>>2]>>2]|0}while((d|0)!=0);while(0);c=Gs(a,c)|0}while((c|0)!=0);b=Lt(a,b)|0}while((b|0)!=0);pi(a);return}function ni(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,l=0,m=0,n=0,o=0,q=0,r=0;d=k[a+8>>2]|0;e=k[d+212>>2]|0;if((e|0)!=0?(f=k[e+8>>2]|0,(i[f+272>>0]|0)==0):0)o=k[(k[f+268>>2]|0)+(k[d+232>>2]<<2)>>2]|0;else o=a;d=k[b+8>>2]|0;e=k[d+212>>2]|0;if((e|0)!=0?(g=k[e+8>>2]|0,(i[g+272>>0]|0)==0):0){q=k[(k[g+268>>2]|0)+(k[d+232>>2]<<2)>>2]|0;e=k[q+8>>2]|0}else{e=d;q=b}n=(o|0)==(a|0)&(q|0)==(b|0)?1:5;b=c+8|0;f=(k[b>>2]|0)+172|0;d=k[f>>2]|0;a=o+8|0;g=k[(k[a>>2]|0)+232>>2]|0;m=q+8|0;e=k[e+232>>2]|0;if((e|0)<=(g|0))Wa(123833,123861,81,123871);r=k[d>>2]&3;if(!((k[((r|0)==3?d:d+32|0)+28>>2]|0)==(o|0)?(k[((r|0)==2?d:d+-32|0)+28>>2]|0)==(q|0):0))l=11;a:do if((l|0)==11){if((j[(k[d+8>>2]|0)+168>>1]|0)>1){k[f>>2]=0;if(((e-g|0)==1?(h=Vf(o,q)|0,(h|0)!=0):0)?(Wg(c,h)|0)!=0:0){ig(c,h);if(i[(k[a>>2]|0)+156>>0]|0)break;if(i[(k[m>>2]|0)+156>>0]|0)break;_f(c);break}f=k[(k[a>>2]|0)+232>>2]|0;e=k[(k[m>>2]|0)+232>>2]|0;if((f|0)>=(e|0))break;l=n&255;b=o;while(1){if((f|0)<(e+-1|0)){n=rf(o)|0;a=d+-32|0;g=(k[((k[d>>2]&3|0)==2?d:a)+28>>2]|0)+8|0;h=k[g>>2]|0;r=k[h+232>>2]|0;oi(n,r,k[h+236>>2]|0,2);h=fg(n)|0;g=k[g>>2]|0;e=k[h+8>>2]|0;p[e+88>>3]=+p[g+88>>3];p[e+96>>3]=+p[g+96>>3];k[e+232>>2]=k[g+232>>2];g=(k[g+236>>2]|0)+1|0;k[e+236>>2]=g;k[(k[(k[(k[n+8>>2]|0)+196>>2]|0)+(r<<6)+4>>2]|0)+(g<<2)>>2]=h;g=d}else{g=d;a=d+-32|0;h=q}e=(bg(b,h,c)|0)+8|0;i[(k[e>>2]|0)+112>>0]=l;e=(k[d+8>>2]|0)+168|0;j[e>>1]=(j[e>>1]|0)+-1<<16>>16;f=f+1|0;e=k[(k[m>>2]|0)+232>>2]|0;if((f|0)>=(e|0))break a;else{d=k[k[(k[(k[((k[g>>2]&3|0)==2?d:a)+28>>2]|0)+8>>2]|0)+180>>2]>>2]|0;b=h}}}do if((e-g|0)==1){d=Vf(o,q)|0;if((d|0)!=0?(Wg(c,d)|0)!=0:0){k[(k[b>>2]|0)+172>>2]=d;r=k[d+8>>2]|0;i[r+112>>0]=n;r=r+168|0;j[r>>1]=(j[r>>1]|0)+1<<16>>16;if(i[(k[a>>2]|0)+156>>0]|0)break;if(i[(k[m>>2]|0)+156>>0]|0)break;_f(c);break}k[(k[b>>2]|0)+172>>2]=0;d=bg(o,q,c)|0;i[(k[d+8>>2]|0)+112>>0]=n}while(0);f=k[(k[m>>2]|0)+232>>2]|0;if((f-(k[(k[a>>2]|0)+232>>2]|0)|0)>1){e=k[d>>2]|0;if((k[((e&3|0)==3?d:d+32|0)+28>>2]|0)==(o|0))a=f;else{k[(k[b>>2]|0)+172>>2]=0;r=bg(o,k[((k[d>>2]&3|0)==2?d:d+-32|0)+28>>2]|0,c)|0;k[(k[b>>2]|0)+172>>2]=r;Zf(d);e=k[r>>2]|0;a=k[(k[m>>2]|0)+232>>2]|0;d=r}f=e&3;e=k[((f|0)==2?d:d+-32|0)+28>>2]|0;g=k[e+8>>2]|0;if((k[g+232>>2]|0)!=(a|0))do{d=k[k[g+180>>2]>>2]|0;f=k[d>>2]&3;e=k[((f|0)==2?d:d+-32|0)+28>>2]|0;g=k[e+8>>2]|0}while((k[g+232>>2]|0)!=(a|0));if((e|0)!=(q|0)){r=(bg(k[((f|0)==3?d:d+32|0)+28>>2]|0,q,c)|0)+8|0;i[(k[r>>2]|0)+112>>0]=n;Zf(d)}}}while(0);return}function oi(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0;h=a+8|0;a=k[h>>2]|0;e=k[a+196>>2]|0;g=k[e+(b<<6)+4>>2]|0;if((d|0)<1){c=c-d|0;f=c+1|0;e=k[e+(b<<6)>>2]|0;if((f|0)<(e|0)){a=c;while(1){e=k[g+(f<<2)>>2]|0;c=a+d|0;k[(k[e+8>>2]|0)+236>>2]=c;k[g+(c<<2)>>2]=e;c=f+1|0;a=k[h>>2]|0;e=k[(k[a+196>>2]|0)+(b<<6)>>2]|0;if((c|0)<(e|0)){a=f;f=c}else{f=e;break}}}else f=e;e=d+-1|0;c=e+f|0;if((c|0)<(f|0))do{k[g+(c<<2)>>2]=0;c=c+1|0;a=k[h>>2]|0}while((c|0)<(k[(k[a+196>>2]|0)+(b<<6)>>2]|0))}else{a=(k[e+(b<<6)>>2]|0)+-1|0;if((a|0)>(c|0)){e=d+-1|0;do{i=k[g+(a<<2)>>2]|0;f=e+a|0;k[(k[i+8>>2]|0)+236>>2]=f;k[g+(f<<2)>>2]=i;a=a+-1|0}while((a|0)>(c|0))}a=c+1|0;if((a|0)<(d+c|0))IP(g+(a<<2)|0,0,(d<<2)+-4|0)|0;e=d+-1|0;a=k[h>>2]|0}i=(k[a+196>>2]|0)+(b<<6)|0;k[i>>2]=e+(k[i>>2]|0);return}function pi(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;d=a+8|0;b=k[d>>2]|0;if((k[b+180>>2]|0)>=1){c=1;while(1){pi(k[(k[b+184>>2]|0)+(c<<2)>>2]|0);b=k[d>>2]|0;if((c|0)>=(k[b+180>>2]|0))break;else c=c+1|0}}b=Kt(a)|0;if(b)do{c=(k[b+8>>2]|0)+212|0;if(!(k[c>>2]|0))k[c>>2]=a;c=Es(a,b)|0;if(c)do{d=k[(k[c+8>>2]|0)+172>>2]|0;a:do if(d)do{e=k[d>>2]|0;g=d+-32|0;f=k[(k[((e&3|0)==2?d:g)+28>>2]|0)+8>>2]|0;if((i[f+156>>0]|0)!=1)break a;f=f+212|0;if(!(k[f>>2]|0)){k[f>>2]=a;e=k[d>>2]|0}d=k[k[(k[(k[((e&3|0)==2?d:g)+28>>2]|0)+8>>2]|0)+180>>2]>>2]|0}while((d|0)!=0);while(0);c=Gs(a,c)|0}while((c|0)!=0);b=Lt(a,b)|0}while((b|0)!=0);return}function qi(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0.0,j=0.0,l=0.0,m=0,n=0,o=0,q=0,s=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0.0,K=0.0,L=0.0,M=0,N=0,O=0,P=0,Q=0.0,R=0,S=0.0,T=0.0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0.0,ca=0.0;aa=r;r=r+240|0;C=aa+216|0;B=aa+200|0;Y=aa+184|0;X=aa+168|0;_=aa+152|0;Z=aa+136|0;W=aa+128|0;V=aa+64|0;D=aa+48|0;E=aa+32|0;H=aa+16|0;N=aa;O=JB(a)|0;b=Kt(a)|0;a:do if(b){P=D+8|0;R=V+16|0;U=V+32|0;F=V+48|0;G=H+8|0;b:while(1){c=Es(a,b)|0;if(c)do{d=ri(ss(c,123880)|0,O)|0;n=ri(ss(c,123886)|0,O)|0;o=(n|0)!=0;e=(d|0)!=0;do if(e|o?(I=c+8|0,M=k[(k[I>>2]|0)+8>>2]|0,(M|0)!=0):0){if((k[M+4>>2]|0)>1){z=ht(k[((k[c>>2]&3|0)==3?c:c+32|0)+28>>2]|0)|0;A=ht(k[((k[c>>2]&3|0)==2?c:c+-32|0)+28>>2]|0)|0;k[W>>2]=z;k[W+4>>2]=A;Yr(0,123892,W)|0;break}z=k[M>>2]|0;f=k[z+4>>2]|0;q=k[c>>2]&3;u=c+-32|0;v=k[((q|0)==2?c:u)+28>>2]|0;w=c+32|0;q=k[((q|0)==3?c:w)+28>>2]|0;A=Cy(48)|0;x=z+12|0;k[A+12>>2]=k[x>>2];y=z+8|0;k[A+8>>2]=k[y>>2];do if(e){d=k[d+8>>2]|0;m=d+16|0;s=k[v+8>>2]|0;g=s+16|0;i[t>>0]=i[g>>0];i[t+1>>0]=i[g+1>>0];i[t+2>>0]=i[g+2>>0];i[t+3>>0]=i[g+3>>0];i[t+4>>0]=i[g+4>>0];i[t+5>>0]=i[g+5>>0];i[t+6>>0]=i[g+6>>0];i[t+7>>0]=i[g+7>>0];h=+p[t>>3];s=s+24|0;i[t>>0]=i[s>>0];i[t+1>>0]=i[s+1>>0];i[t+2>>0]=i[s+2>>0];i[t+3>>0]=i[s+3>>0];i[t+4>>0]=i[s+4>>0];i[t+5>>0]=i[s+5>>0];i[t+6>>0]=i[s+6>>0];i[t+7>>0]=i[s+7>>0];j=+p[t>>3];l=+p[m>>3];if(((l<=h?(Q=+p[d+32>>3],h<=Q):0)?(S=+p[d+24>>3],S<=j):0)?(T=+p[d+40>>3],j<=T):0){d=k[z>>2]|0;i[t>>0]=i[d>>0];i[t+1>>0]=i[d+1>>0];i[t+2>>0]=i[d+2>>0];i[t+3>>0]=i[d+3>>0];i[t+4>>0]=i[d+4>>0];i[t+5>>0]=i[d+5>>0];i[t+6>>0]=i[d+6>>0];i[t+7>>0]=i[d+7>>0];h=+p[t>>3];s=d+8|0;i[t>>0]=i[s>>0];i[t+1>>0]=i[s+1>>0];i[t+2>>0]=i[s+2>>0];i[t+3>>0]=i[s+3>>0];i[t+4>>0]=i[s+4>>0];i[t+5>>0]=i[s+5>>0];i[t+6>>0]=i[s+6>>0];i[t+7>>0]=i[s+7>>0];j=+p[t>>3];if(!(!(j<=T)|(!(l<=h)|!(h<=Q)|!(S<=j)))){s=k[q+8>>2]|0;g=s+16|0;i[t>>0]=i[g>>0];i[t+1>>0]=i[g+1>>0];i[t+2>>0]=i[g+2>>0];i[t+3>>0]=i[g+3>>0];i[t+4>>0]=i[g+4>>0];i[t+5>>0]=i[g+5>>0];i[t+6>>0]=i[g+6>>0];i[t+7>>0]=i[g+7>>0];h=+p[t>>3];s=s+24|0;i[t>>0]=i[s>>0];i[t+1>>0]=i[s+1>>0];i[t+2>>0]=i[s+2>>0];i[t+3>>0]=i[s+3>>0];i[t+4>>0]=i[s+4>>0];i[t+5>>0]=i[s+5>>0];i[t+6>>0]=i[s+6>>0];i[t+7>>0]=i[s+7>>0];j=+p[t>>3];if(!(!(j<=T)|(!(l<=h)|!(h<=Q)|!(S<=j)))){m=ht(k[((k[c>>2]&3|0)==3?c:w)+28>>2]|0)|0;s=ht(k[((k[c>>2]&3|0)==2?c:u)+28>>2]|0)|0;$=ss(c,123880)|0;k[_>>2]=m;k[_+4>>2]=s;k[_+8>>2]=$;Yr(0,123976,_)|0;$=33;break}if(!(k[y>>2]|0)){$=20;break b}s=z+16|0;k[B>>2]=k[d>>2];k[B+4>>2]=k[d+4>>2];k[B+8>>2]=k[d+8>>2];k[B+12>>2]=k[d+12>>2];k[C>>2]=k[s>>2];k[C+4>>2]=k[s+4>>2];k[C+8>>2]=k[s+8>>2];k[C+12>>2]=k[s+12>>2];ti(D,B,C,m);h=+p[D>>3];l=+p[P>>3];d=k[z>>2]|0;p[d+48>>3]=h;p[d+56>>3]=l;d=k[z>>2]|0;m=z+16|0;i[t>>0]=i[m>>0];i[t+1>>0]=i[m+1>>0];i[t+2>>0]=i[m+2>>0];i[t+3>>0]=i[m+3>>0];i[t+4>>0]=i[m+4>>0];i[t+5>>0]=i[m+5>>0];i[t+6>>0]=i[m+6>>0];i[t+7>>0]=i[m+7>>0];j=+p[t>>3];s=z+24|0;i[t>>0]=i[s>>0];i[t+1>>0]=i[s+1>>0];i[t+2>>0]=i[s+2>>0];i[t+3>>0]=i[s+3>>0];i[t+4>>0]=i[s+4>>0];i[t+5>>0]=i[s+5>>0];i[t+6>>0]=i[s+6>>0];i[t+7>>0]=i[s+7>>0];ca=(l+ +p[t>>3])*.5;p[d+16>>3]=(h+j)*.5;p[d+24>>3]=ca;d=k[z>>2]|0;i[t>>0]=i[m>>0];i[t+1>>0]=i[m+1>>0];i[t+2>>0]=i[m+2>>0];i[t+3>>0]=i[m+3>>0];i[t+4>>0]=i[m+4>>0];i[t+5>>0]=i[m+5>>0];i[t+6>>0]=i[m+6>>0];i[t+7>>0]=i[m+7>>0];ca=+p[t>>3];i[t>>0]=i[s>>0];i[t+1>>0]=i[s+1>>0];i[t+2>>0]=i[s+2>>0];i[t+3>>0]=i[s+3>>0];i[t+4>>0]=i[s+4>>0];i[t+5>>0]=i[s+5>>0];i[t+6>>0]=i[s+6>>0];i[t+7>>0]=i[s+7>>0];j=+p[t>>3];s=d+16|0;i[t>>0]=i[s>>0];i[t+1>>0]=i[s+1>>0];i[t+2>>0]=i[s+2>>0];i[t+3>>0]=i[s+3>>0];i[t+4>>0]=i[s+4>>0];i[t+5>>0]=i[s+5>>0];i[t+6>>0]=i[s+6>>0];i[t+7>>0]=i[s+7>>0];ba=+p[t>>3];s=d+24|0;i[t>>0]=i[s>>0];i[t+1>>0]=i[s+1>>0];i[t+2>>0]=i[s+2>>0];i[t+3>>0]=i[s+3>>0];i[t+4>>0]=i[s+4>>0];i[t+5>>0]=i[s+5>>0];i[t+6>>0]=i[s+6>>0];i[t+7>>0]=i[s+7>>0];j=(j+ +p[t>>3])*.5;p[d>>3]=(ca+ba)*.5;p[d+8>>3]=j;d=k[z>>2]|0;s=d+16|0;i[t>>0]=i[s>>0];i[t+1>>0]=i[s+1>>0];i[t+2>>0]=i[s+2>>0];i[t+3>>0]=i[s+3>>0];i[t+4>>0]=i[s+4>>0];i[t+5>>0]=i[s+5>>0];i[t+6>>0]=i[s+6>>0];i[t+7>>0]=i[s+7>>0];j=+p[t>>3];s=d+24|0;i[t>>0]=i[s>>0];i[t+1>>0]=i[s+1>>0];i[t+2>>0]=i[s+2>>0];i[t+3>>0]=i[s+3>>0];i[t+4>>0]=i[s+4>>0];i[t+5>>0]=i[s+5>>0];i[t+6>>0]=i[s+6>>0];i[t+7>>0]=i[s+7>>0];l=(l+ +p[t>>3])*.5;p[d+32>>3]=(h+j)*.5;p[d+40>>3]=l;d=k[x>>2]|0;if(!d)d=0;else d=_w(c,k[z>>2]|0,0,0,A,d)|0;s=d+3|0;break}g=f+-1|0;c:do if((f|0)>1){if(!(si(d,m)|0))d=0;else{d=0;break}do{d=d+3|0;if((d|0)>=(g|0))break c}while((si((k[z>>2]|0)+(d<<4)|0,m)|0)==0)}else d=0;while(0);e=k[x>>2]|0;f=(e|0)!=0;if((d|0)==(g|0)){if(!f){$=28;break b}s=A+32|0;e=z+32|0;f=(k[z>>2]|0)+(g<<4)|0;k[B>>2]=k[e>>2];k[B+4>>2]=k[e+4>>2];k[B+8>>2]=k[e+8>>2];k[B+12>>2]=k[e+12>>2];k[C>>2]=k[f>>2];k[C+4>>2]=k[f+4>>2];k[C+8>>2]=k[f+8>>2];k[C+12>>2]=k[f+12>>2];ti(E,B,C,m);k[s>>2]=k[E>>2];k[s+4>>2]=k[E+4>>2];k[s+8>>2]=k[E+8>>2];k[s+12>>2]=k[E+12>>2];s=g;break}if(f)d=_w(c,k[z>>2]|0,0,d,A,e)|0;s=d+3|0;break}m=ht(k[((k[c>>2]&3|0)==3?c:w)+28>>2]|0)|0;s=ht(k[((k[c>>2]&3|0)==2?c:u)+28>>2]|0)|0;$=ss(c,123880)|0;k[Z>>2]=m;k[Z+4>>2]=s;k[Z+8>>2]=$;Yr(0,123933,Z)|0;$=33}else $=33;while(0);if(($|0)==33){$=0;d=f+-1|0;if(!(k[x>>2]|0))s=d;else{s=A+32|0;m=z+32|0;k[s>>2]=k[m>>2];k[s+4>>2]=k[m+4>>2];k[s+8>>2]=k[m+8>>2];k[s+12>>2]=k[m+12>>2];s=d}}do if(o){d=k[n+8>>2]|0;m=d+16|0;q=k[q+8>>2]|0;o=q+16|0;i[t>>0]=i[o>>0];i[t+1>>0]=i[o+1>>0];i[t+2>>0]=i[o+2>>0];i[t+3>>0]=i[o+3>>0];i[t+4>>0]=i[o+4>>0];i[t+5>>0]=i[o+5>>0];i[t+6>>0]=i[o+6>>0];i[t+7>>0]=i[o+7>>0];h=+p[t>>3];q=q+24|0;i[t>>0]=i[q>>0];i[t+1>>0]=i[q+1>>0];i[t+2>>0]=i[q+2>>0];i[t+3>>0]=i[q+3>>0];i[t+4>>0]=i[q+4>>0];i[t+5>>0]=i[q+5>>0];i[t+6>>0]=i[q+6>>0];i[t+7>>0]=i[q+7>>0];j=+p[t>>3];l=+p[m>>3];if(((l<=h?(J=+p[d+32>>3],h<=J):0)?(K=+p[d+24>>3],K<=j):0)?(L=+p[d+40>>3],j<=L):0){e=k[z>>2]|0;q=e+(s<<4)|0;i[t>>0]=i[q>>0];i[t+1>>0]=i[q+1>>0];i[t+2>>0]=i[q+2>>0];i[t+3>>0]=i[q+3>>0];i[t+4>>0]=i[q+4>>0];i[t+5>>0]=i[q+5>>0];i[t+6>>0]=i[q+6>>0];i[t+7>>0]=i[q+7>>0];ba=+p[t>>3];q=e+(s<<4)+8|0;i[t>>0]=i[q>>0];i[t+1>>0]=i[q+1>>0];i[t+2>>0]=i[q+2>>0];i[t+3>>0]=i[q+3>>0];i[t+4>>0]=i[q+4>>0];i[t+5>>0]=i[q+5>>0];i[t+6>>0]=i[q+6>>0];i[t+7>>0]=i[q+7>>0];ca=+p[t>>3];if(!(!(ca<=L)|(!(l<=ba)|!(ba<=J)|!(K<=ca)))){v=k[v+8>>2]|0;q=v+16|0;i[t>>0]=i[q>>0];i[t+1>>0]=i[q+1>>0];i[t+2>>0]=i[q+2>>0];i[t+3>>0]=i[q+3>>0];i[t+4>>0]=i[q+4>>0];i[t+5>>0]=i[q+5>>0];i[t+6>>0]=i[q+6>>0];i[t+7>>0]=i[q+7>>0];ba=+p[t>>3];v=v+24|0;i[t>>0]=i[v>>0];i[t+1>>0]=i[v+1>>0];i[t+2>>0]=i[v+2>>0];i[t+3>>0]=i[v+3>>0];i[t+4>>0]=i[v+4>>0];i[t+5>>0]=i[v+5>>0];i[t+6>>0]=i[v+6>>0];i[t+7>>0]=i[v+7>>0];ca=+p[t>>3];if(!(!(ca<=L)|(!(l<=ba)|!(ba<=J)|!(K<=ca)))){w=ht(k[((k[c>>2]&3|0)==3?c:w)+28>>2]|0)|0;x=ht(k[((k[c>>2]&3|0)==2?c:u)+28>>2]|0)|0;$=ss(c,123886)|0;k[Y>>2]=w;k[Y+4>>2]=x;k[Y+8>>2]=$;Yr(0,124111,Y)|0;$=59;break}if(!(k[x>>2]|0)){$=46;break b}e=e+(s<<4)|0;v=A+32|0;k[B>>2]=k[e>>2];k[B+4>>2]=k[e+4>>2];k[B+8>>2]=k[e+8>>2];k[B+12>>2]=k[e+12>>2];k[C>>2]=k[v>>2];k[C+4>>2]=k[v+4>>2];k[C+8>>2]=k[v+8>>2];k[C+12>>2]=k[v+12>>2];ti(H,B,C,m);l=+p[H>>3];ca=+p[G>>3];e=s+-3|0;w=k[z>>2]|0;p[w+(e<<4)>>3]=l;p[w+(e<<4)+8>>3]=ca;w=s+-1|0;d=k[z>>2]|0;i[t>>0]=i[v>>0];i[t+1>>0]=i[v+1>>0];i[t+2>>0]=i[v+2>>0];i[t+3>>0]=i[v+3>>0];i[t+4>>0]=i[v+4>>0];i[t+5>>0]=i[v+5>>0];i[t+6>>0]=i[v+6>>0];i[t+7>>0]=i[v+7>>0];ba=+p[t>>3];x=A+40|0;i[t>>0]=i[x>>0];i[t+1>>0]=i[x+1>>0];i[t+2>>0]=i[x+2>>0];i[t+3>>0]=i[x+3>>0];i[t+4>>0]=i[x+4>>0];i[t+5>>0]=i[x+5>>0];i[t+6>>0]=i[x+6>>0];i[t+7>>0]=i[x+7>>0];h=(ca+ +p[t>>3])*.5;p[d+(w<<4)>>3]=(l+ba)*.5;p[d+(w<<4)+8>>3]=h;d=k[z>>2]|0;i[t>>0]=i[v>>0];i[t+1>>0]=i[v+1>>0];i[t+2>>0]=i[v+2>>0];i[t+3>>0]=i[v+3>>0];i[t+4>>0]=i[v+4>>0];i[t+5>>0]=i[v+5>>0];i[t+6>>0]=i[v+6>>0];i[t+7>>0]=i[v+7>>0];h=+p[t>>3];i[t>>0]=i[x>>0];i[t+1>>0]=i[x+1>>0];i[t+2>>0]=i[x+2>>0];i[t+3>>0]=i[x+3>>0];i[t+4>>0]=i[x+4>>0];i[t+5>>0]=i[x+5>>0];i[t+6>>0]=i[x+6>>0];i[t+7>>0]=i[x+7>>0];ba=+p[t>>3];x=d+(w<<4)|0;i[t>>0]=i[x>>0];i[t+1>>0]=i[x+1>>0];i[t+2>>0]=i[x+2>>0];i[t+3>>0]=i[x+3>>0];i[t+4>>0]=i[x+4>>0];i[t+5>>0]=i[x+5>>0];i[t+6>>0]=i[x+6>>0];i[t+7>>0]=i[x+7>>0];j=+p[t>>3];x=d+(w<<4)+8|0;i[t>>0]=i[x>>0];i[t+1>>0]=i[x+1>>0];i[t+2>>0]=i[x+2>>0];i[t+3>>0]=i[x+3>>0];i[t+4>>0]=i[x+4>>0];i[t+5>>0]=i[x+5>>0];i[t+6>>0]=i[x+6>>0];i[t+7>>0]=i[x+7>>0];ba=(ba+ +p[t>>3])*.5;p[d+(s<<4)>>3]=(h+j)*.5;p[d+(s<<4)+8>>3]=ba;d=s+-2|0;x=k[z>>2]|0;v=x+(w<<4)|0;i[t>>0]=i[v>>0];i[t+1>>0]=i[v+1>>0];i[t+2>>0]=i[v+2>>0];i[t+3>>0]=i[v+3>>0];i[t+4>>0]=i[v+4>>0];i[t+5>>0]=i[v+5>>0];i[t+6>>0]=i[v+6>>0];i[t+7>>0]=i[v+7>>0];ba=+p[t>>3];w=x+(w<<4)+8|0;i[t>>0]=i[w>>0];i[t+1>>0]=i[w+1>>0];i[t+2>>0]=i[w+2>>0];i[t+3>>0]=i[w+3>>0];i[t+4>>0]=i[w+4>>0];i[t+5>>0]=i[w+5>>0];i[t+6>>0]=i[w+6>>0];i[t+7>>0]=i[w+7>>0];ca=(ca+ +p[t>>3])*.5;p[x+(d<<4)>>3]=(l+ba)*.5;p[x+(d<<4)+8>>3]=ca;d=k[y>>2]|0;if(!d)break;e=$w(c,k[z>>2]|0,e,e,A,d)|0;break}d:do if((s|0)>0){f=s;while(1){e=e+(f<<4)|0;k[V>>2]=k[e>>2];k[V+4>>2]=k[e+4>>2];k[V+8>>2]=k[e+8>>2];k[V+12>>2]=k[e+12>>2];e=f+-1|0;g=(k[z>>2]|0)+(e<<4)|0;k[R>>2]=k[g>>2];k[R+4>>2]=k[g+4>>2];k[R+8>>2]=k[g+8>>2];k[R+12>>2]=k[g+12>>2];g=f+-2|0;d=(k[z>>2]|0)+(g<<4)|0;k[U>>2]=k[d>>2];k[U+4>>2]=k[d+4>>2];k[U+8>>2]=k[d+8>>2];k[U+12>>2]=k[d+12>>2];d=f+-3|0;x=(k[z>>2]|0)+(d<<4)|0;k[F>>2]=k[x>>2];k[F+4>>2]=k[x+4>>2];k[F+8>>2]=k[x+8>>2];k[F+12>>2]=k[x+12>>2];if(si(V,m)|0)break;if((f|0)<=3)break d;e=k[z>>2]|0;f=d}x=(k[z>>2]|0)+(f<<4)|0;k[x>>2]=k[V>>2];k[x+4>>2]=k[V+4>>2];k[x+8>>2]=k[V+8>>2];k[x+12>>2]=k[V+12>>2];x=(k[z>>2]|0)+(e<<4)|0;k[x>>2]=k[R>>2];k[x+4>>2]=k[R+4>>2];k[x+8>>2]=k[R+8>>2];k[x+12>>2]=k[R+12>>2];x=(k[z>>2]|0)+(g<<4)|0;k[x>>2]=k[U>>2];k[x+4>>2]=k[U+4>>2];k[x+8>>2]=k[U+8>>2];k[x+12>>2]=k[U+12>>2];d=(k[z>>2]|0)+(d<<4)|0;k[d>>2]=k[F>>2];k[d+4>>2]=k[F+4>>2];k[d+8>>2]=k[F+8>>2];k[d+12>>2]=k[F+12>>2];d=f}else d=s;while(0);if(!d){if(!(k[y>>2]|0)){$=55;break b}e=A+16|0;x=z+16|0;y=k[z>>2]|0;k[B>>2]=k[x>>2];k[B+4>>2]=k[x+4>>2];k[B+8>>2]=k[x+8>>2];k[B+12>>2]=k[x+12>>2];k[C>>2]=k[y>>2];k[C+4>>2]=k[y+4>>2];k[C+8>>2]=k[y+8>>2];k[C+12>>2]=k[y+12>>2];ti(N,B,C,m);k[e>>2]=k[N>>2];k[e+4>>2]=k[N+4>>2];k[e+8>>2]=k[N+8>>2];k[e+12>>2]=k[N+12>>2];e=0;break}else{e=d+-3|0;d=k[y>>2]|0;if(!d)break;e=$w(c,k[z>>2]|0,e,s+-3|0,A,d)|0;break}}w=ht(k[((k[c>>2]&3|0)==3?c:w)+28>>2]|0)|0;x=ht(k[((k[c>>2]&3|0)==2?c:u)+28>>2]|0)|0;$=ss(c,123886)|0;k[X>>2]=w;k[X+4>>2]=x;k[X+8>>2]=$;Yr(0,124068,X)|0;$=59}else $=59;while(0);if(($|0)==59){$=0;if(!(k[y>>2]|0))e=0;else{e=A+16|0;y=z+16|0;k[e>>2]=k[y>>2];k[e+4>>2]=k[y+4>>2];k[e+8>>2]=k[y+8>>2];k[e+12>>2]=k[y+12>>2];e=0}}d=s-e+1|0;g=A+4|0;k[g>>2]=d;d=Cy(d<<4)|0;k[A>>2]=d;if((k[g>>2]|0)>0?(y=(k[z>>2]|0)+(e<<4)|0,k[d>>2]=k[y>>2],k[d+4>>2]=k[y+4>>2],k[d+8>>2]=k[y+8>>2],k[d+12>>2]=k[y+12>>2],(k[g>>2]|0)>1):0){f=1;d=e;do{d=d+1|0;y=(k[A>>2]|0)+(f<<4)|0;x=(k[z>>2]|0)+(d<<4)|0;k[y>>2]=k[x>>2];k[y+4>>2]=k[x+4>>2];k[y+8>>2]=k[x+8>>2];k[y+12>>2]=k[x+12>>2];f=f+1|0}while((f|0)<(k[g>>2]|0))}vP(k[z>>2]|0);vP(z);k[k[(k[I>>2]|0)+8>>2]>>2]=A}while(0);c=Gs(a,c)|0}while((c|0)!=0);b=Lt(a,b)|0;if(!b)break a}if(($|0)==20)Wa(124018,124029,361,124040);else if(($|0)==28)Wa(124057,124029,379,124040);else if(($|0)==46)Wa(124057,124029,421,124040);else if(($|0)==55)Wa(124018,124029,444,124040)}while(0);Hr(O)|0;r=aa;return}function ri(a,b){a=a|0;b=b|0;var c=0,d=0;d=r;r=r+16|0;c=d;if((a|0)!=0?(i[a>>0]|0)!=0:0){b=_B(b,a)|0;if(!b){k[c>>2]=a;Yr(0,124231,c)|0;b=0}}else b=0;r=d;return b|0}function si(a,b){a=a|0;b=b|0;var c=0.0,d=0.0,e=0,f=0,g=0,h=0,i=0;i=r;r=r+128|0;h=i+64|0;k[h>>2]=k[a>>2];k[h+4>>2]=k[a+4>>2];k[h+8>>2]=k[a+8>>2];k[h+12>>2]=k[a+12>>2];e=h+16|0;g=a+16|0;k[e>>2]=k[g>>2];k[e+4>>2]=k[g+4>>2];k[e+8>>2]=k[g+8>>2];k[e+12>>2]=k[g+12>>2];e=h+32|0;g=a+32|0;k[e>>2]=k[g>>2];k[e+4>>2]=k[g+4>>2];k[e+8>>2]=k[g+8>>2];k[e+12>>2]=k[g+12>>2];e=h+48|0;g=a+48|0;k[e>>2]=k[g>>2];k[e+4>>2]=k[g+4>>2];k[e+8>>2]=k[g+8>>2];k[e+12>>2]=k[g+12>>2];e=b+8|0;g=b+24|0;c=+ui(a,0.0,1.0,+p[b>>3],+p[e>>3],+p[g>>3]);if(c>=0.0&c<2.0)uB(i+48|0,h,3,c,a,0);else c=2.0;f=b+16|0;d=+ui(a,0.0,c>1.0?1.0:c,+p[f>>3],+p[e>>3],+p[g>>3]);if(d>=0.0&d<c){uB(i+32|0,h,3,d,a,0);c=d}d=+vi(a,0.0,c>1.0?1.0:c,+p[e>>3],+p[b>>3],+p[f>>3]);if(d>=0.0&d<c)uB(i+16|0,h,3,d,a,0);else d=c;c=+vi(a,0.0,d>1.0?1.0:d,+p[g>>3],+p[b>>3],+p[f>>3]);if(c>=0.0&c<d)uB(i,h,3,c,a,0);else c=d;r=i;return c<2.0|0}function ti(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0.0,g=0.0,h=0.0,i=0.0,j=0.0,l=0.0,m=0.0,n=0.0,o=0.0,q=0.0,s=0.0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0;D=r;r=r+480|0;z=D+64|0;y=D+48|0;B=D+32|0;A=D+16|0;x=D;v=D+380|0;t=D+280|0;u=D+180|0;w=D+80|0;m=+p[b>>3];j=+p[b+8>>3];l=+p[c>>3];g=+p[c+8>>3];h=+p[d>>3];i=+p[d+8>>3];f=+p[d+16>>3];e=+p[d+24>>3];if(l<h?(n=j+ +(~~((j-g)*(h-m)/(m-l))|0),!(!(n>=i)|!(n<=e))):0){p[a>>3]=h;p[a+8>>3]=n}else C=4;do if((C|0)==4){if(l>f?(o=j+ +(~~((j-g)*(f-m)/(m-l))|0),!(!(o>=i)|!(o<=e))):0){p[a>>3]=f;p[a+8>>3]=o;break}if(g<i?(q=m+ +(~~((m-l)*(i-j)/(j-g))|0),!(!(q>=h)|!(q<=f))):0){p[a>>3]=q;p[a+8>>3]=i;break}if(g>e?(s=m+ +(~~((m-l)*(e-j)/(j-g))|0),!(!(s>=h)|!(s<=f))):0){p[a>>3]=s;p[a+8>>3]=e;break}p[x>>3]=m;p[x+8>>3]=j;TN(v,124153,x)|0;p[A>>3]=l;p[A+8>>3]=g;TN(t,124153,A)|0;p[B>>3]=h;p[B+8>>3]=i;TN(u,124153,B)|0;p[y>>3]=f;p[y+8>>3]=e;TN(w,124153,y)|0;k[z>>2]=v;k[z+4>>2]=t;k[z+8>>2]=u;k[z+12>>2]=w;Yr(1,124165,z)|0;Wa(174497,124029,78,124217)}while(0);r=D;return}function ui(a,b,c,d,e,f){a=a|0;b=+b;c=+c;d=+d;e=+e;f=+f;var g=0.0,h=0.0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,q=0;m=r;r=r+144|0;j=m+80|0;l=m+16|0;i=m;g=+p[a>>3];q=g<d?-1:g>d&1;g=+p[a+16>>3];o=g<d?-1:g>d&1;g=+p[a+32>>3];n=g<d?-1:g>d&1;g=+p[a+48>>3];switch(((q|0)!=0&(o|0)!=(q|0)&1)+((q|0)==0&1)+((o|0)!=0&(n|0)!=(o|0)&1)+(((n|0)!=0?((g<d?-1:g>d&1)|0)!=(n|0):0)&1)|0){case 0:{g=-1.0;break}case 1:{if((~~(g+(g>=0.0?.5:-.5))|0)==(~~((d>=0.0?.5:-.5)+d)|0)){g=+p[a+56>>3];g=!(g>=e)|!(g<=f)?-1.0:c}else k=4;break}default:k=4}if((k|0)==4){uB(i,a,3,.5,j,l);h=(b+c)*.5;g=+ui(j,b,h,d,e,f);if(!(g>=0.0))g=+ui(l,h,c,d,e,f)}r=m;return +g}function vi(a,b,c,d,e,f){a=a|0;b=+b;c=+c;d=+d;e=+e;f=+f;var g=0.0,h=0.0,i=0,j=0,k=0,l=0,m=0,n=0,o=0,q=0;m=r;r=r+144|0;j=m+80|0;l=m+16|0;i=m;g=+p[a+8>>3];q=g<d?-1:g>d&1;g=+p[a+24>>3];o=g<d?-1:g>d&1;g=+p[a+40>>3];n=g<d?-1:g>d&1;g=+p[a+56>>3];switch(((q|0)!=0&(o|0)!=(q|0)&1)+((q|0)==0&1)+((o|0)!=0&(n|0)!=(o|0)&1)+(((n|0)!=0?((g<d?-1:g>d&1)|0)!=(n|0):0)&1)|0){case 0:{g=-1.0;break}case 1:{if((~~(g+(g>=0.0?.5:-.5))|0)==(~~((d>=0.0?.5:-.5)+d)|0)){g=+p[a+48>>3];g=!(g>=e)|!(g<=f)?-1.0:c}else k=4;break}default:k=4}if((k|0)==4){uB(i,a,3,.5,j,l);h=(b+c)*.5;g=+vi(j,b,h,d,e,f);if(!(g>=0.0))g=+vi(l,h,c,d,e,f)}r=m;return +g}function wi(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,y=0,z=0;z=r;r=r+96|0;q=z+48|0;p=z+8|0;u=z;y=4;v=uP(40)|0;k[v>>2]=0;t=a+8|0;b=k[t>>2]|0;a:do if(((j[b+238>>1]|0)-(j[b+236>>1]|0)|0)>=2){c=k[b+196>>2]|0;b:do if(k[c+128>>2]|0){n=2;o=1;while(1){if((k[c+(o<<6)>>2]|0)>0){m=0;do{l=(k[(k[c+(o<<6)+4>>2]|0)+(m<<2)>>2]|0)+8|0;h=k[l>>2]|0;if((((i[h+156>>0]|0)==1?(k[h+176>>2]|0)==1:0)?(k[h+184>>2]|0)==1:0)?(k[h+104>>2]|0)==0:0){e=m+1|0;b=k[b+196>>2]|0;c:do if((e|0)<(k[b+(o<<6)>>2]|0)){d=b;c=m;h=e;while(1){g=k[k[(k[l>>2]|0)+172>>2]>>2]|0;b=k[(k[(k[d+(o<<6)+4>>2]|0)+(h<<2)>>2]|0)+8>>2]|0;f=k[k[b+172>>2]>>2]|0;if((i[b+156>>0]|0)!=1){b=h;break c}if((k[b+176>>2]|0)!=1){b=h;break c}if((k[b+184>>2]|0)!=1){b=h;break c}if(k[b+104>>2]|0){b=h;break c}if((k[((k[g>>2]&3|0)==3?g:g+32|0)+28>>2]|0)!=(k[((k[f>>2]&3|0)==3?f:f+32|0)+28>>2]|0)){b=h;break c}w=0;b=Aa(65,g|0,f|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,v|0,y|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){b=L;break b}if(!(b<<24>>24)){b=h;break c}b=(k[f+8>>2]|0)+16|0;w=0;f=p;d=(k[g+8>>2]|0)+16|0;e=f+40|0;do{k[f>>2]=k[d>>2];f=f+4|0;d=d+4|0}while((f|0)<(e|0));f=q;d=b;e=f+40|0;do{k[f>>2]=k[d>>2];f=f+4|0;d=d+4|0}while((f|0)<(e|0));b=Aa(66,p|0,q|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,v|0,y|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){b=L;break b}if(b){b=h;break c}b=h+1|0;d=k[(k[t>>2]|0)+196>>2]|0;if((b|0)>=(k[d+(o<<6)>>2]|0)){c=h;break}else{c=h;h=b}}}else{c=m;b=e}while(0);if((b-m|0)>1){w=0;ma(15,a|0,o|0,m|0,c|0,1);b=w;w=0;if((b|0)!=0&(x|0)!=0){c=FP(k[b>>2]|0,v|0,y|0)|0;if(!c)Za(b|0,x|0);L=x}else c=-1;if((c|0)==1){b=L;break b}}}m=m+1|0;b=k[t>>2]|0;c=k[b+196>>2]|0}while((m|0)<(k[c+(o<<6)>>2]|0))}d=n+1|0;if(!(k[c+(d<<6)>>2]|0))break;else{o=n;n=d}}if((n|0)>0)s=25;else s=46}else{n=1;s=25}while(0);d:do if((s|0)==25)while(1){s=0;c=k[b+196>>2]|0;if((k[c+(n<<6)>>2]|0)>0){m=0;do{l=(k[(k[c+(n<<6)+4>>2]|0)+(m<<2)>>2]|0)+8|0;o=k[l>>2]|0;if((((i[o+156>>0]|0)==1?(k[o+184>>2]|0)==1:0)?(k[o+176>>2]|0)==1:0)?(k[o+104>>2]|0)==0:0){e=m+1|0;b=k[b+196>>2]|0;e:do if((e|0)<(k[b+(n<<6)>>2]|0)){d=b;c=m;h=e;while(1){g=k[k[(k[l>>2]|0)+180>>2]>>2]|0;b=k[(k[(k[d+(n<<6)+4>>2]|0)+(h<<2)>>2]|0)+8>>2]|0;f=k[k[b+180>>2]>>2]|0;if((i[b+156>>0]|0)!=1){b=h;break e}if((k[b+184>>2]|0)!=1){b=h;break e}if((k[b+176>>2]|0)!=1){b=h;break e}if(k[b+104>>2]|0){b=h;break e}if((k[((k[g>>2]&3|0)==2?g:g+-32|0)+28>>2]|0)!=(k[((k[f>>2]&3|0)==2?f:f+-32|0)+28>>2]|0)){b=h;break e}w=0;b=Aa(65,g|0,f|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,v|0,y|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){b=L;break d}if(!(b<<24>>24)){b=h;break e}b=(k[f+8>>2]|0)+56|0;w=0;f=p;d=(k[g+8>>2]|0)+56|0;e=f+40|0;do{k[f>>2]=k[d>>2];f=f+4|0;d=d+4|0}while((f|0)<(e|0));f=q;d=b;e=f+40|0;do{k[f>>2]=k[d>>2];f=f+4|0;d=d+4|0}while((f|0)<(e|0));b=Aa(66,p|0,q|0)|0;d=w;w=0;if((d|0)!=0&(x|0)!=0){e=FP(k[d>>2]|0,v|0,y|0)|0;if(!e)Za(d|0,x|0);L=x}else e=-1;if((e|0)==1){b=L;break d}if(b){b=h;break e}b=h+1|0;d=k[(k[t>>2]|0)+196>>2]|0;if((b|0)>=(k[d+(n<<6)>>2]|0)){c=h;break}else{c=h;h=b}}}else{c=m;b=e}while(0);if((b-m|0)>1){w=0;ma(15,a|0,n|0,m|0,c|0,0);b=w;w=0;if((b|0)!=0&(x|0)!=0){c=FP(k[b>>2]|0,v|0,y|0)|0;if(!c)Za(b|0,x|0);L=x}else c=-1;if((c|0)==1){b=L;break d}}}m=m+1|0;b=k[t>>2]|0;c=k[b+196>>2]|0}while((m|0)<(k[c+(n<<6)>>2]|0))}if((n|0)>1){n=n+-1|0;s=25}else{s=46;break}}while(0);if((s|0)==46){v=DP(49724,1,v|0,y|0)|0;y=L;w=0;b=w;w=0;if((b|0)!=0&(x|0)!=0){c=FP(k[b>>2]|0,v|0,y|0)|0;if(!c)Za(b|0,x|0);L=x}else c=-1;if((c|0)==1)b=L;else b=0}f:while(1){if(b){w=0;ta(25,3,124259,u|0)|0;b=w;w=0;if((b|0)!=0&(x|0)!=0){c=FP(k[b>>2]|0,v|0,y|0)|0;if(!c)Za(b|0,x|0);L=x}else c=-1;if((c|0)==1){b=L;continue}else break}b=k[t>>2]|0;if((k[b+180>>2]|0)<1)break a;else d=1;while(1){w=0;na(92,k[(k[b+184>>2]|0)+(d<<2)>>2]|0);b=w;w=0;if((b|0)!=0&(x|0)!=0){c=FP(k[b>>2]|0,v|0,y|0)|0;if(!c)Za(b|0,x|0);L=x}else c=-1;if((c|0)==1){b=L;continue f}b=k[t>>2]|0;if((d|0)>=(k[b+180>>2]|0))break a;else d=d+1|0}}}while(0);vP(v|0);r=z;return}function xi(a,b){a=a|0;b=b|0;var c=0,d=0;c=k[a+8>>2]|0;if(!(i[c+112>>0]|0))d=a;else{do{a=k[c+116>>2]|0;c=k[a+8>>2]|0}while((i[c+112>>0]|0)!=0);d=a}a=k[b+8>>2]|0;if(i[a+112>>0]|0)do{b=k[a+116>>2]|0;a=k[b+8>>2]|0}while((i[a+112>>0]|0)!=0);if((i[c+153>>0]|0)==0?(i[a+153>>0]|0)==0:0){c=k[b>>2]&3;a=k[d>>2]&3;c=(ha((k[(k[(k[((a|0)==3?d:d+32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)-(k[(k[(k[((a|0)==2?d:d+-32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)|0,(k[(k[(k[((c|0)==3?b:b+32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)-(k[(k[(k[((c|0)==2?b:b+-32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)|0)|0)>0&1}else c=0;return c|0}function yi(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0;v=a+8|0;i=k[(k[v>>2]|0)+196>>2]|0;g=k[i+(b<<6)+4>>2]|0;t=k[g+(c<<2)>>2]|0;f=c+1|0;do if((c|0)<(d|0)){r=(e|0)==1;s=t+8|0;q=f;while(1){p=k[g+(q<<2)>>2]|0;o=p+8|0;g=k[o>>2]|0;if(r){i=k[k[g+180>>2]>>2]|0;if(i)do{j=k[(k[s>>2]|0)+180>>2]|0;e=k[j>>2]|0;n=k[i>>2]|0;a:do if(!e){g=i+-32|0;u=13}else{l=i+-32|0;m=k[((n&3|0)==2?i:l)+28>>2]|0;c=0;while(1){c=c+1|0;if((k[((k[e>>2]&3|0)==2?e:e+-32|0)+28>>2]|0)==(m|0))break a;e=k[j+(c<<2)>>2]|0;if(!e){g=l;u=13;break}}}while(0);if((u|0)==13){u=0;e=bg(t,k[((n&3|0)==2?i:g)+28>>2]|0,i)|0;g=k[o>>2]|0}g=k[k[g+172>>2]>>2]|0;if(g)do{ig(g,e);Zf(g);g=k[k[(k[o>>2]|0)+172>>2]>>2]|0}while((g|0)!=0);Zf(i);g=k[o>>2]|0;i=k[k[g+180>>2]>>2]|0}while((i|0)!=0)}else{i=k[k[g+172>>2]>>2]|0;if(i)do{j=k[(k[s>>2]|0)+172>>2]|0;e=k[j>>2]|0;n=k[i>>2]|0;b:do if(!e){g=i+32|0;u=22}else{l=i+32|0;m=k[((n&3|0)==3?i:l)+28>>2]|0;c=0;while(1){c=c+1|0;if((k[((k[e>>2]&3|0)==3?e:e+32|0)+28>>2]|0)==(m|0))break b;e=k[j+(c<<2)>>2]|0;if(!e){g=l;u=22;break}}}while(0);if((u|0)==22){u=0;e=bg(k[((n&3|0)==3?i:g)+28>>2]|0,t,i)|0;g=k[o>>2]|0}g=k[k[g+180>>2]>>2]|0;if(g)do{ig(g,e);Zf(g);g=k[k[(k[o>>2]|0)+180>>2]>>2]|0}while((g|0)!=0);Zf(i);g=k[o>>2]|0;i=k[k[g+172>>2]>>2]|0}while((i|0)!=0)}if((k[g+176>>2]|0)!=(0-(k[g+184>>2]|0)|0)){u=27;break}eg(a,p);if((q|0)>=(d|0)){u=3;break}g=k[(k[(k[v>>2]|0)+196>>2]|0)+(b<<6)+4>>2]|0;q=q+1|0}if((u|0)==3){h=k[(k[v>>2]|0)+196>>2]|0;break}else if((u|0)==27)Wa(124395,124439,115,124446)}else h=i;while(0);i=d+1|0;g=h+(b<<6)|0;if((i|0)<(k[g>>2]|0))do{g=k[h+(b<<6)+4>>2]|0;h=k[g+(i<<2)>>2]|0;k[g+(f<<2)>>2]=h;k[(k[h+8>>2]|0)+236>>2]=f;f=f+1|0;i=i+1|0;h=k[(k[v>>2]|0)+196>>2]|0;g=h+(b<<6)|0}while((i|0)<(k[g>>2]|0));k[g>>2]=f;k[(k[h+(b<<6)+4>>2]|0)+(f<<2)>>2]=0;return}function zi(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0;w=r;r=r+32|0;s=w+16|0;u=w;v=a+8|0;c=k[v>>2]|0;d=j[c+236>>1]|0;if(d<<16>>16<=(j[c+238>>1]|0)){d=d<<16>>16;while(1){k[(k[c+268>>2]|0)+(d<<2)>>2]=0;c=k[v>>2]|0;if((d|0)>=(j[c+238>>1]|0))break;else d=d+1|0}}mh(a);c=Kt(a)|0;if(c)do{q=k[c+8>>2]|0;d=(k[(k[v>>2]|0)+268>>2]|0)+(k[q+232>>2]<<2)|0;p=k[d>>2]|0;if(!((p|0)!=0?(k[(k[p+8>>2]|0)+236>>2]|0)<=(k[q+236>>2]|0):0))k[d>>2]=c;d=Es(a,c)|0;if(d)do{f=d;while(1){e=k[(k[f+8>>2]|0)+172>>2]|0;if(!e)break;else f=e}e=k[f>>2]|0;n=f+-32|0;m=k[((e&3|0)==2?f:n)+28>>2]|0;l=k[m+8>>2]|0;h=k[l+232>>2]|0;g=k[d>>2]|0;q=d+-32|0;if((h|0)<(k[(k[(k[((g&3|0)==2?d:q)+28>>2]|0)+8>>2]|0)+232>>2]|0)){p=f;o=n;n=f;while(1){f=(k[(k[v>>2]|0)+268>>2]|0)+(h<<2)|0;h=k[f>>2]|0;if(!((h|0)!=0?(k[(k[h+8>>2]|0)+236>>2]|0)<=(k[l+236>>2]|0):0)){k[f>>2]=m;g=k[d>>2]|0;e=k[p>>2]|0}n=k[k[(k[(k[((e&3|0)==2?n:o)+28>>2]|0)+8>>2]|0)+180>>2]>>2]|0;e=k[n>>2]|0;o=n+-32|0;m=k[((e&3|0)==2?n:o)+28>>2]|0;l=k[m+8>>2]|0;f=k[l+232>>2]|0;if((f|0)<(k[(k[(k[((g&3|0)==2?d:q)+28>>2]|0)+8>>2]|0)+232>>2]|0)){h=f;p=n}else break}}d=Gs(a,d)|0}while((d|0)!=0);c=Lt(a,c)|0}while((c|0)!=0);c=k[v>>2]|0;d=j[c+236>>1]|0;a:do if(d<<16>>16>(j[c+238>>1]|0))b=c;else{e=c;c=d<<16>>16;while(1){e=k[(k[e+268>>2]|0)+(c<<2)>>2]|0;d=e+8|0;q=k[(k[d>>2]|0)+236>>2]|0;p=(rf(a)|0)+8|0;if((k[(k[(k[(k[p>>2]|0)+196>>2]|0)+(c<<6)+4>>2]|0)+(q<<2)>>2]|0)!=(e|0))break;d=(rf(a)|0)+8|0;q=k[v>>2]|0;d=(k[(k[(k[d>>2]|0)+196>>2]|0)+(c<<6)+4>>2]|0)+(k[(k[(k[(k[q+268>>2]|0)+(c<<2)>>2]|0)+8>>2]|0)+236>>2]<<2)|0;q=k[q+196>>2]|0;k[q+(c<<6)+4>>2]=d;if((k[q+(c<<6)>>2]|0)>0){d=k[d>>2]|0;b:do if(!d)d=-1;else{g=0;f=-1;while(1){e=k[d+8>>2]|0;c:do if(!(i[e+156>>0]|0))if(!(ju(a,d)|0)){d=f;break b}else e=g;else{d=k[k[e+172>>2]>>2]|0;while(1){if(!d){e=f;break c}e=k[(k[d+8>>2]|0)+116>>2]|0;if(!e)break;else d=e}if(!(ju(a,k[((k[d>>2]&3|0)==3?d:d+32|0)+28>>2]|0)|0))e=f;else{e=(ju(a,k[((k[d>>2]&3|0)==2?d:d+-32|0)+28>>2]|0)|0)==0;e=e?f:g}}while(0);g=g+1|0;d=k[(k[v>>2]|0)+196>>2]|0;if((g|0)>=(k[d+(c<<6)>>2]|0)){d=e;break b}d=k[(k[d+(c<<6)+4>>2]|0)+(g<<2)>>2]|0;if(!d){d=e;break}else f=e}}while(0);if((d|0)==-1)t=35}else t=35;if((t|0)==35){t=0;d=ht(a)|0;k[s>>2]=d;k[s+4>>2]=c;Yr(0,124359,s)|0;d=-1}e=k[v>>2]|0;k[(k[e+196>>2]|0)+(c<<6)>>2]=d+1;if((c|0)<(j[e+238>>1]|0))c=c+1|0;else{b=e;break a}}s=ht(e)|0;t=k[(k[d>>2]|0)+236>>2]|0;k[u>>2]=s;k[u+4>>2]=t;k[u+8>>2]=c;Yr(1,124301,u)|0;Za(49724,1)}while(0);if((k[b+180>>2]|0)>=1){c=1;while(1){zi(k[(k[b+184>>2]|0)+(c<<2)>>2]|0);b=k[v>>2]|0;if((c|0)>=(k[b+180>>2]|0))break;else c=c+1|0}}r=w;return}function Ai(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0;k[12470]=a;c=(i[124459]|0)+1<<24>>24;i[124459]=c<<24>>24==0?1:c;c=k[a+8>>2]|0;k[c+220>>2]=0;k[c+232>>2]=0;c=Kt(a)|0;if(c){f=(b|0)>0;do{if(f?(g=k[c+8>>2]|0,h=k[g+212>>2]|0,(h|0)!=0):0){j=k[(k[(k[h+8>>2]|0)+268>>2]|0)+(k[g+232>>2]<<2)>>2]|0;b=7}else b=6;if((b|0)==6?(b=0,(c|0)==(pB(c)|0)):0){j=c;b=7}if((b|0)==7?(0,(i[(k[j+8>>2]|0)+157>>0]|0)!=(i[124459]|0)):0){k[(k[(k[12470]|0)+8>>2]|0)+192>>2]=0;k[12471]=0;Bi(j);d=k[(k[12470]|0)+8>>2]|0;l=d+220|0;e=k[l>>2]|0;b=e+1|0;k[l>>2]=b;d=k[d+216>>2]|0;if(!d)b=Cy(b<<2)|0;else b=Ey(d,b<<2)|0;k[(k[(k[12470]|0)+8>>2]|0)+216>>2]=b;l=k[(k[12470]|0)+8>>2]|0;k[(k[l+216>>2]|0)+(e<<2)>>2]=k[l+192>>2]}c=Lt(a,c)|0}while((c|0)!=0)}return}function Bi(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0;l=r;r=r+32|0;j=l;d=(k[(k[12470]|0)+8>>2]|0)+232|0;k[d>>2]=(k[d>>2]|0)+1;d=a+8|0;c=k[d>>2]|0;i[c+157>>0]=i[124459]|0;b=k[12471]|0;c=c+168|0;if(!b){k[c>>2]=0;k[(k[(k[12470]|0)+8>>2]|0)+192>>2]=a}else{k[c>>2]=b;k[(k[(k[12471]|0)+8>>2]|0)+164>>2]=a}k[12471]=a;e=k[d>>2]|0;k[e+164>>2]=0;d=e+180|0;f=k[d+4>>2]|0;g=j;k[g>>2]=k[d>>2];k[g+4>>2]=f;g=e+172|0;f=k[g+4>>2]|0;d=j+8|0;k[d>>2]=k[g>>2];k[d+4>>2]=f;d=e+188|0;f=k[d+4>>2]|0;g=j+16|0;k[g>>2]=k[d>>2];k[g+4>>2]=f;e=e+196|0;g=k[e+4>>2]|0;f=j+24|0;k[f>>2]=k[e>>2];k[f+4>>2]=g;f=0;do{e=k[j+(f<<3)>>2]|0;if((e|0)!=0?(h=k[e>>2]|0,(h|0)!=0):0){c=h;g=0;do{d=k[c>>2]&3;b=k[((d|0)==2?c:c+-32|0)+28>>2]|0;if((b|0)==(a|0))b=k[((d|0)==3?c:c+32|0)+28>>2]|0;if((i[(k[b+8>>2]|0)+157>>0]|0)!=(i[124459]|0)?(b|0)==(pB(b)|0):0)Bi(b);g=g+1|0;c=k[e+(g<<2)>>2]|0}while((c|0)!=0)}f=f+1|0}while((f|0)!=4);r=l;return}function Ci(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,l=0,m=0,n=0,o=0.0,q=0.0;n=a+8|0;c=k[n>>2]|0;b=k[c+192>>2]|0;if(b){do{e=b+8|0;b=k[e>>2]|0;c=k[b+188>>2]|0;if((c|0)!=0?(f=k[c>>2]|0,(f|0)!=0):0){c=f;d=0;do{Di(c);d=d+1|0;b=k[e>>2]|0;c=k[(k[b+188>>2]|0)+(d<<2)>>2]|0}while((c|0)!=0)}if((k[b+208>>2]|0)>0){d=0;do{c=k[(k[b+204>>2]|0)+(d<<2)>>2]|0;g=k[c>>2]&3;if((k[(k[(k[((g|0)==2?c:c+-32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)==(k[(k[(k[((g|0)==3?c:c+32|0)+28>>2]|0)+8>>2]|0)+232>>2]|0)){Di(c);b=k[e>>2]|0}d=d+1|0}while((d|0)<(k[b+208>>2]|0))}b=k[b+164>>2]|0}while((b|0)!=0);c=k[n>>2]|0}g=k[c+196>>2]|0;if(!((k[g+56>>2]|0)==0?(k[c+180>>2]|0)<=0:0))l=13;a:do if((l|0)==13?(m=k[g+4>>2]|0,h=k[m>>2]|0,(h|0)!=0):0){b=h;f=0;b:while(1){e=k[(k[b+8>>2]|0)+196>>2]|0;b=k[e>>2]|0;if(b){d=0;do{l=k[b+8>>2]|0;if((k[l+96>>2]|0)!=0?(i[l+113>>0]|0)==0:0)break b;d=d+1|0;b=k[e+(d<<2)>>2]|0}while((b|0)!=0)}f=f+1|0;b=k[m+(f<<2)>>2]|0;if(!b)break a}if(j[c+236>>1]|0)Wa(124460,124479,190,124486);b=(j[c+238>>1]|0)+3|0;if(!g)b=Cy(b<<6)|0;else b=Ey(g,b<<6)|0;b=b+64|0;m=k[n>>2]|0;k[m+196>>2]=b;m=j[m+238>>1]|0;c=m<<16>>16;if(m<<16>>16>-1){do{f=c;c=c+-1|0;e=b+(f<<6)|0;b=b+(c<<6)|0;d=e+64|0;do{k[e>>2]=k[b>>2];e=e+4|0;b=b+4|0}while((e|0)<(d|0));b=k[(k[n>>2]|0)+196>>2]|0}while((f|0)>0);c=-1}k[b+(c<<6)+8>>2]=0;k[b+(c<<6)>>2]=0;h=By(8)|0;m=k[n>>2]|0;l=k[m+196>>2]|0;k[l+(c<<6)+12>>2]=h;k[l+(c<<6)+4>>2]=h;k[l+(c<<6)+56>>2]=0;p[l+(c<<6)+24>>3]=1.0;p[l+(c<<6)+16>>3]=1.0;p[l+(c<<6)+40>>3]=1.0;p[l+(c<<6)+32>>3]=1.0;m=m+236|0;j[m>>1]=(j[m>>1]|0)+-1<<16>>16}while(0);ng(a);b=k[(k[n>>2]|0)+192>>2]|0;if(b){c=b;b=0;do{l=c+8|0;d=k[l>>2]|0;c=k[d+188>>2]|0;if(c){c=k[c>>2]|0;if(!c)c=d;else{g=0;do{e=k[c+8>>2]|0;f=k[e+96>>2]|0;do if(f){if(!(i[e+113>>0]|0)){Ei(c);d=k[l>>2]|0;b=1;break}if(!(k[(k[n>>2]|0)+116>>2]&1)){p[e+136>>3]=+p[f+24>>3];break}else{p[e+136>>3]=+p[f+32>>3];break}}while(0);g=g+1|0;c=k[(k[d+188>>2]|0)+(g<<2)>>2]|0}while((c|0)!=0);c=d}if((k[c+208>>2]|0)>0){h=0;do{g=k[(k[c+204>>2]|0)+(h<<2)>>2]|0;m=k[g>>2]&3;f=k[((m|0)==3?g:g+32|0)+28>>2]|0;m=k[((m|0)==2?g:g+-32|0)+28>>2]|0;do if(!((f|0)==(m|0)?1:(k[(k[f+8>>2]|0)+232>>2]|0)!=(k[(k[m+8>>2]|0)+232>>2]|0))){e=g;do{d=k[e+8>>2]|0;e=k[d+172>>2]|0}while((e|0)!=0);e=i[d+113>>0]|0;f=k[g+8>>2]|0;i[f+113>>0]=e;f=k[f+96>>2]|0;if(f)if(!(e<<24>>24)){Ei(g);c=k[l>>2]|0;b=1;break}else{q=+p[((k[(k[n>>2]|0)+116>>2]&1|0)==0?f+24|0:f+32|0)>>3];m=d+136|0;o=+p[m>>3];p[m>>3]=q>o?q:o;break}}while(0);h=h+1|0}while((h|0)<(k[c+208>>2]|0))}}else c=d;c=k[c+164>>2]|0}while((c|0)!=0);if(b)og(a);else b=0}else b=0;return b|0}function Di(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;b=k[a>>2]&3;d=k[((b|0)==3?a:a+32|0)+28>>2]|0;c=k[d+8>>2]|0;f=k[c+236>>2]|0;b=k[(k[(k[((b|0)==2?a:a+-32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0;g=(f|0)<(b|0);e=g?b:f;c=k[c+232>>2]|0;d=(rf(d)|0)+8|0;b=(g?f:b)+1|0;a:do if((b|0)<(e|0)){d=k[(k[(k[d>>2]|0)+196>>2]|0)+(c<<6)+4>>2]|0;while(1){c=k[(k[d+(b<<2)>>2]|0)+8>>2]|0;switch(i[c+156>>0]|0){case 0:break a;case 1:{if(k[c+104>>2]|0)break a;break}default:{}}b=b+1|0;if((b|0)>=(e|0))break a}}while(0);if((b|0)==(e|0))do{g=k[a+8>>2]|0;i[g+113>>0]=1;a=k[g+172>>2]|0}while((a|0)!=0);return}function Ei(a){a=a|0;var b=0,c=0,d=0.0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0.0,A=0.0;y=r;r=r+16|0;j=y;s=a+8|0;if(k[(k[s>>2]|0)+96>>2]|0){u=a+32|0;t=rf(k[((k[a>>2]&3|0)==3?a:u)+28>>2]|0)|0;b=k[a>>2]&3;f=k[(k[((b|0)==3?a:u)+28>>2]|0)+8>>2]|0;q=k[f+232>>2]|0;x=q+-1|0;v=t+8|0;m=k[(k[v>>2]|0)+196>>2]|0;g=k[m+(x<<6)+4>>2]|0;m=k[m+(x<<6)>>2]|0;n=j+8|0;k[n>>2]=-1;k[j>>2]=-1;o=j+12|0;k[o>>2]=m;h=j+4|0;k[h>>2]=m;w=a+-32|0;f=k[f+236>>2]|0;b=k[(k[(k[((b|0)==2?a:w)+28>>2]|0)+8>>2]|0)+236>>2]|0;c=(f|0)>(b|0);e=c?f:b;f=c?b:f;b=m;c=-1;l=0;while(1){m=m+-1|0;if((l|0)>(m|0))break;Fi(k[g+(l<<2)>>2]|0,j,f,e);if((l|0)!=(m|0))Fi(k[g+(m<<2)>>2]|0,j,f,e);b=k[h>>2]|0;c=k[j>>2]|0;if((b-c|0)<2)break;else l=l+1|0}if((c|0)>(b|0))b=(k[o>>2]|0)+(k[n>>2]|0)|0;else b=c+b|0;h=(b+1|0)/2|0;b=k[v>>2]|0;e=k[b+196>>2]|0;g=k[e+(x<<6)+4>>2]|0;c=k[g>>2]|0;if(!c)d=+p[(k[(k[k[e+(q<<6)+4>>2]>>2]|0)+8>>2]|0)+24>>3]+ +p[e+(q<<6)+24>>3]+ +(k[b+252>>2]|0);else d=+p[(k[c+8>>2]|0)+24>>3]-+p[e+(x<<6)+16>>3];f=~~d;b=k[e+(x<<6)>>2]|0;if(!g)c=Cy((b<<2)+8|0)|0;else c=Ey(g,(b<<2)+8|0)|0;b=k[(k[v>>2]|0)+196>>2]|0;k[b+(x<<6)+4>>2]=c;b=k[b+(x<<6)>>2]|0;if((b|0)>(h|0))do{o=b;b=b+-1|0;q=k[c+(b<<2)>>2]|0;k[c+(o<<2)>>2]=q;q=(k[q+8>>2]|0)+236|0;k[q>>2]=(k[q>>2]|0)+1}while((b|0)>(h|0));e=fg(t)|0;b=c+(h<<2)|0;k[b>>2]=e;e=k[e+8>>2]|0;k[e+236>>2]=h;k[e+232>>2]=x;e=(k[(k[v>>2]|0)+196>>2]|0)+(x<<6)|0;q=(k[e>>2]|0)+1|0;k[e>>2]=q;k[c+(q<<2)>>2]=0;b=k[b>>2]|0;s=k[(k[s>>2]|0)+96>>2]|0;z=+p[s+24>>3];d=+p[s+32>>3];q=(k[(k[v>>2]|0)+116>>2]&1|0)==0;A=q?d:z;e=b+8|0;c=k[e>>2]|0;p[c+80>>3]=A;t=~~(A*.5);d=(q?z:d)*.5;p[c+96>>3]=d;p[c+88>>3]=d;k[c+104>>2]=s;p[c+24>>3]=+(t+f|0);c=bg(b,k[((k[a>>2]&3|0)==3?a:u)+28>>2]|0,a)|0;c=k[c+8>>2]|0;p[c+16>>3]=-+p[(k[e>>2]|0)+88>>3];p[c+56>>3]=+p[(k[(k[((k[a>>2]&3|0)==3?a:u)+28>>2]|0)+8>>2]|0)+96>>3];i[c+112>>0]=4;b=bg(b,k[((k[a>>2]&3|0)==2?a:w)+28>>2]|0,a)|0;e=k[e>>2]|0;b=k[b+8>>2]|0;p[b+16>>3]=+p[e+96>>3];p[b+56>>3]=+p[(k[(k[((k[a>>2]&3|0)==2?a:w)+28>>2]|0)+8>>2]|0)+88>>3];i[b+112>>0]=4;b=k[(k[v>>2]|0)+196>>2]|0;c=b+(x<<6)+16|0;d=+(t|0);if(+p[c>>3]<d)p[c>>3]=d;b=b+(x<<6)+24|0;if(+p[b>>3]<d)p[b>>3]=d;k[e+112>>2]=a}r=y;return}function Fi(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,l=0,m=0;a=k[a+8>>2]|0;do if((i[a+156>>0]|0)==1){j=k[a+236>>2]|0;if(k[a+176>>2]|0){h=k[a+180>>2]|0;a=k[h>>2]|0;if(!a)break;else{f=a;g=0;e=0;a=0}do{l=k[(k[(k[((k[f>>2]&3|0)==2?f:f+-32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0;m=(l|0)>(c|0);e=m?e:1;a=m?((l|0)<(d|0)?a:1):a;g=g+1|0;f=k[h+(g<<2)>>2]|0}while((f|0)!=0);if(e<<24>>24!=0&a<<24>>24==0)k[b>>2]=j+1;if(!(e<<24>>24==0&a<<24>>24!=0))break;k[b+4>>2]=j+-1;break}if((k[a+184>>2]|0)!=2)Wa(124498,124479,63,124518);m=k[a+180>>2]|0;e=k[m>>2]|0;m=k[m+4>>2]|0;e=k[(k[(k[((k[e>>2]&3|0)==2?e:e+-32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0;m=k[(k[(k[((k[m>>2]&3|0)==2?m:m+-32|0)+28>>2]|0)+8>>2]|0)+236>>2]|0;l=(e|0)>(m|0);a=l?e:m;e=l?m:e;if((a|0)<=(c|0)){k[b>>2]=j;k[b+8>>2]=j;break}if((e|0)>=(d|0)){k[b+4>>2]=j;k[b+12>>2]=j;break}f=(e|0)<(c|0);g=(a|0)>(d|0);if(!(f&g)){if(!(!f?!((e|0)==(c|0)&(a|0)<(d|0)):0))k[b+8>>2]=j;if(!g?!((a|0)==(d|0)&(e|0)>(c|0)):0)break;k[b+12>>2]=j}}while(0);return}function Gi(a){a=a|0;k[13600]=1;Oi(a);k[13600]=0;return}function Hi(a){a=a|0;k[13600]=2;Oi(a);k[13600]=0;return}function Ii(a){a=a|0;var b=0;qu(a,173424,304,1)|0;BB(a);b=($t(a)|0)+8|0;b=By((m[(k[b>>2]|0)+176>>1]|0)<<3)|0;k[(k[a+8>>2]|0)+132>>2]=b;b=($t(a)|0)+8|0;ZB(a,k[(k[b>>2]|0)+116>>2]&1);return}function Ji(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0.0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0.0;u=r;r=r+64|0;h=u+48|0;m=u+40|0;j=u+24|0;g=u+8|0;t=u+56|0;n=u;do if((a|0)!=0?(q=c+8|0,s=k[(k[q>>2]|0)+132>>2]|0,f=ts(c,a)|0,(i[f>>0]|0)!=0):0){i[t>>0]=0;a=s+8|0;if((k[13604]|0)>2?(k[g>>2]=s,k[g+4>>2]=a,k[g+8>>2]=s+16,k[g+12>>2]=t,(UN(f,124598,g)|0)>2):0){i[(k[q>>2]|0)+119>>0]=1;e=+p[4239];f=k[13604]|0;if(e>0.0){if((f|0)>0){p[s>>3]=+p[s>>3]/e;if((f|0)>1){a=1;do{o=s+(a<<3)|0;p[o>>3]=+p[o>>3]/+p[4239];a=a+1|0}while((a|0)<(f|0));o=9}else o=9}}else o=9;if((o|0)==9?(f|0)>3:0)Aj(c,d,3);if((i[t>>0]|0)!=33){if(!b){a=1;break}if(!((oB(ts(c,b)|0)|0)<<24>>24)){a=1;break}}i[(k[q>>2]|0)+119>>0]=3;a=1;break}k[j>>2]=s;k[j+4>>2]=a;k[j+8>>2]=t;if((UN(f,138031,j)|0)<=1){a=ht(c)|0;k[h>>2]=a;k[h+4>>2]=f;Yr(1,124612,h)|0;a=0;break}i[(k[q>>2]|0)+119>>0]=1;e=+p[4239];f=k[13604]|0;if(e>0.0){if((f|0)>0){p[s>>3]=+p[s>>3]/e;if((f|0)>1){a=1;do{o=s+(a<<3)|0;p[o>>3]=+p[o>>3]/+p[4239];a=a+1|0}while((a|0)<(f|0));o=20}else o=20}}else o=20;do if((o|0)==20?(f|0)>2:0){a=k[13653]|0;if(((a|0)!=0?(l=ts(c,a)|0,(l|0)!=0):0)?(k[m>>2]=n,(UN(l,137283,m)|0)==1):0){v=+p[4239];e=+p[n>>3];p[s+16>>3]=v>0.0?e/v:e;Aj(c,d,3);break}Bj(c,d)}while(0);if((i[t>>0]|0)!=33){if(!b){a=1;break}if(!((oB(ts(c,b)|0)|0)<<24>>24)){a=1;break}}i[(k[q>>2]|0)+119>>0]=3;a=1}else a=0;while(0);r=u;return a|0}function Ki(a){a=a|0;var b=0,c=0;b=Kt(a)|0;if(b)do{c=Es(a,b)|0;if(c)do{XB(c);c=Gs(a,c)|0}while((c|0)!=0);YB(b);b=Lt(a,b)|0}while((b|0)!=0);if((k[13600]|0)!=0|(k[12552]|0)<0)zj(a);if((au(a)|0)!=(a|0))tu(a,0,173447);return}function Li(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,m=0,n=0.0,o=0.0,q=0.0,s=0.0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0;J=r;r=r+144|0;D=J+112|0;B=J+96|0;A=J+88|0;E=J+72|0;C=J+56|0;m=J+48|0;y=J+128|0;F=J+40|0;G=J+32|0;z=J+124|0;x=J+120|0;I=J;h=ks(a,0,138549,0)|0;c=ks(a,0,138583,0)|0;if(!c)g=ks(a,0,138583,176676)|0;else g=c;yj(a)|0;H=a+8|0;c=k[k[(k[H>>2]|0)+152>>2]>>2]|0;a:do if(!c)t=11;else{f=0;while(1){e=c+8|0;d=k[e>>2]|0;if(!(i[d+119>>0]|0)){if(wO(ht(c)|0,143893,7)|0)break;d=k[e>>2]|0}d=k[d+108>>2]|0;if(d)Pi(c,d,138545);f=f+1|0;c=k[(k[(k[H>>2]|0)+152>>2]|0)+(f<<2)>>2]|0;if(!c){t=11;break a}}I=ht(c)|0;c=ht(a)|0;k[m>>2]=I;k[m+4>>2]=c;Yr(1,124656,m)|0;c=-1}while(0);b:do if((t|0)==11){Qi(a,h,g);if(_s(a)|0){w=ks(a,2,138535,0)|0;if(!((w|0)==0|(k[13600]|0)<2)?(j=Kt(a)|0,(j|0)!=0):0){c=0;do{d=Es(a,j)|0;if(d)do{e=ts(d,w)|0;do if(i[e>>0]|0){Yw(d,z,x);f=0;q=0.0;s=0.0;v=1;g=e;e=0;n=0.0;o=0.0;c:while(1){k[C>>2]=F;k[C+4>>2]=G;k[C+8>>2]=y;if((UN(g,124693,C)|0)==2){g=g+(k[y>>2]|0)|0;u=1;n=+p[F>>3];o=+p[G>>3]}else u=e;k[E>>2]=F;k[E+4>>2]=G;k[E+8>>2]=y;if((UN(g,124705,E)|0)==2){t=1;q=+p[F>>3];s=+p[G>>3];g=g+(k[y>>2]|0)|0}else t=f;e=g;f=0;while(1){while(1)if(!(_L(l[e>>0]|0)|0))break;else e=e+1|0;h=i[e>>0]|0;d:do if(!(h<<24>>24))h=0;else{f=f+1|0;while(1){if(h<<24>>24==59|(_L(h&255)|0)!=0)break d;e=e+1|0;h=i[e>>0]|0;if(!(h<<24>>24)){h=0;break}}}while(0);if(!(_L(h&255)|0)){m=f;break}}if(!((m|0)>3&((m|0)%3|0|0)==1)){t=31;break}e=Cy(m<<4)|0;if(m){h=m;f=e;while(1){k[B>>2]=F;k[B+4>>2]=G;k[B+8>>2]=y;if((UN(g,124776,B)|0)<2){t=35;break c}g=g+(k[y>>2]|0)|0;p[f>>3]=+p[F>>3];p[f+8>>3]=+p[G>>3];h=h+-1|0;if(!h)break;else f=f+16|0}}while(1){f=g+1|0;if(!(_L(i[g>>0]|0)|0))break;else g=f}h=(i[g>>0]|0)==0;g=h?g:f;v=h?0:v;f=DA(d,m)|0;if(u){k[f+8>>2]=k[z>>2];p[f+16>>3]=n;p[f+24>>3]=o}if(t){k[f+12>>2]=k[x>>2];p[f+32>>3]=q;p[f+40>>3]=s}if((m|0)>0){h=0;do{K=(k[f>>2]|0)+(h<<4)|0;L=e+(h<<4)|0;k[K>>2]=k[L>>2];k[K+4>>2]=k[L+4>>2];k[K+8>>2]=k[L+8>>2];k[K+12>>2]=k[L+12>>2];h=h+1|0}while((h|0)!=(m|0))}vP(e);if(!v){t=48;break}else{f=t;e=u}}if((t|0)==31){WB(d);if(i[124718]|0){e=0;break}i[124718]=1;L=ht(k[((k[d>>2]&3|0)==3?d:d+32|0)+28>>2]|0)|0;e=ht(k[((k[d>>2]&3|0)==2?d:d+-32|0)+28>>2]|0)|0;k[A>>2]=L;k[A+4>>2]=e;Yr(0,124719,A)|0;e=0;break}else if((t|0)==35){if(!(i[124718]|0)){i[124718]=1;K=ht(k[((k[d>>2]&3|0)==3?d:d+32|0)+28>>2]|0)|0;L=ht(k[((k[d>>2]&3|0)==2?d:d+-32|0)+28>>2]|0)|0;k[D>>2]=K;k[D+4>>2]=L;Yr(0,124786,D)|0}vP(e);WB(d);e=0;break}else if((t|0)==48){g=d+8|0;e=k[g>>2]|0;f=k[e+96>>2]|0;if(f){Pi(d,f,138549);e=k[g>>2]|0}f=k[e+108>>2]|0;if(f){Pi(d,f,138545);e=k[g>>2]|0}f=k[e+100>>2]|0;if(f){Pi(d,f,138552);e=k[g>>2]|0}e=k[e+104>>2]|0;if(!e){e=1;break}Pi(d,e,138560);e=1;break}}else e=0;while(0);c=e+c|0;d=Gs(a,d)|0}while((d|0)!=0);j=Lt(a,j)|0}while((j|0)!=0);if(c){g=(c|0)==(_s(a)|0);g=g?2:1}else g=0}else g=0}else g=2;c=k[(k[H>>2]|0)+8>>2]|0;if(!(k[c+88>>2]|0))c=0;else{k[c+84>>2]=0;c=1}e=(b|0)!=0;f=(c|0)!=0;if(!(f|e&(k[13600]|0)==1^1)?(ll(a)|0)!=0:0){d=k[(k[H>>2]|0)+12>>2]|0;if(!d)d=1;else{i[d+81>>0]=0;d=1}}else d=0;FB(a);if(f){L=(k[H>>2]|0)+16|0;xx(I,a);k[L>>2]=k[I>>2];k[L+4>>2]=k[I+4>>2];k[L+8>>2]=k[I+8>>2];k[L+12>>2]=k[I+12>>2];k[L+16>>2]=k[I+16>>2];k[L+20>>2]=k[I+20>>2];k[L+24>>2]=k[I+24>>2];k[L+28>>2]=k[I+28>>2]}if(!e){k[13605]=1;d=Kt(a)|0;if(!d)break;while(1){L=k[d+8>>2]|0;K=k[L+132>>2]|0;p[L+16>>3]=+p[K>>3]*72.0;p[L+24>>3]=+p[K+8>>3]*72.0;d=Lt(a,d)|0;if(!d)break b}}if((g|0)!=0&(d|(cj(a)|0)<<24>>24!=0)){d=Kt(a)|0;if(d)do{e=Es(a,d)|0;if(e)do{WB(e);L=e+8|0;sy(k[(k[L>>2]|0)+96>>2]|0);sy(k[(k[L>>2]|0)+108>>2]|0);sy(k[(k[L>>2]|0)+100>>2]|0);sy(k[(k[L>>2]|0)+104>>2]|0);e=Gs(a,e)|0}while((e|0)!=0);d=Lt(a,d)|0}while((d|0)!=0)}else if((g|0)==2){k[13605]=1;break}bj(a,0)}while(0);r=J;return c|0}function Mi(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,m=0,n=0;n=r;r=r+48|0;j=n+8|0;h=n;g=n+16|0;f=n+12|0;d=ss(a,124834)|0;do if((d|0)!=0?(e=i[d>>0]|0,e<<24>>24!=0):0){if(!(XL(e&255)|0))if(((l[d>>0]|0)+-48|0)>>>0<10)b=d;else m=8;else{if(!(wO(d,124840,4)|0)){b=0;break}if(!(wO(d,142255,7)|0)){b=1;break}e=(wO(d,124845,6)|0)==0;d=e?d+6|0:d;if(e)b=d;else m=8}if((m|0)==8)if((b|0)==2)b=d;else break;if(!(((l[b>>0]|0)+-48|0)>>>0<10?(k[h>>2]=f,(UN(b,135887,h)|0)>=1):0)){m=HO()|0;m=(Cb(0)|0)^m;k[f>>2]=m;k[j>>2]=m;TN(g,135887,j)|0;us(a,124834,g)|0}k[c>>2]=k[f>>2];b=2}while(0);r=n;return b|0}function Ni(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0.0,g=0.0,h=0.0,j=0,l=0,m=0,n=0.0;l=r;r=r+16|0;j=l+4|0;k[j>>2]=1;d=Mi(a,c,j)|0;if((d|0)!=2&(k[12553]|0)!=0)Yr(0,124852,l)|0;if((d|0)==1?(g=+(b|0),h=6.283185307179586/g,e=Kt(a)|0,(e|0)!=0):0){f=0.0;c=e;while(1){n=g*+Z(+f);e=k[c+8>>2]|0;m=k[e+132>>2]|0;p[m>>3]=n;n=g*+_(+f);p[m+8>>3]=n;i[e+119>>0]=1;if((k[13604]|0)>2)Bj(c,b);c=Lt(a,c)|0;if(!c)break;else f=h+f}}cN(k[j>>2]|0);r=l;return d|0}function Oi(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0.0,o=0,q=0,s=0.0;q=r;r=r+112|0;f=q+56|0;e=q+48|0;d=q+40|0;c=q+32|0;b=q+24|0;m=q+72|0;j=q;o=q+64|0;l=q+104|0;n=+p[4239];do if(k[13600]|0){p[4239]=72.0;Ri(a);Si(a);if((Li(a,1)|0)<0){Yr(3,124900,b)|0;break}else{rz(a,0);h=38;break}}else{s=+kB(a);p[4239]=s;Ri(a);b=ss(a,124928)|0;a:do if(!b)g=1;else{switch(i[b>>0]|0){case 0:{g=1;break a}case 75:{if(!(qO(b,124933)|0)){g=0;break a}break}case 109:{if(!(qO(b,124936)|0)){g=1;break a}break}case 104:{if(!(qO(b,124942)|0)){g=2;break a}break}default:{}}g=ht(a)|0;k[c>>2]=b;k[c+4>>2]=g;Yr(0,124947,c)|0;g=1}while(0);il(a,j,0)|0;b=ss(a,125008)|0;b:do if(!b)d=0;else{switch(i[b>>0]|0){case 0:{d=0;break b}case 99:{if(!(qO(b,125014)|0)){d=1;break b}break}case 115:{if(!(qO(b,125022)|0)){d=2;break b}if(!(qO(b,125029)|0)){d=0;break b}break}case 109:{if(!(qO(b,125039)|0)){if(ks(a,2,128865,0)|0){d=3;break b}f=ht(a)|0;k[d>>2]=f;Yr(0,125043,d)|0;Yr(3,125106,e)|0;d=0;break b}break}default:{}}d=ht(a)|0;k[f>>2]=b;k[f+4>>2]=d;Yr(0,125163,f)|0;d=0}while(0);f=Mw(a,0,m)|0;b=Nw(a,-1,8)|0;k[12552]=b;c=(b|0)<0;do if(!f){if((g|0)!=0&c){k[12552]=8;k[m+16>>2]=2;h=26;break}k[m+16>>2]=2;if((b|0)>-1)h=26;else{Ti(a,g,d);jl(a,j)|0;Si(a);FB(a);bj(a,1)}}else if(c){k[12552]=8;h=26}else h=26;while(0);if((h|0)==26){e=qw(a,o,125225,l)|0;if((k[o>>2]|0)>1){c=0;do{b=k[e+(c<<2)>>2]|0;uw(b)|0;Ti(b,g,d);jl(b,j)|0;UB(b,2);FB(b);bj(b,1);c=c+1|0;b=k[o>>2]|0}while((c|0)<(b|0));if(!(i[l>>0]|0))c=0;else{c=By(b)|0;i[c>>0]=1;b=k[o>>2]|0}k[m+8>>2]=k[12552];k[m+20>>2]=c;k[m+12>>2]=1;Iw(b,e,a,m)|0;if(c)vP(c)}else{Ti(a,g,d);jl(a,j)|0;FB(a);bj(a,1)}FB(a);Si(a);if((k[o>>2]|0)>0){b=0;do{m=k[e+(b<<2)>>2]|0;zj(m);ru(m,173447)|0;_t(a,m)|0;b=b+1|0}while((b|0)<(k[o>>2]|0))}vP(e)}rz(a,0);h=38}while(0);if((h|0)==38)p[4239]=n;r=q;return}function Pi(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0.0;g=r;r=r+32|0;d=g+16|0;e=g+8|0;f=g;c=ss(a,c)|0;if((c|0)!=0?(k[d>>2]=e,k[d+4>>2]=f,(UN(c,142247,d)|0)==2):0){h=+p[f>>3];p[b+56>>3]=+p[e>>3];p[b+64>>3]=h;i[b+81>>0]=1}r=g;return}function Qi(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0.0;j=r;r=r+32|0;f=j+16|0;g=j+8|0;h=j;e=a+8|0;if(((b|0)!=0?(k[(k[e>>2]|0)+12>>2]|0)!=0:0)?(l=ts(a,b)|0,k[f>>2]=g,k[f+4>>2]=h,(UN(l,142247,f)|0)==2):0){l=k[(k[e>>2]|0)+12>>2]|0;m=+p[h>>3];p[l+56>>3]=+p[g>>3];p[l+64>>3]=m;i[(k[(k[e>>2]|0)+12>>2]|0)+81>>0]=1}if((c|0)!=0?(d=Iu(a)|0,(d|0)!=0):0)do{Wi(d,a,b,c);d=Ju(d)|0}while((d|0)!=0);r=j;return}function Ri(a){a=a|0;var b=0,c=0,d=0,e=0,f=0.0;UB(a,2);b=iB(a,ks(a,0,128251,0)|0,2,2)|0;e=(iB(a,ks(a,0,128257,0)|0,b,2)|0)&65535;c=(au(a)|0)+8|0;j[(k[c>>2]|0)+176>>1]=e;c=k[(k[a+48>>2]|0)+8>>2]|0;e=c+176|0;d=j[e>>1]|0;d=(d&65535)<10?d:10;j[e>>1]=d;d=d&65535;k[13604]=d;j[c+178>>1]=(b|0)<(d|0)?b:d;c=Zs(a)|0;d=ks(a,1,138535,0)|0;k[12553]=d;d=ks(a,1,126741,0)|0;b=Kt(a)|0;if(b)do{Ii(b);Ji(k[12553]|0,d,b,c)|0;b=Lt(a,b)|0}while((b|0)!=0);b=Kt(a)|0;if(b)do{c=Es(a,b)|0;if(c)do{qu(c,173717,176,1)|0;CB(c)|0;f=+jB(c,k[13656]|0,1.0,1.0);p[(k[c+8>>2]|0)+128>>3]=f;c=Gs(a,c)|0}while((c|0)!=0);b=Lt(a,b)|0}while((b|0)!=0);return}function Si(a){a=a|0;var b=0,c=0,d=0,e=0;e=r;r=r+1040|0;d=e;c=e+8|0;if((k[13604]|0)>2&(k[13653]|0)!=0?(b=Kt(a)|0,(b|0)!=0):0)do{p[d>>3]=+p[(k[(k[b+8>>2]|0)+132>>2]|0)+16>>3]*72.0;TN(c,137283,d)|0;vs(b,k[13653]|0,c)|0;b=Lt(a,b)|0}while((b|0)!=0);r=e;return}
function uM(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0.0,g=0,h=0,j=0.0,m=0,n=0,o=0,p=0.0,q=0.0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,M=0.0;K=r;r=r+512|0;G=K;switch(b|0){case 0:{J=24;I=-149;y=4;break}case 1:{J=53;I=-1074;y=4;break}case 2:{J=53;I=-1074;y=4;break}default:d=0.0}a:do if((y|0)==4){D=a+4|0;C=a+100|0;do{b=k[D>>2]|0;if(b>>>0<(k[C>>2]|0)>>>0){k[D>>2]=b+1;b=l[b>>0]|0}else b=yM(a)|0}while((_L(b)|0)!=0);b:do switch(b|0){case 43:case 45:{e=1-(((b|0)==45&1)<<1)|0;b=k[D>>2]|0;if(b>>>0<(k[C>>2]|0)>>>0){k[D>>2]=b+1;b=l[b>>0]|0;H=e;break b}else{b=yM(a)|0;H=e;break b}}default:H=1}while(0);e=b;b=0;do{if((e|32|0)!=(i[188588+b>>0]|0))break;do if(b>>>0<7){e=k[D>>2]|0;if(e>>>0<(k[C>>2]|0)>>>0){k[D>>2]=e+1;e=l[e>>0]|0;break}else{e=yM(a)|0;break}}while(0);b=b+1|0}while(b>>>0<8);c:do switch(b|0){case 8:break;case 3:{y=23;break}default:{g=(c|0)!=0;if(g&b>>>0>3)if((b|0)==8)break c;else{y=23;break c}d:do if(!b){b=0;do{if((e|32|0)!=(i[191526+b>>0]|0))break d;do if(b>>>0<2){e=k[D>>2]|0;if(e>>>0<(k[C>>2]|0)>>>0){k[D>>2]=e+1;e=l[e>>0]|0;break}else{e=yM(a)|0;break}}while(0);b=b+1|0}while(b>>>0<3)}while(0);switch(b|0){case 3:{b=k[D>>2]|0;if(b>>>0<(k[C>>2]|0)>>>0){k[D>>2]=b+1;b=l[b>>0]|0}else b=yM(a)|0;if((b|0)==40)b=1;else{if(!(k[C>>2]|0)){d=A;break a}k[D>>2]=(k[D>>2]|0)+-1;d=A;break a}while(1){e=k[D>>2]|0;if(e>>>0<(k[C>>2]|0)>>>0){k[D>>2]=e+1;e=l[e>>0]|0}else e=yM(a)|0;if(!((e+-48|0)>>>0<10|(e+-65|0)>>>0<26)?!((e|0)==95|(e+-97|0)>>>0<26):0)break;b=b+1|0}if((e|0)==41){d=A;break a}e=(k[C>>2]|0)==0;if(!e)k[D>>2]=(k[D>>2]|0)+-1;if(!g){J=sM()|0;k[J>>2]=22;xM(a,0);d=0.0;break a}if(!b){d=A;break a}while(1){b=b+-1|0;if(!e)k[D>>2]=(k[D>>2]|0)+-1;if(!b){d=A;break a}}}case 0:{do if((e|0)==48){b=k[D>>2]|0;if(b>>>0<(k[C>>2]|0)>>>0){k[D>>2]=b+1;b=l[b>>0]|0}else b=yM(a)|0;if((b|32|0)!=120){if(!(k[C>>2]|0)){b=48;break}k[D>>2]=(k[D>>2]|0)+-1;b=48;break}b=k[D>>2]|0;if(b>>>0<(k[C>>2]|0)>>>0){k[D>>2]=b+1;b=l[b>>0]|0;g=0}else{b=yM(a)|0;g=0}e:while(1){switch(b|0){case 46:{y=74;break e}case 48:break;default:{w=0;h=0;v=0;e=0;m=g;n=0;u=0;j=1.0;g=0;d=0.0;break e}}b=k[D>>2]|0;if(b>>>0<(k[C>>2]|0)>>>0){k[D>>2]=b+1;b=l[b>>0]|0;g=1;continue}else{b=yM(a)|0;g=1;continue}}if((y|0)==74){b=k[D>>2]|0;if(b>>>0<(k[C>>2]|0)>>>0){k[D>>2]=b+1;b=l[b>>0]|0}else b=yM(a)|0;if((b|0)==48){g=0;e=0;do{b=k[D>>2]|0;if(b>>>0<(k[C>>2]|0)>>>0){k[D>>2]=b+1;b=l[b>>0]|0}else b=yM(a)|0;g=CP(g|0,e|0,-1,-1)|0;e=L}while((b|0)==48);w=0;h=0;v=g;m=1;n=1;u=0;j=1.0;g=0;d=0.0}else{w=0;h=0;v=0;e=0;m=g;n=1;u=0;j=1.0;g=0;d=0.0}}while(1){s=b+-48|0;o=b|32;if(s>>>0>=10){t=(b|0)==46;if(!(t|(o+-97|0)>>>0<6)){o=v;s=w;break}if(t)if(!n){t=h;e=w;s=w;n=1;o=u;f=j}else{o=v;s=w;b=46;break}else y=86}else y=86;if((y|0)==86){y=0;b=(b|0)>57?o+-87|0:s;do if(!((w|0)<0|(w|0)==0&h>>>0<8)){if((w|0)<0|(w|0)==0&h>>>0<14){q=j*.0625;o=u;f=q;d=d+q*+(b|0);break}if((u|0)!=0|(b|0)==0){o=u;f=j}else{o=1;f=j;d=d+j*.5}}else{o=u;f=j;g=b+(g<<4)|0}while(0);h=CP(h|0,w|0,1,0)|0;t=v;s=L;m=1}b=k[D>>2]|0;if(b>>>0<(k[C>>2]|0)>>>0){k[D>>2]=b+1;w=s;v=t;b=l[b>>0]|0;u=o;j=f;continue}else{w=s;v=t;b=yM(a)|0;u=o;j=f;continue}}if(!m){b=(k[C>>2]|0)==0;if(!b)k[D>>2]=(k[D>>2]|0)+-1;if(c){if(!b?(x=k[D>>2]|0,k[D>>2]=x+-1,(n|0)!=0):0)k[D>>2]=x+-2}else xM(a,0);d=+(H|0)*0.0;break a}m=(n|0)==0;n=m?h:o;m=m?s:e;if((s|0)<0|(s|0)==0&h>>>0<8){e=s;do{g=g<<4;h=CP(h|0,e|0,1,0)|0;e=L}while((e|0)<0|(e|0)==0&h>>>0<8)}if((b|32|0)==112){e=JO(a,c)|0;b=L;if((e|0)==0&(b|0)==-2147483648){if(!c){xM(a,0);d=0.0;break a}if(!(k[C>>2]|0)){e=0;b=0}else{k[D>>2]=(k[D>>2]|0)+-1;e=0;b=0}}}else if(!(k[C>>2]|0)){e=0;b=0}else{k[D>>2]=(k[D>>2]|0)+-1;e=0;b=0}G=JP(n|0,m|0,2)|0;G=CP(G|0,L|0,-32,-1)|0;b=CP(G|0,L|0,e|0,b|0)|0;e=L;if(!g){d=+(H|0)*0.0;break a}if((e|0)>0|(e|0)==0&b>>>0>(0-I|0)>>>0){J=sM()|0;k[J>>2]=34;d=+(H|0)*1797693134862315708145274.0e284*1797693134862315708145274.0e284;break a}G=I+-106|0;F=((G|0)<0)<<31>>31;if((e|0)<(F|0)|(e|0)==(F|0)&b>>>0<G>>>0){J=sM()|0;k[J>>2]=34;d=+(H|0)*2.2250738585072014e-308*2.2250738585072014e-308;break a}if((g|0)>-1){do{F=!(d>=.5);G=F&1|g<<1;g=G^1;d=d+(F?d:d+-1.0);b=CP(b|0,e|0,-1,-1)|0;e=L}while((G|0)>-1);h=b;j=d}else{h=b;j=d}b=BP(32,0,I|0,((I|0)<0)<<31>>31|0)|0;b=CP(h|0,e|0,b|0,L|0)|0;I=L;if(0>(I|0)|0==(I|0)&J>>>0>b>>>0)if((b|0)<0){b=0;y=127}else y=125;else{b=J;y=125}if((y|0)==125)if((b|0)<53)y=127;else{e=b;f=+(H|0);d=0.0}if((y|0)==127){d=+(H|0);e=b;f=d;d=+HM(+PM(1.0,84-b|0),d)}J=(g&1|0)==0&(j!=0.0&(e|0)<32);d=f*(J?0.0:j)+(d+f*+(((J&1)+g|0)>>>0))-d;if(!(d!=0.0)){J=sM()|0;k[J>>2]=34}d=+QM(d,h);break a}else b=e;while(0);E=I+J|0;F=0-E|0;g=0;f:while(1){switch(b|0){case 46:{y=138;break f}case 48:break;default:{e=0;o=0;n=0;break f}}b=k[D>>2]|0;if(b>>>0<(k[C>>2]|0)>>>0){k[D>>2]=b+1;b=l[b>>0]|0;g=1;continue}else{b=yM(a)|0;g=1;continue}}if((y|0)==138){b=k[D>>2]|0;if(b>>>0<(k[C>>2]|0)>>>0){k[D>>2]=b+1;b=l[b>>0]|0}else b=yM(a)|0;if((b|0)==48){e=0;b=0;while(1){e=CP(e|0,b|0,-1,-1)|0;g=L;b=k[D>>2]|0;if(b>>>0<(k[C>>2]|0)>>>0){k[D>>2]=b+1;b=l[b>>0]|0}else b=yM(a)|0;if((b|0)==48)b=g;else{o=g;g=1;n=1;break}}}else{e=0;o=0;n=1}}k[G>>2]=0;m=b+-48|0;h=(b|0)==46;g:do if(h|m>>>0<10){z=G+496|0;w=0;t=0;u=h;y=o;s=g;x=n;g=0;h=0;n=0;h:while(1){do if(u)if(!x){e=w;o=t;x=1}else{o=y;b=w;m=t;break h}else{u=CP(w|0,t|0,1,0)|0;t=L;v=(b|0)!=48;if((h|0)>=125){if(!v){o=y;w=u;break}k[z>>2]=k[z>>2]|1;o=y;w=u;break}o=G+(h<<2)|0;if(g)m=b+-48+((k[o>>2]|0)*10|0)|0;k[o>>2]=m;g=g+1|0;m=(g|0)==9;o=y;w=u;s=1;g=m?0:g;h=(m&1)+h|0;n=v?u:n}while(0);b=k[D>>2]|0;if(b>>>0<(k[C>>2]|0)>>>0){k[D>>2]=b+1;b=l[b>>0]|0}else b=yM(a)|0;m=b+-48|0;u=(b|0)==46;if(!(u|m>>>0<10)){m=x;y=161;break g}else y=o}s=(s|0)!=0;y=169}else{w=0;t=0;s=g;m=n;g=0;h=0;n=0;y=161}while(0);do if((y|0)==161){z=(m|0)==0;e=z?w:e;o=z?t:o;s=(s|0)!=0;if(!((b|32|0)==101&s))if((b|0)>-1){b=w;m=t;y=169;break}else{b=w;m=t;y=171;break}m=JO(a,c)|0;b=L;if((m|0)==0&(b|0)==-2147483648){if(!c){xM(a,0);d=0.0;break}if(!(k[C>>2]|0)){m=0;b=0}else{k[D>>2]=(k[D>>2]|0)+-1;m=0;b=0}}e=CP(m|0,b|0,e|0,o|0)|0;s=w;o=L;m=t;y=173}while(0);if((y|0)==169)if(k[C>>2]|0){k[D>>2]=(k[D>>2]|0)+-1;if(s){s=b;y=173}else y=172}else y=171;if((y|0)==171)if(s){s=b;y=173}else y=172;do if((y|0)==172){J=sM()|0;k[J>>2]=22;xM(a,0);d=0.0}else if((y|0)==173){b=k[G>>2]|0;if(!b){d=+(H|0)*0.0;break}if(((m|0)<0|(m|0)==0&s>>>0<10)&((e|0)==(s|0)&(o|0)==(m|0))?J>>>0>30|(b>>>J|0)==0:0){d=+(H|0)*+(b>>>0);break}a=(I|0)/-2|0;D=((a|0)<0)<<31>>31;if((o|0)>(D|0)|(o|0)==(D|0)&e>>>0>a>>>0){J=sM()|0;k[J>>2]=34;d=+(H|0)*1797693134862315708145274.0e284*1797693134862315708145274.0e284;break}a=I+-106|0;D=((a|0)<0)<<31>>31;if((o|0)<(D|0)|(o|0)==(D|0)&e>>>0<a>>>0){J=sM()|0;k[J>>2]=34;d=+(H|0)*2.2250738585072014e-308*2.2250738585072014e-308;break}if(g){if((g|0)<9){m=G+(h<<2)|0;b=k[m>>2]|0;do{b=b*10|0;g=g+1|0}while((g|0)!=9);k[m>>2]=b}h=h+1|0}if((n|0)<9?(n|0)<=(e|0)&(e|0)<18:0){if((e|0)==9){d=+(H|0)*+((k[G>>2]|0)>>>0);break}if((e|0)<9){d=+(H|0)*+((k[G>>2]|0)>>>0)/+(k[98220+(8-e<<2)>>2]|0);break}a=J+27+(ha(e,-3)|0)|0;b=k[G>>2]|0;if((a|0)>30|(b>>>a|0)==0){d=+(H|0)*+(b>>>0)*+(k[98220+(e+-10<<2)>>2]|0);break}}b=(e|0)%9|0;if(!b){g=0;b=0}else{s=(e|0)>-1?b:b+9|0;m=k[98220+(8-s<<2)>>2]|0;if(h){n=1e9/(m|0)|0;g=0;b=0;o=0;do{C=G+(o<<2)|0;D=k[C>>2]|0;a=((D>>>0)/(m>>>0)|0)+b|0;k[C>>2]=a;b=ha((D>>>0)%(m>>>0)|0,n)|0;a=(o|0)==(g|0)&(a|0)==0;o=o+1|0;e=a?e+-9|0:e;g=a?o&127:g}while((o|0)!=(h|0));if(b){k[G+(h<<2)>>2]=b;h=h+1|0}}else{g=0;h=0}b=0;e=9-s+e|0}i:while(1){t=(e|0)<18;u=(e|0)==18;v=G+(g<<2)|0;do{if(!t){if(!u)break i;if((k[v>>2]|0)>>>0>=9007199){e=18;break i}}m=0;n=h+127|0;while(1){s=n&127;o=G+(s<<2)|0;n=JP(k[o>>2]|0,0,29)|0;n=CP(n|0,L|0,m|0,0)|0;m=L;if(m>>>0>0|(m|0)==0&n>>>0>1e9){a=QP(n|0,m|0,1e9,0)|0;n=RP(n|0,m|0,1e9,0)|0;m=a}else m=0;k[o>>2]=n;a=(s|0)==(g|0);h=(s|0)!=(h+127&127|0)|a?h:(n|0)==0?s:h;if(a)break;else n=s+-1|0}b=b+-29|0}while((m|0)==0);g=g+127&127;if((g|0)==(h|0)){a=h+127&127;h=G+((h+126&127)<<2)|0;k[h>>2]=k[h>>2]|k[G+(a<<2)>>2];h=a}k[G+(g<<2)>>2]=m;e=e+9|0}j:while(1){w=h+1&127;v=G+((h+127&127)<<2)|0;while(1){t=(e|0)==18;u=(e|0)>27?9:1;s=t^1;while(1){n=g&127;o=(n|0)==(h|0);do if(!o){m=k[G+(n<<2)>>2]|0;if(m>>>0<9007199){y=219;break}if(m>>>0>9007199)break;m=g+1&127;if((m|0)==(h|0)){y=219;break}m=k[G+(m<<2)>>2]|0;if(m>>>0<254740991){y=219;break}if(!(m>>>0>254740991|s)){e=n;break j}}else y=219;while(0);if((y|0)==219?(y=0,t):0){y=220;break j}b=b+u|0;if((g|0)==(h|0))g=h;else break}s=(1<<u)+-1|0;t=1e9>>>u;n=g;m=0;o=g;while(1){D=G+(o<<2)|0;a=k[D>>2]|0;g=(a>>>u)+m|0;k[D>>2]=g;m=ha(a&s,t)|0;g=(o|0)==(n|0)&(g|0)==0;o=o+1&127;e=g?e+-9|0:e;g=g?o:n;if((o|0)==(h|0))break;else n=g}if(!m)continue;if((w|0)!=(g|0))break;k[v>>2]=k[v>>2]|1}k[G+(h<<2)>>2]=m;h=w}if((y|0)==220)if(o){k[G+(w+-1<<2)>>2]=0;e=h;h=w}else e=n;d=+((k[G+(e<<2)>>2]|0)>>>0);e=g+1&127;if((e|0)==(h|0)){h=g+2&127;k[G+(h+-1<<2)>>2]=0}q=+(H|0);f=q*(d*1.0e9+ +((k[G+(e<<2)>>2]|0)>>>0));t=b+53|0;o=t-I|0;s=(o|0)<(J|0);e=s&1;n=s?((o|0)<0?0:o):J;if((n|0)<53){M=+HM(+PM(1.0,105-n|0),f);j=+JM(f,+PM(1.0,53-n|0));p=M;d=j;j=M+(f-j)}else{p=0.0;d=0.0;j=f}m=g+2&127;do if((m|0)==(h|0))f=d;else{m=k[G+(m<<2)>>2]|0;do if(m>>>0>=5e8){if(m>>>0>5e8){d=q*.75+d;break}if((g+3&127|0)==(h|0)){d=q*.5+d;break}else{d=q*.75+d;break}}else{if((m|0)==0?(g+3&127|0)==(h|0):0)break;d=q*.25+d}while(0);if((53-n|0)<=1){f=d;break}if(+JM(d,1.0)!=0.0){f=d;break}f=d+1.0}while(0);d=j+f-p;do if((t&2147483647|0)>(-2-E|0)){if(+W(+d)>=9007199254740992.0){e=s&(n|0)==(o|0)?0:e;b=b+1|0;d=d*.5}if((b+50|0)<=(F|0)?!(f!=0.0&(e|0)!=0):0)break;J=sM()|0;k[J>>2]=34}while(0);d=+QM(d,b)}while(0);break a}default:{if(k[C>>2]|0)k[D>>2]=(k[D>>2]|0)+-1;J=sM()|0;k[J>>2]=22;xM(a,0);d=0.0;break a}}}}while(0);if((y|0)==23){e=(k[C>>2]|0)==0;if(!e)k[D>>2]=(k[D>>2]|0)+-1;if((c|0)!=0&b>>>0>3)do{if(!e)k[D>>2]=(k[D>>2]|0)+-1;b=b+-1|0}while(b>>>0>3)}d=+(H|0)*B}while(0);r=K;return +d}function vM(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,j=0,m=0,n=0,o=0,p=0,q=0,r=0;a:do if(b>>>0>36){e=sM()|0;k[e>>2]=22;e=0;d=0}else{r=a+4|0;q=a+100|0;do{f=k[r>>2]|0;if(f>>>0<(k[q>>2]|0)>>>0){k[r>>2]=f+1;f=l[f>>0]|0}else f=yM(a)|0}while((_L(f)|0)!=0);b:do switch(f|0){case 43:case 45:{g=((f|0)==45)<<31>>31;f=k[r>>2]|0;if(f>>>0<(k[q>>2]|0)>>>0){k[r>>2]=f+1;f=l[f>>0]|0;p=g;break b}else{f=yM(a)|0;p=g;break b}}default:p=0}while(0);g=(b|0)==0;do if((b&-17|0)==0&(f|0)==48){f=k[r>>2]|0;if(f>>>0<(k[q>>2]|0)>>>0){k[r>>2]=f+1;f=l[f>>0]|0}else f=yM(a)|0;if((f|32|0)!=120)if(g){b=8;n=46;break}else{n=32;break}b=k[r>>2]|0;if(b>>>0<(k[q>>2]|0)>>>0){k[r>>2]=b+1;f=l[b>>0]|0}else f=yM(a)|0;if((l[188597+(f+1)>>0]|0)>15){d=(k[q>>2]|0)==0;if(!d)k[r>>2]=(k[r>>2]|0)+-1;if(!c){xM(a,0);e=0;d=0;break a}if(d){e=0;d=0;break a}k[r>>2]=(k[r>>2]|0)+-1;e=0;d=0;break a}else{b=16;n=46}}else{b=g?10:b;if((l[188597+(f+1)>>0]|0)>>>0<b>>>0)n=32;else{if(k[q>>2]|0)k[r>>2]=(k[r>>2]|0)+-1;xM(a,0);e=sM()|0;k[e>>2]=22;e=0;d=0;break a}}while(0);if((n|0)==32)if((b|0)==10){b=f+-48|0;if(b>>>0<10){f=0;while(1){g=(f*10|0)+b|0;b=k[r>>2]|0;if(b>>>0<(k[q>>2]|0)>>>0){k[r>>2]=b+1;f=l[b>>0]|0}else f=yM(a)|0;b=f+-48|0;if(!(b>>>0<10&g>>>0<429496729)){b=g;break}else f=g}g=0}else{b=0;g=0}c=f+-48|0;if(c>>>0<10){while(1){h=PP(b|0,g|0,10,0)|0;j=L;m=((c|0)<0)<<31>>31;o=~m;if(j>>>0>o>>>0|(j|0)==(o|0)&h>>>0>~c>>>0){h=b;break}b=CP(h|0,j|0,c|0,m|0)|0;g=L;f=k[r>>2]|0;if(f>>>0<(k[q>>2]|0)>>>0){k[r>>2]=f+1;f=l[f>>0]|0}else f=yM(a)|0;c=f+-48|0;if(!(c>>>0<10&(g>>>0<429496729|(g|0)==429496729&b>>>0<2576980378))){h=b;break}}if(c>>>0>9){f=h;b=p}else{b=10;n=72}}else{f=b;b=p}}else n=46;c:do if((n|0)==46){if(!(b+-1&b)){n=i[188854+((b*23|0)>>>5&7)>>0]|0;g=i[188597+(f+1)>>0]|0;c=g&255;if(c>>>0<b>>>0){f=0;while(1){h=c|f<<n;f=k[r>>2]|0;if(f>>>0<(k[q>>2]|0)>>>0){k[r>>2]=f+1;f=l[f>>0]|0}else f=yM(a)|0;g=i[188597+(f+1)>>0]|0;c=g&255;if(!(h>>>0<134217728&c>>>0<b>>>0))break;else f=h}c=0}else{c=0;h=0}j=EP(-1,-1,n|0)|0;m=L;if((g&255)>>>0>=b>>>0|(c>>>0>m>>>0|(c|0)==(m|0)&h>>>0>j>>>0)){g=c;n=72;break}else f=c;while(1){h=JP(h|0,f|0,n|0)|0;c=L;h=g&255|h;f=k[r>>2]|0;if(f>>>0<(k[q>>2]|0)>>>0){k[r>>2]=f+1;f=l[f>>0]|0}else f=yM(a)|0;g=i[188597+(f+1)>>0]|0;if((g&255)>>>0>=b>>>0|(c>>>0>m>>>0|(c|0)==(m|0)&h>>>0>j>>>0)){g=c;n=72;break c}else f=c}}g=i[188597+(f+1)>>0]|0;c=g&255;if(c>>>0<b>>>0){f=0;while(1){h=c+(ha(f,b)|0)|0;f=k[r>>2]|0;if(f>>>0<(k[q>>2]|0)>>>0){k[r>>2]=f+1;f=l[f>>0]|0}else f=yM(a)|0;g=i[188597+(f+1)>>0]|0;c=g&255;if(!(h>>>0<119304647&c>>>0<b>>>0))break;else f=h}c=0}else{h=0;c=0}if((g&255)>>>0<b>>>0){n=QP(-1,-1,b|0,0)|0;o=L;m=c;while(1){if(m>>>0>o>>>0|(m|0)==(o|0)&h>>>0>n>>>0){g=m;n=72;break c}c=PP(h|0,m|0,b|0,0)|0;j=L;g=g&255;if(j>>>0>4294967295|(j|0)==-1&c>>>0>~g>>>0){g=m;n=72;break c}h=CP(g|0,0,c|0,j|0)|0;c=L;f=k[r>>2]|0;if(f>>>0<(k[q>>2]|0)>>>0){k[r>>2]=f+1;f=l[f>>0]|0}else f=yM(a)|0;g=i[188597+(f+1)>>0]|0;if((g&255)>>>0>=b>>>0){g=c;n=72;break}else m=c}}else{g=c;n=72}}while(0);if((n|0)==72)if((l[188597+(f+1)>>0]|0)>>>0<b>>>0){do{f=k[r>>2]|0;if(f>>>0<(k[q>>2]|0)>>>0){k[r>>2]=f+1;f=l[f>>0]|0}else f=yM(a)|0}while((l[188597+(f+1)>>0]|0)>>>0<b>>>0);g=sM()|0;k[g>>2]=34;g=e;f=d;b=(d&1|0)==0&0==0?p:0}else{f=h;b=p}if(k[q>>2]|0)k[r>>2]=(k[r>>2]|0)+-1;if(!(g>>>0<e>>>0|(g|0)==(e|0)&f>>>0<d>>>0)){if(!((d&1|0)!=0|0!=0|(b|0)!=0)){r=sM()|0;k[r>>2]=34;d=CP(d|0,e|0,-1,-1)|0;e=L;break}if(g>>>0>e>>>0|(g|0)==(e|0)&f>>>0>d>>>0){r=sM()|0;k[r>>2]=34;break}}d=((b|0)<0)<<31>>31;d=BP(f^b|0,g^d|0,b|0,d|0)|0;e=L}while(0);L=e;return d|0}function wM(a,b){a=a|0;b=b|0;var c=0,d=0;c=0;while(1){i[a+c>>0]=i[188863+c>>0]|0;if((c|0)==14)break;else c=c+1|0}if(!b){i[a+14>>0]=48;i[a+15>>0]=0}else{c=14;d=b;while(1){c=c+1|0;if(d>>>0<10)break;else d=(d>>>0)/10|0}i[a+c>>0]=0;while(1){c=c+-1|0;i[a+c>>0]=(b>>>0)%10|0|48;if(b>>>0<10)break;else b=(b>>>0)/10|0}}return}function xM(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;k[a+104>>2]=b;c=k[a+4>>2]|0;d=k[a+8>>2]|0;e=d-c|0;k[a+108>>2]=e;if((b|0)!=0&(e|0)>(b|0))k[a+100>>2]=c+b;else k[a+100>>2]=d;return}function yM(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;c=a+104|0;f=k[c>>2]|0;if((f|0)!=0?(k[a+108>>2]|0)>=(f|0):0)g=4;else{b=xN(a)|0;if((b|0)>=0){e=k[c>>2]|0;c=a+8|0;if(e){d=k[c>>2]|0;f=k[a+4>>2]|0;c=d;e=e-(k[a+108>>2]|0)+-1|0;if((c-f|0)>(e|0))k[a+100>>2]=f+e;else g=9}else{d=k[c>>2]|0;c=d;g=9}if((g|0)==9)k[a+100>>2]=c;c=k[a+4>>2]|0;if(d){a=a+108|0;k[a>>2]=d+1-c+(k[a>>2]|0)}c=c+-1|0;if((l[c>>0]|0|0)!=(b|0))i[c>>0]=b}else g=4}if((g|0)==4){k[a+100>>2]=0;b=-1}return b|0}function zM(a){a=a|0;var b=0;if(a>>>0>4294963200){b=sM()|0;k[b>>2]=0-a;a=-1}return a|0}function AM(a,b){a=a|0;b=b|0;return 188878}function BM(a,b){a=+a;b=+b;var c=0.0,d=0.0,e=0.0,f=0.0;c=a*a;d=c*c;e=c*.5;f=1.0-e;return +(f+(1.0-f-e+(c*(c*(c*(c*2.480158728947673e-05+-.001388888888887411)+.0416666666666666)+d*d*(c*(2.087572321298175e-09-c*1.1359647557788195e-11)+-2.7557314351390663e-07))-a*b)))}function CM(a,b){a=+a;b=b|0;var c=0,d=0.0,e=0.0,f=0,g=0.0,h=0,i=0.0,j=0,l=0,m=0,n=0,o=0;o=r;r=r+48|0;h=o+16|0;j=o;p[t>>3]=a;c=k[t>>2]|0;f=k[t+4>>2]|0;l=EP(c|0,f|0,63)|0;n=f&2147483647;do if(n>>>0<1074752123)if((f&1048575|0)!=598523){c=(l|0)!=0;if(n>>>0<1073928573)if(c){g=a+1.5707963267341256;i=g+6.077100506506192e-11;p[b>>3]=i;p[b+8>>3]=g-i+6.077100506506192e-11;c=-1;break}else{g=a+-1.5707963267341256;i=g+-6.077100506506192e-11;p[b>>3]=i;p[b+8>>3]=g-i+-6.077100506506192e-11;c=1;break}else if(c){g=a+3.1415926534682512;i=g+1.2154201013012384e-10;p[b>>3]=i;p[b+8>>3]=g-i+1.2154201013012384e-10;c=-2;break}else{g=a+-3.1415926534682512;i=g+-1.2154201013012384e-10;p[b>>3]=i;p[b+8>>3]=g-i+-1.2154201013012384e-10;c=2;break}}else m=21;else{if(n>>>0>=1075594812){if(n>>>0<1094263291){m=21;break}if(n>>>0>2146435071){i=a-a;p[b+8>>3]=i;p[b>>3]=i;c=0;break}k[t>>2]=c;k[t+4>>2]=f&1048575|1096810496;i=+p[t>>3];g=+(~~i|0);p[h>>3]=g;g=(i-g)*16777216.0;i=+(~~g|0);p[h+8>>3]=i;i=(g-i)*16777216.0;p[h+16>>3]=i;if(i==0.0){c=1;while(1)if(+p[h+(c<<3)>>3]==0.0)c=c+-1|0;else break}else c=2;c=DM(h,j,(n>>>20)+-1046|0,c+1|0,1)|0;d=+p[j>>3];a=+p[j+8>>3];if(!l){p[b>>3]=d;p[b+8>>3]=a;break}else{p[b>>3]=-d;p[b+8>>3]=-a;c=0-c|0;break}}if(n>>>0<1075183037){if((n|0)==1074977148){m=21;break}if(!l){g=a+-4.712388980202377;i=g+-1.8231301519518578e-10;p[b>>3]=i;p[b+8>>3]=g-i+-1.8231301519518578e-10;c=3;break}else{g=a+4.712388980202377;i=g+1.8231301519518578e-10;p[b>>3]=i;p[b+8>>3]=g-i+1.8231301519518578e-10;c=-3;break}}else{if((n|0)==1075388923){m=21;break}if(!l){g=a+-6.2831853069365025;i=g+-2.430840202602477e-10;p[b>>3]=i;p[b+8>>3]=g-i+-2.430840202602477e-10;c=4;break}else{g=a+6.2831853069365025;i=g+2.430840202602477e-10;p[b>>3]=i;p[b+8>>3]=g-i+2.430840202602477e-10;c=-4;break}}}while(0);if((m|0)==21){i=a*.6366197723675814+6755399441055744.0+-6755399441055744.0;c=~~i;e=a-i*1.5707963267341256;a=i*6.077100506506192e-11;d=e-a;p[b>>3]=d;p[t>>3]=d;m=EP(k[t>>2]|0,k[t+4>>2]|0,52)|0;f=n>>>20;if((f-(m&2047)|0)>16){a=i*6.077100506303966e-11;g=e-a;a=i*2.0222662487959506e-21-(e-g-a);d=g-a;p[b>>3]=d;p[t>>3]=d;n=EP(k[t>>2]|0,k[t+4>>2]|0,52)|0;if((f-(n&2047)|0)>49){a=i*2.0222662487111665e-21;e=g-a;a=i*8.4784276603689e-32-(g-e-a);d=e-a;p[b>>3]=d}else e=g}p[b+8>>3]=e-d-a}r=o;return c|0}function DM(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0.0,g=0.0,h=0.0,i=0,j=0,l=0,m=0,n=0,o=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0;E=r;r=r+560|0;B=E+480|0;y=E+320|0;D=E+160|0;C=E;A=k[98252+(e<<2)>>2]|0;o=d+-1|0;x=(c+-3|0)/24|0;x=(x|0)<0?0:x;q=(x*24|0)+24|0;i=c-q|0;if((A+o|0)>=0){j=A+d|0;l=0;m=x-o|0;while(1){if((m|0)<0)f=0.0;else f=+(k[98268+(m<<2)>>2]|0);p[y+(l<<3)>>3]=f;l=l+1|0;if((l|0)==(j|0))break;else m=m+1|0}}m=(d|0)<1;n=0;while(1){if(m)f=0.0;else{j=n+o|0;f=0.0;l=0;do{f=f+ +p[a+(l<<3)>>3]*+p[y+(j-l<<3)>>3];l=l+1|0}while((l|0)!=(d|0))}p[C+(n<<3)>>3]=f;if((n|0)<(A|0))n=n+1|0;else break}t=(i|0)>0;u=24-i|0;v=23-i|0;w=(d|0)<1;s=(q|0)==(c|0);j=A;a:while(1){f=+p[C+(j<<3)>>3];n=(j|0)>0;if(n){l=0;m=j;while(1){h=+(~~(f*5.9604644775390625e-08)|0);k[B+(l<<2)>>2]=~~(f-h*16777216.0);c=m;m=m+-1|0;f=h+ +p[C+(m<<3)>>3];if((c|0)<=1)break;else l=l+1|0}}f=+PM(f,i);f=f-+V(+(f*.125))*8.0;m=~~f;f=f-+(m|0);do if(!t)if(!s)if(!(f>=.5)){l=0;break}else{l=2;z=20;break}else{l=k[B+(j+-1<<2)>>2]>>23;z=19;break}else{c=B+(j+-1<<2)|0;l=k[c>>2]|0;z=l>>u;l=l-(z<<u)|0;k[c>>2]=l;l=l>>v;m=z+m|0;z=19}while(0);if((z|0)==19){z=0;if((l|0)>0)z=20}if((z|0)==20){z=0;m=m+1|0;if(n){n=0;c=0;do{o=B+(c<<2)|0;q=k[o>>2]|0;if(!n)if(!q)n=0;else{k[o>>2]=16777216-q;n=1}else k[o>>2]=16777215-q;c=c+1|0}while((c|0)!=(j|0))}else n=0;b:do if(t)switch(i|0){case 1:{c=B+(j+-1<<2)|0;k[c>>2]=k[c>>2]&8388607;break b}case 2:{c=B+(j+-1<<2)|0;k[c>>2]=k[c>>2]&4194303;break b}default:break b}while(0);if((l|0)==2){f=1.0-f;if(!n)l=2;else{l=2;f=f-+PM(1.0,i)}}}if(!(f==0.0)){z=44;break}if((j|0)>(A|0)){o=j;n=0;do{o=o+-1|0;n=k[B+(o<<2)>>2]|n}while((o|0)>(A|0));if(n){z=37;break}else l=1}else l=1;while(1)if(!(k[B+(A-l<<2)>>2]|0))l=l+1|0;else break;n=l+j|0;if((l|0)<=0){j=n;continue}while(1){m=j+1|0;j=j+d|0;p[y+(j<<3)>>3]=+(k[98268+(m+x<<2)>>2]|0);if(w)f=0.0;else{f=0.0;l=0;do{f=f+ +p[a+(l<<3)>>3]*+p[y+(j-l<<3)>>3];l=l+1|0}while((l|0)!=(d|0))}p[C+(m<<3)>>3]=f;if((m|0)<(n|0))j=m;else{j=n;continue a}}}do if((z|0)==37){do{i=i+-24|0;j=j+-1|0}while((k[B+(j<<2)>>2]|0)==0);t=j}else if((z|0)==44){f=+PM(f,0-i|0);if(!(f>=16777216.0)){k[B+(j<<2)>>2]=~~f;t=j;break}else{z=~~(f*5.9604644775390625e-08);k[B+(j<<2)>>2]=~~(f-+(z|0)*16777216.0);t=j+1|0;k[B+(t<<2)>>2]=z;i=i+24|0;break}}while(0);s=(t|0)>-1;if(s){f=+PM(1.0,i);i=t;while(1){p[C+(i<<3)>>3]=f*+(k[B+(i<<2)>>2]|0);if((i|0)>0){f=f*5.9604644775390625e-08;i=i+-1|0}else break}if(s){n=~A;q=t;c=-1;while(1){i=0-(c>>>0>n>>>0?c:n)|0;o=t-q|0;f=0.0;j=0;do{f=f+ +p[43416+(j<<3)>>3]*+p[C+(j+q<<3)>>3];j=j+1|0}while((j|0)!=(i|0));p[D+(o<<3)>>3]=f;if((q|0)>0){q=q+-1|0;c=c+-1|0}else break}}}c:do switch(e|0){case 0:{if(s){f=0.0;i=t;while(1){f=f+ +p[D+(i<<3)>>3];if((i|0)>0)i=i+-1|0;else break}}else f=0.0;p[b>>3]=(l|0)==0?f:-f;break}case 2:case 1:{if(s){f=0.0;i=t;while(1){f=f+ +p[D+(i<<3)>>3];if((i|0)>0)i=i+-1|0;else break}}else f=0.0;j=(l|0)==0;p[b>>3]=j?f:-f;f=+p[D>>3]-f;if((t|0)>=1){i=1;while(1){f=f+ +p[D+(i<<3)>>3];if((i|0)==(t|0))break;else i=i+1|0}}p[b+8>>3]=j?f:-f;break}case 3:{if((t|0)>0){f=+p[D+(t<<3)>>3];i=t;do{C=i;i=i+-1|0;e=D+(i<<3)|0;h=+p[e>>3];g=f;f=h+f;p[D+(C<<3)>>3]=g+(h-f);p[e>>3]=f}while((C|0)>1);i=(t|0)>1;if(i){f=+p[D+(t<<3)>>3];j=t;do{e=j;j=j+-1|0;C=D+(j<<3)|0;h=+p[C>>3];g=f;f=h+f;p[D+(e<<3)>>3]=g+(h-f);p[C>>3]=f}while((j|0)>1);if(i){f=0.0;i=t;do{f=f+ +p[D+(i<<3)>>3];i=i+-1|0}while((i|0)>1)}else f=0.0}else f=0.0}else f=0.0;h=+p[D>>3];g=+p[D+8>>3];if(!l){p[b>>3]=h;p[b+8>>3]=g;p[b+16>>3]=f;break c}else{p[b>>3]=-h;p[b+8>>3]=-g;p[b+16>>3]=-f;break c}}default:{}}while(0);r=E;return m&7|0}function EM(a,b,c){a=+a;b=+b;c=c|0;var d=0.0,e=0.0,f=0.0;d=a*a;e=d*(d*d)*(d*1.58969099521155e-10+-2.5050760253406863e-08)+(d*(d*2.7557313707070068e-06+-1.984126982985795e-04)+.00833333333332249);f=d*a;if(!c)d=f*(d*e+-.16666666666666632)+a;else d=a-(f*.16666666666666632+(d*(b*.5-f*e)-b));return +d}function FM(a){a=+a;var b=0,c=0,d=0.0,e=0.0;p[t>>3]=a;b=k[t+4>>2]|0;c=b&2147483647;do if(c>>>0>2146435071)a=a+a;else{if(c>>>0<1048576){p[t>>3]=a*18014398509481984.0;b=k[t+4>>2]|0;c=b&2147483647;if(!c)break;c=((c>>>0)/3|0)+696219795|0}else c=((c>>>0)/3|0)+715094163|0;k[t>>2]=0;k[t+4>>2]=c|b&-2147483648;e=+p[t>>3];d=e/a*(e*e);p[t>>3]=e*(d*(d*d)*(d*.14599619288661245+-.758397934778766)+(d*(d*1.6214297201053545+-1.8849797954337717)+1.87595182427177));b=CP(k[t>>2]|0,k[t+4>>2]|0,-2147483648,0)|0;c=L;k[t>>2]=b&-1073741824;k[t+4>>2]=c;d=+p[t>>3];a=a/(d*d);a=d+(a-d)/(a+(d+d))*d}while(0);return +a}function GM(a,b){a=+a;b=+b;var c=0,d=0;p[t>>3]=a;d=k[t>>2]|0;c=k[t+4>>2]|0;p[t>>3]=b;c=k[t+4>>2]&-2147483648|c&2147483647;k[t>>2]=d;k[t+4>>2]=c;return +(+p[t>>3])}function HM(a,b){a=+a;b=+b;return +(+GM(a,b))}function IM(a,b){a=+a;b=+b;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0;p[t>>3]=a;c=k[t>>2]|0;j=k[t+4>>2]|0;p[t>>3]=b;l=k[t>>2]|0;m=k[t+4>>2]|0;d=EP(c|0,j|0,52)|0;d=d&2047;h=EP(l|0,m|0,52)|0;h=h&2047;n=j&-2147483648;g=JP(l|0,m|0,1)|0;i=L;a:do if(!((g|0)==0&(i|0)==0)?(f=m&2147483647,!(f>>>0>2146435072|(f|0)==2146435072&l>>>0>0|(d|0)==2047)):0){e=JP(c|0,j|0,1)|0;f=L;if(!(f>>>0>i>>>0|(f|0)==(i|0)&e>>>0>g>>>0))return +((e|0)==(g|0)&(f|0)==(i|0)?a*0.0:a);if(!d){d=JP(c|0,j|0,12)|0;e=L;if((e|0)>-1|(e|0)==-1&d>>>0>4294967295){f=d;d=0;do{d=d+-1|0;f=JP(f|0,e|0,1)|0;e=L}while((e|0)>-1|(e|0)==-1&f>>>0>4294967295)}else d=0;c=JP(c|0,j|0,1-d|0)|0;e=L}else e=j&1048575|1048576;if(!h){f=JP(l|0,m|0,12)|0;g=L;if((g|0)>-1|(g|0)==-1&f>>>0>4294967295){h=0;do{h=h+-1|0;f=JP(f|0,g|0,1)|0;g=L}while((g|0)>-1|(g|0)==-1&f>>>0>4294967295)}else h=0;l=JP(l|0,m|0,1-h|0)|0;j=L}else j=m&1048575|1048576;i=BP(c|0,e|0,l|0,j|0)|0;g=L;f=(g|0)>-1|(g|0)==-1&i>>>0>4294967295;b:do if((d|0)>(h|0)){while(1){if(f)if((c|0)==(l|0)&(e|0)==(j|0))break;else{c=i;e=g}c=JP(c|0,e|0,1)|0;e=L;d=d+-1|0;i=BP(c|0,e|0,l|0,j|0)|0;g=L;f=(g|0)>-1|(g|0)==-1&i>>>0>4294967295;if((d|0)<=(h|0))break b}b=a*0.0;break a}while(0);if(f)if((c|0)==(l|0)&(e|0)==(j|0)){b=a*0.0;break}else{e=g;c=i}if(e>>>0<1048576|(e|0)==1048576&c>>>0<0)do{c=JP(c|0,e|0,1)|0;e=L;d=d+-1|0}while(e>>>0<1048576|(e|0)==1048576&c>>>0<0);if((d|0)>0){m=CP(c|0,e|0,0,-1048576)|0;c=L;d=JP(d|0,0,52)|0;c=c|L;d=m|d}else{d=EP(c|0,e|0,1-d|0)|0;c=L}k[t>>2]=d;k[t+4>>2]=c|n;b=+p[t>>3]}else o=3;while(0);if((o|0)==3){b=a*b;b=b/b}return +b}function JM(a,b){a=+a;b=+b;return +(+IM(a,b))}function KM(a,b){a=+a;b=b|0;var c=0,d=0,e=0;p[t>>3]=a;c=k[t>>2]|0;d=k[t+4>>2]|0;e=EP(c|0,d|0,52)|0;e=e&2047;switch(e|0){case 0:{if(a!=0.0){a=+KM(a*18446744073709551616.0,b);c=(k[b>>2]|0)+-64|0}else c=0;k[b>>2]=c;break}case 2047:break;default:{k[b>>2]=e+-1022;k[t>>2]=c;k[t+4>>2]=d&-2146435073|1071644672;a=+p[t>>3]}}return +a}function LM(a,b){a=+a;b=b|0;return +(+KM(a,b))}function MM(a,b){a=+a;b=+b;var c=0.0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0.0,m=0.0,n=0.0,o=0.0;p[t>>3]=a;j=k[t>>2]|0;f=k[t+4>>2]|0;p[t>>3]=b;d=k[t>>2]|0;f=f&2147483647;e=k[t+4>>2]&2147483647;g=f>>>0<e>>>0|(f|0)==(e|0)&j>>>0<d>>>0;i=g?d:j;h=g?e:f;d=g?j:d;e=g?f:e;f=EP(i|0,h|0,52)|0;g=EP(d|0,e|0,52)|0;k[t>>2]=i;k[t+4>>2]=h;a=+p[t>>3];k[t>>2]=d;k[t+4>>2]=e;b=+p[t>>3];do if((g|0)!=2047){if(!((d|0)==0&(e|0)==0|(f|0)==2047)){if((f-g|0)>64){a=a+b;break}if(f>>>0<=1533)if(g>>>0<573){a=a*5260135901548373507240989.0e186;b=b*5260135901548373507240989.0e186;c=1.90109156629516e-211}else c=1.0;else{a=a*1.90109156629516e-211;b=b*1.90109156629516e-211;c=5260135901548373507240989.0e186}m=a*134217729.0;m=m+(a-m);l=a-m;a=a*a;o=b*134217729.0;o=o+(b-o);n=b-o;b=b*b;a=c*+X(+(a+(b+(n*n+(o*o-b+o*2.0*n)+(l*l+(m*m-a+m*2.0*l))))))}}else a=b;while(0);return +a}function NM(a){a=+a;var b=0,c=0,d=0,e=0,f=0.0,g=0.0,h=0.0,i=0.0,j=0.0;p[t>>3]=a;c=k[t>>2]|0;b=k[t+4>>2]|0;d=(b|0)<0;do if(d|b>>>0<1048576){if((c|0)==0&(b&2147483647|0)==0){a=-1.0/(a*a);break}if(d){a=(a-a)/0.0;break}else{p[t>>3]=a*18014398509481984.0;b=k[t+4>>2]|0;d=k[t>>2]|0;c=-1077;e=9;break}}else if(b>>>0<=2146435071)if((c|0)==0&0==0&(b|0)==1072693248)a=0.0;else{d=c;c=-1023;e=9}while(0);if((e|0)==9){e=b+614242|0;k[t>>2]=d;k[t+4>>2]=(e&1048575)+1072079006;j=+p[t>>3]+-1.0;a=j*(j*.5);h=j/(j+2.0);i=h*h;g=i*i;p[t>>3]=j-a;d=k[t+4>>2]|0;k[t>>2]=0;k[t+4>>2]=d;f=+p[t>>3];a=h*(a+(g*(g*(g*.15313837699209373+.22222198432149784)+.3999999999940942)+i*(g*(g*(g*.14798198605116586+.1818357216161805)+.2857142874366239)+.6666666666666735)))+(j-f-a);j=f*.4342944818781689;g=+(c+(e>>>20)|0);i=g*.30102999566361177;h=i+j;a=h+(j+(i-h)+(a*.4342944818781689+(g*3.694239077158931e-13+(f+a)*2.5082946711645275e-11)))}return +a}function OM(a){a=+a;var b=0,c=0,d=0,e=0,f=0.0,g=0.0,h=0.0,i=0.0,j=0.0;p[t>>3]=a;c=k[t>>2]|0;b=k[t+4>>2]|0;d=(b|0)<0;do if(d|b>>>0<1048576){if((c|0)==0&(b&2147483647|0)==0){a=-1.0/(a*a);break}if(d){a=(a-a)/0.0;break}else{p[t>>3]=a*18014398509481984.0;b=k[t+4>>2]|0;d=k[t>>2]|0;c=-1077;e=9;break}}else if(b>>>0<=2146435071)if((c|0)==0&0==0&(b|0)==1072693248)a=0.0;else{d=c;c=-1023;e=9}while(0);if((e|0)==9){e=b+614242|0;k[t>>2]=d;k[t+4>>2]=(e&1048575)+1072079006;i=+p[t>>3]+-1.0;a=i*(i*.5);j=i/(i+2.0);g=j*j;h=g*g;p[t>>3]=i-a;d=k[t+4>>2]|0;k[t>>2]=0;k[t+4>>2]=d;f=+p[t>>3];a=j*(a+(h*(h*(h*.15313837699209373+.22222198432149784)+.3999999999940942)+g*(h*(h*(h*.14798198605116586+.1818357216161805)+.2857142874366239)+.6666666666666735)))+(i-f-a);i=f*1.4426950407214463;h=+(c+(e>>>20)|0);g=h+i;a=g+(i+(h-g)+(a*1.4426950407214463+(f+a)*1.6751713164886512e-10))}return +a}function PM(a,b){a=+a;b=b|0;var c=0;if((b|0)>1023){a=a*8988465674311579538646525.0e283;c=b+-1023|0;if((c|0)>1023){c=b+-2046|0;c=(c|0)>1023?1023:c;a=a*8988465674311579538646525.0e283}}else if((b|0)<-1022){a=a*2.2250738585072014e-308;c=b+1022|0;if((c|0)<-1022){c=b+2044|0;c=(c|0)<-1022?-1022:c;a=a*2.2250738585072014e-308}}else c=b;c=JP(c+1023|0,0,52)|0;b=L;k[t>>2]=c;k[t+4>>2]=b;return +(a*+p[t>>3])}function QM(a,b){a=+a;b=b|0;return +(+PM(a,b))}function RM(a,b,c){a=+a;b=b|0;c=c|0;var d=0.0,e=0,f=0,g=0,h=0;g=r;r=r+16|0;f=g;p[t>>3]=a;e=k[t+4>>2]&2147483647;a:do if(e>>>0<1072243196)if(e>>>0<1044816030){p[b>>3]=a;p[c>>3]=1.0;break}else{d=+EM(a,0.0,0);p[b>>3]=d;d=+BM(a,0.0);p[c>>3]=d;break}else{if(e>>>0>2146435071){d=a-a;p[c>>3]=d;p[b>>3]=d;break}e=CM(a,f)|0;h=f+8|0;d=+EM(+p[f>>3],+p[h>>3],1);a=+BM(+p[f>>3],+p[h>>3]);switch(e&3|0){case 0:{p[b>>3]=d;p[c>>3]=a;break a}case 1:{p[b>>3]=a;p[c>>3]=-d;break a}case 2:{p[b>>3]=-d;p[c>>3]=-a;break a}default:{p[b>>3]=-a;p[c>>3]=d;break a}}}while(0);r=g;return}function SM(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0;i=r;r=r+32|0;g=i;do if((f&4095|0)==0&(((f|0)<0)<<31>>31&-4096|0)==0){if(b>>>0>2147483646){e=sM()|0;k[e>>2]=12;e=-1;break}h=(d&16|0)!=0;if(h)hP(-1);k[g>>2]=a;k[g+4>>2]=b;k[g+8>>2]=c;k[g+12>>2]=d;k[g+16>>2]=e;k[g+20>>2]=f>>12;e=zM(db(192,g|0)|0)|0;if(h)iP()}else{e=sM()|0;k[e>>2]=22;e=-1}while(0);r=i;return e|0}function TM(a,b){a=a|0;b=b|0;var c=0,d=0;c=r;r=r+16|0;d=c;hP(-1);k[d>>2]=a;k[d+4>>2]=b;a=zM(jb(91,d|0)|0)|0;iP();r=c;return a|0}function UM(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,l=0;j=r;r=r+16|0;e=j;g=(d|0)==0?98532:d;d=k[g>>2]|0;a:do if(!b)if(!d)d=0;else h=15;else{f=(a|0)==0?e:a;if(!c)d=-2;else{if(!d){d=i[b>>0]|0;e=d&255;if(d<<24>>24>-1){k[f>>2]=e;d=d<<24>>24!=0&1;break}d=e+-194|0;if(d>>>0>50){h=15;break}d=k[97908+(d<<2)>>2]|0;e=c+-1|0;if(e){b=b+1|0;h=9}}else{e=c;h=9}b:do if((h|0)==9){a=i[b>>0]|0;l=(a&255)>>>3;if((l+-16|l+(d>>26))>>>0>7){h=15;break a}while(1){b=b+1|0;d=(a&255)+-128|d<<6;e=e+-1|0;if((d|0)>=0)break;if(!e)break b;a=i[b>>0]|0;if((a&-64)<<24>>24!=-128){h=15;break a}}k[g>>2]=0;k[f>>2]=d;d=c-e|0;break a}while(0);k[g>>2]=d;d=-2}}while(0);if((h|0)==15){k[g>>2]=0;d=sM()|0;k[d>>2]=84;d=-1}r=j;return d|0}function VM(a){a=a|0;if(!a)a=1;else a=(k[a>>2]|0)==0;return a&1|0}function WM(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;g=r;r=r+16|0;d=g;a:do if(!b)d=0;else{do if(c){f=(a|0)==0?d:a;d=i[b>>0]|0;a=d&255;if(d<<24>>24>-1){k[f>>2]=a;d=d<<24>>24!=0&1;break a}d=a+-194|0;if(d>>>0<=50){a=b+1|0;e=k[97908+(d<<2)>>2]|0;if(c>>>0<4?(e&-2147483648>>>((c*6|0)+-6|0)|0)!=0:0)break;d=l[a>>0]|0;c=d>>>3;if((c+-16|c+(e>>26))>>>0<=7){d=d+-128|e<<6;if((d|0)>=0){k[f>>2]=d;d=2;break a}a=l[b+2>>0]|0;if((a&192|0)==128){a=a+-128|d<<6;if((a|0)>=0){k[f>>2]=a;d=3;break a}d=l[b+3>>0]|0;if((d&192|0)==128){k[f>>2]=d+-128|a<<6;d=4;break a}}}}}while(0);d=sM()|0;k[d>>2]=84;d=-1}while(0);r=g;return d|0}function XM(a,b,c){a=a|0;b=b|0;c=c|0;do if(a){if(b>>>0<128){i[a>>0]=b;a=1;break}if(b>>>0<2048){i[a>>0]=b>>>6|192;i[a+1>>0]=b&63|128;a=2;break}if(b>>>0<55296|(b&-8192|0)==57344){i[a>>0]=b>>>12|224;i[a+1>>0]=b>>>6&63|128;i[a+2>>0]=b&63|128;a=3;break}if((b+-65536|0)>>>0<1048576){i[a>>0]=b>>>18|240;i[a+1>>0]=b>>>12&63|128;i[a+2>>0]=b>>>6&63|128;i[a+3>>0]=b&63|128;a=4;break}else{a=sM()|0;k[a>>2]=84;a=-1;break}}else a=1;while(0);return a|0}function YM(a,b){a=a|0;b=b|0;if(!a)a=0;else a=XM(a,b,0)|0;return a|0}function ZM(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;e=a+2|0;d=a+4|0;c=PP((m[b+2>>1]|0)<<16|(m[b>>1]|0)|0,m[b+4>>1]|0|0,(m[e>>1]|0)<<16|(m[a>>1]|0)|0,m[d>>1]|0|0)|0;b=CP(c|0,L|0,m[b+6>>1]|0|0,0)|0;c=L;j[a>>1]=b;a=EP(b|0,c|0,16)|0;j[e>>1]=a;j[d>>1]=c;L=c&65535;return b|0}function _M(){var a=0,b=0;b=ZM(103160,103166)|0;b=JP(b|0,L|0,4)|0;a=L|1072693248;k[t>>2]=b;k[t+4>>2]=a;return +(+p[t>>3]+-1.0)}function $M(a){a=a|0;var b=0;b=43480;k[b>>2]=a+-1;k[b+4>>2]=0;return}function aN(){var a=0,b=0,c=0;b=43480;b=PP(k[b>>2]|0,k[b+4>>2]|0,1284865837,1481765933)|0;b=CP(b|0,L|0,1,0)|0;a=L;c=43480;k[c>>2]=b;k[c+4>>2]=a;a=EP(b|0,a|0,33)|0;return a|0}function bN(a){a=a|0;j[51587]=j[51580]|0;j[51588]=j[51581]|0;j[51589]=j[51582]|0;j[51580]=j[a>>1]|0;j[51581]=j[a+2>>1]|0;j[51582]=j[a+4>>1]|0;return 103174}function cN(a){a=a|0;var b=0,c=0;b=r;r=r+16|0;c=b;j[c>>1]=13070;j[c+2>>1]=a;j[c+4>>1]=a>>>16;bN(c)|0;r=b;return}function dN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0;J=r;r=r+80|0;B=J+68|0;A=J+64|0;C=J+60|0;z=J+56|0;w=J+52|0;u=J+48|0;v=J+44|0;h=J;G=uP(20)|0;a:do if(!G)b=12;else{I=uP(2048)|0;H=G+16|0;k[H>>2]=I;if(!I){vP(G);b=12;break}k[G>>2]=512;k[G+4>>2]=10240;k[G+8>>2]=128;y=G+12|0;k[y>>2]=0;I=gN(0,0)|0;if(!I){vP(k[H>>2]|0);vP(G);b=12;break}d=h;e=d+44|0;do{k[d>>2]=0;d=d+4|0}while((d|0)<(e|0));k[h>>2]=I;k[h+4>>2]=G;k[h+12>>2]=b;k[h+36>>2]=c;d=h+28|0;k[d>>2]=-1;b=KO(h)|0;b:do if(!b){g=h+20|0;f=k[g>>2]|0;b=f+-1|0;k[a>>2]=b;x=k[h+8>>2]|0;e=k[d>>2]|0;if((e|0)>-1?(k[h+32>>2]|0)!=0:0){f=0;b=2;e=0;d=0;break}if((e|0)<=(b|0)){d=wP(1,68)|0;if(d){E=e>>>31;k[d+60>>2]=E^1;k[d+64>>2]=k[h+32>>2];k[d+28>>2]=f;if((c&8|0)==0|(E|0)!=1){b=LO(0,G,x,d)|0;if(b){f=0;e=0;break}f=k[d+40>>2]|0;if((f|0)>0){b=(f<<2)+4|0;e=uP(b)|0;if(!e){f=0;b=12;e=0;break}k[d+32>>2]=e;IP(e|0,-1,b|0)|0}else e=0;E=wP(f<<1|1,4)|0;k[d+36>>2]=E;if(!E){f=0;b=12;e=0;break}b=wP(k[g>>2]|0,12)|0;if(!b){f=0;b=12;e=0;break}k[d+16>>2]=b;b=LO(I,G,x,d)|0;if(b){f=0;e=0;break}}else e=0;E=h+24|0;t=k[y>>2]|0;k[C>>2]=0;k[z>>2]=0;k[A>>2]=x;k[B>>2]=k[A>>2];b=MO(G,B)|0;c:do if(!b){k[A>>2]=0;k[B>>2]=k[A>>2];b=MO(G,B)|0;if(!b){b=k[y>>2]|0;d:do if((b|0)>(t|0)){g=0;s=0;h=0;while(1){p=b+-1|0;k[y>>2]=p;f=k[H>>2]|0;p=k[f+(p<<2)>>2]|0;q=b+-2|0;k[y>>2]=q;q=k[f+(q<<2)>>2]|0;e:do switch(p|0){case 0:{switch(k[q>>2]|0){case 0:{b=k[q+4>>2]|0;q=k[b>>2]|0;if(!((q|0)>-1|(q|0)==-4)){f=s;break e}q=b+8|0;b=(k[q>>2]|0)+g|0;k[q>>2]=b;if((b|0)<=(k[z>>2]|0)){f=s;break e}k[z>>2]=b;f=s;break e}case 3:{f=k[q+4>>2]|0;k[A>>2]=k[f+4>>2];k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break d;k[A>>2]=0;k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break d;k[A>>2]=k[f>>2];k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break d;k[A>>2]=0;k[B>>2]=k[A>>2];b=MO(G,B)|0;break}case 1:{f=k[q+4>>2]|0;k[A>>2]=k[f+4>>2];k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break d;k[A>>2]=0;k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break d;k[A>>2]=k[f>>2];k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break d;k[A>>2]=0;k[B>>2]=k[A>>2];b=MO(G,B)|0;break}case 2:{f=k[q+4>>2]|0;k[A>>2]=g;k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break d;k[A>>2]=q;k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break d;k[A>>2]=1;k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break d;k[A>>2]=k[f>>2];k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break d;k[A>>2]=0;k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break d;if((k[f+4>>2]|0)<=1?(k[f+8>>2]|0)<=1:0)b=g;else{k[C>>2]=0;b=0}g=b;f=s+1|0;break e}default:{f=s;break e}}if(!b)f=s;else break d;break}case 1:{o=q+4|0;m=k[o>>2]|0;p=b+-3|0;k[y>>2]=p;p=k[f+(p<<2)>>2]|0;k[C>>2]=p;j=m+4|0;b=k[j>>2]|0;if((b|0)<=1)if((k[m+8>>2]|0)>1){k[w>>2]=0;if((b|0)>0){l=m;D=50}else{l=m;g=p;n=0;D=56}}else g=p;else{k[w>>2]=0;l=m;D=50}f:do if((D|0)==50){D=0;b=NO(I,G,k[l>>2]|0,(b|0)>1?1:2,C,e,u,z)|0;if(!b){i=1;g=p;f=0}else break c;while(1){b=k[u>>2]|0;if(!f)f=b;else f=OO(I,f,b)|0;if(!f){b=12;break c}b=k[j>>2]|0;if((i|0)>=(b|0)){n=f;D=56;break f}g=k[C>>2]|0;i=i+1|0;b=NO(I,G,k[l>>2]|0,(i|0)<(b|0)?1:2,C,e,u,z)|0;if(b)break c}}while(0);if((D|0)==56){D=0;j=m+8|0;f=k[j>>2]|0;do if((f|0)==-1){g=k[C>>2]|0;b=NO(I,G,k[l>>2]|0,0,C,0,w,z)|0;if(b)break c;b=PO(I,k[w>>2]|0,0,-1,0)|0;k[w>>2]=b;if(!b){b=12;break c}}else{if((b|0)<(f|0)){f=0;i=b}else{b=0;break}while(1){g=k[C>>2]|0;b=NO(I,G,k[l>>2]|0,0,C,0,v,z)|0;if(b)break c;if(!f){b=k[v>>2]|0;k[w>>2]=b}else{b=OO(I,k[v>>2]|0,f)|0;k[w>>2]=b}if(!b){b=12;break c}f=QO(I,0,20)|0;if(!f){b=12;break c}m=k[f+4>>2]|0;k[m>>2]=-1;k[m+4>>2]=-1;k[m+8>>2]=-1;b=RO(I,f,b)|0;k[w>>2]=b;i=i+1|0;if(!b){b=12;break c}if((i|0)>=(k[j>>2]|0))break;else f=b}}while(0);k[C>>2]=g;do if(!n)D=71;else{if(!b){b=n;break}b=OO(I,n,b)|0;D=71}while(0);if((D|0)==71){D=0;if(!b){b=12;break c}}k[o>>2]=k[b+4>>2];k[q>>2]=k[b>>2]}f=s+-1|0;b=g-p+h|0;if(!f){k[C>>2]=b;g=b;f=0;h=b}else h=b;break}default:f=s}while(0);b=k[y>>2]|0;if((b|0)<=(t|0)){b=0;break d}else s=f}}else{h=0;b=0}while(0);w=(k[E>>2]|0)+h|0;v=k[z>>2]|0;k[E>>2]=(v|0)>(w|0)?v:w}}while(0);if(!b){b=k[E>>2]|0;k[E>>2]=b+1;e=QO(I,0,20)|0;if((e|0)!=0?(F=k[e+4>>2]|0,k[F>>2]=0,k[F+4>>2]=0,k[F+8>>2]=b,F=OO(I,x,e)|0,(F|0)!=0):0){j=k[y>>2]|0;k[A>>2]=F;k[B>>2]=k[A>>2];b=MO(G,B)|0;g:do if(!b){k[A>>2]=0;k[B>>2]=k[A>>2];b=MO(G,B)|0;if(!b){b=k[y>>2]|0;h:do if((b|0)>(j|0)){i:while(1){x=b+-1|0;k[y>>2]=x;w=k[H>>2]|0;x=k[w+(x<<2)>>2]|0;i=b+-2|0;k[y>>2]=i;i=k[w+(i<<2)>>2]|0;j:do switch(x|0){case 0:switch(k[i>>2]|0){case 0:{g=k[i+4>>2]|0;f=k[g>>2]|0;if((f|0)==-4){k[i+8>>2]=0;b=g+8|0;x=SO(I,k[b>>2]|0,0,1114111,0,0,-1)|0;k[i+24>>2]=x;if(!x){b=12;break g}x=SO(I,k[b>>2]|0,0,1114111,0,0,k[g+4>>2]|0)|0;k[i+28>>2]=x;if(!x){b=12;break g}else break j}b=i+8|0;if((f|0)<0){k[b>>2]=1;x=TO(I)|0;k[i+24>>2]=x;if(!x){b=12;break g}x=TO(I)|0;k[i+28>>2]=x;if(!x){b=12;break g}else break j}else{k[b>>2]=0;b=g+8|0;e=g+4|0;x=SO(I,k[b>>2]|0,f,k[e>>2]|0,0,0,-1)|0;k[i+24>>2]=x;if(!x){b=12;break g}x=SO(I,k[b>>2]|0,k[g>>2]|0,k[e>>2]|0,k[g+12>>2]|0,k[g+16>>2]|0,-1)|0;k[i+28>>2]=x;if(!x){b=12;break g}else break j}}case 3:{k[A>>2]=i;k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break g;k[A>>2]=1;k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break g;e=i+4|0;k[A>>2]=k[(k[e>>2]|0)+4>>2];k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break g;k[A>>2]=0;k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break g;k[A>>2]=k[k[e>>2]>>2];k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break g;k[A>>2]=0;k[B>>2]=k[A>>2];b=MO(G,B)|0;if(!b)break j;else break g}case 1:{k[A>>2]=i;k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break g;k[A>>2]=2;k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break g;e=i+4|0;k[A>>2]=k[(k[e>>2]|0)+4>>2];k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break g;k[A>>2]=0;k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break g;k[A>>2]=k[k[e>>2]>>2];k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break g;k[A>>2]=0;k[B>>2]=k[A>>2];b=MO(G,B)|0;if(!b)break j;else break g}case 2:{k[A>>2]=i;k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break g;k[A>>2]=3;k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break g;k[A>>2]=k[k[i+4>>2]>>2];k[B>>2]=k[A>>2];b=MO(G,B)|0;if(b)break g;k[A>>2]=0;k[B>>2]=k[A>>2];b=MO(G,B)|0;if(!b)break j;else break g}default:break j}case 1:{b=k[i+4>>2]|0;e=k[b>>2]|0;f=b+4|0;g=k[f>>2]|0;if(!(k[e+8>>2]|0))h=(k[g+8>>2]|0)!=0;else h=1;k[i+8>>2]=h&1;x=UO(I,k[e+24>>2]|0,k[g+24>>2]|0,0,0)|0;k[i+24>>2]=x;if(!x){b=12;break g}x=UO(I,k[(k[b>>2]|0)+28>>2]|0,k[(k[f>>2]|0)+28>>2]|0,0,0)|0;k[i+28>>2]=x;if(!x){b=12;break g}break}case 3:{x=k[i+4>>2]|0;b=k[x>>2]|0;do if(!(k[x+4>>2]|0))D=116;else{if(k[b+8>>2]|0){D=116;break}k[i+8>>2]=0}while(0);if((D|0)==116){D=0;k[i+8>>2]=1}k[i+24>>2]=k[b+24>>2];k[i+28>>2]=k[b+28>>2];break}case 2:{g=k[i+4>>2]|0;b=k[g>>2]|0;e=b+8|0;if(!(k[e>>2]|0))f=0;else f=(k[(k[g+4>>2]|0)+8>>2]|0)!=0;k[i+8>>2]=f&1;if(k[e>>2]|0){b=VO(G,b,0,0,C)|0;if(b)break g;e=uP((k[C>>2]<<2)+4|0)|0;if(!e){b=12;break g}k[e>>2]=-1;k[z>>2]=0;b=VO(G,k[g>>2]|0,e,z,0)|0;if(b){D=125;break i}b=g+4|0;w=UO(I,k[(k[b>>2]|0)+24>>2]|0,k[(k[g>>2]|0)+24>>2]|0,e,k[z>>2]|0)|0;x=i+24|0;k[x>>2]=w;vP(e);if(!(k[x>>2]|0)){b=12;break g}else f=b}else{k[i+24>>2]=k[b+24>>2];f=g+4|0}b=k[f>>2]|0;if(!(k[b+8>>2]|0)){k[i+28>>2]=k[b+28>>2];break j}b=VO(G,b,0,0,C)|0;if(b)break g;e=uP((k[C>>2]<<2)+4|0)|0;if(!e){b=12;break g}k[e>>2]=-1;k[z>>2]=0;b=VO(G,k[f>>2]|0,e,z,0)|0;if(b){D=132;break i}w=UO(I,k[(k[g>>2]|0)+28>>2]|0,k[(k[f>>2]|0)+28>>2]|0,e,k[z>>2]|0)|0;x=i+28|0;k[x>>2]=w;vP(e);if(!(k[x>>2]|0)){b=12;break g}break}default:{}}while(0);b=k[y>>2]|0;if((b|0)<=(j|0))break h}if((D|0)==125){vP(e);break g}else if((D|0)==132){vP(e);break g}}while(0);f=k[E>>2]|0;b=f<<2;q=uP(b)|0;if(!q){f=q;b=12;e=0;break b}e=uP(b)|0;if(!e){f=q;b=12;break b}if((f|0)>0)IP(q|0,0,((f|0)>1?f<<2:4)|0)|0;WO(F,0,q,0)|0;f=k[E>>2]|0;if((f|0)>0){b=0;g=0;do{k[e+(g<<2)>>2]=b;D=q+(g<<2)|0;b=b+1+(k[D>>2]|0)|0;k[D>>2]=0;g=g+1|0}while((g|0)<(f|0));p=b}else p=0;n=wP(p+1|0,32)|0;if(!n){f=q;b=12;break b}k[d>>2]=n;o=d+4|0;k[o>>2]=p;b=WO(F,n,q,e)|0;if(b){f=q;break b}k[d+20>>2]=0;g=F+24|0;b=0;f=k[g>>2]|0;while(1){b=b+1|0;if((k[f>>2]|0)>-1)f=f+32|0;else break}m=wP(b,32)|0;if(!m){f=q;b=12;break b}k[d+8>>2]=m;f=k[g>>2]|0;b=k[f>>2]|0;if((b|0)>-1){g=b;b=0;do{k[m+(b<<5)+8>>2]=n+(k[e+(g<<2)>>2]<<5);k[m+(b<<5)+12>>2]=g;j=m+(b<<5)+16|0;k[j>>2]=0;l=f+12|0;h=k[l>>2]|0;if(h){i=0;while(1){g=i+1|0;if((k[h+(i<<2)>>2]|0)>-1)i=g;else break}g=g<<2;h=uP(g)|0;k[j>>2]=h;if(!h){f=q;b=12;break b}GP(h|0,k[l>>2]|0,g|0)|0}k[m+(b<<5)+20>>2]=k[f+16>>2];b=b+1|0;f=f+32|0;g=k[f>>2]|0}while((g|0)>-1)}else b=0;k[m+(b<<5)+8>>2]=0;k[o>>2]=p;k[d+12>>2]=n+(k[e+(k[k[F+28>>2]>>2]<<2)>>2]<<5);k[d+52>>2]=k[E>>2];k[d+56>>2]=c;hN(I);vP(k[H>>2]|0);vP(G);vP(q);vP(e);k[a+4>>2]=d;b=0;break a}}while(0);f=0;e=0}else{f=0;b=12;e=0}}else{f=0;e=0}}else{f=0;b=12;e=0}}else{f=0;b=6;e=0;d=0}}else{f=0;e=0;d=0}while(0);hN(I);vP(k[H>>2]|0);vP(G);if(f)vP(f);if(e)vP(e);k[a+4>>2]=d;eN(a)}while(0);r=J;return b|0}function eN(a){a=a|0;var b=0,c=0,d=0,e=0,f=0;f=k[a+4>>2]|0;if(f){d=f+4|0;a=k[f>>2]|0;if(k[d>>2]|0){c=0;do{if(k[a+(c<<5)+8>>2]|0){b=k[a+(c<<5)+16>>2]|0;if(b){vP(b);a=k[f>>2]|0}b=k[a+(c<<5)+28>>2]|0;if(b){vP(b);a=k[f>>2]|0}}c=c+1|0}while(c>>>0<(k[d>>2]|0)>>>0)}if(a)vP(a);c=f+8|0;a=k[c>>2]|0;if(a){if(k[a+8>>2]|0){while(1){b=k[a+16>>2]|0;if(b)vP(b);if(!(k[a+40>>2]|0))break;else a=a+32|0}a=k[c>>2]|0}vP(a)}d=f+16|0;a=k[d>>2]|0;if(a){e=f+28|0;b=k[e>>2]|0;if(b){c=0;while(1){a=k[a+(c*12|0)+8>>2]|0;if(a){vP(a);b=k[e>>2]|0}c=c+1|0;if(c>>>0>=b>>>0)break;a=k[d>>2]|0}a=k[d>>2]|0}vP(a)}a=k[f+32>>2]|0;if(a)vP(a);a=k[f+20>>2]|0;if(a)vP(a);a=k[f+36>>2]|0;if(a)vP(a);vP(f)}return}function fN(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0;X=r;r=r+16|0;R=X;V=k[a+4>>2]|0;W=V+56|0;U=(k[W>>2]&8|0)==0?c:0;M=V+40|0;a=k[M>>2]|0;if((a|0)>0&(U|0)!=0){a=uP(a<<2)|0;if(!a)a=12;else{T=a;S=3}}else{T=0;S=3}if((S|0)==3){if(!(k[V+60>>2]|0)){k[R>>2]=0;i=e&1;P=e&2;h=k[W>>2]&4;if(!T)O=0;else O=k[M>>2]|0;N=O<<2;g=k[V+52>>2]|0;e=g<<3;c=e+8|0;a=N+12+e+(c+(ha(N,g)|0)<<1)|0;Q=uP(a)|0;if(!Q){a=12;c=0}else{IP(Q|0,0,a|0)|0;a=Q+N&3;a=((a|0)==0?0:4-a|0)+N|0;l=Q+a|0;a=a+c|0;j=Q+a&3;a=((j|0)==0?0:4-j|0)+a|0;j=Q+a|0;a=a+c|0;M=Q+a&3;a=((M|0)==0?0:4-M|0)+a|0;M=Q+a|0;a=a+e|0;c=Q+a&3;if((g|0)>0){e=O<<3;f=0;a=Q+(((c|0)==0?0:4-c|0)+a)|0;while(1){k[j+(f<<3)+4>>2]=a;k[l+(f<<3)+4>>2]=a+N;f=f+1|0;if((f|0)==(g|0)){a=0;break}else a=a+e|0}do{k[M+(a<<3)>>2]=-1;a=a+1|0}while((a|0)!=(g|0))}a=WM(R,b,4)|0;if((a|0)<1)if((a|0)<0){c=0;a=1}else{g=1;S=198}else{g=a;S=198}a:do if((S|0)==198){L=V+8|0;K=(h|0)!=0;D=(i|0)!=0;E=(O|0)>0;F=V+12|0;G=V+44|0;H=V+32|0;I=V+36|0;J=(O|0)==0;C=E^1;a=-1;f=0;v=0;e=g;c=0;y=j;w=l;i=l;u=b+g|0;B=Q;while(1){if((a|0)<0){h=k[L>>2]|0;g=h+8|0;b:do if(!(k[g>>2]|0))c=i;else{o=(v|0)!=0;p=(c|0)==95;q=(v|0)==0;t=K&(c|0)==10;s=(D|(v|0)>0)^1;n=i;while(1){c:while(1){m=h+12|0;if((k[M+(k[m>>2]<<3)>>2]|0)>=(v|0)){i=n;break}l=h+20|0;i=k[l>>2]|0;if(!i){l=m;S=233;break}d:do if(t|((i&1|0)==0|s)){if((i&2|0)!=0?(b=k[R>>2]|0,!((b|P|0)==0|K&(b|0)==10)):0)break;do if(i&16){if(p)break d;if(aM(c)|0)break d;i=k[R>>2]|0;if((i|0)==95)break;if(!(aM(i)|0))break d}while(0);i=k[l>>2]|0;if(i&32){if(p){i=k[R>>2]|0;if((i|0)==95)break}else{b=(aM(c)|0)==0;i=k[R>>2]|0;if(b|(i|0)==95)break}if(aM(i)|0)break;i=k[l>>2]|0}j=k[R>>2]|0;do if((j|0)!=0&(o&(i&64|0)!=0)){if(p)i=1;else{i=(aM(c)|0)!=0;j=k[R>>2]|0}if((j|0)==95)if(i)break d;else break;else if(i^(aM(j)|0)!=0)break;else break d}while(0);if(!(k[l>>2]&128)){l=m;S=233;break c}i=k[R>>2]|0;if(q|(i|0)==0)break;if(p)j=1;else{j=(aM(c)|0)!=0;i=k[R>>2]|0}if((i|0)==95)if(j){l=m;S=233;break c}else break;else if(j^(aM(i)|0)!=0)break;else{l=m;S=233;break c}}while(0);g=h+40|0;if(!(k[g>>2]|0)){c=n;break b}else h=h+32|0}if((S|0)==233){S=0;k[n>>2]=k[g>>2];if(E)IP(k[n+4>>2]|0,-1,N|0)|0;i=k[h+16>>2]|0;do if(i){g=k[i>>2]|0;if((g|0)<=-1)break;j=n+4|0;do{if((g|0)<(O|0))k[(k[j>>2]|0)+(g<<2)>>2]=v;i=i+4|0;g=k[i>>2]|0}while((g|0)>-1)}while(0);g=(k[n>>2]|0)!=(k[F>>2]|0);if(g|C){i=n+4|0;a=g?a:v;f=g?f:1}else{a=n+4|0;f=k[a>>2]|0;g=0;do{k[T+(g<<2)>>2]=k[f+(g<<2)>>2];g=g+1|0}while((g|0)!=(O|0));i=a;a=v;f=1}b=k[l>>2]|0;k[M+(b<<3)>>2]=v;k[M+(b<<3)+4>>2]=i;i=n+8|0}g=h+40|0;if(!(k[g>>2]|0)){c=i;break}else{n=i;h=h+32|0}}}while(0);k[c>>2]=0;c=k[R>>2]|0;if(!c)break}else{if(J)break;c=k[R>>2]|0;if(!((i|0)!=(w|0)&(c|0)!=0))break}z=v+e|0;e=WM(R,u,4)|0;if((e|0)<1)if((e|0)<0){c=0;a=1;break a}else e=1;A=u+e|0;if((f|0)!=0&(k[G>>2]|0)!=0){if(!(k[w>>2]|0))f=y;else{m=k[I>>2]|0;n=k[m>>2]|0;o=(n|0)>-1;p=w;f=y;do{l=p+4|0;e:do if(o){i=n;j=0;do{h=k[m+((j|1)<<2)>>2]|0;if((i|0)>=(O|0))break e;g=k[l>>2]|0;if((k[g+(h<<2)>>2]|0)==(k[T+(h<<2)>>2]|0)?(k[g+(i<<2)>>2]|0)<(k[T+(i<<2)>>2]|0):0)break e;j=j+2|0;i=k[m+(j<<2)>>2]|0}while((i|0)>-1);h=l;S=262}else{h=l;g=k[l>>2]|0;S=262}while(0);if((S|0)==262){S=0;k[f>>2]=k[p>>2];x=f+4|0;b=k[x>>2]|0;k[x>>2]=g;k[h>>2]=b;f=f+8|0}p=p+8|0}while((k[p>>2]|0)!=0)}k[f>>2]=0;f=0;x=y}else{x=w;w=y}g=k[x>>2]|0;if(!g){g=w;h=B}else{q=(z|0)!=0;s=(c|0)==95;t=(z|0)==0;v=K&(c|0)==10;u=(D|(z|0)>0)^1;p=x;j=w;h=B;while(1){i=g+8|0;if(!(k[i>>2]|0))i=j;else{o=p+4|0;n=j;while(1){f:do if((k[g>>2]|0)>>>0>c>>>0)j=n;else{if((k[g+4>>2]|0)>>>0<c>>>0){j=n;break}m=g+20|0;j=k[m>>2]|0;do if(j){if(!(v|((j&1|0)==0|u))){j=n;break f}if((j&2|0)!=0?(b=k[R>>2]|0,!((b|P|0)==0|K&(b|0)==10)):0){j=n;break f}do if(j&16){if(s){j=n;break f}if(aM(c)|0){j=n;break f}j=k[R>>2]|0;if((j|0)==95)break;if(!(aM(j)|0)){j=n;break f}}while(0);j=k[m>>2]|0;if(j&32){if(s){j=k[R>>2]|0;if((j|0)==95){j=n;break f}}else{b=(aM(c)|0)==0;j=k[R>>2]|0;if(b|(j|0)==95){j=n;break f}}if(aM(j)|0){j=n;break f}j=k[m>>2]|0}l=k[R>>2]|0;do if((l|0)!=0&(q&(j&64|0)!=0)){if(s)j=1;else{j=(aM(c)|0)!=0;l=k[R>>2]|0}if((l|0)==95)if(j){j=n;break f}else break;else if(j^(aM(l)|0)!=0)break;else{j=n;break f}}while(0);do if(k[m>>2]&128){j=k[R>>2]|0;if(t|(j|0)==0){j=n;break f}if(s)l=1;else{l=(aM(c)|0)!=0;j=k[R>>2]|0}if((j|0)==95)if(l)break;else{j=n;break f}else if(l^(aM(j)|0)!=0){j=n;break f}else break}while(0);j=k[m>>2]|0;do if(j&4){if(k[W>>2]&2)break;if(!(eM(c,k[g+24>>2]|0)|0)){j=n;break f}j=k[m>>2]|0}while(0);do if(j&4){if(!(k[W>>2]&2))break;b=rM(c)|0;j=g+24|0;if(eM(b,k[j>>2]|0)|0)break;b=qM(c)|0;if(!(eM(b,k[j>>2]|0)|0)){j=n;break f}}while(0);if(!(k[m>>2]&8))break;if(ZO(k[g+28>>2]|0,c,k[W>>2]&2)|0){j=n;break f}}while(0);if(E){j=k[o>>2]|0;l=0;do{k[h+(l<<2)>>2]=k[j+(l<<2)>>2];l=l+1|0}while((l|0)!=(O|0))}l=k[g+16>>2]|0;do if(l){j=k[l>>2]|0;if((j|0)<=-1)break;do{if((j|0)<(O|0))k[h+(j<<2)>>2]=z;l=l+4|0;j=k[l>>2]|0}while((j|0)>-1)}while(0);j=k[g+12>>2]|0;l=M+(j<<3)|0;if((k[l>>2]|0)>=(z|0)){j=k[M+(j<<3)+4>>2]|0;l=k[j>>2]|0;if(!(XO(O,k[H>>2]|0,h,l)|0)){j=n;break}k[j>>2]=h;if((k[i>>2]|0)!=(k[F>>2]|0)){j=n;h=l;break}if(E)a=0;else{a=z;f=1;j=n;h=l;break}while(1){k[T+(a<<2)>>2]=k[h+(a<<2)>>2];a=a+1|0;if((a|0)==(O|0)){a=z;f=1;j=n;h=l;break f}}}b=k[i>>2]|0;k[n>>2]=b;B=n+4|0;i=k[B>>2]|0;k[B>>2]=h;k[l>>2]=z;k[M+(j<<3)+4>>2]=B;do if((b|0)==(k[F>>2]|0)){if((a|0)==-1)if(E)a=0;else{a=z;f=1;break}else{if(!E)break;if((k[h>>2]|0)>(k[T>>2]|0))break;else a=0}do{k[T+(a<<2)>>2]=k[h+(a<<2)>>2];a=a+1|0}while((a|0)!=(O|0));a=z;f=1}while(0);j=n+8|0;h=i}while(0);i=g+40|0;if(!(k[i>>2]|0)){i=j;break}else{n=j;g=g+32|0}}}p=p+8|0;g=k[p>>2]|0;if(!g){g=i;break}else j=i}}k[g>>2]=0;v=z;y=x;i=g;u=A;B=h}c=a;a=a>>>31}while(0);vP(Q)}}else{k[R>>2]=0;i=e&1;K=e&2;c=k[W>>2]&4;L=gN(0,0)|0;g:do if(L){j=iN(L,0,0,0,32)|0;if(!j){hN(L);a=12;c=0;break}k[j+24>>2]=0;k[j+28>>2]=0;h=k[M>>2]|0;if(h){e=uP(h<<2)|0;if(!e){c=0;g=0;a=12;f=0}else S=9}else{e=0;S=9}h:do if((S|0)==9){a=k[V+28>>2]|0;if(a){g=uP(a<<3)|0;if(!g){c=0;a=12;f=0;break}}else g=0;J=V+52|0;a=k[J>>2]|0;if(a){f=uP(a<<2)|0;if(!f){c=0;a=12;break}}else f=0;E=V+8|0;F=V+12|0;G=(T|0)==0;H=(T|0)!=0;I=V+32|0;D=(c|0)!=0;C=(i|0)!=0;x=0;a=-1;c=1;l=-1;m=b;i:while(1){if((h|0)>0){i=0;do{k[e+(i<<2)>>2]=-1;if(!G){k[T+(i<<2)>>2]=-1;h=k[M>>2]|0}i=i+1|0}while((i|0)<(h|0))}h=k[J>>2]|0;if((h|0)>0)IP(f|0,0,((h|0)>1?h<<2:4)|0)|0;B=c+l|0;c=WM(R,m,4)|0;if((c|0)<1)if((c|0)<0){c=0;a=1;break h}else c=1;m=m+c|0;A=k[R>>2]|0;n=k[E>>2]|0;h=n+8|0;if(k[h>>2]|0){s=(B|0)!=0;t=(x|0)==95;u=(B|0)==0;w=D&(x|0)==10;v=(C|(B|0)>0)^1;i=0;l=0;q=n;while(1){p=q+20|0;n=k[p>>2]|0;j:do if(n){if(!(w|((n&1|0)==0|v)))break;if((n&2|0)!=0?(Q=k[R>>2]|0,!((Q|K|0)==0|D&(Q|0)==10)):0)break;do if(n&16){if(t)break j;if(aM(x)|0)break j;n=k[R>>2]|0;if((n|0)==95)break;if(!(aM(n)|0))break j}while(0);n=k[p>>2]|0;if(n&32){if(t){n=k[R>>2]|0;if((n|0)==95)break}else{Q=(aM(x)|0)==0;n=k[R>>2]|0;if(Q|(n|0)==95)break}if(aM(n)|0)break;n=k[p>>2]|0}o=k[R>>2]|0;do if((o|0)!=0&(s&(n&64|0)!=0)){if(t)n=1;else{n=(aM(x)|0)!=0;o=k[R>>2]|0}if((o|0)==95)if(n)break j;else break;else if(n^(aM(o)|0)!=0)break;else break j}while(0);if(!(k[p>>2]&128)){S=52;break}n=k[R>>2]|0;if(u|(n|0)==0)break;if(t)o=1;else{o=(aM(x)|0)!=0;n=k[R>>2]|0}if((n|0)==95)if(o){S=52;break}else break;else if(o^(aM(n)|0)!=0)break;else{S=52;break}}else S=52;while(0);do if((S|0)==52){S=0;if(!l){i=k[q+16>>2]|0;l=k[h>>2]|0;break}o=j+28|0;n=k[o>>2]|0;if(!n){n=iN(L,0,0,0,32)|0;if(!n){S=56;break i}k[n+24>>2]=j;k[n+28>>2]=0;Q=iN(L,0,0,0,k[M>>2]<<2)|0;k[n+20>>2]=Q;if(!Q){S=63;break i}k[o>>2]=n;j=n}else j=n;k[j>>2]=B;k[j+4>>2]=m;k[j+8>>2]=k[h>>2];k[j+12>>2]=k[q+12>>2];k[j+16>>2]=k[R>>2];if((k[M>>2]|0)>0){h=k[j+20>>2]|0;n=0;do{k[h+(n<<2)>>2]=k[e+(n<<2)>>2];n=n+1|0}while((n|0)<(k[M>>2]|0))}n=k[q+16>>2]|0;if(!n)break;h=k[n>>2]|0;if((h|0)<=-1)break;o=k[j+20>>2]|0;do{n=n+4|0;k[o+(h<<2)>>2]=B;h=k[n>>2]|0}while((h|0)>-1)}while(0);h=q+40|0;if(!(k[h>>2]|0)){n=j;break}else q=q+32|0}if(i){h=k[i>>2]|0;if((h|0)>-1)do{k[e+(h<<2)>>2]=B;i=i+4|0;h=k[i>>2]|0}while((h|0)>-1)}else i=0;if(!l){j=n;S=173}else{j=B;h=n;n=m}}else{i=0;S=173}k:while(1){if((S|0)==173){S=0;h=k[j+24>>2]|0;if(!h)break;p=k[j+8>>2]|0;if(k[p+20>>2]&256)k[f+(k[j+12>>2]<<2)>>2]=0;o=k[j>>2]|0;q=k[j+4>>2]|0;k[R>>2]=k[j+16>>2];n=k[M>>2]|0;if((n|0)<=0){j=o;l=p;n=q;continue}l=k[j+20>>2]|0;j=0;while(1){k[e+(j<<2)>>2]=k[l+(j<<2)>>2];j=j+1|0;if((j|0)==(n|0)){j=o;l=p;n=q;continue k}}}if((l|0)!=(k[F>>2]|0)){q=c;s=l;while(1){p=s+8|0;do if(!(k[p>>2]|0))S=97;else{if(!(k[s+20>>2]&256)){S=97;break}l=k[s+24>>2]|0;YO(l+1|0,g,k[W>>2]&-9,V,e,j);c=k[g+(l<<3)>>2]|0;l=k[g+(l<<3)+4>>2]|0;o=l-c|0;if(wO(b+c|0,n+-1|0,o)|0){c=q;j=h;S=173;continue k}Q=(l|0)==(c|0);c=Q&1;l=f+(k[s+12>>2]<<2)|0;if(Q?(k[l>>2]|0)!=0:0){c=q;j=h;S=173;continue k}k[l>>2]=c;o=o+-1|0;j=o+j|0;l=k[R>>2]|0;c=WM(R,n+o|0,4)|0;if((c|0)<1)if((c|0)<0){c=0;a=1;break h}else c=1;o=c+o|0}while(0);do if((S|0)==97){S=0;l=k[R>>2]|0;if(!l){c=q;j=h;S=173;continue k}c=WM(R,n,4)|0;if((c|0)>=1){o=c;break}if((c|0)<0){c=0;a=1;break h}else{o=1;c=1}}while(0);n=n+o|0;j=j+q|0;if(!(k[p>>2]|0)){j=h;S=173;continue k}v=(j|0)!=0;w=(l|0)==95;x=(j|0)==0;z=D&(l|0)==10;y=(C|(j|0)>0)^1;t=p;u=0;while(1){l:do if((k[s>>2]|0)>>>0>l>>>0)o=u;else{if((k[s+4>>2]|0)>>>0<l>>>0){o=u;break}q=s+20|0;o=k[q>>2]|0;do if(o){if(!(z|((o&1|0)==0|y))){o=u;break l}if((o&2|0)!=0?(Q=k[R>>2]|0,!((Q|K|0)==0|D&(Q|0)==10)):0){o=u;break l}do if(o&16){if(w){o=u;break l}if(aM(l)|0){o=u;break l}o=k[R>>2]|0;if((o|0)==95)break;if(!(aM(o)|0)){o=u;break l}}while(0);o=k[q>>2]|0;if(o&32){if(w){o=k[R>>2]|0;if((o|0)==95){o=u;break l}}else{Q=(aM(l)|0)==0;o=k[R>>2]|0;if(Q|(o|0)==95){o=u;break l}}if(aM(o)|0){o=u;break l}o=k[q>>2]|0}p=k[R>>2]|0;do if((p|0)!=0&(v&(o&64|0)!=0)){if(w)o=1;else{o=(aM(l)|0)!=0;p=k[R>>2]|0}if((p|0)==95)if(o){o=u;break l}else break;else if(o^(aM(p)|0)!=0)break;else{o=u;break l}}while(0);do if(k[q>>2]&128){o=k[R>>2]|0;if(x|(o|0)==0){o=u;break l}if(w)p=1;else{p=(aM(l)|0)!=0;o=k[R>>2]|0}if((o|0)==95)if(p)break;else{o=u;break l}else if(p^(aM(o)|0)!=0){o=u;break l}else break}while(0);o=k[q>>2]|0;do if(o&4){if(k[W>>2]&2)break;if(!(eM(l,k[s+24>>2]|0)|0)){o=u;break l}o=k[q>>2]|0}while(0);do if(o&4){if(!(k[W>>2]&2))break;Q=rM(l)|0;o=s+24|0;if(eM(Q,k[o>>2]|0)|0)break;Q=qM(l)|0;if(!(eM(Q,k[o>>2]|0)|0)){o=u;break l}}while(0);if(!(k[q>>2]&8))break;if(ZO(k[s+28>>2]|0,l,k[W>>2]&2)|0){o=u;break l}}while(0);if(!u){o=k[t>>2]|0;i=k[s+16>>2]|0;break}p=h+28|0;o=k[p>>2]|0;if(!o){o=iN(L,0,0,0,32)|0;if(!o){S=146;break i}k[o+24>>2]=h;k[o+28>>2]=0;Q=iN(L,0,0,0,k[M>>2]<<2)|0;k[o+20>>2]=Q;if(!Q){S=153;break i}k[p>>2]=o;h=o}else h=o;k[h>>2]=j;k[h+4>>2]=n;k[h+8>>2]=k[t>>2];k[h+12>>2]=k[s+12>>2];k[h+16>>2]=k[R>>2];if((k[M>>2]|0)>0){o=k[h+20>>2]|0;p=0;do{k[o+(p<<2)>>2]=k[e+(p<<2)>>2];p=p+1|0}while((p|0)<(k[M>>2]|0))}p=k[s+16>>2]|0;if(!p){o=u;break}o=k[p>>2]|0;if((o|0)<=-1){o=u;break}q=k[h+20>>2]|0;do{k[q+(o<<2)>>2]=j;p=p+4|0;o=k[p>>2]|0}while((o|0)>-1);o=u}while(0);t=s+40|0;if(!(k[t>>2]|0)){l=h;break}else{u=o;s=s+32|0}}if(!o){j=l;S=173;continue k}do if(!i)i=0;else{h=k[i>>2]|0;if((h|0)<=-1)break;do{i=i+4|0;k[e+(h<<2)>>2]=j;h=k[i>>2]|0}while((h|0)>-1)}while(0);if((o|0)==(k[F>>2]|0)){h=l;break}else{q=c;h=l;s=o}}}if((a|0)>=(j|0)){if(!(H&(a|0)==(j|0))){j=h;S=173;continue}if(!(XO(k[M>>2]|0,k[I>>2]|0,e,T)|0)){j=h;S=173;continue}}if(G){a=j;j=h;S=173;continue}if((k[M>>2]|0)>0)a=0;else{a=j;j=h;S=173;continue}while(1){k[T+(a<<2)>>2]=k[e+(a<<2)>>2];a=a+1|0;if((a|0)>=(k[M>>2]|0)){a=j;j=h;S=173;continue k}}}if((a|0)>-1|(k[R>>2]|0)==0){S=181;break}k[R>>2]=A;h=k[M>>2]|0;x=A;l=B}if((S|0)==56){hN(L);if(e)vP(e);if(g)vP(g);if(!f){a=12;c=0;break g}vP(f);a=12;c=0;break g}else if((S|0)==63){hN(L);if(e)vP(e);if(g)vP(g);if(!f){a=12;c=0;break g}vP(f);a=12;c=0;break g}else if((S|0)==146){hN(L);if(e)vP(e);if(g)vP(g);if(!f){a=12;c=0;break g}vP(f);a=12;c=0;break g}else if((S|0)==153){hN(L);if(e)vP(e);if(g)vP(g);if(!f){a=12;c=0;break g}vP(f);a=12;c=0;break g}else if((S|0)==181){c=a;a=a>>>31;break}}while(0);hN(L);if(e)vP(e);if(g)vP(g);if(f)vP(f)}else{a=12;c=0}while(0)}if(!a)YO(U,d,k[W>>2]|0,V,T,c);if(T)vP(T)}r=X;return a|0}function gN(a,b){a=a|0;b=b|0;if(!a)b=wP(1,24)|0;else{k[b>>2]=0;k[b+4>>2]=0;k[b+8>>2]=0;k[b+12>>2]=0;k[b+16>>2]=0;k[b+20>>2]=0}return b|0}function hN(a){a=a|0;var b=0,c=0;b=k[a>>2]|0;if(b)do{vP(k[b>>2]|0);c=b;b=k[b+4>>2]|0;vP(c)}while((b|0)!=0);vP(a);return}function iN(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;g=a+16|0;a:do if(!(k[g>>2]|0)){i=a+12|0;f=k[i>>2]|0;do if(f>>>0<e>>>0){if(b)if(!c){k[g>>2]=1;c=0;break a}else{g=a+8|0;k[g>>2]=c;k[i>>2]=1024;f=1024;break}f=e<<3;f=f>>>0>1024?f:1024;h=uP(8)|0;if(!h){k[g>>2]=1;c=0;break a}c=uP(f)|0;k[h>>2]=c;if(!c){vP(h);k[g>>2]=1;c=0;break a}k[h+4>>2]=0;b=a+4|0;g=k[b>>2]|0;if(g)k[g+4>>2]=h;if(!(k[a>>2]|0))k[a>>2]=h;k[b>>2]=h;g=a+8|0;k[g>>2]=c;k[i>>2]=f}else{c=a+8|0;g=c;c=k[c>>2]|0}while(0);b=c+e&3;b=((b|0)==0?0:4-b|0)+e|0;k[g>>2]=c+b;k[i>>2]=f-b;if(d)IP(c|0,0,b|0)|0}else c=0;while(0);return c|0}function jN(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;g=r;r=r+64|0;f=g+16|0;e=g+8|0;c=g;d=g+24|0;k[c>>2]=a;k[c+4>>2]=b;c=eb(197,c|0)|0;if((c|0)==-9?(k[e>>2]=a,k[e+4>>2]=1,(hb(221,e|0)|0)>=0):0){wM(d,a);k[f>>2]=d;k[f+4>>2]=b;c=zM(fb(195,f|0)|0)|0}else c=zM(c)|0;r=g;return c|0}function kN(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0;n=r;r=r+112|0;m=n+40|0;j=n+24|0;h=n+16|0;e=n;l=n+52|0;d=i[b>>0]|0;if(hO(188886,d<<24>>24,4)|0){c=uP(1144)|0;if(!c)c=0;else{f=c;g=f+112|0;do{k[f>>2]=0;f=f+4|0}while((f|0)<(g|0));if(!(oO(b,43)|0))k[c>>2]=d<<24>>24==114?8:4;if(oO(b,101)|0){k[e>>2]=a;k[e+4>>2]=2;k[e+8>>2]=1;hb(221,e|0)|0;d=i[b>>0]|0}if(d<<24>>24==97){k[h>>2]=a;k[h+4>>2]=3;d=hb(221,h|0)|0;if(!(d&1024)){k[j>>2]=a;k[j+4>>2]=4;k[j+8>>2]=d|1024;hb(221,j|0)|0}b=k[c>>2]|128;k[c>>2]=b}else b=k[c>>2]|0;k[c+60>>2]=a;k[c+44>>2]=c+120;k[c+48>>2]=1024;d=c+75|0;i[d>>0]=-1;if((b&8|0)==0?(k[m>>2]=a,k[m+4>>2]=21505,k[m+8>>2]=l,(Qa(54,m|0)|0)==0):0)i[d>>0]=10;k[c+32>>2]=23;k[c+36>>2]=21;k[c+40>>2]=22;k[c+12>>2]=17;if(!(k[24467]|0))k[c+76>>2]=-1;yb(97892);d=k[24472]|0;k[c+56>>2]=d;if(d)k[d+52>>2]=c;k[24472]=c;rb(97892)}}else{c=sM()|0;k[c>>2]=22;c=0}r=n;return c|0}function lN(a){a=a|0;var b=0,c=0,d=0;c=(oO(a,43)|0)==0;b=i[a>>0]|0;c=c?b<<24>>24!=114&1:2;d=(oO(a,120)|0)==0;c=d?c:c|128;a=(oO(a,101)|0)==0;a=a?c:c|524288;a=b<<24>>24==114?a:a|64;a=b<<24>>24==119?a|512:a;return (b<<24>>24==97?a|1024:a)|0}function mN(a){a=a|0;return 0}function nN(a){a=a|0;return}function oN(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0;j=r;r=r+16|0;h=j;g=b&255;i[h>>0]=g;d=a+16|0;e=k[d>>2]|0;if(!e)if(!(wN(a)|0)){e=k[d>>2]|0;f=4}else c=-1;else f=4;do if((f|0)==4){d=a+20|0;f=k[d>>2]|0;if(f>>>0<e>>>0?(c=b&255,(c|0)!=(i[a+75>>0]|0)):0){k[d>>2]=f+1;i[f>>0]=g;break}if((Tb[k[a+36>>2]&63](a,h,1)|0)==1)c=l[h>>0]|0;else c=-1}while(0);r=j;return c|0}function pN(a){a=a|0;var b=0,c=0;b=r;r=r+16|0;c=b;k[c>>2]=k[a+60>>2];a=zM(zb(6,c|0)|0)|0;r=b;return a|0}function qN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0;l=r;r=r+48|0;f=l+16|0;e=l;d=l+32|0;k[d>>2]=b;g=d+4|0;j=a+48|0;m=k[j>>2]|0;k[g>>2]=c-((m|0)!=0&1);h=a+44|0;k[d+8>>2]=k[h>>2];k[d+12>>2]=m;if(!(k[24466]|0)){k[f>>2]=k[a+60>>2];k[f+4>>2]=d;k[f+8>>2]=2;d=zM(Bb(145,f|0)|0)|0}else{Ab(110,a|0);k[e>>2]=k[a+60>>2];k[e+4>>2]=d;k[e+8>>2]=2;d=zM(Bb(145,e|0)|0)|0;Ka(0)}if((d|0)>=1){g=k[g>>2]|0;if(d>>>0>g>>>0){f=k[h>>2]|0;e=a+4|0;k[e>>2]=f;k[a+8>>2]=f+(d-g);if(!(k[j>>2]|0))d=c;else{k[e>>2]=f+1;i[b+(c+-1)>>0]=i[f>>0]|0;d=c}}}else{k[a>>2]=k[a>>2]|d&48^16;k[a+8>>2]=0;k[a+4>>2]=0}r=l;return d|0}function rN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;e=r;r=r+32|0;f=e;d=e+20|0;k[f>>2]=k[a+60>>2];k[f+4>>2]=0;k[f+8>>2]=b;k[f+12>>2]=d;k[f+16>>2]=c;if((zM(sb(140,f|0)|0)|0)<0){k[d>>2]=-1;a=-1}else a=k[d>>2]|0;r=e;return a|0}function sN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0;p=r;r=r+48|0;m=p+16|0;l=p;d=p+32|0;n=a+28|0;e=k[n>>2]|0;k[d>>2]=e;o=a+20|0;e=(k[o>>2]|0)-e|0;k[d+4>>2]=e;k[d+8>>2]=b;k[d+12>>2]=c;i=a+60|0;j=a+44|0;b=2;e=e+c|0;while(1){if(!(k[24466]|0)){k[m>>2]=k[i>>2];k[m+4>>2]=d;k[m+8>>2]=b;g=zM(Jb(146,m|0)|0)|0}else{Ab(111,a|0);k[l>>2]=k[i>>2];k[l+4>>2]=d;k[l+8>>2]=b;g=zM(Jb(146,l|0)|0)|0;Ka(0)}if((e|0)==(g|0)){e=6;break}if((g|0)<0){e=8;break}e=e-g|0;f=k[d+4>>2]|0;if(g>>>0<=f>>>0)if((b|0)==2){k[n>>2]=(k[n>>2]|0)+g;h=f;b=2}else h=f;else{h=k[j>>2]|0;k[n>>2]=h;k[o>>2]=h;h=k[d+12>>2]|0;g=g-f|0;d=d+8|0;b=b+-1|0}k[d>>2]=(k[d>>2]|0)+g;k[d+4>>2]=h-g}if((e|0)==6){m=k[j>>2]|0;k[a+16>>2]=m+(k[a+48>>2]|0);a=m;k[n>>2]=a;k[o>>2]=a}else if((e|0)==8){k[a+16>>2]=0;k[n>>2]=0;k[o>>2]=0;k[a>>2]=k[a>>2]|32;if((b|0)==2)c=0;else c=c-(k[d+4>>2]|0)|0}r=p;return c|0}function tN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;e=r;r=r+80|0;d=e;k[a+36>>2]=21;if((k[a>>2]&64|0)==0?(k[d>>2]=k[a+60>>2],k[d+4>>2]=21505,k[d+8>>2]=e+12,(Qa(54,d|0)|0)!=0):0)i[a+75>>0]=-1;d=sN(a,b,c)|0;r=e;return d|0}function uN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;d=a+84|0;f=k[d>>2]|0;g=c+256|0;e=hO(f,0,g)|0;e=(e|0)==0?g:e-f|0;c=e>>>0<c>>>0?e:c;GP(b|0,f|0,c|0)|0;k[a+4>>2]=f+c;b=f+e|0;k[a+8>>2]=b;k[d>>2]=b;return c|0}function vN(a){a=a|0;var b=0,c=0;b=a+74|0;c=i[b>>0]|0;i[b>>0]=c+255|c;b=a+20|0;c=a+44|0;if((k[b>>2]|0)>>>0>(k[c>>2]|0)>>>0)Tb[k[a+36>>2]&63](a,0,0)|0;k[a+16>>2]=0;k[a+28>>2]=0;k[b>>2]=0;b=k[a>>2]|0;if(b&20)if(!(b&4))b=-1;else{k[a>>2]=b|32;b=-1}else{b=k[c>>2]|0;k[a+8>>2]=b;k[a+4>>2]=b;b=0}return b|0}function wN(a){a=a|0;var b=0,c=0;b=a+74|0;c=i[b>>0]|0;i[b>>0]=c+255|c;b=k[a>>2]|0;if(!(b&8)){k[a+8>>2]=0;k[a+4>>2]=0;b=k[a+44>>2]|0;k[a+28>>2]=b;k[a+20>>2]=b;k[a+16>>2]=b+(k[a+48>>2]|0);b=0}else{k[a>>2]=b|32;b=-1}return b|0}function xN(a){a=a|0;var b=0,c=0;c=r;r=r+16|0;b=c;if((k[a+8>>2]|0)==0?(vN(a)|0)!=0:0)b=-1;else if((Tb[k[a+32>>2]&63](a,b,1)|0)==1)b=l[b>>0]|0;else b=-1;r=c;return b|0}function yN(a){a=a|0;var b=0,c=0,d=0;d=(k[a>>2]&1|0)!=0;if(!d){yb(97892);c=k[a+52>>2]|0;b=a+56|0;if(c)k[c+56>>2]=k[b>>2];b=k[b>>2]|0;if(b)k[b+52>>2]=c;if((k[24472]|0)==(a|0))k[24472]=b;rb(97892)}b=AN(a)|0;b=Rb[k[a+12>>2]&63](a)|0|b;c=k[a+92>>2]|0;if(c)vP(c);if(!d)vP(a);return b|0}function zN(a){a=a|0;var b=0;if((k[a+76>>2]|0)>-1){b=(mN(a)|0)==0;a=(k[a>>2]|0)>>>4&1}else a=(k[a>>2]|0)>>>4&1;return a|0}function AN(a){a=a|0;var b=0,c=0;do if(a){if((k[a+76>>2]|0)<=-1){b=aP(a)|0;break}c=(mN(a)|0)==0;b=aP(a)|0;if(!c)nN(a)}else{if(!(k[24531]|0))b=0;else b=AN(k[24531]|0)|0;yb(97892);a=k[24472]|0;if(a)do{if((k[a+76>>2]|0)>-1)c=mN(a)|0;else c=0;if((k[a+20>>2]|0)>>>0>(k[a+28>>2]|0)>>>0)b=aP(a)|0|b;if(c)nN(a);a=k[a+56>>2]|0}while((a|0)!=0);rb(97892)}while(0);return b|0}function BN(a){a=a|0;var b=0,c=0,d=0;if((k[a+76>>2]|0)>=0?(mN(a)|0)!=0:0){b=a+4|0;c=k[b>>2]|0;if(c>>>0<(k[a+8>>2]|0)>>>0){k[b>>2]=c+1;b=l[c>>0]|0}else b=xN(a)|0}else d=3;do if((d|0)==3){b=a+4|0;c=k[b>>2]|0;if(c>>>0<(k[a+8>>2]|0)>>>0){k[b>>2]=c+1;b=l[c>>0]|0;break}else{b=xN(a)|0;break}}while(0);return b|0}function CN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,m=0,n=0,o=0,p=0,q=0,r=0;if((k[c+76>>2]|0)>-1)o=mN(c)|0;else o=0;d=b+-1|0;if((b|0)<2){p=c+74|0;n=i[p>>0]|0;i[p>>0]=n+255|n;if(o)nN(c);if(!d)i[a>>0]=0;else a=0}else{a:do if(d){m=c+4|0;n=c+8|0;e=a;while(1){f=k[m>>2]|0;q=f;h=(k[n>>2]|0)-q|0;g=hO(f,10,h)|0;r=(g|0)==0;g=r?h:1-q+g|0;q=g>>>0<d>>>0;g=q?g:d;GP(e|0,f|0,g|0)|0;f=k[m>>2]|0;h=f+g|0;k[m>>2]=h;b=e+g|0;j=d-g|0;if(!(r&q)){p=18;break a}if(h>>>0<(k[n>>2]|0)>>>0){g=g+1|0;k[m>>2]=f+g;f=l[h>>0]|0}else{d=xN(c)|0;if((d|0)<0)break;g=g+1|0;f=d}d=j+-1|0;e=e+g|0;i[b>>0]=f;if(!((d|0)!=0&(f&255|0)!=10)){b=e;p=18;break a}}if((b|0)!=(a|0)?(k[c>>2]&16|0)!=0:0)p=18;else a=0}else{b=a;p=18}while(0);if((p|0)==18)if(!a)a=0;else i[b>>0]=0;if(o)nN(c)}return a|0}function DN(a){a=a|0;(k[a+76>>2]|0)>-1?(mN(a)|0)!=0:0;return k[a+60>>2]|0}function EN(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;e=r;r=r+32|0;d=e+16|0;c=e;if(hO(188886,i[b>>0]|0,4)|0){f=lN(b)|0|32768;k[c>>2]=a;k[c+4>>2]=f;k[c+8>>2]=438;c=zM(vb(5,c|0)|0)|0;if((c|0)>=0){a=kN(c,b)|0;if(!a){k[d>>2]=c;zb(6,d|0)|0;a=0}}else a=0}else{a=sM()|0;k[a>>2]=22;a=0}r=e;return a|0}function FN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=r;r=r+16|0;e=d;k[e>>2]=c;c=XN(a,b,e)|0;r=d;return c|0}function GN(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0;if((k[b+76>>2]|0)>=0?(mN(b)|0)!=0:0){if((i[b+75>>0]|0)!=(a|0)?(d=b+20|0,e=k[d>>2]|0,e>>>0<(k[b+16>>2]|0)>>>0):0){k[d>>2]=e+1;i[e>>0]=a;c=a&255}else c=oN(b,a)|0;nN(b)}else g=3;do if((g|0)==3){if((i[b+75>>0]|0)!=(a|0)?(f=b+20|0,c=k[f>>2]|0,c>>>0<(k[b+16>>2]|0)>>>0):0){k[f>>2]=c+1;i[c>>0]=a;c=a&255;break}c=oN(b,a)|0}while(0);return c|0}function HN(a,b){a=a|0;b=b|0;return (QN(a,uO(a)|0,1,b)|0)+-1|0}function IN(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,l=0;h=ha(c,b)|0;if((k[d+76>>2]|0)>-1)j=mN(d)|0;else j=0;e=d+74|0;f=i[e>>0]|0;i[e>>0]=f+255|f;e=d+4|0;f=k[e>>2]|0;g=(k[d+8>>2]|0)-f|0;if((g|0)>0){g=g>>>0<h>>>0?g:h;GP(a|0,f|0,g|0)|0;k[e>>2]=f+g;a=a+g|0;e=h-g|0}else e=h;a:do if(!e)l=13;else{g=d+32|0;f=e;while(1){if(vN(d)|0){c=f;break}e=Tb[k[g>>2]&63](d,a,f)|0;if((e+1|0)>>>0<2){c=f;break}if((f|0)==(e|0)){l=13;break a}else{a=a+e|0;f=f-e|0}}if(j)nN(d);c=((h-c|0)>>>0)/(b>>>0)|0}while(0);if((l|0)==13)if(j)nN(d);return c|0}function JN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if((c|0)==1)b=b-(k[a+8>>2]|0)+(k[a+4>>2]|0)|0;e=a+20|0;d=a+28|0;if((k[e>>2]|0)>>>0>(k[d>>2]|0)>>>0?(Tb[k[a+36>>2]&63](a,0,0)|0,(k[e>>2]|0)==0):0)b=-1;else{k[a+16>>2]=0;k[d>>2]=0;k[e>>2]=0;if((Tb[k[a+40>>2]&63](a,b,c)|0)<0)b=-1;else{k[a+8>>2]=0;k[a+4>>2]=0;k[a>>2]=k[a>>2]&-17;b=0}}return b|0}function KN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if((k[a+76>>2]|0)>-1){d=(mN(a)|0)==0;b=JN(a,b,c)|0;if(!d)nN(a)}else b=JN(a,b,c)|0;return b|0}function LN(a,b,c){a=a|0;b=b|0;c=c|0;return KN(a,b,c)|0}function MN(a){a=a|0;var b=0;if(!(k[a>>2]&128))b=1;else b=(k[a+20>>2]|0)>>>0>(k[a+28>>2]|0)>>>0?2:1;b=Tb[k[a+40>>2]&63](a,0,b)|0;if((b|0)>=0)b=b-(k[a+8>>2]|0)+(k[a+4>>2]|0)+(k[a+20>>2]|0)-(k[a+28>>2]|0)|0;return b|0}function NN(a){a=a|0;var b=0;if((k[a+76>>2]|0)>-1){b=(mN(a)|0)==0;a=MN(a)|0}else a=MN(a)|0;return a|0}function ON(a){a=a|0;return NN(a)|0}function PN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;d=c+16|0;e=k[d>>2]|0;if(!e)if(!(wN(c)|0)){e=k[d>>2]|0;f=4}else d=0;else f=4;a:do if((f|0)==4){g=c+20|0;f=k[g>>2]|0;if((e-f|0)>>>0<b>>>0){d=Tb[k[c+36>>2]&63](c,a,b)|0;break}b:do if((i[c+75>>0]|0)>-1){d=b;while(1){if(!d){e=f;d=0;break b}e=d+-1|0;if((i[a+e>>0]|0)==10)break;else d=e}if((Tb[k[c+36>>2]&63](c,a,d)|0)>>>0<d>>>0)break a;b=b-d|0;a=a+d|0;e=k[g>>2]|0}else{e=f;d=0}while(0);GP(e|0,a|0,b|0)|0;k[g>>2]=(k[g>>2]|0)+b;d=d+b|0}while(0);return d|0}function QN(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=ha(c,b)|0;if((k[d+76>>2]|0)>-1){f=(mN(d)|0)==0;a=PN(a,e,d)|0;if(!f)nN(d)}else a=PN(a,e,d)|0;if((a|0)!=(e|0))c=(a>>>0)/(b>>>0)|0;return c|0}function RN(a){a=a|0;var b=0,c=0,d=0,e=0;d=k[24530]|0;if((k[d+76>>2]|0)>-1)e=mN(d)|0;else e=0;do if((HN(a,d)|0)<0)b=1;else{if((i[d+75>>0]|0)!=10?(b=d+20|0,c=k[b>>2]|0,c>>>0<(k[d+16>>2]|0)>>>0):0){k[b>>2]=c+1;i[c>>0]=10;b=0;break}b=(oN(d,10)|0)<0}while(0);if(e)nN(d);return b<<31>>31|0}function SN(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=r;r=r+16|0;f=e;k[f>>2]=d;d=ZN(a,b,c,f)|0;r=e;return d|0}function TN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=r;r=r+16|0;e=d;k[e>>2]=c;c=_N(a,b,e)|0;r=d;return c|0}function UN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=r;r=r+16|0;e=d;k[e>>2]=c;c=$N(a,b,e)|0;r=d;return c|0}function VN(){var a=0,b=0,c=0,d=0,e=0,f=0,g=0,h=0;h=r;r=r+48|0;f=h+16|0;e=h;c=h+20|0;d=0;while(1){a=WN(c)|0;if(!a){a=0;break}k[e>>2]=a;k[e+4>>2]=32962;k[e+8>>2]=384;b=zM(vb(5,e|0)|0)|0;d=d+1|0;if((b|0)>-1){g=5;break}if((d|0)>=100){a=0;break}}if((g|0)==5){g=kN(b,188890)|0;k[f>>2]=a;ub(10,f|0)|0;a=g}r=h;return a|0}function WN(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0;j=r;r=r+64|0;f=j+32|0;h=j+24|0;g=j+8|0;d=j;i=j+48|0;e=j+40|0;k[i>>2]=(a|0)==0?188893:a;k[d>>2]=188913;k[d+4>>2]=7;if(!(pb(33,d|0)|0)){b=e+4|0;c=i;d=0;while(1){k[g>>2]=0;k[g+4>>2]=e;k[g+8>>2]=0;Pa(265,g|0)|0;a=k[i>>2]|0;l=k[b>>2]^c^a;m=k[24634]|0;k[24634]=m+1;k[h>>2]=m;k[h+4>>2]=l;SN(a,20,188918,h)|0;k[f>>2]=k[i>>2];k[f+4>>2]=0;if(pb(33,f|0)|0){a=d;break}a=d+1|0;if((d|0)<100)d=a;else break}a=(a|0)>99?0:k[i>>2]|0}else a=0;r=j;return a|0}function XN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0;s=r;r=r+224|0;n=s+80|0;q=s+96|0;p=s;o=s+136|0;d=q;e=d+40|0;do{k[d>>2]=0;d=d+4|0}while((d|0)<(e|0));k[n>>2]=k[c>>2];if((bP(0,b,n,p,q)|0)<0)c=-1;else{if((k[a+76>>2]|0)>-1)l=mN(a)|0;else l=0;c=k[a>>2]|0;m=c&32;if((i[a+74>>0]|0)<1)k[a>>2]=c&-33;c=a+48|0;if(!(k[c>>2]|0)){e=a+44|0;f=k[e>>2]|0;k[e>>2]=o;g=a+28|0;k[g>>2]=o;h=a+20|0;k[h>>2]=o;k[c>>2]=80;j=a+16|0;k[j>>2]=o+80;d=bP(a,b,n,p,q)|0;if(f){Tb[k[a+36>>2]&63](a,0,0)|0;d=(k[h>>2]|0)==0?-1:d;k[e>>2]=f;k[c>>2]=0;k[j>>2]=0;k[g>>2]=0;k[h>>2]=0}}else d=bP(a,b,n,p,q)|0;c=k[a>>2]|0;k[a>>2]=c|m;if(l)nN(a);c=(c&32|0)==0?d:-1}r=s;return c|0}function YN(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0,m=0.0,n=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,M=0,N=0,O=0,P=0,Q=0;P=r;r=r+304|0;G=P+16|0;I=P+8|0;H=P+33|0;J=P;y=P+32|0;if((k[a+76>>2]|0)>-1)O=mN(a)|0;else O=0;d=i[b>>0]|0;a:do if(d<<24>>24){K=a+4|0;M=a+100|0;F=a+108|0;z=a+8|0;A=H+10|0;B=H+33|0;C=I+4|0;D=H+46|0;E=H+94|0;f=d;d=0;g=b;s=0;e=0;b=0;b:while(1){c:do if(!(_L(f&255)|0)){f=(i[g>>0]|0)==37;d:do if(f){n=g+1|0;h=i[n>>0]|0;e:do switch(h<<24>>24){case 37:break d;case 42:{x=0;h=g+2|0;break}default:{h=(h&255)+-48|0;if(h>>>0<10?(i[g+2>>0]|0)==36:0){k[G>>2]=k[c>>2];while(1){x=(k[G>>2]|0)+(4-1)&~(4-1);f=k[x>>2]|0;k[G>>2]=x+4;if(h>>>0>1)h=h+-1|0;else break}x=f;h=g+3|0;break e}h=(k[c>>2]|0)+(4-1)&~(4-1);x=k[h>>2]|0;k[c>>2]=h+4;h=n}}while(0);f=i[h>>0]|0;g=f&255;if((g+-48|0)>>>0<10){f=0;while(1){n=(f*10|0)+-48+g|0;h=h+1|0;f=i[h>>0]|0;g=f&255;if((g+-48|0)>>>0>=10)break;else f=n}}else n=0;if(f<<24>>24==109){h=h+1|0;q=i[h>>0]|0;f=(x|0)!=0&1;e=0;b=0}else{q=f;f=0}g=h+1|0;switch(q&255|0){case 104:{w=(i[g>>0]|0)==104;g=w?h+2|0:g;h=w?-2:-1;break}case 108:{w=(i[g>>0]|0)==108;g=w?h+2|0:g;h=w?3:1;break}case 106:{h=3;break}case 116:case 122:{h=1;break}case 76:{h=2;break}case 110:case 112:case 67:case 83:case 91:case 99:case 115:case 88:case 71:case 70:case 69:case 65:case 103:case 102:case 101:case 97:case 120:case 117:case 111:case 105:case 100:{g=h;h=0;break}default:{N=152;break b}}q=l[g>>0]|0;t=(q&47|0)==3;q=t?q|32:q;t=t?1:h;switch(q|0){case 99:{w=s;v=(n|0)<1?1:n;break}case 91:{w=s;v=n;break}case 110:{if(!x){h=s;break c}switch(t|0){case -2:{i[x>>0]=s;h=s;break c}case -1:{j[x>>1]=s;h=s;break c}case 0:{k[x>>2]=s;h=s;break c}case 1:{k[x>>2]=s;h=s;break c}case 3:{h=x;k[h>>2]=s;k[h+4>>2]=((s|0)<0)<<31>>31;h=s;break c}default:{h=s;break c}}}default:{xM(a,0);do{h=k[K>>2]|0;if(h>>>0<(k[M>>2]|0)>>>0){k[K>>2]=h+1;h=l[h>>0]|0}else h=yM(a)|0}while((_L(h)|0)!=0);h=k[K>>2]|0;if(k[M>>2]|0){h=h+-1|0;k[K>>2]=h}w=(k[F>>2]|0)+s+h-(k[z>>2]|0)|0;v=n}}xM(a,v);h=k[K>>2]|0;n=k[M>>2]|0;if(h>>>0<n>>>0)k[K>>2]=h+1;else{if((yM(a)|0)<0){N=152;break b}n=k[M>>2]|0}if(n)k[K>>2]=(k[K>>2]|0)+-1;f:do switch(q|0){case 91:case 99:case 115:{u=(q|0)==99;g:do if((q&239|0)==99){IP(H|0,-1,257)|0;i[H>>0]=0;if((q|0)==115){i[B>>0]=0;i[A>>0]=0;i[A+1>>0]=0;i[A+2>>0]=0;i[A+3>>0]=0;i[A+4>>0]=0}}else{Q=g+1|0;s=(i[Q>>0]|0)==94;h=s&1;q=s?Q:g;g=s?g+2|0:Q;IP(H|0,s&1|0,257)|0;i[H>>0]=0;switch(i[g>>0]|0){case 45:{s=(h^1)&255;i[D>>0]=s;g=q+2|0;break}case 93:{s=(h^1)&255;i[E>>0]=s;g=q+2|0;break}default:s=(h^1)&255}while(1){h=i[g>>0]|0;h:do switch(h<<24>>24){case 0:{N=152;break b}case 93:break g;case 45:{q=g+1|0;h=i[q>>0]|0;switch(h<<24>>24){case 93:case 0:{h=45;break h}default:{}}g=i[g+-1>>0]|0;if((g&255)<(h&255)){g=g&255;do{g=g+1|0;i[H+g>>0]=s;h=i[q>>0]|0}while((g|0)<(h&255|0));g=q}else g=q;break}default:{}}while(0);i[H+((h&255)+1)>>0]=s;g=g+1|0}}while(0);q=u?v+1|0:31;s=(t|0)==1;t=(f|0)!=0;i:do if(s){if(t){b=uP(q<<2)|0;if(!b){e=0;N=152;break b}}else b=x;k[I>>2]=0;k[C>>2]=0;e=0;j:while(1){n=(b|0)==0;do{k:while(1){h=k[K>>2]|0;if(h>>>0<(k[M>>2]|0)>>>0){k[K>>2]=h+1;h=l[h>>0]|0}else h=yM(a)|0;if(!(i[H+(h+1)>>0]|0))break j;i[y>>0]=h;switch(UM(J,y,1,I)|0){case -1:{e=0;N=152;break b}case -2:break;default:break k}}if(!n){k[b+(e<<2)>>2]=k[J>>2];e=e+1|0}}while(!(t&(e|0)==(q|0)));e=q<<1|1;h=xP(b,e<<2)|0;if(!h){e=0;N=152;break b}Q=q;q=e;b=h;e=Q}if(!(VM(I)|0)){e=0;N=152;break b}else{n=e;e=0}}else{if(t){e=uP(q)|0;if(!e){e=0;b=0;N=152;break b}else h=0;while(1){do{b=k[K>>2]|0;if(b>>>0<(k[M>>2]|0)>>>0){k[K>>2]=b+1;b=l[b>>0]|0}else b=yM(a)|0;if(!(i[H+(b+1)>>0]|0)){n=h;b=0;break i}i[e+h>>0]=b;h=h+1|0}while((h|0)!=(q|0));b=q<<1|1;h=xP(e,b)|0;if(!h){b=0;N=152;break b}else{Q=q;q=b;e=h;h=Q}}}if(!x){e=n;while(1){b=k[K>>2]|0;if(b>>>0<e>>>0){k[K>>2]=b+1;b=l[b>>0]|0}else b=yM(a)|0;if(!(i[H+(b+1)>>0]|0)){n=0;e=0;b=0;break i}e=k[M>>2]|0}}else{e=0;while(1){b=k[K>>2]|0;if(b>>>0<n>>>0){k[K>>2]=b+1;b=l[b>>0]|0}else b=yM(a)|0;if(!(i[H+(b+1)>>0]|0)){n=e;e=x;b=0;break i}i[x+e>>0]=b;n=k[M>>2]|0;e=e+1|0}}}while(0);h=k[K>>2]|0;if(k[M>>2]|0){h=h+-1|0;k[K>>2]=h}h=h-(k[z>>2]|0)+(k[F>>2]|0)|0;if(!h)break b;if(!((h|0)==(v|0)|u^1))break b;do if(t)if(s){k[x>>2]=b;break}else{k[x>>2]=e;break}while(0);if(!u){if(b)k[b+(n<<2)>>2]=0;if(!e){e=0;break f}i[e+n>>0]=0}break}case 120:case 88:case 112:{h=16;N=134;break}case 111:{h=8;N=134;break}case 117:case 100:{h=10;N=134;break}case 105:{h=0;N=134;break}case 71:case 103:case 70:case 102:case 69:case 101:case 65:case 97:{m=+uM(a,t,0);if((k[F>>2]|0)==((k[z>>2]|0)-(k[K>>2]|0)|0))break b;if(x)switch(t|0){case 0:{o[x>>2]=m;break f}case 1:{p[x>>3]=m;break f}case 2:{p[x>>3]=m;break f}default:break f}break}default:{}}while(0);l:do if((N|0)==134){N=0;h=vM(a,h,0,-1,-1)|0;if((k[F>>2]|0)==((k[z>>2]|0)-(k[K>>2]|0)|0))break b;if((x|0)!=0&(q|0)==112){k[x>>2]=h;break}if(x)switch(t|0){case -2:{i[x>>0]=h;break l}case -1:{j[x>>1]=h;break l}case 0:{k[x>>2]=h;break l}case 1:{k[x>>2]=h;break l}case 3:{Q=x;k[Q>>2]=h;k[Q+4>>2]=L;break l}default:break l}}while(0);d=((x|0)!=0&1)+d|0;h=(k[F>>2]|0)+w+(k[K>>2]|0)-(k[z>>2]|0)|0;break c}while(0);g=g+(f&1)|0;xM(a,0);f=k[K>>2]|0;if(f>>>0<(k[M>>2]|0)>>>0){k[K>>2]=f+1;f=l[f>>0]|0}else f=yM(a)|0;if((f|0)!=(l[g>>0]|0)){N=21;break b}h=s+1|0}else{while(1){f=g+1|0;if(!(_L(l[f>>0]|0)|0))break;else g=f}xM(a,0);do{f=k[K>>2]|0;if(f>>>0<(k[M>>2]|0)>>>0){k[K>>2]=f+1;f=l[f>>0]|0}else f=yM(a)|0}while((_L(f)|0)!=0);f=k[K>>2]|0;if(k[M>>2]|0){f=f+-1|0;k[K>>2]=f}h=(k[F>>2]|0)+s+f-(k[z>>2]|0)|0}while(0);g=g+1|0;f=i[g>>0]|0;if(!(f<<24>>24))break a;else s=h}if((N|0)==21){if(k[M>>2]|0)k[K>>2]=(k[K>>2]|0)+-1;if((d|0)!=0|(f|0)>-1)break;else{d=0;N=153}}else if((N|0)==152)if(!d){d=f;N=153}if((N|0)==153){f=d;d=-1}if(f){vP(e);vP(b)}}else d=0;while(0);if(O)nN(a);r=P;return d|0}function ZN(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,l=0,m=0;m=r;r=r+128|0;e=m+112|0;l=m;f=l;g=98540;h=f+112|0;do{k[f>>2]=k[g>>2];f=f+4|0;g=g+4|0}while((f|0)<(h|0));if((b+-1|0)>>>0>2147483646)if(!b){b=1;j=4}else{b=sM()|0;k[b>>2]=75;b=-1}else{e=a;j=4}if((j|0)==4){j=-2-e|0;j=b>>>0>j>>>0?j:b;k[l+48>>2]=j;a=l+20|0;k[a>>2]=e;k[l+44>>2]=e;b=e+j|0;e=l+16|0;k[e>>2]=b;k[l+28>>2]=b;b=XN(l,c,d)|0;if(j){c=k[a>>2]|0;i[c+(((c|0)==(k[e>>2]|0))<<31>>31)>>0]=0}}r=m;return b|0}function _N(a,b,c){a=a|0;b=b|0;c=c|0;return ZN(a,2147483647,b,c)|0}function $N(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;f=r;r=r+112|0;d=f;e=d;g=e+112|0;do{k[e>>2]=0;e=e+4|0}while((e|0)<(g|0));k[d+32>>2]=48;k[d+44>>2]=a;k[d+76>>2]=-1;k[d+84>>2]=a;g=YN(d,b,c)|0;r=f;return g|0}function aO(a){a=a|0;return +(+eO(a,0))}function bO(a){a=a|0;var b=0,c=0,d=0,e=0;while(1){b=a+1|0;if(!(_L(i[a>>0]|0)|0))break;else a=b}c=i[a>>0]|0;switch(c<<24>>24|0){case 45:{d=1;e=5;break}case 43:{d=0;e=5;break}default:d=0}if((e|0)==5){a=b;c=i[b>>0]|0}b=(c<<24>>24)+-48|0;if(b>>>0<10){c=a;a=0;do{c=c+1|0;a=(a*10|0)-b|0;b=(i[c>>0]|0)+-48|0}while(b>>>0<10)}else a=0;return ((d|0)!=0?a:0-a|0)|0}function cO(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;a:do if(!c)b=0;else{h=b;while(1){g=c>>>1;b=h+(ha(g,d)|0)|0;f=_b[e&127](a,b)|0;if(!f)break a;if((c|0)==1){b=0;break a}f=(f|0)<0;c=f?g:c-g|0;if(!c){b=0;break}else h=f?h:b}}while(0);return b|0}function dO(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0;q=r;r=r+208|0;n=q+8|0;o=q;e=ha(c,b)|0;m=o;k[m>>2]=1;k[m+4>>2]=0;if(e){h=e-c|0;k[n+4>>2]=c;k[n>>2]=c;f=c;b=c;g=2;while(1){b=b+c+f|0;k[n+(g<<2)>>2]=b;if(b>>>0<e>>>0){m=f;f=b;g=g+1|0;b=m}else break}m=0-c|0;i=a+h|0;l=o+4|0;if((h|0)>0){h=i;e=1;g=1;while(1){do if((e&3|0)==3){dP(a,c,d,g,n);j=k[l>>2]|0;b=j<<30|(k[o>>2]|0)>>>2;k[o>>2]=b;k[l>>2]=j>>>2;g=g+2|0}else{b=g+-1|0;if((k[n+(b<<2)>>2]|0)>>>0<(h-a|0)>>>0)dP(a,c,d,g,n);else eP(a,c,d,o,g,0,n);if((g|0)==1){b=k[o>>2]|0;k[l>>2]=b>>>31|k[l>>2]<<1;b=b<<1;k[o>>2]=b;g=0;break}if(b>>>0>31){e=k[o>>2]|0;k[l>>2]=e;k[o>>2]=0;b=g+-33|0;f=0}else{e=k[l>>2]|0;f=k[o>>2]|0}k[l>>2]=f>>>(32-b|0)|e<<b;b=f<<b;k[o>>2]=b;g=1}while(0);e=b|1;k[o>>2]=e;b=a+c|0;if(b>>>0>=i>>>0){e=b;break}else a=b}}else{e=a;g=1}eP(e,c,d,o,g,0,n);j=o+4|0;b=k[o>>2]|0;if(!((g|0)==1&(b|0)==1&(k[j>>2]|0)==0)){f=e;while(1){if((g|0)<2){e=b+-1|0;do if(e){if(!(e&1)){h=e;e=0;do{e=e+1|0;h=h>>>1}while((h&1|0)==0);if(!e)p=24}else p=24;if((p|0)==24){p=0;i=k[l>>2]|0;if(!i){e=64;p=30;break}if(!(i&1)){h=i;e=0}else{a=0;h=i;e=0;break}while(1){a=e+1|0;h=h>>>1;if(h&1){h=a;break}else e=a}if(!h){a=0;h=i;e=0;break}else e=e+33|0}if(e>>>0>31)p=30;else{a=e;h=k[l>>2]|0}}else{e=32;p=30}while(0);if((p|0)==30){p=0;b=k[l>>2]|0;k[o>>2]=b;k[l>>2]=0;a=e+-32|0;h=0}k[o>>2]=h<<32-a|b>>>a;k[l>>2]=h>>>a;f=f+m|0;e=e+g|0}else{a=b>>>30;i=a|k[l>>2]<<2;e=g+-2|0;k[o>>2]=(b<<1&2147483646|a<<31)^3;k[l>>2]=i>>>1;eP(f+(0-((k[n+(e<<2)>>2]|0)+c))|0,c,d,o,g+-1|0,1,n);i=k[o>>2]|0;k[l>>2]=i>>>31|k[l>>2]<<1;k[o>>2]=i<<1|1;f=f+m|0;eP(f,c,d,o,e,1,n)}b=k[o>>2]|0;if((e|0)==1&(b|0)==1&(k[j>>2]|0)==0)break;else g=e}}}r=q;return}function eO(a,b){a=a|0;b=b|0;return +(+fP(a,b,1))}function fO(a,b,c){a=a|0;b=b|0;c=c|0;a=gP(a,b,c,-1,0)|0;return a|0}function gO(a,b,c){a=a|0;b=b|0;c=c|0;a=gP(a,b,c,-2147483648,0)|0;return a|0}function hO(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;f=b&255;d=(c|0)!=0;a:do if(d&(a&3|0)!=0){e=b&255;while(1){if((i[a>>0]|0)==e<<24>>24){g=6;break a}a=a+1|0;c=c+-1|0;d=(c|0)!=0;if(!(d&(a&3|0)!=0)){g=5;break}}}else g=5;while(0);if((g|0)==5)if(d)g=6;else c=0;b:do if((g|0)==6){e=b&255;if((i[a>>0]|0)!=e<<24>>24){d=ha(f,16843009)|0;c:do if(c>>>0>3)while(1){f=k[a>>2]^d;if((f&-2139062144^-2139062144)&f+-16843009)break;a=a+4|0;c=c+-4|0;if(c>>>0<=3){g=11;break c}}else g=11;while(0);if((g|0)==11)if(!c){c=0;break}while(1){if((i[a>>0]|0)==e<<24>>24)break b;a=a+1|0;c=c+-1|0;if(!c){c=0;break}}}}while(0);return ((c|0)!=0?a:0)|0}function iO(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;a:do if(!c)c=0;else{e=c;d=a;while(1){a=i[d>>0]|0;c=i[b>>0]|0;if(a<<24>>24!=c<<24>>24)break;e=e+-1|0;if(!e){c=0;break a}else{d=d+1|0;b=b+1|0}}c=(a&255)-(c&255)|0}while(0);return c|0}function jO(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=b&255;do{if(!c){b=0;break}c=c+-1|0;b=a+c|0}while((i[b>>0]|0)!=d<<24>>24);return b|0}function kO(a,b){a=a|0;b=b|0;var c=0,d=0;c=b;a:do if(!((c^a)&3)){if(c&3)do{c=i[b>>0]|0;i[a>>0]=c;if(!(c<<24>>24))break a;b=b+1|0;a=a+1|0}while((b&3|0)!=0);c=k[b>>2]|0;if(!((c&-2139062144^-2139062144)&c+-16843009)){d=a;while(1){b=b+4|0;a=d+4|0;k[d>>2]=c;c=k[b>>2]|0;if((c&-2139062144^-2139062144)&c+-16843009)break;else d=a}}d=8}else d=8;while(0);if((d|0)==8){d=i[b>>0]|0;i[a>>0]=d;if(d<<24>>24)do{b=b+1|0;a=a+1|0;d=i[b>>0]|0;i[a>>0]=d}while(d<<24>>24!=0)}return a|0}function lO(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;e=b;do if(!((e^a)&3)){d=(c|0)!=0;a:do if(d&(e&3|0)!=0)while(1){e=i[b>>0]|0;i[a>>0]=e;if(!(e<<24>>24))break a;c=c+-1|0;b=b+1|0;a=a+1|0;d=(c|0)!=0;if(!(d&(b&3|0)!=0)){f=5;break}}else f=5;while(0);if((f|0)==5)if(!d){c=0;break}if(i[b>>0]|0){b:do if(c>>>0>3)do{d=k[b>>2]|0;if((d&-2139062144^-2139062144)&d+-16843009)break b;k[a>>2]=d;c=c+-4|0;b=b+4|0;a=a+4|0}while(c>>>0>3);while(0);f=11}}else f=11;while(0);c:do if((f|0)==11)if(!c)c=0;else while(1){f=i[b>>0]|0;i[a>>0]=f;if(!(f<<24>>24))break c;c=c+-1|0;a=a+1|0;if(!c){c=0;break}else b=b+1|0}while(0);IP(a|0,0,c|0)|0;return a|0}function mO(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;c=i[a>>0]|0;a:do if(!(c<<24>>24))a=0;else{e=c;d=c&255;while(1){c=i[b>>0]|0;if(!(c<<24>>24)){a=e;break a}if(e<<24>>24!=c<<24>>24?(e=oM(d)|0,(e|0)!=(oM(l[b>>0]|0)|0)):0)break;a=a+1|0;b=b+1|0;c=i[a>>0]|0;if(!(c<<24>>24)){a=0;break a}else{e=c;d=c&255}}a=i[a>>0]|0}while(0);e=oM(a&255)|0;return e-(oM(l[b>>0]|0)|0)|0}function nO(a,b){a=a|0;b=b|0;rO(a+(uO(a)|0)|0,b)|0;return a|0}function oO(a,b){a=a|0;b=b|0;a=pO(a,b)|0;return ((i[a>>0]|0)==(b&255)<<24>>24?a:0)|0}function pO(a,b){a=a|0;b=b|0;var c=0,d=0,e=0;d=b&255;a:do if(!d)a=a+(uO(a)|0)|0;else{if(a&3){c=b&255;do{e=i[a>>0]|0;if(e<<24>>24==0?1:e<<24>>24==c<<24>>24)break a;a=a+1|0}while((a&3|0)!=0)}d=ha(d,16843009)|0;c=k[a>>2]|0;b:do if(!((c&-2139062144^-2139062144)&c+-16843009))do{e=c^d;if((e&-2139062144^-2139062144)&e+-16843009)break b;a=a+4|0;c=k[a>>2]|0}while(((c&-2139062144^-2139062144)&c+-16843009|0)==0);while(0);c=b&255;while(1){e=i[a>>0]|0;if(e<<24>>24==0?1:e<<24>>24==c<<24>>24)break;else a=a+1|0}}while(0);return a|0}function qO(a,b){a=a|0;b=b|0;var c=0,d=0;d=i[a>>0]|0;c=i[b>>0]|0;if(d<<24>>24==0?1:d<<24>>24!=c<<24>>24)b=d;else{do{a=a+1|0;b=b+1|0;d=i[a>>0]|0;c=i[b>>0]|0}while(!(d<<24>>24==0?1:d<<24>>24!=c<<24>>24));b=d}return (b&255)-(c&255)|0}function rO(a,b){a=a|0;b=b|0;kO(a,b)|0;return a|0}function sO(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;e=r;r=r+32|0;d=e;c=i[b>>0]|0;if(c<<24>>24!=0?(i[b+1>>0]|0)!=0:0){k[d>>2]=0;k[d+4>>2]=0;k[d+8>>2]=0;k[d+12>>2]=0;k[d+16>>2]=0;k[d+20>>2]=0;k[d+24>>2]=0;k[d+28>>2]=0;do{f=d+(((c&255)>>>5&255)<<2)|0;k[f>>2]=k[f>>2]|1<<(c&31);b=b+1|0;c=i[b>>0]|0}while(c<<24>>24!=0);b=i[a>>0]|0;a:do if(!(b<<24>>24))c=a;else{c=a;do{if(k[d+(((b&255)>>>5&255)<<2)>>2]&1<<(b&31))break a;c=c+1|0;b=i[c>>0]|0}while(b<<24>>24!=0)}while(0);c=c-a|0}else c=(pO(a,c<<24>>24)|0)-a|0;r=e;return c|0}function tO(a){a=a|0;var b=0,c=0;c=(uO(a)|0)+1|0;b=uP(c)|0;if(!b)b=0;else GP(b|0,a|0,c|0)|0;return b|0}function uO(a){a=a|0;var b=0,c=0,d=0;d=a;a:do if(!(d&3))c=4;else{b=a;a=d;while(1){if(!(i[b>>0]|0))break a;b=b+1|0;a=b;if(!(a&3)){a=b;c=4;break}}}while(0);if((c|0)==4){while(1){b=k[a>>2]|0;if(!((b&-2139062144^-2139062144)&b+-16843009))a=a+4|0;else break}if((b&255)<<24>>24)do a=a+1|0;while((i[a>>0]|0)!=0)}return a-d|0}function vO(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;if(!c)b=0;else{d=i[a>>0]|0;a:do if(!(d<<24>>24))a=0;else{f=d;e=d&255;while(1){c=c+-1|0;d=i[b>>0]|0;if(!((c|0)!=0&d<<24>>24!=0)){a=f;break a}if(f<<24>>24!=d<<24>>24?(f=oM(e)|0,(f|0)!=(oM(l[b>>0]|0)|0)):0)break;a=a+1|0;b=b+1|0;d=i[a>>0]|0;if(!(d<<24>>24)){a=0;break a}else{f=d;e=d&255}}a=i[a>>0]|0}while(0);f=oM(a&255)|0;b=f-(oM(l[b>>0]|0)|0)|0}return b|0}function wO(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if(!c)b=0;else{d=i[a>>0]|0;a:do if(!(d<<24>>24))d=0;else while(1){c=c+-1|0;e=i[b>>0]|0;if(!(d<<24>>24==e<<24>>24&((c|0)!=0&e<<24>>24!=0)))break a;a=a+1|0;b=b+1|0;d=i[a>>0]|0;if(!(d<<24>>24)){d=0;break}}while(0);b=(d&255)-(l[b>>0]|0)|0}return b|0}function xO(a,b,c){a=a|0;b=b|0;c=c|0;lO(a,b,c)|0;return a|0}function yO(a,b){a=a|0;b=b|0;a=a+(sO(a,b)|0)|0;return ((i[a>>0]|0)!=0?a:0)|0}function zO(a,b){a=a|0;b=b|0;return jO(a,b,(uO(a)|0)+1|0)|0}function AO(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=r;r=r+32|0;e=f;k[e>>2]=0;k[e+4>>2]=0;k[e+8>>2]=0;k[e+12>>2]=0;k[e+16>>2]=0;k[e+20>>2]=0;k[e+24>>2]=0;k[e+28>>2]=0;d=i[b>>0]|0;do if(!(d<<24>>24))b=0;else{if(!(i[b+1>>0]|0)){b=a;while(1)if((i[b>>0]|0)==d<<24>>24)b=b+1|0;else break;b=b-a|0;break}else{c=b;b=d}do{d=e+(((b&255)>>>5&255)<<2)|0;k[d>>2]=k[d>>2]|1<<(b&31);c=c+1|0;b=i[c>>0]|0}while(b<<24>>24!=0);c=i[a>>0]|0;a:do if(!(c<<24>>24))b=a;else{b=a;do{if(!(k[e+(((c&255)>>>5&255)<<2)>>2]&1<<(c&31)))break a;b=b+1|0;c=i[b>>0]|0}while(c<<24>>24!=0)}while(0);b=b-a|0}while(0);r=f;return b|0}function BO(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,j=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0;w=r;r=r+1056|0;u=w+1024|0;v=w;g=i[b>>0]|0;do if(g<<24>>24){t=oO(a,g<<24>>24)|0;if(t){f=i[b+1>>0]|0;if(f<<24>>24){c=t+1|0;j=i[c>>0]|0;if(j<<24>>24){e=i[b+2>>0]|0;if(!(e<<24>>24)){g=f&255|(g&255)<<8;a=j;f=t;d=l[t>>0]<<8|j&255;while(1){e=d&65535;if((e|0)==(g|0)){c=f;break}a=c+1|0;d=i[a>>0]|0;if(!(d<<24>>24)){a=0;break}else{f=c;c=a;a=d;d=d&255|e<<8}}a=a<<24>>24!=0?c:0;break}c=t+2|0;h=i[c>>0]|0;if(h<<24>>24){d=i[b+3>>0]|0;if(!(d<<24>>24)){e=(f&255)<<16|(g&255)<<24|(e&255)<<8;a=(h&255)<<8|(j&255)<<16|l[t>>0]<<24;if((a|0)==(e|0))a=h;else{d=a;do{c=c+1|0;a=i[c>>0]|0;d=(a&255|d)<<8}while(!(a<<24>>24==0|(d|0)==(e|0)))}a=a<<24>>24!=0?c+-2|0:0;break}c=t+3|0;a=i[c>>0]|0;if(a<<24>>24){if(!(i[b+4>>0]|0)){e=(f&255)<<16|(g&255)<<24|(e&255)<<8|d&255;d=(h&255)<<8|(j&255)<<16|a&255|l[t>>0]<<24;if((d|0)!=(e|0))do{c=c+1|0;a=i[c>>0]|0;d=a&255|d<<8}while(!(a<<24>>24==0|(d|0)==(e|0)));a=a<<24>>24!=0?c+-3|0:0;break};k[u>>2]=0;k[u+4>>2]=0;k[u+8>>2]=0;k[u+12>>2]=0;k[u+16>>2]=0;k[u+20>>2]=0;k[u+24>>2]=0;k[u+28>>2]=0;a=g;d=0;while(1){if(!(i[t+d>>0]|0)){a=0;break}c=u+(((a&255)>>>5&255)<<2)|0;k[c>>2]=k[c>>2]|1<<(a&31);c=d+1|0;k[v+((a&255)<<2)>>2]=c;a=i[b+c>>0]|0;if(!(a<<24>>24)){m=23;break}else d=c}a:do if((m|0)==23){b:do if(c>>>0>1){e=1;m=-1;a=0;c:while(1){j=1;while(1){d:while(1){f=1;while(1){g=i[b+(f+m)>>0]|0;h=i[b+e>>0]|0;if(g<<24>>24!=h<<24>>24){j=e;f=g;e=h;break d}if((f|0)==(j|0))break;f=f+1|0;e=f+a|0;if(e>>>0>=c>>>0){a=m;o=j;break c}}a=a+j|0;e=a+1|0;if(e>>>0>=c>>>0){a=m;o=j;break c}}g=j-m|0;if((f&255)<=(e&255))break;a=j+1|0;if(a>>>0<c>>>0){e=a;a=j;j=g}else{a=m;o=g;break c}}e=a+2|0;if(e>>>0>=c>>>0){o=1;break}else{m=a;a=a+1|0}}f=1;g=-1;e=0;while(1){h=e;e=1;while(1){n=h;e:while(1){h=1;while(1){m=i[b+(h+g)>>0]|0;j=i[b+f>>0]|0;if(m<<24>>24!=j<<24>>24){h=f;f=n;break e}if((h|0)==(e|0))break;h=h+1|0;f=h+n|0;if(f>>>0>=c>>>0){f=o;break b}}n=n+e|0;f=n+1|0;if(f>>>0>=c>>>0){f=o;break b}}e=h-g|0;if((m&255)>=(j&255)){e=f;break}f=h+1|0;if(f>>>0>=c>>>0){f=o;break b}}f=e+2|0;if(f>>>0>=c>>>0){g=e;f=o;e=1;break}else{g=e;e=e+1|0}}}else{a=-1;g=-1;f=1;e=1}while(0);q=(g+1|0)>>>0>(a+1|0)>>>0;e=q?e:f;q=q?g:a;p=q+1|0;if(!(iO(b,b+e|0,p)|0))s=c-e|0;else{e=c-q+-1|0;s=0;e=(q>>>0>e>>>0?q:e)+1|0}m=c|63;n=(s|0)!=0;o=c-e|0;a=t;j=0;h=t;f:while(1){f=a;do if((h-f|0)>>>0<c>>>0){g=hO(h,0,m)|0;if(g)if((g-f|0)>>>0<c>>>0){a=0;break a}else break;else{g=h+m|0;break}}else g=h;while(0);f=i[a+d>>0]|0;if(!(1<<(f&31)&k[u+(((f&255)>>>5&255)<<2)>>2])){a=a+c|0;j=0;h=g;continue}t=k[v+((f&255)<<2)>>2]|0;f=c-t|0;if((c|0)!=(t|0)){a=a+(n&(j|0)!=0&f>>>0<e>>>0?o:f)|0;j=0;h=g;continue}f=p>>>0>j>>>0?p:j;h=i[b+f>>0]|0;g:do if(!(h<<24>>24))f=p;else{while(1){if(h<<24>>24!=(i[a+f>>0]|0))break;f=f+1|0;h=i[b+f>>0]|0;if(!(h<<24>>24)){f=p;break g}}a=a+(f-q)|0;j=0;h=g;continue f}while(0);do{if(f>>>0<=j>>>0)break a;f=f+-1|0}while((i[b+f>>0]|0)==(i[a+f>>0]|0));a=a+e|0;j=s;h=g}}while(0)}else a=0}else a=0}else a=0}else a=t}else a=0}while(0);r=w;return a|0}function CO(a,b){a=a|0;b=b|0;var c=0,d=0;if(!a){a=k[24663]|0;if(!a)a=0;else{d=a;c=3}}else{d=a;c=3}do if((c|0)==3){c=AO(d,b)|0;a=d+c|0;if(!(i[a>>0]|0)){k[24663]=0;a=0;break}c=(sO(a,b)|0)+c|0;b=d+c|0;k[24663]=b;if(!(i[b>>0]|0)){k[24663]=0;break}else{k[24663]=d+(c+1);i[b>>0]=0;break}}while(0);return a|0}function DO(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;if(!a){a=k[c>>2]|0;if(!a)a=0;else{e=a;d=3}}else{e=a;d=3}do if((d|0)==3){d=AO(e,b)|0;a=e+d|0;if(!(i[a>>0]|0)){k[c>>2]=0;a=0;break}d=(sO(a,b)|0)+d|0;b=e+d|0;k[c>>2]=b;if(!(i[b>>0]|0)){k[c>>2]=0;break}else{k[c>>2]=e+(d+1);i[b>>0]=0;break}}while(0);return a|0}function EO(a,b){a=a|0;b=b|0;var c=0;if(!b)a=a+((FO(a)|0)<<2)|0;else{c=a;while(1){a=k[c>>2]|0;if((a|0)==0|(a|0)==(b|0))break;else c=c+4|0}a=(a|0)!=0?c:0}return a|0}function FO(a){a=a|0;var b=0;b=a;while(1)if(!(k[b>>2]|0))break;else b=b+4|0;return b-a>>2|0}function GO(a,b){a=a|0;b=b|0;var c=0,d=0;c=r;r=r+16|0;d=c;k[d>>2]=a;k[d+4>>2]=b;a=zM(pb(33,d|0)|0)|0;r=c;return a|0}function HO(){var a=0,b=0;b=r;r=r+16|0;a=Ua(20,b|0)|0;r=b;return a|0}function IO(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,k=0;h=(b<<1)+-1|0;g=b+-1|0;a:do if(!((a+-43008|0)>>>0<22272|((a+-11776|0)>>>0<30784|((a+-1536|0)>>>0<2560|(bM(a)|0)==0)))){c=(b|0)!=0;if(c&(a+-4256|0)>>>0<46){if((a|0)>4293)switch(a|0){case 4295:case 4301:break;default:break a}a=a+7264|0;break}if((a+-11520|0)>>>0<38&(c^1)){if((a|0)>11557)switch(a|0){case 11559:case 11565:break;default:break a}a=a+-7264|0;break}else f=0;do{e=i[103672+(f<<2)+2>>0]|0;d=e<<24>>24;c=a-(m[103672+(f<<2)>>1]|0)|0;if((c-(d&g)|0)>>>0<(l[103672+(f<<2)+3>>0]|0)>>>0){k=13;break}f=f+1|0}while((f|0)!=61);if((k|0)==13)if(e<<24>>24==1){a=b+a-(c&1)|0;break}else{a=(ha(d,h)|0)+a|0;break}e=1-b|0;c=j[103180+(e<<1)>>1]|0;b:do if(c<<16>>16){d=0;while(1){if((c&65535|0)==(a|0)){a=d;break}d=d+1|0;c=j[103180+(d<<2)+(e<<1)>>1]|0;if(!(c<<16>>16))break b}a=m[103180+(a<<2)+(b<<1)>>1]|0;break a}while(0);if((a+-66600+(b*40|0)|0)>>>0<40)a=a+-40+(b*80|0)|0}while(0);return a|0}function JO(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0;g=a+4|0;c=k[g>>2]|0;h=a+100|0;if(c>>>0<(k[h>>2]|0)>>>0){k[g>>2]=c+1;c=l[c>>0]|0}else c=yM(a)|0;switch(c|0){case 43:case 45:{d=(c|0)==45&1;c=k[g>>2]|0;if(c>>>0<(k[h>>2]|0)>>>0){k[g>>2]=c+1;c=l[c>>0]|0}else c=yM(a)|0;if((b|0)!=0&(c+-48|0)>>>0>9?(k[h>>2]|0)!=0:0){k[g>>2]=(k[g>>2]|0)+-1;f=d}else f=d;break}default:f=0}if((c+-48|0)>>>0>9)if(!(k[h>>2]|0)){d=-2147483648;c=0}else{k[g>>2]=(k[g>>2]|0)+-1;d=-2147483648;c=0}else{d=0;do{d=c+-48+(d*10|0)|0;c=k[g>>2]|0;if(c>>>0<(k[h>>2]|0)>>>0){k[g>>2]=c+1;c=l[c>>0]|0}else c=yM(a)|0}while((c+-48|0)>>>0<10&(d|0)<214748364);b=((d|0)<0)<<31>>31;if((c+-48|0)>>>0<10){do{b=PP(d|0,b|0,10,0)|0;d=L;c=CP(c|0,((c|0)<0)<<31>>31|0,-48,-1)|0;d=CP(c|0,L|0,b|0,d|0)|0;b=L;c=k[g>>2]|0;if(c>>>0<(k[h>>2]|0)>>>0){k[g>>2]=c+1;c=l[c>>0]|0}else c=yM(a)|0}while((c+-48|0)>>>0<10&((b|0)<21474836|(b|0)==21474836&d>>>0<2061584302));e=d}else e=d;if((c+-48|0)>>>0<10)do{c=k[g>>2]|0;if(c>>>0<(k[h>>2]|0)>>>0){k[g>>2]=c+1;c=l[c>>0]|0}else c=yM(a)|0}while((c+-48|0)>>>0<10);if(k[h>>2]|0)k[g>>2]=(k[g>>2]|0)+-1;a=(f|0)!=0;c=BP(0,0,e|0,b|0)|0;d=a?L:b;c=a?c:e}L=d;return c|0}function KO(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0;Y=r;r=r+432|0;Q=Y+272|0;P=Y+264|0;X=Y+260|0;V=Y+320|0;R=Y+256|0;S=Y;W=Y+268|0;T=Y+416|0;U=Y+384|0;G=k[a+4>>2]|0;J=G+12|0;L=k[J>>2]|0;if(!(k[a+40>>2]|0)){I=a+20|0;k[P>>2]=k[I>>2];k[Q>>2]=k[P>>2];MO(G,Q)|0;k[P>>2]=2;k[Q>>2]=k[P>>2];MO(G,Q)|0;k[I>>2]=(k[I>>2]|0)+1}k[P>>2]=0;k[Q>>2]=k[P>>2];b=MO(G,Q)|0;H=a+12|0;I=a+16|0;k[I>>2]=k[H>>2];c=k[J>>2]|0;d=(b|0)==0;a:do if(!((b|0)!=0|d&(c|0)>(L|0)^1)){u=G+16|0;v=a+36|0;w=a+24|0;x=a+20|0;y=a+28|0;z=T+1|0;A=Q+12|0;B=Q+40|0;C=Q+24|0;D=Q+8|0;f=c;e=0;c=0;b:while(1){t=f+-1|0;k[J>>2]=t;b=k[u>>2]|0;c:do switch(k[b+(t<<2)>>2]|0){case 0:{if((k[v>>2]&1|0)!=0?(k[P>>2]=7,k[Q>>2]=k[P>>2],M=MO(G,Q)|0,(M|0)!=0):0){b=M;break c}k[P>>2]=3;k[Q>>2]=k[P>>2];b=MO(G,Q)|0;break}case 3:{k[P>>2]=5;k[Q>>2]=k[P>>2];b=MO(G,Q)|0;if(!b){k[P>>2]=4;k[Q>>2]=k[P>>2];b=MO(G,Q)|0}break}case 4:{k[P>>2]=9;k[Q>>2]=k[P>>2];b=MO(G,Q)|0;if(!b){k[P>>2]=1;k[Q>>2]=k[P>>2];b=MO(G,Q)|0}break}case 5:{d=k[H>>2]|0;b=i[d>>0]|0;if(b<<24>>24!=0?(N=k[v>>2]&1,O=(N|0)!=0,!(b<<24>>24==124&O)):0){do if(!((c|0)>0&(b<<24>>24==41&O))){if(b<<24>>24==92&(N|0)==0?(i[d+1>>0]|0)==41:0)break;k[P>>2]=5;k[Q>>2]=k[P>>2];b=MO(G,Q)|0;if(b)break c;k[P>>2]=e;k[Q>>2]=k[P>>2];b=MO(G,Q)|0;if(b)break c;k[P>>2]=6;k[Q>>2]=k[P>>2];b=MO(G,Q)|0;if(b)break c;k[P>>2]=4;k[Q>>2]=k[P>>2];b=MO(G,Q)|0;break c}while(0);b=(N|c|0)==0?8:0;c=c+-1|0;if(!N)k[H>>2]=d+2}else b=0;break}case 6:{t=f+-2|0;k[J>>2]=t;e=OO(k[a>>2]|0,k[b+(t<<2)>>2]|0,e)|0;if(!e){b=12;break a}b=0;break}case 7:{b=k[H>>2]|0;switch(i[b>>0]|0){case 124:break;case 41:{k[H>>2]=b+1;b=0;break c}default:{b=0;break c}}k[P>>2]=7;k[Q>>2]=k[P>>2];b=MO(G,Q)|0;if(!b){k[P>>2]=e;k[Q>>2]=k[P>>2];b=MO(G,Q)|0;if(!b){k[P>>2]=8;k[Q>>2]=k[P>>2];b=MO(G,Q)|0;if(!b){k[P>>2]=3;k[Q>>2]=k[P>>2];b=MO(G,Q)|0;if(!b){k[H>>2]=(k[H>>2]|0)+1;b=0}}}}break}case 8:{t=f+-2|0;k[J>>2]=t;e=RO(k[a>>2]|0,k[b+(t<<2)>>2]|0,e)|0;if(!e){b=12;break a}b=0;break}case 9:{f=k[H>>2]|0;b=i[f>>0]|0;switch(b<<24>>24|0){case 63:case 43:{if(!(k[v>>2]&1)){b=0;break c}else E=38;break}case 42:{E=38;break}case 92:{d=k[v>>2]|0;if(d&1){b=0;break c}b=f+1|0;if((i[b>>0]|0)!=123){b=0;break c}k[H>>2]=b;break}case 123:{d=k[v>>2]|0;if(!(d&1)){b=0;break c}else b=f;break}default:{b=0;break c}}if((E|0)==38){E=0;k[H>>2]=f+1;e=PO(k[a>>2]|0,e,b<<24>>24==43&1,b<<24>>24==63?1:-1,0)|0;if(!e){b=12;break a}k[P>>2]=9;k[Q>>2]=k[P>>2];b=MO(G,Q)|0;break c}l=b+1|0;k[H>>2]=l;f=i[l>>0]|0;if((f+-48&255)<10){b=f<<24>>24;if((b+-48|0)>>>0<10){h=b;f=-1;b=l}else{b=10;break a}while(1){j=((f|0)<0?-48:(f*10|0)+-48|0)+h|0;g=b+1|0;f=i[g>>0]|0;h=f<<24>>24;if((h+-48|0)>>>0>=10)break;else{f=j;b=g}}}else{g=l;j=-1}if(f<<24>>24==44){g=b+2|0;f=i[g>>0]|0;b=f<<24>>24;if((b+-48|0)>>>0<10){h=-1;f=g;while(1){h=((h|0)<0?-48:(h*10|0)+-48|0)+b|0;g=f+1|0;f=i[g>>0]|0;b=f<<24>>24;if((b+-48|0)>>>0>=10){E=50;break}else f=g}}else h=-1}else{h=j;E=50}if((E|0)==50){E=0;if((h|0)>-1?(j|0)>(h|0)|(h|0)>255:0){b=10;break a}}if(!(f<<24>>24)){b=9;break a}if((g|0)==(l|0)){b=10;break a}if(!(d&1)){if(f<<24>>24!=92){b=10;break a}if((i[g+1>>0]|0)!=125){b=10;break a}b=g+2|0}else{if(f<<24>>24!=125){b=10;break a}b=g+1|0}if(h|j){t=(h&j|0)<0;e=PO(k[a>>2]|0,e,t?1:j,t?1:h,0)|0;if(!e){b=12;break a}}else{e=QO(k[a>>2]|0,0,20)|0;if(!e){b=12;break a}t=k[e+4>>2]|0;k[t>>2]=-1;k[t+4>>2]=-1;k[t+8>>2]=-1}k[H>>2]=b;k[P>>2]=9;k[Q>>2]=k[P>>2];b=MO(G,Q)|0;break}case 1:{b=k[H>>2]|0;d:do switch(i[b>>0]|0){case 40:{if(k[v>>2]&1)E=67;break}case 91:{d=b+1|0;k[H>>2]=d;t=uP(128)|0;k[R>>2]=t;if(!t){E=72;break b}if((i[d>>0]|0)==94){d=b+2|0;k[H>>2]=d;t=1}else t=0;k[Q>>2]=0;k[P>>2]=32;j=0;e:while(1){switch(i[d>>0]|0){case 0:{s=j;b=7;break e}case 93:{if(d>>>0>(k[H>>2]|0)>>>0){b=j;E=79;break e}break}default:{}}b=WM(X,d,-1)|0;if((b|0)<0){k[X>>2]=-1;b=1}f=d+b|0;if((i[f>>0]|0)==45?(F=b+1|0,K=d+F|0,(i[K>>0]|0)!=93):0){g=k[X>>2]|0;b=WM(X,K,-1)|0;if((b|0)<0){k[X>>2]=-1;f=-1;b=1}else f=k[X>>2]|0;d=d+(b+F)|0;if(g>>>0>f>>>0){s=j;b=11;break}else{e=0;E=102}}else{f:do switch(i[d>>0]|0){case 91:{switch(i[d+1>>0]|0){case 61:case 46:{s=j;b=3;break e}case 58:break;default:{b=0;E=97;break f}}b=d+2|0;f=b;while(1){s=i[f>>0]|0;e=s<<24>>24==0;if(s<<24>>24!=58&(e^1))f=f+1|0;else break}if(e){e=0;b=4}else{e=f-d+-2|0;e=(e|0)>63?63:e;xO(V,b,e)|0;i[V+e>>0]=0;b=fM(V)|0;e=b;d=f+2|0;b=(b|0)==0?4:0}h=1114111;g=0;break}case 45:{if((i[d+1>>0]|0)==93){b=0;E=97}else{b=(k[H>>2]|0)==(d|0)?0:11;E=97}break}default:{b=0;E=97}}while(0);if((E|0)==97){E=0;g=k[X>>2]|0;e=0;h=g;d=f}if(b){s=j;break}if(t&(e|0)!=0)if((j|0)>63){f=h;b=12}else{k[S+(j<<2)>>2]=e;j=j+1|0;f=h;b=0}else{f=h;E=102}}if((E|0)==102){E=0;b=sP(k[a>>2]|0,g,f,Q,P,R)|0;if(b){s=j;break}k[(k[(k[(k[R>>2]|0)+((k[Q>>2]|0)+-1<<2)>>2]|0)+4>>2]|0)+12>>2]=e;b=0}if((b|e|0)!=0|(k[v>>2]&2|0)==0)if(!b)continue;else{s=j;break}while(1){if(g>>>0>f>>>0)break;if(!(iM(g)|0)){e=g+1|0;if(mM(g)|0){h=rM(g)|0;g:do if(!(mM(e)|0))b=h;else{b=h;while(1){if(e>>>0>f>>>0|(rM(e)|0)!=(b+1|0))break g;g=e+1|0;b=rM(e)|0;if(!(mM(g)|0)){e=g;break}else e=g}}while(0);b=sP(k[a>>2]|0,h,b,Q,P,R)|0}}else{h=qM(g)|0;b=g+1|0;h:do if(!(iM(b)|0))g=h;else{e=h;while(1){if(b>>>0>f>>>0|(qM(b)|0)!=(e+1|0)){g=e;break h}e=qM(b)|0;b=b+1|0;if(!(iM(b)|0)){g=e;break}}}while(0);e=b;b=sP(k[a>>2]|0,h,g,Q,P,R)|0}if(!b){g=e;b=0}else{s=j;break e}}if(b){s=j;break}}if((E|0)==79){E=0;s=b;d=d+1|0;b=0}q=k[Q>>2]|0;k[H>>2]=d;i:do if(!b){if(t)dO(k[R>>2]|0,q,4,113);if((q|0)>0){m=(s|0)>0;n=s<<2;o=n+4|0;l=k[R>>2]|0;j=0;d=0;p=0;e=0;while(1){b=k[(k[l+(p<<2)>>2]|0)+4>>2]|0;f=k[b>>2]|0;g=b+4|0;h=k[g>>2]|0;do if(t){if((f|0)<(j|0)){f=h+1|0;g=l;f=(f|0)>=(j|0)?f:j;b=0;break}if((f|0)>(d|0)){k[b>>2]=d;k[g>>2]=f+-1}else b=0;d=h+1|0;j=d;E=129}else E=129;while(0);do if((E|0)==129){E=0;if(b){k[b+8>>2]=k[w>>2];if(m){f=iN(k[a>>2]|0,0,0,0,o)|0;b=b+16|0;k[b>>2]=f;if(!f){b=12;break i}GP(f|0,S|0,n|0)|0;k[(k[b>>2]|0)+(s<<2)>>2]=0}else k[b+16>>2]=0;if(!e){e=k[R>>2]|0;g=e;f=j;e=k[e+(p<<2)>>2]|0;b=0;break}else{g=k[R>>2]|0;b=RO(k[a>>2]|0,e,k[g+(p<<2)>>2]|0)|0;f=j;e=b;b=(b|0)==0?12:0;break}}else{g=l;f=j;b=0}}while(0);p=p+1|0;if(!((p|0)<(q|0)&(b|0)==0)){h=e;break}else{l=g;j=f}}}else{d=0;h=0;b=0}if(t&(b|0)==0){b=k[w>>2]|0;e=QO(k[a>>2]|0,0,20)|0;if(e){g=k[e+4>>2]|0;k[g>>2]=d;k[g+4>>2]=1114111;k[g+8>>2]=b;if((s|0)>0){d=s<<2;f=iN(k[a>>2]|0,0,0,0,d+4|0)|0;b=g+16|0;k[b>>2]=f;if(!f){e=h;b=12;break}GP(f|0,S|0,d|0)|0;k[(k[b>>2]|0)+(s<<2)>>2]=0}else k[g+16>>2]=0;if(!h)b=0;else{b=RO(k[a>>2]|0,h,e)|0;e=b;b=(b|0)==0?12:0}}else{e=h;b=12}}else e=h}else e=0;while(0);vP(k[R>>2]|0);k[w>>2]=(k[w>>2]|0)+1;if(!b){b=0;break c}else break a}case 92:{d=b+1|0;f=i[d>>0]|0;do if(!(k[v>>2]&1))if(f<<24>>24!=40){d=b+1|0;e=i[d>>0]|0;if(e<<24>>24==41){E=210;break d}else{f=e;break}}else{k[H>>2]=d;b=d;E=67;break d}while(0);h=f<<24>>24==0;if(h){b=5;break a}else{e=98996;g=0}do{if((i[98992+(g<<3)>>0]|0)==f<<24>>24)break;g=g+1|0;e=98992+(g<<3)+4|0}while((g|0)!=12);f=k[e>>2]|0;if(f){b=Q;d=a;e=b+40|0;do{k[b>>2]=k[d>>2];b=b+4|0;d=d+4|0}while((b|0)<(e|0));k[A>>2]=f;k[B>>2]=1;b=KO(Q)|0;if(b){E=156;break b}k[H>>2]=(k[H>>2]|0)+2;k[w>>2]=k[C>>2];e=k[D>>2]|0;b=0;break c}if(h){b=5;break a}k[H>>2]=d;d=i[d>>0]|0;j:do switch(d|0){case 98:{e=QO(k[a>>2]|0,0,20)|0;if(!e)e=0;else{t=k[e+4>>2]|0;k[t>>2]=-2;k[t+4>>2]=64;k[t+8>>2]=-1}k[H>>2]=(k[H>>2]|0)+1;break}case 66:{e=QO(k[a>>2]|0,0,20)|0;if(!e)e=0;else{t=k[e+4>>2]|0;k[t>>2]=-2;k[t+4>>2]=128;k[t+8>>2]=-1}k[H>>2]=(k[H>>2]|0)+1;break}case 60:{e=QO(k[a>>2]|0,0,20)|0;if(!e)e=0;else{t=k[e+4>>2]|0;k[t>>2]=-2;k[t+4>>2]=16;k[t+8>>2]=-1}k[H>>2]=(k[H>>2]|0)+1;break}case 62:{e=QO(k[a>>2]|0,0,20)|0;if(!e)e=0;else{t=k[e+4>>2]|0;k[t>>2]=-2;k[t+4>>2]=32;k[t+8>>2]=-1}k[H>>2]=(k[H>>2]|0)+1;break}case 120:{d=b+2|0;k[H>>2]=d;d=i[d>>0]|0;if(d<<24>>24==123){b=b+3|0;k[H>>2]=b;e=0;k:while(1){d=i[b>>0]|0;switch(d<<24>>24){case 0:case 125:{d=e;break k}default:{}}if(!(nM(d<<24>>24)|0)){b=9;break a}b=k[H>>2]|0;i[U+e>>0]=i[b>>0]|0;d=e+1|0;b=b+1|0;k[H>>2]=b;if(d>>>0>31)break;else e=d}k[H>>2]=b+1;i[U+d>>0]=0;b=gO(U,0,16)|0;d=k[w>>2]|0;e=QO(k[a>>2]|0,0,20)|0;if(!e)e=0;else{t=k[e+4>>2]|0;k[t>>2]=b;k[t+4>>2]=b;k[t+8>>2]=d}k[w>>2]=(k[w>>2]|0)+1;break j}else{i[T>>0]=0;i[T+1>>0]=0;i[T+2>>0]=0;t=(nM(d<<24>>24)|0)==0;b=k[H>>2]|0;if(!t){i[T>>0]=i[b>>0]|0;b=b+1|0;k[H>>2]=b}if(nM(i[b>>0]|0)|0){t=k[H>>2]|0;i[z>>0]=i[t>>0]|0;k[H>>2]=t+1}b=gO(T,0,16)|0;d=k[w>>2]|0;e=QO(k[a>>2]|0,0,20)|0;if(!e)e=0;else{t=k[e+4>>2]|0;k[t>>2]=b;k[t+4>>2]=b;k[t+8>>2]=d}k[w>>2]=(k[w>>2]|0)+1;break j}}default:{t=(gM(d)|0)==0;b=k[H>>2]|0;if(t)break d;b=(i[b>>0]|0)+-48|0;d=k[w>>2]|0;e=QO(k[a>>2]|0,0,20)|0;if(!e){b=12;break a}t=k[e+4>>2]|0;k[t>>2]=-4;k[t+4>>2]=b;k[t+8>>2]=d;k[w>>2]=(k[w>>2]|0)+1;t=k[y>>2]|0;k[y>>2]=(b|0)<(t|0)?t:b;k[H>>2]=(k[H>>2]|0)+1;b=0;break c}}while(0);if(!e){b=12;break a}else{b=0;break c}}case 46:{t=(k[v>>2]&4|0)==0;b=k[w>>2]|0;e=QO(k[a>>2]|0,0,20)|0;d=(e|0)==0;if(t){if(d){b=12;break a}t=k[e+4>>2]|0;k[t>>2]=0;k[t+4>>2]=1114111;k[t+8>>2]=b;b=(k[w>>2]|0)+1|0}else{if(d){b=12;break a}d=k[e+4>>2]|0;k[d>>2]=0;k[d+4>>2]=9;k[d+8>>2]=b;b=k[w>>2]|0;d=QO(k[a>>2]|0,0,20)|0;if(!d){b=12;break a}t=k[d+4>>2]|0;k[t>>2]=11;k[t+4>>2]=1114111;k[t+8>>2]=b+1;e=RO(k[a>>2]|0,e,d)|0;if(!e){b=12;break a}b=(k[w>>2]|0)+2|0}k[w>>2]=b;k[H>>2]=(k[H>>2]|0)+1;b=0;break c}case 94:{if(!(k[v>>2]&1)){if((b|0)!=(k[I>>2]|0))break d;k[P>>2]=5;k[Q>>2]=k[P>>2];b=MO(G,Q)|0;if(b)break c}e=QO(k[a>>2]|0,0,20)|0;if(!e){b=12;break a}b=k[e+4>>2]|0;k[b>>2]=-2;k[b+4>>2]=1;k[b+8>>2]=-1;k[H>>2]=(k[H>>2]|0)+1;b=0;break c}case 36:{if((k[v>>2]&1|0)==0?(i[b+1>>0]|0)!=0:0)break d;e=QO(k[a>>2]|0,0,20)|0;if(!e){b=12;break a}b=k[e+4>>2]|0;k[b>>2]=-2;k[b+4>>2]=2;k[b+8>>2]=-1;k[H>>2]=(k[H>>2]|0)+1;b=0;break c}case 41:{if(c)E=209;break}case 63:case 43:case 123:case 124:case 42:{E=209;break}case 0:{E=210;break}default:{}}while(0);if((E|0)==67){E=0;c=c+1|0;k[H>>2]=b+1;k[P>>2]=k[x>>2];k[Q>>2]=k[P>>2];b=MO(G,Q)|0;if(b)break c;k[P>>2]=2;k[Q>>2]=k[P>>2];b=MO(G,Q)|0;if(b)break c;k[P>>2]=0;k[Q>>2]=k[P>>2];b=MO(G,Q)|0;if(b)break c;k[x>>2]=(k[x>>2]|0)+1;b=0;break c}else if((E|0)==209){E=0;if(k[v>>2]&1)E=210}if((E|0)==210){E=0;e=QO(k[a>>2]|0,0,20)|0;if(!e){b=12;break a}b=k[e+4>>2]|0;k[b>>2]=-1;k[b+4>>2]=-1;k[b+8>>2]=-1;b=0;break c}b=WM(W,b,-1)|0;if((b|0)<0){k[W>>2]=-1;b=1}do if(k[v>>2]&2){if((mM(k[W>>2]|0)|0)==0?(iM(k[W>>2]|0)|0)==0:0){E=220;break}h=k[a>>2]|0;d=qM(k[W>>2]|0)|0;e=qM(k[W>>2]|0)|0;f=k[w>>2]|0;h=QO(h,0,20)|0;if(!h){b=12;break a}g=k[h+4>>2]|0;k[g>>2]=d;k[g+4>>2]=e;k[g+8>>2]=f;g=k[a>>2]|0;d=rM(k[W>>2]|0)|0;e=rM(k[W>>2]|0)|0;f=k[w>>2]|0;g=QO(g,0,20)|0;if(!g){b=12;break a}t=k[g+4>>2]|0;k[t>>2]=d;k[t+4>>2]=e;k[t+8>>2]=f;e=RO(k[a>>2]|0,h,g)|0;if(!e){b=12;break a}}else E=220;while(0);if((E|0)==220){E=0;d=k[W>>2]|0;f=k[w>>2]|0;e=QO(k[a>>2]|0,0,20)|0;if(!e){b=12;break a}t=k[e+4>>2]|0;k[t>>2]=d;k[t+4>>2]=d;k[t+8>>2]=f}k[w>>2]=(k[w>>2]|0)+1;k[H>>2]=(k[H>>2]|0)+b;b=0;break}case 2:{f=f+-2|0;k[J>>2]=f;f=k[b+(f<<2)>>2]|0;d=e;if((k[d+12>>2]|0)>-1){b=QO(k[a>>2]|0,0,20)|0;if(!b){b=12;break a}e=k[b+4>>2]|0;k[e>>2]=-1;k[e+4>>2]=-1;k[e+8>>2]=-1;e=OO(k[a>>2]|0,b,d)|0;if(!e){b=12;break a}k[e+16>>2]=k[d+16>>2]}b=e;k[b+12>>2]=f;b=b+16|0;k[b>>2]=(k[b>>2]|0)+1;b=0;break}case 10:{t=f+-2|0;k[J>>2]=t;k[v>>2]=k[b+(t<<2)>>2];b=0;break}default:b=0}while(0);f=k[J>>2]|0;d=(b|0)==0;if((b|0)!=0|d&(f|0)>(L|0)^1){E=229;break a}}if((E|0)==72){b=12;break}else if((E|0)==156)break}else{e=0;c=0;E=229}while(0);if((E|0)==229){c=(c|0)>0;if(c|d^1)b=c?8:b;else k[a+8>>2]=e}r=Y;return b|0}function LO(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0;G=r;r=r+16|0;C=G+4|0;B=G;z=b+12|0;A=k[z>>2]|0;D=(a|0)==0|(d|0)==0;if(!D){k[d+48>>2]=0;k[k[d+36>>2]>>2]=-1}e=k[d+28>>2]|0;E=uP((e<<3)+8|0)|0;do if(!E)e=12;else{k[E>>2]=-1;F=uP((e<<2)+4|0)|0;if(!F){vP(E);e=12;break}k[F>>2]=-1;f=0;while(1)if(f>>>0>e>>>0)break;else f=f+1|0;k[B>>2]=c;k[C>>2]=k[B>>2];MO(b,C)|0;k[B>>2]=0;k[C>>2]=k[B>>2];e=MO(b,C)|0;f=k[z>>2]|0;a:do if((e|0)!=0|(f|0)<=(A|0)){n=-1;f=0;m=0;c=E;l=0}else{v=b+16|0;w=d+32|0;x=d+36|0;y=d+16|0;q=f;t=0;g=-1;u=1;f=0;m=0;c=E;l=0;while(1){s=q+-1|0;k[z>>2]=s;p=k[v>>2]|0;b:do switch(k[p+(s<<2)>>2]|0){case 6:{j=q+-2|0;k[z>>2]=j;j=k[p+(j<<2)>>2]|0;e=0;do{h=c+(e<<2)|0;e=e+1|0}while((k[h>>2]|0)>-1);k[h>>2]=j<<1|1;k[c+(e<<2)>>2]=-1;e=0;while(1)if((k[F+(e<<2)>>2]|0)>-1)e=e+1|0;else break;k[F+(e+-1<<2)>>2]=-1;j=t;h=u;e=0;break}case 0:{q=q+-2|0;k[z>>2]=q;q=k[p+(q<<2)>>2]|0;s=q+12|0;j=k[s>>2]|0;if((j|0)>-1){e=0;do{h=c+(e<<2)|0;e=e+1|0}while((k[h>>2]|0)>-1);k[h>>2]=j<<1;k[c+(e<<2)>>2]=-1;if(!D){e=0;while(1)if((k[F+(e<<2)>>2]|0)>-1)e=e+1|0;else break;h=(k[y>>2]|0)+(j*12|0)+8|0;k[h>>2]=0;if((e|0)>0){e=uP((e<<2)+4|0)|0;if(!e){n=g;e=12;break a}k[h>>2]=e;h=k[F>>2]|0;if((h|0)>-1){j=e;n=0;do{k[j>>2]=h;n=n+1|0;h=k[F+(n<<2)>>2]|0;j=e+(n<<2)|0}while((h|0)>-1);e=j}k[e>>2]=-1}}k[B>>2]=k[s>>2];k[C>>2]=k[B>>2];e=MO(b,C)|0;if(e){n=g;break a}k[B>>2]=6;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(e){n=g;break a}}c:do switch(k[q>>2]|0){case 0:{p=k[k[q+4>>2]>>2]|0;if((p|0)>-1|(p|0)==-4?(k[c>>2]|0)>-1:0){if(D){k[q+20>>2]=1;e=0}else{e=pP(a,q,l)|0;k[(k[w>>2]|0)+(l<<2)>>2]=t;if((g|0)>-1){o=k[x>>2]|0;j=0;while(1){h=o+(j<<2)|0;n=j+1|0;if((k[h>>2]|0)>-1)j=n;else break}k[h>>2]=l;k[o+(n<<2)>>2]=g;k[o+(j+2<<2)>>2]=-1;g=-1;f=f+1|0}qP(c,d,l)}k[c>>2]=-1;p=t;o=u+1|0;m=m+1|0;l=u}else{p=t;o=u;e=0}break}case 1:{j=k[q+4>>2]|0;n=k[j>>2]|0;j=k[j+4>>2]|0;k[B>>2]=q;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(!e){k[B>>2]=5;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(!e){k[B>>2]=j;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(!e){k[B>>2]=0;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(!e){h=n+20|0;k[B>>2]=(k[h>>2]|0)+u;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(!e){if((k[h>>2]|0)>0){e=(k[j+20>>2]|0)>0;h=(e&1)+u|0;e=e?u:-1}else{h=u;e=-1}k[B>>2]=e;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(!e){k[B>>2]=4;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(!e){k[B>>2]=n;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(!e){k[B>>2]=0;k[C>>2]=k[B>>2];p=t;o=h;e=MO(b,C)|0}else{p=t;o=h}}else{p=t;o=h}}else{p=t;o=h}}else{p=t;o=u}}else{p=t;o=u}}else{p=t;o=u}}else{p=t;o=u}}else{p=t;o=u}break}case 2:{h=k[q+4>>2]|0;if(D){if((k[c>>2]|0)>-1)e=1;else e=(i[h+12>>0]&1)!=0;k[B>>2]=e&1;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(e){p=t;o=u;break c}}else{k[B>>2]=l;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(e){p=t;o=u;break c}k[B>>2]=i[h+12>>0]&1;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(e){p=t;o=u;break c}}k[B>>2]=q;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(!e){k[B>>2]=1;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(!e){k[B>>2]=k[h>>2];k[C>>2]=k[B>>2];e=MO(b,C)|0;if(!e){k[B>>2]=0;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(!e){if((k[c>>2]|0)<=-1?(i[h+12>>0]&1)==0:0){p=0;o=u;e=0;break c}if(D)e=0;else{e=pP(a,q,l)|0;k[(k[w>>2]|0)+(l<<2)>>2]=(i[h+12>>0]&1)==0?t:1;if((g|0)>-1){o=k[x>>2]|0;j=0;while(1){h=o+(j<<2)|0;n=j+1|0;if((k[h>>2]|0)>-1)j=n;else break}k[h>>2]=l;k[o+(n<<2)>>2]=g;k[o+(j+2<<2)>>2]=-1;g=-1;f=f+1|0}qP(c,d,l)}k[c>>2]=-1;p=0;o=u+1|0;m=m+1|0;l=u}else{p=t;o=u}}else{p=t;o=u}}else{p=t;o=u}}else{p=t;o=u}break}case 3:{j=k[q+4>>2]|0;n=k[j>>2]|0;j=k[j+4>>2]|0;h=(k[c>>2]|0)>-1;p=u+1|0;k[B>>2]=h?p:u;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(!e){k[B>>2]=h?u:l;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(!e){k[B>>2]=c;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(!e){k[B>>2]=(k[c>>2]|0)>>>31^1;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(!e){k[B>>2]=q;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(!e){k[B>>2]=j;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(!e){k[B>>2]=n;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(!e){k[B>>2]=3;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(!e){k[B>>2]=j;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(!e){k[B>>2]=0;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(!e){k[B>>2]=2;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(e){p=t;o=u;break c}k[B>>2]=n;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(e){p=t;o=u;break c}k[B>>2]=0;k[C>>2]=k[B>>2];e=MO(b,C)|0;if(e){p=t;o=u;break c}if((k[c>>2]|0)>-1){if(D)e=0;else{e=pP(a,q,l)|0;k[(k[w>>2]|0)+(l<<2)>>2]=t;if((g|0)>-1){o=k[x>>2]|0;j=0;while(1){h=o+(j<<2)|0;n=j+1|0;if((k[h>>2]|0)>-1)j=n;else break}k[h>>2]=l;k[o+(n<<2)>>2]=g;k[o+(j+2<<2)>>2]=-1;g=-1;f=f+1|0}qP(c,d,l)}k[c>>2]=-1;h=p;m=m+1|0;l=u}else{h=u;e=0}if((k[q+16>>2]|0)<=0){p=t;o=h;break c}p=t;o=h+2|0;l=h+1|0}else{p=t;o=u}}else{p=t;o=u}}else{p=t;o=u}}else{p=t;o=u}}else{p=t;o=u}}else{p=t;o=u}}else{p=t;o=u}}else{p=t;o=u}}else{p=t;o=u}}else{p=t;o=u}break}default:{p=t;o=u;e=0}}while(0);n=k[s>>2]|0;if((n|0)>-1){h=0;do{j=F+(h<<2)|0;h=h+1|0}while((k[j>>2]|0)>-1);k[j>>2]=n;k[F+(h<<2)>>2]=-1;j=p;h=o}else{j=p;h=o}break}case 1:{e=q+-2|0;k[z>>2]=e;e=k[p+(e<<2)>>2]|0;if(D){j=k[(k[k[e+4>>2]>>2]|0)+20>>2]|0;g=q+-3|0;k[z>>2]=g;k[e+20>>2]=(k[p+(g<<2)>>2]|0)+j;j=t;g=-1;h=u;e=0;break b}else{e=q+-3|0;k[z>>2]=e;e=k[p+(e<<2)>>2]|0;h=q+-4|0;k[z>>2]=h;e=(e|0)==0;j=e&1;g=e?g:k[p+(h<<2)>>2]|0;h=u;e=0;break b}}case 4:{u=q+-2|0;k[z>>2]=u;u=k[p+(u<<2)>>2]|0;h=q+-3|0;k[z>>2]=h;j=t;h=k[p+(h<<2)>>2]|0;e=0;l=(u|0)>-1?u:l;break}case 5:{e=q+-2|0;k[z>>2]=e;e=k[p+(e<<2)>>2]|0;if(D){j=k[e+4>>2]|0;k[e+20>>2]=(k[(k[j+4>>2]|0)+20>>2]|0)+(k[(k[j>>2]|0)+20>>2]|0);j=t;h=u;e=0}else{j=t;h=u;e=0}break}case 2:{while(1)if((k[c>>2]|0)>-1)c=c+4|0;else{j=t;h=u;e=0;break}break}case 3:{n=k[p+(q+-2<<2)>>2]|0;o=k[p+(q+-3<<2)>>2]|0;e=k[p+(q+-4<<2)>>2]|0;c=q+-5|0;k[z>>2]=c;if(D){t=k[e+4>>2]|0;j=k[e+16>>2]|0;k[e+20>>2]=(k[(k[t>>2]|0)+20>>2]|0)+(k[p+(c<<2)>>2]|0)+(k[(k[t+4>>2]|0)+20>>2]|0)+((j|0)>0?2:0)}else j=k[e+16>>2]|0;c=k[p+(q+-6<<2)>>2]|0;h=q+-7|0;k[z>>2]=h;h=k[p+(h<<2)>>2]|0;e=q+-8|0;k[z>>2]=e;e=k[p+(e<<2)>>2]|0;if((j|0)>0){if(D)e=0;else{rP(a,n,h)|0;k[(k[w>>2]|0)+(h<<2)>>2]=1;t=rP(a,o,e)|0;k[(k[w>>2]|0)+(e<<2)>>2]=1;e=t}j=1;h=u;m=m+2|0}else{j=1;h=u;e=0}break}default:{j=t;h=u;e=0}}while(0);q=k[z>>2]|0;if((e|0)!=0|(q|0)<=(A|0)){n=g;break a}else{t=j;u=h}}}while(0);if(!D?(qP(c,d,l),(n|0)>-1):0){j=k[d+36>>2]|0;g=0;while(1){c=j+(g<<2)|0;h=g+1|0;if((k[c>>2]|0)>-1)g=h;else break}k[c>>2]=l;k[j+(h<<2)>>2]=n;k[j+(g+2<<2)>>2]=-1;f=f+1|0}k[d+48>>2]=m;k[d+40>>2]=m;k[d+44>>2]=f;vP(E);vP(F)}while(0);r=G;return e|0}function MO(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0;j=r;r=r+16|0;i=j;c=a+12|0;d=k[c>>2]|0;g=k[a>>2]|0;if((d|0)>=(g|0)){c=k[a+4>>2]|0;if((g|0)<(c|0)?(e=(k[a+8>>2]|0)+g|0,e=(e|0)>(c|0)?c:e,f=a+16|0,h=xP(k[f>>2]|0,e<<2)|0,(h|0)!=0):0){k[a>>2]=e;k[f>>2]=h;k[i>>2]=k[b>>2];MO(a,i)|0;c=0}else c=12}else{k[(k[a+16>>2]|0)+(d<<2)>>2]=k[b>>2];k[c>>2]=(k[c>>2]|0)+1;c=0}r=j;return c|0}function NO(a,b,c,d,e,f,g,h){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;var j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;y=r;r=r+16|0;x=y+4|0;w=y;u=b+12|0;v=k[u>>2]|0;k[w>>2]=c;k[x>>2]=k[w>>2];MO(b,x)|0;k[w>>2]=0;k[x>>2]=k[w>>2];c=MO(b,x)|0;a:do if(!c){s=b+16|0;t=(d&1|0)==0;q=(d&2|0)!=0;n=1;p=0;d=g;while(1){c=k[u>>2]|0;if((c|0)>(v|0))g=d;else{d=p;c=0;break a}b:while(1){d=k[s>>2]|0;c:while(1){o=c+-1|0;k[u>>2]=o;switch(k[d+(o<<2)>>2]|0){case 1:{l=7;break c}case 0:{c=c+-2|0;k[u>>2]=c;c=k[d+(c<<2)>>2]|0;switch(k[c>>2]|0){case 0:{o=g;l=10;break b}case 3:{l=21;break b}case 1:{l=28;break b}case 2:{l=35;break c}default:{}}break}default:{}}c=k[u>>2]|0;if((c|0)<=(v|0)){d=p;c=0;break a}}if((l|0)==7){o=c+-2|0;k[u>>2]=o;d=k[d+(o<<2)>>2]|0}else if((l|0)==35){d=k[c+4>>2]|0;k[w>>2]=k[d>>2];k[x>>2]=k[w>>2];c=MO(b,x)|0;if(c){d=p;break a}k[w>>2]=0;k[x>>2]=k[w>>2];c=MO(b,x)|0;if(c){d=p;break a}c=PO(a,k[d>>2]|0,k[d+4>>2]|0,k[d+8>>2]|0,i[d+12>>0]&1)|0;k[g>>2]=c;if(!c){d=p;c=12;break a}d=k[c+4>>2]|0}c=k[u>>2]|0;if((c|0)<=(v|0)){d=p;c=0;break a}else g=d}if((l|0)==10){m=k[c+4>>2]|0;j=k[m+8>>2]|0;d=k[m>>2]|0;c=k[m+4>>2]|0;if(!((d|0)>-1|(d|0)==-4))if(t|(d|0)!=-3)if((d|0)==-3)if(q&(n|0)!=0){k[f+(c<<2)>>2]=1;n=0;l=-3;d=p}else{l=-3;d=p}else{l=d;d=p}else{c=-1;l=-1;d=p;j=-1}else{l=d;d=p+1|0;j=(k[e>>2]|0)+j|0}g=QO(a,0,20)|0;if(!g){k[o>>2]=0;c=12}else{p=g+4|0;z=k[p>>2]|0;k[z>>2]=l;k[z+4>>2]=c;k[z+8>>2]=j;k[o>>2]=g;c=k[p>>2]|0;k[c+12>>2]=k[m+12>>2];k[c+16>>2]=k[m+16>>2];c=0}if((j|0)>(k[h>>2]|0)){k[h>>2]=j;j=n;g=o}else{j=n;g=o}}else if((l|0)==21){j=k[c+4>>2]|0;d=j+4|0;c=RO(a,k[j>>2]|0,k[d>>2]|0)|0;k[g>>2]=c;if(!c){d=p;c=12;break a}g=k[c+4>>2]|0;k[w>>2]=k[d>>2];k[x>>2]=k[w>>2];c=MO(b,x)|0;if(c){d=p;break a}k[w>>2]=0;k[x>>2]=k[w>>2];c=MO(b,x)|0;if(c){d=p;break a}k[w>>2]=g+4;k[x>>2]=k[w>>2];c=MO(b,x)|0;if(c){d=p;break a}k[w>>2]=1;k[x>>2]=k[w>>2];c=MO(b,x)|0;if(c){d=p;break a}k[w>>2]=k[j>>2];k[x>>2]=k[w>>2];c=MO(b,x)|0;if(c){d=p;break a}k[w>>2]=0;k[x>>2]=k[w>>2];j=n;d=p;c=MO(b,x)|0}else if((l|0)==28){j=k[c+4>>2]|0;d=j+4|0;c=OO(a,k[j>>2]|0,k[d>>2]|0)|0;k[g>>2]=c;if(!c){d=p;c=12;break a}l=k[c+4>>2]|0;k[l>>2]=0;g=l+4|0;k[g>>2]=0;k[w>>2]=k[d>>2];k[x>>2]=k[w>>2];c=MO(b,x)|0;if(c){d=p;break a}k[w>>2]=0;k[x>>2]=k[w>>2];c=MO(b,x)|0;if(c){d=p;break a}k[w>>2]=g;k[x>>2]=k[w>>2];c=MO(b,x)|0;if(c){d=p;break a}k[w>>2]=1;k[x>>2]=k[w>>2];c=MO(b,x)|0;if(c){d=p;break a}k[w>>2]=k[j>>2];k[x>>2]=k[w>>2];c=MO(b,x)|0;if(c){d=p;break a}k[w>>2]=0;k[x>>2]=k[w>>2];j=n;d=p;g=l;c=MO(b,x)|0}if(!c){n=j;p=d;d=g}else break}}else d=0;while(0);k[e>>2]=(k[e>>2]|0)+d;r=y;return c|0}function OO(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;a=QO(a,1,8)|0;if(!a)a=0;else{d=k[a+4>>2]|0;k[d>>2]=b;k[d+4>>2]=c;k[a+16>>2]=(k[c+16>>2]|0)+(k[b+16>>2]|0)}return a|0}function PO(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0;a=QO(a,2,16)|0;if(!a)a=0;else{f=k[a+4>>2]|0;k[f>>2]=b;k[f+4>>2]=c;k[f+8>>2]=d;c=f+12|0;i[c>>0]=i[c>>0]&-2|e&1;k[a+16>>2]=k[b+16>>2]}return a|0}function QO(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;d=iN(a,0,0,1,32)|0;if((d|0)!=0?(c=iN(a,0,0,1,c)|0,k[d+4>>2]=c,(c|0)!=0):0){k[d>>2]=b;k[d+8>>2]=-1;k[d+12>>2]=-1}else d=0;return d|0}function RO(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;a=QO(a,3,8)|0;if(!a)a=0;else{d=k[a+4>>2]|0;k[d>>2]=b;k[d+4>>2]=c;k[a+16>>2]=(k[c+16>>2]|0)+(k[b+16>>2]|0)}return a|0}function SO(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;a=iN(a,0,0,1,64)|0;if(!a)a=0;else{k[a>>2]=b;k[a+4>>2]=c;k[a+8>>2]=d;k[a+20>>2]=e;k[a+24>>2]=f;k[a+28>>2]=g;k[a+32>>2]=-1;k[a+36>>2]=-1;k[a+40>>2]=-1}return a|0}function TO(a){a=a|0;a=iN(a,0,0,1,32)|0;if(!a)a=0;else{k[a>>2]=-1;k[a+4>>2]=-1;k[a+8>>2]=-1}return a|0}function UO(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0;o=(d|0)==0;if(o)n=0;else{f=0;while(1)if((k[d+(f<<2)>>2]|0)>-1)f=f+1|0;else{n=f;break}}f=0;while(1)if((k[b+(f<<5)>>2]|0)>-1)f=f+1|0;else break;g=0;while(1)if((k[c+(g<<5)>>2]|0)>-1)g=g+1|0;else break;f=iN(a,0,0,1,(g+f<<5)+32|0)|0;a:do if(!f)f=0;else{g=k[b>>2]|0;if((g|0)>-1){m=(n|0)>0;h=0;while(1){k[f+(h<<5)>>2]=g;k[f+(h<<5)+4>>2]=k[b+(h<<5)+4>>2];k[f+(h<<5)+8>>2]=k[b+(h<<5)+8>>2];k[f+(h<<5)+16>>2]=k[b+(h<<5)+16>>2]|e;k[f+(h<<5)+20>>2]=k[b+(h<<5)+20>>2];k[f+(h<<5)+24>>2]=k[b+(h<<5)+24>>2];k[f+(h<<5)+28>>2]=k[b+(h<<5)+28>>2];j=b+(h<<5)+12|0;i=k[j>>2]|0;g=(i|0)==0;if(o&g)k[f+(h<<5)+12>>2]=0;else{if(g)g=0;else{g=0;while(1)if((k[i+(g<<2)>>2]|0)>-1)g=g+1|0;else break}l=iN(a,0,0,0,(g+n<<2)+4|0)|0;if(!l){f=0;break a}if((g|0)>0){i=k[j>>2]|0;j=0;do{k[l+(j<<2)>>2]=k[i+(j<<2)>>2];j=j+1|0}while((j|0)!=(g|0))}else g=0;if(m){i=0;do{k[l+(i+g<<2)>>2]=k[d+(i<<2)>>2];i=i+1|0}while((i|0)!=(n|0));i=n}else i=0;k[l+(i+g<<2)>>2]=-1;k[f+(h<<5)+12>>2]=l}h=h+1|0;g=k[b+(h<<5)>>2]|0;if((g|0)<=-1){n=h;break}}}else n=0;h=k[c>>2]|0;g=f+(n<<5)|0;if((h|0)>-1){l=n;m=0;do{k[g>>2]=h;k[f+(l<<5)+4>>2]=k[c+(m<<5)+4>>2];k[f+(l<<5)+8>>2]=k[c+(m<<5)+8>>2];k[f+(l<<5)+16>>2]=k[c+(m<<5)+16>>2];k[f+(l<<5)+20>>2]=k[c+(m<<5)+20>>2];k[f+(l<<5)+24>>2]=k[c+(m<<5)+24>>2];k[f+(l<<5)+28>>2]=k[c+(m<<5)+28>>2];i=c+(m<<5)+12|0;h=k[i>>2]|0;if(!h)k[f+(l<<5)+12>>2]=0;else{g=0;while(1)if((k[h+(g<<2)>>2]|0)>-1)g=g+1|0;else break;j=iN(a,0,0,0,(g<<2)+4|0)|0;if(!j){f=0;break a}if((g|0)>0){h=k[i>>2]|0;i=0;do{k[j+(i<<2)>>2]=k[h+(i<<2)>>2];i=i+1|0}while((i|0)!=(g|0))}else g=0;k[j+(g<<2)>>2]=-1;k[f+(l<<5)+12>>2]=j}m=m+1|0;h=k[c+(m<<5)>>2]|0;l=m+n|0;g=f+(l<<5)|0}while((h|0)>-1)}k[g>>2]=-1}while(0);return f|0}function VO(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,s=0,t=0,u=0;u=r;r=r+16|0;s=u+4|0;t=u;o=a+12|0;p=k[o>>2]|0;q=(e|0)!=0;if(q)k[e>>2]=0;k[t>>2]=b;k[s>>2]=k[t>>2];b=MO(a,s)|0;a:do if(!b){i=a+16|0;j=(c|0)==0;l=(d|0)==0;b=k[o>>2]|0;if((b|0)>(p|0))while(1){b=b+-1|0;k[o>>2]=b;b=k[(k[i>>2]|0)+(b<<2)>>2]|0;b:do switch(k[b>>2]|0){case 0:{b=k[b+4>>2]|0;switch(k[b>>2]|0){case -3:break;case -2:{if(l)break b;k[d>>2]=k[d>>2]|k[b+4>>2];break b}default:break b}h=k[b+4>>2]|0;if((h|0)>-1){c:do if(!j){b=k[c>>2]|0;d:do if((b|0)>-1){f=c;g=0;while(1){if((b|0)==(h|0)){b=g;break}g=g+1|0;f=c+(g<<2)|0;b=k[f>>2]|0;if((b|0)<=-1){b=g;break d}}if((h|0)>=0)break c}else{f=c;b=0}while(0);k[f>>2]=h;k[c+(b+1<<2)>>2]=-1}while(0);if(q)k[e>>2]=(k[e>>2]|0)+1}break}case 3:{b=k[b+4>>2]|0;f=k[b>>2]|0;if(k[f+8>>2]|0){k[t>>2]=f;k[s>>2]=k[t>>2];m=MO(a,s)|0;n=6;break b}b=k[b+4>>2]|0;if(k[b+8>>2]|0){k[t>>2]=b;k[s>>2]=k[t>>2];m=MO(a,s)|0;n=6}break}case 1:{f=k[b+4>>2]|0;k[t>>2]=k[f>>2];k[s>>2]=k[t>>2];b=MO(a,s)|0;if(b)break a;k[t>>2]=k[f+4>>2];k[s>>2]=k[t>>2];m=MO(a,s)|0;n=6;break}case 2:{b=k[k[b+4>>2]>>2]|0;if(k[b+8>>2]|0){k[t>>2]=b;k[s>>2]=k[t>>2];m=MO(a,s)|0;n=6}break}default:{}}while(0);if((n|0)==6?(n=0,(m|0)!=0):0){b=m;break a}b=k[o>>2]|0;if((b|0)<=(p|0)){b=0;break a}}else b=0}while(0);r=u;return b|0}function WO(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;a:while(1){switch(k[a>>2]|0){case 2:{a=k[a+4>>2]|0;if((k[a+8>>2]|0)==-1?(g=k[a>>2]|0,g=oP(k[g+28>>2]|0,k[g+24>>2]|0,b,c,d)|0,(g|0)!=0):0){a=g;break a}break}case 3:{e=k[a+4>>2]|0;a=WO(k[e>>2]|0,b,c,d)|0;if(a)break a;a=e+4|0;break}case 1:{e=k[a+4>>2]|0;f=e+4|0;a=oP(k[(k[e>>2]|0)+28>>2]|0,k[(k[f>>2]|0)+24>>2]|0,b,c,d)|0;if(a)break a;a=WO(k[e>>2]|0,b,c,d)|0;if(!a)a=f;else break a;break}default:{a=0;break a}}a=k[a>>2]|0}return a|0}function XO(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0;a:do if((a|0)>0){g=0;while(1){e=k[c+(g<<2)>>2]|0;f=k[d+(g<<2)>>2]|0;if(!(k[b+(g<<2)>>2]|0)){if((e|0)<(f|0)){e=1;break a}if((e|0)>(f|0)){e=0;break a}}else{if((e|0)>(f|0)){e=1;break a}if((e|0)<(f|0)){e=0;break a}}g=g+1|0;if((g|0)>=(a|0)){e=0;break}}}else e=0;while(0);return e|0}function YO(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0;if((c&8|0)==0&(f|0)>-1){n=k[d+16>>2]|0;l=d+28|0;c=k[l>>2]|0;m=(a|0)!=0;if(m&(c|0)!=0){i=d+48|0;j=0;do{c=k[n+(j*12|0)>>2]|0;if((c|0)==(k[i>>2]|0))h=f;else h=k[e+(c<<2)>>2]|0;g=b+(j<<3)|0;k[g>>2]=h;c=k[n+(j*12|0)+4>>2]|0;if((c|0)==(k[i>>2]|0))d=f;else d=k[e+(c<<2)>>2]|0;c=b+(j<<3)+4|0;k[c>>2]=d;if((h|0)==-1|(d|0)==-1){k[c>>2]=-1;k[g>>2]=-1}j=j+1|0;c=k[l>>2]|0}while(j>>>0<a>>>0&j>>>0<c>>>0);f=c}else f=c;if(m&(f|0)!=0){c=0;do{g=b+(c<<3)+4|0;h=k[n+(c*12|0)+8>>2]|0;if((h|0)!=0?(o=k[h>>2]|0,(o|0)>-1):0){i=b+(c<<3)|0;j=o;d=k[i>>2]|0;l=0;do{if(!((d|0)>=(k[b+(j<<3)>>2]|0)?(k[g>>2]|0)<=(k[b+(j<<3)+4>>2]|0):0)){k[g>>2]=-1;k[i>>2]=-1;d=-1}l=l+1|0;j=k[h+(l<<2)>>2]|0}while((j|0)>-1)}c=c+1|0}while(c>>>0<a>>>0&c>>>0<f>>>0)}else c=0}else c=0;if(c>>>0<a>>>0)do{k[b+(c<<3)>>2]=-1;k[b+(c<<3)+4>>2]=-1;c=c+1|0}while((c|0)!=(a|0));return}function ZO(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=k[a>>2]|0;a:do if(!d)d=0;else{e=(c|0)==0;c=a;while(1){if(e){if(eM(b,d)|0){d=1;break a}}else{a=qM(b)|0;if(eM(a,k[c>>2]|0)|0){d=1;break a}a=rM(b)|0;if(eM(a,k[c>>2]|0)|0){d=1;break a}}c=c+4|0;d=k[c>>2]|0;if(!d){d=0;break}}}while(0);return d|0}function _O(a){a=a|0;if(!(k[a+68>>2]|0))nN(a);return}function $O(a){a=a|0;if(!(k[a+68>>2]|0))nN(a);return}function aP(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0;b=a+20|0;f=a+28|0;if((k[b>>2]|0)>>>0>(k[f>>2]|0)>>>0?(Tb[k[a+36>>2]&63](a,0,0)|0,(k[b>>2]|0)==0):0)b=-1;else{g=a+4|0;c=k[g>>2]|0;d=a+8|0;e=k[d>>2]|0;if(c>>>0<e>>>0)Tb[k[a+40>>2]&63](a,c-e|0,1)|0;k[a+16>>2]=0;k[f>>2]=0;k[b>>2]=0;k[d>>2]=0;k[g>>2]=0;b=0}return b|0}function bP(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,m=0,n=0.0,o=0,q=0,s=0,u=0,v=0.0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,M=0,N=0,O=0,P=0,Q=0,R=0,S=0,T=0,U=0,V=0,W=0,X=0,Y=0,Z=0,_=0,$=0,aa=0,ba=0,ca=0,da=0,ea=0,fa=0,ga=0;ga=r;r=r+624|0;ba=ga+24|0;da=ga+16|0;ca=ga+588|0;Y=ga+576|0;aa=ga;V=ga+536|0;fa=ga+8|0;ea=ga+528|0;M=(a|0)!=0;N=V+40|0;U=N;V=V+39|0;W=fa+4|0;X=Y+12|0;Y=Y+11|0;Z=ca;_=X;$=_-Z|0;O=-2-Z|0;P=_+2|0;Q=ba+288|0;R=ca+9|0;S=R;T=ca+8|0;f=0;w=b;g=0;b=0;a:while(1){do if((f|0)>-1)if((g|0)>(2147483647-f|0)){f=sM()|0;k[f>>2]=75;f=-1;break}else{f=g+f|0;break}while(0);g=i[w>>0]|0;if(!(g<<24>>24)){K=245;break}else h=w;b:while(1){switch(g<<24>>24){case 37:{g=h;K=9;break b}case 0:{g=h;break b}default:{}}J=h+1|0;g=i[J>>0]|0;h=J}c:do if((K|0)==9)while(1){K=0;if((i[g+1>>0]|0)!=37)break c;h=h+1|0;g=g+2|0;if((i[g>>0]|0)==37)K=9;else break}while(0);y=h-w|0;if(M?(k[a>>2]&32|0)==0:0)PN(w,y,a)|0;if((h|0)!=(w|0)){w=g;g=y;continue}o=g+1|0;h=i[o>>0]|0;m=(h<<24>>24)+-48|0;if(m>>>0<10){J=(i[g+2>>0]|0)==36;o=J?g+3|0:o;h=i[o>>0]|0;u=J?m:-1;b=J?1:b}else u=-1;g=h<<24>>24;d:do if((g&-32|0)==32){m=0;while(1){if(!(1<<g+-32&75913)){q=m;g=o;break d}m=1<<(h<<24>>24)+-32|m;o=o+1|0;h=i[o>>0]|0;g=h<<24>>24;if((g&-32|0)!=32){q=m;g=o;break}}}else{q=0;g=o}while(0);do if(h<<24>>24==42){m=g+1|0;h=(i[m>>0]|0)+-48|0;if(h>>>0<10?(i[g+2>>0]|0)==36:0){k[e+(h<<2)>>2]=10;b=1;g=g+3|0;h=k[d+((i[m>>0]|0)+-48<<3)>>2]|0}else{if(b){f=-1;break a}if(!M){x=q;g=m;b=0;J=0;break}b=(k[c>>2]|0)+(4-1)&~(4-1);h=k[b>>2]|0;k[c>>2]=b+4;b=0;g=m}if((h|0)<0){x=q|8192;J=0-h|0}else{x=q;J=h}}else{m=(h<<24>>24)+-48|0;if(m>>>0<10){h=0;do{h=(h*10|0)+m|0;g=g+1|0;m=(i[g>>0]|0)+-48|0}while(m>>>0<10);if((h|0)<0){f=-1;break a}else{x=q;J=h}}else{x=q;J=0}}while(0);e:do if((i[g>>0]|0)==46){m=g+1|0;h=i[m>>0]|0;if(h<<24>>24!=42){o=(h<<24>>24)+-48|0;if(o>>>0<10){g=m;h=0}else{g=m;o=0;break}while(1){h=(h*10|0)+o|0;g=g+1|0;o=(i[g>>0]|0)+-48|0;if(o>>>0>=10){o=h;break e}}}m=g+2|0;h=(i[m>>0]|0)+-48|0;if(h>>>0<10?(i[g+3>>0]|0)==36:0){k[e+(h<<2)>>2]=10;g=g+4|0;o=k[d+((i[m>>0]|0)+-48<<3)>>2]|0;break}if(b){f=-1;break a}if(M){g=(k[c>>2]|0)+(4-1)&~(4-1);o=k[g>>2]|0;k[c>>2]=g+4;g=m}else{g=m;o=0}}else o=-1;while(0);s=0;while(1){h=(i[g>>0]|0)+-65|0;if(h>>>0>57){f=-1;break a}m=g+1|0;h=i[191002+(s*58|0)+h>>0]|0;q=h&255;if((q+-1|0)>>>0<8){g=m;s=q}else{I=m;break}}if(!(h<<24>>24)){f=-1;break}m=(u|0)>-1;do if(h<<24>>24==19)if(m){f=-1;break a}else K=52;else{if(m){k[e+(u<<2)>>2]=q;G=d+(u<<3)|0;H=k[G+4>>2]|0;K=aa;k[K>>2]=k[G>>2];k[K+4>>2]=H;K=52;break}if(!M){f=0;break a}lP(aa,q,c)}while(0);if((K|0)==52?(K=0,!M):0){w=I;g=y;continue}u=i[g>>0]|0;u=(s|0)!=0&(u&15|0)==3?u&-33:u;m=x&-65537;H=(x&8192|0)==0?x:m;f:do switch(u|0){case 110:switch(s|0){case 0:{k[k[aa>>2]>>2]=f;w=I;g=y;continue a}case 1:{k[k[aa>>2]>>2]=f;w=I;g=y;continue a}case 2:{w=k[aa>>2]|0;k[w>>2]=f;k[w+4>>2]=((f|0)<0)<<31>>31;w=I;g=y;continue a}case 3:{j[k[aa>>2]>>1]=f;w=I;g=y;continue a}case 4:{i[k[aa>>2]>>0]=f;w=I;g=y;continue a}case 6:{k[k[aa>>2]>>2]=f;w=I;g=y;continue a}case 7:{w=k[aa>>2]|0;k[w>>2]=f;k[w+4>>2]=((f|0)<0)<<31>>31;w=I;g=y;continue a}default:{w=I;g=y;continue a}}case 112:{s=H|8;o=o>>>0>8?o:8;u=120;K=64;break}case 88:case 120:{s=H;K=64;break}case 111:{m=aa;h=k[m>>2]|0;m=k[m+4>>2]|0;if((h|0)==0&(m|0)==0)g=N;else{g=N;do{g=g+-1|0;i[g>>0]=h&7|48;h=EP(h|0,m|0,3)|0;m=L}while(!((h|0)==0&(m|0)==0))}if(!(H&8)){h=H;s=0;q=191482;K=77}else{s=U-g+1|0;h=H;o=(o|0)<(s|0)?s:o;s=0;q=191482;K=77}break}case 105:case 100:{h=aa;g=k[h>>2]|0;h=k[h+4>>2]|0;if((h|0)<0){g=BP(0,0,g|0,h|0)|0;h=L;m=aa;k[m>>2]=g;k[m+4>>2]=h;m=1;q=191482;K=76;break f}if(!(H&2048)){q=H&1;m=q;q=(q|0)==0?191482:191484;K=76}else{m=1;q=191483;K=76}break}case 117:{h=aa;g=k[h>>2]|0;h=k[h+4>>2]|0;m=0;q=191482;K=76;break}case 99:{i[V>>0]=k[aa>>2];w=V;h=1;s=0;u=191482;g=N;break}case 109:{g=sM()|0;g=tM(k[g>>2]|0)|0;K=82;break}case 115:{g=k[aa>>2]|0;g=(g|0)!=0?g:191492;K=82;break}case 67:{k[fa>>2]=k[aa>>2];k[W>>2]=0;k[aa>>2]=fa;o=-1;K=86;break}case 83:{if(!o){nP(a,32,J,0,H);g=0;K=98}else K=86;break}case 65:case 71:case 70:case 69:case 97:case 103:case 102:case 101:{n=+p[aa>>3];k[da>>2]=0;p[t>>3]=n;if((k[t+4>>2]|0)>=0)if(!(H&2048)){G=H&1;F=G;G=(G|0)==0?191500:191505}else{F=1;G=191502}else{n=-n;F=1;G=191499}p[t>>3]=n;E=k[t+4>>2]&2146435072;do if(E>>>0<2146435072|(E|0)==2146435072&0<0){v=+LM(n,da)*2.0;h=v!=0.0;if(h)k[da>>2]=(k[da>>2]|0)+-1;C=u|32;if((C|0)==97){w=u&32;y=(w|0)==0?G:G+9|0;x=F|2;g=12-o|0;do if(!(o>>>0>11|(g|0)==0)){n=8.0;do{g=g+-1|0;n=n*16.0}while((g|0)!=0);if((i[y>>0]|0)==45){n=-(n+(-v-n));break}else{n=v+n-n;break}}else n=v;while(0);h=k[da>>2]|0;g=(h|0)<0?0-h|0:h;g=mP(g,((g|0)<0)<<31>>31,X)|0;if((g|0)==(X|0)){i[Y>>0]=48;g=Y}i[g+-1>>0]=(h>>31&2)+43;s=g+-2|0;i[s>>0]=u+15;q=(o|0)<1;m=(H&8|0)==0;h=ca;while(1){G=~~n;g=h+1|0;i[h>>0]=l[191466+G>>0]|w;n=(n-+(G|0))*16.0;do if((g-Z|0)==1){if(m&(q&n==0.0))break;i[g>>0]=46;g=h+2|0}while(0);if(!(n!=0.0))break;else h=g}o=(o|0)!=0&(O+g|0)<(o|0)?P+o-s|0:$-s+g|0;m=o+x|0;nP(a,32,J,m,H);if(!(k[a>>2]&32))PN(y,x,a)|0;nP(a,48,J,m,H^65536);g=g-Z|0;if(!(k[a>>2]&32))PN(ca,g,a)|0;h=_-s|0;nP(a,48,o-(g+h)|0,0,0);if(!(k[a>>2]&32))PN(s,h,a)|0;nP(a,32,J,m,H^8192);g=(m|0)<(J|0)?J:m;break}g=(o|0)<0?6:o;if(h){h=(k[da>>2]|0)+-28|0;k[da>>2]=h;n=v*268435456.0}else{n=v;h=k[da>>2]|0}E=(h|0)<0?ba:Q;D=E;h=E;do{B=~~n>>>0;k[h>>2]=B;h=h+4|0;n=(n-+(B>>>0))*1.0e9}while(n!=0.0);m=h;h=k[da>>2]|0;if((h|0)>0){q=E;while(1){s=(h|0)>29?29:h;o=m+-4|0;do if(o>>>0<q>>>0)o=q;else{h=0;do{B=JP(k[o>>2]|0,0,s|0)|0;B=CP(B|0,L|0,h|0,0)|0;h=L;A=RP(B|0,h|0,1e9,0)|0;k[o>>2]=A;h=QP(B|0,h|0,1e9,0)|0;o=o+-4|0}while(o>>>0>=q>>>0);if(!h){o=q;break}o=q+-4|0;k[o>>2]=h}while(0);while(1){if(m>>>0<=o>>>0)break;h=m+-4|0;if(!(k[h>>2]|0))m=h;else break}h=(k[da>>2]|0)-s|0;k[da>>2]=h;if((h|0)>0)q=o;else break}}else o=E;if((h|0)<0){y=((g+25|0)/9|0)+1|0;z=(C|0)==102;w=o;while(1){x=0-h|0;x=(x|0)>9?9:x;do if(w>>>0<m>>>0){h=(1<<x)+-1|0;q=1e9>>>x;o=0;s=w;do{B=k[s>>2]|0;k[s>>2]=(B>>>x)+o;o=ha(B&h,q)|0;s=s+4|0}while(s>>>0<m>>>0);h=(k[w>>2]|0)==0?w+4|0:w;if(!o){o=h;break}k[m>>2]=o;o=h;m=m+4|0}else o=(k[w>>2]|0)==0?w+4|0:w;while(0);h=z?E:o;m=(m-h>>2|0)>(y|0)?h+(y<<2)|0:m;h=(k[da>>2]|0)+x|0;k[da>>2]=h;if((h|0)>=0){w=o;break}else w=o}}else w=o;do if(w>>>0<m>>>0){h=(D-w>>2)*9|0;q=k[w>>2]|0;if(q>>>0<10)break;else o=10;do{o=o*10|0;h=h+1|0}while(q>>>0>=o>>>0)}else h=0;while(0);A=(C|0)==103;B=(g|0)!=0;o=g-((C|0)!=102?h:0)+((B&A)<<31>>31)|0;if((o|0)<(((m-D>>2)*9|0)+-9|0)){s=o+9216|0;z=(s|0)/9|0;o=E+(z+-1023<<2)|0;s=((s|0)%9|0)+1|0;if((s|0)<9){q=10;do{q=q*10|0;s=s+1|0}while((s|0)!=9)}else q=10;x=k[o>>2]|0;y=(x>>>0)%(q>>>0)|0;if((y|0)==0?(E+(z+-1022<<2)|0)==(m|0):0)q=w;else K=163;do if((K|0)==163){K=0;v=(((x>>>0)/(q>>>0)|0)&1|0)==0?9007199254740992.0:9007199254740994.0;s=(q|0)/2|0;do if(y>>>0<s>>>0)n=.5;else{if((y|0)==(s|0)?(E+(z+-1022<<2)|0)==(m|0):0){n=1.0;break}n=1.5}while(0);do if(F){if((i[G>>0]|0)!=45)break;v=-v;n=-n}while(0);s=x-y|0;k[o>>2]=s;if(!(v+n!=v)){q=w;break}C=s+q|0;k[o>>2]=C;if(C>>>0>999999999){h=w;while(1){q=o+-4|0;k[o>>2]=0;if(q>>>0<h>>>0){h=h+-4|0;k[h>>2]=0}C=(k[q>>2]|0)+1|0;k[q>>2]=C;if(C>>>0>999999999)o=q;else{w=h;o=q;break}}}h=(D-w>>2)*9|0;s=k[w>>2]|0;if(s>>>0<10){q=w;break}else q=10;do{q=q*10|0;h=h+1|0}while(s>>>0>=q>>>0);q=w}while(0);C=o+4|0;w=q;m=m>>>0>C>>>0?C:m}y=0-h|0;while(1){if(m>>>0<=w>>>0){z=0;C=m;break}o=m+-4|0;if(!(k[o>>2]|0))m=o;else{z=1;C=m;break}}do if(A){g=(B&1^1)+g|0;if((g|0)>(h|0)&(h|0)>-5){u=u+-1|0;g=g+-1-h|0}else{u=u+-2|0;g=g+-1|0}m=H&8;if(m)break;do if(z){m=k[C+-4>>2]|0;if(!m){o=9;break}if(!((m>>>0)%10|0)){q=10;o=0}else{o=0;break}do{q=q*10|0;o=o+1|0}while(((m>>>0)%(q>>>0)|0|0)==0)}else o=9;while(0);m=((C-D>>2)*9|0)+-9|0;if((u|32|0)==102){m=m-o|0;m=(m|0)<0?0:m;g=(g|0)<(m|0)?g:m;m=0;break}else{m=m+h-o|0;m=(m|0)<0?0:m;g=(g|0)<(m|0)?g:m;m=0;break}}else m=H&8;while(0);x=g|m;q=(x|0)!=0&1;s=(u|32|0)==102;if(s){h=(h|0)>0?h:0;u=0}else{o=(h|0)<0?y:h;o=mP(o,((o|0)<0)<<31>>31,X)|0;if((_-o|0)<2)do{o=o+-1|0;i[o>>0]=48}while((_-o|0)<2);i[o+-1>>0]=(h>>31&2)+43;D=o+-2|0;i[D>>0]=u;h=_-D|0;u=D}y=F+1+g+q+h|0;nP(a,32,J,y,H);if(!(k[a>>2]&32))PN(G,F,a)|0;nP(a,48,J,y,H^65536);do if(s){o=w>>>0>E>>>0?E:w;h=o;do{m=mP(k[h>>2]|0,0,R)|0;do if((h|0)==(o|0)){if((m|0)!=(R|0))break;i[T>>0]=48;m=T}else{if(m>>>0<=ca>>>0)break;do{m=m+-1|0;i[m>>0]=48}while(m>>>0>ca>>>0)}while(0);if(!(k[a>>2]&32))PN(m,S-m|0,a)|0;h=h+4|0}while(h>>>0<=E>>>0);do if(x){if(k[a>>2]&32)break;PN(191534,1,a)|0}while(0);if((g|0)>0&h>>>0<C>>>0){m=h;while(1){h=mP(k[m>>2]|0,0,R)|0;if(h>>>0>ca>>>0)do{h=h+-1|0;i[h>>0]=48}while(h>>>0>ca>>>0);if(!(k[a>>2]&32))PN(h,(g|0)>9?9:g,a)|0;m=m+4|0;h=g+-9|0;if(!((g|0)>9&m>>>0<C>>>0)){g=h;break}else g=h}}nP(a,48,g+9|0,9,0)}else{s=z?C:w+4|0;if((g|0)>-1){q=(m|0)==0;o=w;do{h=mP(k[o>>2]|0,0,R)|0;if((h|0)==(R|0)){i[T>>0]=48;h=T}do if((o|0)==(w|0)){m=h+1|0;if(!(k[a>>2]&32))PN(h,1,a)|0;if(q&(g|0)<1){h=m;break}if(k[a>>2]&32){h=m;break}PN(191534,1,a)|0;h=m}else{if(h>>>0<=ca>>>0)break;do{h=h+-1|0;i[h>>0]=48}while(h>>>0>ca>>>0)}while(0);m=S-h|0;if(!(k[a>>2]&32))PN(h,(g|0)>(m|0)?m:g,a)|0;g=g-m|0;o=o+4|0}while(o>>>0<s>>>0&(g|0)>-1)}nP(a,48,g+18|0,18,0);if(k[a>>2]&32)break;PN(u,_-u|0,a)|0}while(0);nP(a,32,J,y,H^8192);g=(y|0)<(J|0)?J:y}else{s=(u&32|0)!=0;q=n!=n|0.0!=0.0;h=q?0:F;o=h+3|0;nP(a,32,J,o,m);g=k[a>>2]|0;if(!(g&32)){PN(G,h,a)|0;g=k[a>>2]|0}if(!(g&32))PN(q?(s?191526:191530):s?191518:191522,3,a)|0;nP(a,32,J,o,H^8192);g=(o|0)<(J|0)?J:o}while(0);w=I;continue a}default:{m=H;h=o;s=0;u=191482;g=N}}while(0);g:do if((K|0)==64){m=aa;h=k[m>>2]|0;m=k[m+4>>2]|0;q=u&32;if(!((h|0)==0&(m|0)==0)){g=N;do{g=g+-1|0;i[g>>0]=l[191466+(h&15)>>0]|q;h=EP(h|0,m|0,4)|0;m=L}while(!((h|0)==0&(m|0)==0));K=aa;if((s&8|0)==0|(k[K>>2]|0)==0&(k[K+4>>2]|0)==0){h=s;s=0;q=191482;K=77}else{h=s;s=2;q=191482+(u>>4)|0;K=77}}else{g=N;h=s;s=0;q=191482;K=77}}else if((K|0)==76){g=mP(g,h,N)|0;h=H;s=m;K=77}else if((K|0)==82){K=0;H=hO(g,0,o)|0;G=(H|0)==0;w=g;h=G?o:H-g|0;s=0;u=191482;g=G?g+o|0:H}else if((K|0)==86){K=0;h=0;g=0;q=k[aa>>2]|0;while(1){m=k[q>>2]|0;if(!m)break;g=YM(ea,m)|0;if((g|0)<0|g>>>0>(o-h|0)>>>0)break;h=g+h|0;if(o>>>0>h>>>0)q=q+4|0;else break}if((g|0)<0){f=-1;break a}nP(a,32,J,h,H);if(!h){g=0;K=98}else{m=0;o=k[aa>>2]|0;while(1){g=k[o>>2]|0;if(!g){g=h;K=98;break g}g=YM(ea,g)|0;m=g+m|0;if((m|0)>(h|0)){g=h;K=98;break g}if(!(k[a>>2]&32))PN(ea,g,a)|0;if(m>>>0>=h>>>0){g=h;K=98;break}else o=o+4|0}}}while(0);if((K|0)==98){K=0;nP(a,32,J,g,H^8192);w=I;g=(J|0)>(g|0)?J:g;continue}if((K|0)==77){K=0;m=(o|0)>-1?h&-65537:h;h=aa;h=(k[h>>2]|0)!=0|(k[h+4>>2]|0)!=0;if((o|0)!=0|h){h=(h&1^1)+(U-g)|0;w=g;h=(o|0)>(h|0)?o:h;u=q;g=N}else{w=N;h=0;u=q;g=N}}q=g-w|0;h=(h|0)<(q|0)?q:h;o=s+h|0;g=(J|0)<(o|0)?o:J;nP(a,32,g,o,m);if(!(k[a>>2]&32))PN(u,s,a)|0;nP(a,48,g,o,m^65536);nP(a,48,h,q,0);if(!(k[a>>2]&32))PN(w,q,a)|0;nP(a,32,g,o,m^8192);w=I}h:do if((K|0)==245)if(!a)if(b){f=1;while(1){b=k[e+(f<<2)>>2]|0;if(!b)break;lP(d+(f<<3)|0,b,c);f=f+1|0;if((f|0)>=10){f=1;break h}}if((f|0)<10)while(1){if(k[e+(f<<2)>>2]|0){f=-1;break h}f=f+1|0;if((f|0)>=10){f=1;break}}else f=1}else f=0;while(0);r=ga;return f|0}function cP(a,b,c){a=a|0;b=b|0;c=c|0;return uN(a,b,c)|0}function dP(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0;o=r;r=r+240|0;n=o;k[n>>2]=a;a:do if((d|0)>1){m=0-b|0;f=d;g=a;i=a;j=1;while(1){a=g+m|0;l=f+-2|0;h=g+(0-((k[e+(l<<2)>>2]|0)+b))|0;if((_b[c&127](i,h)|0)>-1?(_b[c&127](i,a)|0)>-1:0){d=j;break a}d=j+1|0;g=n+(j<<2)|0;if((_b[c&127](h,a)|0)>-1){k[g>>2]=h;a=h;f=f+-1|0}else{k[g>>2]=a;f=l}if((f|0)<=1)break a;g=a;i=k[n>>2]|0;j=d}}else d=1;while(0);jP(b,n,d);r=o;return}function eP(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;var h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0;q=r;r=r+240|0;o=q;i=k[d>>2]|0;d=k[d+4>>2]|0;k[o>>2]=a;n=0-b|0;a:do if((d|0)!=0|(i|0)!=1?(h=a+(0-(k[g+(e<<2)>>2]|0))|0,(_b[c&127](h,a)|0)>=1):0){f=(f|0)==0;m=h;j=i;l=d;h=1;while(1){if(f&(e|0)>1){d=k[g+(e+-2<<2)>>2]|0;if((_b[c&127](a+n|0,m)|0)>-1){f=e;d=h;p=20;break a}if((_b[c&127](a+(0-(d+b))|0,m)|0)>-1){f=e;d=h;p=20;break a}}d=h+1|0;k[o+(h<<2)>>2]=m;f=j+-1|0;do if(f){if(!(f&1)){a=f;f=0;do{f=f+1|0;a=a>>>1}while((a&1|0)==0);if(!f)p=11}else p=11;if((p|0)==11){p=0;if(!l){f=64;p=16;break}if(!(l&1)){a=l;f=0}else{i=0;a=j;h=l;f=0;break}while(1){h=f+1|0;a=a>>>1;if(a&1){a=h;break}else f=h}if(!a){i=0;a=j;h=l;f=0;break}else f=f+33|0}if(f>>>0>31)p=16;else{i=f;a=j;h=l}}else{f=32;p=16}while(0);if((p|0)==16){p=0;i=f+-32|0;a=l;h=0}j=h<<32-i|a>>>i;l=h>>>i;f=f+e|0;if(!((l|0)!=0|(j|0)!=1)){a=m;p=20;break a}a=m+(0-(k[g+(f<<2)>>2]|0))|0;if((_b[c&127](a,k[o>>2]|0)|0)<1){a=m;e=f;f=0;p=19;break}else{i=m;e=f;f=1;m=a;h=d;a=i}}}else{d=1;p=19}while(0);if((p|0)==19?(f|0)==0:0){f=e;p=20}if((p|0)==20){jP(b,o,d);dP(a,b,c,f,g)}r=q;return}function fP(a,b,c){a=a|0;b=b|0;c=c|0;var d=0.0,e=0,f=0,g=0,h=0;h=r;r=r+112|0;g=h;e=g;f=e+112|0;do{k[e>>2]=0;e=e+4|0}while((e|0)<(f|0));e=g+4|0;k[e>>2]=a;f=g+8|0;k[f>>2]=-1;k[g+44>>2]=a;k[g+76>>2]=-1;xM(g,0);d=+uM(g,c,1);c=(k[e>>2]|0)-(k[f>>2]|0)+(k[g+108>>2]|0)|0;if(b)k[b>>2]=(c|0)!=0?a+c|0:a;r=h;return +d}function gP(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0;i=r;r=r+112|0;h=i;k[h>>2]=0;f=h+4|0;k[f>>2]=a;k[h+44>>2]=a;g=h+8|0;k[g>>2]=(a|0)<0?-1:a+2147483647|0;k[h+76>>2]=-1;xM(h,0);d=vM(h,c,1,d,e)|0;if(b)k[b>>2]=a+((k[f>>2]|0)+(k[h+108>>2]|0)-(k[g>>2]|0));r=i;return d|0}function hP(a){a=a|0;return}
function iP(){return}function jP(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0,h=0;g=r;r=r+256|0;d=g;a:do if((c|0)>=2?(f=b+(c<<2)|0,k[f>>2]=d,(a|0)!=0):0)while(1){e=a>>>0>256?256:a;GP(d|0,k[b>>2]|0,e|0)|0;d=0;do{h=b+(d<<2)|0;d=d+1|0;GP(k[h>>2]|0,k[b+(d<<2)>>2]|0,e|0)|0;k[h>>2]=(k[h>>2]|0)+e}while((d|0)!=(c|0));if((a|0)==(e|0))break a;a=a-e|0;d=k[f>>2]|0}while(0);r=g;return}function kP(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;d=a+20|0;e=k[d>>2]|0;a=(k[a+16>>2]|0)-e|0;a=a>>>0>c>>>0?c:a;GP(e|0,b|0,a|0)|0;k[d>>2]=(k[d>>2]|0)+a;return c|0}function lP(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0.0;a:do if(b>>>0<=20)do switch(b|0){case 9:{d=(k[c>>2]|0)+(4-1)&~(4-1);b=k[d>>2]|0;k[c>>2]=d+4;k[a>>2]=b;break a}case 10:{d=(k[c>>2]|0)+(4-1)&~(4-1);b=k[d>>2]|0;k[c>>2]=d+4;d=a;k[d>>2]=b;k[d+4>>2]=((b|0)<0)<<31>>31;break a}case 11:{d=(k[c>>2]|0)+(4-1)&~(4-1);b=k[d>>2]|0;k[c>>2]=d+4;d=a;k[d>>2]=b;k[d+4>>2]=0;break a}case 12:{d=(k[c>>2]|0)+(8-1)&~(8-1);b=d;e=k[b>>2]|0;b=k[b+4>>2]|0;k[c>>2]=d+8;d=a;k[d>>2]=e;k[d+4>>2]=b;break a}case 13:{e=(k[c>>2]|0)+(4-1)&~(4-1);d=k[e>>2]|0;k[c>>2]=e+4;d=(d&65535)<<16>>16;e=a;k[e>>2]=d;k[e+4>>2]=((d|0)<0)<<31>>31;break a}case 14:{e=(k[c>>2]|0)+(4-1)&~(4-1);d=k[e>>2]|0;k[c>>2]=e+4;e=a;k[e>>2]=d&65535;k[e+4>>2]=0;break a}case 15:{e=(k[c>>2]|0)+(4-1)&~(4-1);d=k[e>>2]|0;k[c>>2]=e+4;d=(d&255)<<24>>24;e=a;k[e>>2]=d;k[e+4>>2]=((d|0)<0)<<31>>31;break a}case 16:{e=(k[c>>2]|0)+(4-1)&~(4-1);d=k[e>>2]|0;k[c>>2]=e+4;e=a;k[e>>2]=d&255;k[e+4>>2]=0;break a}case 17:{e=(k[c>>2]|0)+(8-1)&~(8-1);f=+p[e>>3];k[c>>2]=e+8;p[a>>3]=f;break a}case 18:{e=(k[c>>2]|0)+(8-1)&~(8-1);f=+p[e>>3];k[c>>2]=e+8;p[a>>3]=f;break a}default:break a}while(0);while(0);return}function mP(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if(b>>>0>0|(b|0)==0&a>>>0>4294967295)while(1){d=RP(a|0,b|0,10,0)|0;c=c+-1|0;i[c>>0]=d|48;d=QP(a|0,b|0,10,0)|0;if(b>>>0>9|(b|0)==9&a>>>0>4294967295){a=d;b=L}else{a=d;break}}if(a)while(1){c=c+-1|0;i[c>>0]=(a>>>0)%10|0|48;if(a>>>0<10)break;else a=(a>>>0)/10|0}return c|0}function nP(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0;h=r;r=r+256|0;g=h;do if((c|0)>(d|0)&(e&73728|0)==0){e=c-d|0;IP(g|0,b|0,(e>>>0>256?256:e)|0)|0;b=k[a>>2]|0;f=(b&32|0)==0;if(e>>>0>255){d=c-d|0;do{if(f){PN(g,256,a)|0;b=k[a>>2]|0}e=e+-256|0;f=(b&32|0)==0}while(e>>>0>255);if(f)e=d&255;else break}else if(!f)break;PN(g,e,a)|0}while(0);r=h;return}function oP(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0;f=k[a>>2]|0;g=(f|0)>-1;a:do if(!c)if(g){i=b+32|0;h=a;g=a;while(1){if((k[b>>2]|0)>-1?(z=d+(f<<2)|0,k[z>>2]=(k[z>>2]|0)+1,(k[i>>2]|0)>-1):0){f=i;do{z=d+(k[h>>2]<<2)|0;k[z>>2]=(k[z>>2]|0)+1;f=f+32|0}while((k[f>>2]|0)>-1)}g=g+32|0;f=k[g>>2]|0;if((f|0)>-1)h=g;else{f=0;break}}}else f=0;else if(g){w=a;t=a;while(1){f=k[b>>2]|0;b:do if((f|0)>-1){s=t+4|0;u=t+8|0;v=t+16|0;o=t+20|0;p=t+24|0;q=t+28|0;r=t+12|0;g=b;h=-1;while(1){while(1){if((f|0)!=(h|0)){n=f;break}g=g+32|0;f=k[g>>2]|0;if((f|0)<=-1)break b}h=c+(k[e+(k[w>>2]<<2)>>2]<<5)|0;while(1){f=h+8|0;if(!(k[f>>2]|0)){j=h;break}else h=h+32|0}k[j+40>>2]=0;k[j>>2]=k[s>>2];k[j+4>>2]=k[u>>2];k[f>>2]=c+(k[e+(n<<2)>>2]<<5);k[j+12>>2]=n;f=k[o>>2]|0;h=k[g+16>>2]|k[v>>2]|((f|0)!=0?4:0)|((k[p>>2]|0)!=0?8:0);i=j+20|0;k[i>>2]=h;a=k[q>>2]|0;if((a|0)>-1){k[i>>2]=h|256;f=a}k[j+24>>2]=f;h=k[p>>2]|0;if(!h)k[j+28>>2]=0;else{i=0;while(1){f=i+1|0;if(!(k[h+(i<<2)>>2]|0))break;else i=f}f=uP(f<<2)|0;k[j+28>>2]=f;if(!f){f=12;break a}d=k[p>>2]|0;h=k[d>>2]|0;if(h){i=f;a=0;do{k[i>>2]=h;a=a+1|0;h=k[d+(a<<2)>>2]|0;i=f+(a<<2)|0}while((h|0)!=0);f=i}k[f>>2]=0}f=k[r>>2]|0;if(!f)h=0;else{h=0;while(1)if((k[f+(h<<2)>>2]|0)>-1)h=h+1|0;else break}d=g+12|0;f=k[d>>2]|0;if(!f)i=0;else{i=0;while(1)if((k[f+(i<<2)>>2]|0)>-1)i=i+1|0;else break}a=j+16|0;f=k[a>>2]|0;if(f)vP(f);k[a>>2]=0;f=i+h|0;if((f|0)>0){m=uP((f<<2)+4|0)|0;k[a>>2]=m;if(!m){f=12;break a}i=k[r>>2]|0;if((i|0)!=0?(y=k[i>>2]|0,(y|0)>-1):0){h=y;f=0;do{k[m+(f<<2)>>2]=h;f=f+1|0;h=k[i+(f<<2)>>2]|0}while((h|0)>-1)}else f=0;a=k[d>>2]|0;if((a|0)!=0?(x=k[a>>2]|0,(x|0)>-1):0){d=(f|0)>0;j=x;l=0;h=f;while(1){c:do if(d){i=0;while(1){if((k[m+(i<<2)>>2]|0)==(j|0))break c;i=i+1|0;if((i|0)>=(f|0)){z=39;break}}}else z=39;while(0);if((z|0)==39){z=0;k[m+(h<<2)>>2]=j;h=h+1|0}l=l+1|0;j=k[a+(l<<2)>>2]|0;if((j|0)<=-1){f=h;break}}}k[m+(f<<2)>>2]=-1}g=g+32|0;f=k[g>>2]|0;if((f|0)>-1)h=n;else break}}while(0);f=t+32|0;if((k[f>>2]|0)>-1){w=f;t=f}else{f=0;break}}}else f=0;while(0);return f|0}function pP(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;e=iN(a,0,0,0,8)|0;do if(e){d=QO(a,0,20)|0;if(!d){k[e>>2]=0;d=12;break}f=k[d+4>>2]|0;k[f>>2]=-3;k[f+4>>2]=c;k[f+8>>2]=-1;k[e>>2]=d;d=iN(a,0,0,0,32)|0;k[e+4>>2]=d;if(d){f=b+4|0;k[d+4>>2]=k[f>>2];k[d>>2]=k[b>>2];k[d+8>>2]=-1;k[d+12>>2]=-1;k[d+24>>2]=0;k[d+28>>2]=0;k[d+20>>2]=0;k[f>>2]=e;k[b>>2]=1;d=0}else d=12}else d=12;while(0);return d|0}function qP(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;d=k[a>>2]|0;if((d|0)>-1){f=k[b+16>>2]|0;e=0;do{b=(d|0)/2|0;if(!(d&1))k[f+(b*12|0)>>2]=c;else k[f+(b*12|0)+4>>2]=c;e=e+1|0;d=k[a+(e<<2)>>2]|0}while((d|0)>-1)}k[a>>2]=-1;return}function rP(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0;e=iN(a,0,0,0,8)|0;do if(e){d=QO(a,0,20)|0;if(!d){k[e+4>>2]=0;d=12;break}f=k[d+4>>2]|0;k[f>>2]=-3;k[f+4>>2]=c;k[f+8>>2]=-1;k[e+4>>2]=d;d=iN(a,0,0,0,32)|0;k[e>>2]=d;if(d){f=b+4|0;k[d+4>>2]=k[f>>2];k[d>>2]=k[b>>2];k[d+8>>2]=-1;k[d+12>>2]=-1;k[d+24>>2]=0;k[d+28>>2]=0;k[d+20>>2]=0;k[f>>2]=e;k[b>>2]=1;d=0}else d=12}else d=12;while(0);return d|0}function sP(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;var g=0,h=0,i=0,j=0;h=k[f>>2]|0;g=k[e>>2]|0;if((k[d>>2]|0)>=(g|0))if((g|0)<=1024?(k[e>>2]=g<<1,i=xP(h,g<<3)|0,(i|0)!=0):0){k[f>>2]=i;h=i;j=5}else g=12;else j=5;if((j|0)==5){g=QO(a,0,20)|0;if(!g)g=0;else{j=k[g+4>>2]|0;k[j>>2]=b;k[j+4>>2]=c;k[j+8>>2]=-1}j=k[d>>2]|0;k[h+(j<<2)>>2]=g;k[d>>2]=j+1;g=(g|0)==0?12:0}return g|0}function tP(a,b){a=a|0;b=b|0;a=k[k[(k[a>>2]|0)+4>>2]>>2]|0;b=k[k[(k[b>>2]|0)+4>>2]>>2]|0;return ((a|0)<(b|0)?-1:(a|0)>(b|0)&1)|0}function uP(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0,v=0,w=0,x=0,y=0,z=0,A=0,B=0,C=0,D=0,E=0,F=0,G=0,H=0,I=0,J=0,K=0,L=0,M=0;do if(a>>>0<245){o=a>>>0<11?16:a+11&-8;a=o>>>3;h=k[24774]|0;c=h>>>a;if(c&3){a=(c&1^1)+a|0;d=a<<1;c=99136+(d<<2)|0;d=99136+(d+2<<2)|0;e=k[d>>2]|0;f=e+8|0;g=k[f>>2]|0;do if((c|0)!=(g|0)){if(g>>>0<(k[24778]|0)>>>0)Ra();b=g+12|0;if((k[b>>2]|0)==(e|0)){k[b>>2]=c;k[d>>2]=g;break}else Ra()}else k[24774]=h&~(1<<a);while(0);M=a<<3;k[e+4>>2]=M|3;M=e+(M|4)|0;k[M>>2]=k[M>>2]|1;M=f;return M|0}g=k[24776]|0;if(o>>>0>g>>>0){if(c){d=2<<a;d=c<<a&(d|0-d);d=(d&0-d)+-1|0;i=d>>>12&16;d=d>>>i;e=d>>>5&8;d=d>>>e;f=d>>>2&4;d=d>>>f;c=d>>>1&2;d=d>>>c;a=d>>>1&1;a=(e|i|f|c|a)+(d>>>a)|0;d=a<<1;c=99136+(d<<2)|0;d=99136+(d+2<<2)|0;f=k[d>>2]|0;i=f+8|0;e=k[i>>2]|0;do if((c|0)!=(e|0)){if(e>>>0<(k[24778]|0)>>>0)Ra();b=e+12|0;if((k[b>>2]|0)==(f|0)){k[b>>2]=c;k[d>>2]=e;j=k[24776]|0;break}else Ra()}else{k[24774]=h&~(1<<a);j=g}while(0);M=a<<3;g=M-o|0;k[f+4>>2]=o|3;h=f+o|0;k[f+(o|4)>>2]=g|1;k[f+M>>2]=g;if(j){e=k[24779]|0;c=j>>>3;b=c<<1;d=99136+(b<<2)|0;a=k[24774]|0;c=1<<c;if(a&c){a=99136+(b+2<<2)|0;b=k[a>>2]|0;if(b>>>0<(k[24778]|0)>>>0)Ra();else{l=a;m=b}}else{k[24774]=a|c;l=99136+(b+2<<2)|0;m=d}k[l>>2]=e;k[m+12>>2]=e;k[e+8>>2]=m;k[e+12>>2]=d}k[24776]=g;k[24779]=h;M=i;return M|0}a=k[24775]|0;if(a){c=(a&0-a)+-1|0;L=c>>>12&16;c=c>>>L;K=c>>>5&8;c=c>>>K;M=c>>>2&4;c=c>>>M;a=c>>>1&2;c=c>>>a;d=c>>>1&1;d=k[99400+((K|L|M|a|d)+(c>>>d)<<2)>>2]|0;c=(k[d+4>>2]&-8)-o|0;a=d;while(1){b=k[a+16>>2]|0;if(!b){b=k[a+20>>2]|0;if(!b){i=c;break}}a=(k[b+4>>2]&-8)-o|0;M=a>>>0<c>>>0;c=M?a:c;a=b;d=M?b:d}f=k[24778]|0;if(d>>>0<f>>>0)Ra();h=d+o|0;if(d>>>0>=h>>>0)Ra();g=k[d+24>>2]|0;c=k[d+12>>2]|0;do if((c|0)==(d|0)){a=d+20|0;b=k[a>>2]|0;if(!b){a=d+16|0;b=k[a>>2]|0;if(!b){n=0;break}}while(1){c=b+20|0;e=k[c>>2]|0;if(e){b=e;a=c;continue}c=b+16|0;e=k[c>>2]|0;if(!e)break;else{b=e;a=c}}if(a>>>0<f>>>0)Ra();else{k[a>>2]=0;n=b;break}}else{e=k[d+8>>2]|0;if(e>>>0<f>>>0)Ra();b=e+12|0;if((k[b>>2]|0)!=(d|0))Ra();a=c+8|0;if((k[a>>2]|0)==(d|0)){k[b>>2]=c;k[a>>2]=e;n=c;break}else Ra()}while(0);do if(g){b=k[d+28>>2]|0;a=99400+(b<<2)|0;if((d|0)==(k[a>>2]|0)){k[a>>2]=n;if(!n){k[24775]=k[24775]&~(1<<b);break}}else{if(g>>>0<(k[24778]|0)>>>0)Ra();b=g+16|0;if((k[b>>2]|0)==(d|0))k[b>>2]=n;else k[g+20>>2]=n;if(!n)break}a=k[24778]|0;if(n>>>0<a>>>0)Ra();k[n+24>>2]=g;b=k[d+16>>2]|0;do if(b)if(b>>>0<a>>>0)Ra();else{k[n+16>>2]=b;k[b+24>>2]=n;break}while(0);b=k[d+20>>2]|0;if(b)if(b>>>0<(k[24778]|0)>>>0)Ra();else{k[n+20>>2]=b;k[b+24>>2]=n;break}}while(0);if(i>>>0<16){M=i+o|0;k[d+4>>2]=M|3;M=d+(M+4)|0;k[M>>2]=k[M>>2]|1}else{k[d+4>>2]=o|3;k[d+(o|4)>>2]=i|1;k[d+(i+o)>>2]=i;b=k[24776]|0;if(b){f=k[24779]|0;c=b>>>3;b=c<<1;e=99136+(b<<2)|0;a=k[24774]|0;c=1<<c;if(a&c){b=99136+(b+2<<2)|0;a=k[b>>2]|0;if(a>>>0<(k[24778]|0)>>>0)Ra();else{p=b;q=a}}else{k[24774]=a|c;p=99136+(b+2<<2)|0;q=e}k[p>>2]=f;k[q+12>>2]=f;k[f+8>>2]=q;k[f+12>>2]=e}k[24776]=i;k[24779]=h}M=d+8|0;return M|0}else q=o}else q=o}else if(a>>>0<=4294967231){a=a+11|0;m=a&-8;l=k[24775]|0;if(l){c=0-m|0;a=a>>>8;if(a)if(m>>>0>16777215)j=31;else{q=(a+1048320|0)>>>16&8;v=a<<q;p=(v+520192|0)>>>16&4;v=v<<p;j=(v+245760|0)>>>16&2;j=14-(p|q|j)+(v<<j>>>15)|0;j=m>>>(j+7|0)&1|j<<1}else j=0;a=k[99400+(j<<2)>>2]|0;a:do if(!a){e=0;a=0;v=86}else{g=c;e=0;h=m<<((j|0)==31?0:25-(j>>>1)|0);i=a;a=0;while(1){f=k[i+4>>2]&-8;c=f-m|0;if(c>>>0<g>>>0)if((f|0)==(m|0)){f=i;a=i;v=90;break a}else a=i;else c=g;v=k[i+20>>2]|0;i=k[i+16+(h>>>31<<2)>>2]|0;e=(v|0)==0|(v|0)==(i|0)?e:v;if(!i){v=86;break}else{g=c;h=h<<1}}}while(0);if((v|0)==86){if((e|0)==0&(a|0)==0){a=2<<j;a=l&(a|0-a);if(!a){q=m;break}a=(a&0-a)+-1|0;n=a>>>12&16;a=a>>>n;l=a>>>5&8;a=a>>>l;p=a>>>2&4;a=a>>>p;q=a>>>1&2;a=a>>>q;e=a>>>1&1;e=k[99400+((l|n|p|q|e)+(a>>>e)<<2)>>2]|0;a=0}if(!e){h=c;i=a}else{f=e;v=90}}if((v|0)==90)while(1){v=0;q=(k[f+4>>2]&-8)-m|0;e=q>>>0<c>>>0;c=e?q:c;a=e?f:a;e=k[f+16>>2]|0;if(e){f=e;v=90;continue}f=k[f+20>>2]|0;if(!f){h=c;i=a;break}else v=90}if((i|0)!=0?h>>>0<((k[24776]|0)-m|0)>>>0:0){e=k[24778]|0;if(i>>>0<e>>>0)Ra();g=i+m|0;if(i>>>0>=g>>>0)Ra();f=k[i+24>>2]|0;c=k[i+12>>2]|0;do if((c|0)==(i|0)){a=i+20|0;b=k[a>>2]|0;if(!b){a=i+16|0;b=k[a>>2]|0;if(!b){o=0;break}}while(1){c=b+20|0;d=k[c>>2]|0;if(d){b=d;a=c;continue}c=b+16|0;d=k[c>>2]|0;if(!d)break;else{b=d;a=c}}if(a>>>0<e>>>0)Ra();else{k[a>>2]=0;o=b;break}}else{d=k[i+8>>2]|0;if(d>>>0<e>>>0)Ra();b=d+12|0;if((k[b>>2]|0)!=(i|0))Ra();a=c+8|0;if((k[a>>2]|0)==(i|0)){k[b>>2]=c;k[a>>2]=d;o=c;break}else Ra()}while(0);do if(f){b=k[i+28>>2]|0;a=99400+(b<<2)|0;if((i|0)==(k[a>>2]|0)){k[a>>2]=o;if(!o){k[24775]=k[24775]&~(1<<b);break}}else{if(f>>>0<(k[24778]|0)>>>0)Ra();b=f+16|0;if((k[b>>2]|0)==(i|0))k[b>>2]=o;else k[f+20>>2]=o;if(!o)break}a=k[24778]|0;if(o>>>0<a>>>0)Ra();k[o+24>>2]=f;b=k[i+16>>2]|0;do if(b)if(b>>>0<a>>>0)Ra();else{k[o+16>>2]=b;k[b+24>>2]=o;break}while(0);b=k[i+20>>2]|0;if(b)if(b>>>0<(k[24778]|0)>>>0)Ra();else{k[o+20>>2]=b;k[b+24>>2]=o;break}}while(0);b:do if(h>>>0>=16){k[i+4>>2]=m|3;k[i+(m|4)>>2]=h|1;k[i+(h+m)>>2]=h;b=h>>>3;if(h>>>0<256){a=b<<1;d=99136+(a<<2)|0;c=k[24774]|0;b=1<<b;if(c&b){b=99136+(a+2<<2)|0;a=k[b>>2]|0;if(a>>>0<(k[24778]|0)>>>0)Ra();else{s=b;t=a}}else{k[24774]=c|b;s=99136+(a+2<<2)|0;t=d}k[s>>2]=g;k[t+12>>2]=g;k[i+(m+8)>>2]=t;k[i+(m+12)>>2]=d;break}b=h>>>8;if(b)if(h>>>0>16777215)d=31;else{L=(b+1048320|0)>>>16&8;M=b<<L;K=(M+520192|0)>>>16&4;M=M<<K;d=(M+245760|0)>>>16&2;d=14-(K|L|d)+(M<<d>>>15)|0;d=h>>>(d+7|0)&1|d<<1}else d=0;b=99400+(d<<2)|0;k[i+(m+28)>>2]=d;k[i+(m+20)>>2]=0;k[i+(m+16)>>2]=0;a=k[24775]|0;c=1<<d;if(!(a&c)){k[24775]=a|c;k[b>>2]=g;k[i+(m+24)>>2]=b;k[i+(m+12)>>2]=g;k[i+(m+8)>>2]=g;break}b=k[b>>2]|0;c:do if((k[b+4>>2]&-8|0)!=(h|0)){d=h<<((d|0)==31?0:25-(d>>>1)|0);while(1){a=b+16+(d>>>31<<2)|0;c=k[a>>2]|0;if(!c)break;if((k[c+4>>2]&-8|0)==(h|0)){y=c;break c}else{d=d<<1;b=c}}if(a>>>0<(k[24778]|0)>>>0)Ra();else{k[a>>2]=g;k[i+(m+24)>>2]=b;k[i+(m+12)>>2]=g;k[i+(m+8)>>2]=g;break b}}else y=b;while(0);b=y+8|0;a=k[b>>2]|0;M=k[24778]|0;if(a>>>0>=M>>>0&y>>>0>=M>>>0){k[a+12>>2]=g;k[b>>2]=g;k[i+(m+8)>>2]=a;k[i+(m+12)>>2]=y;k[i+(m+24)>>2]=0;break}else Ra()}else{M=h+m|0;k[i+4>>2]=M|3;M=i+(M+4)|0;k[M>>2]=k[M>>2]|1}while(0);M=i+8|0;return M|0}else q=m}else q=m}else q=-1;while(0);c=k[24776]|0;if(c>>>0>=q>>>0){b=c-q|0;a=k[24779]|0;if(b>>>0>15){k[24779]=a+q;k[24776]=b;k[a+(q+4)>>2]=b|1;k[a+c>>2]=b;k[a+4>>2]=q|3}else{k[24776]=0;k[24779]=0;k[a+4>>2]=c|3;M=a+(c+4)|0;k[M>>2]=k[M>>2]|1}M=a+8|0;return M|0}a=k[24777]|0;if(a>>>0>q>>>0){L=a-q|0;k[24777]=L;M=k[24780]|0;k[24780]=M+q;k[M+(q+4)>>2]=L|1;k[M+4>>2]=q|3;M=M+8|0;return M|0}do if(!(k[24892]|0)){a=gb(30)|0;if(!(a+-1&a)){k[24894]=a;k[24893]=a;k[24895]=-1;k[24896]=-1;k[24897]=0;k[24885]=0;y=(Cb(0)|0)&-16^1431655768;k[24892]=y;break}else Ra()}while(0);i=q+48|0;h=k[24894]|0;j=q+47|0;g=h+j|0;h=0-h|0;l=g&h;if(l>>>0<=q>>>0){M=0;return M|0}a=k[24884]|0;if((a|0)!=0?(t=k[24882]|0,y=t+l|0,y>>>0<=t>>>0|y>>>0>a>>>0):0){M=0;return M|0}d:do if(!(k[24885]&4)){a=k[24780]|0;e:do if(a){e=99544;while(1){c=k[e>>2]|0;if(c>>>0<=a>>>0?(r=e+4|0,(c+(k[r>>2]|0)|0)>>>0>a>>>0):0){f=e;a=r;break}e=k[e+8>>2]|0;if(!e){v=174;break e}}c=g-(k[24777]|0)&h;if(c>>>0<2147483647){e=cb(c|0)|0;y=(e|0)==((k[f>>2]|0)+(k[a>>2]|0)|0);a=y?c:0;if(y){if((e|0)!=(-1|0)){w=e;p=a;v=194;break d}}else v=184}else a=0}else v=174;while(0);do if((v|0)==174){f=cb(0)|0;if((f|0)!=(-1|0)){a=f;c=k[24893]|0;e=c+-1|0;if(!(e&a))c=l;else c=l-a+(e+a&0-c)|0;a=k[24882]|0;e=a+c|0;if(c>>>0>q>>>0&c>>>0<2147483647){y=k[24884]|0;if((y|0)!=0?e>>>0<=a>>>0|e>>>0>y>>>0:0){a=0;break}e=cb(c|0)|0;y=(e|0)==(f|0);a=y?c:0;if(y){w=f;p=a;v=194;break d}else v=184}else a=0}else a=0}while(0);f:do if((v|0)==184){f=0-c|0;do if(i>>>0>c>>>0&(c>>>0<2147483647&(e|0)!=(-1|0))?(u=k[24894]|0,u=j-c+u&0-u,u>>>0<2147483647):0)if((cb(u|0)|0)==(-1|0)){cb(f|0)|0;break f}else{c=u+c|0;break}while(0);if((e|0)!=(-1|0)){w=e;p=c;v=194;break d}}while(0);k[24885]=k[24885]|4;v=191}else{a=0;v=191}while(0);if((((v|0)==191?l>>>0<2147483647:0)?(w=cb(l|0)|0,x=cb(0)|0,w>>>0<x>>>0&((w|0)!=(-1|0)&(x|0)!=(-1|0))):0)?(z=x-w|0,A=z>>>0>(q+40|0)>>>0,A):0){p=A?z:a;v=194}if((v|0)==194){a=(k[24882]|0)+p|0;k[24882]=a;if(a>>>0>(k[24883]|0)>>>0)k[24883]=a;g=k[24780]|0;g:do if(g){f=99544;do{a=k[f>>2]|0;c=f+4|0;e=k[c>>2]|0;if((w|0)==(a+e|0)){B=a;C=c;D=e;E=f;v=204;break}f=k[f+8>>2]|0}while((f|0)!=0);if(((v|0)==204?(k[E+12>>2]&8|0)==0:0)?g>>>0<w>>>0&g>>>0>=B>>>0:0){k[C>>2]=D+p;M=(k[24777]|0)+p|0;L=g+8|0;L=(L&7|0)==0?0:0-L&7;K=M-L|0;k[24780]=g+L;k[24777]=K;k[g+(L+4)>>2]=K|1;k[g+(M+4)>>2]=40;k[24781]=k[24896];break}a=k[24778]|0;if(w>>>0<a>>>0){k[24778]=w;a=w}c=w+p|0;f=99544;while(1){if((k[f>>2]|0)==(c|0)){e=f;c=f;v=212;break}f=k[f+8>>2]|0;if(!f){c=99544;break}}if((v|0)==212)if(!(k[c+12>>2]&8)){k[e>>2]=w;n=c+4|0;k[n>>2]=(k[n>>2]|0)+p;n=w+8|0;n=(n&7|0)==0?0:0-n&7;j=w+(p+8)|0;j=(j&7|0)==0?0:0-j&7;b=w+(j+p)|0;m=n+q|0;o=w+m|0;l=b-(w+n)-q|0;k[w+(n+4)>>2]=q|3;h:do if((b|0)!=(g|0)){if((b|0)==(k[24779]|0)){M=(k[24776]|0)+l|0;k[24776]=M;k[24779]=o;k[w+(m+4)>>2]=M|1;k[w+(M+m)>>2]=M;break}h=p+4|0;c=k[w+(h+j)>>2]|0;if((c&3|0)==1){i=c&-8;f=c>>>3;i:do if(c>>>0>=256){g=k[w+((j|24)+p)>>2]|0;d=k[w+(p+12+j)>>2]|0;do if((d|0)==(b|0)){e=j|16;d=w+(h+e)|0;c=k[d>>2]|0;if(!c){d=w+(e+p)|0;c=k[d>>2]|0;if(!c){J=0;break}}while(1){e=c+20|0;f=k[e>>2]|0;if(f){c=f;d=e;continue}e=c+16|0;f=k[e>>2]|0;if(!f)break;else{c=f;d=e}}if(d>>>0<a>>>0)Ra();else{k[d>>2]=0;J=c;break}}else{e=k[w+((j|8)+p)>>2]|0;if(e>>>0<a>>>0)Ra();a=e+12|0;if((k[a>>2]|0)!=(b|0))Ra();c=d+8|0;if((k[c>>2]|0)==(b|0)){k[a>>2]=d;k[c>>2]=e;J=d;break}else Ra()}while(0);if(!g)break;a=k[w+(p+28+j)>>2]|0;c=99400+(a<<2)|0;do if((b|0)!=(k[c>>2]|0)){if(g>>>0<(k[24778]|0)>>>0)Ra();a=g+16|0;if((k[a>>2]|0)==(b|0))k[a>>2]=J;else k[g+20>>2]=J;if(!J)break i}else{k[c>>2]=J;if(J)break;k[24775]=k[24775]&~(1<<a);break i}while(0);c=k[24778]|0;if(J>>>0<c>>>0)Ra();k[J+24>>2]=g;b=j|16;a=k[w+(b+p)>>2]|0;do if(a)if(a>>>0<c>>>0)Ra();else{k[J+16>>2]=a;k[a+24>>2]=J;break}while(0);b=k[w+(h+b)>>2]|0;if(!b)break;if(b>>>0<(k[24778]|0)>>>0)Ra();else{k[J+20>>2]=b;k[b+24>>2]=J;break}}else{d=k[w+((j|8)+p)>>2]|0;e=k[w+(p+12+j)>>2]|0;c=99136+(f<<1<<2)|0;do if((d|0)!=(c|0)){if(d>>>0<a>>>0)Ra();if((k[d+12>>2]|0)==(b|0))break;Ra()}while(0);if((e|0)==(d|0)){k[24774]=k[24774]&~(1<<f);break}do if((e|0)==(c|0))F=e+8|0;else{if(e>>>0<a>>>0)Ra();a=e+8|0;if((k[a>>2]|0)==(b|0)){F=a;break}Ra()}while(0);k[d+12>>2]=e;k[F>>2]=d}while(0);b=w+((i|j)+p)|0;e=i+l|0}else e=l;b=b+4|0;k[b>>2]=k[b>>2]&-2;k[w+(m+4)>>2]=e|1;k[w+(e+m)>>2]=e;b=e>>>3;if(e>>>0<256){a=b<<1;d=99136+(a<<2)|0;c=k[24774]|0;b=1<<b;do if(!(c&b)){k[24774]=c|b;K=99136+(a+2<<2)|0;L=d}else{b=99136+(a+2<<2)|0;a=k[b>>2]|0;if(a>>>0>=(k[24778]|0)>>>0){K=b;L=a;break}Ra()}while(0);k[K>>2]=o;k[L+12>>2]=o;k[w+(m+8)>>2]=L;k[w+(m+12)>>2]=d;break}b=e>>>8;do if(!b)d=0;else{if(e>>>0>16777215){d=31;break}K=(b+1048320|0)>>>16&8;L=b<<K;J=(L+520192|0)>>>16&4;L=L<<J;d=(L+245760|0)>>>16&2;d=14-(J|K|d)+(L<<d>>>15)|0;d=e>>>(d+7|0)&1|d<<1}while(0);b=99400+(d<<2)|0;k[w+(m+28)>>2]=d;k[w+(m+20)>>2]=0;k[w+(m+16)>>2]=0;a=k[24775]|0;c=1<<d;if(!(a&c)){k[24775]=a|c;k[b>>2]=o;k[w+(m+24)>>2]=b;k[w+(m+12)>>2]=o;k[w+(m+8)>>2]=o;break}b=k[b>>2]|0;j:do if((k[b+4>>2]&-8|0)!=(e|0)){d=e<<((d|0)==31?0:25-(d>>>1)|0);while(1){a=b+16+(d>>>31<<2)|0;c=k[a>>2]|0;if(!c)break;if((k[c+4>>2]&-8|0)==(e|0)){M=c;break j}else{d=d<<1;b=c}}if(a>>>0<(k[24778]|0)>>>0)Ra();else{k[a>>2]=o;k[w+(m+24)>>2]=b;k[w+(m+12)>>2]=o;k[w+(m+8)>>2]=o;break h}}else M=b;while(0);b=M+8|0;a=k[b>>2]|0;L=k[24778]|0;if(a>>>0>=L>>>0&M>>>0>=L>>>0){k[a+12>>2]=o;k[b>>2]=o;k[w+(m+8)>>2]=a;k[w+(m+12)>>2]=M;k[w+(m+24)>>2]=0;break}else Ra()}else{M=(k[24777]|0)+l|0;k[24777]=M;k[24780]=o;k[w+(m+4)>>2]=M|1}while(0);M=w+(n|8)|0;return M|0}else c=99544;while(1){a=k[c>>2]|0;if(a>>>0<=g>>>0?(b=k[c+4>>2]|0,d=a+b|0,d>>>0>g>>>0):0)break;c=k[c+8>>2]|0}e=a+(b+-39)|0;a=a+(b+-47+((e&7|0)==0?0:0-e&7))|0;e=g+16|0;a=a>>>0<e>>>0?g:a;b=a+8|0;c=w+8|0;c=(c&7|0)==0?0:0-c&7;M=p+-40-c|0;k[24780]=w+c;k[24777]=M;k[w+(c+4)>>2]=M|1;k[w+(p+-36)>>2]=40;k[24781]=k[24896];c=a+4|0;k[c>>2]=27;k[b>>2]=k[24886];k[b+4>>2]=k[24887];k[b+8>>2]=k[24888];k[b+12>>2]=k[24889];k[24886]=w;k[24887]=p;k[24889]=0;k[24888]=b;b=a+28|0;k[b>>2]=7;if((a+32|0)>>>0<d>>>0)do{M=b;b=b+4|0;k[b>>2]=7}while((M+8|0)>>>0<d>>>0);if((a|0)!=(g|0)){f=a-g|0;k[c>>2]=k[c>>2]&-2;k[g+4>>2]=f|1;k[a>>2]=f;b=f>>>3;if(f>>>0<256){a=b<<1;d=99136+(a<<2)|0;c=k[24774]|0;b=1<<b;if(c&b){b=99136+(a+2<<2)|0;a=k[b>>2]|0;if(a>>>0<(k[24778]|0)>>>0)Ra();else{G=b;H=a}}else{k[24774]=c|b;G=99136+(a+2<<2)|0;H=d}k[G>>2]=g;k[H+12>>2]=g;k[g+8>>2]=H;k[g+12>>2]=d;break}b=f>>>8;if(b)if(f>>>0>16777215)d=31;else{L=(b+1048320|0)>>>16&8;M=b<<L;K=(M+520192|0)>>>16&4;M=M<<K;d=(M+245760|0)>>>16&2;d=14-(K|L|d)+(M<<d>>>15)|0;d=f>>>(d+7|0)&1|d<<1}else d=0;c=99400+(d<<2)|0;k[g+28>>2]=d;k[g+20>>2]=0;k[e>>2]=0;b=k[24775]|0;a=1<<d;if(!(b&a)){k[24775]=b|a;k[c>>2]=g;k[g+24>>2]=c;k[g+12>>2]=g;k[g+8>>2]=g;break}b=k[c>>2]|0;k:do if((k[b+4>>2]&-8|0)!=(f|0)){d=f<<((d|0)==31?0:25-(d>>>1)|0);while(1){a=b+16+(d>>>31<<2)|0;c=k[a>>2]|0;if(!c)break;if((k[c+4>>2]&-8|0)==(f|0)){I=c;break k}else{d=d<<1;b=c}}if(a>>>0<(k[24778]|0)>>>0)Ra();else{k[a>>2]=g;k[g+24>>2]=b;k[g+12>>2]=g;k[g+8>>2]=g;break g}}else I=b;while(0);b=I+8|0;a=k[b>>2]|0;M=k[24778]|0;if(a>>>0>=M>>>0&I>>>0>=M>>>0){k[a+12>>2]=g;k[b>>2]=g;k[g+8>>2]=a;k[g+12>>2]=I;k[g+24>>2]=0;break}else Ra()}}else{M=k[24778]|0;if((M|0)==0|w>>>0<M>>>0)k[24778]=w;k[24886]=w;k[24887]=p;k[24889]=0;k[24783]=k[24892];k[24782]=-1;b=0;do{M=b<<1;L=99136+(M<<2)|0;k[99136+(M+3<<2)>>2]=L;k[99136+(M+2<<2)>>2]=L;b=b+1|0}while((b|0)!=32);M=w+8|0;M=(M&7|0)==0?0:0-M&7;L=p+-40-M|0;k[24780]=w+M;k[24777]=L;k[w+(M+4)>>2]=L|1;k[w+(p+-36)>>2]=40;k[24781]=k[24896]}while(0);b=k[24777]|0;if(b>>>0>q>>>0){L=b-q|0;k[24777]=L;M=k[24780]|0;k[24780]=M+q;k[M+(q+4)>>2]=L|1;k[M+4>>2]=q|3;M=M+8|0;return M|0}}M=sM()|0;k[M>>2]=12;M=0;return M|0}function vP(a){a=a|0;var b=0,c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0,u=0;if(!a)return;b=a+-8|0;h=k[24778]|0;if(b>>>0<h>>>0)Ra();c=k[a+-4>>2]|0;d=c&3;if((d|0)==1)Ra();o=c&-8;q=a+(o+-8)|0;do if(!(c&1)){b=k[b>>2]|0;if(!d)return;i=-8-b|0;l=a+i|0;m=b+o|0;if(l>>>0<h>>>0)Ra();if((l|0)==(k[24779]|0)){b=a+(o+-4)|0;c=k[b>>2]|0;if((c&3|0)!=3){u=l;f=m;break}k[24776]=m;k[b>>2]=c&-2;k[a+(i+4)>>2]=m|1;k[q>>2]=m;return}e=b>>>3;if(b>>>0<256){d=k[a+(i+8)>>2]|0;c=k[a+(i+12)>>2]|0;b=99136+(e<<1<<2)|0;if((d|0)!=(b|0)){if(d>>>0<h>>>0)Ra();if((k[d+12>>2]|0)!=(l|0))Ra()}if((c|0)==(d|0)){k[24774]=k[24774]&~(1<<e);u=l;f=m;break}if((c|0)!=(b|0)){if(c>>>0<h>>>0)Ra();b=c+8|0;if((k[b>>2]|0)==(l|0))g=b;else Ra()}else g=c+8|0;k[d+12>>2]=c;k[g>>2]=d;u=l;f=m;break}g=k[a+(i+24)>>2]|0;d=k[a+(i+12)>>2]|0;do if((d|0)==(l|0)){c=a+(i+20)|0;b=k[c>>2]|0;if(!b){c=a+(i+16)|0;b=k[c>>2]|0;if(!b){j=0;break}}while(1){d=b+20|0;e=k[d>>2]|0;if(e){b=e;c=d;continue}d=b+16|0;e=k[d>>2]|0;if(!e)break;else{b=e;c=d}}if(c>>>0<h>>>0)Ra();else{k[c>>2]=0;j=b;break}}else{e=k[a+(i+8)>>2]|0;if(e>>>0<h>>>0)Ra();b=e+12|0;if((k[b>>2]|0)!=(l|0))Ra();c=d+8|0;if((k[c>>2]|0)==(l|0)){k[b>>2]=d;k[c>>2]=e;j=d;break}else Ra()}while(0);if(g){b=k[a+(i+28)>>2]|0;c=99400+(b<<2)|0;if((l|0)==(k[c>>2]|0)){k[c>>2]=j;if(!j){k[24775]=k[24775]&~(1<<b);u=l;f=m;break}}else{if(g>>>0<(k[24778]|0)>>>0)Ra();b=g+16|0;if((k[b>>2]|0)==(l|0))k[b>>2]=j;else k[g+20>>2]=j;if(!j){u=l;f=m;break}}c=k[24778]|0;if(j>>>0<c>>>0)Ra();k[j+24>>2]=g;b=k[a+(i+16)>>2]|0;do if(b)if(b>>>0<c>>>0)Ra();else{k[j+16>>2]=b;k[b+24>>2]=j;break}while(0);b=k[a+(i+20)>>2]|0;if(b)if(b>>>0<(k[24778]|0)>>>0)Ra();else{k[j+20>>2]=b;k[b+24>>2]=j;u=l;f=m;break}else{u=l;f=m}}else{u=l;f=m}}else{u=b;f=o}while(0);if(u>>>0>=q>>>0)Ra();b=a+(o+-4)|0;c=k[b>>2]|0;if(!(c&1))Ra();if(!(c&2)){if((q|0)==(k[24780]|0)){t=(k[24777]|0)+f|0;k[24777]=t;k[24780]=u;k[u+4>>2]=t|1;if((u|0)!=(k[24779]|0))return;k[24779]=0;k[24776]=0;return}if((q|0)==(k[24779]|0)){t=(k[24776]|0)+f|0;k[24776]=t;k[24779]=u;k[u+4>>2]=t|1;k[u+t>>2]=t;return}f=(c&-8)+f|0;e=c>>>3;do if(c>>>0>=256){g=k[a+(o+16)>>2]|0;b=k[a+(o|4)>>2]|0;do if((b|0)==(q|0)){c=a+(o+12)|0;b=k[c>>2]|0;if(!b){c=a+(o+8)|0;b=k[c>>2]|0;if(!b){p=0;break}}while(1){d=b+20|0;e=k[d>>2]|0;if(e){b=e;c=d;continue}d=b+16|0;e=k[d>>2]|0;if(!e)break;else{b=e;c=d}}if(c>>>0<(k[24778]|0)>>>0)Ra();else{k[c>>2]=0;p=b;break}}else{c=k[a+o>>2]|0;if(c>>>0<(k[24778]|0)>>>0)Ra();d=c+12|0;if((k[d>>2]|0)!=(q|0))Ra();e=b+8|0;if((k[e>>2]|0)==(q|0)){k[d>>2]=b;k[e>>2]=c;p=b;break}else Ra()}while(0);if(g){b=k[a+(o+20)>>2]|0;c=99400+(b<<2)|0;if((q|0)==(k[c>>2]|0)){k[c>>2]=p;if(!p){k[24775]=k[24775]&~(1<<b);break}}else{if(g>>>0<(k[24778]|0)>>>0)Ra();b=g+16|0;if((k[b>>2]|0)==(q|0))k[b>>2]=p;else k[g+20>>2]=p;if(!p)break}c=k[24778]|0;if(p>>>0<c>>>0)Ra();k[p+24>>2]=g;b=k[a+(o+8)>>2]|0;do if(b)if(b>>>0<c>>>0)Ra();else{k[p+16>>2]=b;k[b+24>>2]=p;break}while(0);b=k[a+(o+12)>>2]|0;if(b)if(b>>>0<(k[24778]|0)>>>0)Ra();else{k[p+20>>2]=b;k[b+24>>2]=p;break}}}else{d=k[a+o>>2]|0;c=k[a+(o|4)>>2]|0;b=99136+(e<<1<<2)|0;if((d|0)!=(b|0)){if(d>>>0<(k[24778]|0)>>>0)Ra();if((k[d+12>>2]|0)!=(q|0))Ra()}if((c|0)==(d|0)){k[24774]=k[24774]&~(1<<e);break}if((c|0)!=(b|0)){if(c>>>0<(k[24778]|0)>>>0)Ra();b=c+8|0;if((k[b>>2]|0)==(q|0))n=b;else Ra()}else n=c+8|0;k[d+12>>2]=c;k[n>>2]=d}while(0);k[u+4>>2]=f|1;k[u+f>>2]=f;if((u|0)==(k[24779]|0)){k[24776]=f;return}}else{k[b>>2]=c&-2;k[u+4>>2]=f|1;k[u+f>>2]=f}b=f>>>3;if(f>>>0<256){c=b<<1;e=99136+(c<<2)|0;d=k[24774]|0;b=1<<b;if(d&b){b=99136+(c+2<<2)|0;c=k[b>>2]|0;if(c>>>0<(k[24778]|0)>>>0)Ra();else{r=b;s=c}}else{k[24774]=d|b;r=99136+(c+2<<2)|0;s=e}k[r>>2]=u;k[s+12>>2]=u;k[u+8>>2]=s;k[u+12>>2]=e;return}b=f>>>8;if(b)if(f>>>0>16777215)e=31;else{r=(b+1048320|0)>>>16&8;s=b<<r;q=(s+520192|0)>>>16&4;s=s<<q;e=(s+245760|0)>>>16&2;e=14-(q|r|e)+(s<<e>>>15)|0;e=f>>>(e+7|0)&1|e<<1}else e=0;b=99400+(e<<2)|0;k[u+28>>2]=e;k[u+20>>2]=0;k[u+16>>2]=0;c=k[24775]|0;d=1<<e;a:do if(c&d){b=k[b>>2]|0;b:do if((k[b+4>>2]&-8|0)!=(f|0)){e=f<<((e|0)==31?0:25-(e>>>1)|0);while(1){c=b+16+(e>>>31<<2)|0;d=k[c>>2]|0;if(!d)break;if((k[d+4>>2]&-8|0)==(f|0)){t=d;break b}else{e=e<<1;b=d}}if(c>>>0<(k[24778]|0)>>>0)Ra();else{k[c>>2]=u;k[u+24>>2]=b;k[u+12>>2]=u;k[u+8>>2]=u;break a}}else t=b;while(0);b=t+8|0;c=k[b>>2]|0;s=k[24778]|0;if(c>>>0>=s>>>0&t>>>0>=s>>>0){k[c+12>>2]=u;k[b>>2]=u;k[u+8>>2]=c;k[u+12>>2]=t;k[u+24>>2]=0;break}else Ra()}else{k[24775]=c|d;k[b>>2]=u;k[u+24>>2]=b;k[u+12>>2]=u;k[u+8>>2]=u}while(0);u=(k[24782]|0)+-1|0;k[24782]=u;if(!u)b=99552;else return;while(1){b=k[b>>2]|0;if(!b)break;else b=b+8|0}k[24782]=-1;return}function wP(a,b){a=a|0;b=b|0;var c=0;if(a){c=ha(b,a)|0;if((b|a)>>>0>65535)c=((c>>>0)/(a>>>0)|0|0)==(b|0)?c:-1}else c=0;b=uP(c)|0;if(!b)return b|0;if(!(k[b+-4>>2]&3))return b|0;IP(b|0,0,c|0)|0;return b|0}function xP(a,b){a=a|0;b=b|0;var c=0,d=0;if(!a){a=uP(b)|0;return a|0}if(b>>>0>4294967231){a=sM()|0;k[a>>2]=12;a=0;return a|0}c=yP(a+-8|0,b>>>0<11?16:b+11&-8)|0;if(c){a=c+8|0;return a|0}c=uP(b)|0;if(!c){a=0;return a|0}d=k[a+-4>>2]|0;d=(d&-8)-((d&3|0)==0?8:4)|0;GP(c|0,a|0,(d>>>0<b>>>0?d:b)|0)|0;vP(a);a=c;return a|0}function yP(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0;o=a+4|0;p=k[o>>2]|0;i=p&-8;l=a+i|0;h=k[24778]|0;c=p&3;if(!((c|0)!=1&a>>>0>=h>>>0&a>>>0<l>>>0))Ra();d=a+(i|4)|0;e=k[d>>2]|0;if(!(e&1))Ra();if(!c){if(b>>>0<256){a=0;return a|0}if(i>>>0>=(b+4|0)>>>0?(i-b|0)>>>0<=k[24894]<<1>>>0:0)return a|0;a=0;return a|0}if(i>>>0>=b>>>0){c=i-b|0;if(c>>>0<=15)return a|0;k[o>>2]=p&1|b|2;k[a+(b+4)>>2]=c|3;k[d>>2]=k[d>>2]|1;zP(a+b|0,c);return a|0}if((l|0)==(k[24780]|0)){c=(k[24777]|0)+i|0;if(c>>>0<=b>>>0){a=0;return a|0}n=c-b|0;k[o>>2]=p&1|b|2;k[a+(b+4)>>2]=n|1;k[24780]=a+b;k[24777]=n;return a|0}if((l|0)==(k[24779]|0)){d=(k[24776]|0)+i|0;if(d>>>0<b>>>0){a=0;return a|0}c=d-b|0;if(c>>>0>15){k[o>>2]=p&1|b|2;k[a+(b+4)>>2]=c|1;k[a+d>>2]=c;d=a+(d+4)|0;k[d>>2]=k[d>>2]&-2;d=a+b|0}else{k[o>>2]=p&1|d|2;d=a+(d+4)|0;k[d>>2]=k[d>>2]|1;d=0;c=0}k[24776]=c;k[24779]=d;return a|0}if(e&2){a=0;return a|0}m=(e&-8)+i|0;if(m>>>0<b>>>0){a=0;return a|0}n=m-b|0;f=e>>>3;do if(e>>>0>=256){g=k[a+(i+24)>>2]|0;f=k[a+(i+12)>>2]|0;do if((f|0)==(l|0)){d=a+(i+20)|0;c=k[d>>2]|0;if(!c){d=a+(i+16)|0;c=k[d>>2]|0;if(!c){j=0;break}}while(1){e=c+20|0;f=k[e>>2]|0;if(f){c=f;d=e;continue}e=c+16|0;f=k[e>>2]|0;if(!f)break;else{c=f;d=e}}if(d>>>0<h>>>0)Ra();else{k[d>>2]=0;j=c;break}}else{e=k[a+(i+8)>>2]|0;if(e>>>0<h>>>0)Ra();c=e+12|0;if((k[c>>2]|0)!=(l|0))Ra();d=f+8|0;if((k[d>>2]|0)==(l|0)){k[c>>2]=f;k[d>>2]=e;j=f;break}else Ra()}while(0);if(g){c=k[a+(i+28)>>2]|0;d=99400+(c<<2)|0;if((l|0)==(k[d>>2]|0)){k[d>>2]=j;if(!j){k[24775]=k[24775]&~(1<<c);break}}else{if(g>>>0<(k[24778]|0)>>>0)Ra();c=g+16|0;if((k[c>>2]|0)==(l|0))k[c>>2]=j;else k[g+20>>2]=j;if(!j)break}d=k[24778]|0;if(j>>>0<d>>>0)Ra();k[j+24>>2]=g;c=k[a+(i+16)>>2]|0;do if(c)if(c>>>0<d>>>0)Ra();else{k[j+16>>2]=c;k[c+24>>2]=j;break}while(0);c=k[a+(i+20)>>2]|0;if(c)if(c>>>0<(k[24778]|0)>>>0)Ra();else{k[j+20>>2]=c;k[c+24>>2]=j;break}}}else{e=k[a+(i+8)>>2]|0;d=k[a+(i+12)>>2]|0;c=99136+(f<<1<<2)|0;if((e|0)!=(c|0)){if(e>>>0<h>>>0)Ra();if((k[e+12>>2]|0)!=(l|0))Ra()}if((d|0)==(e|0)){k[24774]=k[24774]&~(1<<f);break}if((d|0)!=(c|0)){if(d>>>0<h>>>0)Ra();c=d+8|0;if((k[c>>2]|0)==(l|0))g=c;else Ra()}else g=d+8|0;k[e+12>>2]=d;k[g>>2]=e}while(0);if(n>>>0<16){k[o>>2]=m|p&1|2;b=a+(m|4)|0;k[b>>2]=k[b>>2]|1;return a|0}else{k[o>>2]=p&1|b|2;k[a+(b+4)>>2]=n|3;p=a+(m|4)|0;k[p>>2]=k[p>>2]|1;zP(a+b|0,n);return a|0}return 0}function zP(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0,q=0,r=0,s=0,t=0;q=a+b|0;c=k[a+4>>2]|0;do if(!(c&1)){j=k[a>>2]|0;if(!(c&3))return;n=a+(0-j)|0;m=j+b|0;i=k[24778]|0;if(n>>>0<i>>>0)Ra();if((n|0)==(k[24779]|0)){d=a+(b+4)|0;c=k[d>>2]|0;if((c&3|0)!=3){t=n;g=m;break}k[24776]=m;k[d>>2]=c&-2;k[a+(4-j)>>2]=m|1;k[q>>2]=m;return}f=j>>>3;if(j>>>0<256){e=k[a+(8-j)>>2]|0;d=k[a+(12-j)>>2]|0;c=99136+(f<<1<<2)|0;if((e|0)!=(c|0)){if(e>>>0<i>>>0)Ra();if((k[e+12>>2]|0)!=(n|0))Ra()}if((d|0)==(e|0)){k[24774]=k[24774]&~(1<<f);t=n;g=m;break}if((d|0)!=(c|0)){if(d>>>0<i>>>0)Ra();c=d+8|0;if((k[c>>2]|0)==(n|0))h=c;else Ra()}else h=d+8|0;k[e+12>>2]=d;k[h>>2]=e;t=n;g=m;break}h=k[a+(24-j)>>2]|0;e=k[a+(12-j)>>2]|0;do if((e|0)==(n|0)){e=16-j|0;d=a+(e+4)|0;c=k[d>>2]|0;if(!c){d=a+e|0;c=k[d>>2]|0;if(!c){l=0;break}}while(1){e=c+20|0;f=k[e>>2]|0;if(f){c=f;d=e;continue}e=c+16|0;f=k[e>>2]|0;if(!f)break;else{c=f;d=e}}if(d>>>0<i>>>0)Ra();else{k[d>>2]=0;l=c;break}}else{f=k[a+(8-j)>>2]|0;if(f>>>0<i>>>0)Ra();c=f+12|0;if((k[c>>2]|0)!=(n|0))Ra();d=e+8|0;if((k[d>>2]|0)==(n|0)){k[c>>2]=e;k[d>>2]=f;l=e;break}else Ra()}while(0);if(h){c=k[a+(28-j)>>2]|0;d=99400+(c<<2)|0;if((n|0)==(k[d>>2]|0)){k[d>>2]=l;if(!l){k[24775]=k[24775]&~(1<<c);t=n;g=m;break}}else{if(h>>>0<(k[24778]|0)>>>0)Ra();c=h+16|0;if((k[c>>2]|0)==(n|0))k[c>>2]=l;else k[h+20>>2]=l;if(!l){t=n;g=m;break}}e=k[24778]|0;if(l>>>0<e>>>0)Ra();k[l+24>>2]=h;c=16-j|0;d=k[a+c>>2]|0;do if(d)if(d>>>0<e>>>0)Ra();else{k[l+16>>2]=d;k[d+24>>2]=l;break}while(0);c=k[a+(c+4)>>2]|0;if(c)if(c>>>0<(k[24778]|0)>>>0)Ra();else{k[l+20>>2]=c;k[c+24>>2]=l;t=n;g=m;break}else{t=n;g=m}}else{t=n;g=m}}else{t=a;g=b}while(0);i=k[24778]|0;if(q>>>0<i>>>0)Ra();c=a+(b+4)|0;d=k[c>>2]|0;if(!(d&2)){if((q|0)==(k[24780]|0)){s=(k[24777]|0)+g|0;k[24777]=s;k[24780]=t;k[t+4>>2]=s|1;if((t|0)!=(k[24779]|0))return;k[24779]=0;k[24776]=0;return}if((q|0)==(k[24779]|0)){s=(k[24776]|0)+g|0;k[24776]=s;k[24779]=t;k[t+4>>2]=s|1;k[t+s>>2]=s;return}g=(d&-8)+g|0;f=d>>>3;do if(d>>>0>=256){h=k[a+(b+24)>>2]|0;e=k[a+(b+12)>>2]|0;do if((e|0)==(q|0)){d=a+(b+20)|0;c=k[d>>2]|0;if(!c){d=a+(b+16)|0;c=k[d>>2]|0;if(!c){p=0;break}}while(1){e=c+20|0;f=k[e>>2]|0;if(f){c=f;d=e;continue}e=c+16|0;f=k[e>>2]|0;if(!f)break;else{c=f;d=e}}if(d>>>0<i>>>0)Ra();else{k[d>>2]=0;p=c;break}}else{f=k[a+(b+8)>>2]|0;if(f>>>0<i>>>0)Ra();c=f+12|0;if((k[c>>2]|0)!=(q|0))Ra();d=e+8|0;if((k[d>>2]|0)==(q|0)){k[c>>2]=e;k[d>>2]=f;p=e;break}else Ra()}while(0);if(h){c=k[a+(b+28)>>2]|0;d=99400+(c<<2)|0;if((q|0)==(k[d>>2]|0)){k[d>>2]=p;if(!p){k[24775]=k[24775]&~(1<<c);break}}else{if(h>>>0<(k[24778]|0)>>>0)Ra();c=h+16|0;if((k[c>>2]|0)==(q|0))k[c>>2]=p;else k[h+20>>2]=p;if(!p)break}d=k[24778]|0;if(p>>>0<d>>>0)Ra();k[p+24>>2]=h;c=k[a+(b+16)>>2]|0;do if(c)if(c>>>0<d>>>0)Ra();else{k[p+16>>2]=c;k[c+24>>2]=p;break}while(0);c=k[a+(b+20)>>2]|0;if(c)if(c>>>0<(k[24778]|0)>>>0)Ra();else{k[p+20>>2]=c;k[c+24>>2]=p;break}}}else{e=k[a+(b+8)>>2]|0;d=k[a+(b+12)>>2]|0;c=99136+(f<<1<<2)|0;if((e|0)!=(c|0)){if(e>>>0<i>>>0)Ra();if((k[e+12>>2]|0)!=(q|0))Ra()}if((d|0)==(e|0)){k[24774]=k[24774]&~(1<<f);break}if((d|0)!=(c|0)){if(d>>>0<i>>>0)Ra();c=d+8|0;if((k[c>>2]|0)==(q|0))o=c;else Ra()}else o=d+8|0;k[e+12>>2]=d;k[o>>2]=e}while(0);k[t+4>>2]=g|1;k[t+g>>2]=g;if((t|0)==(k[24779]|0)){k[24776]=g;return}}else{k[c>>2]=d&-2;k[t+4>>2]=g|1;k[t+g>>2]=g}c=g>>>3;if(g>>>0<256){d=c<<1;f=99136+(d<<2)|0;e=k[24774]|0;c=1<<c;if(e&c){c=99136+(d+2<<2)|0;d=k[c>>2]|0;if(d>>>0<(k[24778]|0)>>>0)Ra();else{r=c;s=d}}else{k[24774]=e|c;r=99136+(d+2<<2)|0;s=f}k[r>>2]=t;k[s+12>>2]=t;k[t+8>>2]=s;k[t+12>>2]=f;return}c=g>>>8;if(c)if(g>>>0>16777215)f=31;else{r=(c+1048320|0)>>>16&8;s=c<<r;q=(s+520192|0)>>>16&4;s=s<<q;f=(s+245760|0)>>>16&2;f=14-(q|r|f)+(s<<f>>>15)|0;f=g>>>(f+7|0)&1|f<<1}else f=0;c=99400+(f<<2)|0;k[t+28>>2]=f;k[t+20>>2]=0;k[t+16>>2]=0;d=k[24775]|0;e=1<<f;if(!(d&e)){k[24775]=d|e;k[c>>2]=t;k[t+24>>2]=c;k[t+12>>2]=t;k[t+8>>2]=t;return}c=k[c>>2]|0;a:do if((k[c+4>>2]&-8|0)!=(g|0)){f=g<<((f|0)==31?0:25-(f>>>1)|0);while(1){d=c+16+(f>>>31<<2)|0;e=k[d>>2]|0;if(!e)break;if((k[e+4>>2]&-8|0)==(g|0)){c=e;break a}else{f=f<<1;c=e}}if(d>>>0<(k[24778]|0)>>>0)Ra();k[d>>2]=t;k[t+24>>2]=c;k[t+12>>2]=t;k[t+8>>2]=t;return}while(0);d=c+8|0;e=k[d>>2]|0;s=k[24778]|0;if(!(e>>>0>=s>>>0&c>>>0>=s>>>0))Ra();k[e+12>>2]=t;k[d>>2]=t;k[t+8>>2]=e;k[t+12>>2]=c;k[t+24>>2]=0;return}function AP(){}function BP(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;d=b-d-(c>>>0>a>>>0|0)>>>0;return (L=d,a-c>>>0|0)|0}function CP(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;c=a+c>>>0;return (L=b+d+(c>>>0<a>>>0|0)>>>0,c|0)|0}function DP(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0;y=y+1|0;k[a>>2]=y;while((e|0)<(d|0)){if(!(k[c+(e<<3)>>2]|0)){k[c+(e<<3)>>2]=y;k[c+((e<<3)+4)>>2]=b;k[c+((e<<3)+8)>>2]=0;L=d;return c|0}e=e+1|0}d=d*2|0;c=xP(c|0,8*(d+1|0)|0)|0;c=DP(a|0,b|0,c|0,d|0)|0;L=d;return c|0}function EP(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){L=b>>>c;return a>>>c|(b&(1<<c)-1)<<32-c}L=0;return b>>>c-32|0}function FP(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0;while((e|0)<(c|0)){d=k[b+(e<<3)>>2]|0;if(!d)break;if((d|0)==(a|0))return k[b+((e<<3)+4)>>2]|0;e=e+1|0}return 0}function GP(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if((c|0)>=4096)return ib(a|0,b|0,c|0)|0;d=a|0;if((a&3)==(b&3)){while(a&3){if(!c)return d|0;i[a>>0]=i[b>>0]|0;a=a+1|0;b=b+1|0;c=c-1|0}while((c|0)>=4){k[a>>2]=k[b>>2];a=a+4|0;b=b+4|0;c=c-4|0}}while((c|0)>0){i[a>>0]=i[b>>0]|0;a=a+1|0;b=b+1|0;c=c-1|0}return d|0}function HP(a,b,c){a=a|0;b=b|0;c=c|0;var d=0;if((b|0)<(a|0)&(a|0)<(b+c|0)){d=a;b=b+c|0;a=a+c|0;while((c|0)>0){a=a-1|0;b=b-1|0;c=c-1|0;i[a>>0]=i[b>>0]|0}a=d}else GP(a,b,c)|0;return a|0}function IP(a,b,c){a=a|0;b=b|0;c=c|0;var d=0,e=0,f=0,g=0;d=a+c|0;if((c|0)>=20){b=b&255;f=a&3;g=b|b<<8|b<<16|b<<24;e=d&~3;if(f){f=a+4-f|0;while((a|0)<(f|0)){i[a>>0]=b;a=a+1|0}}while((a|0)<(e|0)){k[a>>2]=g;a=a+4|0}}while((a|0)<(d|0)){i[a>>0]=b;a=a+1|0}return a-c|0}function JP(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){L=b<<c|(a&(1<<c)-1<<32-c)>>>32-c;return a<<c}L=a<<c-32;return 0}function KP(a,b,c){a=a|0;b=b|0;c=c|0;if((c|0)<32){L=b>>c;return a>>>c|(b&(1<<c)-1)<<32-c}L=(b|0)<0?-1:0;return b>>c-32|0}function LP(a){a=a|0;var b=0;b=i[v+(a&255)>>0]|0;if((b|0)<8)return b|0;b=i[v+(a>>8&255)>>0]|0;if((b|0)<8)return b+8|0;b=i[v+(a>>16&255)>>0]|0;if((b|0)<8)return b+16|0;return (i[v+(a>>>24)>>0]|0)+24|0}function MP(a,b){a=a|0;b=b|0;var c=0,d=0,e=0,f=0;f=a&65535;e=b&65535;c=ha(e,f)|0;d=a>>>16;a=(c>>>16)+(ha(e,d)|0)|0;e=b>>>16;b=ha(e,f)|0;return (L=(a>>>16)+(ha(e,d)|0)+(((a&65535)+b|0)>>>16)|0,a+b<<16|c&65535|0)|0}function NP(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;j=b>>31|((b|0)<0?-1:0)<<1;i=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;f=d>>31|((d|0)<0?-1:0)<<1;e=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;h=BP(j^a,i^b,j,i)|0;g=L;a=f^j;b=e^i;return BP((SP(h,g,BP(f^c,e^d,f,e)|0,L,0)|0)^a,L^b,a,b)|0}function OP(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0,g=0,h=0,i=0,j=0;e=r;r=r+16|0;h=e|0;g=b>>31|((b|0)<0?-1:0)<<1;f=((b|0)<0?-1:0)>>31|((b|0)<0?-1:0)<<1;j=d>>31|((d|0)<0?-1:0)<<1;i=((d|0)<0?-1:0)>>31|((d|0)<0?-1:0)<<1;a=BP(g^a,f^b,g,f)|0;b=L;SP(a,b,BP(j^c,i^d,j,i)|0,L,h)|0;d=BP(k[h>>2]^g,k[h+4>>2]^f,g,f)|0;c=L;r=e;return (L=c,d)|0}function PP(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;e=a;f=c;c=MP(e,f)|0;a=L;return (L=(ha(b,f)|0)+(ha(d,e)|0)+a|a&0,c|0|0)|0}function QP(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return SP(a,b,c,d,0)|0}function RP(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;var e=0,f=0;f=r;r=r+16|0;e=f|0;SP(a,b,c,d,e)|0;r=f;return (L=k[e+4>>2]|0,k[e>>2]|0)|0}function SP(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;var f=0,g=0,h=0,i=0,j=0,l=0,m=0,n=0,o=0,p=0;l=a;i=b;j=i;g=c;n=d;h=n;if(!j){f=(e|0)!=0;if(!h){if(f){k[e>>2]=(l>>>0)%(g>>>0);k[e+4>>2]=0}n=0;e=(l>>>0)/(g>>>0)>>>0;return (L=n,e)|0}else{if(!f){n=0;e=0;return (L=n,e)|0}k[e>>2]=a|0;k[e+4>>2]=b&0;n=0;e=0;return (L=n,e)|0}}f=(h|0)==0;do if(g){if(!f){f=(ja(h|0)|0)-(ja(j|0)|0)|0;if(f>>>0<=31){m=f+1|0;h=31-f|0;b=f-31>>31;g=m;a=l>>>(m>>>0)&b|j<<h;b=j>>>(m>>>0)&b;f=0;h=l<<h;break}if(!e){n=0;e=0;return (L=n,e)|0}k[e>>2]=a|0;k[e+4>>2]=i|b&0;n=0;e=0;return (L=n,e)|0}f=g-1|0;if(f&g){h=(ja(g|0)|0)+33-(ja(j|0)|0)|0;p=64-h|0;m=32-h|0;i=m>>31;o=h-32|0;b=o>>31;g=h;a=m-1>>31&j>>>(o>>>0)|(j<<m|l>>>(h>>>0))&b;b=b&j>>>(h>>>0);f=l<<p&i;h=(j<<p|l>>>(o>>>0))&i|l<<m&h-33>>31;break}if(e){k[e>>2]=f&l;k[e+4>>2]=0}if((g|0)==1){o=i|b&0;p=a|0|0;return (L=o,p)|0}else{p=LP(g|0)|0;o=j>>>(p>>>0)|0;p=j<<32-p|l>>>(p>>>0)|0;return (L=o,p)|0}}else{if(f){if(e){k[e>>2]=(j>>>0)%(g>>>0);k[e+4>>2]=0}o=0;p=(j>>>0)/(g>>>0)>>>0;return (L=o,p)|0}if(!l){if(e){k[e>>2]=0;k[e+4>>2]=(j>>>0)%(h>>>0)}o=0;p=(j>>>0)/(h>>>0)>>>0;return (L=o,p)|0}f=h-1|0;if(!(f&h)){if(e){k[e>>2]=a|0;k[e+4>>2]=f&j|b&0}o=0;p=j>>>((LP(h|0)|0)>>>0);return (L=o,p)|0}f=(ja(h|0)|0)-(ja(j|0)|0)|0;if(f>>>0<=30){b=f+1|0;h=31-f|0;g=b;a=j<<h|l>>>(b>>>0);b=j>>>(b>>>0);f=0;h=l<<h;break}if(!e){o=0;p=0;return (L=o,p)|0}k[e>>2]=a|0;k[e+4>>2]=i|b&0;o=0;p=0;return (L=o,p)|0}while(0);if(!g){j=h;i=0;h=0}else{m=c|0|0;l=n|d&0;j=CP(m|0,l|0,-1,-1)|0;c=L;i=h;h=0;do{d=i;i=f>>>31|i<<1;f=h|f<<1;d=a<<1|d>>>31|0;n=a>>>31|b<<1|0;BP(j,c,d,n)|0;p=L;o=p>>31|((p|0)<0?-1:0)<<1;h=o&1;a=BP(d,n,o&m,(((p|0)<0?-1:0)>>31|((p|0)<0?-1:0)<<1)&l)|0;b=L;g=g-1|0}while((g|0)!=0);j=i;i=0}g=0;if(e){k[e>>2]=a;k[e+4>>2]=b}o=(f|0)>>>31|(j|g)<<1|(g<<1|f>>>31)&0|i;p=(f<<1|0>>>31)&-2|h;return (L=o,p)|0}function TP(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;Mb[a&31](b|0,c|0,d|0,e|0,f|0)}function UP(a,b){a=a|0;b=b|0;Nb[a&127](b|0)}function VP(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=+d;e=+e;return Ob[a&3](b|0,c|0,+d,+e)|0}function WP(a,b,c){a=a|0;b=b|0;c=c|0;Pb[a&31](b|0,c|0)}function XP(a,b,c,d,e,f,g,h,i,j,k){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;k=k|0;return Qb[a&3](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0,k|0)|0}function YP(a,b){a=a|0;b=b|0;return Rb[a&63](b|0)|0}function ZP(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;return Sb[a&63](b|0,c|0,d|0,e|0,f|0)|0}function _P(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;return Tb[a&63](b|0,c|0,d|0)|0}function $P(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;Ub[a&15](b|0,c|0,d|0,e|0,f|0,g|0)}function aQ(a,b){a=a|0;b=b|0;return +Vb[a&1](b|0)}function bQ(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;return Wb[a&1](b|0,c|0,d|0,e|0,f|0,g|0)|0}function cQ(a,b){a=a|0;b=+b;return +Xb[a&1](+b)}function dQ(a,b,c,d){a=a|0;b=+b;c=+c;d=+d;return +Yb[a&7](+b,+c,+d)}function eQ(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;Zb[a&0](b|0,c|0,d|0,e|0,f|0,g|0,h|0,i|0,j|0)}function fQ(a,b,c){a=a|0;b=b|0;c=c|0;return _b[a&127](b|0,c|0)|0}function gQ(a){a=a|0;return +$b[a&1]()}function hQ(a){a=a|0;return ac[a&3]()|0}function iQ(a,b,c,d,e,f,g){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;f=+f;g=g|0;bc[a&15](b|0,c|0,d|0,+e,+f,g|0)}function jQ(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;return cc[a&127](b|0,c|0,d|0,e|0)|0}function kQ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;dc[a&127](b|0,c|0,d|0)}function lQ(a){a=a|0;ec[a&7]()}function mQ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;fc[a&1](b|0,c|0,+d)}function nQ(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=+e;return gc[a&1](b|0,c|0,d|0,+e)|0}function oQ(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;hc[a&31](b|0,c|0,d|0,e|0)}function pQ(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ka(0)}function qQ(a){a=a|0;ka(1)}function rQ(a,b,c,d){a=a|0;b=b|0;c=+c;d=+d;ka(2);return 0}function sQ(a,b){a=a|0;b=b|0;ka(3)}function tQ(a,b){a=a|0;b=b|0;Db(a|0,b|0)}function uQ(a,b,c,d,e,f,g,h,i,j){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;j=j|0;ka(4);return 0}function vQ(a){a=a|0;ka(5);return 0}function wQ(a,b,c,d,e){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;ka(6);return 0}function xQ(a,b,c){a=a|0;b=b|0;c=c|0;ka(7);return 0}function yQ(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ka(8)}function zQ(a){a=a|0;ka(9);return 0.0}function AQ(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;ka(10);return 0}function BQ(a){a=+a;ka(11);return 0.0}function CQ(a){a=+a;return +Fb(+a)}function DQ(a,b,c){a=+a;b=+b;c=+c;ka(12);return 0.0}function EQ(a,b,c,d,e,f,g,h,i){a=a|0;b=b|0;c=c|0;d=d|0;e=e|0;f=f|0;g=g|0;h=h|0;i=i|0;ka(13)}function FQ(a,b){a=a|0;b=b|0;ka(14);return 0}function GQ(){ka(15);return 0.0}function HQ(){ka(16);return 0}function IQ(a,b,c,d,e,f){a=a|0;b=b|0;c=c|0;d=+d;e=+e;f=f|0;ka(17)}function JQ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ka(18);return 0}function KQ(a,b,c){a=a|0;b=b|0;c=c|0;ka(19)}function LQ(){ka(20)}function MQ(a,b,c){a=a|0;b=b|0;c=+c;ka(21)}function NQ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=+d;ka(22);return 0}function OQ(a,b,c,d){a=a|0;b=b|0;c=c|0;d=d|0;ka(23)}

// EMSCRIPTEN_END_FUNCS
var Mb=[pQ,dd,rd,yd,Od,pe,WK,VK,EK,FK,UK,hK,iK,MJ,NJ,yi,EA,lJ,mJ,pQ,pQ,pQ,pQ,pQ,pQ,pQ,pQ,pQ,pQ,pQ,pQ,pQ];var Nb=[qQ,yc,zc,Ac,Bc,Cc,Oc,Pc,Qc,Rc,Sc,Tc,Uc,bd,cd,fd,gd,hd,jd,kd,ld,md,nd,od,pd,qd,Bd,Cd,Dd,Fd,Gd,Hd,Id,Jd,Kd,Ld,Md,Nd,Pd,_d,$d,ae,be,me,ne,oe,qe,Be,Ce,De,Fe,Ge,He,Ie,Je,Ke,Le,Me,Ne,Ve,We,Xe,Ye,qf,pf,Oi,Ki,kk,fk,Jk,Kk,Uj,Vj,Gk,Hk,Gi,Hi,Wj,Xj,Zj,_j,ot,Wz,bA,Yz,Xz,mA,xz,yz,hE,mE,kf,zi,ik,jk,vP,Wo,ms,zw,Ix,fB,BF,ZC,zC,AC,CC,bz,MF,CH,JH,_O,$O,qQ,qQ,qQ,qQ,qQ,qQ,qQ,qQ,qQ,qQ,qQ,qQ,qQ,qQ,qQ,qQ];var Ob=[rQ,ao,$n,rQ];var Pb=[sQ,Wc,$c,xd,Vd,he,we,Te,cf,Jt,fA,vA,qA,lA,$z,aA,kE,oE,rz,fn,tQ,ww,gB,Ly,Ny,tC,BC,Zr,PG,sQ,sQ,sQ];var Qb=[uQ,gJ,dJ,uQ];var Rb=[vQ,Tf,Uf,lj,mj,Ct,Gt,DC,EC,$D,aE,bE,cE,dE,eE,fE,gE,pN,rc,Tv,cj,Cy,Zs,Kt,Ys,By,eB,hB,ht,Iy,Jy,My,_s,uP,KH,vQ,vQ,vQ,vQ,vQ,vQ,vQ,vQ,vQ,vQ,vQ,vQ,vQ,vQ,vQ,vQ,vQ,vQ,vQ,vQ,vQ,vQ,vQ,vQ,vQ,vQ,vQ,vQ,vQ];var Sb=[wQ,kt,eA,pA,en,_K,QL,RL,cL,aL,OL,PL,dL,eL,fL,gL,hL,EL,FL,vL,oL,jL,iL,kL,lL,nL,mL,bL,$K,pL,qL,rL,sL,tL,uL,wL,xL,yL,zL,DL,BL,AL,CL,KL,GL,HL,IL,JL,LL,ML,NL,SL,TL,UL,VL,wQ,wQ,wQ,wQ,wQ,wQ,wQ,wQ,wQ];var Tb=[xQ,ij,Uo,xr,Er,Kr,Pr,lt,nt,At,Dt,mz,oC,yF,vK,BK,_J,eK,DJ,JJ,kP,sN,rN,qN,tN,Yr,ej,$i,Io,wk,dn,FN,tq,wq,vq,Rr,vw,TN,Hu,Ky,$A,fz,dD,FH,fJ,cJ,rJ,vJ,cP,xQ,xQ,xQ,xQ,xQ,xQ,xQ,xQ,xQ,xQ,xQ,xQ,xQ,xQ,xQ];var Ub=[yQ,Gc,Zc,vd,Td,fe,ue,Re,af,yQ,yQ,yQ,yQ,yQ,yQ,yQ];var Vb=[zQ,kB];var Wb=[AQ,DH];var Xb=[BQ,CQ];var Yb=[DQ,Xx,Yx,Zx,_x,DQ,DQ,DQ];var Zb=[EQ];var _b=[FQ,jt,Bt,Ht,wA,uA,oA,kA,dA,tH,$G,aH,uH,bH,cH,dH,vH,fH,gH,hH,iH,jH,kH,wH,mH,nH,oH,pH,qH,rH,ZG,_G,eH,lH,VG,WG,XG,UG,SG,TG,xK,yK,AK,GK,HK,IK,JK,KK,LK,MK,NK,aK,bK,dK,FJ,GJ,IJ,Rv,Df,Qf,Og,Pg,Tg,Zh,_h,xi,xf,aj,sk,Rk,wl,Jl,Ll,Nl,Ol,Pl,Vl,Ql,$m,bn,AH,Eo,aq,nv,mv,lv,xw,Lt,Ey,Bw,Rw,Vw,Ww,ex,GN,_A,kC,ss,LF,Es,Gs,uC,xP,Lr,yC,QD,TE,sH,HH,IH,iJ,jJ,kJ,tP,FQ,FQ,FQ,FQ,FQ,FQ,FQ,FQ,FQ,FQ,FQ,FQ,FQ,FQ];var $b=[GQ,dB];var ac=[HQ,tl,az,HQ];var bc=[IQ,fx,gx,hx,ix,jx,kx,lx,mx,IQ,IQ,IQ,IQ,IQ,IQ,IQ];var cc=[JQ,kj,Ul,Vo,zr,Gr,Qs,Nu,Ps,dt,yt,xt,It,Tt,Ut,oz,qC,QC,OC,LE,AF,PF,OF,pK,qK,rK,sK,tK,uK,wK,zK,DK,UJ,VJ,WJ,XJ,YJ,ZJ,$J,cK,gK,xJ,yJ,zJ,AJ,BJ,CJ,EJ,HJ,LJ,Ur,qu,yw,Oy,QN,bB,rI,ZI,zI,HI,uI,OI,SI,QI,TI,hJ,aJ,oJ,pJ,tJ,uJ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ,JQ];var dc=[KQ,Dc,Ec,Hc,Vc,Xc,_c,sd,td,wd,Qd,Rd,Ud,ce,de,ge,re,se,ve,Oe,Pe,Se,Ze,_e,bf,Jh,Kh,Lh,jj,yr,Fr,Cs,mt,pt,Zt,ou,Ou,kw,Tx,pz,nz,Dz,rC,pC,PC,NC,iE,jE,lE,nE,pE,zF,FG,EG,cn,ys,Ms,Rt,xu,yu,aB,dz,vC,wC,KF,GG,HG,IG,OG,QG,GH,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ,KQ];var ec=[LQ,cB,Hy,Py,CF,LQ,LQ,LQ];var fc=[MQ,xC];var gc=[NQ,bD];var hc=[OQ,Fc,Yc,id,ud,Ed,Sd,ee,te,Ee,Qe,$e,nf,mf,lf,jf,hf,ef,uc,gf,ff,cA,nA,CK,fK,KJ,dO,qJ,OQ,OQ,OQ,OQ];return{_saveSetjmp:DP,_vizRenderFromString:tc,_i64Subtract:BP,_fflush:AN,_realloc:xP,_dtextract:Ir,_memmove:HP,_vizLastErrorMessage:sc,_memset:IP,_malloc:uP,_i64Add:CP,_memcpy:GP,_bitshift64Lshr:EP,_free:vP,_bitshift64Shl:JP,___errno_location:sM,_testSetjmp:FP,runPostSets:AP,_emscripten_replace_memory:Lb,stackAlloc:ic,stackSave:jc,stackRestore:kc,establishStackSpace:lc,setThrew:mc,setTempRet0:pc,getTempRet0:qc,dynCall_viiiii:TP,dynCall_vi:UP,dynCall_iiidd:VP,dynCall_vii:WP,dynCall_iiiiiiiiiii:XP,dynCall_ii:YP,dynCall_iiiiii:ZP,dynCall_iiii:_P,dynCall_viiiiii:$P,dynCall_di:aQ,dynCall_iiiiiii:bQ,dynCall_dd:cQ,dynCall_dddd:dQ,dynCall_viiiiiiiii:eQ,dynCall_iii:fQ,dynCall_d:gQ,dynCall_i:hQ,dynCall_viiiddi:iQ,dynCall_iiiii:jQ,dynCall_viii:kQ,dynCall_v:lQ,dynCall_viid:mQ,dynCall_iiiid:nQ,dynCall_viiii:oQ}})


// EMSCRIPTEN_END_ASM
(e.Sa,e.Ta,buffer);e._vizRenderFromString=Y._vizRenderFromString;
var oc=e._saveSetjmp=Y._saveSetjmp;e._fflush=Y._fflush;var yc=e._memset=Y._memset,nc=e._realloc=Y._realloc;e._dtextract=Y._dtextract;var xc=e._memmove=Y._memmove,lb=e._i64Subtract=Y._i64Subtract,sc=e._testSetjmp=Y._testSetjmp;e._vizLastErrorMessage=Y._vizLastErrorMessage;var xa=e._malloc=Y._malloc,nb=e._i64Add=Y._i64Add,vc=e._memcpy=Y._memcpy,Pa=e._emscripten_replace_memory=Y._emscripten_replace_memory;e.runPostSets=Y.runPostSets;var qc=e._bitshift64Lshr=Y._bitshift64Lshr,Ea=e._free=Y._free;
e.___errno_location=Y.___errno_location;var zc=e._bitshift64Shl=Y._bitshift64Shl;e.dynCall_viiiii=Y.dynCall_viiiii;e.dynCall_vi=Y.dynCall_vi;e.dynCall_iiidd=Y.dynCall_iiidd;e.dynCall_vii=Y.dynCall_vii;e.dynCall_iiiiiiiiiii=Y.dynCall_iiiiiiiiiii;e.dynCall_ii=Y.dynCall_ii;e.dynCall_iiiiii=Y.dynCall_iiiiii;e.dynCall_iiii=Y.dynCall_iiii;e.dynCall_viiiiii=Y.dynCall_viiiiii;e.dynCall_di=Y.dynCall_di;e.dynCall_iiiiiii=Y.dynCall_iiiiiii;e.dynCall_dd=Y.dynCall_dd;e.dynCall_dddd=Y.dynCall_dddd;
e.dynCall_viiiiiiiii=Y.dynCall_viiiiiiiii;e.dynCall_iii=Y.dynCall_iii;e.dynCall_d=Y.dynCall_d;e.dynCall_i=Y.dynCall_i;e.dynCall_viiiddi=Y.dynCall_viiiddi;e.dynCall_iiiii=Y.dynCall_iiiii;e.dynCall_viii=Y.dynCall_viii;e.dynCall_v=Y.dynCall_v;e.dynCall_viid=Y.dynCall_viid;e.dynCall_iiiid=Y.dynCall_iiiid;e.dynCall_viiii=Y.dynCall_viiii;n.ia=Y.stackAlloc;n.ya=Y.stackSave;n.ja=Y.stackRestore;n.vd=Y.establishStackSpace;n.lb=Y.setTempRet0;n.Za=Y.getTempRet0;
function ja(a){this.name="ExitStatus";this.message="Program terminated with exit("+a+")";this.status=a}ja.prototype=Error();ja.prototype.constructor=ja;var td=null;
e.callMain=e.sd=function(a){function b(){for(var a=0;3>a;a++)d.push(0)}assert(!0,"cannot call main when async dependencies remain! (listen on __ATMAIN__)");assert(0==Ua.length,"cannot call main when preRun functions remain to be called");a=a||[];Ya||(Ya=!0,Ta(Va));var c=a.length+1,d=[D($a(e.thisProgram),"i8",0)];b();for(var f=0;f<c-1;f+=1)d.push(D($a(a[f]),"i8",0)),b();d.push(0);d=D(d,"i32",0);try{var g=e._main(c,d,0);ud(g,!0)}catch(k){if(!(k instanceof ja))if("SimulateInfiniteLoop"==k)e.noExitRuntime=
!0;else throw k&&"object"===typeof k&&k.stack&&e.X("exception thrown: "+[k,k.stack]),k;}finally{}};
function vd(a){function b(){if(!e.calledRun&&(e.calledRun=!0,!x)){Ya||(Ya=!0,Ta(Va));Ta(Wa);if(e.onRuntimeInitialized)e.onRuntimeInitialized();e._main&&wd&&e.callMain(a);if(e.postRun)for("function"==typeof e.postRun&&(e.postRun=[e.postRun]);e.postRun.length;){var b=e.postRun.shift();Xa.unshift(b)}Ta(Xa)}}a=a||e.arguments;null===td&&(td=Date.now());if(e.preRun)for("function"==typeof e.preRun&&(e.preRun=[e.preRun]);e.preRun.length;)Za();Ta(Ua);e.calledRun||(e.setStatus?(e.setStatus("Running..."),setTimeout(function(){setTimeout(function(){e.setStatus("")},
1);b()},1)):b())}e.run=e.run=vd;function ud(a,b){if(!b||!e.noExitRuntime){if(!e.noExitRuntime&&(x=!0,m=void 0,Ta(I),e.onExit))e.onExit(a);da?(process.stdout.once("drain",function(){process.exit(a)}),console.log(" "),setTimeout(function(){process.exit(a)},500)):fa&&"function"===typeof quit&&quit(a);throw new ja(a);}}e.exit=e.exit=ud;var xd=[];
function y(a){void 0!==a?(e.print(a),e.X(a),a=JSON.stringify(a)):a="";x=!0;var b="abort("+a+") at "+Fa()+"\nIf this abort() is unexpected, build with -s ASSERTIONS=1 which can give more information.";xd&&xd.forEach(function(c){b=c(b,a)});throw b;}e.abort=e.abort=y;if(e.preInit)for("function"==typeof e.preInit&&(e.preInit=[e.preInit]);0<e.preInit.length;)e.preInit.pop()();var wd=!0;e.noInitialRun&&(wd=!1);vd();


  return Module;
};
  function Viz(src) {
    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];
    var format = options.format === undefined ? "svg" : options.format;
    var engine = options.engine === undefined ? "dot" : options.engine;
    var scale = options.scale;
  
    if (format == "png-image-element") {
      return Viz.svgXmlToPngImageElement(render(src, "svg", engine), scale);
    } else {
      return render(src, format, engine);
    }
  }
  
  function render(src, format, engine) {
    var graphviz = Module();
    
    var resultPointer = graphviz["ccall"]("vizRenderFromString", "number", ["string", "string", "string"], [src, format, engine]);
    var resultString = graphviz["Pointer_stringify"](resultPointer);

    var errorMessagePointer = graphviz["ccall"]("vizLastErrorMessage", "number", [], []);
    var errorMessageString = graphviz["Pointer_stringify"](errorMessagePointer);
    
    if (errorMessageString != "") {
      throw errorMessageString;
    }
    
    return resultString;
  }
  
  Viz.svgXmlToPngImageElement = function(svgXml, scale, callback) {
    if (scale === undefined) {
      if ("devicePixelRatio" in window && window.devicePixelRatio > 1) {
        scale = window.devicePixelRatio;
      } else {
        scale = 1;
      }
    }
    
    var pngImage = new Image();
    
    if (typeof fabric === "object" && fabric.loadSVGFromString) {
      try {
        fabric.loadSVGFromString(svgXml, function(objects, options) {
          // If there's something wrong with the SVG, Fabric may return an empty array of objects. Graphviz appears to give us at least one <g> element back even given an empty graph, so we will assume an error in this case.
          if (objects.length == 0) {
            if (callback !== undefined) {
              callback("Error loading SVG with Fabric");
              return;
            } else {
              throw "Error loading SVG with Fabric";
            }
          }
        
          var element = document.createElement("canvas");
          element.width = options.width;
          element.height = options.height;
      
          var canvas = new fabric.Canvas(element, { enableRetinaScaling: false });
          var obj = fabric.util.groupSVGElements(objects, options);
          canvas.add(obj).renderAll();
      
          pngImage.src = canvas.toDataURL({ multiplier: scale });
          pngImage.width = options.width;
          pngImage.height = options.height;
        
          if (callback !== undefined) {
            callback(null, pngImage);
          }
        });
      } catch (e) {
        if (callback !== undefined) {
          callback(e);
        } else {
          throw e;
        }
      }
    } else {
      var svgImage = new Image();

      svgImage.onload = function() {
        var canvas = document.createElement("canvas");
        canvas.width = svgImage.width * scale;
        canvas.height = svgImage.height * scale;

        var context = canvas.getContext("2d");
        context.drawImage(svgImage, 0, 0, canvas.width, canvas.height);

        pngImage.src = canvas.toDataURL("image/png");
        pngImage.width = svgImage.width;
        pngImage.height = svgImage.height;
        
        if (callback !== undefined) {
          callback(null, pngImage);
        }
      }
      
      svgImage.onerror = function(e) {
        if (callback !== undefined) {
          callback(e);
        }
      }
      
      svgImage.src = "data:image/svg+xml;base64," + btoa(svgXml);
    }
    
    if (callback === undefined) {
      return pngImage;
    }
  }
  
  Viz.svgXmlToPngBase64 = function(svgXml, scale, callback) {
    Viz.svgXmlToPngImageElement(svgXml, scale, function(err, image) {
      if (err) {
        callback(err);
      } else {
        callback(null, image.src.slice("data:image/png;base64,".length));
      }
    });
  }
  
  if (typeof module === "object" && module.exports) {
    module.exports = Viz;
  } else {
    global.Viz = Viz;
  }
  
})(this);

/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../../node_modules/process/browser.js */ "./node_modules/process/browser.js"), "/", __webpack_require__(/*! ./../../../node_modules/buffer/index.js */ "./node_modules/buffer/index.js").Buffer))

/***/ }),

/***/ "./src/js/polyfills/Array.flatMap.js":
/*!*******************************************!*\
  !*** ./src/js/polyfills/Array.flatMap.js ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

Object.defineProperties(Array.prototype, {
	'flatMap': {
		value: function(callback) {
			return Array.prototype.concat.apply([], this.map(callback));
		},
		writeable: false,
		enumerable: false
	}
});


/***/ }),

/***/ "./src/js/polyfills/Set.equals.js":
/*!****************************************!*\
  !*** ./src/js/polyfills/Set.equals.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

Object.defineProperties(Set.prototype, {
	'equals': {
		value: function (that) {
			if(this.size !== that.size)
				return false;
			for(let e of this)
				if (!that.has(e))
					return false;
			return true;
		},
		writeable: false,
		enumerable: false
	},
});


/***/ }),

/***/ "./src/scss/style.scss":
/*!*****************************!*\
  !*** ./src/scss/style.scss ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {


var content = __webpack_require__(/*! !../../node_modules/css-loader??ref--5-1!../../node_modules/sass-loader/lib/loader.js??ref--5-2!./style.scss */ "./node_modules/css-loader/index.js??ref--5-1!./node_modules/sass-loader/lib/loader.js??ref--5-2!./src/scss/style.scss");

if(typeof content === 'string') content = [[module.i, content, '']];

var transform;
var insertInto;



var options = {"hmr":true}

options.transform = transform
options.insertInto = undefined;

var update = __webpack_require__(/*! ../../node_modules/style-loader/lib/addStyles.js */ "./node_modules/style-loader/lib/addStyles.js")(content, options);

if(content.locals) module.exports = content.locals;

if(false) {}

/***/ }),

/***/ 0:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 1:
/*!**********************!*\
  !*** util (ignored) ***!
  \**********************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 2:
/*!************************!*\
  !*** buffer (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ }),

/***/ 3:
/*!************************!*\
  !*** crypto (ignored) ***!
  \************************/
/*! no static exports found */
/***/ (function(module, exports) {

/* (ignored) */

/***/ })

/******/ });
//# sourceMappingURL=bundle.js.map